<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespaceamrex__abec__module" kind="namespace" language="Fortran">
    <compoundname>amrex_abec_module</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex__abec__module_1a03aa8ad2d70b4091dfe487e8dafb4cf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_abec_module::amrex_abec_linesolve</definition>
        <argsstring>(phi, phi_l1, phi_h1, rhs, rhs_l1, rhs_h1, alpha, beta, a, a_l1, a_h1, bX, bX_l1, bX_h1, f0, f0_l1, f0_h1, m0, m0_l1, m0_h1, f2, f2_l1, f2_h1, m2, m2_l1, m2_h1, lo, hi, nc, h)</argsstring>
        <name>amrex_abec_linesolve</name>
        <param>
          <type>phi</type>
          <defname>phi</defname>
        </param>
        <param>
          <type>phi_l1</type>
          <defname>phi_l1</defname>
        </param>
        <param>
          <type>phi_h1</type>
          <defname>phi_h1</defname>
        </param>
        <param>
          <type>rhs</type>
          <defname>rhs</defname>
        </param>
        <param>
          <type>rhs_l1</type>
          <defname>rhs_l1</defname>
        </param>
        <param>
          <type>rhs_h1</type>
          <defname>rhs_h1</defname>
        </param>
        <param>
          <type>alpha</type>
          <defname>alpha</defname>
        </param>
        <param>
          <type>beta</type>
          <defname>beta</defname>
        </param>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <param>
          <type>a_l1</type>
          <defname>a_l1</defname>
        </param>
        <param>
          <type>a_h1</type>
          <defname>a_h1</defname>
        </param>
        <param>
          <type>bX</type>
          <defname>bX</defname>
        </param>
        <param>
          <type>bX_l1</type>
          <defname>bX_l1</defname>
        </param>
        <param>
          <type>bX_h1</type>
          <defname>bX_h1</defname>
        </param>
        <param>
          <type>f0</type>
          <defname>f0</defname>
        </param>
        <param>
          <type>f0_l1</type>
          <defname>f0_l1</defname>
        </param>
        <param>
          <type>f0_h1</type>
          <defname>f0_h1</defname>
        </param>
        <param>
          <type>m0</type>
          <defname>m0</defname>
        </param>
        <param>
          <type>m0_l1</type>
          <defname>m0_l1</defname>
        </param>
        <param>
          <type>m0_h1</type>
          <defname>m0_h1</defname>
        </param>
        <param>
          <type>f2</type>
          <defname>f2</defname>
        </param>
        <param>
          <type>f2_l1</type>
          <defname>f2_l1</defname>
        </param>
        <param>
          <type>f2_h1</type>
          <defname>f2_h1</defname>
        </param>
        <param>
          <type>m2</type>
          <defname>m2</defname>
        </param>
        <param>
          <type>m2_l1</type>
          <defname>m2_l1</defname>
        </param>
        <param>
          <type>m2_h1</type>
          <defname>m2_h1</defname>
        </param>
        <param>
          <type>lo</type>
          <defname>lo</defname>
        </param>
        <param>
          <type>hi</type>
          <defname>hi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <briefdescription>
<para>LINESOLVE Apply the line solve to the state phi for the equation <computeroutput>L(phi) = alpha*a(x)*phi(x) - beta*Div(b(x)Grad(phi(x))) = rhs(x)</computeroutput> central differenced, according to the arrays of boundary masks (m#) and auxiliary data (f#). </para>        </briefdescription>
        <detaileddescription>
<para>In general, if the linear operator<computeroutput>L=gamma*y-rho</computeroutput>, the GS relaxation is <computeroutput>y = (R - rho)/gamma</computeroutput>. Near a boundary, the ghost data is filled using a polynomial interpolant based on the &quot;old&quot; phi values, so <computeroutput>L=(gamma-delta)*y - rho + delta*yOld</computeroutput>. The resulting iteration is</para><para><computeroutput>y = (R - delta*yOld + rho)/(gamma - delta)</computeroutput></para><para>This expression is valid additionally in the interior provided delta-&gt;0 there. delta is constructed by summing all the contributions to the central stencil element coming from boundary interpolants. The f::s contain the corresponding coefficient of the interpolating polynomial. The masks are set &gt; 0 if the boundary value was filled with an interpolant involving the central stencil element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_1D.F90" line="35" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_1D.F90" bodystart="48" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__abec__module_1af414bd0958182619ee5d732b4c7f025f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_abec_module::amrex_abec_adotx</definition>
        <argsstring>(y, y_l1, y_h1, x, x_l1, x_h1, alpha, beta, a, a_l1, a_h1, bX, bX_l1, bX_h1, lo, hi, nc, h)</argsstring>
        <name>amrex_abec_adotx</name>
        <param>
          <type>y</type>
          <defname>y</defname>
        </param>
        <param>
          <type>y_l1</type>
          <defname>y_l1</defname>
        </param>
        <param>
          <type>y_h1</type>
          <defname>y_h1</defname>
        </param>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>x_l1</type>
          <defname>x_l1</defname>
        </param>
        <param>
          <type>x_h1</type>
          <defname>x_h1</defname>
        </param>
        <param>
          <type>alpha</type>
          <defname>alpha</defname>
        </param>
        <param>
          <type>beta</type>
          <defname>beta</defname>
        </param>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <param>
          <type>a_l1</type>
          <defname>a_l1</defname>
        </param>
        <param>
          <type>a_h1</type>
          <defname>a_h1</defname>
        </param>
        <param>
          <type>bX</type>
          <defname>bX</defname>
        </param>
        <param>
          <type>bX_l1</type>
          <defname>bX_l1</defname>
        </param>
        <param>
          <type>bX_h1</type>
          <defname>bX_h1</defname>
        </param>
        <param>
          <type>lo</type>
          <defname>lo</defname>
        </param>
        <param>
          <type>hi</type>
          <defname>hi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <briefdescription>
<para>Fill in a matrix x vector operator here. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_1D.F90" line="126" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_1D.F90" bodystart="135" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__abec__module_1a9c7ee1628800f73e1b951a7ab32381fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_abec_module::amrex_abec_norma</definition>
        <argsstring>(res, alpha, beta, a, a_l1, a_h1, bX, bX_l1, bX_h1, lo, hi, nc, h)</argsstring>
        <name>amrex_abec_norma</name>
        <param>
          <type>res</type>
          <defname>res</defname>
        </param>
        <param>
          <type>alpha</type>
          <defname>alpha</defname>
        </param>
        <param>
          <type>beta</type>
          <defname>beta</defname>
        </param>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <param>
          <type>a_l1</type>
          <defname>a_l1</defname>
        </param>
        <param>
          <type>a_h1</type>
          <defname>a_h1</defname>
        </param>
        <param>
          <type>bX</type>
          <defname>bX</defname>
        </param>
        <param>
          <type>bX_l1</type>
          <defname>bX_l1</defname>
        </param>
        <param>
          <type>bX_h1</type>
          <defname>bX_h1</defname>
        </param>
        <param>
          <type>lo</type>
          <defname>lo</defname>
        </param>
        <param>
          <type>hi</type>
          <defname>hi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <briefdescription>
<para>Fill in a matrix x vector operator here. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_1D.F90" line="168" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_1D.F90" bodystart="176" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__abec__module_1add5e3cd89e65bb4298f1d06de1c5c77f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_abec_module::amrex_abec_flux</definition>
        <argsstring>(x, x_l1, x_h1, alpha, beta, a, a_l1, a_h1, bX, bX_l1, bX_h1, xlo, xhi, nc, h, xflux, xflux_l1, xflux_h1)</argsstring>
        <name>amrex_abec_flux</name>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>x_l1</type>
          <defname>x_l1</defname>
        </param>
        <param>
          <type>x_h1</type>
          <defname>x_h1</defname>
        </param>
        <param>
          <type>alpha</type>
          <defname>alpha</defname>
        </param>
        <param>
          <type>beta</type>
          <defname>beta</defname>
        </param>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <param>
          <type>a_l1</type>
          <defname>a_l1</defname>
        </param>
        <param>
          <type>a_h1</type>
          <defname>a_h1</defname>
        </param>
        <param>
          <type>bX</type>
          <defname>bX</defname>
        </param>
        <param>
          <type>bX_l1</type>
          <defname>bX_l1</defname>
        </param>
        <param>
          <type>bX_h1</type>
          <defname>bX_h1</defname>
        </param>
        <param>
          <type>xlo</type>
          <defname>xlo</defname>
        </param>
        <param>
          <type>xhi</type>
          <defname>xhi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <param>
          <type>xflux</type>
          <defname>xflux</defname>
        </param>
        <param>
          <type>xflux_l1</type>
          <defname>xflux_l1</defname>
        </param>
        <param>
          <type>xflux_h1</type>
          <defname>xflux_h1</defname>
        </param>
        <briefdescription>
<para>Fill in fluxes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_1D.F90" line="207" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_1D.F90" bodystart="216" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__abec__module_1ad6a8482921a73e15d024fd3b6a7348c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_abec_module::amrex_abec_gsrb</definition>
        <argsstring>(phi, phi_l1, phi_l2, phi_h1, phi_h2, rhs, rhs_l1, rhs_l2, rhs_h1, rhs_h2, alpha, beta, a, a_l1, a_l2, a_h1, a_h2, bX, bX_l1, bX_l2, bX_h1, bX_h2, bY, bY_l1, bY_l2, bY_h1, bY_h2, f0, f0_l1, f0_l2, f0_h1, f0_h2, m0, m0_l1, m0_l2, m0_h1, m0_h2, f1, f1_l1, f1_l2, f1_h1, f1_h2, m1, m1_l1, m1_l2, m1_h1, m1_h2, f2, f2_l1, f2_l2, f2_h1, f2_h2, m2, m2_l1, m2_l2, m2_h1, m2_h2, f3, f3_l1, f3_l2, f3_h1, f3_h2, m3, m3_l1, m3_l2, m3_h1, m3_h2, lo, hi, blo, bhi, nc, h, redblack)</argsstring>
        <name>amrex_abec_gsrb</name>
        <param>
          <type>phi</type>
          <defname>phi</defname>
        </param>
        <param>
          <type>phi_l1</type>
          <defname>phi_l1</defname>
        </param>
        <param>
          <type>phi_l2</type>
          <defname>phi_l2</defname>
        </param>
        <param>
          <type>phi_h1</type>
          <defname>phi_h1</defname>
        </param>
        <param>
          <type>phi_h2</type>
          <defname>phi_h2</defname>
        </param>
        <param>
          <type>rhs</type>
          <defname>rhs</defname>
        </param>
        <param>
          <type>rhs_l1</type>
          <defname>rhs_l1</defname>
        </param>
        <param>
          <type>rhs_l2</type>
          <defname>rhs_l2</defname>
        </param>
        <param>
          <type>rhs_h1</type>
          <defname>rhs_h1</defname>
        </param>
        <param>
          <type>rhs_h2</type>
          <defname>rhs_h2</defname>
        </param>
        <param>
          <type>alpha</type>
          <defname>alpha</defname>
        </param>
        <param>
          <type>beta</type>
          <defname>beta</defname>
        </param>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <param>
          <type>a_l1</type>
          <defname>a_l1</defname>
        </param>
        <param>
          <type>a_l2</type>
          <defname>a_l2</defname>
        </param>
        <param>
          <type>a_h1</type>
          <defname>a_h1</defname>
        </param>
        <param>
          <type>a_h2</type>
          <defname>a_h2</defname>
        </param>
        <param>
          <type>bX</type>
          <defname>bX</defname>
        </param>
        <param>
          <type>bX_l1</type>
          <defname>bX_l1</defname>
        </param>
        <param>
          <type>bX_l2</type>
          <defname>bX_l2</defname>
        </param>
        <param>
          <type>bX_h1</type>
          <defname>bX_h1</defname>
        </param>
        <param>
          <type>bX_h2</type>
          <defname>bX_h2</defname>
        </param>
        <param>
          <type>bY</type>
          <defname>bY</defname>
        </param>
        <param>
          <type>bY_l1</type>
          <defname>bY_l1</defname>
        </param>
        <param>
          <type>bY_l2</type>
          <defname>bY_l2</defname>
        </param>
        <param>
          <type>bY_h1</type>
          <defname>bY_h1</defname>
        </param>
        <param>
          <type>bY_h2</type>
          <defname>bY_h2</defname>
        </param>
        <param>
          <type>f0</type>
          <defname>f0</defname>
        </param>
        <param>
          <type>f0_l1</type>
          <defname>f0_l1</defname>
        </param>
        <param>
          <type>f0_l2</type>
          <defname>f0_l2</defname>
        </param>
        <param>
          <type>f0_h1</type>
          <defname>f0_h1</defname>
        </param>
        <param>
          <type>f0_h2</type>
          <defname>f0_h2</defname>
        </param>
        <param>
          <type>m0</type>
          <defname>m0</defname>
        </param>
        <param>
          <type>m0_l1</type>
          <defname>m0_l1</defname>
        </param>
        <param>
          <type>m0_l2</type>
          <defname>m0_l2</defname>
        </param>
        <param>
          <type>m0_h1</type>
          <defname>m0_h1</defname>
        </param>
        <param>
          <type>m0_h2</type>
          <defname>m0_h2</defname>
        </param>
        <param>
          <type>f1</type>
          <defname>f1</defname>
        </param>
        <param>
          <type>f1_l1</type>
          <defname>f1_l1</defname>
        </param>
        <param>
          <type>f1_l2</type>
          <defname>f1_l2</defname>
        </param>
        <param>
          <type>f1_h1</type>
          <defname>f1_h1</defname>
        </param>
        <param>
          <type>f1_h2</type>
          <defname>f1_h2</defname>
        </param>
        <param>
          <type>m1</type>
          <defname>m1</defname>
        </param>
        <param>
          <type>m1_l1</type>
          <defname>m1_l1</defname>
        </param>
        <param>
          <type>m1_l2</type>
          <defname>m1_l2</defname>
        </param>
        <param>
          <type>m1_h1</type>
          <defname>m1_h1</defname>
        </param>
        <param>
          <type>m1_h2</type>
          <defname>m1_h2</defname>
        </param>
        <param>
          <type>f2</type>
          <defname>f2</defname>
        </param>
        <param>
          <type>f2_l1</type>
          <defname>f2_l1</defname>
        </param>
        <param>
          <type>f2_l2</type>
          <defname>f2_l2</defname>
        </param>
        <param>
          <type>f2_h1</type>
          <defname>f2_h1</defname>
        </param>
        <param>
          <type>f2_h2</type>
          <defname>f2_h2</defname>
        </param>
        <param>
          <type>m2</type>
          <defname>m2</defname>
        </param>
        <param>
          <type>m2_l1</type>
          <defname>m2_l1</defname>
        </param>
        <param>
          <type>m2_l2</type>
          <defname>m2_l2</defname>
        </param>
        <param>
          <type>m2_h1</type>
          <defname>m2_h1</defname>
        </param>
        <param>
          <type>m2_h2</type>
          <defname>m2_h2</defname>
        </param>
        <param>
          <type>f3</type>
          <defname>f3</defname>
        </param>
        <param>
          <type>f3_l1</type>
          <defname>f3_l1</defname>
        </param>
        <param>
          <type>f3_l2</type>
          <defname>f3_l2</defname>
        </param>
        <param>
          <type>f3_h1</type>
          <defname>f3_h1</defname>
        </param>
        <param>
          <type>f3_h2</type>
          <defname>f3_h2</defname>
        </param>
        <param>
          <type>m3</type>
          <defname>m3</defname>
        </param>
        <param>
          <type>m3_l1</type>
          <defname>m3_l1</defname>
        </param>
        <param>
          <type>m3_l2</type>
          <defname>m3_l2</defname>
        </param>
        <param>
          <type>m3_h1</type>
          <defname>m3_h1</defname>
        </param>
        <param>
          <type>m3_h2</type>
          <defname>m3_h2</defname>
        </param>
        <param>
          <type>lo</type>
          <defname>lo</defname>
        </param>
        <param>
          <type>hi</type>
          <defname>hi</defname>
        </param>
        <param>
          <type>blo</type>
          <defname>blo</defname>
        </param>
        <param>
          <type>bhi</type>
          <defname>bhi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <param>
          <type>redblack</type>
          <defname>redblack</defname>
        </param>
        <briefdescription>
<para>Gauss-Seidel Red-Black (GSRB): Apply the GSRB relaxation to the state phi for the equation <computeroutput>L(phi) = alpha*a(x)*phi(x) - beta*Div(b(x)Grad(phi(x))) = rhs(x)</computeroutput> central differenced, according to the arrays of boundary masks (m#) and auxiliary data (f#). </para>        </briefdescription>
        <detaileddescription>
<para>In general, if the linear operator <computeroutput>L=gamma*y-rho</computeroutput>, the GS relaxation is <computeroutput>y = (R - rho)/gamma</computeroutput>. Near a boundary, the ghost data is filled using a polynomial interpolant based on the &quot;old&quot; phi values, so <computeroutput>L=(gamma-delta)*y - rho + delta*yOld</computeroutput>. The resulting iteration is</para><para><computeroutput>y = (R - delta*yOld + rho)/(gamma - delta)</computeroutput></para><para>This expression is valid additionally in the interior provided delta-&gt;0 there. delta is constructed by summing all the contributions to the central stencil element coming from boundary interpolants. The f::s contain the corresponding coefficient of the interpolating polynomial. The masks are set &gt; 0 if the boundary value was filled with an interpolant involving the central stencil element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_2D.F90" line="36" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_2D.F90" bodystart="54" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__abec__module_1ace97edc02ed7f0652a794c61ba28d1f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_abec_module::amrex_abec_jacobi</definition>
        <argsstring>(phi, phi_l1, phi_l2, phi_h1, phi_h2, rhs, rhs_l1, rhs_l2, rhs_h1, rhs_h2, alpha, beta, a, a_l1, a_l2, a_h1, a_h2, bX, bX_l1, bX_l2, bX_h1, bX_h2, bY, bY_l1, bY_l2, bY_h1, bY_h2, f0, f0_l1, f0_l2, f0_h1, f0_h2, m0, m0_l1, m0_l2, m0_h1, m0_h2, f1, f1_l1, f1_l2, f1_h1, f1_h2, m1, m1_l1, m1_l2, m1_h1, m1_h2, f2, f2_l1, f2_l2, f2_h1, f2_h2, m2, m2_l1, m2_l2, m2_h1, m2_h2, f3, f3_l1, f3_l2, f3_h1, f3_h2, m3, m3_l1, m3_l2, m3_h1, m3_h2, lo, hi, nc, h)</argsstring>
        <name>amrex_abec_jacobi</name>
        <param>
          <type>phi</type>
          <defname>phi</defname>
        </param>
        <param>
          <type>phi_l1</type>
          <defname>phi_l1</defname>
        </param>
        <param>
          <type>phi_l2</type>
          <defname>phi_l2</defname>
        </param>
        <param>
          <type>phi_h1</type>
          <defname>phi_h1</defname>
        </param>
        <param>
          <type>phi_h2</type>
          <defname>phi_h2</defname>
        </param>
        <param>
          <type>rhs</type>
          <defname>rhs</defname>
        </param>
        <param>
          <type>rhs_l1</type>
          <defname>rhs_l1</defname>
        </param>
        <param>
          <type>rhs_l2</type>
          <defname>rhs_l2</defname>
        </param>
        <param>
          <type>rhs_h1</type>
          <defname>rhs_h1</defname>
        </param>
        <param>
          <type>rhs_h2</type>
          <defname>rhs_h2</defname>
        </param>
        <param>
          <type>alpha</type>
          <defname>alpha</defname>
        </param>
        <param>
          <type>beta</type>
          <defname>beta</defname>
        </param>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <param>
          <type>a_l1</type>
          <defname>a_l1</defname>
        </param>
        <param>
          <type>a_l2</type>
          <defname>a_l2</defname>
        </param>
        <param>
          <type>a_h1</type>
          <defname>a_h1</defname>
        </param>
        <param>
          <type>a_h2</type>
          <defname>a_h2</defname>
        </param>
        <param>
          <type>bX</type>
          <defname>bX</defname>
        </param>
        <param>
          <type>bX_l1</type>
          <defname>bX_l1</defname>
        </param>
        <param>
          <type>bX_l2</type>
          <defname>bX_l2</defname>
        </param>
        <param>
          <type>bX_h1</type>
          <defname>bX_h1</defname>
        </param>
        <param>
          <type>bX_h2</type>
          <defname>bX_h2</defname>
        </param>
        <param>
          <type>bY</type>
          <defname>bY</defname>
        </param>
        <param>
          <type>bY_l1</type>
          <defname>bY_l1</defname>
        </param>
        <param>
          <type>bY_l2</type>
          <defname>bY_l2</defname>
        </param>
        <param>
          <type>bY_h1</type>
          <defname>bY_h1</defname>
        </param>
        <param>
          <type>bY_h2</type>
          <defname>bY_h2</defname>
        </param>
        <param>
          <type>f0</type>
          <defname>f0</defname>
        </param>
        <param>
          <type>f0_l1</type>
          <defname>f0_l1</defname>
        </param>
        <param>
          <type>f0_l2</type>
          <defname>f0_l2</defname>
        </param>
        <param>
          <type>f0_h1</type>
          <defname>f0_h1</defname>
        </param>
        <param>
          <type>f0_h2</type>
          <defname>f0_h2</defname>
        </param>
        <param>
          <type>m0</type>
          <defname>m0</defname>
        </param>
        <param>
          <type>m0_l1</type>
          <defname>m0_l1</defname>
        </param>
        <param>
          <type>m0_l2</type>
          <defname>m0_l2</defname>
        </param>
        <param>
          <type>m0_h1</type>
          <defname>m0_h1</defname>
        </param>
        <param>
          <type>m0_h2</type>
          <defname>m0_h2</defname>
        </param>
        <param>
          <type>f1</type>
          <defname>f1</defname>
        </param>
        <param>
          <type>f1_l1</type>
          <defname>f1_l1</defname>
        </param>
        <param>
          <type>f1_l2</type>
          <defname>f1_l2</defname>
        </param>
        <param>
          <type>f1_h1</type>
          <defname>f1_h1</defname>
        </param>
        <param>
          <type>f1_h2</type>
          <defname>f1_h2</defname>
        </param>
        <param>
          <type>m1</type>
          <defname>m1</defname>
        </param>
        <param>
          <type>m1_l1</type>
          <defname>m1_l1</defname>
        </param>
        <param>
          <type>m1_l2</type>
          <defname>m1_l2</defname>
        </param>
        <param>
          <type>m1_h1</type>
          <defname>m1_h1</defname>
        </param>
        <param>
          <type>m1_h2</type>
          <defname>m1_h2</defname>
        </param>
        <param>
          <type>f2</type>
          <defname>f2</defname>
        </param>
        <param>
          <type>f2_l1</type>
          <defname>f2_l1</defname>
        </param>
        <param>
          <type>f2_l2</type>
          <defname>f2_l2</defname>
        </param>
        <param>
          <type>f2_h1</type>
          <defname>f2_h1</defname>
        </param>
        <param>
          <type>f2_h2</type>
          <defname>f2_h2</defname>
        </param>
        <param>
          <type>m2</type>
          <defname>m2</defname>
        </param>
        <param>
          <type>m2_l1</type>
          <defname>m2_l1</defname>
        </param>
        <param>
          <type>m2_l2</type>
          <defname>m2_l2</defname>
        </param>
        <param>
          <type>m2_h1</type>
          <defname>m2_h1</defname>
        </param>
        <param>
          <type>m2_h2</type>
          <defname>m2_h2</defname>
        </param>
        <param>
          <type>f3</type>
          <defname>f3</defname>
        </param>
        <param>
          <type>f3_l1</type>
          <defname>f3_l1</defname>
        </param>
        <param>
          <type>f3_l2</type>
          <defname>f3_l2</defname>
        </param>
        <param>
          <type>f3_h1</type>
          <defname>f3_h1</defname>
        </param>
        <param>
          <type>f3_h2</type>
          <defname>f3_h2</defname>
        </param>
        <param>
          <type>m3</type>
          <defname>m3</defname>
        </param>
        <param>
          <type>m3_l1</type>
          <defname>m3_l1</defname>
        </param>
        <param>
          <type>m3_l2</type>
          <defname>m3_l2</defname>
        </param>
        <param>
          <type>m3_h1</type>
          <defname>m3_h1</defname>
        </param>
        <param>
          <type>m3_h2</type>
          <defname>m3_h2</defname>
        </param>
        <param>
          <type>lo</type>
          <defname>lo</defname>
        </param>
        <param>
          <type>hi</type>
          <defname>hi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <briefdescription>
<para>JACOBI: Apply the JACOBI relaxation to the state phi for the equation <computeroutput>L(phi) = alpha*a(x)*phi(x) - beta*Div(b(x)Grad(phi(x))) = rhs(x)</computeroutput> central differenced, according to the arrays of boundary masks (m#) and auxiliary data (f#). </para>        </briefdescription>
        <detaileddescription>
<para>In general, if the linear operator <computeroutput>L=gamma*y-rho</computeroutput>, the GS relaxation is <computeroutput>y = (R - rho)/gamma</computeroutput>. Near a boundary, the ghost data is filled using a polynomial interpolant based on the &quot;old&quot; phi values, so <computeroutput>L=(gamma-delta)*y - rho + delta*yOld</computeroutput>. The resulting iteration is</para><para><computeroutput>y = (R - delta*yOld + rho)/(gamma - delta)</computeroutput></para><para>This expression is valid additionally in the interior provided delta-&gt;0 there. delta is constructed by summing all the contributions to the central stencil element coming from boundary interpolants. The f::s contain the corresponding coefficient of the interpolating polynomial. The masks are set &gt; 0 if the boundary value was filled with an interpolant involving the central stencil element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_2D.F90" line="281" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_2D.F90" bodystart="299" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__abec__module_1a10cef68d9000a98d044ced728ae3a85e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_abec_module::amrex_abec_adotx</definition>
        <argsstring>(y, y_l1, y_l2, y_h1, y_h2, x, x_l1, x_l2, x_h1, x_h2, alpha, beta, a, a_l1, a_l2, a_h1, a_h2, bX, bX_l1, bX_l2, bX_h1, bX_h2, bY, bY_l1, bY_l2, bY_h1, bY_h2, lo, hi, nc, h)</argsstring>
        <name>amrex_abec_adotx</name>
        <param>
          <type>y</type>
          <defname>y</defname>
        </param>
        <param>
          <type>y_l1</type>
          <defname>y_l1</defname>
        </param>
        <param>
          <type>y_l2</type>
          <defname>y_l2</defname>
        </param>
        <param>
          <type>y_h1</type>
          <defname>y_h1</defname>
        </param>
        <param>
          <type>y_h2</type>
          <defname>y_h2</defname>
        </param>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>x_l1</type>
          <defname>x_l1</defname>
        </param>
        <param>
          <type>x_l2</type>
          <defname>x_l2</defname>
        </param>
        <param>
          <type>x_h1</type>
          <defname>x_h1</defname>
        </param>
        <param>
          <type>x_h2</type>
          <defname>x_h2</defname>
        </param>
        <param>
          <type>alpha</type>
          <defname>alpha</defname>
        </param>
        <param>
          <type>beta</type>
          <defname>beta</defname>
        </param>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <param>
          <type>a_l1</type>
          <defname>a_l1</defname>
        </param>
        <param>
          <type>a_l2</type>
          <defname>a_l2</defname>
        </param>
        <param>
          <type>a_h1</type>
          <defname>a_h1</defname>
        </param>
        <param>
          <type>a_h2</type>
          <defname>a_h2</defname>
        </param>
        <param>
          <type>bX</type>
          <defname>bX</defname>
        </param>
        <param>
          <type>bX_l1</type>
          <defname>bX_l1</defname>
        </param>
        <param>
          <type>bX_l2</type>
          <defname>bX_l2</defname>
        </param>
        <param>
          <type>bX_h1</type>
          <defname>bX_h1</defname>
        </param>
        <param>
          <type>bX_h2</type>
          <defname>bX_h2</defname>
        </param>
        <param>
          <type>bY</type>
          <defname>bY</defname>
        </param>
        <param>
          <type>bY_l1</type>
          <defname>bY_l1</defname>
        </param>
        <param>
          <type>bY_l2</type>
          <defname>bY_l2</defname>
        </param>
        <param>
          <type>bY_h1</type>
          <defname>bY_h1</defname>
        </param>
        <param>
          <type>bY_h2</type>
          <defname>bY_h2</defname>
        </param>
        <param>
          <type>lo</type>
          <defname>lo</defname>
        </param>
        <param>
          <type>hi</type>
          <defname>hi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <briefdescription>
<para>Fill in a matrix x vector operator here. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_2D.F90" line="386" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_2D.F90" bodystart="396" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__abec__module_1a57752185e4b271f8a09d3888cf67097b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_abec_module::amrex_abec_norma</definition>
        <argsstring>(res, alpha, beta, a, a_l1, a_l2, a_h1, a_h2, bX, bX_l1, bX_l2, bX_h1, bX_h2, bY, bY_l1, bY_l2, bY_h1, bY_h2, lo, hi, nc, h)</argsstring>
        <name>amrex_abec_norma</name>
        <param>
          <type>res</type>
          <defname>res</defname>
        </param>
        <param>
          <type>alpha</type>
          <defname>alpha</defname>
        </param>
        <param>
          <type>beta</type>
          <defname>beta</defname>
        </param>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <param>
          <type>a_l1</type>
          <defname>a_l1</defname>
        </param>
        <param>
          <type>a_l2</type>
          <defname>a_l2</defname>
        </param>
        <param>
          <type>a_h1</type>
          <defname>a_h1</defname>
        </param>
        <param>
          <type>a_h2</type>
          <defname>a_h2</defname>
        </param>
        <param>
          <type>bX</type>
          <defname>bX</defname>
        </param>
        <param>
          <type>bX_l1</type>
          <defname>bX_l1</defname>
        </param>
        <param>
          <type>bX_l2</type>
          <defname>bX_l2</defname>
        </param>
        <param>
          <type>bX_h1</type>
          <defname>bX_h1</defname>
        </param>
        <param>
          <type>bX_h2</type>
          <defname>bX_h2</defname>
        </param>
        <param>
          <type>bY</type>
          <defname>bY</defname>
        </param>
        <param>
          <type>bY_l1</type>
          <defname>bY_l1</defname>
        </param>
        <param>
          <type>bY_l2</type>
          <defname>bY_l2</defname>
        </param>
        <param>
          <type>bY_h1</type>
          <defname>bY_h1</defname>
        </param>
        <param>
          <type>bY_h2</type>
          <defname>bY_h2</defname>
        </param>
        <param>
          <type>lo</type>
          <defname>lo</defname>
        </param>
        <param>
          <type>hi</type>
          <defname>hi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <briefdescription>
<para>Fill in a matrix x vector operator here. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_2D.F90" line="439" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_2D.F90" bodystart="448" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__abec__module_1ad2bd7e8527fc97b7b4673d43feb2d8f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_abec_module::amrex_abec_flux</definition>
        <argsstring>(x, x_l1, x_l2, x_h1, x_h2, alpha, beta, a, a_l1, a_l2, a_h1, a_h2, bX, bX_l1, bX_l2, bX_h1, bX_h2, bY, bY_l1, bY_l2, bY_h1, bY_h2, xlo, xhi, ylo, yhi, nc, h, xflux, xflux_l1, xflux_l2, xflux_h1, xflux_h2, yflux, yflux_l1, yflux_l2, yflux_h1, yflux_h2)</argsstring>
        <name>amrex_abec_flux</name>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>x_l1</type>
          <defname>x_l1</defname>
        </param>
        <param>
          <type>x_l2</type>
          <defname>x_l2</defname>
        </param>
        <param>
          <type>x_h1</type>
          <defname>x_h1</defname>
        </param>
        <param>
          <type>x_h2</type>
          <defname>x_h2</defname>
        </param>
        <param>
          <type>alpha</type>
          <defname>alpha</defname>
        </param>
        <param>
          <type>beta</type>
          <defname>beta</defname>
        </param>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <param>
          <type>a_l1</type>
          <defname>a_l1</defname>
        </param>
        <param>
          <type>a_l2</type>
          <defname>a_l2</defname>
        </param>
        <param>
          <type>a_h1</type>
          <defname>a_h1</defname>
        </param>
        <param>
          <type>a_h2</type>
          <defname>a_h2</defname>
        </param>
        <param>
          <type>bX</type>
          <defname>bX</defname>
        </param>
        <param>
          <type>bX_l1</type>
          <defname>bX_l1</defname>
        </param>
        <param>
          <type>bX_l2</type>
          <defname>bX_l2</defname>
        </param>
        <param>
          <type>bX_h1</type>
          <defname>bX_h1</defname>
        </param>
        <param>
          <type>bX_h2</type>
          <defname>bX_h2</defname>
        </param>
        <param>
          <type>bY</type>
          <defname>bY</defname>
        </param>
        <param>
          <type>bY_l1</type>
          <defname>bY_l1</defname>
        </param>
        <param>
          <type>bY_l2</type>
          <defname>bY_l2</defname>
        </param>
        <param>
          <type>bY_h1</type>
          <defname>bY_h1</defname>
        </param>
        <param>
          <type>bY_h2</type>
          <defname>bY_h2</defname>
        </param>
        <param>
          <type>xlo</type>
          <defname>xlo</defname>
        </param>
        <param>
          <type>xhi</type>
          <defname>xhi</defname>
        </param>
        <param>
          <type>ylo</type>
          <defname>ylo</defname>
        </param>
        <param>
          <type>yhi</type>
          <defname>yhi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <param>
          <type>xflux</type>
          <defname>xflux</defname>
        </param>
        <param>
          <type>xflux_l1</type>
          <defname>xflux_l1</defname>
        </param>
        <param>
          <type>xflux_l2</type>
          <defname>xflux_l2</defname>
        </param>
        <param>
          <type>xflux_h1</type>
          <defname>xflux_h1</defname>
        </param>
        <param>
          <type>xflux_h2</type>
          <defname>xflux_h2</defname>
        </param>
        <param>
          <type>yflux</type>
          <defname>yflux</defname>
        </param>
        <param>
          <type>yflux_l1</type>
          <defname>yflux_l1</defname>
        </param>
        <param>
          <type>yflux_l2</type>
          <defname>yflux_l2</defname>
        </param>
        <param>
          <type>yflux_h1</type>
          <defname>yflux_h1</defname>
        </param>
        <param>
          <type>yflux_h2</type>
          <defname>yflux_h2</defname>
        </param>
        <briefdescription>
<para>Fill in fluxes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_2D.F90" line="488" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_2D.F90" bodystart="501" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__abec__module_1ac03064e762dfef7cbf7d00d3e2feacae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_abec_module::amrex_abec_gsrb</definition>
        <argsstring>(phi, phi_l1, phi_l2, phi_l3, phi_h1, phi_h2, phi_h3, rhs, rhs_l1, rhs_l2, rhs_l3, rhs_h1, rhs_h2, rhs_h3, alpha, beta, a, a_l1, a_l2, a_l3, a_h1, a_h2, a_h3, bX, bX_l1, bX_l2, bX_l3, bX_h1, bX_h2, bX_h3, bY, bY_l1, bY_l2, bY_l3, bY_h1, bY_h2, bY_h3, bZ, bZ_l1, bZ_l2, bZ_l3, bZ_h1, bZ_h2, bZ_h3, f0, f0_l1, f0_l2, f0_l3, f0_h1, f0_h2, f0_h3, m0, m0_l1, m0_l2, m0_l3, m0_h1, m0_h2, m0_h3, f1, f1_l1, f1_l2, f1_l3, f1_h1, f1_h2, f1_h3, m1, m1_l1, m1_l2, m1_l3, m1_h1, m1_h2, m1_h3, f2, f2_l1, f2_l2, f2_l3, f2_h1, f2_h2, f2_h3, m2, m2_l1, m2_l2, m2_l3, m2_h1, m2_h2, m2_h3, f3, f3_l1, f3_l2, f3_l3, f3_h1, f3_h2, f3_h3, m3, m3_l1, m3_l2, m3_l3, m3_h1, m3_h2, m3_h3, f4, f4_l1, f4_l2, f4_l3, f4_h1, f4_h2, f4_h3, m4, m4_l1, m4_l2, m4_l3, m4_h1, m4_h2, m4_h3, f5, f5_l1, f5_l2, f5_l3, f5_h1, f5_h2, f5_h3, m5, m5_l1, m5_l2, m5_l3, m5_h1, m5_h2, m5_h3, lo, hi, blo, bhi, nc, h, redblack)</argsstring>
        <name>amrex_abec_gsrb</name>
        <param>
          <type>phi</type>
          <defname>phi</defname>
        </param>
        <param>
          <type>phi_l1</type>
          <defname>phi_l1</defname>
        </param>
        <param>
          <type>phi_l2</type>
          <defname>phi_l2</defname>
        </param>
        <param>
          <type>phi_l3</type>
          <defname>phi_l3</defname>
        </param>
        <param>
          <type>phi_h1</type>
          <defname>phi_h1</defname>
        </param>
        <param>
          <type>phi_h2</type>
          <defname>phi_h2</defname>
        </param>
        <param>
          <type>phi_h3</type>
          <defname>phi_h3</defname>
        </param>
        <param>
          <type>rhs</type>
          <defname>rhs</defname>
        </param>
        <param>
          <type>rhs_l1</type>
          <defname>rhs_l1</defname>
        </param>
        <param>
          <type>rhs_l2</type>
          <defname>rhs_l2</defname>
        </param>
        <param>
          <type>rhs_l3</type>
          <defname>rhs_l3</defname>
        </param>
        <param>
          <type>rhs_h1</type>
          <defname>rhs_h1</defname>
        </param>
        <param>
          <type>rhs_h2</type>
          <defname>rhs_h2</defname>
        </param>
        <param>
          <type>rhs_h3</type>
          <defname>rhs_h3</defname>
        </param>
        <param>
          <type>alpha</type>
          <defname>alpha</defname>
        </param>
        <param>
          <type>beta</type>
          <defname>beta</defname>
        </param>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <param>
          <type>a_l1</type>
          <defname>a_l1</defname>
        </param>
        <param>
          <type>a_l2</type>
          <defname>a_l2</defname>
        </param>
        <param>
          <type>a_l3</type>
          <defname>a_l3</defname>
        </param>
        <param>
          <type>a_h1</type>
          <defname>a_h1</defname>
        </param>
        <param>
          <type>a_h2</type>
          <defname>a_h2</defname>
        </param>
        <param>
          <type>a_h3</type>
          <defname>a_h3</defname>
        </param>
        <param>
          <type>bX</type>
          <defname>bX</defname>
        </param>
        <param>
          <type>bX_l1</type>
          <defname>bX_l1</defname>
        </param>
        <param>
          <type>bX_l2</type>
          <defname>bX_l2</defname>
        </param>
        <param>
          <type>bX_l3</type>
          <defname>bX_l3</defname>
        </param>
        <param>
          <type>bX_h1</type>
          <defname>bX_h1</defname>
        </param>
        <param>
          <type>bX_h2</type>
          <defname>bX_h2</defname>
        </param>
        <param>
          <type>bX_h3</type>
          <defname>bX_h3</defname>
        </param>
        <param>
          <type>bY</type>
          <defname>bY</defname>
        </param>
        <param>
          <type>bY_l1</type>
          <defname>bY_l1</defname>
        </param>
        <param>
          <type>bY_l2</type>
          <defname>bY_l2</defname>
        </param>
        <param>
          <type>bY_l3</type>
          <defname>bY_l3</defname>
        </param>
        <param>
          <type>bY_h1</type>
          <defname>bY_h1</defname>
        </param>
        <param>
          <type>bY_h2</type>
          <defname>bY_h2</defname>
        </param>
        <param>
          <type>bY_h3</type>
          <defname>bY_h3</defname>
        </param>
        <param>
          <type>bZ</type>
          <defname>bZ</defname>
        </param>
        <param>
          <type>bZ_l1</type>
          <defname>bZ_l1</defname>
        </param>
        <param>
          <type>bZ_l2</type>
          <defname>bZ_l2</defname>
        </param>
        <param>
          <type>bZ_l3</type>
          <defname>bZ_l3</defname>
        </param>
        <param>
          <type>bZ_h1</type>
          <defname>bZ_h1</defname>
        </param>
        <param>
          <type>bZ_h2</type>
          <defname>bZ_h2</defname>
        </param>
        <param>
          <type>bZ_h3</type>
          <defname>bZ_h3</defname>
        </param>
        <param>
          <type>f0</type>
          <defname>f0</defname>
        </param>
        <param>
          <type>f0_l1</type>
          <defname>f0_l1</defname>
        </param>
        <param>
          <type>f0_l2</type>
          <defname>f0_l2</defname>
        </param>
        <param>
          <type>f0_l3</type>
          <defname>f0_l3</defname>
        </param>
        <param>
          <type>f0_h1</type>
          <defname>f0_h1</defname>
        </param>
        <param>
          <type>f0_h2</type>
          <defname>f0_h2</defname>
        </param>
        <param>
          <type>f0_h3</type>
          <defname>f0_h3</defname>
        </param>
        <param>
          <type>m0</type>
          <defname>m0</defname>
        </param>
        <param>
          <type>m0_l1</type>
          <defname>m0_l1</defname>
        </param>
        <param>
          <type>m0_l2</type>
          <defname>m0_l2</defname>
        </param>
        <param>
          <type>m0_l3</type>
          <defname>m0_l3</defname>
        </param>
        <param>
          <type>m0_h1</type>
          <defname>m0_h1</defname>
        </param>
        <param>
          <type>m0_h2</type>
          <defname>m0_h2</defname>
        </param>
        <param>
          <type>m0_h3</type>
          <defname>m0_h3</defname>
        </param>
        <param>
          <type>f1</type>
          <defname>f1</defname>
        </param>
        <param>
          <type>f1_l1</type>
          <defname>f1_l1</defname>
        </param>
        <param>
          <type>f1_l2</type>
          <defname>f1_l2</defname>
        </param>
        <param>
          <type>f1_l3</type>
          <defname>f1_l3</defname>
        </param>
        <param>
          <type>f1_h1</type>
          <defname>f1_h1</defname>
        </param>
        <param>
          <type>f1_h2</type>
          <defname>f1_h2</defname>
        </param>
        <param>
          <type>f1_h3</type>
          <defname>f1_h3</defname>
        </param>
        <param>
          <type>m1</type>
          <defname>m1</defname>
        </param>
        <param>
          <type>m1_l1</type>
          <defname>m1_l1</defname>
        </param>
        <param>
          <type>m1_l2</type>
          <defname>m1_l2</defname>
        </param>
        <param>
          <type>m1_l3</type>
          <defname>m1_l3</defname>
        </param>
        <param>
          <type>m1_h1</type>
          <defname>m1_h1</defname>
        </param>
        <param>
          <type>m1_h2</type>
          <defname>m1_h2</defname>
        </param>
        <param>
          <type>m1_h3</type>
          <defname>m1_h3</defname>
        </param>
        <param>
          <type>f2</type>
          <defname>f2</defname>
        </param>
        <param>
          <type>f2_l1</type>
          <defname>f2_l1</defname>
        </param>
        <param>
          <type>f2_l2</type>
          <defname>f2_l2</defname>
        </param>
        <param>
          <type>f2_l3</type>
          <defname>f2_l3</defname>
        </param>
        <param>
          <type>f2_h1</type>
          <defname>f2_h1</defname>
        </param>
        <param>
          <type>f2_h2</type>
          <defname>f2_h2</defname>
        </param>
        <param>
          <type>f2_h3</type>
          <defname>f2_h3</defname>
        </param>
        <param>
          <type>m2</type>
          <defname>m2</defname>
        </param>
        <param>
          <type>m2_l1</type>
          <defname>m2_l1</defname>
        </param>
        <param>
          <type>m2_l2</type>
          <defname>m2_l2</defname>
        </param>
        <param>
          <type>m2_l3</type>
          <defname>m2_l3</defname>
        </param>
        <param>
          <type>m2_h1</type>
          <defname>m2_h1</defname>
        </param>
        <param>
          <type>m2_h2</type>
          <defname>m2_h2</defname>
        </param>
        <param>
          <type>m2_h3</type>
          <defname>m2_h3</defname>
        </param>
        <param>
          <type>f3</type>
          <defname>f3</defname>
        </param>
        <param>
          <type>f3_l1</type>
          <defname>f3_l1</defname>
        </param>
        <param>
          <type>f3_l2</type>
          <defname>f3_l2</defname>
        </param>
        <param>
          <type>f3_l3</type>
          <defname>f3_l3</defname>
        </param>
        <param>
          <type>f3_h1</type>
          <defname>f3_h1</defname>
        </param>
        <param>
          <type>f3_h2</type>
          <defname>f3_h2</defname>
        </param>
        <param>
          <type>f3_h3</type>
          <defname>f3_h3</defname>
        </param>
        <param>
          <type>m3</type>
          <defname>m3</defname>
        </param>
        <param>
          <type>m3_l1</type>
          <defname>m3_l1</defname>
        </param>
        <param>
          <type>m3_l2</type>
          <defname>m3_l2</defname>
        </param>
        <param>
          <type>m3_l3</type>
          <defname>m3_l3</defname>
        </param>
        <param>
          <type>m3_h1</type>
          <defname>m3_h1</defname>
        </param>
        <param>
          <type>m3_h2</type>
          <defname>m3_h2</defname>
        </param>
        <param>
          <type>m3_h3</type>
          <defname>m3_h3</defname>
        </param>
        <param>
          <type>f4</type>
          <defname>f4</defname>
        </param>
        <param>
          <type>f4_l1</type>
          <defname>f4_l1</defname>
        </param>
        <param>
          <type>f4_l2</type>
          <defname>f4_l2</defname>
        </param>
        <param>
          <type>f4_l3</type>
          <defname>f4_l3</defname>
        </param>
        <param>
          <type>f4_h1</type>
          <defname>f4_h1</defname>
        </param>
        <param>
          <type>f4_h2</type>
          <defname>f4_h2</defname>
        </param>
        <param>
          <type>f4_h3</type>
          <defname>f4_h3</defname>
        </param>
        <param>
          <type>m4</type>
          <defname>m4</defname>
        </param>
        <param>
          <type>m4_l1</type>
          <defname>m4_l1</defname>
        </param>
        <param>
          <type>m4_l2</type>
          <defname>m4_l2</defname>
        </param>
        <param>
          <type>m4_l3</type>
          <defname>m4_l3</defname>
        </param>
        <param>
          <type>m4_h1</type>
          <defname>m4_h1</defname>
        </param>
        <param>
          <type>m4_h2</type>
          <defname>m4_h2</defname>
        </param>
        <param>
          <type>m4_h3</type>
          <defname>m4_h3</defname>
        </param>
        <param>
          <type>f5</type>
          <defname>f5</defname>
        </param>
        <param>
          <type>f5_l1</type>
          <defname>f5_l1</defname>
        </param>
        <param>
          <type>f5_l2</type>
          <defname>f5_l2</defname>
        </param>
        <param>
          <type>f5_l3</type>
          <defname>f5_l3</defname>
        </param>
        <param>
          <type>f5_h1</type>
          <defname>f5_h1</defname>
        </param>
        <param>
          <type>f5_h2</type>
          <defname>f5_h2</defname>
        </param>
        <param>
          <type>f5_h3</type>
          <defname>f5_h3</defname>
        </param>
        <param>
          <type>m5</type>
          <defname>m5</defname>
        </param>
        <param>
          <type>m5_l1</type>
          <defname>m5_l1</defname>
        </param>
        <param>
          <type>m5_l2</type>
          <defname>m5_l2</defname>
        </param>
        <param>
          <type>m5_l3</type>
          <defname>m5_l3</defname>
        </param>
        <param>
          <type>m5_h1</type>
          <defname>m5_h1</defname>
        </param>
        <param>
          <type>m5_h2</type>
          <defname>m5_h2</defname>
        </param>
        <param>
          <type>m5_h3</type>
          <defname>m5_h3</defname>
        </param>
        <param>
          <type>lo</type>
          <defname>lo</defname>
        </param>
        <param>
          <type>hi</type>
          <defname>hi</defname>
        </param>
        <param>
          <type>blo</type>
          <defname>blo</defname>
        </param>
        <param>
          <type>bhi</type>
          <defname>bhi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <param>
          <type>redblack</type>
          <defname>redblack</defname>
        </param>
        <briefdescription>
<para>Gauss-Seidel Red-Black (GSRB): Apply the GSRB relaxation to the state phi for the equation <computeroutput>L(phi) = alpha*a(x)*phi(x) - beta*Div(b(x)Grad(phi(x))) = rhs(x)</computeroutput> central differenced, according to the arrays of boundary masks (m#) and auxiliary data (f#). </para>        </briefdescription>
        <detaileddescription>
<para>In general, if the linear operator <computeroutput>L=gamma*y-rho</computeroutput>, the GS relaxation is <computeroutput>y = (R - rho)/gamma</computeroutput>. Near a boundary, the ghost data is filled using a polynomial interpolant based on the &quot;old&quot; phi values, so <computeroutput>L=(gamma-delta)*y - rho + delta*yOld</computeroutput>. The resulting iteration is</para><para><computeroutput>y = (R - delta*yOld + rho)/(gamma - delta)</computeroutput></para><para>This expression is valid additionally in the interior provided delta-&gt;0 there. delta is constructed by summing all the contributions to the central stencil element coming from boundary interpolants. The f::s contain the corresponding coefficient of the interpolating polynomial. The masks are set &gt; 0 if the boundary value was filled with an interpolant involving the central stencil element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_3D.F90" line="35" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_3D.F90" bodystart="58" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__abec__module_1ae4cae14dcb26d3896edaf376dc19ddd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_abec_module::amrex_abec_jacobi</definition>
        <argsstring>(phi, phi_l1, phi_l2, phi_l3, phi_h1, phi_h2, phi_h3, rhs, rhs_l1, rhs_l2, rhs_l3, rhs_h1, rhs_h2, rhs_h3, alpha, beta, a, a_l1, a_l2, a_l3, a_h1, a_h2, a_h3, bX, bX_l1, bX_l2, bX_l3, bX_h1, bX_h2, bX_h3, bY, bY_l1, bY_l2, bY_l3, bY_h1, bY_h2, bY_h3, bZ, bZ_l1, bZ_l2, bZ_l3, bZ_h1, bZ_h2, bZ_h3, f0, f0_l1, f0_l2, f0_l3, f0_h1, f0_h2, f0_h3, m0, m0_l1, m0_l2, m0_l3, m0_h1, m0_h2, m0_h3, f1, f1_l1, f1_l2, f1_l3, f1_h1, f1_h2, f1_h3, m1, m1_l1, m1_l2, m1_l3, m1_h1, m1_h2, m1_h3, f2, f2_l1, f2_l2, f2_l3, f2_h1, f2_h2, f2_h3, m2, m2_l1, m2_l2, m2_l3, m2_h1, m2_h2, m2_h3, f3, f3_l1, f3_l2, f3_l3, f3_h1, f3_h2, f3_h3, m3, m3_l1, m3_l2, m3_l3, m3_h1, m3_h2, m3_h3, f4, f4_l1, f4_l2, f4_l3, f4_h1, f4_h2, f4_h3, m4, m4_l1, m4_l2, m4_l3, m4_h1, m4_h2, m4_h3, f5, f5_l1, f5_l2, f5_l3, f5_h1, f5_h2, f5_h3, m5, m5_l1, m5_l2, m5_l3, m5_h1, m5_h2, m5_h3, lo, hi, nc, h)</argsstring>
        <name>amrex_abec_jacobi</name>
        <param>
          <type>phi</type>
          <defname>phi</defname>
        </param>
        <param>
          <type>phi_l1</type>
          <defname>phi_l1</defname>
        </param>
        <param>
          <type>phi_l2</type>
          <defname>phi_l2</defname>
        </param>
        <param>
          <type>phi_l3</type>
          <defname>phi_l3</defname>
        </param>
        <param>
          <type>phi_h1</type>
          <defname>phi_h1</defname>
        </param>
        <param>
          <type>phi_h2</type>
          <defname>phi_h2</defname>
        </param>
        <param>
          <type>phi_h3</type>
          <defname>phi_h3</defname>
        </param>
        <param>
          <type>rhs</type>
          <defname>rhs</defname>
        </param>
        <param>
          <type>rhs_l1</type>
          <defname>rhs_l1</defname>
        </param>
        <param>
          <type>rhs_l2</type>
          <defname>rhs_l2</defname>
        </param>
        <param>
          <type>rhs_l3</type>
          <defname>rhs_l3</defname>
        </param>
        <param>
          <type>rhs_h1</type>
          <defname>rhs_h1</defname>
        </param>
        <param>
          <type>rhs_h2</type>
          <defname>rhs_h2</defname>
        </param>
        <param>
          <type>rhs_h3</type>
          <defname>rhs_h3</defname>
        </param>
        <param>
          <type>alpha</type>
          <defname>alpha</defname>
        </param>
        <param>
          <type>beta</type>
          <defname>beta</defname>
        </param>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <param>
          <type>a_l1</type>
          <defname>a_l1</defname>
        </param>
        <param>
          <type>a_l2</type>
          <defname>a_l2</defname>
        </param>
        <param>
          <type>a_l3</type>
          <defname>a_l3</defname>
        </param>
        <param>
          <type>a_h1</type>
          <defname>a_h1</defname>
        </param>
        <param>
          <type>a_h2</type>
          <defname>a_h2</defname>
        </param>
        <param>
          <type>a_h3</type>
          <defname>a_h3</defname>
        </param>
        <param>
          <type>bX</type>
          <defname>bX</defname>
        </param>
        <param>
          <type>bX_l1</type>
          <defname>bX_l1</defname>
        </param>
        <param>
          <type>bX_l2</type>
          <defname>bX_l2</defname>
        </param>
        <param>
          <type>bX_l3</type>
          <defname>bX_l3</defname>
        </param>
        <param>
          <type>bX_h1</type>
          <defname>bX_h1</defname>
        </param>
        <param>
          <type>bX_h2</type>
          <defname>bX_h2</defname>
        </param>
        <param>
          <type>bX_h3</type>
          <defname>bX_h3</defname>
        </param>
        <param>
          <type>bY</type>
          <defname>bY</defname>
        </param>
        <param>
          <type>bY_l1</type>
          <defname>bY_l1</defname>
        </param>
        <param>
          <type>bY_l2</type>
          <defname>bY_l2</defname>
        </param>
        <param>
          <type>bY_l3</type>
          <defname>bY_l3</defname>
        </param>
        <param>
          <type>bY_h1</type>
          <defname>bY_h1</defname>
        </param>
        <param>
          <type>bY_h2</type>
          <defname>bY_h2</defname>
        </param>
        <param>
          <type>bY_h3</type>
          <defname>bY_h3</defname>
        </param>
        <param>
          <type>bZ</type>
          <defname>bZ</defname>
        </param>
        <param>
          <type>bZ_l1</type>
          <defname>bZ_l1</defname>
        </param>
        <param>
          <type>bZ_l2</type>
          <defname>bZ_l2</defname>
        </param>
        <param>
          <type>bZ_l3</type>
          <defname>bZ_l3</defname>
        </param>
        <param>
          <type>bZ_h1</type>
          <defname>bZ_h1</defname>
        </param>
        <param>
          <type>bZ_h2</type>
          <defname>bZ_h2</defname>
        </param>
        <param>
          <type>bZ_h3</type>
          <defname>bZ_h3</defname>
        </param>
        <param>
          <type>f0</type>
          <defname>f0</defname>
        </param>
        <param>
          <type>f0_l1</type>
          <defname>f0_l1</defname>
        </param>
        <param>
          <type>f0_l2</type>
          <defname>f0_l2</defname>
        </param>
        <param>
          <type>f0_l3</type>
          <defname>f0_l3</defname>
        </param>
        <param>
          <type>f0_h1</type>
          <defname>f0_h1</defname>
        </param>
        <param>
          <type>f0_h2</type>
          <defname>f0_h2</defname>
        </param>
        <param>
          <type>f0_h3</type>
          <defname>f0_h3</defname>
        </param>
        <param>
          <type>m0</type>
          <defname>m0</defname>
        </param>
        <param>
          <type>m0_l1</type>
          <defname>m0_l1</defname>
        </param>
        <param>
          <type>m0_l2</type>
          <defname>m0_l2</defname>
        </param>
        <param>
          <type>m0_l3</type>
          <defname>m0_l3</defname>
        </param>
        <param>
          <type>m0_h1</type>
          <defname>m0_h1</defname>
        </param>
        <param>
          <type>m0_h2</type>
          <defname>m0_h2</defname>
        </param>
        <param>
          <type>m0_h3</type>
          <defname>m0_h3</defname>
        </param>
        <param>
          <type>f1</type>
          <defname>f1</defname>
        </param>
        <param>
          <type>f1_l1</type>
          <defname>f1_l1</defname>
        </param>
        <param>
          <type>f1_l2</type>
          <defname>f1_l2</defname>
        </param>
        <param>
          <type>f1_l3</type>
          <defname>f1_l3</defname>
        </param>
        <param>
          <type>f1_h1</type>
          <defname>f1_h1</defname>
        </param>
        <param>
          <type>f1_h2</type>
          <defname>f1_h2</defname>
        </param>
        <param>
          <type>f1_h3</type>
          <defname>f1_h3</defname>
        </param>
        <param>
          <type>m1</type>
          <defname>m1</defname>
        </param>
        <param>
          <type>m1_l1</type>
          <defname>m1_l1</defname>
        </param>
        <param>
          <type>m1_l2</type>
          <defname>m1_l2</defname>
        </param>
        <param>
          <type>m1_l3</type>
          <defname>m1_l3</defname>
        </param>
        <param>
          <type>m1_h1</type>
          <defname>m1_h1</defname>
        </param>
        <param>
          <type>m1_h2</type>
          <defname>m1_h2</defname>
        </param>
        <param>
          <type>m1_h3</type>
          <defname>m1_h3</defname>
        </param>
        <param>
          <type>f2</type>
          <defname>f2</defname>
        </param>
        <param>
          <type>f2_l1</type>
          <defname>f2_l1</defname>
        </param>
        <param>
          <type>f2_l2</type>
          <defname>f2_l2</defname>
        </param>
        <param>
          <type>f2_l3</type>
          <defname>f2_l3</defname>
        </param>
        <param>
          <type>f2_h1</type>
          <defname>f2_h1</defname>
        </param>
        <param>
          <type>f2_h2</type>
          <defname>f2_h2</defname>
        </param>
        <param>
          <type>f2_h3</type>
          <defname>f2_h3</defname>
        </param>
        <param>
          <type>m2</type>
          <defname>m2</defname>
        </param>
        <param>
          <type>m2_l1</type>
          <defname>m2_l1</defname>
        </param>
        <param>
          <type>m2_l2</type>
          <defname>m2_l2</defname>
        </param>
        <param>
          <type>m2_l3</type>
          <defname>m2_l3</defname>
        </param>
        <param>
          <type>m2_h1</type>
          <defname>m2_h1</defname>
        </param>
        <param>
          <type>m2_h2</type>
          <defname>m2_h2</defname>
        </param>
        <param>
          <type>m2_h3</type>
          <defname>m2_h3</defname>
        </param>
        <param>
          <type>f3</type>
          <defname>f3</defname>
        </param>
        <param>
          <type>f3_l1</type>
          <defname>f3_l1</defname>
        </param>
        <param>
          <type>f3_l2</type>
          <defname>f3_l2</defname>
        </param>
        <param>
          <type>f3_l3</type>
          <defname>f3_l3</defname>
        </param>
        <param>
          <type>f3_h1</type>
          <defname>f3_h1</defname>
        </param>
        <param>
          <type>f3_h2</type>
          <defname>f3_h2</defname>
        </param>
        <param>
          <type>f3_h3</type>
          <defname>f3_h3</defname>
        </param>
        <param>
          <type>m3</type>
          <defname>m3</defname>
        </param>
        <param>
          <type>m3_l1</type>
          <defname>m3_l1</defname>
        </param>
        <param>
          <type>m3_l2</type>
          <defname>m3_l2</defname>
        </param>
        <param>
          <type>m3_l3</type>
          <defname>m3_l3</defname>
        </param>
        <param>
          <type>m3_h1</type>
          <defname>m3_h1</defname>
        </param>
        <param>
          <type>m3_h2</type>
          <defname>m3_h2</defname>
        </param>
        <param>
          <type>m3_h3</type>
          <defname>m3_h3</defname>
        </param>
        <param>
          <type>f4</type>
          <defname>f4</defname>
        </param>
        <param>
          <type>f4_l1</type>
          <defname>f4_l1</defname>
        </param>
        <param>
          <type>f4_l2</type>
          <defname>f4_l2</defname>
        </param>
        <param>
          <type>f4_l3</type>
          <defname>f4_l3</defname>
        </param>
        <param>
          <type>f4_h1</type>
          <defname>f4_h1</defname>
        </param>
        <param>
          <type>f4_h2</type>
          <defname>f4_h2</defname>
        </param>
        <param>
          <type>f4_h3</type>
          <defname>f4_h3</defname>
        </param>
        <param>
          <type>m4</type>
          <defname>m4</defname>
        </param>
        <param>
          <type>m4_l1</type>
          <defname>m4_l1</defname>
        </param>
        <param>
          <type>m4_l2</type>
          <defname>m4_l2</defname>
        </param>
        <param>
          <type>m4_l3</type>
          <defname>m4_l3</defname>
        </param>
        <param>
          <type>m4_h1</type>
          <defname>m4_h1</defname>
        </param>
        <param>
          <type>m4_h2</type>
          <defname>m4_h2</defname>
        </param>
        <param>
          <type>m4_h3</type>
          <defname>m4_h3</defname>
        </param>
        <param>
          <type>f5</type>
          <defname>f5</defname>
        </param>
        <param>
          <type>f5_l1</type>
          <defname>f5_l1</defname>
        </param>
        <param>
          <type>f5_l2</type>
          <defname>f5_l2</defname>
        </param>
        <param>
          <type>f5_l3</type>
          <defname>f5_l3</defname>
        </param>
        <param>
          <type>f5_h1</type>
          <defname>f5_h1</defname>
        </param>
        <param>
          <type>f5_h2</type>
          <defname>f5_h2</defname>
        </param>
        <param>
          <type>f5_h3</type>
          <defname>f5_h3</defname>
        </param>
        <param>
          <type>m5</type>
          <defname>m5</defname>
        </param>
        <param>
          <type>m5_l1</type>
          <defname>m5_l1</defname>
        </param>
        <param>
          <type>m5_l2</type>
          <defname>m5_l2</defname>
        </param>
        <param>
          <type>m5_l3</type>
          <defname>m5_l3</defname>
        </param>
        <param>
          <type>m5_h1</type>
          <defname>m5_h1</defname>
        </param>
        <param>
          <type>m5_h2</type>
          <defname>m5_h2</defname>
        </param>
        <param>
          <type>m5_h3</type>
          <defname>m5_h3</defname>
        </param>
        <param>
          <type>lo</type>
          <defname>lo</defname>
        </param>
        <param>
          <type>hi</type>
          <defname>hi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <briefdescription>
<para>Jacobi: Apply the Jacobi relaxation to the state phi for the equation <computeroutput>L(phi) = alpha*a(x)*phi(x) - beta*Div(b(x)Grad(phi(x))) = rhs(x)</computeroutput> central differenced, according to the arrays of boundary masks (m#) and auxiliary data (f#). </para>        </briefdescription>
        <detaileddescription>
<para>In general, if the linear operator <computeroutput>L=gamma*y-rho</computeroutput>, the GS relaxation is <computeroutput>y = (R - rho)/gamma</computeroutput>. Near a boundary, the ghost data is filled using a polynomial interpolant based on the &quot;old&quot; phi values, so <computeroutput>L=(gamma-delta)*y - rho + delta*yOld</computeroutput>. The resulting iteration is</para><para><computeroutput>y = (R - delta*yOld + rho)/(gamma - delta)</computeroutput></para><para>This expression is valid additionally in the interior provided delta-&gt;0 there. delta is constructed by summing all the contributions to the central stencil element coming from boundary interpolants. The f::s contain the corresponding coefficient of the interpolating polynomial. The masks are set &gt; 0 if the boundary value was filled with an interpolant involving the central stencil element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_3D.F90" line="187" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_3D.F90" bodystart="210" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__abec__module_1a314b00250d00ead6e4740862681ae351" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_abec_module::amrex_abec_adotx</definition>
        <argsstring>(y, y_l1, y_l2, y_l3, y_h1, y_h2, y_h3, x, x_l1, x_l2, x_l3, x_h1, x_h2, x_h3, alpha, beta, a, a_l1, a_l2, a_l3, a_h1, a_h2, a_h3, bX, bX_l1, bX_l2, bX_l3, bX_h1, bX_h2, bX_h3, bY, bY_l1, bY_l2, bY_l3, bY_h1, bY_h2, bY_h3, bZ, bZ_l1, bZ_l2, bZ_l3, bZ_h1, bZ_h2, bZ_h3, lo, hi, nc, h)</argsstring>
        <name>amrex_abec_adotx</name>
        <param>
          <type>y</type>
          <defname>y</defname>
        </param>
        <param>
          <type>y_l1</type>
          <defname>y_l1</defname>
        </param>
        <param>
          <type>y_l2</type>
          <defname>y_l2</defname>
        </param>
        <param>
          <type>y_l3</type>
          <defname>y_l3</defname>
        </param>
        <param>
          <type>y_h1</type>
          <defname>y_h1</defname>
        </param>
        <param>
          <type>y_h2</type>
          <defname>y_h2</defname>
        </param>
        <param>
          <type>y_h3</type>
          <defname>y_h3</defname>
        </param>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>x_l1</type>
          <defname>x_l1</defname>
        </param>
        <param>
          <type>x_l2</type>
          <defname>x_l2</defname>
        </param>
        <param>
          <type>x_l3</type>
          <defname>x_l3</defname>
        </param>
        <param>
          <type>x_h1</type>
          <defname>x_h1</defname>
        </param>
        <param>
          <type>x_h2</type>
          <defname>x_h2</defname>
        </param>
        <param>
          <type>x_h3</type>
          <defname>x_h3</defname>
        </param>
        <param>
          <type>alpha</type>
          <defname>alpha</defname>
        </param>
        <param>
          <type>beta</type>
          <defname>beta</defname>
        </param>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <param>
          <type>a_l1</type>
          <defname>a_l1</defname>
        </param>
        <param>
          <type>a_l2</type>
          <defname>a_l2</defname>
        </param>
        <param>
          <type>a_l3</type>
          <defname>a_l3</defname>
        </param>
        <param>
          <type>a_h1</type>
          <defname>a_h1</defname>
        </param>
        <param>
          <type>a_h2</type>
          <defname>a_h2</defname>
        </param>
        <param>
          <type>a_h3</type>
          <defname>a_h3</defname>
        </param>
        <param>
          <type>bX</type>
          <defname>bX</defname>
        </param>
        <param>
          <type>bX_l1</type>
          <defname>bX_l1</defname>
        </param>
        <param>
          <type>bX_l2</type>
          <defname>bX_l2</defname>
        </param>
        <param>
          <type>bX_l3</type>
          <defname>bX_l3</defname>
        </param>
        <param>
          <type>bX_h1</type>
          <defname>bX_h1</defname>
        </param>
        <param>
          <type>bX_h2</type>
          <defname>bX_h2</defname>
        </param>
        <param>
          <type>bX_h3</type>
          <defname>bX_h3</defname>
        </param>
        <param>
          <type>bY</type>
          <defname>bY</defname>
        </param>
        <param>
          <type>bY_l1</type>
          <defname>bY_l1</defname>
        </param>
        <param>
          <type>bY_l2</type>
          <defname>bY_l2</defname>
        </param>
        <param>
          <type>bY_l3</type>
          <defname>bY_l3</defname>
        </param>
        <param>
          <type>bY_h1</type>
          <defname>bY_h1</defname>
        </param>
        <param>
          <type>bY_h2</type>
          <defname>bY_h2</defname>
        </param>
        <param>
          <type>bY_h3</type>
          <defname>bY_h3</defname>
        </param>
        <param>
          <type>bZ</type>
          <defname>bZ</defname>
        </param>
        <param>
          <type>bZ_l1</type>
          <defname>bZ_l1</defname>
        </param>
        <param>
          <type>bZ_l2</type>
          <defname>bZ_l2</defname>
        </param>
        <param>
          <type>bZ_l3</type>
          <defname>bZ_l3</defname>
        </param>
        <param>
          <type>bZ_h1</type>
          <defname>bZ_h1</defname>
        </param>
        <param>
          <type>bZ_h2</type>
          <defname>bZ_h2</defname>
        </param>
        <param>
          <type>bZ_h3</type>
          <defname>bZ_h3</defname>
        </param>
        <param>
          <type>lo</type>
          <defname>lo</defname>
        </param>
        <param>
          <type>hi</type>
          <defname>hi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <briefdescription>
<para>Fill in a matrix x vector operator here. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_3D.F90" line="321" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_3D.F90" bodystart="332" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__abec__module_1a0a1eb9e0d8631fbbd7efb7e077a69a35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_abec_module::amrex_abec_norma</definition>
        <argsstring>(res, alpha, beta, a, a_l1, a_l2, a_l3, a_h1, a_h2, a_h3, bX, bX_l1, bX_l2, bX_l3, bX_h1, bX_h2, bX_h3, bY, bY_l1, bY_l2, bY_l3, bY_h1, bY_h2, bY_h3, bZ, bZ_l1, bZ_l2, bZ_l3, bZ_h1, bZ_h2, bZ_h3, lo, hi, nc, h)</argsstring>
        <name>amrex_abec_norma</name>
        <param>
          <type>res</type>
          <defname>res</defname>
        </param>
        <param>
          <type>alpha</type>
          <defname>alpha</defname>
        </param>
        <param>
          <type>beta</type>
          <defname>beta</defname>
        </param>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <param>
          <type>a_l1</type>
          <defname>a_l1</defname>
        </param>
        <param>
          <type>a_l2</type>
          <defname>a_l2</defname>
        </param>
        <param>
          <type>a_l3</type>
          <defname>a_l3</defname>
        </param>
        <param>
          <type>a_h1</type>
          <defname>a_h1</defname>
        </param>
        <param>
          <type>a_h2</type>
          <defname>a_h2</defname>
        </param>
        <param>
          <type>a_h3</type>
          <defname>a_h3</defname>
        </param>
        <param>
          <type>bX</type>
          <defname>bX</defname>
        </param>
        <param>
          <type>bX_l1</type>
          <defname>bX_l1</defname>
        </param>
        <param>
          <type>bX_l2</type>
          <defname>bX_l2</defname>
        </param>
        <param>
          <type>bX_l3</type>
          <defname>bX_l3</defname>
        </param>
        <param>
          <type>bX_h1</type>
          <defname>bX_h1</defname>
        </param>
        <param>
          <type>bX_h2</type>
          <defname>bX_h2</defname>
        </param>
        <param>
          <type>bX_h3</type>
          <defname>bX_h3</defname>
        </param>
        <param>
          <type>bY</type>
          <defname>bY</defname>
        </param>
        <param>
          <type>bY_l1</type>
          <defname>bY_l1</defname>
        </param>
        <param>
          <type>bY_l2</type>
          <defname>bY_l2</defname>
        </param>
        <param>
          <type>bY_l3</type>
          <defname>bY_l3</defname>
        </param>
        <param>
          <type>bY_h1</type>
          <defname>bY_h1</defname>
        </param>
        <param>
          <type>bY_h2</type>
          <defname>bY_h2</defname>
        </param>
        <param>
          <type>bY_h3</type>
          <defname>bY_h3</defname>
        </param>
        <param>
          <type>bZ</type>
          <defname>bZ</defname>
        </param>
        <param>
          <type>bZ_l1</type>
          <defname>bZ_l1</defname>
        </param>
        <param>
          <type>bZ_l2</type>
          <defname>bZ_l2</defname>
        </param>
        <param>
          <type>bZ_l3</type>
          <defname>bZ_l3</defname>
        </param>
        <param>
          <type>bZ_h1</type>
          <defname>bZ_h1</defname>
        </param>
        <param>
          <type>bZ_h2</type>
          <defname>bZ_h2</defname>
        </param>
        <param>
          <type>bZ_h3</type>
          <defname>bZ_h3</defname>
        </param>
        <param>
          <type>lo</type>
          <defname>lo</defname>
        </param>
        <param>
          <type>hi</type>
          <defname>hi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <briefdescription>
<para>Fill in a matrix x vector operator here. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_3D.F90" line="383" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_3D.F90" bodystart="393" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__abec__module_1ad7923a733fef648358c2b1d4f28a75ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_abec_module::amrex_abec_flux</definition>
        <argsstring>(x, x_l1, x_l2, x_l3, x_h1, x_h2, x_h3, alpha, beta, a, a_l1, a_l2, a_l3, a_h1, a_h2, a_h3, bX, bX_l1, bX_l2, bX_l3, bX_h1, bX_h2, bX_h3, bY, bY_l1, bY_l2, bY_l3, bY_h1, bY_h2, bY_h3, bZ, bZ_l1, bZ_l2, bZ_l3, bZ_h1, bZ_h2, bZ_h3, xlo, xhi, ylo, yhi, zlo, zhi, nc, h, xflux, xflux_l1, xflux_l2, xflux_l3, xflux_h1, xflux_h2, xflux_h3, yflux, yflux_l1, yflux_l2, yflux_l3, yflux_h1, yflux_h2, yflux_h3, zflux, zflux_l1, zflux_l2, zflux_l3, zflux_h1, zflux_h2, zflux_h3)</argsstring>
        <name>amrex_abec_flux</name>
        <param>
          <type>x</type>
          <defname>x</defname>
        </param>
        <param>
          <type>x_l1</type>
          <defname>x_l1</defname>
        </param>
        <param>
          <type>x_l2</type>
          <defname>x_l2</defname>
        </param>
        <param>
          <type>x_l3</type>
          <defname>x_l3</defname>
        </param>
        <param>
          <type>x_h1</type>
          <defname>x_h1</defname>
        </param>
        <param>
          <type>x_h2</type>
          <defname>x_h2</defname>
        </param>
        <param>
          <type>x_h3</type>
          <defname>x_h3</defname>
        </param>
        <param>
          <type>alpha</type>
          <defname>alpha</defname>
        </param>
        <param>
          <type>beta</type>
          <defname>beta</defname>
        </param>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <param>
          <type>a_l1</type>
          <defname>a_l1</defname>
        </param>
        <param>
          <type>a_l2</type>
          <defname>a_l2</defname>
        </param>
        <param>
          <type>a_l3</type>
          <defname>a_l3</defname>
        </param>
        <param>
          <type>a_h1</type>
          <defname>a_h1</defname>
        </param>
        <param>
          <type>a_h2</type>
          <defname>a_h2</defname>
        </param>
        <param>
          <type>a_h3</type>
          <defname>a_h3</defname>
        </param>
        <param>
          <type>bX</type>
          <defname>bX</defname>
        </param>
        <param>
          <type>bX_l1</type>
          <defname>bX_l1</defname>
        </param>
        <param>
          <type>bX_l2</type>
          <defname>bX_l2</defname>
        </param>
        <param>
          <type>bX_l3</type>
          <defname>bX_l3</defname>
        </param>
        <param>
          <type>bX_h1</type>
          <defname>bX_h1</defname>
        </param>
        <param>
          <type>bX_h2</type>
          <defname>bX_h2</defname>
        </param>
        <param>
          <type>bX_h3</type>
          <defname>bX_h3</defname>
        </param>
        <param>
          <type>bY</type>
          <defname>bY</defname>
        </param>
        <param>
          <type>bY_l1</type>
          <defname>bY_l1</defname>
        </param>
        <param>
          <type>bY_l2</type>
          <defname>bY_l2</defname>
        </param>
        <param>
          <type>bY_l3</type>
          <defname>bY_l3</defname>
        </param>
        <param>
          <type>bY_h1</type>
          <defname>bY_h1</defname>
        </param>
        <param>
          <type>bY_h2</type>
          <defname>bY_h2</defname>
        </param>
        <param>
          <type>bY_h3</type>
          <defname>bY_h3</defname>
        </param>
        <param>
          <type>bZ</type>
          <defname>bZ</defname>
        </param>
        <param>
          <type>bZ_l1</type>
          <defname>bZ_l1</defname>
        </param>
        <param>
          <type>bZ_l2</type>
          <defname>bZ_l2</defname>
        </param>
        <param>
          <type>bZ_l3</type>
          <defname>bZ_l3</defname>
        </param>
        <param>
          <type>bZ_h1</type>
          <defname>bZ_h1</defname>
        </param>
        <param>
          <type>bZ_h2</type>
          <defname>bZ_h2</defname>
        </param>
        <param>
          <type>bZ_h3</type>
          <defname>bZ_h3</defname>
        </param>
        <param>
          <type>xlo</type>
          <defname>xlo</defname>
        </param>
        <param>
          <type>xhi</type>
          <defname>xhi</defname>
        </param>
        <param>
          <type>ylo</type>
          <defname>ylo</defname>
        </param>
        <param>
          <type>yhi</type>
          <defname>yhi</defname>
        </param>
        <param>
          <type>zlo</type>
          <defname>zlo</defname>
        </param>
        <param>
          <type>zhi</type>
          <defname>zhi</defname>
        </param>
        <param>
          <type>nc</type>
          <defname>nc</defname>
        </param>
        <param>
          <type>h</type>
          <defname>h</defname>
        </param>
        <param>
          <type>xflux</type>
          <defname>xflux</defname>
        </param>
        <param>
          <type>xflux_l1</type>
          <defname>xflux_l1</defname>
        </param>
        <param>
          <type>xflux_l2</type>
          <defname>xflux_l2</defname>
        </param>
        <param>
          <type>xflux_l3</type>
          <defname>xflux_l3</defname>
        </param>
        <param>
          <type>xflux_h1</type>
          <defname>xflux_h1</defname>
        </param>
        <param>
          <type>xflux_h2</type>
          <defname>xflux_h2</defname>
        </param>
        <param>
          <type>xflux_h3</type>
          <defname>xflux_h3</defname>
        </param>
        <param>
          <type>yflux</type>
          <defname>yflux</defname>
        </param>
        <param>
          <type>yflux_l1</type>
          <defname>yflux_l1</defname>
        </param>
        <param>
          <type>yflux_l2</type>
          <defname>yflux_l2</defname>
        </param>
        <param>
          <type>yflux_l3</type>
          <defname>yflux_l3</defname>
        </param>
        <param>
          <type>yflux_h1</type>
          <defname>yflux_h1</defname>
        </param>
        <param>
          <type>yflux_h2</type>
          <defname>yflux_h2</defname>
        </param>
        <param>
          <type>yflux_h3</type>
          <defname>yflux_h3</defname>
        </param>
        <param>
          <type>zflux</type>
          <defname>zflux</defname>
        </param>
        <param>
          <type>zflux_l1</type>
          <defname>zflux_l1</defname>
        </param>
        <param>
          <type>zflux_l2</type>
          <defname>zflux_l2</defname>
        </param>
        <param>
          <type>zflux_l3</type>
          <defname>zflux_l3</defname>
        </param>
        <param>
          <type>zflux_h1</type>
          <defname>zflux_h1</defname>
        </param>
        <param>
          <type>zflux_h2</type>
          <defname>zflux_h2</defname>
        </param>
        <param>
          <type>zflux_h3</type>
          <defname>zflux_h3</defname>
        </param>
        <briefdescription>
<para>Fill in fluxes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_3D.F90" line="439" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_3D.F90" bodystart="455" bodyend="513"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABec_1D.F90" line="2" column="1"/>
  </compounddef>
</doxygen>
