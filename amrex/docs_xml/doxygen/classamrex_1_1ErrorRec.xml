<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1ErrorRec" kind="class" language="C++" prot="public">
    <compoundname>amrex::ErrorRec</compoundname>
    <includes refid="AMReX__ErrorList_8H" local="no">AMReX_ErrorList.H</includes>
    <innerclass refid="classamrex_1_1ErrorRec_1_1ErrorFunc" prot="public">amrex::ErrorRec::ErrorFunc</innerclass>
    <innerclass refid="classamrex_1_1ErrorRec_1_1ErrorFunc2" prot="public">amrex::ErrorRec::ErrorFunc2</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classamrex_1_1ErrorRec_1adeca3cab9dffebf73c48525e5f94872d" prot="public" static="no">
        <name>ErrorType</name>
        <enumvalue id="classamrex_1_1ErrorRec_1adeca3cab9dffebf73c48525e5f94872dab844c3099506080d12c1145ccdafa585" prot="public">
          <name>Special</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classamrex_1_1ErrorRec_1adeca3cab9dffebf73c48525e5f94872dabd4b8573edb15206522a41ee3a5db143" prot="public">
          <name>Standard</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classamrex_1_1ErrorRec_1adeca3cab9dffebf73c48525e5f94872da7907e45520d436a47eb139e8c055c203" prot="public">
          <name>UseAverage</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="112" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="112" bodyend="112"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1ErrorRec_1ab6d9228aa813bc973c657510edc9b365" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string amrex::ErrorRec::derive_name</definition>
        <argsstring></argsstring>
        <name>derive_name</name>
        <briefdescription>
<para>Name of quantity to derive. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="320" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1ErrorRec_1a07e4582c7d12d9c0af8972fcbf214b89" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ErrorRec::ngrow</definition>
        <argsstring></argsstring>
        <name>ngrow</name>
        <briefdescription>
<para>Number of extra zones. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="323" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1ErrorRec_1abc0afb5043187b59f1a7219c50a62cec" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1ErrorRec_1adeca3cab9dffebf73c48525e5f94872d" kindref="member">ErrorType</ref></type>
        <definition>ErrorType amrex::ErrorRec::err_type</definition>
        <argsstring></argsstring>
        <name>err_type</name>
        <briefdescription>
<para>The type of Error. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="326" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1ErrorRec_1accb4208e8504753dcddef021c9250e88" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1ErrorRec_1_1ErrorFunc" kindref="compound">ErrorFunc</ref> *</type>
        <definition>ErrorFunc* amrex::ErrorRec::err_func</definition>
        <argsstring></argsstring>
        <name>err_func</name>
        <briefdescription>
<para>Functions to do error estimation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="329" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1ErrorRec_1ad72e6621e0e65cba0d636c244ac5d53b" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1ErrorRec_1_1ErrorFunc2" kindref="compound">ErrorFunc2</ref> *</type>
        <definition>ErrorFunc2* amrex::ErrorRec::err_func2</definition>
        <argsstring></argsstring>
        <name>err_func2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="330" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="330" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1ErrorRec_1a23c1a082f625f261a869fca2fbcbd16b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ErrorRec::ErrorRec</definition>
        <argsstring>(const std::string &amp;nm, int ng, ErrorType etyp, const ErrorRec::ErrorFunc2 &amp;f2)</argsstring>
        <name>ErrorRec</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>nm</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ng</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1ErrorRec_1adeca3cab9dffebf73c48525e5f94872d" kindref="member">ErrorType</ref></type>
          <declname>etyp</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1ErrorRec_1_1ErrorFunc2" kindref="compound">ErrorRec::ErrorFunc2</ref> &amp;</type>
          <declname>f2</declname>
        </param>
        <briefdescription>
<para>The constructors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nm</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ng</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>etyp</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f2</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="285" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.cpp" bodystart="111" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ErrorRec_1a103642c3a3fe6d0f549a70ca1379bc10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ErrorRec::ErrorRec</definition>
        <argsstring>(const std::string &amp;nm, int ng, ErrorType etyp, const ErrorRec::ErrorFunc &amp;f)</argsstring>
        <name>ErrorRec</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>nm</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ng</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1ErrorRec_1adeca3cab9dffebf73c48525e5f94872d" kindref="member">ErrorType</ref></type>
          <declname>etyp</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1ErrorRec_1_1ErrorFunc" kindref="compound">ErrorRec::ErrorFunc</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="290" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.cpp" bodystart="123" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ErrorRec_1ab855c1bad2c1c0ceb3dc3eddcbaba9c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>amrex::ErrorRec::~ErrorRec</definition>
        <argsstring>()</argsstring>
        <name>~ErrorRec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="294" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.cpp" bodystart="165" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ErrorRec_1a9fcabb5a67a004d3001fa8987ef6c1d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; amrex::ErrorRec::name</definition>
        <argsstring>() const noexcept</argsstring>
        <name>name</name>
        <briefdescription>
<para>The name of the quantity to derive. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="299" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.cpp" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ErrorRec_1a4caa93d2bc0ad73faf33ca05ae0b5933" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ErrorRec::nGrow</definition>
        <argsstring>() const noexcept</argsstring>
        <name>nGrow</name>
        <briefdescription>
<para>The number of extra zones needed for derivation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="304" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.cpp" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ErrorRec_1ac34eccb332331b40360aeba63b73bbfa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1ErrorRec_1adeca3cab9dffebf73c48525e5f94872d" kindref="member">ErrorType</ref></type>
        <definition>ErrorRec::ErrorType amrex::ErrorRec::errType</definition>
        <argsstring>() const noexcept</argsstring>
        <name>errType</name>
        <briefdescription>
<para>The type of the error tagging. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="309" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.cpp" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ErrorRec_1a71511c07ba07eb68b24293472bbceb24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classamrex_1_1ErrorRec_1_1ErrorFunc" kindref="compound">ErrorRec::ErrorFunc</ref> &amp;</type>
        <definition>const ErrorRec::ErrorFunc &amp; amrex::ErrorRec::errFunc</definition>
        <argsstring>() const</argsstring>
        <name>errFunc</name>
        <briefdescription>
<para>The extern &quot;C&quot; functions to do the error tagging. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="314" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.cpp" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ErrorRec_1a699129622e8dca590420730ce595e291" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="classamrex_1_1ErrorRec_1_1ErrorFunc2" kindref="compound">ErrorRec::ErrorFunc2</ref> &amp;</type>
        <definition>const ErrorRec::ErrorFunc2 &amp; amrex::ErrorRec::errFunc2</definition>
        <argsstring>() const</argsstring>
        <name>errFunc2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="315" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.cpp" bodystart="160" bodyend="163"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Error Record. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="classamrex_1_1ErrorRec" kindref="compound">ErrorRec</ref> is designed to tag cells for regridding based on the state data contained in <ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref> and its derivatives. It is conceivable that actual error tagging will be through derivation, so provision is made for this as well. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="1230">
        <label>string</label>
      </node>
      <node id="1229">
        <label>amrex::ErrorRec::ErrorFunc</label>
        <link refid="classamrex_1_1ErrorRec_1_1ErrorFunc"/>
      </node>
      <node id="1227">
        <label>amrex::ErrorRec</label>
        <link refid="classamrex_1_1ErrorRec"/>
        <childnode refid="1228" relation="usage">
          <edgelabel>err_func2</edgelabel>
        </childnode>
        <childnode refid="1229" relation="usage">
          <edgelabel>err_func</edgelabel>
        </childnode>
        <childnode refid="1230" relation="usage">
          <edgelabel>derive_name</edgelabel>
        </childnode>
      </node>
      <node id="1228">
        <label>amrex::ErrorRec::ErrorFunc2</label>
        <link refid="classamrex_1_1ErrorRec_1_1ErrorFunc2"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" line="107" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H" bodystart="106" bodyend="331"/>
    <listofallmembers>
      <member refid="classamrex_1_1ErrorRec_1ab6d9228aa813bc973c657510edc9b365" prot="private" virt="non-virtual"><scope>amrex::ErrorRec</scope><name>derive_name</name></member>
      <member refid="classamrex_1_1ErrorRec_1accb4208e8504753dcddef021c9250e88" prot="private" virt="non-virtual"><scope>amrex::ErrorRec</scope><name>err_func</name></member>
      <member refid="classamrex_1_1ErrorRec_1ad72e6621e0e65cba0d636c244ac5d53b" prot="private" virt="non-virtual"><scope>amrex::ErrorRec</scope><name>err_func2</name></member>
      <member refid="classamrex_1_1ErrorRec_1abc0afb5043187b59f1a7219c50a62cec" prot="private" virt="non-virtual"><scope>amrex::ErrorRec</scope><name>err_type</name></member>
      <member refid="classamrex_1_1ErrorRec_1a71511c07ba07eb68b24293472bbceb24" prot="public" virt="virtual"><scope>amrex::ErrorRec</scope><name>errFunc</name></member>
      <member refid="classamrex_1_1ErrorRec_1a699129622e8dca590420730ce595e291" prot="public" virt="virtual"><scope>amrex::ErrorRec</scope><name>errFunc2</name></member>
      <member refid="classamrex_1_1ErrorRec_1a23c1a082f625f261a869fca2fbcbd16b" prot="public" virt="non-virtual"><scope>amrex::ErrorRec</scope><name>ErrorRec</name></member>
      <member refid="classamrex_1_1ErrorRec_1a103642c3a3fe6d0f549a70ca1379bc10" prot="public" virt="non-virtual"><scope>amrex::ErrorRec</scope><name>ErrorRec</name></member>
      <member refid="classamrex_1_1ErrorRec_1adeca3cab9dffebf73c48525e5f94872d" prot="public" virt="non-virtual"><scope>amrex::ErrorRec</scope><name>ErrorType</name></member>
      <member refid="classamrex_1_1ErrorRec_1ac34eccb332331b40360aeba63b73bbfa" prot="public" virt="non-virtual"><scope>amrex::ErrorRec</scope><name>errType</name></member>
      <member refid="classamrex_1_1ErrorRec_1a9fcabb5a67a004d3001fa8987ef6c1d8" prot="public" virt="non-virtual"><scope>amrex::ErrorRec</scope><name>name</name></member>
      <member refid="classamrex_1_1ErrorRec_1a07e4582c7d12d9c0af8972fcbf214b89" prot="private" virt="non-virtual"><scope>amrex::ErrorRec</scope><name>ngrow</name></member>
      <member refid="classamrex_1_1ErrorRec_1a4caa93d2bc0ad73faf33ca05ae0b5933" prot="public" virt="non-virtual"><scope>amrex::ErrorRec</scope><name>nGrow</name></member>
      <member refid="classamrex_1_1ErrorRec_1adeca3cab9dffebf73c48525e5f94872dab844c3099506080d12c1145ccdafa585" prot="public" virt="non-virtual"><scope>amrex::ErrorRec</scope><name>Special</name></member>
      <member refid="classamrex_1_1ErrorRec_1adeca3cab9dffebf73c48525e5f94872dabd4b8573edb15206522a41ee3a5db143" prot="public" virt="non-virtual"><scope>amrex::ErrorRec</scope><name>Standard</name></member>
      <member refid="classamrex_1_1ErrorRec_1adeca3cab9dffebf73c48525e5f94872da7907e45520d436a47eb139e8c055c203" prot="public" virt="non-virtual"><scope>amrex::ErrorRec</scope><name>UseAverage</name></member>
      <member refid="classamrex_1_1ErrorRec_1ab855c1bad2c1c0ceb3dc3eddcbaba9c1" prot="public" virt="virtual"><scope>amrex::ErrorRec</scope><name>~ErrorRec</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
