<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespaceamrex_1_1Scan" kind="namespace" language="C++">
    <compoundname>amrex::Scan</compoundname>
    <innernamespace refid="namespaceamrex_1_1Scan_1_1detail">amrex::Scan::detail</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespaceamrex_1_1Scan_1ab3da97b6daa0ec034fd4cff697b38f69" prot="public" static="no" strong="yes">
        <type></type>
        <name>Type</name>
        <enumvalue id="namespaceamrex_1_1Scan_1ab3da97b6daa0ec034fd4cff697b38f69a62628cfd1cdd77d02c32812f048bada3" prot="public">
          <name>inclusive</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceamrex_1_1Scan_1ab3da97b6daa0ec034fd4cff697b38f69aa4293995cfbfa9ce60ce71ade2ff75f7" prot="public">
          <name>exclusive</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Scan.H" line="159" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Scan.H" bodystart="159" bodyend="159"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex_1_1Scan_1a05b72974d9e9255663231d85a5ddfbea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename N</type>
          </param>
          <param>
            <type>typename FIN</type>
          </param>
          <param>
            <type>typename FOUT</type>
          </param>
          <param>
            <type>typename M</type>
            <defval>std::enable_if_t&lt;std::is_integral&lt;N&gt;::value&gt;</defval>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T amrex::Scan::PrefixSum</definition>
        <argsstring>(N n, FIN &amp;&amp;fin, FOUT &amp;&amp;fout, Type type)</argsstring>
        <name>PrefixSum</name>
        <param>
          <type>N</type>
          <declname>n</declname>
        </param>
        <param>
          <type>FIN &amp;&amp;</type>
          <declname>fin</declname>
        </param>
        <param>
          <type>FOUT &amp;&amp;</type>
          <declname>fout</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1_1Scan_1ab3da97b6daa0ec034fd4cff697b38f69" kindref="member">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Scan.H" line="393" column="3" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Scan.H" bodystart="393" bodyend="626"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Scan_1a6c7995e76bd6422d20db6f336f64989d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename N</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename M</type>
            <defval>std::enable_if_t&lt;std::is_integral&lt;N&gt;::value&gt;</defval>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T amrex::Scan::InclusiveSum</definition>
        <argsstring>(N n, T const *in, T *out)</argsstring>
        <name>InclusiveSum</name>
        <param>
          <type>N</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T const *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Scan.H" line="632" column="3" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Scan.H" bodystart="632" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Scan_1a3d89941c9d430b31054150e45dbde440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename N</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename M</type>
            <defval>std::enable_if_t&lt;std::is_integral&lt;N&gt;::value&gt;</defval>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T amrex::Scan::ExclusiveSum</definition>
        <argsstring>(N n, T const *in, T *out)</argsstring>
        <name>ExclusiveSum</name>
        <param>
          <type>N</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T const *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Scan.H" line="649" column="3" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Scan.H" bodystart="649" bodyend="662"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Scan.H" line="11" column="14"/>
  </compounddef>
</doxygen>
