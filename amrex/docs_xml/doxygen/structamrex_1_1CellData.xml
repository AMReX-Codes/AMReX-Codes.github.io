<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1CellData" kind="struct" language="C++" prot="public">
    <compoundname>amrex::CellData</compoundname>
    <includes refid="AMReX__Array4_8H" local="no">AMReX_Array4.H</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1CellData_1ac596b23c6015f40aef64d09740c9ec4f" prot="public" static="no" mutable="no">
        <type>T *restrict</type>
        <definition>T* restrict amrex::CellData&lt; T &gt;::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <qualifiedname>amrex::CellData::p</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" line="17" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1CellData_1a43b1a4e88127b9fe9ec9c37c5623d5ed" prot="public" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::CellData&lt; T &gt;::stride</definition>
        <argsstring></argsstring>
        <name>stride</name>
        <qualifiedname>amrex::CellData::stride</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" line="18" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1CellData_1a327facaefaef9c16772d8b9f5647848e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::CellData&lt; T &gt;::ncomp</definition>
        <argsstring></argsstring>
        <name>ncomp</name>
        <qualifiedname>amrex::CellData::ncomp</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" line="19" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" bodystart="19" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1CellData_1a195fc196486e4d32c7441be56351312b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__ constexpr</type>
        <definition>__host__ __device__ constexpr amrex::CellData&lt; T &gt;::CellData</definition>
        <argsstring>(T *a_p, Long a_stride, int a_ncomp)</argsstring>
        <name>CellData</name>
        <qualifiedname>amrex::CellData::CellData</qualifiedname>
        <param>
          <type>T *</type>
          <declname>a_p</declname>
        </param>
        <param>
          <type>Long</type>
          <declname>a_stride</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a_ncomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" line="22" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1CellData_1a35e63a9332c50216e9af8062780be931" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>T</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_const_v&lt; U &gt;, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>__host__ __device__ constexpr</type>
        <definition>__host__ __device__ constexpr amrex::CellData&lt; T &gt;::CellData</definition>
        <argsstring>(CellData&lt; std::remove_const_t&lt; T &gt; &gt; const &amp;rhs) noexcept</argsstring>
        <name>CellData</name>
        <qualifiedname>amrex::CellData::CellData</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1CellData" kindref="compound">CellData</ref>&lt; std::remove_const_t&lt; T &gt; &gt; const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" line="29" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1CellData_1aff74abc170f16dd98b4782371297c4e5" prot="public" static="no" const="yes" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__</type>
        <definition>__host__ __device__ amrex::CellData&lt; T &gt;::operator bool</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator bool</name>
        <qualifiedname>amrex::CellData::operator bool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" line="34" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1CellData_1ac5a3432cf809ab23f7255acdf2268573" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ int</type>
        <definition>__host__ __device__ int amrex::CellData&lt; T &gt;::nComp</definition>
        <argsstring>() const noexcept</argsstring>
        <name>nComp</name>
        <qualifiedname>amrex::CellData::nComp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" line="37" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1CellData_1ac03c31c20c85fdcd25b44ea075ff6ad5" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>T</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt;!std::is_void_v&lt; U &gt;, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>__host__ __device__ U &amp;</type>
        <definition>__host__ __device__ U &amp; amrex::CellData&lt; T &gt;::operator[]</definition>
        <argsstring>(int n) const noexcept</argsstring>
        <name>operator[]</name>
        <qualifiedname>amrex::CellData::operator[]</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" line="42" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" bodystart="42" bodyend="56"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" line="15" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" bodystart="16" bodyend="57"/>
    <listofallmembers>
      <member refid="structamrex_1_1CellData_1a195fc196486e4d32c7441be56351312b" prot="public" virt="non-virtual"><scope>amrex::CellData</scope><name>CellData</name></member>
      <member refid="structamrex_1_1CellData_1a35e63a9332c50216e9af8062780be931" prot="public" virt="non-virtual"><scope>amrex::CellData</scope><name>CellData</name></member>
      <member refid="structamrex_1_1CellData_1a327facaefaef9c16772d8b9f5647848e" prot="public" virt="non-virtual"><scope>amrex::CellData</scope><name>ncomp</name></member>
      <member refid="structamrex_1_1CellData_1ac5a3432cf809ab23f7255acdf2268573" prot="public" virt="non-virtual"><scope>amrex::CellData</scope><name>nComp</name></member>
      <member refid="structamrex_1_1CellData_1aff74abc170f16dd98b4782371297c4e5" prot="public" virt="non-virtual"><scope>amrex::CellData</scope><name>operator bool</name></member>
      <member refid="structamrex_1_1CellData_1ac03c31c20c85fdcd25b44ea075ff6ad5" prot="public" virt="non-virtual"><scope>amrex::CellData</scope><name>operator[]</name></member>
      <member refid="structamrex_1_1CellData_1ac596b23c6015f40aef64d09740c9ec4f" prot="public" virt="non-virtual"><scope>amrex::CellData</scope><name>p</name></member>
      <member refid="structamrex_1_1CellData_1a43b1a4e88127b9fe9ec9c37c5623d5ed" prot="public" virt="non-virtual"><scope>amrex::CellData</scope><name>stride</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
