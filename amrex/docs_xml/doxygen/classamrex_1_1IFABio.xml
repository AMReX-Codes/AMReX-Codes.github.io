<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classamrex_1_1IFABio" kind="class" language="C++" prot="public">
    <compoundname>amrex::IFABio</compoundname>
    <includes refid="AMReX__IArrayBox_8H" local="no">AMReX_IArrayBox.H</includes>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1IFABio_1a115a9680959d37058cda61ae123f475e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::IFABio::write_header</definition>
        <argsstring>(std::ostream &amp;os, const IArrayBox &amp;fab, int nvar)</argsstring>
        <name>write_header</name>
        <qualifiedname>amrex::IFABio::write_header</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IArrayBox" kindref="compound">IArrayBox</ref> &amp;</type>
          <declname>fab</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nvar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_IArrayBox.H" line="20" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_IArrayBox.cpp" bodystart="154" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1IFABio_1ab7e4e83d02048ffe35b15b01f5e428a1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::IFABio::read</definition>
        <argsstring>(std::istream &amp;is, IArrayBox &amp;fab, IntDescriptor const &amp;data_descriptor)</argsstring>
        <name>read</name>
        <qualifiedname>amrex::IFABio::read</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IArrayBox" kindref="compound">IArrayBox</ref> &amp;</type>
          <declname>fab</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntDescriptor" kindref="compound">IntDescriptor</ref> const &amp;</type>
          <declname>data_descriptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_IArrayBox.H" line="21" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_IArrayBox.cpp" bodystart="162" bodyend="165"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_IArrayBox.H" line="17" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_IArrayBox.H" bodystart="18" bodyend="22"/>
    <listofallmembers>
      <member refid="classamrex_1_1IFABio_1ab7e4e83d02048ffe35b15b01f5e428a1" prot="public" virt="non-virtual"><scope>amrex::IFABio</scope><name>read</name></member>
      <member refid="classamrex_1_1IFABio_1a115a9680959d37058cda61ae123f475e" prot="public" virt="non-virtual"><scope>amrex::IFABio</scope><name>write_header</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
