<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1KDTree" kind="class" language="C++" prot="public">
    <compoundname>amrex::KDTree</compoundname>
    <includes refid="AMReX__LoadBalanceKD_8H" local="no">AMReX_LoadBalanceKD.H</includes>
    <innerclass refid="structamrex_1_1KDTree_1_1KDNode" prot="private">amrex::KDTree::KDNode</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1KDTree_1aaded9be658fd369f5040987f4bc61c8e" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1KDTree_1_1KDNode" kindref="compound">KDNode</ref> *</type>
        <definition>KDNode* amrex::KDTree::root</definition>
        <argsstring></argsstring>
        <name>root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.H" line="59" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.H" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1KDTree_1ab761c95f018a28172421047bf7ca3ca1" prot="private" static="yes" mutable="no">
        <type>int</type>
        <definition>int amrex::KDTree::min_box_size</definition>
        <argsstring></argsstring>
        <name>min_box_size</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.H" line="61" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.H" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1KDTree_1ac00b4f4a9c637811023dd9176a6d7f13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::KDTree::KDTree</definition>
        <argsstring>(const amrex::Box &amp;domain, const amrex::FArrayBox &amp;cost, int num_procs)</argsstring>
        <name>KDTree</name>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">amrex::Box</ref> &amp;</type>
          <declname>domain</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1FArrayBox" kindref="compound">amrex::FArrayBox</ref> &amp;</type>
          <declname>cost</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_procs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.H" line="37" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.cpp" bodystart="7" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1KDTree_1a5bb93334bcc1793b744e78ffc674ff57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::KDTree::~KDTree</definition>
        <argsstring>()</argsstring>
        <name>~KDTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.H" line="39" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.cpp" bodystart="13" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1KDTree_1ab84f4ec77a8fc678e6668dffbd2dc550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::KDTree::GetBoxes</definition>
        <argsstring>(amrex::BoxList &amp;bl, amrex::Vector&lt; amrex::Real &gt; &amp;costs)</argsstring>
        <name>GetBoxes</name>
        <param>
          <type><ref refid="classamrex_1_1BoxList" kindref="compound">amrex::BoxList</ref> &amp;</type>
          <declname>bl</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">amrex::Vector</ref>&lt; amrex::Real &gt; &amp;</type>
          <declname>costs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.H" line="41" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.cpp" bodystart="17" bodyend="19"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1KDTree_1ac0248f61ac42e781dadd842da7776920" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::KDTree::buildKDTree</definition>
        <argsstring>(KDNode *node, const amrex::FArrayBox &amp;cost)</argsstring>
        <name>buildKDTree</name>
        <param>
          <type><ref refid="structamrex_1_1KDTree_1_1KDNode" kindref="compound">KDNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1FArrayBox" kindref="compound">amrex::FArrayBox</ref> &amp;</type>
          <declname>cost</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.H" line="45" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.cpp" bodystart="21" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1KDTree_1ac19be07d405ce082a96ffc7501918767" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::KDTree::freeKDTree</definition>
        <argsstring>(KDNode *node)</argsstring>
        <name>freeKDTree</name>
        <param>
          <type><ref refid="structamrex_1_1KDTree_1_1KDNode" kindref="compound">KDNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.H" line="47" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.cpp" bodystart="32" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1KDTree_1a67f7b73c3de89032f4279747a266d43b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::KDTree::walkKDTree</definition>
        <argsstring>(KDNode *node, amrex::BoxList &amp;bl, amrex::Vector&lt; amrex::Real &gt; &amp;costs)</argsstring>
        <name>walkKDTree</name>
        <param>
          <type><ref refid="structamrex_1_1KDTree_1_1KDNode" kindref="compound">KDNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1BoxList" kindref="compound">amrex::BoxList</ref> &amp;</type>
          <declname>bl</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">amrex::Vector</ref>&lt; amrex::Real &gt; &amp;</type>
          <declname>costs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.H" line="49" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.cpp" bodystart="46" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1KDTree_1ad663f1aa01200b7f0a9c2bbba4c973ac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::KDTree::partitionNode</definition>
        <argsstring>(KDNode *node, const amrex::FArrayBox &amp;cost)</argsstring>
        <name>partitionNode</name>
        <param>
          <type><ref refid="structamrex_1_1KDTree_1_1KDNode" kindref="compound">KDNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1FArrayBox" kindref="compound">amrex::FArrayBox</ref> &amp;</type>
          <declname>cost</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.H" line="51" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.cpp" bodystart="58" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1KDTree_1a7106b04161371b3c69d10f14a88bce1a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::KDTree::getLongestDir</definition>
        <argsstring>(const amrex::Box &amp;box)</argsstring>
        <name>getLongestDir</name>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">amrex::Box</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.H" line="53" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.cpp" bodystart="98" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1KDTree_1a1bf8fc81165d2ccc4b8a693afd8b5f3a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::KDTree::splitBox</definition>
        <argsstring>(int split, int dir, const amrex::Box &amp;box, amrex::Box &amp;left, amrex::Box &amp;right)</argsstring>
        <name>splitBox</name>
        <param>
          <type>int</type>
          <declname>split</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">amrex::Box</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">amrex::Box</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">amrex::Box</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>returns whether the split was successful or not based on min_box_size </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.H" line="56" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.cpp" bodystart="111" bodyend="135"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3620">
        <label>amrex::KDTree::KDNode</label>
        <link refid="structamrex_1_1KDTree_1_1KDNode"/>
        <childnode refid="3620" relation="usage">
          <edgelabel>right</edgelabel>
          <edgelabel>left</edgelabel>
        </childnode>
        <childnode refid="3621" relation="usage">
          <edgelabel>box</edgelabel>
        </childnode>
        <childnode refid="3624" relation="usage">
          <edgelabel>cost</edgelabel>
        </childnode>
      </node>
      <node id="3622">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="3622" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="3624">
        <label>Real</label>
      </node>
      <node id="3621">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="3622" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="3623" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="3623">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="3619">
        <label>amrex::KDTree</label>
        <link refid="classamrex_1_1KDTree"/>
        <childnode refid="3620" relation="usage">
          <edgelabel>root</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.H" line="13" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.H" bodystart="13" bodyend="62"/>
    <listofallmembers>
      <member refid="classamrex_1_1KDTree_1ac0248f61ac42e781dadd842da7776920" prot="private" virt="non-virtual"><scope>amrex::KDTree</scope><name>buildKDTree</name></member>
      <member refid="classamrex_1_1KDTree_1ac19be07d405ce082a96ffc7501918767" prot="private" virt="non-virtual"><scope>amrex::KDTree</scope><name>freeKDTree</name></member>
      <member refid="classamrex_1_1KDTree_1ab84f4ec77a8fc678e6668dffbd2dc550" prot="public" virt="non-virtual"><scope>amrex::KDTree</scope><name>GetBoxes</name></member>
      <member refid="classamrex_1_1KDTree_1a7106b04161371b3c69d10f14a88bce1a" prot="private" virt="non-virtual"><scope>amrex::KDTree</scope><name>getLongestDir</name></member>
      <member refid="classamrex_1_1KDTree_1ac00b4f4a9c637811023dd9176a6d7f13" prot="public" virt="non-virtual"><scope>amrex::KDTree</scope><name>KDTree</name></member>
      <member refid="classamrex_1_1KDTree_1ab761c95f018a28172421047bf7ca3ca1" prot="private" virt="non-virtual"><scope>amrex::KDTree</scope><name>min_box_size</name></member>
      <member refid="classamrex_1_1KDTree_1ad663f1aa01200b7f0a9c2bbba4c973ac" prot="private" virt="non-virtual"><scope>amrex::KDTree</scope><name>partitionNode</name></member>
      <member refid="classamrex_1_1KDTree_1aaded9be658fd369f5040987f4bc61c8e" prot="private" virt="non-virtual"><scope>amrex::KDTree</scope><name>root</name></member>
      <member refid="classamrex_1_1KDTree_1a1bf8fc81165d2ccc4b8a693afd8b5f3a" prot="private" virt="non-virtual"><scope>amrex::KDTree</scope><name>splitBox</name></member>
      <member refid="classamrex_1_1KDTree_1a67f7b73c3de89032f4279747a266d43b" prot="private" virt="non-virtual"><scope>amrex::KDTree</scope><name>walkKDTree</name></member>
      <member refid="classamrex_1_1KDTree_1a5bb93334bcc1793b744e78ffc674ff57" prot="public" virt="non-virtual"><scope>amrex::KDTree</scope><name>~KDTree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
