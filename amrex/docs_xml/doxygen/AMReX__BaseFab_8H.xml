<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__BaseFab_8H" kind="file" language="C++">
    <compoundname>AMReX_BaseFab.H</compoundname>
    <includes local="no">cmath</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">limits</includes>
    <includes local="no">climits</includes>
    <includes local="no">array</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">memory</includes>
    <includes refid="AMReX__Extension_8H" local="no">AMReX_Extension.H</includes>
    <includes refid="AMReX__BLassert_8H" local="no">AMReX_BLassert.H</includes>
    <includes refid="AMReX__Array_8H" local="no">AMReX_Array.H</includes>
    <includes refid="AMReX__Box_8H" local="no">AMReX_Box.H</includes>
    <includes refid="AMReX__Loop_8H" local="no">AMReX_Loop.H</includes>
    <includes refid="AMReX__BoxList_8H" local="no">AMReX_BoxList.H</includes>
    <includes refid="AMReX__BArena_8H" local="no">AMReX_BArena.H</includes>
    <includes refid="AMReX__CArena_8H" local="no">AMReX_CArena.H</includes>
    <includes refid="AMReX__REAL_8H" local="no">AMReX_REAL.H</includes>
    <includes refid="AMReX__BLProfiler_8H" local="no">AMReX_BLProfiler.H</includes>
    <includes refid="AMReX__BoxIterator_8H" local="no">AMReX_BoxIterator.H</includes>
    <includes refid="AMReX__MakeType_8H" local="no">AMReX_MakeType.H</includes>
    <includes refid="AMReX__Utility_8H" local="no">AMReX_Utility.H</includes>
    <includes refid="AMReX__Gpu_8H" local="no">AMReX_Gpu.H</includes>
    <includedby refid="AMReX__TagBox_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_TagBox.H</includedby>
    <includedby refid="AMReX_8cpp" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX.cpp</includedby>
    <includedby refid="AMReX__BaseFab_8cpp" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.cpp</includedby>
    <includedby refid="AMReX__BaseFabUtility_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFabUtility.H</includedby>
    <includedby refid="AMReX__BoxArray_8cpp" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BoxArray.cpp</includedby>
    <includedby refid="AMReX__FabArray_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArray.H</includedby>
    <includedby refid="AMReX__FArrayBox_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FArrayBox.H</includedby>
    <includedby refid="AMReX__IArrayBox_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_IArrayBox.H</includedby>
    <includedby refid="AMReX__Mask_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_Mask.H</includedby>
    <includedby refid="AMReX__EB2__GeometryShop_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_GeometryShop.H</includedby>
    <includedby refid="AMReX__EBCellFlag_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBCellFlag.H</includedby>
    <includedby refid="AMReX__Functors_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Functors.H</includedby>
    <incdepgraph>
      <node id="7458">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="7407" relation="include">
        </childnode>
        <childnode refid="7459" relation="include">
        </childnode>
        <childnode refid="7432" relation="include">
        </childnode>
        <childnode refid="7412" relation="include">
        </childnode>
      </node>
      <node id="7483">
        <label>iomanip</label>
      </node>
      <node id="7416">
        <label>functional</label>
      </node>
      <node id="7454">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="7415" relation="include">
        </childnode>
        <childnode refid="7440" relation="include">
        </childnode>
        <childnode refid="7449" relation="include">
        </childnode>
        <childnode refid="7455" relation="include">
        </childnode>
        <childnode refid="7433" relation="include">
        </childnode>
        <childnode refid="7437" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7432" relation="include">
        </childnode>
      </node>
      <node id="7446">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="7401" relation="include">
        </childnode>
        <childnode refid="7409" relation="include">
        </childnode>
        <childnode refid="7426" relation="include">
        </childnode>
        <childnode refid="7425" relation="include">
        </childnode>
        <childnode refid="7424" relation="include">
        </childnode>
        <childnode refid="7431" relation="include">
        </childnode>
      </node>
      <node id="7403">
        <label>limits</label>
      </node>
      <node id="7445">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="7417" relation="include">
        </childnode>
        <childnode refid="7425" relation="include">
        </childnode>
      </node>
      <node id="7484">
        <label>AMReX_CudaContainers.H</label>
        <link refid="AMReX__CudaContainers_8H"/>
        <childnode refid="7466" relation="include">
        </childnode>
        <childnode refid="7432" relation="include">
        </childnode>
        <childnode refid="7481" relation="include">
        </childnode>
      </node>
      <node id="7426">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="7427" relation="include">
        </childnode>
        <childnode refid="7428" relation="include">
        </childnode>
        <childnode refid="7430" relation="include">
        </childnode>
        <childnode refid="7412" relation="include">
        </childnode>
        <childnode refid="7431" relation="include">
        </childnode>
        <childnode refid="7433" relation="include">
        </childnode>
        <childnode refid="7434" relation="include">
        </childnode>
        <childnode refid="7424" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7435" relation="include">
        </childnode>
        <childnode refid="7432" relation="include">
        </childnode>
        <childnode refid="7411" relation="include">
        </childnode>
        <childnode refid="7423" relation="include">
        </childnode>
      </node>
      <node id="7475">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="7411" relation="include">
        </childnode>
        <childnode refid="7423" relation="include">
        </childnode>
        <childnode refid="7472" relation="include">
        </childnode>
        <childnode refid="7408" relation="include">
        </childnode>
        <childnode refid="7425" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7435" relation="include">
        </childnode>
        <childnode refid="7415" relation="include">
        </childnode>
        <childnode refid="7400" relation="include">
        </childnode>
      </node>
      <node id="7456">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="7449" relation="include">
        </childnode>
        <childnode refid="7403" relation="include">
        </childnode>
        <childnode refid="7407" relation="include">
        </childnode>
        <childnode refid="7440" relation="include">
        </childnode>
        <childnode refid="7415" relation="include">
        </childnode>
        <childnode refid="7410" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7432" relation="include">
        </childnode>
        <childnode refid="7426" relation="include">
        </childnode>
        <childnode refid="7425" relation="include">
        </childnode>
        <childnode refid="7457" relation="include">
        </childnode>
      </node>
      <node id="7431">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="7427" relation="include">
        </childnode>
        <childnode refid="7401" relation="include">
        </childnode>
        <childnode refid="7400" relation="include">
        </childnode>
        <childnode refid="7403" relation="include">
        </childnode>
        <childnode refid="7404" relation="include">
        </childnode>
        <childnode refid="7402" relation="include">
        </childnode>
        <childnode refid="7412" relation="include">
        </childnode>
        <childnode refid="7424" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7432" relation="include">
        </childnode>
        <childnode refid="7429" relation="include">
        </childnode>
        <childnode refid="7409" relation="include">
        </childnode>
        <childnode refid="7408" relation="include">
        </childnode>
        <childnode refid="7411" relation="include">
        </childnode>
      </node>
      <node id="7410">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="7411" relation="include">
        </childnode>
        <childnode refid="7412" relation="include">
        </childnode>
        <childnode refid="7413" relation="include">
        </childnode>
        <childnode refid="7415" relation="include">
        </childnode>
        <childnode refid="7416" relation="include">
        </childnode>
        <childnode refid="7417" relation="include">
        </childnode>
        <childnode refid="7418" relation="include">
        </childnode>
        <childnode refid="7419" relation="include">
        </childnode>
        <childnode refid="7407" relation="include">
        </childnode>
      </node>
      <node id="7447">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="7474">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="7469">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="7448" relation="include">
        </childnode>
        <childnode refid="7417" relation="include">
        </childnode>
      </node>
      <node id="7432">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="7402" relation="include">
        </childnode>
        <childnode refid="7419" relation="include">
        </childnode>
        <childnode refid="7407" relation="include">
        </childnode>
        <childnode refid="7409" relation="include">
        </childnode>
      </node>
      <node id="7482">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="7422" relation="include">
        </childnode>
        <childnode refid="7459" relation="include">
        </childnode>
        <childnode refid="7483" relation="include">
        </childnode>
        <childnode refid="7410" relation="include">
        </childnode>
        <childnode refid="7458" relation="include">
        </childnode>
        <childnode refid="7457" relation="include">
        </childnode>
      </node>
      <node id="7400">
        <label>cmath</label>
      </node>
      <node id="7414">
        <label>stdexcept</label>
      </node>
      <node id="7466">
        <label>numeric</label>
      </node>
      <node id="7437">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="7427" relation="include">
        </childnode>
        <childnode refid="7431" relation="include">
        </childnode>
        <childnode refid="7433" relation="include">
        </childnode>
        <childnode refid="7426" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7432" relation="include">
        </childnode>
      </node>
      <node id="7399">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H</label>
        <link refid="AMReX_BaseFab.H"/>
        <childnode refid="7400" relation="include">
        </childnode>
        <childnode refid="7401" relation="include">
        </childnode>
        <childnode refid="7402" relation="include">
        </childnode>
        <childnode refid="7403" relation="include">
        </childnode>
        <childnode refid="7404" relation="include">
        </childnode>
        <childnode refid="7405" relation="include">
        </childnode>
        <childnode refid="7406" relation="include">
        </childnode>
        <childnode refid="7407" relation="include">
        </childnode>
        <childnode refid="7408" relation="include">
        </childnode>
        <childnode refid="7409" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7426" relation="include">
        </childnode>
        <childnode refid="7436" relation="include">
        </childnode>
        <childnode refid="7437" relation="include">
        </childnode>
        <childnode refid="7438" relation="include">
        </childnode>
        <childnode refid="7441" relation="include">
        </childnode>
        <childnode refid="7425" relation="include">
        </childnode>
        <childnode refid="7445" relation="include">
        </childnode>
        <childnode refid="7446" relation="include">
        </childnode>
        <childnode refid="7447" relation="include">
        </childnode>
        <childnode refid="7448" relation="include">
        </childnode>
        <childnode refid="7467" relation="include">
        </childnode>
      </node>
      <node id="7417">
        <label>string</label>
      </node>
      <node id="7481">
        <label>AMReX_CudaAllocators.H</label>
        <link refid="AMReX__CudaAllocators_8H"/>
        <childnode refid="7449" relation="include">
        </childnode>
        <childnode refid="7407" relation="include">
        </childnode>
        <childnode refid="7403" relation="include">
        </childnode>
        <childnode refid="7482" relation="include">
        </childnode>
        <childnode refid="7439" relation="include">
        </childnode>
        <childnode refid="7472" relation="include">
        </childnode>
      </node>
      <node id="7436">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="7426" relation="include">
        </childnode>
      </node>
      <node id="7449">
        <label>map</label>
      </node>
      <node id="7444">
        <label>unordered_set</label>
      </node>
      <node id="7459">
        <label>fstream</label>
      </node>
      <node id="7430">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="7425" relation="include">
        </childnode>
      </node>
      <node id="7420">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="7405" relation="include">
        </childnode>
        <childnode refid="7407" relation="include">
        </childnode>
        <childnode refid="7421" relation="include">
        </childnode>
        <childnode refid="7417" relation="include">
        </childnode>
        <childnode refid="7415" relation="include">
        </childnode>
        <childnode refid="7422" relation="include">
        </childnode>
        <childnode refid="7418" relation="include">
        </childnode>
        <childnode refid="7410" relation="include">
        </childnode>
        <childnode refid="7411" relation="include">
        </childnode>
        <childnode refid="7423" relation="include">
        </childnode>
        <childnode refid="7409" relation="include">
        </childnode>
        <childnode refid="7424" relation="include">
        </childnode>
        <childnode refid="7425" relation="include">
        </childnode>
      </node>
      <node id="7480">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="7411" relation="include">
        </childnode>
        <childnode refid="7423" relation="include">
        </childnode>
        <childnode refid="7448" relation="include">
        </childnode>
      </node>
      <node id="7424">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="7408">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="7468">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="7411" relation="include">
        </childnode>
        <childnode refid="7423" relation="include">
        </childnode>
        <childnode refid="7469" relation="include">
        </childnode>
        <childnode refid="7470" relation="include">
        </childnode>
        <childnode refid="7472" relation="include">
        </childnode>
        <childnode refid="7426" relation="include">
        </childnode>
        <childnode refid="7436" relation="include">
        </childnode>
        <childnode refid="7408" relation="include">
        </childnode>
        <childnode refid="7409" relation="include">
        </childnode>
        <childnode refid="7471" relation="include">
        </childnode>
        <childnode refid="7440" relation="include">
        </childnode>
        <childnode refid="7403" relation="include">
        </childnode>
        <childnode refid="7402" relation="include">
        </childnode>
        <childnode refid="7473" relation="include">
        </childnode>
        <childnode refid="7474" relation="include">
        </childnode>
      </node>
      <node id="7451">
        <label>sys/types.h</label>
      </node>
      <node id="7465">
        <label>typeinfo</label>
      </node>
      <node id="7418">
        <label>cstdio</label>
      </node>
      <node id="7471">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="7406" relation="include">
        </childnode>
        <childnode refid="7408" relation="include">
        </childnode>
      </node>
      <node id="7423">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="7411" relation="include">
        </childnode>
      </node>
      <node id="7460">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="7461" relation="include">
        </childnode>
        <childnode refid="7417" relation="include">
        </childnode>
        <childnode refid="7421" relation="include">
        </childnode>
        <childnode refid="7422" relation="include">
        </childnode>
        <childnode refid="7418" relation="include">
        </childnode>
        <childnode refid="7401" relation="include">
        </childnode>
        <childnode refid="7462" relation="include">
        </childnode>
        <childnode refid="7463" relation="include">
        </childnode>
        <childnode refid="7464" relation="include">
        </childnode>
      </node>
      <node id="7452">
        <label>unistd.h</label>
      </node>
      <node id="7461">
        <label>stack</label>
      </node>
      <node id="7419">
        <label>vector</label>
      </node>
      <node id="7409">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="7410" relation="include">
        </childnode>
      </node>
      <node id="7411">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="7421">
        <label>utility</label>
      </node>
      <node id="7405">
        <label>array</label>
      </node>
      <node id="7422">
        <label>sstream</label>
      </node>
      <node id="7413">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="7414" relation="include">
        </childnode>
      </node>
      <node id="7428">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="7402" relation="include">
        </childnode>
        <childnode refid="7411" relation="include">
        </childnode>
        <childnode refid="7408" relation="include">
        </childnode>
        <childnode refid="7429" relation="include">
        </childnode>
      </node>
      <node id="7470">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="7411" relation="include">
        </childnode>
        <childnode refid="7423" relation="include">
        </childnode>
        <childnode refid="7469" relation="include">
        </childnode>
        <childnode refid="7426" relation="include">
        </childnode>
        <childnode refid="7471" relation="include">
        </childnode>
      </node>
      <node id="7457">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="7412" relation="include">
        </childnode>
        <childnode refid="7458" relation="include">
        </childnode>
        <childnode refid="7460" relation="include">
        </childnode>
        <childnode refid="7445" relation="include">
        </childnode>
        <childnode refid="7409" relation="include">
        </childnode>
        <childnode refid="7425" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7432" relation="include">
        </childnode>
        <childnode refid="7426" relation="include">
        </childnode>
        <childnode refid="7415" relation="include">
        </childnode>
        <childnode refid="7419" relation="include">
        </childnode>
        <childnode refid="7417" relation="include">
        </childnode>
        <childnode refid="7465" relation="include">
        </childnode>
        <childnode refid="7402" relation="include">
        </childnode>
        <childnode refid="7416" relation="include">
        </childnode>
        <childnode refid="7403" relation="include">
        </childnode>
        <childnode refid="7466" relation="include">
        </childnode>
      </node>
      <node id="7448">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="7401" relation="include">
        </childnode>
        <childnode refid="7415" relation="include">
        </childnode>
        <childnode refid="7417" relation="include">
        </childnode>
        <childnode refid="7449" relation="include">
        </childnode>
        <childnode refid="7450" relation="include">
        </childnode>
        <childnode refid="7406" relation="include">
        </childnode>
        <childnode refid="7451" relation="include">
        </childnode>
        <childnode refid="7452" relation="include">
        </childnode>
        <childnode refid="7453" relation="include">
        </childnode>
        <childnode refid="7409" relation="include">
        </childnode>
        <childnode refid="7425" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
        <childnode refid="7432" relation="include">
        </childnode>
        <childnode refid="7426" relation="include">
        </childnode>
        <childnode refid="7454" relation="include">
        </childnode>
        <childnode refid="7456" relation="include">
        </childnode>
        <childnode refid="7457" relation="include">
        </childnode>
      </node>
      <node id="7439">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="7409" relation="include">
        </childnode>
        <childnode refid="7440" relation="include">
        </childnode>
        <childnode refid="7401" relation="include">
        </childnode>
      </node>
      <node id="7434">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="7427" relation="include">
        </childnode>
        <childnode refid="7409" relation="include">
        </childnode>
        <childnode refid="7424" relation="include">
        </childnode>
        <childnode refid="7411" relation="include">
        </childnode>
      </node>
      <node id="7429">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="7415" relation="include">
        </childnode>
        <childnode refid="7425" relation="include">
        </childnode>
        <childnode refid="7420" relation="include">
        </childnode>
      </node>
      <node id="7453">
        <label>sys/wait.h</label>
      </node>
      <node id="7427">
        <label>iosfwd</label>
      </node>
      <node id="7401">
        <label>cstdlib</label>
      </node>
      <node id="7464">
        <label>cfenv</label>
      </node>
      <node id="7415">
        <label>iostream</label>
      </node>
      <node id="7433">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="7427" relation="include">
        </childnode>
        <childnode refid="7412" relation="include">
        </childnode>
        <childnode refid="7431" relation="include">
        </childnode>
        <childnode refid="7424" relation="include">
        </childnode>
      </node>
      <node id="7435">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="7431" relation="include">
        </childnode>
      </node>
      <node id="7440">
        <label>cstddef</label>
      </node>
      <node id="7455">
        <label>unordered_map</label>
      </node>
      <node id="7467">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="7411" relation="include">
        </childnode>
        <childnode refid="7423" relation="include">
        </childnode>
        <childnode refid="7468" relation="include">
        </childnode>
        <childnode refid="7469" relation="include">
        </childnode>
        <childnode refid="7475" relation="include">
        </childnode>
        <childnode refid="7472" relation="include">
        </childnode>
        <childnode refid="7476" relation="include">
        </childnode>
        <childnode refid="7478" relation="include">
        </childnode>
        <childnode refid="7479" relation="include">
        </childnode>
        <childnode refid="7470" relation="include">
        </childnode>
        <childnode refid="7480" relation="include">
        </childnode>
        <childnode refid="7481" relation="include">
        </childnode>
        <childnode refid="7484" relation="include">
        </childnode>
        <childnode refid="7485" relation="include">
        </childnode>
      </node>
      <node id="7404">
        <label>climits</label>
      </node>
      <node id="7485">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="7443">
        <label>mutex</label>
      </node>
      <node id="7450">
        <label>chrono</label>
      </node>
      <node id="7473">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="7463">
        <label>csignal</label>
      </node>
      <node id="7441">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="7440" relation="include">
        </childnode>
        <childnode refid="7442" relation="include">
        </childnode>
        <childnode refid="7419" relation="include">
        </childnode>
        <childnode refid="7443" relation="include">
        </childnode>
        <childnode refid="7444" relation="include">
        </childnode>
        <childnode refid="7416" relation="include">
        </childnode>
        <childnode refid="7439" relation="include">
        </childnode>
      </node>
      <node id="7406">
        <label>type_traits</label>
      </node>
      <node id="7442">
        <label>set</label>
      </node>
      <node id="7438">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="7439" relation="include">
        </childnode>
      </node>
      <node id="7412">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="7478">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="7439" relation="include">
        </childnode>
      </node>
      <node id="7402">
        <label>algorithm</label>
      </node>
      <node id="7472">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="7401" relation="include">
        </childnode>
        <childnode refid="7407" relation="include">
        </childnode>
        <childnode refid="7405" relation="include">
        </childnode>
        <childnode refid="7410" relation="include">
        </childnode>
        <childnode refid="7448" relation="include">
        </childnode>
        <childnode refid="7469" relation="include">
        </childnode>
        <childnode refid="7423" relation="include">
        </childnode>
      </node>
      <node id="7462">
        <label>execinfo.h</label>
      </node>
      <node id="7477">
        <label>cstring</label>
      </node>
      <node id="7407">
        <label>memory</label>
      </node>
      <node id="7476">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="7440" relation="include">
        </childnode>
        <childnode refid="7477" relation="include">
        </childnode>
        <childnode refid="7401" relation="include">
        </childnode>
        <childnode refid="7407" relation="include">
        </childnode>
        <childnode refid="7439" relation="include">
        </childnode>
        <childnode refid="7471" relation="include">
        </childnode>
        <childnode refid="7472" relation="include">
        </childnode>
      </node>
      <node id="7479">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="7411" relation="include">
        </childnode>
        <childnode refid="7423" relation="include">
        </childnode>
        <childnode refid="7472" relation="include">
        </childnode>
        <childnode refid="7471" relation="include">
        </childnode>
        <childnode refid="7439" relation="include">
        </childnode>
        <childnode refid="7401" relation="include">
        </childnode>
      </node>
      <node id="7425">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="7408" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7630">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_Laplacian.cpp</label>
        <link refid="AMReX__Laplacian_8cpp"/>
      </node>
      <node id="7620">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABecLaplacian.cpp</label>
        <link refid="AMReX__ABecLaplacian_8cpp"/>
      </node>
      <node id="7496">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp</label>
        <link refid="AMReX__AmrDataAdaptor_8cpp"/>
      </node>
      <node id="7733">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_2D_C.cpp</label>
        <link refid="AMReX__EB2__2D__C_8cpp"/>
      </node>
      <node id="7527">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.cpp</label>
        <link refid="AMReX__MLEBTensorOp_8cpp"/>
      </node>
      <node id="7642">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryRegister.cpp</label>
        <link refid="AMReX__BndryRegister_8cpp"/>
      </node>
      <node id="7534">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.cpp</label>
        <link refid="AMReX__LoadBalanceKD_8cpp"/>
      </node>
      <node id="7752">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_2D_K.H</label>
        <link refid="AMReX__MLTensor__2D__K_8H"/>
      </node>
      <node id="7544">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxRegister.cpp</label>
        <link refid="AMReX__FluxRegister_8cpp"/>
      </node>
      <node id="7702">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.cpp</label>
        <link refid="AMReX__FabArrayBase_8cpp"/>
      </node>
      <node id="7734">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_3D_C.cpp</label>
        <link refid="AMReX__EB2__3D__C_8cpp"/>
      </node>
      <node id="7522">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MacProjector.cpp</label>
        <link refid="AMReX__MacProjector_8cpp"/>
      </node>
      <node id="7525">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.cpp</label>
        <link refid="AMReX__MLCellLinOp_8cpp"/>
      </node>
      <node id="7531">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_NeighborParticles.H</label>
        <link refid="AMReX__NeighborParticles_8H"/>
      </node>
      <node id="7608">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H</label>
        <link refid="AMReX__HypreABecLap_8H"/>
        <childnode refid="7571" relation="include">
        </childnode>
        <childnode refid="7609" relation="include">
        </childnode>
      </node>
      <node id="7631">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LinOp.cpp</label>
        <link refid="AMReX__LinOp_8cpp"/>
      </node>
      <node id="7613">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_Hypre.H</label>
        <link refid="AMReX__Hypre_8H"/>
        <childnode refid="7571" relation="include">
        </childnode>
        <childnode refid="7608" relation="include">
        </childnode>
        <childnode refid="7614" relation="include">
        </childnode>
        <childnode refid="7570" relation="include">
        </childnode>
      </node>
      <node id="7558">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.cpp</label>
        <link refid="AMReX__MLCellABecLap_8cpp"/>
      </node>
      <node id="7578">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.cpp</label>
        <link refid="AMReX__StateData_8cpp"/>
      </node>
      <node id="7546">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister.H</label>
        <link refid="AMReX__YAFluxRegister_8H"/>
        <childnode refid="7547" relation="include">
        </childnode>
        <childnode refid="7548" relation="include">
        </childnode>
        <childnode refid="7550" relation="include">
        </childnode>
      </node>
      <node id="7629">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_Laplacian.H</label>
        <link refid="AMReX__Laplacian_8H"/>
        <childnode refid="7630" relation="include">
        </childnode>
      </node>
      <node id="7504">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCoreBase.H</label>
        <link refid="AMReX__EB__LSCoreBase_8H"/>
        <childnode refid="7502" relation="include">
        </childnode>
        <childnode refid="7503" relation="include">
        </childnode>
      </node>
      <node id="7498">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrInSituBridge.cpp</label>
        <link refid="AMReX__AmrInSituBridge_8cpp"/>
      </node>
      <node id="7677">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/SDC/AMReX_SDCstruct.H</label>
        <link refid="AMReX__SDCstruct_8H"/>
        <childnode refid="7678" relation="include">
        </childnode>
      </node>
      <node id="7655">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_utils.cpp</label>
        <link refid="AMReX__EB__utils_8cpp"/>
      </node>
      <node id="7692">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interp_1D_C.H</label>
        <link refid="AMReX__Interp__1D__C_8H"/>
      </node>
      <node id="7617">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp</label>
        <link refid="AMReX__PETSc_8cpp"/>
      </node>
      <node id="7730">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister_3D_K.H</label>
        <link refid="AMReX__YAFluxRegister__3D__K_8H"/>
        <childnode refid="7731" relation="include">
        </childnode>
      </node>
      <node id="7529">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.cpp</label>
        <link refid="AMReX__MLNodeLaplacian_8cpp"/>
      </node>
      <node id="7719">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_3D_C.H</label>
        <link refid="AMReX__MultiFabUtil__3D__C_8H"/>
        <childnode refid="7720" relation="include">
        </childnode>
      </node>
      <node id="7556">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.H</label>
        <link refid="AMReX__MLALaplacian_8H"/>
        <childnode refid="7524" relation="include">
        </childnode>
        <childnode refid="7557" relation="include">
        </childnode>
      </node>
      <node id="7581">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCUtil.H</label>
        <link refid="AMReX__BCUtil_8H"/>
        <childnode refid="7582" relation="include">
        </childnode>
      </node>
      <node id="7636">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_DivVis.cpp</label>
        <link refid="AMReX__DivVis_8cpp"/>
      </node>
      <node id="7562">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.cpp</label>
        <link refid="AMReX__MLLinOp_8cpp"/>
      </node>
      <node id="7554">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MacProjector.H</label>
        <link refid="AMReX__MacProjector_8H"/>
        <childnode refid="7522" relation="include">
        </childnode>
      </node>
      <node id="7638">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCCGSolver.cpp</label>
        <link refid="AMReX__MCCGSolver_8cpp"/>
      </node>
      <node id="7637">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCCGSolver.H</label>
        <link refid="AMReX__MCCGSolver_8H"/>
        <childnode refid="7638" relation="include">
        </childnode>
        <childnode refid="7639" relation="include">
        </childnode>
      </node>
      <node id="7706">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_2D_C.H</label>
        <link refid="AMReX__FilCC__2D__C_8H"/>
      </node>
      <node id="7742">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MG_2D_K.H</label>
        <link refid="AMReX__MG__2D__K_8H"/>
      </node>
      <node id="7596">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileDataImpl.cpp</label>
        <link refid="AMReX__PlotFileDataImpl_8cpp"/>
      </node>
      <node id="7624">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_MultiGrid.H</label>
        <link refid="AMReX__MultiGrid_8H"/>
        <childnode refid="7622" relation="include">
        </childnode>
        <childnode refid="7623" relation="include">
        </childnode>
      </node>
      <node id="7563">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H</label>
        <link refid="AMReX__MLCGSolver_8H"/>
        <childnode refid="7564" relation="include">
        </childnode>
        <childnode refid="7565" relation="include">
        </childnode>
      </node>
      <node id="7758">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H</label>
        <link refid="AMReX__ArrayOfStructs_8H"/>
        <childnode refid="7532" relation="include">
        </childnode>
        <childnode refid="7759" relation="include">
        </childnode>
      </node>
      <node id="7598">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileUtil.cpp</label>
        <link refid="AMReX__PlotFileUtil_8cpp"/>
      </node>
      <node id="7750">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_2D_K.H</label>
        <link refid="AMReX__MLEBTensor__2D__K_8H"/>
      </node>
      <node id="7606">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H</label>
        <link refid="AMReX__MacBndry_8H"/>
        <childnode refid="7607" relation="include">
        </childnode>
        <childnode refid="7608" relation="include">
        </childnode>
      </node>
      <node id="7601">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxRegister.H</label>
        <link refid="AMReX__FluxRegister_8H"/>
        <childnode refid="7544" relation="include">
        </childnode>
        <childnode refid="7502" relation="include">
        </childnode>
      </node>
      <node id="7731">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister_K.H</label>
        <link refid="AMReX__YAFluxRegister__K_8H"/>
        <childnode refid="7547" relation="include">
        </childnode>
      </node>
      <node id="7614">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap2.H</label>
        <link refid="AMReX__HypreABecLap2_8H"/>
        <childnode refid="7571" relation="include">
        </childnode>
        <childnode refid="7615" relation="include">
        </childnode>
      </node>
      <node id="7682">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_VisMF.H</label>
        <link refid="AMReX__VisMF_8H"/>
        <childnode refid="7493" relation="include">
        </childnode>
        <childnode refid="7492" relation="include">
        </childnode>
        <childnode refid="7494" relation="include">
        </childnode>
        <childnode refid="7577" relation="include">
        </childnode>
        <childnode refid="7512" relation="include">
        </childnode>
        <childnode refid="7583" relation="include">
        </childnode>
        <childnode refid="7683" relation="include">
        </childnode>
        <childnode refid="7596" relation="include">
        </childnode>
        <childnode refid="7595" relation="include">
        </childnode>
        <childnode refid="7598" relation="include">
        </childnode>
        <childnode refid="7679" relation="include">
        </childnode>
        <childnode refid="7643" relation="include">
        </childnode>
        <childnode refid="7647" relation="include">
        </childnode>
        <childnode refid="7503" relation="include">
        </childnode>
        <childnode refid="7589" relation="include">
        </childnode>
        <childnode refid="7658" relation="include">
        </childnode>
        <childnode refid="7572" relation="include">
        </childnode>
        <childnode refid="7521" relation="include">
        </childnode>
        <childnode refid="7622" relation="include">
        </childnode>
        <childnode refid="7564" relation="include">
        </childnode>
        <childnode refid="7550" relation="include">
        </childnode>
        <childnode refid="7528" relation="include">
        </childnode>
        <childnode refid="7532" relation="include">
        </childnode>
      </node>
      <node id="7550">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H</label>
        <link refid="AMReX__MLLinOp_8H"/>
        <childnode refid="7551" relation="include">
        </childnode>
        <childnode refid="7563" relation="include">
        </childnode>
        <childnode refid="7562" relation="include">
        </childnode>
        <childnode refid="7565" relation="include">
        </childnode>
        <childnode refid="7566" relation="include">
        </childnode>
      </node>
      <node id="7507">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8cpp"/>
      </node>
      <node id="7735">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFArrayBox.H</label>
        <link refid="AMReX__EBFArrayBox_8H"/>
        <childnode refid="7518" relation="include">
        </childnode>
        <childnode refid="7511" relation="include">
        </childnode>
        <childnode refid="7650" relation="include">
        </childnode>
        <childnode refid="7736" relation="include">
        </childnode>
        <childnode refid="7549" relation="include">
        </childnode>
        <childnode refid="7737" relation="include">
        </childnode>
        <childnode refid="7519" relation="include">
        </childnode>
        <childnode refid="7526" relation="include">
        </childnode>
      </node>
      <node id="7757">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particle.H</label>
        <link refid="AMReX__Particle_8H"/>
        <childnode refid="7758" relation="include">
        </childnode>
        <childnode refid="7715" relation="include">
        </childnode>
        <childnode refid="7532" relation="include">
        </childnode>
        <childnode refid="7759" relation="include">
        </childnode>
      </node>
      <node id="7721">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_nd_C.H</label>
        <link refid="AMReX__MultiFabUtil__nd__C_8H"/>
        <childnode refid="7720" relation="include">
        </childnode>
      </node>
      <node id="7565">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H</label>
        <link refid="AMReX__MLMG_8H"/>
        <childnode refid="7554" relation="include">
        </childnode>
        <childnode refid="7564" relation="include">
        </childnode>
        <childnode refid="7528" relation="include">
        </childnode>
        <childnode refid="7529" relation="include">
        </childnode>
      </node>
      <node id="7611">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.cpp</label>
        <link refid="AMReX__MLMGBndry_8cpp"/>
      </node>
      <node id="7727">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_Mask.cpp</label>
        <link refid="AMReX__Mask_8cpp"/>
      </node>
      <node id="7634">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCLinOp.H</label>
        <link refid="AMReX__MCLinOp_8H"/>
        <childnode refid="7635" relation="include">
        </childnode>
        <childnode refid="7637" relation="include">
        </childnode>
        <childnode refid="7633" relation="include">
        </childnode>
        <childnode refid="7640" relation="include">
        </childnode>
        <childnode refid="7641" relation="include">
        </childnode>
      </node>
      <node id="7509">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_TagBox.cpp</label>
        <link refid="AMReX__TagBox_8cpp"/>
      </node>
      <node id="7579">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FillPatchUtil.H</label>
        <link refid="AMReX__FillPatchUtil_8H"/>
        <childnode refid="7493" relation="include">
        </childnode>
        <childnode refid="7494" relation="include">
        </childnode>
        <childnode refid="7501" relation="include">
        </childnode>
        <childnode refid="7580" relation="include">
        </childnode>
        <childnode refid="7503" relation="include">
        </childnode>
      </node>
      <node id="7622">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_CGSolver.cpp</label>
        <link refid="AMReX__CGSolver_8cpp"/>
      </node>
      <node id="7603">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryData.cpp</label>
        <link refid="AMReX__BndryData_8cpp"/>
      </node>
      <node id="7661">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.H</label>
        <link refid="AMReX__BLWritePlotFile_8H"/>
        <childnode refid="7662" relation="include">
        </childnode>
      </node>
      <node id="7675">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_RegionsProfStats.H</label>
        <link refid="AMReX__RegionsProfStats_8H"/>
        <childnode refid="7669" relation="include">
        </childnode>
        <childnode refid="7670" relation="include">
        </childnode>
        <childnode refid="7671" relation="include">
        </childnode>
        <childnode refid="7673" relation="include">
        </childnode>
      </node>
      <node id="7576">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Extrapolater.H</label>
        <link refid="AMReX__Extrapolater_8H"/>
        <childnode refid="7543" relation="include">
        </childnode>
      </node>
      <node id="7551">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H</label>
        <link refid="AMReX__MLCellLinOp_8H"/>
        <childnode refid="7552" relation="include">
        </childnode>
        <childnode refid="7525" relation="include">
        </childnode>
        <childnode refid="7562" relation="include">
        </childnode>
      </node>
      <node id="7701">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_COORDSYS_C.H</label>
        <link refid="AMReX__COORDSYS__C_8H"/>
        <childnode refid="7697" relation="include">
        </childnode>
      </node>
      <node id="7720">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_C.H</label>
        <link refid="AMReX__MultiFabUtil__C_8H"/>
        <childnode refid="7517" relation="include">
        </childnode>
        <childnode refid="7519" relation="include">
        </childnode>
      </node>
      <node id="7610">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H</label>
        <link refid="AMReX__MLMGBndry_8H"/>
        <childnode refid="7550" relation="include">
        </childnode>
        <childnode refid="7611" relation="include">
        </childnode>
      </node>
      <node id="7691">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxReg_C.H</label>
        <link refid="AMReX__FluxReg__C_8H"/>
        <childnode refid="7544" relation="include">
        </childnode>
      </node>
      <node id="7697">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CoordSys.cpp</label>
        <link refid="AMReX__CoordSys_8cpp"/>
      </node>
      <node id="7548">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFluxRegister.H</label>
        <link refid="AMReX__EBFluxRegister_8H"/>
        <childnode refid="7549" relation="include">
        </childnode>
      </node>
      <node id="7501">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrParticles.H</label>
        <link refid="AMReX__AmrParticles_8H"/>
      </node>
      <node id="7686">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H</label>
        <link refid="AMReX__MultiCutFab_8H"/>
        <childnode refid="7647" relation="include">
        </childnode>
        <childnode refid="7518" relation="include">
        </childnode>
        <childnode refid="7655" relation="include">
        </childnode>
        <childnode refid="7652" relation="include">
        </childnode>
        <childnode refid="7519" relation="include">
        </childnode>
        <childnode refid="7657" relation="include">
        </childnode>
      </node>
      <node id="7552">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.H</label>
        <link refid="AMReX__MLCellABecLap_8H"/>
        <childnode refid="7553" relation="include">
        </childnode>
        <childnode refid="7556" relation="include">
        </childnode>
        <childnode refid="7558" relation="include">
        </childnode>
        <childnode refid="7559" relation="include">
        </childnode>
        <childnode refid="7561" relation="include">
        </childnode>
      </node>
      <node id="7486">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H</label>
        <link refid="AMReX_BaseFab.H"/>
        <childnode refid="7487" relation="include">
        </childnode>
        <childnode refid="7512" relation="include">
        </childnode>
        <childnode refid="7513" relation="include">
        </childnode>
        <childnode refid="7514" relation="include">
        </childnode>
        <childnode refid="7539" relation="include">
        </childnode>
        <childnode refid="7540" relation="include">
        </childnode>
        <childnode refid="7687" relation="include">
        </childnode>
        <childnode refid="7760" relation="include">
        </childnode>
        <childnode refid="7726" relation="include">
        </childnode>
        <childnode refid="7762" relation="include">
        </childnode>
        <childnode refid="7763" relation="include">
        </childnode>
        <childnode refid="7715" relation="include">
        </childnode>
      </node>
      <node id="7747">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_K.H</label>
        <link refid="AMReX__MLEBTensor__K_8H"/>
        <childnode refid="7527" relation="include">
        </childnode>
      </node>
      <node id="7609">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.cpp</label>
        <link refid="AMReX__HypreABecLap_8cpp"/>
      </node>
      <node id="7679">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_VisMF.cpp</label>
        <link refid="AMReX__VisMF_8cpp"/>
      </node>
      <node id="7560">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.H</label>
        <link refid="AMReX__MLEBTensorOp_8H"/>
        <childnode refid="7527" relation="include">
        </childnode>
      </node>
      <node id="7574">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AuxBoundaryData.H</label>
        <link refid="AMReX__AuxBoundaryData_8H"/>
        <childnode refid="7575" relation="include">
        </childnode>
      </node>
      <node id="7641">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H</label>
        <link refid="AMReX__MCMultiGrid_8H"/>
        <childnode refid="7637" relation="include">
        </childnode>
        <childnode refid="7639" relation="include">
        </childnode>
      </node>
      <node id="7489">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrMesh.H</label>
        <link refid="AMReX__AmrMesh_8H"/>
        <childnode refid="7490" relation="include">
        </childnode>
        <childnode refid="7505" relation="include">
        </childnode>
        <childnode refid="7506" relation="include">
        </childnode>
        <childnode refid="7508" relation="include">
        </childnode>
      </node>
      <node id="7715">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Functors.H</label>
        <link refid="AMReX__Functors_8H"/>
        <childnode refid="7532" relation="include">
        </childnode>
      </node>
      <node id="7571">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_Hypre.cpp</label>
        <link refid="AMReX__Hypre_8cpp"/>
      </node>
      <node id="7535">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_NeighborList.H</label>
        <link refid="AMReX__NeighborList_8H"/>
      </node>
      <node id="7667">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/hpgmg/BL_HPGMG.cpp</label>
        <link refid="BL__HPGMG_8cpp"/>
      </node>
      <node id="7592">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Derive.cpp</label>
        <link refid="AMReX__Derive_8cpp"/>
      </node>
      <node id="7693">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interp_2D_C.H</label>
        <link refid="AMReX__Interp__2D__C_8H"/>
      </node>
      <node id="7658">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_AmrData.H</label>
        <link refid="AMReX__AmrData_8H"/>
        <childnode refid="7589" relation="include">
        </childnode>
        <childnode refid="7659" relation="include">
        </childnode>
      </node>
      <node id="7573">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="7492" relation="include">
        </childnode>
        <childnode refid="7574" relation="include">
        </childnode>
        <childnode refid="7576" relation="include">
        </childnode>
        <childnode refid="7577" relation="include">
        </childnode>
        <childnode refid="7579" relation="include">
        </childnode>
        <childnode refid="7512" relation="include">
        </childnode>
        <childnode refid="7581" relation="include">
        </childnode>
        <childnode refid="7583" relation="include">
        </childnode>
        <childnode refid="7584" relation="include">
        </childnode>
        <childnode refid="7586" relation="include">
        </childnode>
        <childnode refid="7587" relation="include">
        </childnode>
        <childnode refid="7545" relation="include">
        </childnode>
        <childnode refid="7515" relation="include">
        </childnode>
        <childnode refid="7590" relation="include">
        </childnode>
        <childnode refid="7595" relation="include">
        </childnode>
        <childnode refid="7597" relation="include">
        </childnode>
        <childnode refid="7599" relation="include">
        </childnode>
        <childnode refid="7546" relation="include">
        </childnode>
        <childnode refid="7644" relation="include">
        </childnode>
        <childnode refid="7647" relation="include">
        </childnode>
        <childnode refid="7653" relation="include">
        </childnode>
        <childnode refid="7569" relation="include">
        </childnode>
        <childnode refid="7655" relation="include">
        </childnode>
        <childnode refid="7510" relation="include">
        </childnode>
        <childnode refid="7652" relation="include">
        </childnode>
        <childnode refid="7656" relation="include">
        </childnode>
        <childnode refid="7657" relation="include">
        </childnode>
        <childnode refid="7658" relation="include">
        </childnode>
        <childnode refid="7664" relation="include">
        </childnode>
        <childnode refid="7666" relation="include">
        </childnode>
        <childnode refid="7613" relation="include">
        </childnode>
        <childnode refid="7608" relation="include">
        </childnode>
        <childnode refid="7520" relation="include">
        </childnode>
        <childnode refid="7616" relation="include">
        </childnode>
        <childnode refid="7668" relation="include">
        </childnode>
        <childnode refid="7670" relation="include">
        </childnode>
        <childnode refid="7661" relation="include">
        </childnode>
        <childnode refid="7674" relation="include">
        </childnode>
        <childnode refid="7506" relation="include">
        </childnode>
        <childnode refid="7508" relation="include">
        </childnode>
        <childnode refid="7621" relation="include">
        </childnode>
        <childnode refid="7618" relation="include">
        </childnode>
        <childnode refid="7624" relation="include">
        </childnode>
        <childnode refid="7637" relation="include">
        </childnode>
        <childnode refid="7634" relation="include">
        </childnode>
        <childnode refid="7641" relation="include">
        </childnode>
        <childnode refid="7563" relation="include">
        </childnode>
        <childnode refid="7550" relation="include">
        </childnode>
        <childnode refid="7533" relation="include">
        </childnode>
        <childnode refid="7531" relation="include">
        </childnode>
        <childnode refid="7676" relation="include">
        </childnode>
        <childnode refid="7677" relation="include">
        </childnode>
      </node>
      <node id="7739">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_XYPlotDataList.H</label>
        <link refid="AMReX__XYPlotDataList_8H"/>
        <childnode refid="7660" relation="include">
        </childnode>
        <childnode refid="7740" relation="include">
        </childnode>
      </node>
      <node id="7663">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_ProfParserBatch.cpp</label>
        <link refid="AMReX__ProfParserBatch_8cpp"/>
      </node>
      <node id="7729">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister_2D_K.H</label>
        <link refid="AMReX__YAFluxRegister__2D__K_8H"/>
      </node>
      <node id="7517">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil.cpp</label>
        <link refid="AMReX__MultiFabUtil_8cpp"/>
      </node>
      <node id="7732">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_C.H</label>
        <link refid="AMReX__EB2__C_8H"/>
        <childnode refid="7733" relation="include">
        </childnode>
        <childnode refid="7734" relation="include">
        </childnode>
        <childnode refid="7647" relation="include">
        </childnode>
        <childnode refid="7654" relation="include">
        </childnode>
      </node>
      <node id="7718">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_2D_C.H</label>
        <link refid="AMReX__MultiFabUtil__2D__C_8H"/>
      </node>
      <node id="7602">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryData.H</label>
        <link refid="AMReX__BndryData_8H"/>
        <childnode refid="7603" relation="include">
        </childnode>
        <childnode refid="7604" relation="include">
        </childnode>
        <childnode refid="7612" relation="include">
        </childnode>
        <childnode refid="7613" relation="include">
        </childnode>
        <childnode refid="7520" relation="include">
        </childnode>
        <childnode refid="7616" relation="include">
        </childnode>
        <childnode refid="7618" relation="include">
        </childnode>
        <childnode refid="7624" relation="include">
        </childnode>
        <childnode refid="7632" relation="include">
        </childnode>
        <childnode refid="7634" relation="include">
        </childnode>
      </node>
      <node id="7725">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData_K.H</label>
        <link refid="AMReX__InterpBndryData__K_8H"/>
        <childnode refid="7605" relation="include">
        </childnode>
      </node>
      <node id="7557">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.cpp</label>
        <link refid="AMReX__MLPoisson_8cpp"/>
      </node>
      <node id="7705">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_1D_C.H</label>
        <link refid="AMReX__FilCC__1D__C_8H"/>
      </node>
      <node id="7741">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MG_1D_K.H</label>
        <link refid="AMReX__MG__1D__K_8H"/>
      </node>
      <node id="7564">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.cpp</label>
        <link refid="AMReX__MLCGSolver_8cpp"/>
      </node>
      <node id="7508">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrMeshInSituBridge.cpp</label>
        <link refid="AMReX__AmrMeshInSituBridge_8cpp"/>
      </node>
      <node id="7589">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp</label>
        <link refid="AMReX__AmrData_8cpp"/>
      </node>
      <node id="7710">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="7492" relation="include">
        </childnode>
        <childnode refid="7540" relation="include">
        </childnode>
        <childnode refid="7541" relation="include">
        </childnode>
        <childnode refid="7711" relation="include">
        </childnode>
        <childnode refid="7515" relation="include">
        </childnode>
        <childnode refid="7602" relation="include">
        </childnode>
        <childnode refid="7647" relation="include">
        </childnode>
        <childnode refid="7653" relation="include">
        </childnode>
        <childnode refid="7570" relation="include">
        </childnode>
        <childnode refid="7520" relation="include">
        </childnode>
        <childnode refid="7616" relation="include">
        </childnode>
      </node>
      <node id="7625">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG4/AMReX_ABec2.H</label>
        <link refid="AMReX__ABec2_8H"/>
        <childnode refid="7626" relation="include">
        </childnode>
        <childnode refid="7627" relation="include">
        </childnode>
      </node>
      <node id="7660">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_DataServices.cpp</label>
        <link refid="AMReX__DataServices_8cpp"/>
      </node>
      <node id="7650">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFabFactory.cpp</label>
        <link refid="AMReX__EBFabFactory_8cpp"/>
      </node>
      <node id="7669">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfStats.cpp</label>
        <link refid="AMReX__BLProfStats_8cpp"/>
      </node>
      <node id="7709">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="7539" relation="include">
        </childnode>
        <childnode refid="7540" relation="include">
        </childnode>
        <childnode refid="7710" relation="include">
        </childnode>
        <childnode refid="7681" relation="include">
        </childnode>
        <childnode refid="7515" relation="include">
        </childnode>
        <childnode refid="7496" relation="include">
        </childnode>
        <childnode refid="7507" relation="include">
        </childnode>
        <childnode refid="7712" relation="include">
        </childnode>
        <childnode refid="7714" relation="include">
        </childnode>
      </node>
      <node id="7503">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCoreBase.cpp</label>
        <link refid="AMReX__EB__LSCoreBase_8cpp"/>
      </node>
      <node id="7700">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_COORDSYS_3D_C.H</label>
        <link refid="AMReX__COORDSYS__3D__C_8H"/>
        <childnode refid="7701" relation="include">
        </childnode>
      </node>
      <node id="7528">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.cpp</label>
        <link refid="AMReX__MLMG_8cpp"/>
      </node>
      <node id="7745">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLap_K.H</label>
        <link refid="AMReX__MLABecLap__K_8H"/>
        <childnode refid="7523" relation="include">
        </childnode>
        <childnode refid="7526" relation="include">
        </childnode>
      </node>
      <node id="7722">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData_1D_K.H</label>
        <link refid="AMReX__InterpBndryData__1D__K_8H"/>
      </node>
      <node id="7688">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxReg_1D_C.H</label>
        <link refid="AMReX__FluxReg__1D__C_8H"/>
      </node>
      <node id="7653">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_MultiGFab.H</label>
        <link refid="AMReX__EB2__MultiGFab_8H"/>
        <childnode refid="7647" relation="include">
        </childnode>
        <childnode refid="7654" relation="include">
        </childnode>
      </node>
      <node id="7704">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FArrayBox.cpp</label>
        <link refid="AMReX__FArrayBox_8cpp"/>
      </node>
      <node id="7549">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFluxRegister.cpp</label>
        <link refid="AMReX__EBFluxRegister_8cpp"/>
      </node>
      <node id="7714">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleUtil.H</label>
        <link refid="AMReX__ParticleUtil_8H"/>
        <childnode refid="7715" relation="include">
        </childnode>
        <childnode refid="7532" relation="include">
        </childnode>
        <childnode refid="7716" relation="include">
        </childnode>
      </node>
      <node id="7713">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_InSituUtils.cpp</label>
        <link refid="AMReX__InSituUtils_8cpp"/>
      </node>
      <node id="7570">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H</label>
        <link refid="AMReX__HypreABecLap3_8H"/>
        <childnode refid="7571" relation="include">
        </childnode>
        <childnode refid="7572" relation="include">
        </childnode>
      </node>
      <node id="7651">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp</label>
        <link refid="AMReX__EB2__Level_8cpp"/>
      </node>
      <node id="7604">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData.H</label>
        <link refid="AMReX__InterpBndryData_8H"/>
        <childnode refid="7605" relation="include">
        </childnode>
        <childnode refid="7606" relation="include">
        </childnode>
        <childnode refid="7610" relation="include">
        </childnode>
      </node>
      <node id="7588">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MFCopyDescriptor.cpp</label>
        <link refid="AMReX__MFCopyDescriptor_8cpp"/>
      </node>
      <node id="7530">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.cpp</label>
        <link refid="AMReX__MLTensorOp_8cpp"/>
      </node>
      <node id="7764">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBCellFlag.cpp</label>
        <link refid="AMReX__EBCellFlag_8cpp"/>
      </node>
      <node id="7670">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfUtilities.cpp</label>
        <link refid="AMReX__BLProfUtilities_8cpp"/>
      </node>
      <node id="7586">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Geometry.cpp</label>
        <link refid="AMReX__Geometry_8cpp"/>
      </node>
      <node id="7513">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.cpp</label>
        <link refid="AMReX__BaseFab_8cpp"/>
      </node>
      <node id="7505">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrMesh.cpp</label>
        <link refid="AMReX__AmrMesh_8cpp"/>
      </node>
      <node id="7515">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil.H</label>
        <link refid="AMReX__MultiFabUtil_8H"/>
        <childnode refid="7492" relation="include">
        </childnode>
        <childnode refid="7516" relation="include">
        </childnode>
        <childnode refid="7517" relation="include">
        </childnode>
        <childnode refid="7518" relation="include">
        </childnode>
        <childnode refid="7503" relation="include">
        </childnode>
        <childnode refid="7519" relation="include">
        </childnode>
        <childnode refid="7520" relation="include">
        </childnode>
        <childnode refid="7522" relation="include">
        </childnode>
        <childnode refid="7523" relation="include">
        </childnode>
        <childnode refid="7524" relation="include">
        </childnode>
        <childnode refid="7525" relation="include">
        </childnode>
        <childnode refid="7526" relation="include">
        </childnode>
        <childnode refid="7527" relation="include">
        </childnode>
        <childnode refid="7528" relation="include">
        </childnode>
        <childnode refid="7529" relation="include">
        </childnode>
        <childnode refid="7530" relation="include">
        </childnode>
        <childnode refid="7531" relation="include">
        </childnode>
        <childnode refid="7532" relation="include">
        </childnode>
      </node>
      <node id="7487">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_TagBox.H</label>
        <link refid="AMReX__TagBox_8H"/>
        <childnode refid="7488" relation="include">
        </childnode>
        <childnode refid="7489" relation="include">
        </childnode>
        <childnode refid="7509" relation="include">
        </childnode>
        <childnode refid="7504" relation="include">
        </childnode>
        <childnode refid="7510" relation="include">
        </childnode>
      </node>
      <node id="7543">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Extrapolater.cpp</label>
        <link refid="AMReX__Extrapolater_8cpp"/>
      </node>
      <node id="7542">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_iMultiFab.H</label>
        <link refid="AMReX__iMultiFab_8H"/>
        <childnode refid="7543" relation="include">
        </childnode>
        <childnode refid="7544" relation="include">
        </childnode>
        <childnode refid="7512" relation="include">
        </childnode>
        <childnode refid="7516" relation="include">
        </childnode>
        <childnode refid="7545" relation="include">
        </childnode>
        <childnode refid="7515" relation="include">
        </childnode>
        <childnode refid="7546" relation="include">
        </childnode>
        <childnode refid="7569" relation="include">
        </childnode>
        <childnode refid="7570" relation="include">
        </childnode>
        <childnode refid="7520" relation="include">
        </childnode>
        <childnode refid="7565" relation="include">
        </childnode>
        <childnode refid="7566" relation="include">
        </childnode>
      </node>
      <node id="7674">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_CommProfStats.H</label>
        <link refid="AMReX__CommProfStats_8H"/>
        <childnode refid="7670" relation="include">
        </childnode>
        <childnode refid="7671" relation="include">
        </childnode>
        <childnode refid="7672" relation="include">
        </childnode>
      </node>
      <node id="7499">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrCore.cpp</label>
        <link refid="AMReX__AmrCore_8cpp"/>
      </node>
      <node id="7737">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBInterpolater.cpp</label>
        <link refid="AMReX__EBInterpolater_8cpp"/>
      </node>
      <node id="7649">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.cpp</label>
        <link refid="AMReX__EB2_8cpp"/>
      </node>
      <node id="7523">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.cpp</label>
        <link refid="AMReX__MLABecLaplacian_8cpp"/>
      </node>
      <node id="7678">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/SDC/AMReX_SDCstruct.cpp</label>
        <link refid="AMReX__SDCstruct_8cpp"/>
      </node>
      <node id="7593">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateDescriptor.cpp</label>
        <link refid="AMReX__StateDescriptor_8cpp"/>
      </node>
      <node id="7766">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFabFactory.H</label>
        <link refid="AMReX__EBFabFactory_8H"/>
        <childnode refid="7569" relation="include">
        </childnode>
        <childnode refid="7518" relation="include">
        </childnode>
        <childnode refid="7655" relation="include">
        </childnode>
        <childnode refid="7650" relation="include">
        </childnode>
        <childnode refid="7519" relation="include">
        </childnode>
        <childnode refid="7559" relation="include">
        </childnode>
      </node>
      <node id="7568">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.cpp</label>
        <link refid="AMReX__MLNodeLinOp_8cpp"/>
      </node>
      <node id="7567">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.H</label>
        <link refid="AMReX__MLNodeLaplacian_8H"/>
        <childnode refid="7521" relation="include">
        </childnode>
        <childnode refid="7529" relation="include">
        </childnode>
      </node>
      <node id="7518">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_levelset.cpp</label>
        <link refid="AMReX__EB__levelset_8cpp"/>
      </node>
      <node id="7502">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCore.H</label>
        <link refid="AMReX__EB__LSCore_8H"/>
      </node>
      <node id="7536">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particle_mod_K.H</label>
        <link refid="AMReX__Particle__mod__K_8H"/>
        <childnode refid="7532" relation="include">
        </childnode>
      </node>
      <node id="7694">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interp_3D_C.H</label>
        <link refid="AMReX__Interp__3D__C_8H"/>
        <childnode refid="7695" relation="include">
        </childnode>
      </node>
      <node id="7519">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBMultiFabUtil.cpp</label>
        <link refid="AMReX__EBMultiFabUtil_8cpp"/>
      </node>
      <node id="7666">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/hpgmg/BL_HPGMG.H</label>
        <link refid="BL__HPGMG_8H"/>
        <childnode refid="7667" relation="include">
        </childnode>
      </node>
      <node id="7728">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister_1D_K.H</label>
        <link refid="AMReX__YAFluxRegister__1D__K_8H"/>
      </node>
      <node id="7754">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_K.H</label>
        <link refid="AMReX__MLTensor__K_8H"/>
        <childnode refid="7527" relation="include">
        </childnode>
        <childnode refid="7530" relation="include">
        </childnode>
      </node>
      <node id="7659">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_DataServices.H</label>
        <link refid="AMReX__DataServices_8H"/>
        <childnode refid="7660" relation="include">
        </childnode>
        <childnode refid="7661" relation="include">
        </childnode>
        <childnode refid="7663" relation="include">
        </childnode>
      </node>
      <node id="7717">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_1D_C.H</label>
        <link refid="AMReX__MultiFabUtil__1D__C_8H"/>
      </node>
      <node id="7495">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_LevelBld.H</label>
        <link refid="AMReX__LevelBld_8H"/>
        <childnode refid="7488" relation="include">
        </childnode>
      </node>
      <node id="7652">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBDataCollection.cpp</label>
        <link refid="AMReX__EBDataCollection_8cpp"/>
      </node>
      <node id="7595">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileDataImpl.H</label>
        <link refid="AMReX__PlotFileDataImpl_8H"/>
        <childnode refid="7596" relation="include">
        </childnode>
        <childnode refid="7597" relation="include">
        </childnode>
      </node>
      <node id="7612">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.cpp</label>
        <link refid="AMReX__MultiMask_8cpp"/>
      </node>
      <node id="7599">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_FabSet.H</label>
        <link refid="AMReX__FabSet_8H"/>
        <childnode refid="7488" relation="include">
        </childnode>
        <childnode refid="7600" relation="include">
        </childnode>
        <childnode refid="7643" relation="include">
        </childnode>
      </node>
      <node id="7512">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX.cpp</label>
        <link refid="AMReX_8cpp"/>
      </node>
      <node id="7572">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.cpp</label>
        <link refid="AMReX__HypreABecLap3_8cpp"/>
      </node>
      <node id="7654">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_MultiGFab.cpp</label>
        <link refid="AMReX__EB2__MultiGFab_8cpp"/>
      </node>
      <node id="7547">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister.cpp</label>
        <link refid="AMReX__YAFluxRegister_8cpp"/>
      </node>
      <node id="7699">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_COORDSYS_2D_C.H</label>
        <link refid="AMReX__COORDSYS__2D__C_8H"/>
      </node>
      <node id="7657">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.cpp</label>
        <link refid="AMReX__MultiCutFab_8cpp"/>
      </node>
      <node id="7723">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData_2D_K.H</label>
        <link refid="AMReX__InterpBndryData__2D__K_8H"/>
      </node>
      <node id="7577">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.H</label>
        <link refid="AMReX__StateData_8H"/>
        <childnode refid="7488" relation="include">
        </childnode>
        <childnode refid="7492" relation="include">
        </childnode>
        <childnode refid="7578" relation="include">
        </childnode>
        <childnode refid="7496" relation="include">
        </childnode>
      </node>
      <node id="7621">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_CGSolver.H</label>
        <link refid="AMReX__CGSolver_8H"/>
        <childnode refid="7622" relation="include">
        </childnode>
        <childnode refid="7623" relation="include">
        </childnode>
        <childnode refid="7624" relation="include">
        </childnode>
      </node>
      <node id="7615">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap2.cpp</label>
        <link refid="AMReX__HypreABecLap2_8cpp"/>
      </node>
      <node id="7749">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap_K.H</label>
        <link refid="AMReX__MLEBABecLap__K_8H"/>
        <childnode refid="7526" relation="include">
        </childnode>
        <childnode refid="7750" relation="include">
        </childnode>
        <childnode refid="7751" relation="include">
        </childnode>
      </node>
      <node id="7645">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim.cpp</label>
        <link refid="AMReX__algoim_8cpp"/>
      </node>
      <node id="7585">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.cpp</label>
        <link refid="AMReX__ForkJoin_8cpp"/>
      </node>
      <node id="7555">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.H</label>
        <link refid="AMReX__MLTensorOp_8H"/>
        <childnode refid="7530" relation="include">
        </childnode>
      </node>
      <node id="7540">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="7487" relation="include">
        </childnode>
        <childnode refid="7541" relation="include">
        </childnode>
        <childnode refid="7680" relation="include">
        </childnode>
        <childnode refid="7542" relation="include">
        </childnode>
        <childnode refid="7681" relation="include">
        </childnode>
        <childnode refid="7573" relation="include">
        </childnode>
        <childnode refid="7682" relation="include">
        </childnode>
        <childnode refid="7685" relation="include">
        </childnode>
        <childnode refid="7650" relation="include">
        </childnode>
        <childnode refid="7686" relation="include">
        </childnode>
      </node>
      <node id="7687">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="7688" relation="include">
        </childnode>
        <childnode refid="7689" relation="include">
        </childnode>
        <childnode refid="7690" relation="include">
        </childnode>
        <childnode refid="7692" relation="include">
        </childnode>
        <childnode refid="7693" relation="include">
        </childnode>
        <childnode refid="7694" relation="include">
        </childnode>
        <childnode refid="7696" relation="include">
        </childnode>
        <childnode refid="7697" relation="include">
        </childnode>
        <childnode refid="7698" relation="include">
        </childnode>
        <childnode refid="7699" relation="include">
        </childnode>
        <childnode refid="7700" relation="include">
        </childnode>
        <childnode refid="7583" relation="include">
        </childnode>
        <childnode refid="7702" relation="include">
        </childnode>
        <childnode refid="7703" relation="include">
        </childnode>
        <childnode refid="7704" relation="include">
        </childnode>
        <childnode refid="7705" relation="include">
        </childnode>
        <childnode refid="7706" relation="include">
        </childnode>
        <childnode refid="7707" relation="include">
        </childnode>
        <childnode refid="7681" relation="include">
        </childnode>
        <childnode refid="7709" relation="include">
        </childnode>
        <childnode refid="7573" relation="include">
        </childnode>
        <childnode refid="7717" relation="include">
        </childnode>
        <childnode refid="7718" relation="include">
        </childnode>
        <childnode refid="7719" relation="include">
        </childnode>
        <childnode refid="7721" relation="include">
        </childnode>
        <childnode refid="7682" relation="include">
        </childnode>
        <childnode refid="7602" relation="include">
        </childnode>
        <childnode refid="7604" relation="include">
        </childnode>
        <childnode refid="7722" relation="include">
        </childnode>
        <childnode refid="7723" relation="include">
        </childnode>
        <childnode refid="7724" relation="include">
        </childnode>
        <childnode refid="7726" relation="include">
        </childnode>
        <childnode refid="7728" relation="include">
        </childnode>
        <childnode refid="7729" relation="include">
        </childnode>
        <childnode refid="7730" relation="include">
        </childnode>
        <childnode refid="7732" relation="include">
        </childnode>
        <childnode refid="7650" relation="include">
        </childnode>
        <childnode refid="7735" relation="include">
        </childnode>
        <childnode refid="7738" relation="include">
        </childnode>
        <childnode refid="7739" relation="include">
        </childnode>
        <childnode refid="7669" relation="include">
        </childnode>
        <childnode refid="7668" relation="include">
        </childnode>
        <childnode refid="7670" relation="include">
        </childnode>
        <childnode refid="7661" relation="include">
        </childnode>
        <childnode refid="7672" relation="include">
        </childnode>
        <childnode refid="7674" relation="include">
        </childnode>
        <childnode refid="7675" relation="include">
        </childnode>
        <childnode refid="7632" relation="include">
        </childnode>
        <childnode refid="7741" relation="include">
        </childnode>
        <childnode refid="7742" relation="include">
        </childnode>
        <childnode refid="7743" relation="include">
        </childnode>
        <childnode refid="7745" relation="include">
        </childnode>
        <childnode refid="7746" relation="include">
        </childnode>
        <childnode refid="7747" relation="include">
        </childnode>
        <childnode refid="7748" relation="include">
        </childnode>
        <childnode refid="7755" relation="include">
        </childnode>
        <childnode refid="7756" relation="include">
        </childnode>
        <childnode refid="7754" relation="include">
        </childnode>
        <childnode refid="7533" relation="include">
        </childnode>
        <childnode refid="7757" relation="include">
        </childnode>
        <childnode refid="7536" relation="include">
        </childnode>
      </node>
      <node id="7541">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="7542" relation="include">
        </childnode>
        <childnode refid="7545" relation="include">
        </childnode>
        <childnode refid="7573" relation="include">
        </childnode>
        <childnode refid="7679" relation="include">
        </childnode>
      </node>
      <node id="7744">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MG_K.H</label>
        <link refid="AMReX__MG__K_8H"/>
        <childnode refid="7525" relation="include">
        </childnode>
        <childnode refid="7526" relation="include">
        </childnode>
      </node>
      <node id="7521">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp</label>
        <link refid="AMReX__HypreNodeLap_8cpp"/>
      </node>
      <node id="7516">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_iMultiFab.cpp</label>
        <link refid="AMReX__iMultiFab_8cpp"/>
      </node>
      <node id="7514">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFabUtility.H</label>
        <link refid="AMReX__BaseFabUtility_8H"/>
        <childnode refid="7515" relation="include">
        </childnode>
      </node>
      <node id="7736">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFArrayBox.cpp</label>
        <link refid="AMReX__EBFArrayBox_8cpp"/>
      </node>
      <node id="7561">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.H</label>
        <link refid="AMReX__MLPoisson_8H"/>
        <childnode refid="7557" relation="include">
        </childnode>
      </node>
      <node id="7559">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.H</label>
        <link refid="AMReX__MLEBABecLap_8H"/>
        <childnode refid="7526" relation="include">
        </childnode>
        <childnode refid="7560" relation="include">
        </childnode>
      </node>
      <node id="7511">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBAmrUtil.cpp</label>
        <link refid="AMReX__EBAmrUtil_8cpp"/>
      </node>
      <node id="7668">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfStats.H</label>
        <link refid="AMReX__BLProfStats_8H"/>
        <childnode refid="7669" relation="include">
        </childnode>
        <childnode refid="7670" relation="include">
        </childnode>
        <childnode refid="7671" relation="include">
        </childnode>
        <childnode refid="7674" relation="include">
        </childnode>
        <childnode refid="7675" relation="include">
        </childnode>
      </node>
      <node id="7497">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H</label>
        <link refid="AMReX__AmrDataAdaptor_8H"/>
        <childnode refid="7496" relation="include">
        </childnode>
      </node>
      <node id="7684">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_NFiles.cpp</label>
        <link refid="AMReX__NFiles_8cpp"/>
      </node>
      <node id="7626">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG4/AMReX_ABec2.cpp</label>
        <link refid="AMReX__ABec2_8cpp"/>
      </node>
      <node id="7639">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.cpp</label>
        <link refid="AMReX__MCMultiGrid_8cpp"/>
      </node>
      <node id="7761">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_IArrayBox.cpp</label>
        <link refid="AMReX__IArrayBox_8cpp"/>
      </node>
      <node id="7738">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBMultiFabUtil_C.H</label>
        <link refid="AMReX__EBMultiFabUtil__C_8H"/>
        <childnode refid="7519" relation="include">
        </childnode>
      </node>
      <node id="7672">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_CommProfStats.cpp</label>
        <link refid="AMReX__CommProfStats_8cpp"/>
      </node>
      <node id="7673">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_RegionsProfStats.cpp</label>
        <link refid="AMReX__RegionsProfStats_8cpp"/>
      </node>
      <node id="7605">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData.cpp</label>
        <link refid="AMReX__InterpBndryData_8cpp"/>
      </node>
      <node id="7689">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxReg_2D_C.H</label>
        <link refid="AMReX__FluxReg__2D__C_8H"/>
      </node>
      <node id="7492">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H</label>
        <link refid="AMReX__AmrLevel_8H"/>
        <childnode refid="7488" relation="include">
        </childnode>
        <childnode refid="7493" relation="include">
        </childnode>
        <childnode refid="7494" relation="include">
        </childnode>
        <childnode refid="7495" relation="include">
        </childnode>
        <childnode refid="7496" relation="include">
        </childnode>
      </node>
      <node id="7646">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H</label>
        <link refid="AMReX__algoim__K_8H"/>
        <childnode refid="7645" relation="include">
        </childnode>
      </node>
      <node id="7545">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFab.cpp</label>
        <link refid="AMReX__MultiFab_8cpp"/>
      </node>
      <node id="7635">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_DivVis.H</label>
        <link refid="AMReX__DivVis_8H"/>
        <childnode refid="7636" relation="include">
        </childnode>
      </node>
      <node id="7566">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.H</label>
        <link refid="AMReX__MLNodeLinOp_8H"/>
        <childnode refid="7567" relation="include">
        </childnode>
        <childnode refid="7568" relation="include">
        </childnode>
      </node>
      <node id="7591">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateDescriptor.H</label>
        <link refid="AMReX__StateDescriptor_8H"/>
        <childnode refid="7492" relation="include">
        </childnode>
        <childnode refid="7592" relation="include">
        </childnode>
        <childnode refid="7578" relation="include">
        </childnode>
        <childnode refid="7577" relation="include">
        </childnode>
        <childnode refid="7593" relation="include">
        </childnode>
      </node>
      <node id="7708">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_C.H</label>
        <link refid="AMReX__FilCC__C_8H"/>
        <childnode refid="7590" relation="include">
        </childnode>
      </node>
      <node id="7600">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryRegister.H</label>
        <link refid="AMReX__BndryRegister_8H"/>
        <childnode refid="7601" relation="include">
        </childnode>
        <childnode refid="7602" relation="include">
        </childnode>
        <childnode refid="7642" relation="include">
        </childnode>
        <childnode refid="7550" relation="include">
        </childnode>
      </node>
      <node id="7526">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.cpp</label>
        <link refid="AMReX__MLEBABecLap_8cpp"/>
      </node>
      <node id="7644">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim.H</label>
        <link refid="AMReX__algoim_8H"/>
        <childnode refid="7645" relation="include">
        </childnode>
        <childnode refid="7646" relation="include">
        </childnode>
      </node>
      <node id="7510">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBAmrUtil.H</label>
        <link refid="AMReX__EBAmrUtil_8H"/>
        <childnode refid="7503" relation="include">
        </childnode>
        <childnode refid="7511" relation="include">
        </childnode>
      </node>
      <node id="7506">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8H"/>
        <childnode refid="7507" relation="include">
        </childnode>
      </node>
      <node id="7587">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MFCopyDescriptor.H</label>
        <link refid="AMReX__MFCopyDescriptor_8H"/>
        <childnode refid="7577" relation="include">
        </childnode>
        <childnode refid="7588" relation="include">
        </childnode>
        <childnode refid="7589" relation="include">
        </childnode>
      </node>
      <node id="7640">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCLinOp.cpp</label>
        <link refid="AMReX__MCLinOp_8cpp"/>
      </node>
      <node id="7755">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG_K.H</label>
        <link refid="AMReX__MLMG__K_8H"/>
        <childnode refid="7528" relation="include">
        </childnode>
      </node>
      <node id="7716">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleUtil.cpp</label>
        <link refid="AMReX__ParticleUtil_8cpp"/>
      </node>
      <node id="7628">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG4/AMReX_ABec4.cpp</label>
        <link refid="AMReX__ABec4_8cpp"/>
      </node>
      <node id="7633">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCInterpBndryData.cpp</label>
        <link refid="AMReX__MCInterpBndryData_8cpp"/>
      </node>
      <node id="7490">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrCore.H</label>
        <link refid="AMReX__AmrCore_8H"/>
        <childnode refid="7491" relation="include">
        </childnode>
        <childnode refid="7499" relation="include">
        </childnode>
        <childnode refid="7500" relation="include">
        </childnode>
        <childnode refid="7502" relation="include">
        </childnode>
        <childnode refid="7503" relation="include">
        </childnode>
        <childnode refid="7504" relation="include">
        </childnode>
      </node>
      <node id="7665">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/Conduit/AMReX_Conduit_Blueprint.cpp</label>
        <link refid="AMReX__Conduit__Blueprint_8cpp"/>
      </node>
      <node id="7583">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.cpp</label>
        <link refid="AMReX__DistributionMapping_8cpp"/>
      </node>
      <node id="7760">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_IArrayBox.H</label>
        <link refid="AMReX__IArrayBox_8H"/>
        <childnode refid="7761" relation="include">
        </childnode>
        <childnode refid="7542" relation="include">
        </childnode>
        <childnode refid="7717" relation="include">
        </childnode>
        <childnode refid="7718" relation="include">
        </childnode>
        <childnode refid="7719" relation="include">
        </childnode>
        <childnode refid="7721" relation="include">
        </childnode>
        <childnode refid="7722" relation="include">
        </childnode>
        <childnode refid="7723" relation="include">
        </childnode>
        <childnode refid="7724" relation="include">
        </childnode>
        <childnode refid="7651" relation="include">
        </childnode>
      </node>
      <node id="7662">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.cpp</label>
        <link refid="AMReX__BLWritePlotFile_8cpp"/>
      </node>
      <node id="7753">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_3D_K.H</label>
        <link refid="AMReX__MLTensor__3D__K_8H"/>
        <childnode refid="7754" relation="include">
        </childnode>
      </node>
      <node id="7537">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticles.H</label>
        <link refid="AMReX__TracerParticles_8H"/>
        <childnode refid="7501" relation="include">
        </childnode>
        <childnode refid="7538" relation="include">
        </childnode>
      </node>
      <node id="7763">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBCellFlag.H</label>
        <link refid="AMReX__EBCellFlag_8H"/>
        <childnode refid="7732" relation="include">
        </childnode>
        <childnode refid="7647" relation="include">
        </childnode>
        <childnode refid="7653" relation="include">
        </childnode>
        <childnode refid="7569" relation="include">
        </childnode>
        <childnode refid="7518" relation="include">
        </childnode>
        <childnode refid="7511" relation="include">
        </childnode>
        <childnode refid="7764" relation="include">
        </childnode>
        <childnode refid="7765" relation="include">
        </childnode>
        <childnode refid="7650" relation="include">
        </childnode>
        <childnode refid="7736" relation="include">
        </childnode>
        <childnode refid="7548" relation="include">
        </childnode>
        <childnode refid="7737" relation="include">
        </childnode>
        <childnode refid="7519" relation="include">
        </childnode>
        <childnode refid="7738" relation="include">
        </childnode>
        <childnode refid="7686" relation="include">
        </childnode>
      </node>
      <node id="7553">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.H</label>
        <link refid="AMReX__MLABecLaplacian_8H"/>
        <childnode refid="7554" relation="include">
        </childnode>
        <childnode refid="7523" relation="include">
        </childnode>
        <childnode refid="7526" relation="include">
        </childnode>
        <childnode refid="7528" relation="include">
        </childnode>
        <childnode refid="7555" relation="include">
        </childnode>
      </node>
      <node id="7533">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.H</label>
        <link refid="AMReX__LoadBalanceKD_8H"/>
        <childnode refid="7534" relation="include">
        </childnode>
      </node>
      <node id="7683">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_NFiles.H</label>
        <link refid="AMReX__NFiles_8H"/>
        <childnode refid="7684" relation="include">
        </childnode>
        <childnode refid="7679" relation="include">
        </childnode>
        <childnode refid="7532" relation="include">
        </childnode>
      </node>
      <node id="7597">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileUtil.H</label>
        <link refid="AMReX__PlotFileUtil_8H"/>
        <childnode refid="7488" relation="include">
        </childnode>
        <childnode refid="7598" relation="include">
        </childnode>
        <childnode refid="7503" relation="include">
        </childnode>
      </node>
      <node id="7765">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBDataCollection.H</label>
        <link refid="AMReX__EBDataCollection_8H"/>
        <childnode refid="7652" relation="include">
        </childnode>
        <childnode refid="7766" relation="include">
        </childnode>
      </node>
      <node id="7580">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FillPatchUtil.cpp</label>
        <link refid="AMReX__FillPatchUtil_8cpp"/>
      </node>
      <node id="7569">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_levelset.H</label>
        <link refid="AMReX__EB__levelset_8H"/>
        <childnode refid="7518" relation="include">
        </childnode>
        <childnode refid="7502" relation="include">
        </childnode>
        <childnode refid="7504" relation="include">
        </childnode>
      </node>
      <node id="7748">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp_K.H</label>
        <link refid="AMReX__MLLinOp__K_8H"/>
        <childnode refid="7525" relation="include">
        </childnode>
        <childnode refid="7526" relation="include">
        </childnode>
        <childnode refid="7749" relation="include">
        </childnode>
        <childnode refid="7752" relation="include">
        </childnode>
        <childnode refid="7753" relation="include">
        </childnode>
      </node>
      <node id="7607">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.cpp</label>
        <link refid="AMReX__MacBndry_8cpp"/>
      </node>
      <node id="7695">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interp_C.H</label>
        <link refid="AMReX__Interp__C_8H"/>
        <childnode refid="7696" relation="include">
        </childnode>
      </node>
      <node id="7724">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData_3D_K.H</label>
        <link refid="AMReX__InterpBndryData__3D__K_8H"/>
        <childnode refid="7725" relation="include">
        </childnode>
      </node>
      <node id="7712">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_InSituUtils.H</label>
        <link refid="AMReX__InSituUtils_8H"/>
        <childnode refid="7496" relation="include">
        </childnode>
        <childnode refid="7507" relation="include">
        </childnode>
        <childnode refid="7713" relation="include">
        </childnode>
      </node>
      <node id="7685">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H</label>
        <link refid="AMReX__MultiMask_8H"/>
        <childnode refid="7602" relation="include">
        </childnode>
        <childnode refid="7612" relation="include">
        </childnode>
      </node>
      <node id="7664">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/Conduit/AMReX_Conduit_Blueprint.H</label>
        <link refid="AMReX__Conduit__Blueprint_8H"/>
        <childnode refid="7665" relation="include">
        </childnode>
      </node>
      <node id="7647">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H</label>
        <link refid="AMReX__EB2__Level_8H"/>
        <childnode refid="7648" relation="include">
        </childnode>
        <childnode refid="7651" relation="include">
        </childnode>
        <childnode refid="7652" relation="include">
        </childnode>
        <childnode refid="7650" relation="include">
        </childnode>
      </node>
      <node id="7594">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.cpp</label>
        <link refid="AMReX__PhysBCFunct_8cpp"/>
      </node>
      <node id="7627">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG4/AMReX_ABec4.H</label>
        <link refid="AMReX__ABec4_8H"/>
        <childnode refid="7628" relation="include">
        </childnode>
      </node>
      <node id="7494">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AsyncFillPatch.cpp</label>
        <link refid="AMReX__AsyncFillPatch_8cpp"/>
      </node>
      <node id="7616">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H</label>
        <link refid="AMReX__PETSc_8H"/>
        <childnode refid="7617" relation="include">
        </childnode>
      </node>
      <node id="7539">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BoxArray.cpp</label>
        <link refid="AMReX__BoxArray_8cpp"/>
      </node>
      <node id="7520">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H</label>
        <link refid="AMReX__HypreNodeLap_8H"/>
        <childnode refid="7521" relation="include">
        </childnode>
      </node>
      <node id="7726">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_Mask.H</label>
        <link refid="AMReX__Mask_8H"/>
        <childnode refid="7727" relation="include">
        </childnode>
        <childnode refid="7685" relation="include">
        </childnode>
        <childnode refid="7632" relation="include">
        </childnode>
      </node>
      <node id="7500">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrParGDB.H</label>
        <link refid="AMReX__AmrParGDB_8H"/>
        <childnode refid="7501" relation="include">
        </childnode>
      </node>
      <node id="7632">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCInterpBndryData.H</label>
        <link refid="AMReX__MCInterpBndryData_8H"/>
        <childnode refid="7633" relation="include">
        </childnode>
      </node>
      <node id="7524">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.cpp</label>
        <link refid="AMReX__MLALaplacian_8cpp"/>
      </node>
      <node id="7532">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particles.H</label>
        <link refid="AMReX__Particles_8H"/>
        <childnode refid="7501" relation="include">
        </childnode>
        <childnode refid="7533" relation="include">
        </childnode>
        <childnode refid="7535" relation="include">
        </childnode>
        <childnode refid="7531" relation="include">
        </childnode>
        <childnode refid="7536" relation="include">
        </childnode>
        <childnode refid="7537" relation="include">
        </childnode>
      </node>
      <node id="7493">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.cpp</label>
        <link refid="AMReX__AmrLevel_8cpp"/>
      </node>
      <node id="7711">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuLaunch.cpp</label>
        <link refid="AMReX__GpuLaunch_8cpp"/>
      </node>
      <node id="7681">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MFIter.cpp</label>
        <link refid="AMReX__MFIter_8cpp"/>
      </node>
      <node id="7756">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson_K.H</label>
        <link refid="AMReX__MLPoisson__K_8H"/>
        <childnode refid="7557" relation="include">
        </childnode>
      </node>
      <node id="7707">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_3D_C.H</label>
        <link refid="AMReX__FilCC__3D__C_8H"/>
        <childnode refid="7708" relation="include">
        </childnode>
      </node>
      <node id="7743">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MG_3D_K.H</label>
        <link refid="AMReX__MG__3D__K_8H"/>
        <childnode refid="7744" relation="include">
        </childnode>
      </node>
      <node id="7746">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLALap_K.H</label>
        <link refid="AMReX__MLALap__K_8H"/>
        <childnode refid="7524" relation="include">
        </childnode>
      </node>
      <node id="7656">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBMultiFabUtil.H</label>
        <link refid="AMReX__EBMultiFabUtil_8H"/>
        <childnode refid="7519" relation="include">
        </childnode>
        <childnode refid="7526" relation="include">
        </childnode>
        <childnode refid="7527" relation="include">
        </childnode>
      </node>
      <node id="7751">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_3D_K.H</label>
        <link refid="AMReX__MLEBTensor__3D__K_8H"/>
        <childnode refid="7747" relation="include">
        </childnode>
      </node>
      <node id="7762">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_GeometryShop.H</label>
        <link refid="AMReX__EB2__GeometryShop_8H"/>
        <childnode refid="7649" relation="include">
        </childnode>
        <childnode refid="7648" relation="include">
        </childnode>
        <childnode refid="7569" relation="include">
        </childnode>
      </node>
      <node id="7680">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FACopyDescriptor.H</label>
        <link refid="AMReX__FACopyDescriptor_8H"/>
        <childnode refid="7587" relation="include">
        </childnode>
      </node>
      <node id="7590">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H</label>
        <link refid="AMReX__PhysBCFunct_8H"/>
        <childnode refid="7577" relation="include">
        </childnode>
        <childnode refid="7591" relation="include">
        </childnode>
        <childnode refid="7579" relation="include">
        </childnode>
        <childnode refid="7582" relation="include">
        </childnode>
        <childnode refid="7594" relation="include">
        </childnode>
        <childnode refid="7503" relation="include">
        </childnode>
      </node>
      <node id="7618">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LinOp.H</label>
        <link refid="AMReX__LinOp_8H"/>
        <childnode refid="7619" relation="include">
        </childnode>
        <childnode refid="7621" relation="include">
        </childnode>
        <childnode refid="7629" relation="include">
        </childnode>
        <childnode refid="7631" relation="include">
        </childnode>
        <childnode refid="7624" relation="include">
        </childnode>
        <childnode refid="7625" relation="include">
        </childnode>
        <childnode refid="7627" relation="include">
        </childnode>
      </node>
      <node id="7582">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCUtil.cpp</label>
        <link refid="AMReX__BCUtil_8cpp"/>
      </node>
      <node id="7538">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticles.cpp</label>
        <link refid="AMReX__TracerParticles_8cpp"/>
      </node>
      <node id="7698">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_COORDSYS_1D_C.H</label>
        <link refid="AMReX__COORDSYS__1D__C_8H"/>
      </node>
      <node id="7690">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxReg_3D_C.H</label>
        <link refid="AMReX__FluxReg__3D__C_8H"/>
        <childnode refid="7691" relation="include">
        </childnode>
      </node>
      <node id="7488">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Amr.cpp</label>
        <link refid="AMReX__Amr_8cpp"/>
      </node>
      <node id="7619">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABecLaplacian.H</label>
        <link refid="AMReX__ABecLaplacian_8H"/>
        <childnode refid="7620" relation="include">
        </childnode>
        <childnode refid="7621" relation="include">
        </childnode>
        <childnode refid="7625" relation="include">
        </childnode>
      </node>
      <node id="7671">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfUtilities.H</label>
        <link refid="AMReX__BLProfUtilities_8H"/>
        <childnode refid="7669" relation="include">
        </childnode>
        <childnode refid="7670" relation="include">
        </childnode>
        <childnode refid="7672" relation="include">
        </childnode>
        <childnode refid="7673" relation="include">
        </childnode>
      </node>
      <node id="7740">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_XYPlotDataList.cpp</label>
        <link refid="AMReX__XYPlotDataList_8cpp"/>
      </node>
      <node id="7491">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Amr.H</label>
        <link refid="AMReX__Amr_8H"/>
        <childnode refid="7488" relation="include">
        </childnode>
        <childnode refid="7492" relation="include">
        </childnode>
        <childnode refid="7495" relation="include">
        </childnode>
        <childnode refid="7497" relation="include">
        </childnode>
        <childnode refid="7498" relation="include">
        </childnode>
      </node>
      <node id="7759">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H</label>
        <link refid="AMReX__ParticleTile_8H"/>
        <childnode refid="7532" relation="include">
        </childnode>
      </node>
      <node id="7643">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_FabSet.cpp</label>
        <link refid="AMReX__FabSet_8cpp"/>
      </node>
      <node id="7584">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H</label>
        <link refid="AMReX__ForkJoin_8H"/>
        <childnode refid="7585" relation="include">
        </childnode>
      </node>
      <node id="7648">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H</label>
        <link refid="AMReX__EB2_8H"/>
        <childnode refid="7645" relation="include">
        </childnode>
        <childnode refid="7649" relation="include">
        </childnode>
        <childnode refid="7569" relation="include">
        </childnode>
        <childnode refid="7518" relation="include">
        </childnode>
        <childnode refid="7650" relation="include">
        </childnode>
      </node>
      <node id="7696">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interpolater.cpp</label>
        <link refid="AMReX__Interpolater_8cpp"/>
      </node>
      <node id="7703">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabConv.cpp</label>
        <link refid="AMReX__FabConv_8cpp"/>
      </node>
      <node id="7676">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParGDB.H</label>
        <link refid="AMReX__ParGDB_8H"/>
        <childnode refid="7500" relation="include">
        </childnode>
        <childnode refid="7532" relation="include">
        </childnode>
      </node>
      <node id="7575">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AuxBoundaryData.cpp</label>
        <link refid="AMReX__AuxBoundaryData_8cpp"/>
      </node>
      <node id="7623">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_MultiGrid.cpp</label>
        <link refid="AMReX__MultiGrid_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structamrex_1_1FabView" prot="public">amrex::FabView</innerclass>
    <innerclass refid="structamrex_1_1SrcComp" prot="public">amrex::SrcComp</innerclass>
    <innerclass refid="structamrex_1_1DestComp" prot="public">amrex::DestComp</innerclass>
    <innerclass refid="structamrex_1_1NumComps" prot="public">amrex::NumComps</innerclass>
    <innerclass refid="structamrex_1_1DataAllocator" prot="public">amrex::DataAllocator</innerclass>
    <innerclass refid="structamrex_1_1DataDeleter" prot="public">amrex::DataDeleter</innerclass>
    <innerclass refid="classamrex_1_1BaseFab" prot="public">amrex::BaseFab</innerclass>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_BASEFAB_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_BASEFAB_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;climits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;omp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Extension_8H" kindref="compound">AMReX_Extension.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__BLassert_8H" kindref="compound">AMReX_BLassert.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Array_8H" kindref="compound">AMReX_Array.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Box_8H" kindref="compound">AMReX_Box.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Loop_8H" kindref="compound">AMReX_Loop.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__BoxList_8H" kindref="compound">AMReX_BoxList.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__BArena_8H" kindref="compound">AMReX_BArena.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__CArena_8H" kindref="compound">AMReX_CArena.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__REAL_8H" kindref="compound">AMReX_REAL.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__BLProfiler_8H" kindref="compound">AMReX_BLProfiler.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__BoxIterator_8H" kindref="compound">AMReX_BoxIterator.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MakeType_8H" kindref="compound">AMReX_MakeType.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Utility_8H" kindref="compound">AMReX_Utility.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Gpu_8H" kindref="compound">AMReX_Gpu.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_PERILLA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;LocalConnection.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;RemoteConnection.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1acb97f6f7553a0dbf1813a0faac636b90" kindref="member">private_total_bytes_allocated_in_fabs</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3c18b97e0d09397c5895cf1c3bca7282" kindref="member">private_total_bytes_allocated_in_fabs_hwm</ref>;<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a583d878122b14b28a3ba6bc38f5e770e" kindref="member">private_total_cells_allocated_in_fabs</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a8b2e74e23eb671db74129bdc374b9d73" kindref="member">private_total_cells_allocated_in_fabs_hwm</ref>;<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>threadprivate(private_total_bytes_allocated_in_fabs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>threadprivate(private_total_bytes_allocated_in_fabs_hwm)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>threadprivate(private_total_cells_allocated_in_fabs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>threadprivate(private_total_cells_allocated_in_fabs_hwm)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a5a60914d2c1baa07ac74426c8f8a38c1" kindref="member">TotalBytesAllocatedInFabs</ref><sp/>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad5d82f42b797fe16c6e2890c8a2fda73" kindref="member">TotalBytesAllocatedInFabsHWM</ref><sp/>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1abfb3a95e8312dd54fdd0263b0ebe5516" kindref="member">TotalCellsAllocatedInFabs</ref><sp/>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a328f8347f90603902734bad0b343a763" kindref="member">TotalCellsAllocatedInFabsHWM</ref><sp/>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a765c5cc6e670eb707740d51c99e7b35e" kindref="member">ResetTotalBytesAllocatedInFabsHWM</ref><sp/>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a4fbfaf2aadcc46966315c9edc993fe9a" kindref="member">update_fab_stats</ref><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>s,<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>szt)<sp/>noexcept;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a652bd22fb8cfcdfeaa4ac62e81a41fe6" kindref="member">BaseFab_Initialize</ref><sp/>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a67b24cef9df62e8cced041445b239e86" kindref="member">BaseFab_Finalize</ref><sp/>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">template<sp/>&lt;typename<sp/>T&gt;</highlight></codeline>
<codeline lineno="62" refid="structamrex_1_1FabView" refkind="compound"><highlight class="normal">struct<sp/><ref refid="structamrex_1_1FabView" kindref="compound">FabView</ref></highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64" refid="structamrex_1_1FabView_1aea028eb9002ce63588ec2b883da234fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/><ref refid="structamrex_1_1FabView_1aea028eb9002ce63588ec2b883da234fb" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="65" refid="structamrex_1_1FabView_1a83dcf0dea90d243a51443d47bb9271db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabView_1a83dcf0dea90d243a51443d47bb9271db" kindref="member">jstride</ref>;</highlight></codeline>
<codeline lineno="66" refid="structamrex_1_1FabView_1aa88c0689af62b9174fa955acf31d614e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabView_1aa88c0689af62b9174fa955acf31d614e" kindref="member">kstride</ref>;</highlight></codeline>
<codeline lineno="67" refid="structamrex_1_1FabView_1a475f60b030e6fa7b472ce9408440e5f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabView_1a475f60b030e6fa7b472ce9408440e5f3" kindref="member">nstride</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iend,<sp/>jend,<sp/>kend,<sp/>nend;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="72" refid="structamrex_1_1FabView_1a24fd56ed3c017325d0b30b1348c050ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref><sp/>T&amp;<sp/>operator()<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n=0)<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(i&lt;iend<sp/>&amp;&amp;<sp/>j&lt;jend<sp/>&amp;&amp;<sp/>k&lt;kend<sp/>&amp;&amp;<sp/>n&lt;nend);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(p<sp/>+<sp/>(i+j*jstride+k*kstride+n*nstride));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="structamrex_1_1SrcComp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="82" refid="structamrex_1_1SrcComp_1a82862a75a1e13a197c26cb74c9aa9ff9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1SrcComp_1a82862a75a1e13a197c26cb74c9aa9ff9" kindref="member">SrcComp</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ai)<sp/>noexcept<sp/>:<sp/><ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>(ai)<sp/>{}</highlight></codeline>
<codeline lineno="83" refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="structamrex_1_1DestComp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="88" refid="structamrex_1_1DestComp_1aec058b399a7b244f3d848d3c128358fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DestComp_1aec058b399a7b244f3d848d3c128358fd" kindref="member">DestComp</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ai)<sp/>noexcept<sp/>:<sp/><ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>(ai)<sp/>{}</highlight></codeline>
<codeline lineno="89" refid="structamrex_1_1DestComp_1ab31802a9ed04a354ae054227b10ec7e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DestComp_1ab31802a9ed04a354ae054227b10ec7e0" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="structamrex_1_1NumComps" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="94" refid="structamrex_1_1NumComps_1a810ccab9fa653cd2a504f2539eaa4c1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NumComps_1a810ccab9fa653cd2a504f2539eaa4c1f" kindref="member">NumComps</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>an)<sp/>noexcept<sp/>:<sp/>n(an)<sp/>{}</highlight></codeline>
<codeline lineno="95" refid="structamrex_1_1NumComps_1a51d8b50d57ee8a52833c414ae13a5381" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NumComps_1a51d8b50d57ee8a52833c414ae13a5381" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;T&gt;</ref></highlight></codeline>
<codeline lineno="101" refid="namespaceamrex_1a23fa77892c9168a73ef0d653ddd550a0" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a23fa77892c9168a73ef0d653ddd550a0" kindref="member">makeArray4</ref><sp/>(T*<sp/>p,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;T&gt;</ref>{p,<sp/><ref refid="namespaceamrex_1a43103621a410a27f2e8b9607f4ae6f34" kindref="member">amrex::begin</ref>(bx),<sp/><ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">amrex::end</ref>(bx),<sp/>ncomp};</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;<sp/>AMREX_IS_TRIVIALLY_DEFAULT_CONSTRUCTIBLE(T)&gt;::type</highlight></codeline>
<codeline lineno="153" refid="namespaceamrex_1aa01774de05dd955d25a1e05206821ecd" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1aa01774de05dd955d25a1e05206821ecd" kindref="member">placementNew</ref><sp/>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ptr,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref><sp/>&lt;<sp/>n;<sp/>++<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(ptr+<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>)<sp/>T;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;!AMREX_IS_TRIVIALLY_DEFAULT_CONSTRUCTIBLE(T)&gt;::type</highlight></codeline>
<codeline lineno="162" refid="namespaceamrex_1a89cfab1d62613c97de6191541059ad8b" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1aa01774de05dd955d25a1e05206821ecd" kindref="member">placementNew</ref><sp/>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ptr,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a98b67baa1382f64a8b07abb4c2edbf92" kindref="member">AMREX_HOST_DEVICE_FOR_1D</ref><sp/>(<sp/>n,<sp/><ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(ptr+<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>)<sp/>T;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="structamrex_1_1DataAllocator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1DataAllocator" kindref="compound">DataAllocator</ref><sp/>{</highlight></codeline>
<codeline lineno="171" refid="structamrex_1_1DataAllocator_1a901b7f1e68950afc823ebc10c093cb94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref>*<sp/>m_arena<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="174" refid="structamrex_1_1DataAllocator_1a7efc193b557d263444d91cc90c7c7073" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1DataAllocator_1a7efc193b557d263444d91cc90c7c7073" kindref="member">DataAllocator</ref><sp/>()<sp/><sp/>noexcept<sp/>:<sp/>m_arena(</highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="177" refid="structamrex_1_1DataAllocator_1a1cbea797e47f9d7448b1f574beb24d8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1DataAllocator_1a1cbea797e47f9d7448b1f574beb24d8b" kindref="member">DataAllocator</ref><sp/>(<ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref>*<sp/>ar)<sp/>noexcept<sp/>:<sp/>m_arena(ar)<sp/>{}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="structamrex_1_1DataAllocator_1adcabda73bbd0120b08dbb2cda22a6427" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structamrex_1_1DataAllocator_1adcabda73bbd0120b08dbb2cda22a6427" kindref="member">alloc</ref><sp/>(std::size_t<sp/>sz)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arena()-&gt;alloc(sz);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="structamrex_1_1DataAllocator_1a5fa328945c30133a9b9c7f93ccf6e78f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataAllocator_1a5fa328945c30133a9b9c7f93ccf6e78f" kindref="member">free</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pt)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arena()-&gt;free(pt);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="structamrex_1_1DataAllocator_1a477a75a5d73137b29f1a6ddf31af40f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref>*<sp/><ref refid="structamrex_1_1DataAllocator_1a477a75a5d73137b29f1a6ddf31af40f7" kindref="member">arena</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_arena)<sp/>?<sp/>m_arena<sp/>:<sp/><ref refid="namespaceamrex_1ae3d1414946b992f39ca41f135f12a0d1" kindref="member">The_Arena</ref>();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal">};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="structamrex_1_1DataDeleter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1DataDeleter" kindref="compound">DataDeleter</ref><sp/>{</highlight></codeline>
<codeline lineno="193" refid="structamrex_1_1DataDeleter_1a3f56660ebd06ba11f5c873d99b3e899f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref>*<sp/>m_arena<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194" refid="structamrex_1_1DataDeleter_1a6538f3e7403c1630f1f101ce2b8a6e16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1DataDeleter_1a6538f3e7403c1630f1f101ce2b8a6e16" kindref="member">DataDeleter</ref><sp/>()<sp/>noexcept<sp/>:<sp/>m_arena(</highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="195" refid="structamrex_1_1DataDeleter_1a2d435760333c6f0326e928c0f9481a24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1DataDeleter_1a2d435760333c6f0326e928c0f9481a24" kindref="member">DataDeleter</ref><sp/>(<ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref>*<sp/>ar)<sp/>noexcept<sp/>:<sp/>m_arena(ar)<sp/>{}</highlight></codeline>
<codeline lineno="196" refid="structamrex_1_1DataDeleter_1a3daee94cbf63696956b6e349478448dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref>*<sp/><ref refid="structamrex_1_1DataDeleter_1a3daee94cbf63696956b6e349478448dc" kindref="member">arena</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_arena)<sp/>?<sp/>m_arena<sp/>:<sp/><ref refid="namespaceamrex_1ae3d1414946b992f39ca41f135f12a0d1" kindref="member">The_Arena</ref>();<sp/>}</highlight></codeline>
<codeline lineno="197" refid="structamrex_1_1DataDeleter_1a0d66db706137406cce85fd27fa47cb03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pt)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/>arena()-&gt;free(pt);<sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal">};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="201" refid="classamrex_1_1BaseFab" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataAllocator" kindref="compound">DataAllocator</ref></highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="classamrex_1_1BaseFab_1ad961346567674565f67ad873d4461f42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="classamrex_1_1BaseFab_1aac8f37b7bba5334a86bf90b58fb062d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1aac8f37b7bba5334a86bf90b58fb062d8" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref><sp/>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>explicit<sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref><sp/>(<ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref>*<sp/>ar)<sp/>noexcept;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref><sp/>(const<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref>*<sp/>ar);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>explicit<sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref><sp/>(const<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alloc<sp/>=<sp/>true,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared<sp/>=<sp/>false,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref>*<sp/><sp/><sp/><sp/><sp/>ar<sp/>=<sp/></highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref><sp/>(const<sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt;T&gt;&amp;<sp/>rhs,<sp/><ref refid="namespaceamrex_1a0a36c65d0681a832330b2812f16786a6" kindref="member">MakeType</ref><sp/>make_type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref><sp/>(const<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp,<sp/>T*<sp/>p);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>explicit<sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref><sp/>(<ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt;T&gt;<sp/>const&amp;<sp/>a)<sp/>noexcept;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>explicit<sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref><sp/>(<ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt;T&gt;<sp/>const&amp;<sp/>a,<sp/><ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref><sp/>t)<sp/>noexcept;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>explicit<sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref><sp/>(<ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt;T<sp/>const&gt;<sp/>const&amp;<sp/>a)<sp/>noexcept;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>explicit<sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref><sp/>(<ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt;T<sp/>const&gt;<sp/>const&amp;<sp/>a,<sp/><ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref><sp/>t)<sp/>noexcept;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref><sp/>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref><sp/>(const<sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt;T&gt;&amp;<sp/>rhs)<sp/>=<sp/>delete;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt;T&gt;&amp;<sp/>operator=<sp/>(const<sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt;T&gt;&amp;<sp/>rhs)<sp/>=<sp/>delete;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt;T&gt;&amp;<sp/>operator=<sp/>(<ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt;T&gt;&amp;&amp;<sp/>rhs)<sp/>=<sp/>delete;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref><sp/>(<ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt;T&gt;&amp;&amp;<sp/>rhs)<sp/>noexcept;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&amp;<sp/>operator=<sp/>(T)<sp/>noexcept;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a187cdb4f4273fdf9bcad01ac8e3fcc4d" kindref="member">Initialize</ref>();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a8117ae9942e01445ea7fe62d2f190c64" kindref="member">Finalize</ref>();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resize<sp/>(const<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>=<sp/>1);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>U=T,<sp/>class<sp/>=<sp/>typename<sp/>std::enable_if&lt;std::is_trivially_destructible&lt;U&gt;::value&gt;::type<sp/>&gt;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>Elixir<sp/>elixir<sp/>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear<sp/>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Release<sp/>ownership<sp/>of<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;T,<ref refid="structamrex_1_1DataDeleter" kindref="compound">DataDeleter</ref>&gt;<sp/>release<sp/>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="289" refid="classamrex_1_1BaseFab_1a43f0ed693f7f5436621aaf9b27620c56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nBytes<sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;truesize*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T);<sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="classamrex_1_1BaseFab_1a267006cc0717e9dfbcbd22afc1c89d8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="classamrex_1_1BaseFab_1a267006cc0717e9dfbcbd22afc1c89d8c" kindref="member">nBytesOwned</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;ptr_owner)<sp/>?<sp/>nBytes()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="classamrex_1_1BaseFab_1a338937545b28e091b3f9fbf0d133e5e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab_1a338937545b28e091b3f9fbf0d133e5e8" kindref="member">preAllocatable</ref><sp/>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="classamrex_1_1BaseFab_1a7aca6d7e0e588649dcfc0721fecac117" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab_1a7aca6d7e0e588649dcfc0721fecac117" kindref="member">isCopyOMPSafe</ref><sp/>()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="301" refid="classamrex_1_1BaseFab_1ac03d6fdd6bd658196becfefc5b3b93a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="classamrex_1_1BaseFab_1ac03d6fdd6bd658196becfefc5b3b93a8" kindref="member">nBytes</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomps)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bx.numPts()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>ncomps;<sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="306" refid="classamrex_1_1BaseFab_1a7406ec91dc010602121f1492f2d3a748" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab_1a7406ec91dc010602121f1492f2d3a748" kindref="member">nComp</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;nvar;<sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="310" refid="classamrex_1_1BaseFab_1af3ab7e9a7cb47a3eb41ba6a97ab2e798" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="classamrex_1_1BaseFab_1af3ab7e9a7cb47a3eb41ba6a97ab2e798" kindref="member">nCompPtr</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;(this-&gt;nvar);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="316" refid="classamrex_1_1BaseFab_1aaf26c270066d314a52ccdbc5f61ea302" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab_1aaf26c270066d314a52ccdbc5f61ea302" kindref="member">numPts</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;domain.numPts();<sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="320" refid="classamrex_1_1BaseFab_1a2433222c078c64fcb8c01cab64c20566" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab_1a2433222c078c64fcb8c01cab64c20566" kindref="member">size</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;nvar*this-&gt;domain.numPts();<sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="324" refid="classamrex_1_1BaseFab_1a9359cb75c273aa3ab475d21ddc64f8f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><ref refid="classamrex_1_1BaseFab_1a9359cb75c273aa3ab475d21ddc64f8f3" kindref="member">box</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;domain;<sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="331" refid="classamrex_1_1BaseFab_1a56b3de1c8cf4f5747c1219f411783d99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/><ref refid="classamrex_1_1BaseFab_1a56b3de1c8cf4f5747c1219f411783d99" kindref="member">length</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;domain.length();<sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="338" refid="classamrex_1_1BaseFab_1a787a8e1e40a6a13728e44ccbf5a5ec5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/><ref refid="classamrex_1_1BaseFab_1a787a8e1e40a6a13728e44ccbf5a5ec5a" kindref="member">smallEnd</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;domain.smallEnd();<sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="342" refid="classamrex_1_1BaseFab_1a0d29e1227b0a3d2381b35cce869f9e5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/><ref refid="classamrex_1_1BaseFab_1a0d29e1227b0a3d2381b35cce869f9e5f" kindref="member">bigEnd</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;domain.bigEnd();<sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="353" refid="classamrex_1_1BaseFab_1ad138d01fb5a57ad77306a3adbf8026cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="classamrex_1_1BaseFab_1ad138d01fb5a57ad77306a3adbf8026cb" kindref="member">loVect</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;domain.loVect();<sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="364" refid="classamrex_1_1BaseFab_1ae6cabd78f18cfc8f0d9544ef683cd640" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="classamrex_1_1BaseFab_1ae6cabd78f18cfc8f0d9544ef683cd640" kindref="member">hiVect</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;domain.hiVect();<sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="371" refid="classamrex_1_1BaseFab_1a90d94d23b4c7ff81a86093956d38b332" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab_1a90d94d23b4c7ff81a86093956d38b332" kindref="member">contains</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>fab)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>box().contains(fab.box())<sp/>&amp;&amp;<sp/>this-&gt;nvar<sp/>&lt;=<sp/>fab.nvar;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="381" refid="classamrex_1_1BaseFab_1a21a8ed23adcc906fd3a3814f3e851f3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab_1a21a8ed23adcc906fd3a3814f3e851f3c" kindref="member">contains</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>box().contains(bx);<sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="393" refid="classamrex_1_1BaseFab_1ac1817d437a6ca523298e25202dd51705" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><ref refid="classamrex_1_1BaseFab_1ac1817d437a6ca523298e25202dd51705" kindref="member">dataPtr</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0)<sp/>noexcept<sp/>{<sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(!(this-&gt;dptr<sp/>==<sp/>0));<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;(this-&gt;dptr[n*this-&gt;domain.numPts()]);<sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="397" refid="classamrex_1_1BaseFab_1a8b5f6bd26ae63d34e365dddfe1fa0991" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="classamrex_1_1BaseFab_1a8b5f6bd26ae63d34e365dddfe1fa0991" kindref="member">dataPtr</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0)<sp/>const<sp/>noexcept<sp/>{<sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(!(this-&gt;dptr<sp/>==<sp/>0));<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;(this-&gt;dptr[n*this-&gt;domain.numPts()]);<sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>dataPtr<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>iv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0)<sp/>noexcept;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>dataPtr<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>iv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="classamrex_1_1BaseFab_1ab55c5cdbff39b6eb2074b4846c9efb2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab_1ab55c5cdbff39b6eb2074b4846c9efb2e" kindref="member">setPtr</ref><sp/>(T*<sp/>p,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sz)<sp/>noexcept<sp/>{<sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;dptr<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>this-&gt;truesize<sp/>==<sp/>0);<sp/>this-&gt;dptr<sp/>=<sp/>p;<sp/>this-&gt;truesize<sp/>=<sp/>sz;<sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ab02b05e2eb3282f8df33e5cbc655b2a3" kindref="member">prefetchToHost</ref><sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a4db8bcd1f50c790aba6b81860143cc96" kindref="member">prefetchToDevice</ref><sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="412" refid="classamrex_1_1BaseFab_1aa456605f5709d47be9474befe9d9e128" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;T const&gt;</ref><sp/><ref refid="classamrex_1_1BaseFab_1aa456605f5709d47be9474befe9d9e128" kindref="member">array</ref><sp/>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>makeArray4&lt;T<sp/>const&gt;(this-&gt;dptr,<sp/>this-&gt;domain,<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="419" refid="classamrex_1_1BaseFab_1a039630ee4496b6d7fd17020a78f4f899" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;T&gt;</ref><sp/><ref refid="classamrex_1_1BaseFab_1a039630ee4496b6d7fd17020a78f4f899" kindref="member">array</ref><sp/>()<sp/>noexcept</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>makeArray4&lt;T&gt;(this-&gt;dptr,<sp/>this-&gt;domain,<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="426" refid="classamrex_1_1BaseFab_1aeba81b8b4aa7054af02788dc42c797c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;T const&gt;</ref><sp/><ref refid="classamrex_1_1BaseFab_1aeba81b8b4aa7054af02788dc42c797c3" kindref="member">const_array</ref><sp/>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>makeArray4&lt;T<sp/>const&gt;(this-&gt;dptr,<sp/>this-&gt;domain,<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="433" refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1FabView" kindref="compound">FabView&lt;T const&gt;</ref><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0)<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>view(this-&gt;domain.loVect3d(),n);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="440" refid="classamrex_1_1BaseFab_1a76735e86616929030b8383a78bddaaa4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1FabView" kindref="compound">FabView&lt;T&gt;</ref><sp/><ref refid="classamrex_1_1BaseFab_1a76735e86616929030b8383a78bddaaa4" kindref="member">view</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0)<sp/>noexcept</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>view(this-&gt;domain.loVect3d(),n);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="447" refid="classamrex_1_1BaseFab_1a238a6ce02380dda577a844bd9250d109" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1FabView" kindref="compound">FabView&lt;T const&gt;</ref><sp/><ref refid="classamrex_1_1BaseFab_1a238a6ce02380dda577a844bd9250d109" kindref="member">view</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>iv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0)<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>view(<ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;int,3&gt;</ref>{iv[0],<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0},<sp/>n);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(AMREX_SPACEDIM<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>view(<ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;int,3&gt;</ref>{iv[0],iv[1],<sp/><sp/><sp/><sp/>0},<sp/>n);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>view(<ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;int,3&gt;</ref>{iv[0],iv[1],iv[2]},<sp/>n);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="460" refid="classamrex_1_1BaseFab_1a5dac991f61637eb0b5ad077ea132e84f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1FabView" kindref="compound">FabView&lt;T&gt;</ref><sp/><ref refid="classamrex_1_1BaseFab_1a5dac991f61637eb0b5ad077ea132e84f" kindref="member">view</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>iv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0)<sp/>noexcept</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(AMREX_SPACEDIM<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>view(<ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;int,3&gt;</ref>{iv[0],<sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/>0},<sp/>n);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(AMREX_SPACEDIM<sp/>==<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>view(<ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;int,3&gt;</ref>{iv[0],iv[1],<sp/><sp/><sp/><sp/>0},<sp/>n);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>view(<ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;int,3&gt;</ref>{iv[0],iv[1],iv[2]},<sp/>n);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="473" refid="classamrex_1_1BaseFab_1acfe35cfcc6bbf643ad67ce6cc092b40b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1FabView" kindref="compound">FabView&lt;T const&gt;</ref><sp/><ref refid="classamrex_1_1BaseFab_1acfe35cfcc6bbf643ad67ce6cc092b40b" kindref="member">view</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0)<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>view(subbox.<ref refid="classamrex_1_1Box_1aee44ffec910e1bf6fd904694171bb675" kindref="member">loVect3d</ref>(),n);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="480" refid="classamrex_1_1BaseFab_1a3483f3893ec878a491276fae68f5062e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1FabView" kindref="compound">FabView&lt;T&gt;</ref><sp/><ref refid="classamrex_1_1BaseFab_1a3483f3893ec878a491276fae68f5062e" kindref="member">view</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0)<sp/>noexcept</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>view(subbox.<ref refid="classamrex_1_1Box_1aee44ffec910e1bf6fd904694171bb675" kindref="member">loVect3d</ref>(),n);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="487" refid="classamrex_1_1BaseFab_1a639592b0b04292117d406f9dc764cf1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1FabView" kindref="compound">FabView&lt;T const&gt;</ref><sp/><ref refid="classamrex_1_1BaseFab_1a639592b0b04292117d406f9dc764cf1d" kindref="member">view</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;int,3&gt;</ref>&amp;<sp/>slo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0)<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__CUDACC__)<sp/>||<sp/>(__CUDACC_VER_MAJOR__<sp/>!=<sp/>9)<sp/>||<sp/>(__CUDACC_VER_MINOR__<sp/>!=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;domain.numPts()<sp/>&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;int&gt;::max</ref>()));</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;domain.numPts()<sp/>&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(INT_MAX));</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>len<sp/>=<sp/>this-&gt;domain.length3d();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jstride<sp/>=<sp/>len[0];</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kstride<sp/>=<sp/>jstride*len[1];</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nstride<sp/>=<sp/>kstride*len[2];</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dlo<sp/>=<sp/>this-&gt;domain.loVect3d();</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/>this-&gt;dptr<sp/>+<sp/>((slo[0]-dlo[0])</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/>(slo[1]-dlo[1])*jstride</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/>(slo[2]-dlo[2])*kstride</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n*nstride);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabView" kindref="compound">FabView&lt;T const&gt;</ref>{p,<sp/>jstride,<sp/>kstride,<sp/>nstride,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len[0]-(slo[0]-dlo[0]),</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len[1]-(slo[1]-dlo[1]),</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len[2]-(slo[2]-dlo[2]),</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;nvar-n};</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabView" kindref="compound">FabView&lt;T const&gt;</ref>{p,<sp/>jstride,<sp/>kstride,<sp/>nstride};</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="516" refid="classamrex_1_1BaseFab_1ac307f7499cb98666f3e625dc6165d380" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1FabView" kindref="compound">FabView&lt;T&gt;</ref><sp/><ref refid="classamrex_1_1BaseFab_1ac307f7499cb98666f3e625dc6165d380" kindref="member">view</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;int,3&gt;</ref>&amp;<sp/>slo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0)<sp/>noexcept</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__CUDACC__)<sp/>||<sp/>(__CUDACC_VER_MAJOR__<sp/>!=<sp/>9)<sp/>||<sp/>(__CUDACC_VER_MINOR__<sp/>!=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;domain.numPts()<sp/>&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;int&gt;::max</ref>()));</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;domain.numPts()<sp/>&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(INT_MAX));</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>len<sp/>=<sp/>this-&gt;domain.length3d();</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jstride<sp/>=<sp/>len[0];</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kstride<sp/>=<sp/>jstride*len[1];</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nstride<sp/>=<sp/>kstride*len[2];</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dlo<sp/>=<sp/>this-&gt;domain.loVect3d();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>p<sp/>=<sp/>this-&gt;dptr<sp/>+<sp/>((slo[0]-dlo[0])</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/>(slo[1]-dlo[1])*jstride</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/>(slo[2]-dlo[2])*kstride</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n*nstride);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabView" kindref="compound">FabView&lt;T&gt;</ref>{p,<sp/>jstride,<sp/>kstride,<sp/>nstride,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len[0]-(slo[0]-dlo[0]),</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len[1]-(slo[1]-dlo[1]),</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len[2]-(slo[2]-dlo[2]),</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;nvar-n};</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabView" kindref="compound">FabView&lt;T&gt;</ref>{p,<sp/>jstride,<sp/>kstride,<sp/>nstride};</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="545" refid="classamrex_1_1BaseFab_1a4c6ac97444b2e697b2389738e9e64052" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1FabView" kindref="compound">FabView&lt;T const&gt;</ref><sp/><ref refid="classamrex_1_1BaseFab_1a4c6ac97444b2e697b2389738e9e64052" kindref="member">view</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Dim3" kindref="compound">Dim3</ref>&amp;<sp/>slo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0)<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__CUDACC__)<sp/>||<sp/>(__CUDACC_VER_MAJOR__<sp/>!=<sp/>9)<sp/>||<sp/>(__CUDACC_VER_MINOR__<sp/>!=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;domain.numPts()<sp/>&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;int&gt;::max</ref>()));</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;domain.numPts()<sp/>&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(INT_MAX));</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(this-&gt;domain);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dlo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(this-&gt;domain);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jstride<sp/>=<sp/>len.x;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kstride<sp/>=<sp/>jstride*len.y;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nstride<sp/>=<sp/>kstride*len.z;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/>this-&gt;dptr<sp/>+<sp/>((slo.<ref refid="structamrex_1_1Dim3_1a090510e5e79fd6c75d96c906cd9250e1" kindref="member">x</ref>-dlo.x)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/>(slo.<ref refid="structamrex_1_1Dim3_1a5b607ff8424cba649fe2c3c19f34714b" kindref="member">y</ref>-dlo.y)*jstride</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/>(slo.<ref refid="structamrex_1_1Dim3_1a301b8be615c36e302d8510be17c63e90" kindref="member">z</ref>-dlo.z)*kstride</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n*nstride);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabView" kindref="compound">FabView&lt;T const&gt;</ref>{p,<sp/>jstride,<sp/>kstride,<sp/>nstride,</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len.x-(slo.<ref refid="structamrex_1_1Dim3_1a090510e5e79fd6c75d96c906cd9250e1" kindref="member">x</ref>-dlo.x),</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len.y-(slo.<ref refid="structamrex_1_1Dim3_1a5b607ff8424cba649fe2c3c19f34714b" kindref="member">y</ref>-dlo.y),</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len.z-(slo.<ref refid="structamrex_1_1Dim3_1a301b8be615c36e302d8510be17c63e90" kindref="member">z</ref>-dlo.z),</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;nvar-n};</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabView" kindref="compound">FabView&lt;T const&gt;</ref>{p,<sp/>jstride,<sp/>kstride,<sp/>nstride};</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="574" refid="classamrex_1_1BaseFab_1a98f6f0536d0fafa36d94868dcfd83a37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1FabView" kindref="compound">FabView&lt;T&gt;</ref><sp/><ref refid="classamrex_1_1BaseFab_1a98f6f0536d0fafa36d94868dcfd83a37" kindref="member">view</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Dim3" kindref="compound">Dim3</ref>&amp;<sp/>slo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0)<sp/>noexcept</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__CUDACC__)<sp/>||<sp/>(__CUDACC_VER_MAJOR__<sp/>!=<sp/>9)<sp/>||<sp/>(__CUDACC_VER_MINOR__<sp/>!=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;domain.numPts()<sp/>&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;int&gt;::max</ref>()));</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;domain.numPts()<sp/>&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(INT_MAX));</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(this-&gt;domain);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dlo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(this-&gt;domain);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jstride<sp/>=<sp/>len.x;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kstride<sp/>=<sp/>jstride*len.y;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nstride<sp/>=<sp/>kstride*len.z;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>p<sp/>=<sp/>this-&gt;dptr<sp/>+<sp/>((slo.<ref refid="structamrex_1_1Dim3_1a090510e5e79fd6c75d96c906cd9250e1" kindref="member">x</ref>-dlo.x)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/>(slo.<ref refid="structamrex_1_1Dim3_1a5b607ff8424cba649fe2c3c19f34714b" kindref="member">y</ref>-dlo.y)*jstride</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/>(slo.<ref refid="structamrex_1_1Dim3_1a301b8be615c36e302d8510be17c63e90" kindref="member">z</ref>-dlo.z)*kstride</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n*nstride);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabView" kindref="compound">FabView&lt;T&gt;</ref>{p,<sp/>jstride,<sp/>kstride,<sp/>nstride,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len.x-(slo.<ref refid="structamrex_1_1Dim3_1a090510e5e79fd6c75d96c906cd9250e1" kindref="member">x</ref>-dlo.x),</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len.y-(slo.<ref refid="structamrex_1_1Dim3_1a5b607ff8424cba649fe2c3c19f34714b" kindref="member">y</ref>-dlo.y),</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len.z-(slo.<ref refid="structamrex_1_1Dim3_1a301b8be615c36e302d8510be17c63e90" kindref="member">z</ref>-dlo.z),</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;nvar-n};</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabView" kindref="compound">FabView&lt;T&gt;</ref>{p,<sp/>jstride,<sp/>kstride,<sp/>nstride};</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="603" refid="classamrex_1_1BaseFab_1a8d6db68c9ef28ef91234e66512faceb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab_1a8d6db68c9ef28ef91234e66512faceb8" kindref="member">isAllocated</ref><sp/>()<sp/>const<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;dptr<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>T&amp;<sp/>operator()<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N)<sp/>noexcept;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>T&amp;<sp/>operator()<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>p)<sp/>noexcept;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>operator()<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>operator()<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>p)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getVal<sp/>(T*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data,</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>pos,</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N,</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getVal<sp/>(T*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data,</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>pos)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setVal<sp/>(T<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nstart,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp)<sp/>noexcept;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setVal<sp/>(T<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>0)<sp/>noexcept;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setVal<sp/>(T<sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N)<sp/>noexcept;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setValIfNot<sp/>(T<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nstart,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp)<sp/>noexcept;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setComplement<sp/>(T<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ns,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)<sp/>noexcept;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>copy<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcbox,</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destbox,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp)<sp/>noexcept;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>copy<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp<sp/>=<sp/>1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>copy<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destbox)<sp/>noexcept;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>copyToMem<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>srcbox,</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp,</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/>dst)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>copyFromMem<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/>dstbox,</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstcomp,</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp,</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src)<sp/>noexcept;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>addFromMem<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/>dstbox,</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstcomp,</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp,</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src)<sp/>noexcept;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/><ref refid="namespaceamrex_1ace26a2763f9834a0e4e2369463dd7452" kindref="member">shift</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>v)<sp/>noexcept;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/><ref refid="namespaceamrex_1ace26a2763f9834a0e4e2369463dd7452" kindref="member">shift</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_cell)<sp/>noexcept;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>shiftHalf<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_halfs)<sp/>noexcept;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>shiftHalf<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>num_halfs)<sp/>noexcept;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>norminfmask<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scomp=0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp=1)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>norm<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p,</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scomp<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp<sp/>=<sp/>1)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>norm<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p,</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scomp<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncomp<sp/>=<sp/>1)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">abs</ref><sp/>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">abs</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">abs</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1a6d4aa02eb1ece2b795273e1ccbfd1805" kindref="member">min</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1a6d4aa02eb1ece2b795273e1ccbfd1805" kindref="member">min</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1aaadb66ad08e0a33ec413e2ce8b687414" kindref="member">max</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1aaadb66ad08e0a33ec413e2ce8b687414" kindref="member">max</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>maxabs<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>maxabs<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>indexFromValue<sp/>(Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/>value,</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>minIndex<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>minIndex<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/>minIndex<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/>subbox,</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real&amp;<sp/><sp/><sp/><sp/>min_val,</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>min_idx,</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comp<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>maxIndex<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>maxIndex<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/>maxIndex<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/>subbox,</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real&amp;<sp/><sp/><sp/><sp/>max_value,</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>max_index,</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>comp<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maskLT<sp/>(<ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maskLE<sp/>(<ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maskEQ<sp/>(<ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maskGT<sp/>(<ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maskGE<sp/>(<ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp<sp/>=<sp/>0)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp<sp/>=<sp/>1)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp,</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp<sp/>=<sp/>1)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>invert<sp/>(T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v,</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp=0,</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>invert<sp/>(T<sp/><sp/><sp/>v,</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>negate<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp=0,</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>negate<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>plus<sp/>(T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r,</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp=0,</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>plus<sp/>(T<sp/><sp/><sp/>r,</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>plus<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>plus<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subbox,</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>plus<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcbox,</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destbox,</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>atomicAdd<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src)<sp/>noexcept;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>atomicAdd<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>atomicAdd<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subbox,</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>atomicAdd<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcbox,</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destbox,</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>saxpy<sp/>(T<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcbox,</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destbox,</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>saxpy<sp/>(T<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>x)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>xpay<sp/>(T<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcbox,</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destbox,</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>addproduct<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destbox,</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp,</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src1,</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp1,</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src2,</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp2)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>minus<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>minus<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subbox,</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>minus<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcbox,</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destbox,</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>mult<sp/>(T<sp/><sp/><sp/>r,</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>mult<sp/>(T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r,</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp=0,</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>mult<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>mult<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subbox,</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>mult<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcbox,</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destbox,</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>divide<sp/>(T<sp/><sp/><sp/>r,</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>divide<sp/>(T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r,</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp=0,</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>divide<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>divide<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subbox,</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>divide<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcbox,</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destbox,</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>protected_divide<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>protected_divide<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>protected_divide<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subbox,</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>protected_divide<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcbox,</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destbox,</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp=1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>linInterp<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>f1,</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1,</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp1,</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>f2,</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b2,</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp2,</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1,</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2,</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t,</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b,</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp,</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp<sp/>=<sp/>1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>linInterp<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>f1,</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp1,</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>f2,</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp2,</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1,</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2,</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t,</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b,</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp,</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp<sp/>=<sp/>1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>linComb<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>f1,</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1,</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp1,</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>f2,</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b2,</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp2,</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha,</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beta,</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b,</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp,</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp<sp/>=<sp/>1)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>dot<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>xbx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xcomp,</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>ybx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ycomp,</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp<sp/>=<sp/>1)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>dotmask<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>xbx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xcomp,</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>ybx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ycomp,</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1303" refid="classamrex_1_1BaseFab_1a03513ca096ccb98cbfc04eed4ea4bf1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab_1a03513ca096ccb98cbfc04eed4ea4bf1f" kindref="member">SetBoxType</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref>&amp;<sp/>typ)<sp/>noexcept<sp/>{<sp/>this-&gt;domain.setType(typ);<sp/>}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;<sp/></highlight></codeline>
<codeline lineno="1306" refid="classamrex_1_1BaseFab_1aa7ffb7d3ed11be2617488acee59d5d8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab_1aa7ffb7d3ed11be2617488acee59d5d8b" kindref="member">ForEach</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc,<sp/>F<sp/>f)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4164e761a5d24f1fd26acd6f6aa1bc4d" kindref="member">ForEachImpl</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>b,<sp/>c,<sp/>nc,<sp/>f);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;<sp/></highlight></codeline>
<codeline lineno="1310" refid="classamrex_1_1BaseFab_1af056c3d5b73627c4ea8e0e30244aedce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab_1af056c3d5b73627c4ea8e0e30244aedce" kindref="member">ForEach</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc,<sp/>F<sp/>f)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4164e761a5d24f1fd26acd6f6aa1bc4d" kindref="member">ForEachImpl</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>b,<sp/>c,<sp/>nc,<sp/>f);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;<sp/></highlight></codeline>
<codeline lineno="1314" refid="classamrex_1_1BaseFab_1a01e76f051c01f45b50e48ef80d39d907" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab_1a01e76f051c01f45b50e48ef80d39d907" kindref="member">ForEachIV</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc,<sp/>F<sp/>f)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a89cd7448557b7e2c3b736add5178bb95" kindref="member">ForEachIVImpl</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>b,<sp/>c,<sp/>nc,<sp/>f);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;<sp/></highlight></codeline>
<codeline lineno="1318" refid="classamrex_1_1BaseFab_1a3cb3ce0e34a9e6d0e6826f863f5c55da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab_1a3cb3ce0e34a9e6d0e6826f863f5c55da" kindref="member">ForEachIV</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc,<sp/>F<sp/>f)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a89cd7448557b7e2c3b736add5178bb95" kindref="member">ForEachIVImpl</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>b,<sp/>c,<sp/>nc,<sp/>f);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;<sp/></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ForEach<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>dstbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dstcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp,</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/>F<sp/>f)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;<sp/></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ForEach<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>dstbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dstcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp,</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>srcbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/>F<sp/>f)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;<sp/></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>P<sp/>Accumulate<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc,<sp/>P<sp/>init,<sp/>F<sp/>f)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;<sp/></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Transform<sp/>(T*<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc,<sp/>F<sp/>f)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;<sp/></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Transform<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>src,<sp/>F<sp/>f)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>New<sp/>interfaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setVal<sp/>(T<sp/>val)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="1347"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setVal<sp/>(T<sp/>val,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setValIf<sp/>(T<sp/>val,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="1354"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setValIf<sp/>(T<sp/>val,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setValIfNot<sp/>(T<sp/>val,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="1361"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setValIfNot<sp/>(T<sp/>val,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setComplement<sp/>(T<sp/>val,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>copy<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="1376"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>copy<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref><sp/>scomp,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>plus<sp/>(T<sp/>val)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>operator+=<sp/>(T<sp/>val)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="1387"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>plus<sp/>(T<sp/>val,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>plus<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>operator+=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="1401"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>plus<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref><sp/>scomp,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>minus<sp/>(T<sp/>val)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>operator-=<sp/>(T<sp/>val)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="1412"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>minus<sp/>(T<sp/>val,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>minus<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>operator-=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="1426"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>minus<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref><sp/>scomp,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>mult<sp/>(T<sp/>val)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>operator*=<sp/>(T<sp/>val)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="1437"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>mult<sp/>(T<sp/>val,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>mult<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>operator*=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="1451"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>mult<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref><sp/>scomp,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>divide<sp/>(T<sp/>val)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>operator/=<sp/>(T<sp/>val)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="1462"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>divide<sp/>(T<sp/>val,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>divide<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>operator/=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="1476"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>divide<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref><sp/>scomp,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>negate<sp/>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>negate<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>invert<sp/>(T<sp/>r)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>invert<sp/>(T<sp/>r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>dot<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref><sp/>scomp,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>dot<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>dot<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>dotmask<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref><sp/>scomp,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>define<sp/>();</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight></codeline>
<codeline lineno="1518" refid="classamrex_1_1BaseFab_1a9236f2f88feff79c1d50b9b830750f91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><sp/><sp/>dptr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1519" refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1520" refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>nvar<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1521" refid="classamrex_1_1BaseFab_1aa86e53b5d3afdae2606ab0be640bb022" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>truesize<sp/>=<sp/>0L;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1522" refid="classamrex_1_1BaseFab_1acf3b50d012730dd3521fb2be517573b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ptr_owner<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1523" refid="classamrex_1_1BaseFab_1a4e65169d29942cf3adde870d63a91834" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shared_memory<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_PERILLA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/>LocalConnection<sp/>l_con;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/>RemoteConnection<sp/>r_con;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fireable;</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding[1024];</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>B,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight><highlight class="comment">//AMREX_GPU_HOST_DEVICE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1540" refid="namespaceamrex_1a4164e761a5d24f1fd26acd6f6aa1bc4d" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a4164e761a5d24f1fd26acd6f6aa1bc4d" kindref="member">ForEachImpl</ref><sp/>(B&amp;<sp/>fab,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc,<sp/>F<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="1541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(fab.contains(b));</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(c<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>c<sp/>+<sp/>nc<sp/>&lt;=<sp/>fab.nComp());</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len3<sp/>=<sp/>b.length3d();</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>blo<sp/>=<sp/>b.loVect();</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>c;<sp/>n<sp/>&lt;<sp/>c+nc;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len3[2];<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len3[1];<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>line_begin{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(blo[0],</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blo[1]+j,</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blo[2]+k)};</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>fab.dataPtr(line_begin,<sp/>n);</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref><sp/>&lt;<sp/>len3[0];<sp/>++<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(*(d+<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>));</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>B,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight><highlight class="comment">//AMREX_GPU_HOST_DEVICE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1566" refid="namespaceamrex_1a89cd7448557b7e2c3b736add5178bb95" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a89cd7448557b7e2c3b736add5178bb95" kindref="member">ForEachIVImpl</ref><sp/>(B&amp;<sp/>fab,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc,<sp/>F<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="1567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(fab.contains(b));</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(c<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>c<sp/>+<sp/>nc<sp/>&lt;=<sp/>fab.nComp());</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len3<sp/>=<sp/>b.length3d();</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>blo<sp/>=<sp/>b.loVect();</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>c;<sp/>n<sp/>&lt;<sp/>c+nc;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len3[2];<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len3[1];<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>line_begin{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(blo[0],</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blo[1]+j,</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blo[2]+k)};</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>fab.dataPtr(line_begin,<sp/>n);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref><sp/>&lt;<sp/>len3[0];<sp/>++<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(*(d+<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>),<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(blo[0]+<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>,</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blo[1]+j,</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blo[2]+k)});</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1593" refid="classamrex_1_1BaseFab_1a11ed06775cfb2c8108b56d2158dc796b" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1aa7ffb7d3ed11be2617488acee59d5d8b" kindref="member">BaseFab&lt;T&gt;::ForEach</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>dstbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dstcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp,</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>srcbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/>F<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="1595"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(contains(dstbox));</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(src.contains(srcbox));</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(dstbox.size()<sp/>==<sp/>srcbox.size());</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(dstcomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dstcomp+numcomp<sp/>&lt;=<sp/>nComp());</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(srccomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>srccomp+numcomp<sp/>&lt;=<sp/>src.nComp());</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len3<sp/>=<sp/>dstbox.length3d();</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dlo<sp/>=<sp/>dstbox.loVect();</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>slo<sp/>=<sp/>srcbox.loVect();</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numcomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len3[2];<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len3[1];<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>dline_begin{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(dlo[0],</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlo[1]+j,</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlo[2]+k)};</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>dataPtr(dline_begin,<sp/>n+dstcomp);</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>sline_begin{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(slo[0],</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slo[1]+j,</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slo[2]+k)};</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>src.dataPtr(sline_begin,<sp/>n+srccomp);</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref><sp/>&lt;<sp/>len3[0];<sp/>++<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(*(d+<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>),<sp/>*(s+<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>));</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1627" refid="classamrex_1_1BaseFab_1a2b537482c611229a7e2b62f1bbf1d4c6" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1aa7ffb7d3ed11be2617488acee59d5d8b" kindref="member">BaseFab&lt;T&gt;::ForEach</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>dstbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dstcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp,</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/>F<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="1629"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(contains(dstbox));</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(src.contains(dstbox));</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(dstcomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dstcomp+numcomp<sp/>&lt;=<sp/>nComp());</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(srccomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>srccomp+numcomp<sp/>&lt;=<sp/>src.nComp());</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len3<sp/>=<sp/>dstbox.length3d();</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dlo<sp/>=<sp/>dstbox.loVect();</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numcomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len3[2];<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len3[1];<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>dline_begin{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(dlo[0],</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlo[1]+j,</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlo[2]+k)};</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>dataPtr(dline_begin,<sp/>n+dstcomp);</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>src.dataPtr(dline_begin,<sp/>n+srccomp);</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref><sp/>&lt;<sp/>len3[0];<sp/>++<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(*(d+<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>),<sp/>*(s+<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>));</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal">P</highlight></codeline>
<codeline lineno="1656" refid="classamrex_1_1BaseFab_1a91513822e781492a9800ae2064f4c6ee" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a91513822e781492a9800ae2064f4c6ee" kindref="member">BaseFab&lt;T&gt;::Accumulate</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc,<sp/>P<sp/>init,<sp/>F<sp/>f)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="1657"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len3<sp/>=<sp/>b.length3d();</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>blo<sp/>=<sp/>b.loVect();</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>c;<sp/>n<sp/>&lt;<sp/>c+nc;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len3[2];<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len3[1];<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>line_begin{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(blo[0],</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blo[1]+j,</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blo[2]+k)};</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>d<sp/>=<sp/>dataPtr(line_begin,<sp/>n);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref><sp/>&lt;<sp/>len3[0];<sp/>++<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init<sp/>=<sp/>f(init,<sp/>*(d+<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>));</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>init;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679" refid="classamrex_1_1BaseFab_1aca58ac4ae57851e2883c84963ee6c331" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1aca58ac4ae57851e2883c84963ee6c331" kindref="member">BaseFab&lt;T&gt;::Transform</ref><sp/>(T*<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc,<sp/>F<sp/>f)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="1680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(contains(b));</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(c<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>c<sp/>+<sp/>nc<sp/>&lt;=<sp/>nComp());</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len3<sp/>=<sp/>b.length3d();</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>blo<sp/>=<sp/>b.loVect();</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>c;<sp/>n<sp/>&lt;<sp/>c+nc;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len3[2];<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len3[1];<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>line_begin{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(blo[0],</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blo[1]+j,</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blo[2]+k)};</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>dataPtr(line_begin,<sp/>n);</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref><sp/>&lt;<sp/>len3[0];<sp/>++<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(*(dst++),<sp/>*(s+<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>));</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1704" refid="classamrex_1_1BaseFab_1a105ef076b58438b9238767a574847646" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1aca58ac4ae57851e2883c84963ee6c331" kindref="member">BaseFab&lt;T&gt;::Transform</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>src,<sp/>F<sp/>f)<sp/>noexcept</highlight></codeline>
<codeline lineno="1705"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(contains(b));</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(c<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>c<sp/>+<sp/>nc<sp/>&lt;=<sp/>nComp());</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len3<sp/>=<sp/>b.length3d();</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>blo<sp/>=<sp/>b.loVect();</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>c;<sp/>n<sp/>&lt;<sp/>c+nc;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len3[2];<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len3[1];<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>line_begin{<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(blo[0],</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blo[1]+j,</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blo[2]+k)};</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>dataPtr(line_begin,<sp/>n);</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref><sp/>&lt;<sp/>len3[0];<sp/>++<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f(*(d+<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>),<sp/>*(src++));</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="1728"><highlight class="normal">T*</highlight></codeline>
<codeline lineno="1729" refid="classamrex_1_1BaseFab_1a06a400fb85117c65737b171b07e478aa" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1ac1817d437a6ca523298e25202dd51705" kindref="member">BaseFab&lt;T&gt;::dataPtr</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>noexcept</highlight></codeline>
<codeline lineno="1730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(n<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(n<sp/>&lt;<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(!(this-&gt;dptr<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;domain.contains(p));</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;dptr<sp/>+<sp/>(this-&gt;domain.index(p)+n*this-&gt;domain.numPts());</highlight></codeline>
<codeline lineno="1737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*</highlight></codeline>
<codeline lineno="1742" refid="classamrex_1_1BaseFab_1a156632a48b54792083eb05adec16155d" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1ac1817d437a6ca523298e25202dd51705" kindref="member">BaseFab&lt;T&gt;::dataPtr</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="1743"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(n<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(n<sp/>&lt;<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(!(this-&gt;dptr<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;domain.contains(p));</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;dptr<sp/>+<sp/>(this-&gt;domain.index(p)+n*this-&gt;domain.numPts());</highlight></codeline>
<codeline lineno="1750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754" refid="classamrex_1_1BaseFab_1aea7b9b15c8959be232fa8d0b14b2b507" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1aea7b9b15c8959be232fa8d0b14b2b507" kindref="member">BaseFab&lt;T&gt;::prefetchToHost</ref><sp/>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="1755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_CUDA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>s<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)*this-&gt;nvar*this-&gt;domain.numPts();</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_CUDA_SAFE_CALL(cudaMemPrefetchAsync(this-&gt;dptr,<sp/>s,</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaCpuDeviceId,</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::gpuStream()));</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1766" refid="classamrex_1_1BaseFab_1acc3fa2566c4bf2de3e6f0773e3b0601b" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1acc3fa2566c4bf2de3e6f0773e3b0601b" kindref="member">BaseFab&lt;T&gt;::prefetchToDevice</ref><sp/>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="1767"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_CUDA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>s<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)*this-&gt;nvar*this-&gt;domain.numPts();</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_CUDA_SAFE_CALL(cudaMemPrefetchAsync(this-&gt;dptr,<sp/>s,</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Gpu_1_1Device_1aa5bf7f476f4a8c0ed917932d2cbdf9a4" kindref="member">Gpu::Device::deviceId</ref>(),</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::gpuStream()));</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="1778"><highlight class="normal">T&amp;</highlight></codeline>
<codeline lineno="1779" refid="classamrex_1_1BaseFab_1ad76ae6115f341053b2eb94affc5e3eee" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1ad76ae6115f341053b2eb94affc5e3eee" kindref="member">BaseFab&lt;T&gt;::operator() </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>noexcept</highlight></codeline>
<codeline lineno="1780"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(n<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(n<sp/>&lt;<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(!(this-&gt;dptr<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;domain.contains(p));</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;dptr[this-&gt;domain.index(p)+n*this-&gt;domain.numPts()];</highlight></codeline>
<codeline lineno="1787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="1791"><highlight class="normal">T&amp;</highlight></codeline>
<codeline lineno="1792" refid="classamrex_1_1BaseFab_1ac1a408be29fc4bfc85971ac414c165ee" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1ad76ae6115f341053b2eb94affc5e3eee" kindref="member">BaseFab&lt;T&gt;::operator() </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>p)<sp/>noexcept</highlight></codeline>
<codeline lineno="1793"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(!(this-&gt;dptr<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;domain.contains(p));</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;dptr[this-&gt;domain.index(p)];</highlight></codeline>
<codeline lineno="1798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;</highlight></codeline>
<codeline lineno="1803" refid="classamrex_1_1BaseFab_1a10931b31715309bfb452dc2c7fa662df" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1ad76ae6115f341053b2eb94affc5e3eee" kindref="member">BaseFab&lt;T&gt;::operator() </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="1804"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(n<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(n<sp/>&lt;<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(!(this-&gt;dptr<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;domain.contains(p));</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;dptr[this-&gt;domain.index(p)+n*this-&gt;domain.numPts()];</highlight></codeline>
<codeline lineno="1811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;</highlight></codeline>
<codeline lineno="1816" refid="classamrex_1_1BaseFab_1a3427e5ed98498ff54da5f75d22923f5f" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1ad76ae6115f341053b2eb94affc5e3eee" kindref="member">BaseFab&lt;T&gt;::operator() </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>p)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="1817"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(!(this-&gt;dptr<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;domain.contains(p));</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;dptr[this-&gt;domain.index(p)];</highlight></codeline>
<codeline lineno="1822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826" refid="classamrex_1_1BaseFab_1ac195a2bbff03a7f02e30788342473d18" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1ac195a2bbff03a7f02e30788342473d18" kindref="member">BaseFab&lt;T&gt;::getVal</ref><sp/><sp/>(T*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data,</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>pos,</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n,</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="1830"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>this-&gt;domain.index(pos);</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sz<sp/><sp/><sp/><sp/>=<sp/>this-&gt;domain.numPts();</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(!(this-&gt;dptr<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(n<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>n<sp/>+<sp/>numcomp<sp/>&lt;=<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>numcomp;<sp/>k++)</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[k]<sp/>=<sp/>this-&gt;dptr[loc+(n+k)*sz];</highlight></codeline>
<codeline lineno="1839"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1843" refid="classamrex_1_1BaseFab_1af8f8e7b8b678678f74f235b0ebdeed9f" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1ac195a2bbff03a7f02e30788342473d18" kindref="member">BaseFab&lt;T&gt;::getVal</ref><sp/>(T*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data,</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>pos)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="1845"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/>getVal(data,pos,0,this-&gt;nvar);</highlight></codeline>
<codeline lineno="1847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="1851" refid="classamrex_1_1BaseFab_1a92cb12158a09c20c51ef9347c11d31e4" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a92cb12158a09c20c51ef9347c11d31e4" kindref="member">BaseFab&lt;T&gt;::shift</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>v)<sp/>noexcept</highlight></codeline>
<codeline lineno="1852"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;domain<sp/>+=<sp/>v;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="1859" refid="classamrex_1_1BaseFab_1ad511764daeaedb9d3de8afc17ca7140c" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a92cb12158a09c20c51ef9347c11d31e4" kindref="member">BaseFab&lt;T&gt;::shift</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_cell)<sp/>noexcept</highlight></codeline>
<codeline lineno="1860"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;domain.shift(idir,n_cell);</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1863"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="1867" refid="classamrex_1_1BaseFab_1a55589bcc8819d6c8a9291e79a05fbb81" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1af9080211623ae547d4a77076be42eeba" kindref="member">BaseFab&lt;T&gt;::shiftHalf</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>v)<sp/>noexcept</highlight></codeline>
<codeline lineno="1868"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;domain.shiftHalf(v);</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="1875" refid="classamrex_1_1BaseFab_1af9080211623ae547d4a77076be42eeba" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1af9080211623ae547d4a77076be42eeba" kindref="member">BaseFab&lt;T&gt;::shiftHalf</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idir,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_cell)<sp/>noexcept</highlight></codeline>
<codeline lineno="1876"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;domain.shiftHalf(idir,n_cell);</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1883" refid="classamrex_1_1BaseFab_1a70fedcae8298de73f286c3c673f7db04" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a5f8ebb9050e7ffd02a957d0bdaca9886" kindref="member">BaseFab&lt;T&gt;::setVal</ref><sp/>(T<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>noexcept</highlight></codeline>
<codeline lineno="1884"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;setVal(x,<sp/>bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{n},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{1});</highlight></codeline>
<codeline lineno="1886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890" refid="classamrex_1_1BaseFab_1a6805d31b7989de818560b68b6d830fd9" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a5f8ebb9050e7ffd02a957d0bdaca9886" kindref="member">BaseFab&lt;T&gt;::setVal</ref><sp/>(T<sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>noexcept</highlight></codeline>
<codeline lineno="1891"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;setVal(x,<sp/>this-&gt;domain,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{n},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{1});</highlight></codeline>
<codeline lineno="1893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897" refid="classamrex_1_1BaseFab_1a5f8ebb9050e7ffd02a957d0bdaca9886" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a5f8ebb9050e7ffd02a957d0bdaca9886" kindref="member">BaseFab&lt;T&gt;::setVal</ref><sp/>(T<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="1898"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;setVal(x,<sp/>bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{dcomp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{ncomp});</highlight></codeline>
<codeline lineno="1900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1904" refid="classamrex_1_1BaseFab_1a9faef9ada202610c6bcc248ff1fbe2dd" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a9faef9ada202610c6bcc248ff1fbe2dd" kindref="member">BaseFab&lt;T&gt;::setValIfNot</ref><sp/>(T<sp/>val,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ns,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)<sp/>noexcept</highlight></codeline>
<codeline lineno="1905"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;setValIfNot(val,<sp/>bx,<sp/>mask,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{ns},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{num});</highlight></codeline>
<codeline lineno="1907"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="1911" refid="classamrex_1_1BaseFab_1a9ebd13893eb0315ec776fef5720ea8ec" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a9ebd13893eb0315ec776fef5720ea8ec" kindref="member">BaseFab&lt;T&gt;::copy</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcbox,</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destbox,</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="1917"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(destbox.ok());</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(srcbox.sameSize(destbox));</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(src.box().contains(srcbox));</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;domain.contains(destbox));</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(srccomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>srccomp+numcomp<sp/>&lt;=<sp/>src.nComp());</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(destcomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>destcomp+numcomp<sp/>&lt;=<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(destbox);</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dlo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(destbox);</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>slo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(srcbox);</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/>view(dlo,<sp/>destcomp);</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sp<sp/><sp/>=<sp/>src.view(slo,<sp/>srccomp);</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numcomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref><sp/>&lt;<sp/>len.x;<sp/>++<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>,j,k,n)<sp/>=<sp/>sp(<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>,j,k,n);</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="1947" refid="classamrex_1_1BaseFab_1a24c275fec6273b1de82821fc05a1d7a3" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a9ebd13893eb0315ec776fef5720ea8ec" kindref="member">BaseFab&lt;T&gt;::copy</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>destbox)<sp/>noexcept</highlight></codeline>
<codeline lineno="1948"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;copy(src,<sp/>destbox,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref>{0},<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;nvar});</highlight></codeline>
<codeline lineno="1950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="1954" refid="classamrex_1_1BaseFab_1a464b4917cdb04317aed88eecf1dc885e" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a9ebd13893eb0315ec776fef5720ea8ec" kindref="member">BaseFab&lt;T&gt;::copy</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="1955"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copy(src,<sp/>this-&gt;domain,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref>{srccomp},<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{destcomp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{numcomp});</highlight></codeline>
<codeline lineno="1957"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1961" refid="classamrex_1_1BaseFab_1a35dc22f1d61f4fb05ab75ae93f683d14" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a35dc22f1d61f4fb05ab75ae93f683d14" kindref="member">BaseFab&lt;T&gt;::define</ref><sp/>()</highlight></codeline>
<codeline lineno="1962"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;nvar<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;dptr<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;domain.numPts()<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__CUDACC__)<sp/>||<sp/>(__CUDACC_VER_MAJOR__<sp/>!=<sp/>9)<sp/>||<sp/>(__CUDACC_VER_MINOR__<sp/>!=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;long&gt;::max</ref>()/this-&gt;nvar<sp/>&gt;<sp/>this-&gt;domain.numPts());</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(LONG_MAX/this-&gt;nvar<sp/>&gt;<sp/>this-&gt;domain.numPts());</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;truesize<sp/><sp/>=<sp/>this-&gt;nvar*this-&gt;domain.numPts();</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ptr_owner<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;dptr<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(this-&gt;alloc(this-&gt;truesize*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)));</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa01774de05dd955d25a1e05206821ecd" kindref="member">placementNew</ref>(this-&gt;dptr,<sp/>this-&gt;truesize);</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"></highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4fbfaf2aadcc46966315c9edc993fe9a" kindref="member">amrex::update_fab_stats</ref>(this-&gt;domain.numPts(),<sp/>this-&gt;truesize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="1979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1982" refid="classamrex_1_1BaseFab_1a7e470d7e72db0c3169e83e34ce4f657b" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a7e470d7e72db0c3169e83e34ce4f657b" kindref="member">BaseFab&lt;T&gt;::BaseFab</ref><sp/>()<sp/>noexcept</highlight></codeline>
<codeline lineno="1983"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1986" refid="classamrex_1_1BaseFab_1ae5d9786facded55bfce06cc443594cab" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a7e470d7e72db0c3169e83e34ce4f657b" kindref="member">BaseFab&lt;T&gt;::BaseFab</ref><sp/>(<ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref>*<sp/>ar)<sp/>noexcept</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1DataAllocator" kindref="compound">DataAllocator</ref>{ar}</highlight></codeline>
<codeline lineno="1988"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1991" refid="classamrex_1_1BaseFab_1a83d88e02757dac7e30b2ac7a13020b22" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a7e470d7e72db0c3169e83e34ce4f657b" kindref="member">BaseFab&lt;T&gt;::BaseFab</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref>*<sp/>ar)</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1DataAllocator" kindref="compound">DataAllocator</ref>{ar},<sp/><ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>(bx),<sp/><ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>(n)</highlight></codeline>
<codeline lineno="1993"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a35dc22f1d61f4fb05ab75ae93f683d14" kindref="member">define</ref>();</highlight></codeline>
<codeline lineno="1995"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1998" refid="classamrex_1_1BaseFab_1aa42c6cb505873cad1b9c9de64a20c407" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a7e470d7e72db0c3169e83e34ce4f657b" kindref="member">BaseFab&lt;T&gt;::BaseFab</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataAllocator_1adcabda73bbd0120b08dbb2cda22a6427" kindref="member">alloc</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shared,<sp/><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref>*<sp/>ar)</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1DataAllocator" kindref="compound">DataAllocator</ref>{ar},<sp/><ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>(bx),<sp/><ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>(n),<sp/><ref refid="classamrex_1_1BaseFab_1a4e65169d29942cf3adde870d63a91834" kindref="member">shared_memory</ref>(shared)</highlight></codeline>
<codeline lineno="2000"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="classamrex_1_1BaseFab_1a4e65169d29942cf3adde870d63a91834" kindref="member">shared_memory</ref><sp/>&amp;&amp;<sp/><ref refid="structamrex_1_1DataAllocator_1adcabda73bbd0120b08dbb2cda22a6427" kindref="member">alloc</ref>)<sp/><ref refid="classamrex_1_1BaseFab_1a35dc22f1d61f4fb05ab75ae93f683d14" kindref="member">define</ref>();</highlight></codeline>
<codeline lineno="2002"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2005" refid="classamrex_1_1BaseFab_1a4b890373aa053ba5cd3aae0bf5483c1c" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a7e470d7e72db0c3169e83e34ce4f657b" kindref="member">BaseFab&lt;T&gt;::BaseFab</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>rhs,<sp/><ref refid="namespaceamrex_1a0a36c65d0681a832330b2812f16786a6" kindref="member">MakeType</ref><sp/>make_type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp)</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1DataAllocator" kindref="compound">DataAllocator</ref>{rhs.<ref refid="structamrex_1_1DataAllocator_1a477a75a5d73137b29f1a6ddf31af40f7" kindref="member">arena</ref>()},<sp/></highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a9236f2f88feff79c1d50b9b830750f91" kindref="member">dptr</ref>(const_cast&lt;T*&gt;(rhs.dataPtr(scomp))),</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>(rhs.domain),<sp/><ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>(ncomp),</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1aa86e53b5d3afdae2606ab0be640bb022" kindref="member">truesize</ref>(ncomp*rhs.domain.numPts())</highlight></codeline>
<codeline lineno="2010"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(scomp+ncomp<sp/>&lt;=<sp/>rhs.nComp());</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(make_type<sp/>==<sp/><ref refid="namespaceamrex_1a0a36c65d0681a832330b2812f16786a6a0a2bb4bcb2051ae3a06f94b5c1768e90" kindref="member">amrex::make_deep_copy</ref>)</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a9236f2f88feff79c1d50b9b830750f91" kindref="member">dptr</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a35dc22f1d61f4fb05ab75ae93f683d14" kindref="member">define</ref>();</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a9ebd13893eb0315ec776fef5720ea8ec" kindref="member">copy</ref>(rhs,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/>scomp,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/>0,<sp/>ncomp);</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(make_type<sp/>==<sp/><ref refid="namespaceamrex_1a0a36c65d0681a832330b2812f16786a6a1477998364b5f02d6ce68e3da29be1ba" kindref="member">amrex::make_alias</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">//<sp/>nothing<sp/>to<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aea69993eec3c9ca497cd0e47522b2ec6" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;BaseFab:<sp/>unknown<sp/>MakeType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2022"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2025" refid="classamrex_1_1BaseFab_1a8553c8f3915ded4cacfba0c490b98bc5" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a7e470d7e72db0c3169e83e34ce4f657b" kindref="member">BaseFab&lt;T&gt;::BaseFab</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp,<sp/>T*<sp/>p)</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classamrex_1_1BaseFab_1a9236f2f88feff79c1d50b9b830750f91" kindref="member">dptr</ref>(p),<sp/><ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>(bx),<sp/><ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>(ncomp),<sp/><ref refid="classamrex_1_1BaseFab_1aa86e53b5d3afdae2606ab0be640bb022" kindref="member">truesize</ref>(bx.<ref refid="classamrex_1_1BaseFab_1aaf26c270066d314a52ccdbc5f61ea302" kindref="member">numPts</ref>()*ncomp)</highlight></codeline>
<codeline lineno="2027"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2028"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2031" refid="classamrex_1_1BaseFab_1a2fe573448f0463cc140a1452a9510eb0" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a7e470d7e72db0c3169e83e34ce4f657b" kindref="member">BaseFab&lt;T&gt;::BaseFab</ref><sp/>(<ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;T&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a)<sp/>noexcept</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classamrex_1_1BaseFab_1a9236f2f88feff79c1d50b9b830750f91" kindref="member">dptr</ref>(a.p),</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>(<ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(a.begin.x,a.begin.y,a.begin.z)),</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(a.end.x-1,a.end.y-1,a.end.z-1))),</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>(a.ncomp),<sp/><ref refid="classamrex_1_1BaseFab_1aa86e53b5d3afdae2606ab0be640bb022" kindref="member">truesize</ref>(a.ncomp*a.nstride)</highlight></codeline>
<codeline lineno="2036"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2039" refid="classamrex_1_1BaseFab_1a27f1fbad6aff0f97e0291664ab11a4e4" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a7e470d7e72db0c3169e83e34ce4f657b" kindref="member">BaseFab&lt;T&gt;::BaseFab</ref><sp/>(<ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;T&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a,<sp/><ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref><sp/>t)<sp/>noexcept</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classamrex_1_1BaseFab_1a9236f2f88feff79c1d50b9b830750f91" kindref="member">dptr</ref>(a.p),</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>(<ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(a.begin.x,a.begin.y,a.begin.z)),</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(a.end.x-1,a.end.y-1,a.end.z-1)),<sp/>t),</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>(a.ncomp),<sp/><ref refid="classamrex_1_1BaseFab_1aa86e53b5d3afdae2606ab0be640bb022" kindref="member">truesize</ref>(a.ncomp*a.nstride)</highlight></codeline>
<codeline lineno="2044"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2047" refid="classamrex_1_1BaseFab_1a54d1d483f6f2d5e455eb9d8bb290d325" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a7e470d7e72db0c3169e83e34ce4f657b" kindref="member">BaseFab&lt;T&gt;::BaseFab</ref><sp/>(<ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;T const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a)<sp/>noexcept</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classamrex_1_1BaseFab_1a9236f2f88feff79c1d50b9b830750f91" kindref="member">dptr</ref>(const_cast&lt;T*&gt;(a.p)),</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>(<ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(a.begin.x,a.begin.y,a.begin.z)),</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(a.end.x-1,a.end.y-1,a.end.z-1))),</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>(a.ncomp),<sp/><ref refid="classamrex_1_1BaseFab_1aa86e53b5d3afdae2606ab0be640bb022" kindref="member">truesize</ref>(a.ncomp*a.nstride)</highlight></codeline>
<codeline lineno="2052"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2055" refid="classamrex_1_1BaseFab_1a17a67eac45989c89c30b7daa039a39b6" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a7e470d7e72db0c3169e83e34ce4f657b" kindref="member">BaseFab&lt;T&gt;::BaseFab</ref><sp/>(<ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;T const&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a,<sp/><ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref><sp/>t)<sp/>noexcept</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classamrex_1_1BaseFab_1a9236f2f88feff79c1d50b9b830750f91" kindref="member">dptr</ref>(const_cast&lt;T*&gt;(a.p)),</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>(<ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(a.begin.x,a.begin.y,a.begin.z)),</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(a.end.x-1,a.end.y-1,a.end.z-1)),<sp/>t),</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>(a.ncomp),<sp/><ref refid="classamrex_1_1BaseFab_1aa86e53b5d3afdae2606ab0be640bb022" kindref="member">truesize</ref>(a.ncomp*a.nstride)</highlight></codeline>
<codeline lineno="2060"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2063" refid="classamrex_1_1BaseFab_1acf7c1ac49465810a70b9ae1757263f30" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1acf7c1ac49465810a70b9ae1757263f30" kindref="member">BaseFab&lt;T&gt;::~BaseFab</ref><sp/>()<sp/>noexcept</highlight></codeline>
<codeline lineno="2064"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>AMREX_DEVICE_COMPILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1ae428e6a2645141dd817c288331575f26" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2071" refid="classamrex_1_1BaseFab_1aa2ce65c438db70645899b1d0c09f2455" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a7e470d7e72db0c3169e83e34ce4f657b" kindref="member">BaseFab&lt;T&gt;::BaseFab</ref><sp/>(<ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;&amp;<sp/>rhs)<sp/>noexcept</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1DataAllocator" kindref="compound">DataAllocator</ref>{rhs.<ref refid="structamrex_1_1DataAllocator_1a477a75a5d73137b29f1a6ddf31af40f7" kindref="member">arena</ref>()},</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a9236f2f88feff79c1d50b9b830750f91" kindref="member">dptr</ref>(rhs.dptr),<sp/><ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>(rhs.domain),</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>(rhs.nvar),<sp/><ref refid="classamrex_1_1BaseFab_1aa86e53b5d3afdae2606ab0be640bb022" kindref="member">truesize</ref>(rhs.truesize),</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1acf3b50d012730dd3521fb2be517573b9" kindref="member">ptr_owner</ref>(rhs.ptr_owner),<sp/><ref refid="classamrex_1_1BaseFab_1a4e65169d29942cf3adde870d63a91834" kindref="member">shared_memory</ref>(rhs.shared_memory)</highlight></codeline>
<codeline lineno="2076"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.dptr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.ptr_owner<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2079"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="2083" refid="classamrex_1_1BaseFab_1a201b78c57cdc2a2883bcd891d478be29" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a9a52c7475015824cfb60e6c67ecad522" kindref="member">BaseFab&lt;T&gt;::operator= </ref>(T<sp/>t)<sp/>noexcept</highlight></codeline>
<codeline lineno="2084"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a5f8ebb9050e7ffd02a957d0bdaca9886" kindref="member">setVal</ref>(t);</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2087"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2091" refid="classamrex_1_1BaseFab_1a48099208f15f741c739316388f61737a" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a48099208f15f741c739316388f61737a" kindref="member">BaseFab&lt;T&gt;::resize</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="2092"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref><sp/><sp/><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref><sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a9236f2f88feff79c1d50b9b830750f91" kindref="member">dptr</ref><sp/>==<sp/>0<sp/>||<sp/>!this-&gt;<ref refid="classamrex_1_1BaseFab_1acf3b50d012730dd3521fb2be517573b9" kindref="member">ptr_owner</ref>)</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a4e65169d29942cf3adde870d63a91834" kindref="member">shared_memory</ref>)</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aea69993eec3c9ca497cd0e47522b2ec6" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;BaseFab::resize:<sp/>BaseFab<sp/>in<sp/>shared<sp/>memory<sp/>cannot<sp/>increase<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a9236f2f88feff79c1d50b9b830750f91" kindref="member">dptr</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a35dc22f1d61f4fb05ab75ae93f683d14" kindref="member">define</ref>();</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>*this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>.<ref refid="classamrex_1_1Box_1a3d8fc04f3fa3fb6bb0721aea64cbb373" kindref="member">numPts</ref>()<sp/>&gt;<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1aa86e53b5d3afdae2606ab0be640bb022" kindref="member">truesize</ref>)</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a4e65169d29942cf3adde870d63a91834" kindref="member">shared_memory</ref>)</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aea69993eec3c9ca497cd0e47522b2ec6" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;BaseFab::resize:<sp/>BaseFab<sp/>in<sp/>shared<sp/>memory<sp/>cannot<sp/>increase<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1ae428e6a2645141dd817c288331575f26" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a35dc22f1d61f4fb05ab75ae93f683d14" kindref="member">define</ref>();</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"></highlight></codeline>
<codeline lineno="2115"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">,</highlight><highlight class="keyword">class</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="2117"><highlight class="normal">Elixir</highlight></codeline>
<codeline lineno="2118" refid="classamrex_1_1BaseFab_1ac5a36d719054f74a00bfc52e10ec9918" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1ac5a36d719054f74a00bfc52e10ec9918" kindref="member">BaseFab&lt;T&gt;::elixir</ref><sp/>()<sp/>noexcept</highlight></codeline>
<codeline lineno="2119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>o;</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>=<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1acf3b50d012730dd3521fb2be517573b9" kindref="member">ptr_owner</ref>;</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1acf3b50d012730dd3521fb2be517573b9" kindref="member">ptr_owner</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o<sp/>&amp;&amp;<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a9236f2f88feff79c1d50b9b830750f91" kindref="member">dptr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4fbfaf2aadcc46966315c9edc993fe9a" kindref="member">amrex::update_fab_stats</ref>(-this-&gt;<ref refid="classamrex_1_1BaseFab_1aa86e53b5d3afdae2606ab0be640bb022" kindref="member">truesize</ref>/this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>,<sp/>-this-&gt;<ref refid="classamrex_1_1BaseFab_1aa86e53b5d3afdae2606ab0be640bb022" kindref="member">truesize</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4fbfaf2aadcc46966315c9edc993fe9a" kindref="member">amrex::update_fab_stats</ref>(0,<sp/>-this-&gt;<ref refid="classamrex_1_1BaseFab_1aa86e53b5d3afdae2606ab0be640bb022" kindref="member">truesize</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Elixir((o<sp/>?<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a9236f2f88feff79c1d50b9b830750f91" kindref="member">dptr</ref><sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),<sp/>this-&gt;<ref refid="structamrex_1_1DataAllocator_1a477a75a5d73137b29f1a6ddf31af40f7" kindref="member">arena</ref>());</highlight></codeline>
<codeline lineno="2135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2139" refid="classamrex_1_1BaseFab_1ae428e6a2645141dd817c288331575f26" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1ae428e6a2645141dd817c288331575f26" kindref="member">BaseFab&lt;T&gt;::clear</ref><sp/>()<sp/>noexcept</highlight></codeline>
<codeline lineno="2140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a9236f2f88feff79c1d50b9b830750f91" kindref="member">dptr</ref>)</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>T::~T()<sp/>on<sp/>the<sp/>to-be-destroyed<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classamrex_1_1BaseFab_1acf3b50d012730dd3521fb2be517573b9" kindref="member">ptr_owner</ref>)</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a4e65169d29942cf3adde870d63a91834" kindref="member">shared_memory</ref>)</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aea69993eec3c9ca497cd0e47522b2ec6" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;BaseFab::clear:<sp/>BaseFab<sp/>cannot<sp/>be<sp/>owner<sp/>of<sp/>shared<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(std::is_trivially_destructible&lt;T&gt;::value,</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BaseFab&apos;s<sp/>T<sp/>must<sp/>be<sp/>trivially<sp/>destructible&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>ptr<sp/>=<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a9236f2f88feff79c1d50b9b830750f91" kindref="member">dptr</ref>;</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1aa86e53b5d3afdae2606ab0be640bb022" kindref="member">truesize</ref>;<sp/>i++,<sp/>ptr++)</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr-&gt;~T();</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="structamrex_1_1DataAllocator_1a5fa328945c30133a9b9c7f93ccf6e78f" kindref="member">free</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a9236f2f88feff79c1d50b9b830750f91" kindref="member">dptr</ref>);</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4fbfaf2aadcc46966315c9edc993fe9a" kindref="member">amrex::update_fab_stats</ref>(-this-&gt;truesize/this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>,<sp/>-this-&gt;truesize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4fbfaf2aadcc46966315c9edc993fe9a" kindref="member">amrex::update_fab_stats</ref>(0,<sp/>-this-&gt;truesize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a9236f2f88feff79c1d50b9b830750f91" kindref="member">dptr</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1aa86e53b5d3afdae2606ab0be640bb022" kindref="member">truesize</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2179"><highlight class="normal">std::unique_ptr&lt;T,DataDeleter&gt;</highlight></codeline>
<codeline lineno="2180" refid="classamrex_1_1BaseFab_1a4390286fe2327bd5f0561a75ee14499b" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a4390286fe2327bd5f0561a75ee14499b" kindref="member">BaseFab&lt;T&gt;::release</ref><sp/>()<sp/>noexcept</highlight></codeline>
<codeline lineno="2181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;T,DataDeleter&gt;<sp/>r(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/><ref refid="structamrex_1_1DataDeleter" kindref="compound">DataDeleter</ref>{this-&gt;<ref refid="structamrex_1_1DataAllocator_1a477a75a5d73137b29f1a6ddf31af40f7" kindref="member">arena</ref>()});</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a9236f2f88feff79c1d50b9b830750f91" kindref="member">dptr</ref><sp/>&amp;&amp;<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1acf3b50d012730dd3521fb2be517573b9" kindref="member">ptr_owner</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.reset(this-&gt;<ref refid="classamrex_1_1BaseFab_1a9236f2f88feff79c1d50b9b830750f91" kindref="member">dptr</ref>);</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1acf3b50d012730dd3521fb2be517573b9" kindref="member">ptr_owner</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref><sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4fbfaf2aadcc46966315c9edc993fe9a" kindref="member">amrex::update_fab_stats</ref>(-this-&gt;<ref refid="classamrex_1_1BaseFab_1aa86e53b5d3afdae2606ab0be640bb022" kindref="member">truesize</ref>/this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>,<sp/>-this-&gt;<ref refid="classamrex_1_1BaseFab_1aa86e53b5d3afdae2606ab0be640bb022" kindref="member">truesize</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4fbfaf2aadcc46966315c9edc993fe9a" kindref="member">amrex::update_fab_stats</ref>(0,<sp/>-this-&gt;<ref refid="classamrex_1_1BaseFab_1aa86e53b5d3afdae2606ab0be640bb022" kindref="member">truesize</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="2193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"></highlight></codeline>
<codeline lineno="2195"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2196"><highlight class="normal">std::size_t</highlight></codeline>
<codeline lineno="2197" refid="classamrex_1_1BaseFab_1ab6d603b9b75bc250970a3e3c6b3d8b9f" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1ab6d603b9b75bc250970a3e3c6b3d8b9f" kindref="member">BaseFab&lt;T&gt;::copyToMem</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>srcbox,</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp,</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/>dst)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="2201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1BaseFab_1a9359cb75c273aa3ab475d21ddc64f8f3" kindref="member">box</ref>().<ref refid="classamrex_1_1BaseFab_1a90d94d23b4c7ff81a86093956d38b332" kindref="member">contains</ref>(srcbox));</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(srccomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>srccomp+numcomp<sp/>&lt;=<sp/><ref refid="classamrex_1_1BaseFab_1a7406ec91dc010602121f1492f2d3a748" kindref="member">nComp</ref>());</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcbox.ok())</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dst);</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(srcbox);</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(srcbox);</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sp<sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>srccomp);</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numcomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dp[offset+i]<sp/>=<sp/>sp(i,j,k,n);</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>len.x;</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)*offset;</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"></highlight></codeline>
<codeline lineno="2233"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2234"><highlight class="normal">std::size_t</highlight></codeline>
<codeline lineno="2235" refid="classamrex_1_1BaseFab_1aff894507d4d10d5d7e543e7df458c7eb" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1aff894507d4d10d5d7e543e7df458c7eb" kindref="member">BaseFab&lt;T&gt;::copyFromMem</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/>dstbox,</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstcomp,</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp,</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src)<sp/>noexcept</highlight></codeline>
<codeline lineno="2239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1BaseFab_1a9359cb75c273aa3ab475d21ddc64f8f3" kindref="member">box</ref>().<ref refid="classamrex_1_1BaseFab_1a90d94d23b4c7ff81a86093956d38b332" kindref="member">contains</ref>(dstbox));</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(dstcomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dstcomp+numcomp<sp/>&lt;=<sp/><ref refid="classamrex_1_1BaseFab_1a7406ec91dc010602121f1492f2d3a748" kindref="member">nComp</ref>());</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dstbox.ok())</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/>sp<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(src);</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(dstbox);</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(dstbox);</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>dstcomp);</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numcomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>=<sp/>sp[offset+i];</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>len.x;</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)*offset;</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2272"><highlight class="normal">std::size_t</highlight></codeline>
<codeline lineno="2273" refid="classamrex_1_1BaseFab_1ace3197232ecaac3818c8312702de117d" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1ace3197232ecaac3818c8312702de117d" kindref="member">BaseFab&lt;T&gt;::addFromMem</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/>dstbox,</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstcomp,</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp,</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>src)<sp/>noexcept</highlight></codeline>
<codeline lineno="2277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1BaseFab_1a9359cb75c273aa3ab475d21ddc64f8f3" kindref="member">box</ref>().<ref refid="classamrex_1_1BaseFab_1a90d94d23b4c7ff81a86093956d38b332" kindref="member">contains</ref>(dstbox));</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(dstcomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dstcomp+numcomp<sp/>&lt;=<sp/><ref refid="classamrex_1_1BaseFab_1a7406ec91dc010602121f1492f2d3a748" kindref="member">nComp</ref>());</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dstbox.ok())</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/>sp<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(src);</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"></highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(dstbox);</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(dstbox);</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>dstcomp);</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numcomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>+=<sp/>sp[offset+i];</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>len.x;</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)*offset;</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2311" refid="classamrex_1_1BaseFab_1aede6afede165d8f14c5bedb035654c4a" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1aede6afede165d8f14c5bedb035654c4a" kindref="member">BaseFab&lt;T&gt;::setComplement</ref><sp/>(T<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ns,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num)<sp/>noexcept</highlight></codeline>
<codeline lineno="2312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1aede6afede165d8f14c5bedb035654c4a" kindref="member">setComplement</ref>(x,<sp/>b,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{ns},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{num});</highlight></codeline>
<codeline lineno="2314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"></highlight></codeline>
<codeline lineno="2316"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2318" refid="classamrex_1_1BaseFab_1a2fea35d2bbc16c788b653b28534a1644" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a2fea35d2bbc16c788b653b28534a1644" kindref="member">BaseFab&lt;T&gt;::abs</ref><sp/>()<sp/>noexcept</highlight></codeline>
<codeline lineno="2319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a2fea35d2bbc16c788b653b28534a1644" kindref="member">abs</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,0,this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>);</highlight></codeline>
<codeline lineno="2321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2325" refid="classamrex_1_1BaseFab_1a6dee88c201ecd2c4b069a9354762522a" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a2fea35d2bbc16c788b653b28534a1644" kindref="member">BaseFab&lt;T&gt;::abs</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="2326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a2fea35d2bbc16c788b653b28534a1644" kindref="member">abs</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,comp,numcomp);</highlight></codeline>
<codeline lineno="2328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2332" refid="classamrex_1_1BaseFab_1a3b0f42edd2b008d00f043ce5364732bb" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a2fea35d2bbc16c788b653b28534a1644" kindref="member">BaseFab&lt;T&gt;::abs</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp,</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="2335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(subbox);</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(subbox);</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>comp);</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numcomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>=<sp/><ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n));</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2353"><highlight class="normal">Real</highlight></codeline>
<codeline lineno="2354" refid="classamrex_1_1BaseFab_1a691a8ebd9d366bf9649472d721ff0f7b" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a691a8ebd9d366bf9649472d721ff0f7b" kindref="member">BaseFab&lt;T&gt;::norminfmask</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="2356"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>.<ref refid="classamrex_1_1Box_1a0b71343932dcc55cb16d1b2b95973114" kindref="member">contains</ref>(subbox));</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(scomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>scomp<sp/>+<sp/>ncomp<sp/>&lt;=<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>);</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>r<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/><sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(subbox);</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(subbox);</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>scomp);</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mp<sp/><sp/><sp/>=<sp/>mask.view(lo);</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"></highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mp(i,j,k,0))<sp/>{</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>t<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Real</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)));</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>(r<sp/>&gt;<sp/>t)<sp/>?<sp/>r<sp/>:<sp/>t;</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="2381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2384"><highlight class="normal">Real</highlight></codeline>
<codeline lineno="2385" refid="classamrex_1_1BaseFab_1af72c4b534beb0143a7b0fdc7114b1a78" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1af72c4b534beb0143a7b0fdc7114b1a78" kindref="member">BaseFab&lt;T&gt;::norm</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p,</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="2388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab_1af72c4b534beb0143a7b0fdc7114b1a78" kindref="member">norm</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,p,comp,numcomp);</highlight></codeline>
<codeline lineno="2390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"></highlight></codeline>
<codeline lineno="2392"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2393"><highlight class="normal">Real</highlight></codeline>
<codeline lineno="2394" refid="classamrex_1_1BaseFab_1af13ffa626053c497af1a0ba1dd9fc7ff" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1af72c4b534beb0143a7b0fdc7114b1a78" kindref="member">BaseFab&lt;T&gt;::norm</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p,</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp,</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="2398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>.<ref refid="classamrex_1_1Box_1a0b71343932dcc55cb16d1b2b95973114" kindref="member">contains</ref>(subbox));</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(comp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>comp<sp/>+<sp/>numcomp<sp/>&lt;=<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>);</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>nrm<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/><sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(subbox);</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(subbox);</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>comp);</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"></highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numcomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>t<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Real</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)));</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrm<sp/>=<sp/>(nrm<sp/>&gt;<sp/>t)<sp/>?<sp/>nrm<sp/>:<sp/>t;</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numcomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrm<sp/>+=<sp/><ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n));</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numcomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrm<sp/>+=<sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)*<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n);</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrm<sp/>=<sp/>std::sqrt(nrm);</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac0e2e23df625040ded95611ceae98352" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;BaseFab&lt;T&gt;::norm:<sp/>wrong<sp/>p&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrm;</highlight></codeline>
<codeline lineno="2452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"></highlight></codeline>
<codeline lineno="2454"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2455"><highlight class="normal">T</highlight></codeline>
<codeline lineno="2456" refid="classamrex_1_1BaseFab_1ad6a70c7c49967817b489033b4d7da696" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1ad6a70c7c49967817b489033b4d7da696" kindref="member">BaseFab&lt;T&gt;::min</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="2457"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1ad6a70c7c49967817b489033b4d7da696" kindref="member">min</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,comp);</highlight></codeline>
<codeline lineno="2459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2462"><highlight class="normal">T</highlight></codeline>
<codeline lineno="2463" refid="classamrex_1_1BaseFab_1adb99491368f94a317ec81970c9ad2eee" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1ad6a70c7c49967817b489033b4d7da696" kindref="member">BaseFab&lt;T&gt;::min</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="2464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/><sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(subbox);</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(subbox);</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>comp);</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"></highlight></codeline>
<codeline lineno="2469"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__CUDACC__)<sp/>||<sp/>(__CUDACC_VER_MAJOR__<sp/>!=<sp/>9)<sp/>||<sp/>(__CUDACC_VER_MINOR__<sp/>!=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>r<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;T&gt;::max</ref>();</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>r<sp/>=<sp/>*<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>.p;</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>t<sp/>=<sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,0);</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>(r<sp/>&lt;<sp/>t)<sp/>?<sp/>r<sp/>:<sp/>t;</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"></highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="2484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2487"><highlight class="normal">T</highlight></codeline>
<codeline lineno="2488" refid="classamrex_1_1BaseFab_1a6efb5346cc42795e6cd01323117f3ac3" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a6efb5346cc42795e6cd01323117f3ac3" kindref="member">BaseFab&lt;T&gt;::max</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="2489"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a6efb5346cc42795e6cd01323117f3ac3" kindref="member">max</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,comp);</highlight></codeline>
<codeline lineno="2491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"></highlight></codeline>
<codeline lineno="2493"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2494"><highlight class="normal">T</highlight></codeline>
<codeline lineno="2495" refid="classamrex_1_1BaseFab_1ab361c41e09518099b2a6c9f9db1f82d1" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a6efb5346cc42795e6cd01323117f3ac3" kindref="member">BaseFab&lt;T&gt;::max</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="2496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/><sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(subbox);</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(subbox);</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>comp);</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"></highlight></codeline>
<codeline lineno="2501"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__CUDACC__)<sp/>||<sp/>(__CUDACC_VER_MAJOR__<sp/>!=<sp/>9)<sp/>||<sp/>(__CUDACC_VER_MINOR__<sp/>!=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>r<sp/>=<sp/>std::numeric_limits&lt;T&gt;::lowest();</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>r<sp/>=<sp/>*<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>.p;</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2506"><highlight class="normal"></highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>t<sp/>=<sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,0);</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>(r<sp/>&gt;<sp/>t)<sp/>?<sp/>r<sp/>:<sp/>t;</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"></highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="2517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2520"><highlight class="normal">T</highlight></codeline>
<codeline lineno="2521" refid="classamrex_1_1BaseFab_1a3cdfbec8bb23d2a40379cd4819adf713" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a3cdfbec8bb23d2a40379cd4819adf713" kindref="member">BaseFab&lt;T&gt;::maxabs</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="2522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a3cdfbec8bb23d2a40379cd4819adf713" kindref="member">maxabs</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,comp);</highlight></codeline>
<codeline lineno="2524"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"></highlight></codeline>
<codeline lineno="2526"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2527"><highlight class="normal">T</highlight></codeline>
<codeline lineno="2528" refid="classamrex_1_1BaseFab_1aec266e1d4d3acc521279fe612f9d5f3b" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a3cdfbec8bb23d2a40379cd4819adf713" kindref="member">BaseFab&lt;T&gt;::maxabs</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="2529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/><sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(subbox);</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(subbox);</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>comp);</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__CUDACC__)<sp/>||<sp/>(__CUDACC_VER_MAJOR__<sp/>!=<sp/>9)<sp/>||<sp/>(__CUDACC_VER_MINOR__<sp/>!=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>r<sp/>=<sp/>std::numeric_limits&lt;T&gt;::lowest();</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>r<sp/>=<sp/>*<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>.p;</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>t<sp/>=<sp/><ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,0));</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>(r<sp/>&gt;<sp/>t)<sp/>?<sp/>r<sp/>:<sp/>t;</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"></highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="2550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></highlight></codeline>
<codeline lineno="2555" refid="classamrex_1_1BaseFab_1aa0d631fbfd6b81796222a5ab5fea24d3" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1aa0d631fbfd6b81796222a5ab5fea24d3" kindref="member">BaseFab&lt;T&gt;::minIndex</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="2556"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1aa0d631fbfd6b81796222a5ab5fea24d3" kindref="member">minIndex</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,comp);</highlight></codeline>
<codeline lineno="2558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></highlight></codeline>
<codeline lineno="2562" refid="classamrex_1_1BaseFab_1a890f10daf1e245f620d079b2cbfa9a31" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1aa0d631fbfd6b81796222a5ab5fea24d3" kindref="member">BaseFab&lt;T&gt;::minIndex</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="2563"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/><sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(subbox);</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(subbox);</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>comp);</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__CUDACC__)<sp/>||<sp/>(__CUDACC_VER_MAJOR__<sp/>!=<sp/>9)<sp/>||<sp/>(__CUDACC_VER_MINOR__<sp/>!=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imin,<sp/>jmin,<sp/>kmin);</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>min_val<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;T&gt;::max</ref>();</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imin=0,<sp/>jmin=0,<sp/>kmin=0);</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>min_val<sp/>=<sp/>*<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>.p;</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="normal"></highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,0)<sp/>&lt;<sp/>min_val)<sp/>{</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_val<sp/>=<sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,0);</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(imin<sp/>=<sp/>i;,<sp/><sp/>jmin<sp/>=<sp/>j;,<sp/><sp/>kmin<sp/>=<sp/>k;)</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(imin+lo.x,jmin+lo.y,kmin+lo.z));</highlight></codeline>
<codeline lineno="2588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"></highlight></codeline>
<codeline lineno="2590"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></highlight></codeline>
<codeline lineno="2592" refid="classamrex_1_1BaseFab_1ac1f1baf311e46d9e868d76bf659dd492" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1ac1f1baf311e46d9e868d76bf659dd492" kindref="member">BaseFab&lt;T&gt;::indexFromValue</ref><sp/>(Real<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="2593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__CUDACC__)<sp/>||<sp/>(__CUDACC_VER_MAJOR__<sp/>!=<sp/>9)<sp/>||<sp/>(__CUDACC_VER_MINOR__<sp/>!=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imin<sp/>=<sp/>std::numeric_limits&lt;int&gt;::lowest(),</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jmin<sp/>=<sp/>std::numeric_limits&lt;int&gt;::lowest(),</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kmin<sp/>=<sp/>std::numeric_limits&lt;int&gt;::lowest());</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imin<sp/>=<sp/>INT_MIN,<sp/>jmin<sp/>=<sp/>INT_MIN,<sp/>kmin<sp/>=<sp/>INT_MIN);</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2601"><highlight class="normal"></highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/><sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(subbox);</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(subbox);</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>comp);</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"></highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,0)<sp/>==<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(imin<sp/>=<sp/>i;,<sp/><sp/>jmin<sp/>=<sp/>j;,<sp/><sp/>kmin<sp/>=<sp/>k;)</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(imin+lo.x,jmin+lo.y,kmin+lo.z));</highlight></codeline>
<codeline lineno="2617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"></highlight></codeline>
<codeline lineno="2619"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2621" refid="classamrex_1_1BaseFab_1a3e4a6b4a42c7a55598df8a7e2b13a567" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1aa0d631fbfd6b81796222a5ab5fea24d3" kindref="member">BaseFab&lt;T&gt;::minIndex</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,<sp/>Real&amp;<sp/>min_val,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>min_idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="2622"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/><sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(subbox);</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(subbox);</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>comp);</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"></highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,0)<sp/>&lt;<sp/>min_val)<sp/>{</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_val<sp/>=<sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,0);</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_idx<sp/>=<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(i,j,k));</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_D_TERM(min_idx[0]<sp/>+=<sp/>lo.x;,<sp/>min_idx[1]<sp/>+=<sp/>lo.y;,<sp/>min_idx[2]<sp/>+=<sp/>lo.z);</highlight></codeline>
<codeline lineno="2638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"></highlight></codeline>
<codeline lineno="2640"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></highlight></codeline>
<codeline lineno="2642" refid="classamrex_1_1BaseFab_1a8284115ab508ec6b6dc1a7bd023e3b89" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a8284115ab508ec6b6dc1a7bd023e3b89" kindref="member">BaseFab&lt;T&gt;::maxIndex</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="2643"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8284115ab508ec6b6dc1a7bd023e3b89" kindref="member">maxIndex</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,comp);</highlight></codeline>
<codeline lineno="2645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"></highlight></codeline>
<codeline lineno="2647"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></highlight></codeline>
<codeline lineno="2649" refid="classamrex_1_1BaseFab_1aae5d45037d346a7a7f51611396199e8e" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a8284115ab508ec6b6dc1a7bd023e3b89" kindref="member">BaseFab&lt;T&gt;::maxIndex</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="2651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/><sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(subbox);</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(subbox);</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>comp);</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"></highlight></codeline>
<codeline lineno="2656"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__CUDACC__)<sp/>||<sp/>(__CUDACC_VER_MAJOR__<sp/>!=<sp/>9)<sp/>||<sp/>(__CUDACC_VER_MINOR__<sp/>!=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imax,<sp/>jmax,<sp/>kmax);</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>max_val<sp/>=<sp/>std::numeric_limits&lt;T&gt;::lowest();</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imax=0,<sp/>jmax=0,<sp/>kmax=0);</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>max_val<sp/>=<sp/>*<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>.p;</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"></highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,0)<sp/>&gt;<sp/>max_val)<sp/>{</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_val<sp/>=<sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,0);</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(imax<sp/>=<sp/>i;,<sp/>jmax<sp/>=<sp/>j;,<sp/>kmax<sp/>=<sp/>k;)</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"></highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(imax+lo.x,jmax+lo.y,kmax+lo.z));</highlight></codeline>
<codeline lineno="2676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"></highlight></codeline>
<codeline lineno="2678"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2680" refid="classamrex_1_1BaseFab_1a2113a9b7b7bb69febe5899ccee7f37f2" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a8284115ab508ec6b6dc1a7bd023e3b89" kindref="member">BaseFab&lt;T&gt;::maxIndex</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,<sp/>Real&amp;<sp/>max_val,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>max_idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="2681"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/><sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(subbox);</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(subbox);</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>comp);</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"></highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,0)<sp/>&gt;<sp/>max_val)<sp/>{</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_val<sp/>=<sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,0);</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_idx<sp/>=<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(i,j,k));</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_D_TERM(max_idx[0]<sp/>+=<sp/>lo.x;,<sp/>max_idx[1]<sp/>+=<sp/>lo.y;,<sp/>max_idx[2]<sp/>+=<sp/>lo.z);</highlight></codeline>
<codeline lineno="2697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"></highlight></codeline>
<codeline lineno="2699"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2701" refid="classamrex_1_1BaseFab_1a554f518d10db9e4f7ba253396479b862" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a554f518d10db9e4f7ba253396479b862" kindref="member">BaseFab&lt;T&gt;::maskLT</ref><sp/>(<ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="2704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/>mask.resize(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,1);</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/>mask.setVal(0);</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"></highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/><sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>);</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>);</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>comp);</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mp<sp/><sp/><sp/>=<sp/>mask.view(lo);</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"></highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,0)<sp/>&lt;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp(i,j,k,0)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++cnt;</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cnt;</highlight></codeline>
<codeline lineno="2727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"></highlight></codeline>
<codeline lineno="2729"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2731" refid="classamrex_1_1BaseFab_1aee32dcf282a28ad947aa119859ec6d9e" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1aee32dcf282a28ad947aa119859ec6d9e" kindref="member">BaseFab&lt;T&gt;::maskLE</ref><sp/>(<ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="2734"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/>mask.resize(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,1);</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/>mask.setVal(0);</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"></highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/><sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>);</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>);</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>comp);</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mp<sp/><sp/><sp/>=<sp/>mask.view(lo);</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"></highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,0)<sp/>&lt;=<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp(i,j,k,0)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++cnt;</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"></highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cnt;</highlight></codeline>
<codeline lineno="2757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"></highlight></codeline>
<codeline lineno="2759"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2761" refid="classamrex_1_1BaseFab_1a66695e0608fe850a6c9d44b0e022b6ba" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a66695e0608fe850a6c9d44b0e022b6ba" kindref="member">BaseFab&lt;T&gt;::maskEQ</ref><sp/>(<ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="2764"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/>mask.resize(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,1);</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/>mask.setVal(0);</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"></highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/><sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>);</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>);</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>comp);</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mp<sp/><sp/><sp/>=<sp/>mask.view(lo);</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"></highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,0)<sp/>==<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp(i,j,k,0)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++cnt;</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"></highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cnt;</highlight></codeline>
<codeline lineno="2787"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"></highlight></codeline>
<codeline lineno="2789"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2791" refid="classamrex_1_1BaseFab_1a1993ea667fc5b620195bb42fe003cc1a" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a1993ea667fc5b620195bb42fe003cc1a" kindref="member">BaseFab&lt;T&gt;::maskGT</ref><sp/>(<ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="2794"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/>mask.resize(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,1);</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/>mask.setVal(0);</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"></highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"></highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/><sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>);</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>);</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>comp);</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mp<sp/><sp/><sp/>=<sp/>mask.view(lo);</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"></highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,0)<sp/>&gt;<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp(i,j,k,0)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++cnt;</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cnt;</highlight></codeline>
<codeline lineno="2817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2821" refid="classamrex_1_1BaseFab_1af4a8317171c537136ef82e4502e0d7d4" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1af4a8317171c537136ef82e4502e0d7d4" kindref="member">BaseFab&lt;T&gt;::maskGE</ref><sp/>(<ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="2824"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/>mask.resize(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,1);</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/>mask.setVal(0);</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"></highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"></highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/><sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>);</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>);</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>comp);</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mp<sp/><sp/><sp/>=<sp/>mask.view(lo);</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"></highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,0)<sp/>&gt;=<sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mp(i,j,k,0)<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++cnt;</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"></highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cnt;</highlight></codeline>
<codeline lineno="2847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"></highlight></codeline>
<codeline lineno="2849"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="2851" refid="classamrex_1_1BaseFab_1a465cca97d23428cb99803d3645b99a05" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a465cca97d23428cb99803d3645b99a05" kindref="member">BaseFab&lt;T&gt;::atomicAdd</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>x)<sp/>noexcept</highlight></codeline>
<codeline lineno="2852"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>ovlp(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>);</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/>ovlp<sp/>&amp;=<sp/>x.domain;</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ovlp.<ref refid="classamrex_1_1Box_1a615de7e44f8ba7f007be244af31b5a97" kindref="member">ok</ref>()<sp/>?<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a465cca97d23428cb99803d3645b99a05" kindref="member">atomicAdd</ref>(x,ovlp,ovlp,0,0,this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>)<sp/>:<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"></highlight></codeline>
<codeline lineno="2858"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="2860" refid="classamrex_1_1BaseFab_1aa3293873bc0c5ccb66b367b84889e042" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1aa3293873bc0c5ccb66b367b84889e042" kindref="member">BaseFab&lt;T&gt;::saxpy</ref><sp/>(T<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>srcbox,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>destbox,</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="2863"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(srcbox.ok());</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(x.box().contains(srcbox));</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destbox.ok());</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1BaseFab_1a9359cb75c273aa3ab475d21ddc64f8f3" kindref="member">box</ref>().<ref refid="classamrex_1_1BaseFab_1a90d94d23b4c7ff81a86093956d38b332" kindref="member">contains</ref>(destbox));</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destbox.sameSize(srcbox));</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<sp/>srccomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/><sp/>srccomp+numcomp<sp/>&lt;=<sp/>x.nComp());</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destcomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>destcomp+numcomp<sp/>&lt;=<sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a7406ec91dc010602121f1492f2d3a748" kindref="member">nComp</ref>());</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"></highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(destbox);</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dlo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(destbox);</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>slo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(srcbox);</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(dlo,<sp/>destcomp);</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sp<sp/><sp/>=<sp/>x.view(slo,<sp/>srccomp);</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"></highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numcomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>+=<sp/>a<sp/>*<sp/>sp(i,j,k,n);</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2890"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"></highlight></codeline>
<codeline lineno="2892"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="2894" refid="classamrex_1_1BaseFab_1ae39c876df7b0ebfe1d9e6dfba4e5c00e" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1aa3293873bc0c5ccb66b367b84889e042" kindref="member">BaseFab&lt;T&gt;::saxpy</ref><sp/>(T<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>x)<sp/>noexcept</highlight></codeline>
<codeline lineno="2895"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>ovlp(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>);</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/><sp/>ovlp<sp/>&amp;=<sp/>x.domain;</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ovlp.<ref refid="classamrex_1_1Box_1a615de7e44f8ba7f007be244af31b5a97" kindref="member">ok</ref>()<sp/>?<sp/><ref refid="classamrex_1_1BaseFab_1aa3293873bc0c5ccb66b367b84889e042" kindref="member">saxpy</ref>(a,x,ovlp,ovlp,0,0,this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>)<sp/>:<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2899"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"></highlight></codeline>
<codeline lineno="2901"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="2903" refid="classamrex_1_1BaseFab_1afd1a05b03c382d30efb2fc8ea0254eee" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1afd1a05b03c382d30efb2fc8ea0254eee" kindref="member">BaseFab&lt;T&gt;::xpay</ref><sp/>(T<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>x,</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>srcbox,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>destbox,</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="2906"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(srcbox.ok());</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(x.box().contains(srcbox));</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destbox.ok());</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1BaseFab_1a9359cb75c273aa3ab475d21ddc64f8f3" kindref="member">box</ref>().<ref refid="classamrex_1_1BaseFab_1a90d94d23b4c7ff81a86093956d38b332" kindref="member">contains</ref>(destbox));</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destbox.sameSize(srcbox));</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<sp/>srccomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/><sp/>srccomp+numcomp<sp/>&lt;=<sp/>x.nComp());</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destcomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>destcomp+numcomp<sp/>&lt;=<sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a7406ec91dc010602121f1492f2d3a748" kindref="member">nComp</ref>());</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"></highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(destbox);</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dlo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(destbox);</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>slo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(srcbox);</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(dlo,<sp/>destcomp);</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sp<sp/><sp/>=<sp/>x.view(slo,<sp/>srccomp);</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"></highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numcomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>=<sp/>sp(i,j,k,n)<sp/>+<sp/>a<sp/>*<sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n);</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"></highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2933"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"></highlight></codeline>
<codeline lineno="2935"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="2937" refid="classamrex_1_1BaseFab_1a4852ae806ae958a9ba25e80025510638" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a4852ae806ae958a9ba25e80025510638" kindref="member">BaseFab&lt;T&gt;::addproduct</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>destbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp,</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp1,</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp2)<sp/>noexcept</highlight></codeline>
<codeline lineno="2940"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destbox.ok());</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1BaseFab_1a9359cb75c273aa3ab475d21ddc64f8f3" kindref="member">box</ref>().<ref refid="classamrex_1_1BaseFab_1a90d94d23b4c7ff81a86093956d38b332" kindref="member">contains</ref>(destbox));</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<sp/><sp/><sp/>comp1<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/><sp/><sp/><sp/>comp1+numcomp<sp/>&lt;=<sp/>src1.nComp());</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<sp/><sp/><sp/>comp2<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/><sp/><sp/><sp/>comp2+numcomp<sp/>&lt;=<sp/>src2.nComp());</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destcomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>destcomp+numcomp<sp/>&lt;=<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a7406ec91dc010602121f1492f2d3a748" kindref="member">nComp</ref>());</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"></highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(destbox);</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(destbox);</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>destcomp);</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sp1<sp/>=<sp/>src1.view(lo,<sp/>comp1);</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sp2<sp/>=<sp/>src2.view(lo,<sp/>comp2);</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"></highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numcomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>+=<sp/>sp1(i,j,k,n)<sp/>*<sp/>sp2(i,j,k,n);</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"></highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"></highlight></codeline>
<codeline lineno="2967"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="2969" refid="classamrex_1_1BaseFab_1a0f67d27a0d9b85b1ec3bb31cee3936de" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a0f67d27a0d9b85b1ec3bb31cee3936de" kindref="member">BaseFab&lt;T&gt;::linComb</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>f1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp1,</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>f2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp2,</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>alpha,<sp/>Real<sp/>beta,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="2973"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(b1.ok());</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(f1.box().contains(b1));</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(b2.ok());</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(f2.box().contains(b2));</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(b.ok());</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1BaseFab_1a9359cb75c273aa3ab475d21ddc64f8f3" kindref="member">box</ref>().<ref refid="classamrex_1_1BaseFab_1a90d94d23b4c7ff81a86093956d38b332" kindref="member">contains</ref>(b));</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(b.sameSize(b1));</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(b.sameSize(b2));</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(comp1<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>comp1+numcomp<sp/>&lt;=<sp/>f1.nComp());</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(comp2<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>comp2+numcomp<sp/>&lt;=<sp/>f2.nComp());</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(comp<sp/><sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>comp<sp/>+numcomp<sp/>&lt;=<sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a7406ec91dc010602121f1492f2d3a748" kindref="member">nComp</ref>());</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"></highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(b);</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dlo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(b);</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>slo1<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(b1);</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>slo2<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(b2);</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(dlo,<sp/><sp/><sp/>comp);</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sp1<sp/>=<sp/>f1.view(slo1,<sp/>comp1);</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sp2<sp/>=<sp/>f2.view(slo2,<sp/>comp2);</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"></highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numcomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>=<sp/>alpha*sp1(i,j,k,n)<sp/>+<sp/>beta*sp2(i,j,k,n);</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"></highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3006"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"></highlight></codeline>
<codeline lineno="3008"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3009"><highlight class="normal">T</highlight></codeline>
<codeline lineno="3010" refid="classamrex_1_1BaseFab_1adb03ed2032296735e2b188be56558fbf" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1adb03ed2032296735e2b188be56558fbf" kindref="member">BaseFab&lt;T&gt;::dot</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>xbx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xcomp,</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>ybx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ycomp,</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="3013"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(xbx.ok());</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1BaseFab_1a9359cb75c273aa3ab475d21ddc64f8f3" kindref="member">box</ref>().<ref refid="classamrex_1_1BaseFab_1a90d94d23b4c7ff81a86093956d38b332" kindref="member">contains</ref>(xbx));</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(y.box().contains(ybx));</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(xbx.sameSize(ybx));</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(xcomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>xcomp+numcomp<sp/>&lt;=<sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a7406ec91dc010602121f1492f2d3a748" kindref="member">nComp</ref>());</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(ycomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>ycomp+numcomp<sp/>&lt;=<sp/>y.nComp());</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"></highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"></highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(xbx);</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xlo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(xbx);</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ylo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(ybx);</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xp<sp/><sp/>=<sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(xlo,<sp/>xcomp);</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>yp<sp/><sp/>=<sp/>y.view(ylo,<sp/>ycomp);</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"></highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numcomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/>xpr<sp/>=<sp/>&amp;(xp(0,j,k,n));</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/>ypr<sp/>=<sp/>&amp;(yp(0,j,k,n));</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>+=<sp/>xp(i,j,k,n)<sp/>*<sp/>yp(i,j,k,n);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>+=<sp/>xpr[i]<sp/>*<sp/>ypr[i];</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"></highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="3043"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"></highlight></codeline>
<codeline lineno="3045"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3046"><highlight class="normal">T</highlight></codeline>
<codeline lineno="3047" refid="classamrex_1_1BaseFab_1a6b8d97aba07d9806cf1e711ca44f283a" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a6b8d97aba07d9806cf1e711ca44f283a" kindref="member">BaseFab&lt;T&gt;::dotmask</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>xbx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xcomp,</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>ybx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ycomp,</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="3050"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(xbx.ok());</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1BaseFab_1a9359cb75c273aa3ab475d21ddc64f8f3" kindref="member">box</ref>().<ref refid="classamrex_1_1BaseFab_1a90d94d23b4c7ff81a86093956d38b332" kindref="member">contains</ref>(xbx));</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(y.box().contains(ybx));</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(xbx.sameSize(ybx));</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(xcomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>xcomp+numcomp<sp/>&lt;=<sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a7406ec91dc010602121f1492f2d3a748" kindref="member">nComp</ref>());</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(ycomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>ycomp+numcomp<sp/>&lt;=<sp/>y.nComp());</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"></highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"></highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(xbx);</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xlo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(xbx);</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ylo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(ybx);</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xp<sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(xlo,<sp/>xcomp);</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>yp<sp/><sp/>=<sp/><sp/><sp/><sp/>y.view(ylo,<sp/>ycomp);</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mp<sp/><sp/>=<sp/>mask.view(xlo);</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"></highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numcomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mp(i,j,k,0)));</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>+=<sp/>xp(i,j,k,n)<sp/>*<sp/>yp(i,j,k,n)<sp/>*<sp/>m;</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"></highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="3079"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"></highlight></codeline>
<codeline lineno="3081"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3082"><highlight class="normal">T</highlight></codeline>
<codeline lineno="3083" refid="classamrex_1_1BaseFab_1add7f10ec971a7d474f44c0d22fb4c750" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1add7f10ec971a7d474f44c0d22fb4c750" kindref="member">BaseFab&lt;T&gt;::sum</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="3084"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1add7f10ec971a7d474f44c0d22fb4c750" kindref="member">sum</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{comp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{numcomp});</highlight></codeline>
<codeline lineno="3086"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"></highlight></codeline>
<codeline lineno="3088"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3089"><highlight class="normal">T</highlight></codeline>
<codeline lineno="3090" refid="classamrex_1_1BaseFab_1ae46a718f3837f9b75a52220b0e47cee1" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1add7f10ec971a7d474f44c0d22fb4c750" kindref="member">BaseFab&lt;T&gt;::sum</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="3091"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1add7f10ec971a7d474f44c0d22fb4c750" kindref="member">sum</ref>(subbox,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{comp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{numcomp});</highlight></codeline>
<codeline lineno="3093"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"></highlight></codeline>
<codeline lineno="3095"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3097" refid="classamrex_1_1BaseFab_1afb0bd52c18b3df27d6d71c62d04feac8" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a4891ce9d3119ffb084ecad50086762de" kindref="member">BaseFab&lt;T&gt;::negate</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3098"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a4891ce9d3119ffb084ecad50086762de" kindref="member">negate</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{comp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{numcomp});</highlight></codeline>
<codeline lineno="3100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"></highlight></codeline>
<codeline lineno="3102"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3104" refid="classamrex_1_1BaseFab_1acee01afa8dbc786f92273b8160de3912" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a4891ce9d3119ffb084ecad50086762de" kindref="member">BaseFab&lt;T&gt;::negate</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a4891ce9d3119ffb084ecad50086762de" kindref="member">negate</ref>(b,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{comp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{numcomp});</highlight></codeline>
<codeline lineno="3107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"></highlight></codeline>
<codeline lineno="3109"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3111" refid="classamrex_1_1BaseFab_1ab51ecd96dac62bd644843d0d0971af2e" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a8a096cb9ebbc7ebd2005aea069aacdfb" kindref="member">BaseFab&lt;T&gt;::invert</ref><sp/>(T<sp/>r,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8a096cb9ebbc7ebd2005aea069aacdfb" kindref="member">invert</ref>(r,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{comp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{numcomp});</highlight></codeline>
<codeline lineno="3114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"></highlight></codeline>
<codeline lineno="3116"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3118" refid="classamrex_1_1BaseFab_1a8a096cb9ebbc7ebd2005aea069aacdfb" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a8a096cb9ebbc7ebd2005aea069aacdfb" kindref="member">BaseFab&lt;T&gt;::invert</ref><sp/>(T<sp/>r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8a096cb9ebbc7ebd2005aea069aacdfb" kindref="member">invert</ref>(r,<sp/>b,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{comp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{numcomp});</highlight></codeline>
<codeline lineno="3121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"></highlight></codeline>
<codeline lineno="3123"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3125" refid="classamrex_1_1BaseFab_1accee2eea8d148521de14c1fa4b2926a5" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a8fdf51ba6391c4c2de6785eb99c1c6f7" kindref="member">BaseFab&lt;T&gt;::plus</ref><sp/>(T<sp/>r,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8fdf51ba6391c4c2de6785eb99c1c6f7" kindref="member">plus</ref>(r,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{comp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{numcomp});</highlight></codeline>
<codeline lineno="3128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"></highlight></codeline>
<codeline lineno="3130"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3132" refid="classamrex_1_1BaseFab_1a8fdf51ba6391c4c2de6785eb99c1c6f7" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a8fdf51ba6391c4c2de6785eb99c1c6f7" kindref="member">BaseFab&lt;T&gt;::plus</ref><sp/>(T<sp/>r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8fdf51ba6391c4c2de6785eb99c1c6f7" kindref="member">plus</ref>(r,<sp/>b,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{comp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{numcomp});</highlight></codeline>
<codeline lineno="3135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"></highlight></codeline>
<codeline lineno="3137"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3139" refid="classamrex_1_1BaseFab_1aec220df94ea87bd24c80d1afb7ddbbf7" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a8fdf51ba6391c4c2de6785eb99c1c6f7" kindref="member">BaseFab&lt;T&gt;::plus</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8fdf51ba6391c4c2de6785eb99c1c6f7" kindref="member">plus</ref>(src,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref>{srccomp},<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{destcomp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{numcomp});</highlight></codeline>
<codeline lineno="3142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"></highlight></codeline>
<codeline lineno="3144"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3146" refid="classamrex_1_1BaseFab_1ad94e55a76af90b1cae932eb9bb1e4b20" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a465cca97d23428cb99803d3645b99a05" kindref="member">BaseFab&lt;T&gt;::atomicAdd</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>ovlp(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>);</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/>ovlp<sp/>&amp;=<sp/>src.domain;</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ovlp.<ref refid="classamrex_1_1Box_1a615de7e44f8ba7f007be244af31b5a97" kindref="member">ok</ref>()<sp/>?<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a465cca97d23428cb99803d3645b99a05" kindref="member">atomicAdd</ref>(src,ovlp,ovlp,srccomp,destcomp,numcomp)<sp/>:<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"></highlight></codeline>
<codeline lineno="3156"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3158" refid="classamrex_1_1BaseFab_1afaa5ebdb3a26840f34fd042ec6cec8b5" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a8fdf51ba6391c4c2de6785eb99c1c6f7" kindref="member">BaseFab&lt;T&gt;::plus</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subbox,</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8fdf51ba6391c4c2de6785eb99c1c6f7" kindref="member">plus</ref>(src,<sp/>subbox,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref>{srccomp},<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{destcomp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{numcomp});</highlight></codeline>
<codeline lineno="3165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"></highlight></codeline>
<codeline lineno="3167"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3169" refid="classamrex_1_1BaseFab_1a9dc9776751ca21e808ed4419597fd579" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a465cca97d23428cb99803d3645b99a05" kindref="member">BaseFab&lt;T&gt;::atomicAdd</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subbox,</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>ovlp(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>);</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/>ovlp<sp/>&amp;=<sp/>src.domain;</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/>ovlp<sp/>&amp;=<sp/>subbox;</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ovlp.<ref refid="classamrex_1_1Box_1a615de7e44f8ba7f007be244af31b5a97" kindref="member">ok</ref>()<sp/>?<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a465cca97d23428cb99803d3645b99a05" kindref="member">atomicAdd</ref>(src,ovlp,ovlp,srccomp,destcomp,numcomp)<sp/>:<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"></highlight></codeline>
<codeline lineno="3181"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3183" refid="classamrex_1_1BaseFab_1ac9cd82780ca0eef318009cea3275ee32" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a8fdf51ba6391c4c2de6785eb99c1c6f7" kindref="member">BaseFab&lt;T&gt;::plus</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcbox,</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destbox,</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destbox.ok());</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(src.box().contains(srcbox));</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1BaseFab_1a9359cb75c273aa3ab475d21ddc64f8f3" kindref="member">box</ref>().<ref refid="classamrex_1_1BaseFab_1a90d94d23b4c7ff81a86093956d38b332" kindref="member">contains</ref>(destbox));</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destbox.sameSize(srcbox));</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(srccomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>srccomp+numcomp<sp/>&lt;=<sp/>src.nComp());</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destcomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>destcomp+numcomp<sp/>&lt;=<sp/><ref refid="classamrex_1_1BaseFab_1a7406ec91dc010602121f1492f2d3a748" kindref="member">nComp</ref>());</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"></highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(destbox);</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dlo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(destbox);</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>slo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(srcbox);</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(dlo,<sp/>destcomp);</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sp<sp/><sp/>=<sp/>src.view(slo,<sp/>srccomp);</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"></highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numcomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>+=<sp/>sp(i,j,k,n);</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"></highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"></highlight></codeline>
<codeline lineno="3217"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3219" refid="classamrex_1_1BaseFab_1a783b783e87ed8b6261ab89b462a011a4" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a465cca97d23428cb99803d3645b99a05" kindref="member">BaseFab&lt;T&gt;::atomicAdd</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcbox,</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destbox,</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destbox.ok());</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(src.box().contains(srcbox));</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1BaseFab_1a9359cb75c273aa3ab475d21ddc64f8f3" kindref="member">box</ref>().<ref refid="classamrex_1_1BaseFab_1a90d94d23b4c7ff81a86093956d38b332" kindref="member">contains</ref>(destbox));</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destbox.sameSize(srcbox));</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(srccomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>srccomp+numcomp<sp/>&lt;=<sp/>src.nComp());</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destcomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>destcomp+numcomp<sp/>&lt;=<sp/><ref refid="classamrex_1_1BaseFab_1a7406ec91dc010602121f1492f2d3a748" kindref="member">nComp</ref>());</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"></highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(destbox);</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dlo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(destbox);</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>slo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(srcbox);</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(dlo,<sp/>destcomp);</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sp<sp/><sp/>=<sp/>src.view(slo,<sp/>srccomp);</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"></highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numcomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>dp1d<sp/>=<sp/>&amp;(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(0,j,k,n));</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>sp1d<sp/>=<sp/>&amp;(sp(0,j,k,n));</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/>dp1d<sp/>=<sp/>&amp;(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(0,j,k,n));</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/>sp1d<sp/>=<sp/>&amp;(sp(0,j,k,n));</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="3249"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>AMREX_DEVICE_COMPILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3252"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3253"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>atomic<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3254"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dp1d[i]<sp/>+=<sp/>sp1d[i];</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a8aa0aebdef6e669c20ff7e5585ea6f0d" kindref="member">amrex::Gpu::Atomic::Add</ref>(&amp;(dp1d[i]),<sp/>sp1d[i]);</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"></highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"></highlight></codeline>
<codeline lineno="3267"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3269" refid="classamrex_1_1BaseFab_1affb7fcc63d9eec0c3e069390fe3eaf96" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1affb7fcc63d9eec0c3e069390fe3eaf96" kindref="member">BaseFab&lt;T&gt;::minus</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1affb7fcc63d9eec0c3e069390fe3eaf96" kindref="member">minus</ref>(src,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref>{srccomp},<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{destcomp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{numcomp});</highlight></codeline>
<codeline lineno="3272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"></highlight></codeline>
<codeline lineno="3274"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3276" refid="classamrex_1_1BaseFab_1a819253575ebcc6cdd5987808d25d98e4" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1affb7fcc63d9eec0c3e069390fe3eaf96" kindref="member">BaseFab&lt;T&gt;::minus</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1affb7fcc63d9eec0c3e069390fe3eaf96" kindref="member">minus</ref>(src,<sp/>subbox,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref>{srccomp},<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{destcomp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{numcomp});</highlight></codeline>
<codeline lineno="3279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"></highlight></codeline>
<codeline lineno="3281"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3283" refid="classamrex_1_1BaseFab_1ac738b33cc645ea16189f8acbd126424a" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1affb7fcc63d9eec0c3e069390fe3eaf96" kindref="member">BaseFab&lt;T&gt;::minus</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcbox,</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destbox,</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destbox.ok());</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(src.box().contains(srcbox));</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1BaseFab_1a9359cb75c273aa3ab475d21ddc64f8f3" kindref="member">box</ref>().<ref refid="classamrex_1_1BaseFab_1a90d94d23b4c7ff81a86093956d38b332" kindref="member">contains</ref>(destbox));</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destbox.sameSize(srcbox));</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(srccomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>srccomp+numcomp<sp/>&lt;=<sp/>src.nComp());</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destcomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>destcomp+numcomp<sp/>&lt;=<sp/><ref refid="classamrex_1_1BaseFab_1a7406ec91dc010602121f1492f2d3a748" kindref="member">nComp</ref>());</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"></highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(destbox);</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dlo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(destbox);</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>slo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(srcbox);</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(dlo,<sp/>destcomp);</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sp<sp/><sp/>=<sp/>src.view(slo,<sp/>srccomp);</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"></highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numcomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>-=<sp/>sp(i,j,k,n);</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"></highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"></highlight></codeline>
<codeline lineno="3317"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3319" refid="classamrex_1_1BaseFab_1a75273f716825d8cf89f7c94be5f1f81c" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a75273f716825d8cf89f7c94be5f1f81c" kindref="member">BaseFab&lt;T&gt;::mult</ref><sp/>(T<sp/>r,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a75273f716825d8cf89f7c94be5f1f81c" kindref="member">mult</ref>(r,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{comp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{numcomp});</highlight></codeline>
<codeline lineno="3322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"></highlight></codeline>
<codeline lineno="3324"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3326" refid="classamrex_1_1BaseFab_1adc08e477364c8ca1d6b02ddd96cfca4d" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a75273f716825d8cf89f7c94be5f1f81c" kindref="member">BaseFab&lt;T&gt;::mult</ref><sp/>(T<sp/>r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a75273f716825d8cf89f7c94be5f1f81c" kindref="member">mult</ref>(r,<sp/>b,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{comp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{numcomp});</highlight></codeline>
<codeline lineno="3329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"></highlight></codeline>
<codeline lineno="3331"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3333" refid="classamrex_1_1BaseFab_1a577047763b367014043ff12942e83024" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a75273f716825d8cf89f7c94be5f1f81c" kindref="member">BaseFab&lt;T&gt;::mult</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3334"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a75273f716825d8cf89f7c94be5f1f81c" kindref="member">mult</ref>(src,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref>{srccomp},<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{destcomp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{numcomp});</highlight></codeline>
<codeline lineno="3336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"></highlight></codeline>
<codeline lineno="3338"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3340" refid="classamrex_1_1BaseFab_1aedc9b03d4c01b48deb09f00e6980f4d2" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a75273f716825d8cf89f7c94be5f1f81c" kindref="member">BaseFab&lt;T&gt;::mult</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a75273f716825d8cf89f7c94be5f1f81c" kindref="member">mult</ref>(src,<sp/>subbox,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref>{srccomp},<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{destcomp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{numcomp});</highlight></codeline>
<codeline lineno="3343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"></highlight></codeline>
<codeline lineno="3345"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3347" refid="classamrex_1_1BaseFab_1a1c649fa60f13d73e3ec31433a706a135" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a75273f716825d8cf89f7c94be5f1f81c" kindref="member">BaseFab&lt;T&gt;::mult</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcbox,</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destbox,</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destbox.ok());</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(src.box().contains(srcbox));</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1BaseFab_1a9359cb75c273aa3ab475d21ddc64f8f3" kindref="member">box</ref>().<ref refid="classamrex_1_1BaseFab_1a90d94d23b4c7ff81a86093956d38b332" kindref="member">contains</ref>(destbox));</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destbox.sameSize(srcbox));</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(srccomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>srccomp+numcomp<sp/>&lt;=<sp/>src.nComp());</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destcomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>destcomp+numcomp<sp/>&lt;=<sp/><ref refid="classamrex_1_1BaseFab_1a7406ec91dc010602121f1492f2d3a748" kindref="member">nComp</ref>());</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"></highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(destbox);</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dlo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(destbox);</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>slo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(srcbox);</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(dlo,<sp/>destcomp);</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sp<sp/><sp/>=<sp/>src.view(slo,<sp/>srccomp);</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"></highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numcomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>*=<sp/>sp(i,j,k,n);</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"></highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"></highlight></codeline>
<codeline lineno="3381"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3383" refid="classamrex_1_1BaseFab_1a34aee96ab42d884f86949b517878662b" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a34aee96ab42d884f86949b517878662b" kindref="member">BaseFab&lt;T&gt;::divide</ref><sp/>(T<sp/>r,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a34aee96ab42d884f86949b517878662b" kindref="member">divide</ref>(r,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{comp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{numcomp});</highlight></codeline>
<codeline lineno="3386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"></highlight></codeline>
<codeline lineno="3388"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3390" refid="classamrex_1_1BaseFab_1adc8830f33bfb5ac06470bbce23c6c3b6" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a34aee96ab42d884f86949b517878662b" kindref="member">BaseFab&lt;T&gt;::divide</ref><sp/>(T<sp/>r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a34aee96ab42d884f86949b517878662b" kindref="member">divide</ref>(r,<sp/>b,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{comp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{numcomp});</highlight></codeline>
<codeline lineno="3393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"></highlight></codeline>
<codeline lineno="3395"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3397" refid="classamrex_1_1BaseFab_1a506e927342c09f2603d749be57b941ba" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a34aee96ab42d884f86949b517878662b" kindref="member">BaseFab&lt;T&gt;::divide</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a34aee96ab42d884f86949b517878662b" kindref="member">divide</ref>(src,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref>{srccomp},<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{destcomp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{numcomp});</highlight></codeline>
<codeline lineno="3400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"></highlight></codeline>
<codeline lineno="3402"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3404" refid="classamrex_1_1BaseFab_1a5f72da1858d20f1ca92f0768f4df2365" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a34aee96ab42d884f86949b517878662b" kindref="member">BaseFab&lt;T&gt;::divide</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>subbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3405"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a34aee96ab42d884f86949b517878662b" kindref="member">divide</ref>(src,<sp/>subbox,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref>{srccomp},<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{destcomp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{numcomp});</highlight></codeline>
<codeline lineno="3407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"></highlight></codeline>
<codeline lineno="3409"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3411" refid="classamrex_1_1BaseFab_1a1c8895670a09e26f1336765898c9f431" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a34aee96ab42d884f86949b517878662b" kindref="member">BaseFab&lt;T&gt;::divide</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcbox,</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destbox,</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destbox.ok());</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(src.box().contains(srcbox));</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1BaseFab_1a9359cb75c273aa3ab475d21ddc64f8f3" kindref="member">box</ref>().<ref refid="classamrex_1_1BaseFab_1a90d94d23b4c7ff81a86093956d38b332" kindref="member">contains</ref>(destbox));</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destbox.sameSize(srcbox));</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(srccomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>srccomp+numcomp<sp/>&lt;=<sp/>src.nComp());</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destcomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>destcomp+numcomp<sp/>&lt;=<sp/><ref refid="classamrex_1_1BaseFab_1a7406ec91dc010602121f1492f2d3a748" kindref="member">nComp</ref>());</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"></highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(destbox);</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dlo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(destbox);</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>slo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(srcbox);</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(dlo,<sp/>destcomp);</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sp<sp/><sp/>=<sp/>src.view(slo,<sp/>srccomp);</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"></highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numcomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>/=<sp/>sp(i,j,k,n);</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"></highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"></highlight></codeline>
<codeline lineno="3445"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3447" refid="classamrex_1_1BaseFab_1af810d23a787e64f057b5c7b100f43901" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1af810d23a787e64f057b5c7b100f43901" kindref="member">BaseFab&lt;T&gt;::protected_divide</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src)<sp/>noexcept</highlight></codeline>
<codeline lineno="3448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>ovlp(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>);</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/>ovlp<sp/>&amp;=<sp/>src.domain;</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ovlp.<ref refid="classamrex_1_1Box_1a615de7e44f8ba7f007be244af31b5a97" kindref="member">ok</ref>()<sp/>?<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1af810d23a787e64f057b5c7b100f43901" kindref="member">protected_divide</ref>(src,ovlp,ovlp,0,0,this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>)<sp/>:<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"></highlight></codeline>
<codeline lineno="3454"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3456" refid="classamrex_1_1BaseFab_1ae2e48b29e4c547079d0552678ca1318c" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1af810d23a787e64f057b5c7b100f43901" kindref="member">BaseFab&lt;T&gt;::protected_divide</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>ovlp(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>);</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><sp/>ovlp<sp/>&amp;=<sp/>src.domain;</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ovlp.<ref refid="classamrex_1_1Box_1a615de7e44f8ba7f007be244af31b5a97" kindref="member">ok</ref>()<sp/>?<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1af810d23a787e64f057b5c7b100f43901" kindref="member">protected_divide</ref>(src,ovlp,ovlp,srccomp,destcomp,numcomp)<sp/>:<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"></highlight></codeline>
<codeline lineno="3466"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3468" refid="classamrex_1_1BaseFab_1acd08ca7330a5790df2af1041eda23b25" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1af810d23a787e64f057b5c7b100f43901" kindref="member">BaseFab&lt;T&gt;::protected_divide</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subbox,</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>ovlp(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>);</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/>ovlp<sp/>&amp;=<sp/>src.domain;</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/>ovlp<sp/>&amp;=<sp/>subbox;</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ovlp.<ref refid="classamrex_1_1Box_1a615de7e44f8ba7f007be244af31b5a97" kindref="member">ok</ref>()<sp/>?<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1af810d23a787e64f057b5c7b100f43901" kindref="member">protected_divide</ref>(src,ovlp,ovlp,srccomp,destcomp,numcomp)<sp/>:<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"></highlight></codeline>
<codeline lineno="3480"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3482" refid="classamrex_1_1BaseFab_1a921f825a91f4fd7a7b4997c65ad4f6c4" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1af810d23a787e64f057b5c7b100f43901" kindref="member">BaseFab&lt;T&gt;::protected_divide</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcbox,</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destbox,</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srccomp,</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destcomp,</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destbox.ok());</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(src.box().contains(srcbox));</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1BaseFab_1a9359cb75c273aa3ab475d21ddc64f8f3" kindref="member">box</ref>().<ref refid="classamrex_1_1BaseFab_1a90d94d23b4c7ff81a86093956d38b332" kindref="member">contains</ref>(destbox));</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destbox.sameSize(srcbox));</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(srccomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>srccomp+numcomp<sp/>&lt;=<sp/>src.nComp());</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(destcomp<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>destcomp+numcomp<sp/>&lt;=<sp/><ref refid="classamrex_1_1BaseFab_1a7406ec91dc010602121f1492f2d3a748" kindref="member">nComp</ref>());</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"></highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(destbox);</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dlo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(destbox);</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>slo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(srcbox);</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(dlo,<sp/>destcomp);</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sp<sp/><sp/>=<sp/>src.view(slo,<sp/>srccomp);</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"></highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>numcomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sp(i,j,k,n)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>/=<sp/><sp/>sp(i,j,k,n);</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"></highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"></highlight></codeline>
<codeline lineno="3529"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3531" refid="classamrex_1_1BaseFab_1a3b4780cc6fb0f5f15f3735d89c0dac2d" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a3b4780cc6fb0f5f15f3735d89c0dac2d" kindref="member">BaseFab&lt;T&gt;::linInterp</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>f1,</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b1,</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp1,</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>f2,</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b2,</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp2,</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1,</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2,</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t,</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b,</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp,</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>alpha<sp/>=<sp/>(t2-t)/(t2-t1);</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>beta<sp/>=<sp/>(t-t1)/(t2-t1);</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab_1a0f67d27a0d9b85b1ec3bb31cee3936de" kindref="member">linComb</ref>(f1,b1,comp1,f2,b2,comp2,alpha,beta,b,comp,numcomp);</highlight></codeline>
<codeline lineno="3547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"></highlight></codeline>
<codeline lineno="3549"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3551" refid="classamrex_1_1BaseFab_1a88155ff16d4ee6f46cf3f4baf573f9d1" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a3b4780cc6fb0f5f15f3735d89c0dac2d" kindref="member">BaseFab&lt;T&gt;::linInterp</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>f1,</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp1,</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>f2,</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp2,</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1,</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2,</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t,</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b,</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comp,</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numcomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/>Real<sp/>tol<sp/>=<sp/>1.0e-16;</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(t2-t1)<sp/>&gt;<sp/>tol)</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>alpha<sp/>=<sp/>(t2-t)/(t2-t1);</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>beta<sp/>=<sp/>(t-t1)/(t2-t1);</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"></highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab_1a0f67d27a0d9b85b1ec3bb31cee3936de" kindref="member">linComb</ref>(f1,b,comp1,f2,b,comp2,alpha,beta,b,comp,numcomp);</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a9ebd13893eb0315ec776fef5720ea8ec" kindref="member">copy</ref>(f1,b,comp1,b,comp,numcomp);</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"></highlight></codeline>
<codeline lineno="3577"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3578"><highlight class="normal"></highlight><highlight class="comment">//<sp/>New<sp/>interfaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3579"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3580"><highlight class="normal"></highlight></codeline>
<codeline lineno="3581"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3583" refid="classamrex_1_1BaseFab_1a10e250dac20a44c5e859ea0134a90842" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a5f8ebb9050e7ffd02a957d0bdaca9886" kindref="member">BaseFab&lt;T&gt;::setVal</ref><sp/>(T<sp/>val)<sp/>noexcept</highlight></codeline>
<codeline lineno="3584"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a5f8ebb9050e7ffd02a957d0bdaca9886" kindref="member">setVal</ref>(val,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>});</highlight></codeline>
<codeline lineno="3586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"></highlight></codeline>
<codeline lineno="3588"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3590" refid="classamrex_1_1BaseFab_1a7e367253596a20e6e96bd4e9d6309b85" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a5f8ebb9050e7ffd02a957d0bdaca9886" kindref="member">BaseFab&lt;T&gt;::setVal</ref><sp/>(T<sp/>x,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(dcomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dcomp.i<sp/>+<sp/>ncomp.n<sp/>&lt;=<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"></highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(bx);</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(bx);</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>dcomp.i);</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"></highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp.n;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"></highlight></codeline>
<codeline lineno="3610"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3612" refid="classamrex_1_1BaseFab_1a7d3b6f7bbc5e365b87402a25372084dc" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a7d3b6f7bbc5e365b87402a25372084dc" kindref="member">BaseFab&lt;T&gt;::setValIf</ref><sp/>(T<sp/>val,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask)<sp/>noexcept</highlight></codeline>
<codeline lineno="3613"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a7d3b6f7bbc5e365b87402a25372084dc" kindref="member">setValIf</ref>(val,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/>mask,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>});</highlight></codeline>
<codeline lineno="3615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"></highlight></codeline>
<codeline lineno="3617"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3619" refid="classamrex_1_1BaseFab_1a2bb61bbdddfe8085b1cd1a82f69f0ff0" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a7d3b6f7bbc5e365b87402a25372084dc" kindref="member">BaseFab&lt;T&gt;::setValIf</ref><sp/>(T<sp/>val,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3620"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(dcomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dcomp.i<sp/>+<sp/>ncomp.n<sp/>&lt;=<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"></highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(bx);</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(bx);</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>dcomp.i);</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mp<sp/><sp/>=<sp/>mask.view(lo);</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"></highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp.n;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mp(i,j,k,0))<sp/>{<sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>=<sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"></highlight></codeline>
<codeline lineno="3640"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3642" refid="classamrex_1_1BaseFab_1ad8370d1a734de79ad1f469b4bf0d7322" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a9faef9ada202610c6bcc248ff1fbe2dd" kindref="member">BaseFab&lt;T&gt;::setValIfNot</ref><sp/>(T<sp/>val,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask)<sp/>noexcept</highlight></codeline>
<codeline lineno="3643"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a9faef9ada202610c6bcc248ff1fbe2dd" kindref="member">setValIfNot</ref>(val,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/>mask,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>});</highlight></codeline>
<codeline lineno="3645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"></highlight></codeline>
<codeline lineno="3647"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3649" refid="classamrex_1_1BaseFab_1abee51f91bf9050b56f742bb36467b791" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a9faef9ada202610c6bcc248ff1fbe2dd" kindref="member">BaseFab&lt;T&gt;::setValIfNot</ref><sp/>(T<sp/>val,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(dcomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dcomp.i<sp/>+<sp/>ncomp.n<sp/>&lt;=<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"></highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(bx);</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(bx);</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>dcomp.i);</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mp<sp/><sp/>=<sp/>mask.view(lo);</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"></highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp.n;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mp(i,j,k,0))<sp/>{<sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>=<sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"></highlight></codeline>
<codeline lineno="3670"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3672" refid="classamrex_1_1BaseFab_1a141ba4c0b87cbaf780261ba65ac4970a" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1aede6afede165d8f14c5bedb035654c4a" kindref="member">BaseFab&lt;T&gt;::setComplement</ref><sp/>(T<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BoxList" kindref="compound">BoxList</ref><sp/>b_lst<sp/>=<sp/><ref refid="namespaceamrex_1a7cb1edb123daa9e2146ae0db8e2ed910" kindref="member">amrex::boxDiff</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,bx);</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>b<sp/>:<sp/>b_lst)<sp/>{</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a5f8ebb9050e7ffd02a957d0bdaca9886" kindref="member">setVal</ref>(x,<sp/>b,<sp/>dcomp,<sp/>ncomp);</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"></highlight></codeline>
<codeline lineno="3680"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3682" refid="classamrex_1_1BaseFab_1aa8ce7a6a37f7493204b7da0e3db9b61c" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a9ebd13893eb0315ec776fef5720ea8ec" kindref="member">BaseFab&lt;T&gt;::copy</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src)<sp/>noexcept</highlight></codeline>
<codeline lineno="3683"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a9ebd13893eb0315ec776fef5720ea8ec" kindref="member">copy</ref>(src,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref>{0},<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>});</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"></highlight></codeline>
<codeline lineno="3688"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3690" refid="classamrex_1_1BaseFab_1a961daafa22f0e7a8663887c374a43270" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a9ebd13893eb0315ec776fef5720ea8ec" kindref="member">BaseFab&lt;T&gt;::copy</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref><sp/>scomp,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3692"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>.<ref refid="classamrex_1_1Box_1a441e67ce90d98317b391c069edf5f910" kindref="member">sameType</ref>(src.domain));</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(scomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>scomp.i+ncomp.n<sp/>&lt;=<sp/>src.nvar);</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(dcomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dcomp.i+ncomp.n<sp/>&lt;=<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"></highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><sp/>bx<sp/>&amp;=<sp/>src.domain;</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"></highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(bx);</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(bx);</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>dcomp.i);</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sp<sp/><sp/>=<sp/>src.view(lo,<sp/>scomp.i);</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"></highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp.n;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>=<sp/>sp(i,j,k,n);</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"></highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"></highlight></codeline>
<codeline lineno="3718"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3720" refid="classamrex_1_1BaseFab_1aed983c2ce7c231bd359acfa3b6175a0e" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a8fdf51ba6391c4c2de6785eb99c1c6f7" kindref="member">BaseFab&lt;T&gt;::plus</ref><sp/>(T<sp/>val)<sp/>noexcept</highlight></codeline>
<codeline lineno="3721"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8fdf51ba6391c4c2de6785eb99c1c6f7" kindref="member">plus</ref>(val,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>});</highlight></codeline>
<codeline lineno="3723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"></highlight></codeline>
<codeline lineno="3725"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3727" refid="classamrex_1_1BaseFab_1a8feafc057f39892358c3847ab154feb3" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a8feafc057f39892358c3847ab154feb3" kindref="member">BaseFab&lt;T&gt;::operator+= </ref>(T<sp/>val)<sp/>noexcept</highlight></codeline>
<codeline lineno="3728"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8fdf51ba6391c4c2de6785eb99c1c6f7" kindref="member">plus</ref>(val,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>});</highlight></codeline>
<codeline lineno="3730"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"></highlight></codeline>
<codeline lineno="3732"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3734" refid="classamrex_1_1BaseFab_1a54e2acf5af1775da33e83f9d693735fd" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a8fdf51ba6391c4c2de6785eb99c1c6f7" kindref="member">BaseFab&lt;T&gt;::plus</ref><sp/>(T<sp/>val,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3735"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(dcomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dcomp.i<sp/>+<sp/>ncomp.n<sp/>&lt;=<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"></highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(bx);</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(bx);</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>dcomp.i);</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"></highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp.n;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>+=<sp/>val;</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"></highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"></highlight></codeline>
<codeline lineno="3756"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3758" refid="classamrex_1_1BaseFab_1a5e6fd76c3bd9c55b26a934176d0c32f3" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a8fdf51ba6391c4c2de6785eb99c1c6f7" kindref="member">BaseFab&lt;T&gt;::plus</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src)<sp/>noexcept</highlight></codeline>
<codeline lineno="3759"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8fdf51ba6391c4c2de6785eb99c1c6f7" kindref="member">plus</ref>(src,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref>{0},<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>});</highlight></codeline>
<codeline lineno="3761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"></highlight></codeline>
<codeline lineno="3763"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3765" refid="classamrex_1_1BaseFab_1ac586b3e5e2c4400302aeaf2639622172" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a8feafc057f39892358c3847ab154feb3" kindref="member">BaseFab&lt;T&gt;::operator+= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src)<sp/>noexcept</highlight></codeline>
<codeline lineno="3766"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8fdf51ba6391c4c2de6785eb99c1c6f7" kindref="member">plus</ref>(src,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref>{0},<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>});</highlight></codeline>
<codeline lineno="3768"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"></highlight></codeline>
<codeline lineno="3770"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3772" refid="classamrex_1_1BaseFab_1abc633b8dc17ada2f440b7814227ed303" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a8fdf51ba6391c4c2de6785eb99c1c6f7" kindref="member">BaseFab&lt;T&gt;::plus</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,</highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref><sp/>scomp,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3774"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>.<ref refid="classamrex_1_1Box_1a441e67ce90d98317b391c069edf5f910" kindref="member">sameType</ref>(src.domain));</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(scomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>scomp.i+ncomp.n<sp/>&lt;=<sp/>src.nvar);</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(dcomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dcomp.i+ncomp.n<sp/>&lt;=<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"></highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/>bx<sp/>&amp;=<sp/>src.domain;</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"></highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(bx);</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(bx);</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>dcomp.i);</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sp<sp/><sp/>=<sp/>src.view(lo,<sp/>scomp.i);</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"></highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp.n;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>+=<sp/>sp(i,j,k,n);</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"></highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"></highlight></codeline>
<codeline lineno="3800"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3802" refid="classamrex_1_1BaseFab_1a06b5020d9b18cf3243a25bd77c6a5eef" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1affb7fcc63d9eec0c3e069390fe3eaf96" kindref="member">BaseFab&lt;T&gt;::minus</ref><sp/>(T<sp/>val)<sp/>noexcept</highlight></codeline>
<codeline lineno="3803"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1affb7fcc63d9eec0c3e069390fe3eaf96" kindref="member">minus</ref>(val,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>});</highlight></codeline>
<codeline lineno="3805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"></highlight></codeline>
<codeline lineno="3807"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3809" refid="classamrex_1_1BaseFab_1ad99f9346496d005eb3425a900da03765" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1ad99f9346496d005eb3425a900da03765" kindref="member">BaseFab&lt;T&gt;::operator-= </ref>(T<sp/>val)<sp/>noexcept</highlight></codeline>
<codeline lineno="3810"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1affb7fcc63d9eec0c3e069390fe3eaf96" kindref="member">minus</ref>(val,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>});</highlight></codeline>
<codeline lineno="3812"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"></highlight></codeline>
<codeline lineno="3814"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3816" refid="classamrex_1_1BaseFab_1af0be178f67f73995cdc90627c889759e" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1affb7fcc63d9eec0c3e069390fe3eaf96" kindref="member">BaseFab&lt;T&gt;::minus</ref><sp/>(T<sp/>val,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3817"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(dcomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dcomp.i<sp/>+<sp/>ncomp.n<sp/>&lt;=<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"></highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(bx);</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(bx);</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>dcomp.i);</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"></highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp.n;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>-=<sp/>val;</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"></highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3836"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"></highlight></codeline>
<codeline lineno="3838"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3840" refid="classamrex_1_1BaseFab_1af93815eec19bf87e4b7cc896f8f25a79" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1affb7fcc63d9eec0c3e069390fe3eaf96" kindref="member">BaseFab&lt;T&gt;::minus</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src)<sp/>noexcept</highlight></codeline>
<codeline lineno="3841"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1affb7fcc63d9eec0c3e069390fe3eaf96" kindref="member">minus</ref>(src,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref>{0},<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>});</highlight></codeline>
<codeline lineno="3843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"></highlight></codeline>
<codeline lineno="3845"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3847" refid="classamrex_1_1BaseFab_1a80859db41888f96e580bebb09c4cd59e" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1ad99f9346496d005eb3425a900da03765" kindref="member">BaseFab&lt;T&gt;::operator-= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src)<sp/>noexcept</highlight></codeline>
<codeline lineno="3848"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1affb7fcc63d9eec0c3e069390fe3eaf96" kindref="member">minus</ref>(src,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref>{0},<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>});</highlight></codeline>
<codeline lineno="3850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"></highlight></codeline>
<codeline lineno="3852"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3854" refid="classamrex_1_1BaseFab_1aa7745e9afc9d268462e4d1000676a230" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1affb7fcc63d9eec0c3e069390fe3eaf96" kindref="member">BaseFab&lt;T&gt;::minus</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref><sp/>scomp,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3856"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>.<ref refid="classamrex_1_1Box_1a441e67ce90d98317b391c069edf5f910" kindref="member">sameType</ref>(src.domain));</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(scomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>scomp.i+ncomp.n<sp/>&lt;=<sp/>src.nvar);</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(dcomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dcomp.i+ncomp.n<sp/>&lt;=<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"></highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/><sp/>bx<sp/>&amp;=<sp/>src.domain;</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"></highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(bx);</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(bx);</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>dcomp.i);</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sp<sp/><sp/>=<sp/>src.view(lo,<sp/>scomp.i);</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"></highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp.n;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>-=<sp/>sp(i,j,k,n);</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"></highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"></highlight></codeline>
<codeline lineno="3882"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3884" refid="classamrex_1_1BaseFab_1a5d332d32d28da3a920c294d249ef98a3" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a75273f716825d8cf89f7c94be5f1f81c" kindref="member">BaseFab&lt;T&gt;::mult</ref><sp/>(T<sp/>val)<sp/>noexcept</highlight></codeline>
<codeline lineno="3885"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a75273f716825d8cf89f7c94be5f1f81c" kindref="member">mult</ref>(val,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>});</highlight></codeline>
<codeline lineno="3887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"></highlight></codeline>
<codeline lineno="3889"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3891" refid="classamrex_1_1BaseFab_1afbd2d5c2b5c7373493f3087a997ed861" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1afbd2d5c2b5c7373493f3087a997ed861" kindref="member">BaseFab&lt;T&gt;::operator*= </ref>(T<sp/>val)<sp/>noexcept</highlight></codeline>
<codeline lineno="3892"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a75273f716825d8cf89f7c94be5f1f81c" kindref="member">mult</ref>(val,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>});</highlight></codeline>
<codeline lineno="3894"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"></highlight></codeline>
<codeline lineno="3896"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3898" refid="classamrex_1_1BaseFab_1a0a8708a4acde10c291876afbd630eb69" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a75273f716825d8cf89f7c94be5f1f81c" kindref="member">BaseFab&lt;T&gt;::mult</ref><sp/>(T<sp/>val,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3899"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(dcomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dcomp.i<sp/>+<sp/>ncomp.n<sp/>&lt;=<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"></highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(bx);</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(bx);</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>dcomp.i);</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"></highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp.n;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>*=<sp/>val;</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"></highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"></highlight></codeline>
<codeline lineno="3920"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3922" refid="classamrex_1_1BaseFab_1a45f966993d9fae3aa2191fec8be53a33" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a75273f716825d8cf89f7c94be5f1f81c" kindref="member">BaseFab&lt;T&gt;::mult</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src)<sp/>noexcept</highlight></codeline>
<codeline lineno="3923"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a75273f716825d8cf89f7c94be5f1f81c" kindref="member">mult</ref>(src,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref>{0},<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>});</highlight></codeline>
<codeline lineno="3925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"></highlight></codeline>
<codeline lineno="3927"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3929" refid="classamrex_1_1BaseFab_1a7f6fbdd8557753afcd63aa6ef6a00b1c" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1afbd2d5c2b5c7373493f3087a997ed861" kindref="member">BaseFab&lt;T&gt;::operator*= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src)<sp/>noexcept</highlight></codeline>
<codeline lineno="3930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a75273f716825d8cf89f7c94be5f1f81c" kindref="member">mult</ref>(src,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref>{0},<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>});</highlight></codeline>
<codeline lineno="3932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"></highlight></codeline>
<codeline lineno="3934"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3936" refid="classamrex_1_1BaseFab_1aba010fbef99754a5fa00f7c90c8b9c97" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a75273f716825d8cf89f7c94be5f1f81c" kindref="member">BaseFab&lt;T&gt;::mult</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref><sp/>scomp,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3938"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>.<ref refid="classamrex_1_1Box_1a441e67ce90d98317b391c069edf5f910" kindref="member">sameType</ref>(src.domain));</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(scomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>scomp.i+ncomp.n<sp/>&lt;=<sp/>src.nvar);</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(dcomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dcomp.i+ncomp.n<sp/>&lt;=<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"></highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/><sp/><sp/>bx<sp/>&amp;=<sp/>src.domain;</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"></highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(bx);</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(bx);</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>dcomp.i);</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sp<sp/><sp/>=<sp/>src.view(lo,<sp/>scomp.i);</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"></highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp.n;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>*=<sp/>sp(i,j,k,n);</highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"></highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3962"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"></highlight></codeline>
<codeline lineno="3964"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3966" refid="classamrex_1_1BaseFab_1afe364e34f5e7f74ba8c7a5a1ef3bcf68" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a34aee96ab42d884f86949b517878662b" kindref="member">BaseFab&lt;T&gt;::divide</ref><sp/>(T<sp/>val)<sp/>noexcept</highlight></codeline>
<codeline lineno="3967"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a34aee96ab42d884f86949b517878662b" kindref="member">divide</ref>(val,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>});</highlight></codeline>
<codeline lineno="3969"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"></highlight></codeline>
<codeline lineno="3971"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3973" refid="classamrex_1_1BaseFab_1a6ddefb650db9f661f743e0cb79bb92dc" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a6ddefb650db9f661f743e0cb79bb92dc" kindref="member">BaseFab&lt;T&gt;::operator/= </ref>(T<sp/>val)<sp/>noexcept</highlight></codeline>
<codeline lineno="3974"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a34aee96ab42d884f86949b517878662b" kindref="member">divide</ref>(val,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>});</highlight></codeline>
<codeline lineno="3976"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"></highlight></codeline>
<codeline lineno="3978"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="3980" refid="classamrex_1_1BaseFab_1a02ea7302727d6dfeea78fc9c1f635d5a" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a34aee96ab42d884f86949b517878662b" kindref="member">BaseFab&lt;T&gt;::divide</ref><sp/>(T<sp/>val,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="3981"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(dcomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dcomp.i<sp/>+<sp/>ncomp.n<sp/>&lt;=<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"></highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(bx);</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(bx);</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>dcomp.i);</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"></highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp.n;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>/=<sp/>val;</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"></highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4000"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"></highlight></codeline>
<codeline lineno="4002"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="4004" refid="classamrex_1_1BaseFab_1a809d0693af0122e245b7f78467b3d4a3" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a34aee96ab42d884f86949b517878662b" kindref="member">BaseFab&lt;T&gt;::divide</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src)<sp/>noexcept</highlight></codeline>
<codeline lineno="4005"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a34aee96ab42d884f86949b517878662b" kindref="member">divide</ref>(src,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref>{0},<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>});</highlight></codeline>
<codeline lineno="4007"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"></highlight></codeline>
<codeline lineno="4009"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="4011" refid="classamrex_1_1BaseFab_1ad2e08140e0b71c6030c902d49949e257" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a6ddefb650db9f661f743e0cb79bb92dc" kindref="member">BaseFab&lt;T&gt;::operator/= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src)<sp/>noexcept</highlight></codeline>
<codeline lineno="4012"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a34aee96ab42d884f86949b517878662b" kindref="member">divide</ref>(src,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref>{0},<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>});</highlight></codeline>
<codeline lineno="4014"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"></highlight></codeline>
<codeline lineno="4016"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="4018" refid="classamrex_1_1BaseFab_1a7af88a57133ac8c701bce440c2817555" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a34aee96ab42d884f86949b517878662b" kindref="member">BaseFab&lt;T&gt;::divide</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>bx,</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref><sp/>scomp,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="4020"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>.<ref refid="classamrex_1_1Box_1a441e67ce90d98317b391c069edf5f910" kindref="member">sameType</ref>(src.domain));</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(scomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>scomp.i+ncomp.n<sp/>&lt;=<sp/>src.nvar);</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(dcomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dcomp.i+ncomp.n<sp/>&lt;=<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"></highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/><sp/>bx<sp/>&amp;=<sp/>src.domain;</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"></highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(bx);</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(bx);</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>dcomp.i);</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sp<sp/><sp/>=<sp/>src.view(lo,<sp/>scomp.i);</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"></highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp.n;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>/=<sp/>sp(i,j,k,n);</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"></highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"></highlight></codeline>
<codeline lineno="4046"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="4048" refid="classamrex_1_1BaseFab_1a4891ce9d3119ffb084ecad50086762de" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a4891ce9d3119ffb084ecad50086762de" kindref="member">BaseFab&lt;T&gt;::negate</ref><sp/>()<sp/>noexcept</highlight></codeline>
<codeline lineno="4049"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a4891ce9d3119ffb084ecad50086762de" kindref="member">negate</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>});</highlight></codeline>
<codeline lineno="4051"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"></highlight></codeline>
<codeline lineno="4053"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="4055" refid="classamrex_1_1BaseFab_1adbd81b980cd1805611312ea49d9e3d87" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a4891ce9d3119ffb084ecad50086762de" kindref="member">BaseFab&lt;T&gt;::negate</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="4056"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(dcomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dcomp.i<sp/>+<sp/>ncomp.n<sp/>&lt;=<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"></highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(bx);</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(bx);</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>dcomp.i);</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"></highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp.n;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>=<sp/>-<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n);</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"></highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"></highlight></codeline>
<codeline lineno="4077"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="4079" refid="classamrex_1_1BaseFab_1afcfbc5cc156daf09d0a8a11d44f71099" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a8a096cb9ebbc7ebd2005aea069aacdfb" kindref="member">BaseFab&lt;T&gt;::invert</ref><sp/>(T<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="4080"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8a096cb9ebbc7ebd2005aea069aacdfb" kindref="member">invert</ref>(r,<sp/>this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{0},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{this-&gt;<ref refid="classamrex_1_1BaseFab_1a99b1638f6702821a6b6e63cb860d938f" kindref="member">nvar</ref>});</highlight></codeline>
<codeline lineno="4082"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"></highlight></codeline>
<codeline lineno="4084"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;</highlight></codeline>
<codeline lineno="4086" refid="classamrex_1_1BaseFab_1a340980ddd90afa284ccd3514098a2b44" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a8a096cb9ebbc7ebd2005aea069aacdfb" kindref="member">BaseFab&lt;T&gt;::invert</ref><sp/>(T<sp/>r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/>noexcept</highlight></codeline>
<codeline lineno="4087"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(dcomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dcomp.i<sp/>+<sp/>ncomp.n<sp/>&lt;=<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"></highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(bx);</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(bx);</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>dcomp.i);</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"></highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp.n;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a8c414106ab987031039a0ad05bb2519b" kindref="member">AMREX_PRAGMA_SIMD</ref></highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n)<sp/>=<sp/>r<sp/>/<sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(i,j,k,n);</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"></highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"></highlight></codeline>
<codeline lineno="4108"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="4109"><highlight class="normal">T</highlight></codeline>
<codeline lineno="4110" refid="classamrex_1_1BaseFab_1ac5203569fe07a6ea8da8ece607fec738" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1add7f10ec971a7d474f44c0d22fb4c750" kindref="member">BaseFab&lt;T&gt;::sum</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="4111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(dcomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dcomp.i+ncomp.n<sp/>&lt;=<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"></highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"></highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(bx);</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(bx);</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>dcomp.i);</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"></highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp.n;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/>dpr<sp/>=<sp/>&amp;(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(0,j,k,n));</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>+=<sp/>dpr[i];</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4130"><highlight class="normal"></highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="4132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"></highlight></codeline>
<codeline lineno="4134"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="4135"><highlight class="normal">T</highlight></codeline>
<codeline lineno="4136" refid="classamrex_1_1BaseFab_1a809f337b1ac6e5da6557f630149a3eca" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1adb03ed2032296735e2b188be56558fbf" kindref="member">BaseFab&lt;T&gt;::dot</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref><sp/>scomp,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="4137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>.<ref refid="classamrex_1_1Box_1a441e67ce90d98317b391c069edf5f910" kindref="member">sameType</ref>(src.domain));</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(scomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>scomp.i+ncomp.n<sp/>&lt;=<sp/>src.nvar);</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(dcomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dcomp.i+ncomp.n<sp/>&lt;=<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"></highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"></highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(bx);</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(bx);</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>dcomp.i);</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sp<sp/><sp/>=<sp/>src.view(lo,<sp/>scomp.i);</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"></highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp.n;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/>dpr<sp/>=<sp/>&amp;(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(0,j,k,n));</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/>spr<sp/>=<sp/>&amp;(sp(0,j,k,n));</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>+=<sp/>dpr[i]<sp/>*<sp/>spr[i];</highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"></highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="4162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"></highlight></codeline>
<codeline lineno="4164"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="4165"><highlight class="normal">T</highlight></codeline>
<codeline lineno="4166" refid="classamrex_1_1BaseFab_1a321130e1af874c362b23bcd4ba7e3f2e" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1adb03ed2032296735e2b188be56558fbf" kindref="member">BaseFab&lt;T&gt;::dot</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="4167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab_1adb03ed2032296735e2b188be56558fbf" kindref="member">dot</ref>(bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref>{destcomp},<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref>{numcomp});</highlight></codeline>
<codeline lineno="4169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"></highlight></codeline>
<codeline lineno="4171"><highlight class="normal"></highlight></codeline>
<codeline lineno="4172"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="4173"><highlight class="normal">T</highlight></codeline>
<codeline lineno="4174" refid="classamrex_1_1BaseFab_1a0db120f3f074edbdde7a22efc8de37fc" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1adb03ed2032296735e2b188be56558fbf" kindref="member">BaseFab&lt;T&gt;::dot</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="4175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(dcomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dcomp.i+ncomp.n<sp/>&lt;=<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"></highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"></highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(bx);</highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(bx);</highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>dcomp.i);</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"></highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp.n;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/>dpr<sp/>=<sp/>&amp;(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(0,j,k,n));</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>+=<sp/>dpr[i]<sp/>*<sp/>dpr[i];</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"></highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="4196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"></highlight></codeline>
<codeline lineno="4198"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="4199"><highlight class="normal">T</highlight></codeline>
<codeline lineno="4200" refid="classamrex_1_1BaseFab_1adb777343cc7e97c16caff0ff8d83b5c9" refkind="member"><highlight class="normal"><ref refid="classamrex_1_1BaseFab_1a6b8d97aba07d9806cf1e711ca44f283a" kindref="member">BaseFab&lt;T&gt;::dotmask</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;T&gt;</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab&lt;int&gt;</ref>&amp;<sp/>mask,</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref><sp/>scomp,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>dcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>ncomp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="4202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>.<ref refid="classamrex_1_1Box_1a441e67ce90d98317b391c069edf5f910" kindref="member">sameType</ref>(src.domain));</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(this-&gt;<ref refid="classamrex_1_1BaseFab_1a8e95d8cfaadfe53080ae0092b53202fb" kindref="member">domain</ref>.<ref refid="classamrex_1_1Box_1a441e67ce90d98317b391c069edf5f910" kindref="member">sameType</ref>(mask.domain));</highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(scomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>scomp.i+ncomp.n<sp/>&lt;=<sp/>src.nvar);</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(dcomp.i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dcomp.i+ncomp.n<sp/>&lt;=<sp/>this-&gt;nvar);</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"></highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"></highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(bx);</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(bx);</highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/><sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BaseFab_1a0ad9ef3212349a9c484eebaddf3ef039" kindref="member">view</ref>(lo,<sp/>dcomp.i);</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sp<sp/><sp/>=<sp/><sp/>src.view(lo,<sp/>scomp.i);</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mp<sp/><sp/>=<sp/>mask.view(lo);</highlight></codeline>
<codeline lineno="4215"><highlight class="normal"></highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp.n;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>len.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>len.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/>dpr<sp/>=<sp/>&amp;(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>(0,j,k,n));</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/>spr<sp/>=<sp/>&amp;(sp(0,j,k,n));</highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref><sp/>mpr<sp/>=<sp/>&amp;(mp(0,j,k));</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mpr[i]));</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>+=<sp/>dpr[i]<sp/>*<sp/>spr[i]<sp/>*<sp/>m;</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"></highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="4231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"></highlight></codeline>
<codeline lineno="4233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"></highlight></codeline>
<codeline lineno="4235"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*BL_BASEFAB_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H"/>
  </compounddef>
</doxygen>
