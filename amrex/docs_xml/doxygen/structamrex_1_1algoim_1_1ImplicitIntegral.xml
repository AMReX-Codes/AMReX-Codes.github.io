<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structamrex_1_1algoim_1_1ImplicitIntegral" kind="struct" language="C++" prot="public">
    <compoundname>amrex::algoim::ImplicitIntegral</compoundname>
    <includes refid="AMReX__algoim__K_8H" local="no">AMReX_algoim_K.H</includes>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>M</declname>
        <defname>M</defname>
      </param>
      <param>
        <type>int</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
      <param>
        <type>typename Phi</type>
      </param>
      <param>
        <type>typename F</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1algoim_1_1ImplicitIntegral_1afeff1f944e669f66896bdc7b76eccc88" prot="public" static="no" mutable="no">
        <type>const Phi &amp;</type>
        <definition>const Phi&amp; amrex::algoim::ImplicitIntegral&lt; M, N, Phi, F &gt;::phi</definition>
        <argsstring></argsstring>
        <name>phi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="243" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1algoim_1_1ImplicitIntegral_1a8e63fff308a2667a803639c70fce0b3b" prot="public" static="no" mutable="no">
        <type>F &amp;</type>
        <definition>F&amp; amrex::algoim::ImplicitIntegral&lt; M, N, Phi, F &gt;::f</definition>
        <argsstring></argsstring>
        <name>f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="244" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1algoim_1_1ImplicitIntegral_1aff95bdf7c30770f6021900c9eedaad6b" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray</ref>&lt; bool, N &gt;</type>
        <definition>const GpuArray&lt;bool,N&gt; amrex::algoim::ImplicitIntegral&lt; M, N, Phi, F &gt;::free</definition>
        <argsstring></argsstring>
        <name>free</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="245" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1algoim_1_1ImplicitIntegral_1ac3aa0501b0844da98bbe89d033795500" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray</ref>&lt; <ref refid="structamrex_1_1algoim_1_1PsiCode" kindref="compound">PsiCode</ref>&lt; N &gt;, 1&lt;&lt; (N-1)&gt;</type>
        <definition>GpuArray&lt;PsiCode&lt;N&gt;,1 &lt;&lt; (N - 1)&gt; amrex::algoim::ImplicitIntegral&lt; M, N, Phi, F &gt;::psi</definition>
        <argsstring></argsstring>
        <name>psi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="246" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1algoim_1_1ImplicitIntegral_1a203aaaa3e85ca58ba28e40f548b2187d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::algoim::ImplicitIntegral&lt; M, N, Phi, F &gt;::psiCount</definition>
        <argsstring></argsstring>
        <name>psiCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="247" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1algoim_1_1ImplicitIntegral_1aa572c858d18a32a5834232222e0de86c" prot="public" static="no" mutable="no">
        <type>const <ref refid="structamrex_1_1algoim_1_1BoundingBox" kindref="compound">BoundingBox</ref>&lt; N &gt;</type>
        <definition>const BoundingBox&lt;N&gt; amrex::algoim::ImplicitIntegral&lt; M, N, Phi, F &gt;::xrange</definition>
        <argsstring></argsstring>
        <name>xrange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="248" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1algoim_1_1ImplicitIntegral_1a34411c4dfd852959acaf447507c352ed" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::algoim::ImplicitIntegral&lt; M, N, Phi, F &gt;::e0</definition>
        <argsstring></argsstring>
        <name>e0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="249" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1algoim_1_1ImplicitIntegral_1a34d771a65448161c411faaf972a6484f" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray</ref>&lt; <ref refid="structamrex_1_1algoim_1_1Interval" kindref="compound">Interval</ref>, N &gt;</type>
        <definition>GpuArray&lt;Interval,N&gt; amrex::algoim::ImplicitIntegral&lt; M, N, Phi, F &gt;::xint</definition>
        <argsstring></argsstring>
        <name>xint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="250" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" bodystart="250" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structamrex_1_1algoim_1_1ImplicitIntegral_1a13134ba4058f5552958fee4a6fdc0870" prot="public" static="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int amrex::algoim::ImplicitIntegral&lt; M, N, Phi, F &gt;::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="251" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" bodystart="251" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1algoim_1_1ImplicitIntegral_1a01778cc8af617214c39143de93bb5e6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> bool</type>
        <definition>AMREX_GPU_HOST_DEVICE bool amrex::algoim::ImplicitIntegral&lt; M, N, Phi, F &gt;::prune</definition>
        <argsstring>() noexcept</argsstring>
        <name>prune</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="260" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" bodystart="260" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1algoim_1_1ImplicitIntegral_1a4c3a229f570e434e2c56fdf8bee3425d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE void amrex::algoim::ImplicitIntegral&lt; M, N, Phi, F &gt;::tensorProductIntegral</definition>
        <argsstring>() noexcept</argsstring>
        <name>tensorProductIntegral</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="304" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" bodystart="304" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1algoim_1_1ImplicitIntegral_1ab0b0d21b0436db3368df308ac574a8ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE void amrex::algoim::ImplicitIntegral&lt; M, N, Phi, F &gt;::evalIntegrand</definition>
        <argsstring>(GpuArray&lt; Real, N &gt; x, Real w) const noexcept</argsstring>
        <name>evalIntegrand</name>
        <param>
          <type><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray</ref>&lt; Real, N &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="349" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" bodystart="349" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1algoim_1_1ImplicitIntegral_1a232bc3b4d353e6a79245b435ba1c15d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::algoim::ImplicitIntegral&lt; M, N, Phi, F &gt;::ImplicitIntegral</definition>
        <argsstring>(const Phi &amp;phi_, F &amp;f_, const GpuArray&lt; bool, N &gt; &amp;free_, const GpuArray&lt; PsiCode&lt; N &gt;, 1&lt;&lt; (N-1)&gt; &amp;psi_, int psiCount_) noexcept</argsstring>
        <name>ImplicitIntegral</name>
        <param>
          <type>const Phi &amp;</type>
          <declname>phi_</declname>
        </param>
        <param>
          <type>F &amp;</type>
          <declname>f_</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray</ref>&lt; bool, N &gt; &amp;</type>
          <declname>free_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="434" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" bodystart="434" bodyend="525"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" line="242" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H" bodystart="241" bodyend="526"/>
    <listofallmembers>
      <member refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a34411c4dfd852959acaf447507c352ed" prot="public" virt="non-virtual"><scope>amrex::algoim::ImplicitIntegral</scope><name>e0</name></member>
      <member refid="structamrex_1_1algoim_1_1ImplicitIntegral_1ab0b0d21b0436db3368df308ac574a8ec" prot="public" virt="non-virtual"><scope>amrex::algoim::ImplicitIntegral</scope><name>evalIntegrand</name></member>
      <member refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a8e63fff308a2667a803639c70fce0b3b" prot="public" virt="non-virtual"><scope>amrex::algoim::ImplicitIntegral</scope><name>f</name></member>
      <member refid="structamrex_1_1algoim_1_1ImplicitIntegral_1aff95bdf7c30770f6021900c9eedaad6b" prot="public" virt="non-virtual"><scope>amrex::algoim::ImplicitIntegral</scope><name>free</name></member>
      <member refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a232bc3b4d353e6a79245b435ba1c15d7" prot="public" virt="non-virtual"><scope>amrex::algoim::ImplicitIntegral</scope><name>ImplicitIntegral</name></member>
      <member refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a13134ba4058f5552958fee4a6fdc0870" prot="public" virt="non-virtual"><scope>amrex::algoim::ImplicitIntegral</scope><name>p</name></member>
      <member refid="structamrex_1_1algoim_1_1ImplicitIntegral_1afeff1f944e669f66896bdc7b76eccc88" prot="public" virt="non-virtual"><scope>amrex::algoim::ImplicitIntegral</scope><name>phi</name></member>
      <member refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a01778cc8af617214c39143de93bb5e6a" prot="public" virt="non-virtual"><scope>amrex::algoim::ImplicitIntegral</scope><name>prune</name></member>
      <member refid="structamrex_1_1algoim_1_1ImplicitIntegral_1ac3aa0501b0844da98bbe89d033795500" prot="public" virt="non-virtual"><scope>amrex::algoim::ImplicitIntegral</scope><name>psi</name></member>
      <member refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a203aaaa3e85ca58ba28e40f548b2187d" prot="public" virt="non-virtual"><scope>amrex::algoim::ImplicitIntegral</scope><name>psiCount</name></member>
      <member refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a4c3a229f570e434e2c56fdf8bee3425d" prot="public" virt="non-virtual"><scope>amrex::algoim::ImplicitIntegral</scope><name>tensorProductIntegral</name></member>
      <member refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a34d771a65448161c411faaf972a6484f" prot="public" virt="non-virtual"><scope>amrex::algoim::ImplicitIntegral</scope><name>xint</name></member>
      <member refid="structamrex_1_1algoim_1_1ImplicitIntegral_1aa572c858d18a32a5834232222e0de86c" prot="public" virt="non-virtual"><scope>amrex::algoim::ImplicitIntegral</scope><name>xrange</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
