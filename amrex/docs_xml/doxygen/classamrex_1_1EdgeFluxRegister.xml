<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1EdgeFluxRegister" kind="class" language="C++" prot="public">
    <compoundname>amrex::EdgeFluxRegister</compoundname>
    <includes refid="AMReX__EdgeFluxRegister_8H" local="no">AMReX_EdgeFluxRegister.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1EdgeFluxRegister_1ad5422062aa267d4ec336630342c1b9d6" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::EdgeFluxRegister::m_fine_geom</definition>
        <argsstring></argsstring>
        <name>m_fine_geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" line="87" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EdgeFluxRegister_1a6cf33cc04f1dd5084d2bc1153f5952cc" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::EdgeFluxRegister::m_crse_geom</definition>
        <argsstring></argsstring>
        <name>m_crse_geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" line="88" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EdgeFluxRegister_1a762cdbc28b362b73ca1e44330814ea07" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a8792201c856a367dda275e09047daa33" kindref="member">IntVect</ref></type>
        <definition>IntVect amrex::EdgeFluxRegister::m_ratio</definition>
        <argsstring></argsstring>
        <name>m_ratio</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" line="90" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EdgeFluxRegister_1a7ae82b32f3ba8bce2d86556224b6b06c" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::EdgeFluxRegister::m_ncomp</definition>
        <argsstring></argsstring>
        <name>m_ncomp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" line="91" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EdgeFluxRegister_1a3f1e0f4027765309bbc93b8110a040a0" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::EdgeFluxRegister::m_E_crse</definition>
        <argsstring></argsstring>
        <name>m_E_crse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" line="106" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EdgeFluxRegister_1abd26799d7889db8005b39a33cf1065ad" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>, AMREX_SPACEDIM *2 &gt;</type>
        <definition>Array&lt;MultiFab,AMREX_SPACEDIM*2&gt; amrex::EdgeFluxRegister::m_E_fine</definition>
        <argsstring></argsstring>
        <name>m_E_fine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" line="107" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EdgeFluxRegister_1a46ce26a00431e6e7e5e15f89a73ba61e" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref></type>
        <definition>iMultiFab amrex::EdgeFluxRegister::m_fine_mask</definition>
        <argsstring></argsstring>
        <name>m_fine_mask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" line="108" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EdgeFluxRegister_1a10ff3c540a6210b65bce49aaa68d7583" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>LayoutData&lt;int&gt; amrex::EdgeFluxRegister::m_has_cf</definition>
        <argsstring></argsstring>
        <name>m_has_cf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" line="112" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EdgeFluxRegister_1a89a4c8560bbedddef433d4467a8dcfd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EdgeFluxRegister::EdgeFluxRegister</definition>
        <argsstring>()=default</argsstring>
        <name>EdgeFluxRegister</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" line="57" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EdgeFluxRegister_1a80d8a50bf42890675c5e06ae694b66ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EdgeFluxRegister::EdgeFluxRegister</definition>
        <argsstring>(const BoxArray &amp;fba, const BoxArray &amp;cba, const DistributionMapping &amp;fdm, const DistributionMapping &amp;cdm, const Geometry &amp;fgeom, const Geometry &amp;cgeom, int nvar=1)</argsstring>
        <name>EdgeFluxRegister</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>fba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>cba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>fdm</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>cdm</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>fgeom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>cgeom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nvar</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" line="59" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.cpp" bodystart="10" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EdgeFluxRegister_1aafc2526c524b219fe69770bde17fc9af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EdgeFluxRegister::define</definition>
        <argsstring>(const BoxArray &amp;fba, const BoxArray &amp;cba, const DistributionMapping &amp;fdm, const DistributionMapping &amp;cdm, const Geometry &amp;fgeom, const Geometry &amp;cgeom, int nvar=1)</argsstring>
        <name>define</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>fba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>cba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>fdm</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>cdm</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>fgeom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>cgeom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nvar</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" line="64" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.cpp" bodystart="18" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EdgeFluxRegister_1a1c43ccc3313c5128b18860a615a846fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EdgeFluxRegister::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" line="69" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.cpp" bodystart="115" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EdgeFluxRegister_1aaef7f034b3fd9195583d14f1ea408039" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EdgeFluxRegister::CrseAdd</definition>
        <argsstring>(MFIter const &amp;mfi, FArrayBox const &amp;E_crse, Real dt_crse)</argsstring>
        <name>CrseAdd</name>
        <param>
          <type><ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> const &amp;</type>
          <declname>mfi</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> const &amp;</type>
          <declname>E_crse</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>dt_crse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" line="78" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.cpp" bodystart="249" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EdgeFluxRegister_1ae7dab32dce79ee2932c74b0bf746d945" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EdgeFluxRegister::FineAdd</definition>
        <argsstring>(MFIter const &amp;mfi, FArrayBox const &amp;E_fine, Real dt_fine)</argsstring>
        <name>FineAdd</name>
        <param>
          <type><ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> const &amp;</type>
          <declname>mfi</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> const &amp;</type>
          <declname>E_fine</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>dt_fine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" line="79" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.cpp" bodystart="263" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EdgeFluxRegister_1a3b50d43c4fe114515bffcfa5cbd58117" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EdgeFluxRegister::Reflux</definition>
        <argsstring>(Array&lt; MultiFab *, AMREX_SPACEDIM &gt; const &amp;B_crse) const</argsstring>
        <name>Reflux</name>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>B_crse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" line="83" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.cpp" bodystart="283" bodyend="397"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Edge Flux Register for Constrained Transport</para>
<para>This Flux Register is useful for solving system like dB/dt + curl E = 0 on a staggered mesh. (Here d is of course partial derivation.) B is a vector on cell faces, and E is a vector on cell edges. In 2D, E has only one component, Ez, and it is on the nodes of a 2d mesh.</para>
<para>At the beginning of a coarse step, <computeroutput><ref refid="classamrex_1_1EdgeFluxRegister_1a1c43ccc3313c5128b18860a615a846fe" kindref="member">reset()</ref></computeroutput> is called. In <ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> for the coarse level advance, <computeroutput>CrseAdd</computeroutput> is called with coarse flux (i.e., E). The flux is not scaled. In <ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> for the fine level advance, <computeroutput>FineAdd</computeroutput> is called. After the fine level finishes its time steps, <computeroutput>Reflux</computeroutput> is called to update the coarse level B on the coarse/fine boundary. The user is also expected to call this version of average_down_faces from <ref refid="AMReX__MultiFabUtil_8H" kindref="compound">AMReX_MultiFabUtil.H</ref> to synchronize the coarse level data with the fine level.</para>
<para>\vertbatim template &lt;typename MF, std::enable_if_t&lt;IsFabArray&lt;MF&gt;::value,int&gt;&gt; void average_down_faces (const Array&lt;const MF*,AMREX_SPACEDIM&gt;&amp; fine, const Array&lt;MF*,AMREX_SPACEDIM&gt;&amp; crse, const IntVect&amp; ratio, const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref>&amp; crse_geom) </para>
<para>Note that both CrseAdd and FineAdd are async for GPU builds. That means it&apos;s the user&apos;s responsibility to keep the <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> arguments alive or call <ref refid="namespaceamrex_1_1Gpu_1a67a618504ee5fb94bd65a5d393e344b4" kindref="member">Gpu::streamSynchronize()</ref> when necessary.</para>
<para>Because staggered grids are used, tiling could be very confusing. To avoid confusion, this class assumes that tiling is not enabled for the <ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref> loop containing calls to CrseAdd and FineAdd.</para>
<para>If the equation has an extra factor due to the choice of units, the factor can be absorbed into dt. If we have <computeroutput>v x B</computeroutput> instead of E, the sign can also been absorbed into dt. Note that whatever the choice of sign is, the dt arguments passed to CrseAdd and FineAdd should have the same sign.</para>
<para>We try to keep the interface simple by not providing overloads that specify the component index. If the user&apos;s data does not start with component 0, it can be worked around by creating alias <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> and <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="59">
        <label>amrex::BaseFab&lt; Real &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="60" relation="public-inheritance">
        </childnode>
      </node>
      <node id="78">
        <label>amrex::BaseFab&lt; int &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="60" relation="public-inheritance">
        </childnode>
      </node>
      <node id="70">
        <label>amrex::iMultiFab</label>
        <link refid="classamrex_1_1iMultiFab"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
      </node>
      <node id="38">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="39" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="45">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="62">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="23">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="64">
        <label>std::unique_ptr&lt; amrex::FBData&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="46">
        <label>std::map&lt; amrex::FabArrayBase::BDKey, int &gt;</label>
        <childnode refid="26" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="79">
        <label>std::unique_ptr&lt; amrex::IFABio &gt;</label>
      </node>
      <node id="13">
        <label>K</label>
      </node>
      <node id="24">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="14">
        <label>T</label>
      </node>
      <node id="1">
        <label>amrex::EdgeFluxRegister</label>
        <link refid="classamrex_1_1EdgeFluxRegister"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_crse_geom</edgelabel>
          <edgelabel>m_fine_geom</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_has_cf</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_ratio</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>m_E_crse</edgelabel>
        </childnode>
        <childnode refid="70" relation="usage">
          <edgelabel>m_fine_mask</edgelabel>
        </childnode>
      </node>
      <node id="66">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="4">
        <label>Real</label>
      </node>
      <node id="76">
        <label>std::vector&lt; IArrayBox * &gt;</label>
        <childnode refid="77" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="69">
        <label>amrex::MultiArray4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
      </node>
      <node id="75">
        <label>std::unique_ptr&lt; amrex::FBData&lt; IArrayBox &gt; &gt;</label>
      </node>
      <node id="60">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="61" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="30" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="55">
        <label>amrex::MultiArray4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
      </node>
      <node id="12">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="13" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="61">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="62" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>std::map&lt; std::string, amrex::FabArrayBase::meminfo &gt;</label>
        <childnode refid="44" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="28">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="8" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
      </node>
      <node id="40">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="18">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="19" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="68">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="19">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="20" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
      </node>
      <node id="57">
        <label>std::vector&lt; FArrayBox * &gt;</label>
        <childnode refid="58" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="73">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; IArrayBox &gt; &gt;</label>
      </node>
      <node id="71">
        <label>amrex::FabArray&lt; IArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="72" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="73" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>m_single_chunk_arena</edgelabel>
        </childnode>
        <childnode refid="67" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="75" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="69" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
        <childnode refid="76" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>std::multimap&lt; K, T &gt;</label>
        <childnode refid="13" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="49">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="50" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="48">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="39" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="4" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="65">
        <label>std::unique_ptr&lt; amrex::detail::SingleChunkArena &gt;</label>
      </node>
      <node id="7">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="8" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="77">
        <label>amrex::IArrayBox</label>
        <link refid="classamrex_1_1IArrayBox"/>
        <childnode refid="78" relation="public-inheritance">
        </childnode>
        <childnode refid="79" relation="usage">
          <edgelabel>ifabio</edgelabel>
        </childnode>
      </node>
      <node id="56">
        <label>std::unique_ptr&lt; amrex::PCData&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="50">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
      </node>
      <node id="34">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="35" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>std::shared_ptr&lt; amrex::DistributionMapping::Ref &gt;</label>
      </node>
      <node id="72">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; IArrayBox &gt; &gt;</label>
      </node>
      <node id="3">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="4" relation="usage">
          <edgelabel>dx</edgelabel>
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>amrex::FabArrayBase::ParForInfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1ParForInfo"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_ng</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>m_boxes</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="35">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="36" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>m_ownership</edgelabel>
        </childnode>
      </node>
      <node id="67">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
      <node id="63">
        <label>amrex::FABio</label>
        <link refid="classamrex_1_1FABio"/>
      </node>
      <node id="31">
        <label>amrex::IntVectND&lt; dim &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="44">
        <label>amrex::FabArrayBase::meminfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1meminfo"/>
      </node>
      <node id="74">
        <label>std::unique_ptr&lt; amrex::PCData&lt; IArrayBox &gt; &gt;</label>
      </node>
      <node id="41">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
        <childnode refid="42" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="27" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>amrex::GpuArray&lt; ParticleReal, AMREX_SPACEDIM &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="37">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="54">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="52">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="53" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>roundoff_hi</edgelabel>
          <edgelabel>roundoff_lo</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="51">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
      </node>
      <node id="17">
        <label>amrex::BoxIndexer</label>
        <link refid="structamrex_1_1BoxIndexer"/>
      </node>
      <node id="58">
        <label>amrex::FArrayBox</label>
        <link refid="classamrex_1_1FArrayBox"/>
        <childnode refid="59" relation="public-inheritance">
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>fabio</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>initval</edgelabel>
        </childnode>
      </node>
      <node id="53">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="64" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>m_single_chunk_arena</edgelabel>
        </childnode>
        <childnode refid="66" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
        <childnode refid="67" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="69" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>amrex::LayoutData&lt; int &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="28" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>std::multimap&lt; amrex::FabArrayBase::BDKey, amrex::FabArrayBase::ParForInfo * &gt;</label>
        <childnode refid="16" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>amrex::Vector&lt; amrex::Box &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="12" relation="usage">
          <edgelabel>m_TheTileArrayCache</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>m_TheParForCache</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>m_mem_usage</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>m_BD_count</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>m_TheCPCache</edgelabel>
          <edgelabel>m_TheCrseFineCache</edgelabel>
          <edgelabel>m_TheFBCache</edgelabel>
          <edgelabel>m_TheFillPatchCache</edgelabel>
          <edgelabel>m_ThePolarBCache</edgelabel>
          <edgelabel>m_TheRB180Cache</edgelabel>
          <edgelabel>m_TheRB90Cache</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>ownership</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>m_region_tag</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>std::vector&lt; int &gt;</label>
      </node>
      <node id="39">
        <label>std::string</label>
        <childnode refid="40" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>amrex::IntVectND&lt; AMREX_SPACEDIM &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" line="53" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H" bodystart="54" bodyend="113"/>
    <listofallmembers>
      <member refid="classamrex_1_1EdgeFluxRegister_1aaef7f034b3fd9195583d14f1ea408039" prot="public" virt="non-virtual"><scope>amrex::EdgeFluxRegister</scope><name>CrseAdd</name></member>
      <member refid="classamrex_1_1EdgeFluxRegister_1aafc2526c524b219fe69770bde17fc9af" prot="public" virt="non-virtual"><scope>amrex::EdgeFluxRegister</scope><name>define</name></member>
      <member refid="classamrex_1_1EdgeFluxRegister_1a89a4c8560bbedddef433d4467a8dcfd4" prot="public" virt="non-virtual"><scope>amrex::EdgeFluxRegister</scope><name>EdgeFluxRegister</name></member>
      <member refid="classamrex_1_1EdgeFluxRegister_1a80d8a50bf42890675c5e06ae694b66ce" prot="public" virt="non-virtual"><scope>amrex::EdgeFluxRegister</scope><name>EdgeFluxRegister</name></member>
      <member refid="classamrex_1_1EdgeFluxRegister_1ae7dab32dce79ee2932c74b0bf746d945" prot="public" virt="non-virtual"><scope>amrex::EdgeFluxRegister</scope><name>FineAdd</name></member>
      <member refid="classamrex_1_1EdgeFluxRegister_1a6cf33cc04f1dd5084d2bc1153f5952cc" prot="private" virt="non-virtual"><scope>amrex::EdgeFluxRegister</scope><name>m_crse_geom</name></member>
      <member refid="classamrex_1_1EdgeFluxRegister_1a3f1e0f4027765309bbc93b8110a040a0" prot="private" virt="non-virtual"><scope>amrex::EdgeFluxRegister</scope><name>m_E_crse</name></member>
      <member refid="classamrex_1_1EdgeFluxRegister_1abd26799d7889db8005b39a33cf1065ad" prot="private" virt="non-virtual"><scope>amrex::EdgeFluxRegister</scope><name>m_E_fine</name></member>
      <member refid="classamrex_1_1EdgeFluxRegister_1ad5422062aa267d4ec336630342c1b9d6" prot="private" virt="non-virtual"><scope>amrex::EdgeFluxRegister</scope><name>m_fine_geom</name></member>
      <member refid="classamrex_1_1EdgeFluxRegister_1a46ce26a00431e6e7e5e15f89a73ba61e" prot="private" virt="non-virtual"><scope>amrex::EdgeFluxRegister</scope><name>m_fine_mask</name></member>
      <member refid="classamrex_1_1EdgeFluxRegister_1a10ff3c540a6210b65bce49aaa68d7583" prot="private" virt="non-virtual"><scope>amrex::EdgeFluxRegister</scope><name>m_has_cf</name></member>
      <member refid="classamrex_1_1EdgeFluxRegister_1a7ae82b32f3ba8bce2d86556224b6b06c" prot="private" virt="non-virtual"><scope>amrex::EdgeFluxRegister</scope><name>m_ncomp</name></member>
      <member refid="classamrex_1_1EdgeFluxRegister_1a762cdbc28b362b73ca1e44330814ea07" prot="private" virt="non-virtual"><scope>amrex::EdgeFluxRegister</scope><name>m_ratio</name></member>
      <member refid="classamrex_1_1EdgeFluxRegister_1a3b50d43c4fe114515bffcfa5cbd58117" prot="public" virt="non-virtual"><scope>amrex::EdgeFluxRegister</scope><name>Reflux</name></member>
      <member refid="classamrex_1_1EdgeFluxRegister_1a1c43ccc3313c5128b18860a615a846fe" prot="public" virt="non-virtual"><scope>amrex::EdgeFluxRegister</scope><name>reset</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
