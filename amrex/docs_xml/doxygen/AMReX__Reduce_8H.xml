<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__Reduce_8H" kind="file" language="C++">
    <compoundname>AMReX_Reduce.H</compoundname>
    <includes refid="AMReX__Gpu_8H" local="no">AMReX_Gpu.H</includes>
    <includes refid="AMReX__Arena_8H" local="no">AMReX_Arena.H</includes>
    <includes local="no">algorithm</includes>
    <includedby refid="AMReX__BaseFab_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H</includedby>
    <includedby refid="AMReX__EBCellFlag_8cpp" local="no">/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBCellFlag.cpp</includedby>
    <incdepgraph>
      <node id="46913">
        <label>AMReX_OpenMP.H</label>
        <link refid="AMReX__OpenMP_8H"/>
      </node>
      <node id="46934">
        <label>AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="46907" relation="include">
        </childnode>
        <childnode refid="46935" relation="include">
        </childnode>
        <childnode refid="46871" relation="include">
        </childnode>
        <childnode refid="46936" relation="include">
        </childnode>
        <childnode refid="46931" relation="include">
        </childnode>
        <childnode refid="46937" relation="include">
        </childnode>
        <childnode refid="46884" relation="include">
        </childnode>
      </node>
      <node id="46901">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="46869" relation="include">
        </childnode>
        <childnode refid="46902" relation="include">
        </childnode>
        <childnode refid="46871" relation="include">
        </childnode>
        <childnode refid="46854" relation="include">
        </childnode>
      </node>
      <node id="46933">
        <label>iomanip</label>
      </node>
      <node id="46866">
        <label>functional</label>
      </node>
      <node id="46896">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="46865" relation="include">
        </childnode>
        <childnode refid="46870" relation="include">
        </childnode>
        <childnode refid="46893" relation="include">
        </childnode>
        <childnode refid="46897" relation="include">
        </childnode>
        <childnode refid="46887" relation="include">
        </childnode>
        <childnode refid="46898" relation="include">
        </childnode>
        <childnode refid="46880" relation="include">
        </childnode>
        <childnode refid="46871" relation="include">
        </childnode>
      </node>
      <node id="46885">
        <label>limits</label>
      </node>
      <node id="46905">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="46867" relation="include">
        </childnode>
        <childnode refid="46859" relation="include">
        </childnode>
      </node>
      <node id="46935">
        <label>iterator</label>
      </node>
      <node id="46873">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="46874" relation="include">
        </childnode>
        <childnode refid="46875" relation="include">
        </childnode>
        <childnode refid="46877" relation="include">
        </childnode>
        <childnode refid="46854" relation="include">
        </childnode>
        <childnode refid="46878" relation="include">
        </childnode>
        <childnode refid="46887" relation="include">
        </childnode>
        <childnode refid="46888" relation="include">
        </childnode>
        <childnode refid="46879" relation="include">
        </childnode>
        <childnode refid="46880" relation="include">
        </childnode>
        <childnode refid="46889" relation="include">
        </childnode>
        <childnode refid="46871" relation="include">
        </childnode>
        <childnode refid="46843" relation="include">
        </childnode>
        <childnode refid="46849" relation="include">
        </childnode>
      </node>
      <node id="46861">
        <label>float.h</label>
      </node>
      <node id="46922">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="46843" relation="include">
        </childnode>
        <childnode refid="46848" relation="include">
        </childnode>
        <childnode refid="46849" relation="include">
        </childnode>
        <childnode refid="46891" relation="include">
        </childnode>
        <childnode refid="46860" relation="include">
        </childnode>
        <childnode refid="46859" relation="include">
        </childnode>
        <childnode refid="46857" relation="include">
        </childnode>
        <childnode refid="46880" relation="include">
        </childnode>
        <childnode refid="46889" relation="include">
        </childnode>
        <childnode refid="46865" relation="include">
        </childnode>
        <childnode refid="46863" relation="include">
        </childnode>
      </node>
      <node id="46938">
        <label>cstdint</label>
      </node>
      <node id="46899">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="46893" relation="include">
        </childnode>
        <childnode refid="46885" relation="include">
        </childnode>
        <childnode refid="46869" relation="include">
        </childnode>
        <childnode refid="46870" relation="include">
        </childnode>
        <childnode refid="46865" relation="include">
        </childnode>
        <childnode refid="46853" relation="include">
        </childnode>
        <childnode refid="46880" relation="include">
        </childnode>
        <childnode refid="46871" relation="include">
        </childnode>
        <childnode refid="46873" relation="include">
        </childnode>
        <childnode refid="46859" relation="include">
        </childnode>
        <childnode refid="46900" relation="include">
        </childnode>
      </node>
      <node id="46921">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="46843" relation="include">
        </childnode>
      </node>
      <node id="46878">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="46857" relation="include">
        </childnode>
        <childnode refid="46854" relation="include">
        </childnode>
        <childnode refid="46879" relation="include">
        </childnode>
        <childnode refid="46880" relation="include">
        </childnode>
        <childnode refid="46871" relation="include">
        </childnode>
        <childnode refid="46876" relation="include">
        </childnode>
        <childnode refid="46852" relation="include">
        </childnode>
        <childnode refid="46860" relation="include">
        </childnode>
        <childnode refid="46843" relation="include">
        </childnode>
        <childnode refid="46862" relation="include">
        </childnode>
        <childnode refid="46874" relation="include">
        </childnode>
        <childnode refid="46864" relation="include">
        </childnode>
        <childnode refid="46863" relation="include">
        </childnode>
        <childnode refid="46885" relation="include">
        </childnode>
        <childnode refid="46886" relation="include">
        </childnode>
        <childnode refid="46872" relation="include">
        </childnode>
      </node>
      <node id="46853">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="46843" relation="include">
        </childnode>
        <childnode refid="46844" relation="include">
        </childnode>
        <childnode refid="46846" relation="include">
        </childnode>
        <childnode refid="46854" relation="include">
        </childnode>
        <childnode refid="46855" relation="include">
        </childnode>
        <childnode refid="46857" relation="include">
        </childnode>
        <childnode refid="46859" relation="include">
        </childnode>
        <childnode refid="46862" relation="include">
        </childnode>
        <childnode refid="46865" relation="include">
        </childnode>
        <childnode refid="46866" relation="include">
        </childnode>
        <childnode refid="46867" relation="include">
        </childnode>
        <childnode refid="46845" relation="include">
        </childnode>
        <childnode refid="46868" relation="include">
        </childnode>
        <childnode refid="46869" relation="include">
        </childnode>
      </node>
      <node id="46844">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="46845" relation="include">
        </childnode>
      </node>
      <node id="46928">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="46912">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="46892" relation="include">
        </childnode>
        <childnode refid="46867" relation="include">
        </childnode>
      </node>
      <node id="46871">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="46872" relation="include">
        </childnode>
        <childnode refid="46868" relation="include">
        </childnode>
        <childnode refid="46869" relation="include">
        </childnode>
        <childnode refid="46852" relation="include">
        </childnode>
        <childnode refid="46857" relation="include">
        </childnode>
      </node>
      <node id="46932">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="46883" relation="include">
        </childnode>
        <childnode refid="46902" relation="include">
        </childnode>
        <childnode refid="46933" relation="include">
        </childnode>
        <childnode refid="46882" relation="include">
        </childnode>
        <childnode refid="46853" relation="include">
        </childnode>
        <childnode refid="46901" relation="include">
        </childnode>
        <childnode refid="46900" relation="include">
        </childnode>
      </node>
      <node id="46863">
        <label>cmath</label>
      </node>
      <node id="46847">
        <label>cassert</label>
      </node>
      <node id="46856">
        <label>stdexcept</label>
      </node>
      <node id="46907">
        <label>numeric</label>
      </node>
      <node id="46923">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="46881" relation="include">
        </childnode>
        <childnode refid="46924" relation="include">
        </childnode>
        <childnode refid="46866" relation="include">
        </childnode>
        <childnode refid="46884" relation="include">
        </childnode>
        <childnode refid="46882" relation="include">
        </childnode>
        <childnode refid="46890" relation="include">
        </childnode>
        <childnode refid="46925" relation="include">
        </childnode>
        <childnode refid="46921" relation="include">
        </childnode>
        <childnode refid="46843" relation="include">
        </childnode>
      </node>
      <node id="46898">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="46874" relation="include">
        </childnode>
        <childnode refid="46878" relation="include">
        </childnode>
        <childnode refid="46887" relation="include">
        </childnode>
        <childnode refid="46873" relation="include">
        </childnode>
        <childnode refid="46880" relation="include">
        </childnode>
        <childnode refid="46871" relation="include">
        </childnode>
      </node>
      <node id="46867">
        <label>string</label>
      </node>
      <node id="46926">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="46873" relation="include">
        </childnode>
      </node>
      <node id="46893">
        <label>map</label>
      </node>
      <node id="46909">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="46843" relation="include">
        </childnode>
        <childnode refid="46900" relation="include">
        </childnode>
      </node>
      <node id="46925">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="46882" relation="include">
        </childnode>
      </node>
      <node id="46895">
        <label>cfloat</label>
      </node>
      <node id="46841">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Reduce.H</label>
        <link refid="AMReX_Reduce.H"/>
        <childnode refid="46842" relation="include">
        </childnode>
        <childnode refid="46851" relation="include">
        </childnode>
        <childnode refid="46872" relation="include">
        </childnode>
      </node>
      <node id="46902">
        <label>fstream</label>
      </node>
      <node id="46877">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="46859" relation="include">
        </childnode>
      </node>
      <node id="46880">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="46881" relation="include">
        </childnode>
        <childnode refid="46869" relation="include">
        </childnode>
        <childnode refid="46882" relation="include">
        </childnode>
        <childnode refid="46867" relation="include">
        </childnode>
        <childnode refid="46865" relation="include">
        </childnode>
        <childnode refid="46883" relation="include">
        </childnode>
        <childnode refid="46845" relation="include">
        </childnode>
        <childnode refid="46884" relation="include">
        </childnode>
        <childnode refid="46853" relation="include">
        </childnode>
        <childnode refid="46843" relation="include">
        </childnode>
        <childnode refid="46849" relation="include">
        </childnode>
        <childnode refid="46852" relation="include">
        </childnode>
        <childnode refid="46879" relation="include">
        </childnode>
        <childnode refid="46859" relation="include">
        </childnode>
        <childnode refid="46875" relation="include">
        </childnode>
        <childnode refid="46876" relation="include">
        </childnode>
      </node>
      <node id="46919">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="46843" relation="include">
        </childnode>
        <childnode refid="46849" relation="include">
        </childnode>
        <childnode refid="46848" relation="include">
        </childnode>
        <childnode refid="46920" relation="include">
        </childnode>
        <childnode refid="46922" relation="include">
        </childnode>
        <childnode refid="46921" relation="include">
        </childnode>
      </node>
      <node id="46879">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="46860">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="46848">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
      </node>
      <node id="46931">
        <label>AMReX_GpuAllocators.H</label>
        <link refid="AMReX__GpuAllocators_8H"/>
        <childnode refid="46893" relation="include">
        </childnode>
        <childnode refid="46869" relation="include">
        </childnode>
        <childnode refid="46885" relation="include">
        </childnode>
        <childnode refid="46884" relation="include">
        </childnode>
        <childnode refid="46932" relation="include">
        </childnode>
        <childnode refid="46851" relation="include">
        </childnode>
        <childnode refid="46891" relation="include">
        </childnode>
      </node>
      <node id="46916">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="46843" relation="include">
        </childnode>
        <childnode refid="46849" relation="include">
        </childnode>
        <childnode refid="46848" relation="include">
        </childnode>
        <childnode refid="46912" relation="include">
        </childnode>
        <childnode refid="46917" relation="include">
        </childnode>
        <childnode refid="46891" relation="include">
        </childnode>
        <childnode refid="46918" relation="include">
        </childnode>
        <childnode refid="46919" relation="include">
        </childnode>
        <childnode refid="46923" relation="include">
        </childnode>
        <childnode refid="46873" relation="include">
        </childnode>
        <childnode refid="46926" relation="include">
        </childnode>
        <childnode refid="46860" relation="include">
        </childnode>
        <childnode refid="46852" relation="include">
        </childnode>
        <childnode refid="46890" relation="include">
        </childnode>
        <childnode refid="46914" relation="include">
        </childnode>
        <childnode refid="46870" relation="include">
        </childnode>
        <childnode refid="46885" relation="include">
        </childnode>
        <childnode refid="46872" relation="include">
        </childnode>
        <childnode refid="46882" relation="include">
        </childnode>
        <childnode refid="46927" relation="include">
        </childnode>
        <childnode refid="46928" relation="include">
        </childnode>
      </node>
      <node id="46911">
        <label>sys/types.h</label>
      </node>
      <node id="46906">
        <label>typeinfo</label>
      </node>
      <node id="46845">
        <label>cstdio</label>
      </node>
      <node id="46890">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="46884" relation="include">
        </childnode>
        <childnode refid="46860" relation="include">
        </childnode>
      </node>
      <node id="46849">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="46843" relation="include">
        </childnode>
        <childnode refid="46848" relation="include">
        </childnode>
      </node>
      <node id="46924">
        <label>tuple</label>
      </node>
      <node id="46903">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="46904" relation="include">
        </childnode>
        <childnode refid="46867" relation="include">
        </childnode>
        <childnode refid="46882" relation="include">
        </childnode>
        <childnode refid="46883" relation="include">
        </childnode>
        <childnode refid="46845" relation="include">
        </childnode>
        <childnode refid="46864" relation="include">
        </childnode>
      </node>
      <node id="46937">
        <label>AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="46842" relation="include">
        </childnode>
        <childnode refid="46851" relation="include">
        </childnode>
        <childnode refid="46938" relation="include">
        </childnode>
        <childnode refid="46884" relation="include">
        </childnode>
      </node>
      <node id="46910">
        <label>AMReX_FileSystem.H</label>
        <link refid="AMReX__FileSystem_8H"/>
        <childnode refid="46867" relation="include">
        </childnode>
        <childnode refid="46911" relation="include">
        </childnode>
      </node>
      <node id="46904">
        <label>stack</label>
      </node>
      <node id="46868">
        <label>vector</label>
      </node>
      <node id="46852">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="46853" relation="include">
        </childnode>
      </node>
      <node id="46862">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="46843" relation="include">
        </childnode>
        <childnode refid="46860" relation="include">
        </childnode>
        <childnode refid="46863" relation="include">
        </childnode>
        <childnode refid="46864" relation="include">
        </childnode>
      </node>
      <node id="46843">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="46882">
        <label>utility</label>
      </node>
      <node id="46881">
        <label>array</label>
      </node>
      <node id="46883">
        <label>sstream</label>
      </node>
      <node id="46855">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="46856" relation="include">
        </childnode>
      </node>
      <node id="46875">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="46872" relation="include">
        </childnode>
        <childnode refid="46843" relation="include">
        </childnode>
        <childnode refid="46860" relation="include">
        </childnode>
        <childnode refid="46876" relation="include">
        </childnode>
      </node>
      <node id="46857">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="46858" relation="include">
        </childnode>
      </node>
      <node id="46917">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="46843" relation="include">
        </childnode>
        <childnode refid="46849" relation="include">
        </childnode>
        <childnode refid="46912" relation="include">
        </childnode>
        <childnode refid="46873" relation="include">
        </childnode>
        <childnode refid="46890" relation="include">
        </childnode>
      </node>
      <node id="46900">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="46854" relation="include">
        </childnode>
        <childnode refid="46901" relation="include">
        </childnode>
        <childnode refid="46903" relation="include">
        </childnode>
        <childnode refid="46905" relation="include">
        </childnode>
        <childnode refid="46852" relation="include">
        </childnode>
        <childnode refid="46857" relation="include">
        </childnode>
        <childnode refid="46859" relation="include">
        </childnode>
        <childnode refid="46880" relation="include">
        </childnode>
        <childnode refid="46871" relation="include">
        </childnode>
        <childnode refid="46873" relation="include">
        </childnode>
        <childnode refid="46865" relation="include">
        </childnode>
        <childnode refid="46868" relation="include">
        </childnode>
        <childnode refid="46867" relation="include">
        </childnode>
        <childnode refid="46906" relation="include">
        </childnode>
        <childnode refid="46872" relation="include">
        </childnode>
        <childnode refid="46866" relation="include">
        </childnode>
        <childnode refid="46885" relation="include">
        </childnode>
        <childnode refid="46907" relation="include">
        </childnode>
        <childnode refid="46908" relation="include">
        </childnode>
      </node>
      <node id="46892">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="46864" relation="include">
        </childnode>
        <childnode refid="46865" relation="include">
        </childnode>
        <childnode refid="46883" relation="include">
        </childnode>
        <childnode refid="46867" relation="include">
        </childnode>
        <childnode refid="46893" relation="include">
        </childnode>
        <childnode refid="46894" relation="include">
        </childnode>
        <childnode refid="46884" relation="include">
        </childnode>
        <childnode refid="46886" relation="include">
        </childnode>
        <childnode refid="46885" relation="include">
        </childnode>
        <childnode refid="46895" relation="include">
        </childnode>
        <childnode refid="46852" relation="include">
        </childnode>
        <childnode refid="46859" relation="include">
        </childnode>
        <childnode refid="46857" relation="include">
        </childnode>
        <childnode refid="46880" relation="include">
        </childnode>
        <childnode refid="46871" relation="include">
        </childnode>
        <childnode refid="46873" relation="include">
        </childnode>
        <childnode refid="46896" relation="include">
        </childnode>
        <childnode refid="46899" relation="include">
        </childnode>
        <childnode refid="46900" relation="include">
        </childnode>
        <childnode refid="46909" relation="include">
        </childnode>
        <childnode refid="46843" relation="include">
        </childnode>
        <childnode refid="46910" relation="include">
        </childnode>
      </node>
      <node id="46851">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="46852" relation="include">
        </childnode>
        <childnode refid="46870" relation="include">
        </childnode>
        <childnode refid="46864" relation="include">
        </childnode>
      </node>
      <node id="46888">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="46874" relation="include">
        </childnode>
        <childnode refid="46852" relation="include">
        </childnode>
        <childnode refid="46879" relation="include">
        </childnode>
        <childnode refid="46843" relation="include">
        </childnode>
      </node>
      <node id="46876">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="46865" relation="include">
        </childnode>
        <childnode refid="46859" relation="include">
        </childnode>
        <childnode refid="46843" relation="include">
        </childnode>
      </node>
      <node id="46874">
        <label>iosfwd</label>
      </node>
      <node id="46864">
        <label>cstdlib</label>
      </node>
      <node id="46865">
        <label>iostream</label>
      </node>
      <node id="46887">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="46874" relation="include">
        </childnode>
        <childnode refid="46854" relation="include">
        </childnode>
        <childnode refid="46878" relation="include">
        </childnode>
        <childnode refid="46879" relation="include">
        </childnode>
      </node>
      <node id="46889">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="46878" relation="include">
        </childnode>
        <childnode refid="46844" relation="include">
        </childnode>
      </node>
      <node id="46870">
        <label>cstddef</label>
      </node>
      <node id="46897">
        <label>unordered_map</label>
      </node>
      <node id="46936">
        <label>AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="46890" relation="include">
        </childnode>
        <childnode refid="46842" relation="include">
        </childnode>
        <childnode refid="46931" relation="include">
        </childnode>
        <childnode refid="46934" relation="include">
        </childnode>
        <childnode refid="46891" relation="include">
        </childnode>
        <childnode refid="46884" relation="include">
        </childnode>
        <childnode refid="46882" relation="include">
        </childnode>
        <childnode refid="46869" relation="include">
        </childnode>
        <childnode refid="46915" relation="include">
        </childnode>
      </node>
      <node id="46842">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="46843" relation="include">
        </childnode>
        <childnode refid="46844" relation="include">
        </childnode>
        <childnode refid="46846" relation="include">
        </childnode>
        <childnode refid="46848" relation="include">
        </childnode>
        <childnode refid="46849" relation="include">
        </childnode>
        <childnode refid="46850" relation="include">
        </childnode>
        <childnode refid="46916" relation="include">
        </childnode>
        <childnode refid="46912" relation="include">
        </childnode>
        <childnode refid="46920" relation="include">
        </childnode>
        <childnode refid="46922" relation="include">
        </childnode>
        <childnode refid="46891" relation="include">
        </childnode>
        <childnode refid="46929" relation="include">
        </childnode>
        <childnode refid="46930" relation="include">
        </childnode>
        <childnode refid="46918" relation="include">
        </childnode>
        <childnode refid="46917" relation="include">
        </childnode>
        <childnode refid="46919" relation="include">
        </childnode>
        <childnode refid="46931" relation="include">
        </childnode>
        <childnode refid="46934" relation="include">
        </childnode>
        <childnode refid="46939" relation="include">
        </childnode>
      </node>
      <node id="46886">
        <label>climits</label>
      </node>
      <node id="46939">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="46894">
        <label>chrono</label>
      </node>
      <node id="46927">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="46908">
        <label>csignal</label>
      </node>
      <node id="46850">
        <label>AMReX_GpuFuse.H</label>
        <link refid="AMReX__GpuFuse_8H"/>
        <childnode refid="46851" relation="include">
        </childnode>
        <childnode refid="46871" relation="include">
        </childnode>
        <childnode refid="46873" relation="include">
        </childnode>
        <childnode refid="46890" relation="include">
        </childnode>
        <childnode refid="46891" relation="include">
        </childnode>
        <childnode refid="46914" relation="include">
        </childnode>
        <childnode refid="46915" relation="include">
        </childnode>
        <childnode refid="46869" relation="include">
        </childnode>
      </node>
      <node id="46914">
        <label>AMReX_GpuLaunchGlobal.H</label>
        <link refid="AMReX__GpuLaunchGlobal_8H"/>
        <childnode refid="46843" relation="include">
        </childnode>
      </node>
      <node id="46884">
        <label>type_traits</label>
      </node>
      <node id="46854">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="46930">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="46851" relation="include">
        </childnode>
      </node>
      <node id="46872">
        <label>algorithm</label>
      </node>
      <node id="46891">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="46864" relation="include">
        </childnode>
        <childnode refid="46869" relation="include">
        </childnode>
        <childnode refid="46881" relation="include">
        </childnode>
        <childnode refid="46853" relation="include">
        </childnode>
        <childnode refid="46892" relation="include">
        </childnode>
        <childnode refid="46848" relation="include">
        </childnode>
        <childnode refid="46912" relation="include">
        </childnode>
        <childnode refid="46849" relation="include">
        </childnode>
        <childnode refid="46913" relation="include">
        </childnode>
        <childnode refid="46871" relation="include">
        </childnode>
      </node>
      <node id="46846">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="46847" relation="include">
        </childnode>
      </node>
      <node id="46920">
        <label>AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="46843" relation="include">
        </childnode>
        <childnode refid="46921" relation="include">
        </childnode>
      </node>
      <node id="46915">
        <label>cstring</label>
      </node>
      <node id="46869">
        <label>memory</label>
      </node>
      <node id="46929">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="46870" relation="include">
        </childnode>
        <childnode refid="46915" relation="include">
        </childnode>
        <childnode refid="46864" relation="include">
        </childnode>
        <childnode refid="46869" relation="include">
        </childnode>
        <childnode refid="46851" relation="include">
        </childnode>
        <childnode refid="46890" relation="include">
        </childnode>
        <childnode refid="46891" relation="include">
        </childnode>
      </node>
      <node id="46858">
        <label>inttypes.h</label>
      </node>
      <node id="46918">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="46843" relation="include">
        </childnode>
        <childnode refid="46849" relation="include">
        </childnode>
        <childnode refid="46891" relation="include">
        </childnode>
        <childnode refid="46890" relation="include">
        </childnode>
        <childnode refid="46851" relation="include">
        </childnode>
        <childnode refid="46864" relation="include">
        </childnode>
      </node>
      <node id="46859">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="46860" relation="include">
        </childnode>
        <childnode refid="46861" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="47096">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_Laplacian.cpp</label>
        <link refid="AMReX__Laplacian_8cpp"/>
      </node>
      <node id="46965">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_ErrorList.H</label>
        <link refid="AMReX__ErrorList_8H"/>
        <childnode refid="46966" relation="include">
        </childnode>
      </node>
      <node id="47086">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABecLaplacian.cpp</label>
        <link refid="AMReX__ABecLaplacian_8cpp"/>
      </node>
      <node id="46951">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp</label>
        <link refid="AMReX__AmrDataAdaptor_8cpp"/>
      </node>
      <node id="46999">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticle_mod_K.H</label>
        <link refid="AMReX__TracerParticle__mod__K_8H"/>
        <childnode refid="47000" relation="include">
        </childnode>
      </node>
      <node id="47212">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_2D_C.cpp</label>
        <link refid="AMReX__EB2__2D__C_8cpp"/>
      </node>
      <node id="46986">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.cpp</label>
        <link refid="AMReX__MLEBTensorOp_8cpp"/>
      </node>
      <node id="47109">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryRegister.cpp</label>
        <link refid="AMReX__BndryRegister_8cpp"/>
      </node>
      <node id="47227">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_2D_K.H</label>
        <link refid="AMReX__MLTensor__2D__K_8H"/>
      </node>
      <node id="47146">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleBufferMap.cpp</label>
        <link refid="AMReX__ParticleBufferMap_8cpp"/>
      </node>
      <node id="47008">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxRegister.cpp</label>
        <link refid="AMReX__FluxRegister_8cpp"/>
      </node>
      <node id="47179">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayBase.cpp</label>
        <link refid="AMReX__FabArrayBase_8cpp"/>
      </node>
      <node id="47213">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_3D_C.cpp</label>
        <link refid="AMReX__EB2__3D__C_8cpp"/>
      </node>
      <node id="46984">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.cpp</label>
        <link refid="AMReX__MLCellLinOp_8cpp"/>
      </node>
      <node id="47186">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_C.cpp</label>
        <link refid="AMReX__FilCC__C_8cpp"/>
      </node>
      <node id="46994">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_NeighborParticles.H</label>
        <link refid="AMReX__NeighborParticles_8H"/>
      </node>
      <node id="47074">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H</label>
        <link refid="AMReX__HypreABecLap_8H"/>
        <childnode refid="47037" relation="include">
        </childnode>
        <childnode refid="47075" relation="include">
        </childnode>
      </node>
      <node id="47097">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LinOp.cpp</label>
        <link refid="AMReX__LinOp_8cpp"/>
      </node>
      <node id="47079">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_Hypre.H</label>
        <link refid="AMReX__Hypre_8H"/>
        <childnode refid="47037" relation="include">
        </childnode>
        <childnode refid="47074" relation="include">
        </childnode>
        <childnode refid="47080" relation="include">
        </childnode>
        <childnode refid="47036" relation="include">
        </childnode>
      </node>
      <node id="47022">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.cpp</label>
        <link refid="AMReX__MLCellABecLap_8cpp"/>
      </node>
      <node id="47044">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.cpp</label>
        <link refid="AMReX__StateData_8cpp"/>
      </node>
      <node id="47010">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister.H</label>
        <link refid="AMReX__YAFluxRegister_8H"/>
        <childnode refid="47011" relation="include">
        </childnode>
        <childnode refid="47012" relation="include">
        </childnode>
        <childnode refid="47014" relation="include">
        </childnode>
      </node>
      <node id="47095">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_Laplacian.H</label>
        <link refid="AMReX__Laplacian_8H"/>
        <childnode refid="47096" relation="include">
        </childnode>
      </node>
      <node id="46960">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCoreBase.H</label>
        <link refid="AMReX__EB__LSCoreBase_8H"/>
        <childnode refid="46957" relation="include">
        </childnode>
        <childnode refid="46959" relation="include">
        </childnode>
      </node>
      <node id="46953">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrInSituBridge.cpp</label>
        <link refid="AMReX__AmrInSituBridge_8cpp"/>
      </node>
      <node id="47153">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/SDC/AMReX_SDCstruct.H</label>
        <link refid="AMReX__SDCstruct_8H"/>
        <childnode refid="47154" relation="include">
        </childnode>
      </node>
      <node id="47122">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_utils.cpp</label>
        <link refid="AMReX__EB__utils_8cpp"/>
      </node>
      <node id="47169">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interp_1D_C.H</label>
        <link refid="AMReX__Interp__1D__C_8H"/>
      </node>
      <node id="47083">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp</label>
        <link refid="AMReX__PETSc_8cpp"/>
      </node>
      <node id="47208">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister_3D_K.H</label>
        <link refid="AMReX__YAFluxRegister__3D__K_8H"/>
        <childnode refid="47209" relation="include">
        </childnode>
      </node>
      <node id="46988">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.cpp</label>
        <link refid="AMReX__MLNodeLaplacian_8cpp"/>
      </node>
      <node id="47197">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_3D_C.H</label>
        <link refid="AMReX__MultiFabUtil__3D__C_8H"/>
        <childnode refid="47198" relation="include">
        </childnode>
      </node>
      <node id="47020">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.H</label>
        <link refid="AMReX__MLALaplacian_8H"/>
        <childnode refid="46983" relation="include">
        </childnode>
        <childnode refid="47021" relation="include">
        </childnode>
      </node>
      <node id="47047">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCUtil.H</label>
        <link refid="AMReX__BCUtil_8H"/>
        <childnode refid="47048" relation="include">
        </childnode>
      </node>
      <node id="47102">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_DivVis.cpp</label>
        <link refid="AMReX__DivVis_8cpp"/>
      </node>
      <node id="47026">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.cpp</label>
        <link refid="AMReX__MLLinOp_8cpp"/>
      </node>
      <node id="47104">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCCGSolver.cpp</label>
        <link refid="AMReX__MCCGSolver_8cpp"/>
      </node>
      <node id="47103">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCCGSolver.H</label>
        <link refid="AMReX__MCCGSolver_8H"/>
        <childnode refid="47104" relation="include">
        </childnode>
        <childnode refid="47105" relation="include">
        </childnode>
      </node>
      <node id="47183">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_2D_C.H</label>
        <link refid="AMReX__FilCC__2D__C_8H"/>
      </node>
      <node id="47062">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileDataImpl.cpp</label>
        <link refid="AMReX__PlotFileDataImpl_8cpp"/>
      </node>
      <node id="47090">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_MultiGrid.H</label>
        <link refid="AMReX__MultiGrid_8H"/>
        <childnode refid="47088" relation="include">
        </childnode>
        <childnode refid="47089" relation="include">
        </childnode>
      </node>
      <node id="47027">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H</label>
        <link refid="AMReX__MLCGSolver_8H"/>
        <childnode refid="47028" relation="include">
        </childnode>
        <childnode refid="47029" relation="include">
        </childnode>
      </node>
      <node id="47233">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ArrayOfStructs.H</label>
        <link refid="AMReX__ArrayOfStructs_8H"/>
        <childnode refid="46995" relation="include">
        </childnode>
        <childnode refid="47234" relation="include">
        </childnode>
      </node>
      <node id="47064">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileUtil.cpp</label>
        <link refid="AMReX__PlotFileUtil_8cpp"/>
      </node>
      <node id="47225">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_2D_K.H</label>
        <link refid="AMReX__MLEBTensor__2D__K_8H"/>
      </node>
      <node id="47072">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H</label>
        <link refid="AMReX__MacBndry_8H"/>
        <childnode refid="47073" relation="include">
        </childnode>
        <childnode refid="47074" relation="include">
        </childnode>
      </node>
      <node id="47067">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxRegister.H</label>
        <link refid="AMReX__FluxRegister_8H"/>
        <childnode refid="47008" relation="include">
        </childnode>
        <childnode refid="46957" relation="include">
        </childnode>
      </node>
      <node id="47209">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister_K.H</label>
        <link refid="AMReX__YAFluxRegister__K_8H"/>
        <childnode refid="47011" relation="include">
        </childnode>
        <childnode refid="47210" relation="include">
        </childnode>
      </node>
      <node id="47080">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap2.H</label>
        <link refid="AMReX__HypreABecLap2_8H"/>
        <childnode refid="47037" relation="include">
        </childnode>
        <childnode refid="47081" relation="include">
        </childnode>
      </node>
      <node id="47158">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_VisMF.H</label>
        <link refid="AMReX__VisMF_8H"/>
        <childnode refid="46948" relation="include">
        </childnode>
        <childnode refid="46947" relation="include">
        </childnode>
        <childnode refid="46949" relation="include">
        </childnode>
        <childnode refid="47043" relation="include">
        </childnode>
        <childnode refid="46970" relation="include">
        </childnode>
        <childnode refid="47159" relation="include">
        </childnode>
        <childnode refid="47049" relation="include">
        </childnode>
        <childnode refid="47160" relation="include">
        </childnode>
        <childnode refid="47062" relation="include">
        </childnode>
        <childnode refid="47061" relation="include">
        </childnode>
        <childnode refid="47064" relation="include">
        </childnode>
        <childnode refid="47155" relation="include">
        </childnode>
        <childnode refid="47110" relation="include">
        </childnode>
        <childnode refid="47114" relation="include">
        </childnode>
        <childnode refid="46959" relation="include">
        </childnode>
        <childnode refid="46977" relation="include">
        </childnode>
        <childnode refid="47055" relation="include">
        </childnode>
        <childnode refid="47126" relation="include">
        </childnode>
        <childnode refid="47038" relation="include">
        </childnode>
        <childnode refid="46981" relation="include">
        </childnode>
        <childnode refid="47088" relation="include">
        </childnode>
        <childnode refid="47028" relation="include">
        </childnode>
        <childnode refid="47014" relation="include">
        </childnode>
        <childnode refid="46987" relation="include">
        </childnode>
        <childnode refid="46995" relation="include">
        </childnode>
      </node>
      <node id="47014">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H</label>
        <link refid="AMReX__MLLinOp_8H"/>
        <childnode refid="47015" relation="include">
        </childnode>
        <childnode refid="47027" relation="include">
        </childnode>
        <childnode refid="47026" relation="include">
        </childnode>
        <childnode refid="47029" relation="include">
        </childnode>
        <childnode refid="47031" relation="include">
        </childnode>
      </node>
      <node id="46963">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8cpp"/>
      </node>
      <node id="46958">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_WriteEBSurface.cpp</label>
        <link refid="AMReX__WriteEBSurface_8cpp"/>
      </node>
      <node id="47214">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFArrayBox.H</label>
        <link refid="AMReX__EBFArrayBox_8H"/>
        <childnode refid="46976" relation="include">
        </childnode>
        <childnode refid="47122" relation="include">
        </childnode>
        <childnode refid="46969" relation="include">
        </childnode>
        <childnode refid="47117" relation="include">
        </childnode>
        <childnode refid="47215" relation="include">
        </childnode>
        <childnode refid="47013" relation="include">
        </childnode>
        <childnode refid="47216" relation="include">
        </childnode>
        <childnode refid="46977" relation="include">
        </childnode>
        <childnode refid="46958" relation="include">
        </childnode>
        <childnode refid="46985" relation="include">
        </childnode>
      </node>
      <node id="47232">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particle.H</label>
        <link refid="AMReX__Particle_8H"/>
        <childnode refid="47233" relation="include">
        </childnode>
        <childnode refid="46995" relation="include">
        </childnode>
        <childnode refid="47234" relation="include">
        </childnode>
      </node>
      <node id="47199">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_nd_C.H</label>
        <link refid="AMReX__MultiFabUtil__nd__C_8H"/>
        <childnode refid="47198" relation="include">
        </childnode>
      </node>
      <node id="47029">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H</label>
        <link refid="AMReX__MLMG_8H"/>
        <childnode refid="47028" relation="include">
        </childnode>
        <childnode refid="46987" relation="include">
        </childnode>
        <childnode refid="46988" relation="include">
        </childnode>
        <childnode refid="47019" relation="include">
        </childnode>
        <childnode refid="46993" relation="include">
        </childnode>
        <childnode refid="47030" relation="include">
        </childnode>
      </node>
      <node id="47077">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.cpp</label>
        <link refid="AMReX__MLMGBndry_8cpp"/>
      </node>
      <node id="47205">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_Mask.cpp</label>
        <link refid="AMReX__Mask_8cpp"/>
      </node>
      <node id="47100">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCLinOp.H</label>
        <link refid="AMReX__MCLinOp_8H"/>
        <childnode refid="47101" relation="include">
        </childnode>
        <childnode refid="47103" relation="include">
        </childnode>
        <childnode refid="47099" relation="include">
        </childnode>
        <childnode refid="47106" relation="include">
        </childnode>
        <childnode refid="47107" relation="include">
        </childnode>
      </node>
      <node id="46978">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_Habec_2D_K.H</label>
        <link refid="AMReX__Habec__2D__K_8H"/>
      </node>
      <node id="46967">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_TagBox.cpp</label>
        <link refid="AMReX__TagBox_8cpp"/>
      </node>
      <node id="47045">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FillPatchUtil.H</label>
        <link refid="AMReX__FillPatchUtil_8H"/>
        <childnode refid="46948" relation="include">
        </childnode>
        <childnode refid="46949" relation="include">
        </childnode>
        <childnode refid="46956" relation="include">
        </childnode>
        <childnode refid="47046" relation="include">
        </childnode>
        <childnode refid="46959" relation="include">
        </childnode>
      </node>
      <node id="47088">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_CGSolver.cpp</label>
        <link refid="AMReX__CGSolver_8cpp"/>
      </node>
      <node id="47069">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryData.cpp</label>
        <link refid="AMReX__BndryData_8cpp"/>
      </node>
      <node id="47129">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.H</label>
        <link refid="AMReX__BLWritePlotFile_8H"/>
        <childnode refid="47130" relation="include">
        </childnode>
      </node>
      <node id="47143">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_RegionsProfStats.H</label>
        <link refid="AMReX__RegionsProfStats_8H"/>
        <childnode refid="47137" relation="include">
        </childnode>
        <childnode refid="47138" relation="include">
        </childnode>
        <childnode refid="47139" relation="include">
        </childnode>
        <childnode refid="47141" relation="include">
        </childnode>
      </node>
      <node id="47042">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Extrapolater.H</label>
        <link refid="AMReX__Extrapolater_8H"/>
        <childnode refid="47007" relation="include">
        </childnode>
      </node>
      <node id="47033">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLaplacian.H</label>
        <link refid="AMReX__MLNodeTensorLaplacian_8H"/>
        <childnode refid="47034" relation="include">
        </childnode>
        <childnode refid="46990" relation="include">
        </childnode>
      </node>
      <node id="47015">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H</label>
        <link refid="AMReX__MLCellLinOp_8H"/>
        <childnode refid="47016" relation="include">
        </childnode>
        <childnode refid="46984" relation="include">
        </childnode>
        <childnode refid="47026" relation="include">
        </childnode>
      </node>
      <node id="47178">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_COORDSYS_C.H</label>
        <link refid="AMReX__COORDSYS__C_8H"/>
        <childnode refid="47174" relation="include">
        </childnode>
      </node>
      <node id="47148">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleCommunication.cpp</label>
        <link refid="AMReX__ParticleCommunication_8cpp"/>
      </node>
      <node id="47198">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_C.H</label>
        <link refid="AMReX__MultiFabUtil__C_8H"/>
        <childnode refid="46973" relation="include">
        </childnode>
        <childnode refid="46977" relation="include">
        </childnode>
      </node>
      <node id="47076">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H</label>
        <link refid="AMReX__MLMGBndry_8H"/>
        <childnode refid="47014" relation="include">
        </childnode>
        <childnode refid="47077" relation="include">
        </childnode>
      </node>
      <node id="47168">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxReg_C.H</label>
        <link refid="AMReX__FluxReg__C_8H"/>
        <childnode refid="47008" relation="include">
        </childnode>
      </node>
      <node id="47147">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleCommunication.H</label>
        <link refid="AMReX__ParticleCommunication_8H"/>
        <childnode refid="47148" relation="include">
        </childnode>
        <childnode refid="46995" relation="include">
        </childnode>
      </node>
      <node id="47174">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_CoordSys.cpp</label>
        <link refid="AMReX__CoordSys_8cpp"/>
      </node>
      <node id="47012">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFluxRegister.H</label>
        <link refid="AMReX__EBFluxRegister_8H"/>
        <childnode refid="47013" relation="include">
        </childnode>
      </node>
      <node id="46956">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrParticles.H</label>
        <link refid="AMReX__AmrParticles_8H"/>
      </node>
      <node id="47163">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.H</label>
        <link refid="AMReX__MultiCutFab_8H"/>
        <childnode refid="47114" relation="include">
        </childnode>
        <childnode refid="46976" relation="include">
        </childnode>
        <childnode refid="47122" relation="include">
        </childnode>
        <childnode refid="47119" relation="include">
        </childnode>
        <childnode refid="46977" relation="include">
        </childnode>
        <childnode refid="47124" relation="include">
        </childnode>
        <childnode refid="46958" relation="include">
        </childnode>
      </node>
      <node id="47016">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.H</label>
        <link refid="AMReX__MLCellABecLap_8H"/>
        <childnode refid="47017" relation="include">
        </childnode>
        <childnode refid="47020" relation="include">
        </childnode>
        <childnode refid="47022" relation="include">
        </childnode>
        <childnode refid="47023" relation="include">
        </childnode>
        <childnode refid="47025" relation="include">
        </childnode>
      </node>
      <node id="46941">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="46942" relation="include">
        </childnode>
        <childnode refid="46970" relation="include">
        </childnode>
        <childnode refid="46971" relation="include">
        </childnode>
        <childnode refid="46972" relation="include">
        </childnode>
        <childnode refid="47003" relation="include">
        </childnode>
        <childnode refid="47004" relation="include">
        </childnode>
        <childnode refid="47164" relation="include">
        </childnode>
        <childnode refid="47236" relation="include">
        </childnode>
        <childnode refid="47204" relation="include">
        </childnode>
        <childnode refid="47238" relation="include">
        </childnode>
        <childnode refid="47239" relation="include">
        </childnode>
      </node>
      <node id="47222">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_K.H</label>
        <link refid="AMReX__MLEBTensor__K_8H"/>
        <childnode refid="46986" relation="include">
        </childnode>
      </node>
      <node id="47075">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.cpp</label>
        <link refid="AMReX__HypreABecLap_8cpp"/>
      </node>
      <node id="47155">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_VisMF.cpp</label>
        <link refid="AMReX__VisMF_8cpp"/>
      </node>
      <node id="47230">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLap_K.H</label>
        <link refid="AMReX__MLNodeLap__K_8H"/>
        <childnode refid="46988" relation="include">
        </childnode>
        <childnode refid="46989" relation="include">
        </childnode>
        <childnode refid="46990" relation="include">
        </childnode>
      </node>
      <node id="47024">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.H</label>
        <link refid="AMReX__MLEBTensorOp_8H"/>
        <childnode refid="46986" relation="include">
        </childnode>
      </node>
      <node id="47040">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AuxBoundaryData.H</label>
        <link refid="AMReX__AuxBoundaryData_8H"/>
        <childnode refid="47041" relation="include">
        </childnode>
      </node>
      <node id="47107">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H</label>
        <link refid="AMReX__MCMultiGrid_8H"/>
        <childnode refid="47103" relation="include">
        </childnode>
        <childnode refid="47105" relation="include">
        </childnode>
      </node>
      <node id="46944">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrMesh.H</label>
        <link refid="AMReX__AmrMesh_8H"/>
        <childnode refid="46945" relation="include">
        </childnode>
        <childnode refid="46961" relation="include">
        </childnode>
        <childnode refid="46962" relation="include">
        </childnode>
        <childnode refid="46964" relation="include">
        </childnode>
      </node>
      <node id="47037">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_Hypre.cpp</label>
        <link refid="AMReX__Hypre_8cpp"/>
      </node>
      <node id="46996">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_NeighborList.H</label>
        <link refid="AMReX__NeighborList_8H"/>
        <childnode refid="46994" relation="include">
        </childnode>
      </node>
      <node id="47135">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/hpgmg/BL_HPGMG.cpp</label>
        <link refid="BL__HPGMG_8cpp"/>
      </node>
      <node id="47058">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Derive.cpp</label>
        <link refid="AMReX__Derive_8cpp"/>
      </node>
      <node id="47170">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interp_2D_C.H</label>
        <link refid="AMReX__Interp__2D__C_8H"/>
      </node>
      <node id="47126">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_AmrData.H</label>
        <link refid="AMReX__AmrData_8H"/>
        <childnode refid="47055" relation="include">
        </childnode>
        <childnode refid="47127" relation="include">
        </childnode>
      </node>
      <node id="47039">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="46947" relation="include">
        </childnode>
        <childnode refid="47040" relation="include">
        </childnode>
        <childnode refid="47042" relation="include">
        </childnode>
        <childnode refid="47043" relation="include">
        </childnode>
        <childnode refid="46965" relation="include">
        </childnode>
        <childnode refid="47045" relation="include">
        </childnode>
        <childnode refid="46970" relation="include">
        </childnode>
        <childnode refid="47047" relation="include">
        </childnode>
        <childnode refid="47049" relation="include">
        </childnode>
        <childnode refid="47050" relation="include">
        </childnode>
        <childnode refid="47052" relation="include">
        </childnode>
        <childnode refid="47053" relation="include">
        </childnode>
        <childnode refid="47009" relation="include">
        </childnode>
        <childnode refid="46973" relation="include">
        </childnode>
        <childnode refid="47056" relation="include">
        </childnode>
        <childnode refid="47061" relation="include">
        </childnode>
        <childnode refid="47063" relation="include">
        </childnode>
        <childnode refid="47065" relation="include">
        </childnode>
        <childnode refid="47010" relation="include">
        </childnode>
        <childnode refid="47111" relation="include">
        </childnode>
        <childnode refid="47114" relation="include">
        </childnode>
        <childnode refid="47120" relation="include">
        </childnode>
        <childnode refid="47035" relation="include">
        </childnode>
        <childnode refid="47122" relation="include">
        </childnode>
        <childnode refid="46968" relation="include">
        </childnode>
        <childnode refid="47119" relation="include">
        </childnode>
        <childnode refid="47123" relation="include">
        </childnode>
        <childnode refid="47124" relation="include">
        </childnode>
        <childnode refid="46958" relation="include">
        </childnode>
        <childnode refid="47125" relation="include">
        </childnode>
        <childnode refid="47126" relation="include">
        </childnode>
        <childnode refid="47132" relation="include">
        </childnode>
        <childnode refid="47134" relation="include">
        </childnode>
        <childnode refid="47079" relation="include">
        </childnode>
        <childnode refid="47074" relation="include">
        </childnode>
        <childnode refid="46980" relation="include">
        </childnode>
        <childnode refid="47082" relation="include">
        </childnode>
        <childnode refid="47136" relation="include">
        </childnode>
        <childnode refid="47138" relation="include">
        </childnode>
        <childnode refid="47129" relation="include">
        </childnode>
        <childnode refid="47142" relation="include">
        </childnode>
        <childnode refid="46962" relation="include">
        </childnode>
        <childnode refid="46964" relation="include">
        </childnode>
        <childnode refid="47087" relation="include">
        </childnode>
        <childnode refid="47084" relation="include">
        </childnode>
        <childnode refid="47090" relation="include">
        </childnode>
        <childnode refid="47103" relation="include">
        </childnode>
        <childnode refid="47100" relation="include">
        </childnode>
        <childnode refid="47107" relation="include">
        </childnode>
        <childnode refid="47027" relation="include">
        </childnode>
        <childnode refid="47014" relation="include">
        </childnode>
        <childnode refid="46993" relation="include">
        </childnode>
        <childnode refid="47030" relation="include">
        </childnode>
        <childnode refid="46994" relation="include">
        </childnode>
        <childnode refid="47144" relation="include">
        </childnode>
        <childnode refid="47152" relation="include">
        </childnode>
        <childnode refid="47153" relation="include">
        </childnode>
      </node>
      <node id="47218">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_XYPlotDataList.H</label>
        <link refid="AMReX__XYPlotDataList_8H"/>
        <childnode refid="47128" relation="include">
        </childnode>
        <childnode refid="47219" relation="include">
        </childnode>
      </node>
      <node id="47131">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_ProfParserBatch.cpp</label>
        <link refid="AMReX__ProfParserBatch_8cpp"/>
      </node>
      <node id="47207">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister_2D_K.H</label>
        <link refid="AMReX__YAFluxRegister__2D__K_8H"/>
      </node>
      <node id="46975">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil.cpp</label>
        <link refid="AMReX__MultiFabUtil_8cpp"/>
      </node>
      <node id="47211">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_C.H</label>
        <link refid="AMReX__EB2__C_8H"/>
        <childnode refid="47212" relation="include">
        </childnode>
        <childnode refid="47213" relation="include">
        </childnode>
        <childnode refid="47114" relation="include">
        </childnode>
        <childnode refid="47121" relation="include">
        </childnode>
      </node>
      <node id="47196">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_2D_C.H</label>
        <link refid="AMReX__MultiFabUtil__2D__C_8H"/>
      </node>
      <node id="47068">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryData.H</label>
        <link refid="AMReX__BndryData_8H"/>
        <childnode refid="47069" relation="include">
        </childnode>
        <childnode refid="47070" relation="include">
        </childnode>
        <childnode refid="47078" relation="include">
        </childnode>
        <childnode refid="47079" relation="include">
        </childnode>
        <childnode refid="46980" relation="include">
        </childnode>
        <childnode refid="47082" relation="include">
        </childnode>
        <childnode refid="47084" relation="include">
        </childnode>
        <childnode refid="47090" relation="include">
        </childnode>
        <childnode refid="47098" relation="include">
        </childnode>
        <childnode refid="47100" relation="include">
        </childnode>
        <childnode refid="47108" relation="include">
        </childnode>
      </node>
      <node id="47203">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData_K.H</label>
        <link refid="AMReX__InterpBndryData__K_8H"/>
        <childnode refid="47071" relation="include">
        </childnode>
      </node>
      <node id="47145">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleBufferMap.H</label>
        <link refid="AMReX__ParticleBufferMap_8H"/>
        <childnode refid="47146" relation="include">
        </childnode>
        <childnode refid="47147" relation="include">
        </childnode>
        <childnode refid="46995" relation="include">
        </childnode>
        <childnode refid="47149" relation="include">
        </childnode>
      </node>
      <node id="47021">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.cpp</label>
        <link refid="AMReX__MLPoisson_8cpp"/>
      </node>
      <node id="47182">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_1D_C.H</label>
        <link refid="AMReX__FilCC__1D__C_8H"/>
      </node>
      <node id="47028">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.cpp</label>
        <link refid="AMReX__MLCGSolver_8cpp"/>
      </node>
      <node id="46964">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrMeshInSituBridge.cpp</label>
        <link refid="AMReX__AmrMeshInSituBridge_8cpp"/>
      </node>
      <node id="46993">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/Projections/AMReX_NodalProjector.cpp</label>
        <link refid="AMReX__NodalProjector_8cpp"/>
      </node>
      <node id="47055">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp</label>
        <link refid="AMReX__AmrData_8cpp"/>
      </node>
      <node id="47190">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="46947" relation="include">
        </childnode>
        <childnode refid="47004" relation="include">
        </childnode>
        <childnode refid="47005" relation="include">
        </childnode>
        <childnode refid="47191" relation="include">
        </childnode>
        <childnode refid="46973" relation="include">
        </childnode>
        <childnode refid="47068" relation="include">
        </childnode>
        <childnode refid="47114" relation="include">
        </childnode>
        <childnode refid="47120" relation="include">
        </childnode>
        <childnode refid="47036" relation="include">
        </childnode>
        <childnode refid="46980" relation="include">
        </childnode>
        <childnode refid="47082" relation="include">
        </childnode>
      </node>
      <node id="46940">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Reduce.H</label>
        <link refid="AMReX_Reduce.H"/>
        <childnode refid="46941" relation="include">
        </childnode>
        <childnode refid="47240" relation="include">
        </childnode>
      </node>
      <node id="47151">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleLocator.H</label>
        <link refid="AMReX__ParticleLocator_8H"/>
        <childnode refid="46995" relation="include">
        </childnode>
      </node>
      <node id="47091">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG4/AMReX_ABec2.H</label>
        <link refid="AMReX__ABec2_8H"/>
        <childnode refid="47092" relation="include">
        </childnode>
        <childnode refid="47093" relation="include">
        </childnode>
      </node>
      <node id="47128">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_DataServices.cpp</label>
        <link refid="AMReX__DataServices_8cpp"/>
      </node>
      <node id="47117">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFabFactory.cpp</label>
        <link refid="AMReX__EBFabFactory_8cpp"/>
      </node>
      <node id="47137">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfStats.cpp</label>
        <link refid="AMReX__BLProfStats_8cpp"/>
      </node>
      <node id="47189">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="47003" relation="include">
        </childnode>
        <childnode refid="47004" relation="include">
        </childnode>
        <childnode refid="47190" relation="include">
        </childnode>
        <childnode refid="47157" relation="include">
        </childnode>
        <childnode refid="46973" relation="include">
        </childnode>
        <childnode refid="46951" relation="include">
        </childnode>
        <childnode refid="46963" relation="include">
        </childnode>
        <childnode refid="47192" relation="include">
        </childnode>
        <childnode refid="47194" relation="include">
        </childnode>
        <childnode refid="47147" relation="include">
        </childnode>
        <childnode refid="47149" relation="include">
        </childnode>
      </node>
      <node id="46959">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCoreBase.cpp</label>
        <link refid="AMReX__EB__LSCoreBase_8cpp"/>
      </node>
      <node id="47177">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_COORDSYS_3D_C.H</label>
        <link refid="AMReX__COORDSYS__3D__C_8H"/>
        <childnode refid="47178" relation="include">
        </childnode>
      </node>
      <node id="46987">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.cpp</label>
        <link refid="AMReX__MLMG_8cpp"/>
      </node>
      <node id="47220">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLap_K.H</label>
        <link refid="AMReX__MLABecLap__K_8H"/>
        <childnode refid="46982" relation="include">
        </childnode>
        <childnode refid="46985" relation="include">
        </childnode>
        <childnode refid="46991" relation="include">
        </childnode>
      </node>
      <node id="47200">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData_1D_K.H</label>
        <link refid="AMReX__InterpBndryData__1D__K_8H"/>
      </node>
      <node id="47165">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxReg_1D_C.H</label>
        <link refid="AMReX__FluxReg__1D__C_8H"/>
      </node>
      <node id="47120">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_MultiGFab.H</label>
        <link refid="AMReX__EB2__MultiGFab_8H"/>
        <childnode refid="47114" relation="include">
        </childnode>
        <childnode refid="47121" relation="include">
        </childnode>
      </node>
      <node id="47181">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FArrayBox.cpp</label>
        <link refid="AMReX__FArrayBox_8cpp"/>
      </node>
      <node id="47013">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFluxRegister.cpp</label>
        <link refid="AMReX__EBFluxRegister_8cpp"/>
      </node>
      <node id="47149">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleUtil.H</label>
        <link refid="AMReX__ParticleUtil_8H"/>
        <childnode refid="46994" relation="include">
        </childnode>
        <childnode refid="46995" relation="include">
        </childnode>
        <childnode refid="47150" relation="include">
        </childnode>
      </node>
      <node id="47193">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_InSituUtils.cpp</label>
        <link refid="AMReX__InSituUtils_8cpp"/>
      </node>
      <node id="47036">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H</label>
        <link refid="AMReX__HypreABecLap3_8H"/>
        <childnode refid="47037" relation="include">
        </childnode>
        <childnode refid="47038" relation="include">
        </childnode>
      </node>
      <node id="47118">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp</label>
        <link refid="AMReX__EB2__Level_8cpp"/>
      </node>
      <node id="47070">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData.H</label>
        <link refid="AMReX__InterpBndryData_8H"/>
        <childnode refid="47071" relation="include">
        </childnode>
        <childnode refid="47072" relation="include">
        </childnode>
        <childnode refid="47076" relation="include">
        </childnode>
      </node>
      <node id="47054">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MFCopyDescriptor.cpp</label>
        <link refid="AMReX__MFCopyDescriptor_8cpp"/>
      </node>
      <node id="46991">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.cpp</label>
        <link refid="AMReX__MLTensorOp_8cpp"/>
      </node>
      <node id="47240">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBCellFlag.cpp</label>
        <link refid="AMReX__EBCellFlag_8cpp"/>
      </node>
      <node id="46979">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_Habec_3D_K.H</label>
        <link refid="AMReX__Habec__3D__K_8H"/>
      </node>
      <node id="47138">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfUtilities.cpp</label>
        <link refid="AMReX__BLProfUtilities_8cpp"/>
      </node>
      <node id="47052">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Geometry.cpp</label>
        <link refid="AMReX__Geometry_8cpp"/>
      </node>
      <node id="46971">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFab.cpp</label>
        <link refid="AMReX__BaseFab_8cpp"/>
      </node>
      <node id="46961">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrMesh.cpp</label>
        <link refid="AMReX__AmrMesh_8cpp"/>
      </node>
      <node id="46973">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil.H</label>
        <link refid="AMReX__MultiFabUtil_8H"/>
        <childnode refid="46947" relation="include">
        </childnode>
        <childnode refid="46974" relation="include">
        </childnode>
        <childnode refid="46975" relation="include">
        </childnode>
        <childnode refid="46976" relation="include">
        </childnode>
        <childnode refid="46959" relation="include">
        </childnode>
        <childnode refid="46977" relation="include">
        </childnode>
        <childnode refid="46978" relation="include">
        </childnode>
        <childnode refid="46979" relation="include">
        </childnode>
        <childnode refid="46980" relation="include">
        </childnode>
        <childnode refid="46982" relation="include">
        </childnode>
        <childnode refid="46983" relation="include">
        </childnode>
        <childnode refid="46984" relation="include">
        </childnode>
        <childnode refid="46985" relation="include">
        </childnode>
        <childnode refid="46986" relation="include">
        </childnode>
        <childnode refid="46987" relation="include">
        </childnode>
        <childnode refid="46988" relation="include">
        </childnode>
        <childnode refid="46989" relation="include">
        </childnode>
        <childnode refid="46990" relation="include">
        </childnode>
        <childnode refid="46991" relation="include">
        </childnode>
        <childnode refid="46992" relation="include">
        </childnode>
        <childnode refid="46993" relation="include">
        </childnode>
        <childnode refid="46994" relation="include">
        </childnode>
        <childnode refid="46995" relation="include">
        </childnode>
      </node>
      <node id="46942">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_TagBox.H</label>
        <link refid="AMReX__TagBox_8H"/>
        <childnode refid="46943" relation="include">
        </childnode>
        <childnode refid="46944" relation="include">
        </childnode>
        <childnode refid="46965" relation="include">
        </childnode>
        <childnode refid="46967" relation="include">
        </childnode>
        <childnode refid="46960" relation="include">
        </childnode>
        <childnode refid="46968" relation="include">
        </childnode>
      </node>
      <node id="47007">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Extrapolater.cpp</label>
        <link refid="AMReX__Extrapolater_8cpp"/>
      </node>
      <node id="47006">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_iMultiFab.H</label>
        <link refid="AMReX__iMultiFab_8H"/>
        <childnode refid="47007" relation="include">
        </childnode>
        <childnode refid="47008" relation="include">
        </childnode>
        <childnode refid="46970" relation="include">
        </childnode>
        <childnode refid="46974" relation="include">
        </childnode>
        <childnode refid="47009" relation="include">
        </childnode>
        <childnode refid="46973" relation="include">
        </childnode>
        <childnode refid="47010" relation="include">
        </childnode>
        <childnode refid="47035" relation="include">
        </childnode>
        <childnode refid="47036" relation="include">
        </childnode>
        <childnode refid="46980" relation="include">
        </childnode>
        <childnode refid="47029" relation="include">
        </childnode>
        <childnode refid="47031" relation="include">
        </childnode>
      </node>
      <node id="47142">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_CommProfStats.H</label>
        <link refid="AMReX__CommProfStats_8H"/>
        <childnode refid="47138" relation="include">
        </childnode>
        <childnode refid="47139" relation="include">
        </childnode>
        <childnode refid="47140" relation="include">
        </childnode>
      </node>
      <node id="46954">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrCore.cpp</label>
        <link refid="AMReX__AmrCore_8cpp"/>
      </node>
      <node id="47216">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBInterpolater.cpp</label>
        <link refid="AMReX__EBInterpolater_8cpp"/>
      </node>
      <node id="47116">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.cpp</label>
        <link refid="AMReX__EB2_8cpp"/>
      </node>
      <node id="46982">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.cpp</label>
        <link refid="AMReX__MLABecLaplacian_8cpp"/>
      </node>
      <node id="47154">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/SDC/AMReX_SDCstruct.cpp</label>
        <link refid="AMReX__SDCstruct_8cpp"/>
      </node>
      <node id="47059">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateDescriptor.cpp</label>
        <link refid="AMReX__StateDescriptor_8cpp"/>
      </node>
      <node id="47242">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFabFactory.H</label>
        <link refid="AMReX__EBFabFactory_8H"/>
        <childnode refid="47035" relation="include">
        </childnode>
        <childnode refid="46976" relation="include">
        </childnode>
        <childnode refid="47122" relation="include">
        </childnode>
        <childnode refid="47117" relation="include">
        </childnode>
        <childnode refid="46977" relation="include">
        </childnode>
        <childnode refid="46958" relation="include">
        </childnode>
        <childnode refid="47023" relation="include">
        </childnode>
      </node>
      <node id="46989">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.cpp</label>
        <link refid="AMReX__MLNodeLinOp_8cpp"/>
      </node>
      <node id="47030">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/Projections/AMReX_NodalProjector.H</label>
        <link refid="AMReX__NodalProjector_8H"/>
        <childnode refid="46993" relation="include">
        </childnode>
      </node>
      <node id="47032">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.H</label>
        <link refid="AMReX__MLNodeLaplacian_8H"/>
        <childnode refid="46981" relation="include">
        </childnode>
        <childnode refid="46988" relation="include">
        </childnode>
        <childnode refid="46993" relation="include">
        </childnode>
        <childnode refid="47030" relation="include">
        </childnode>
      </node>
      <node id="46976">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_levelset.cpp</label>
        <link refid="AMReX__EB__levelset_8cpp"/>
      </node>
      <node id="46957">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_LSCore.H</label>
        <link refid="AMReX__EB__LSCore_8H"/>
        <childnode refid="46958" relation="include">
        </childnode>
      </node>
      <node id="46997">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particle_mod_K.H</label>
        <link refid="AMReX__Particle__mod__K_8H"/>
        <childnode refid="46995" relation="include">
        </childnode>
      </node>
      <node id="47171">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interp_3D_C.H</label>
        <link refid="AMReX__Interp__3D__C_8H"/>
        <childnode refid="47172" relation="include">
        </childnode>
      </node>
      <node id="47019">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H</label>
        <link refid="AMReX__MacProjector_8H"/>
        <childnode refid="46992" relation="include">
        </childnode>
      </node>
      <node id="46977">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBMultiFabUtil.cpp</label>
        <link refid="AMReX__EBMultiFabUtil_8cpp"/>
      </node>
      <node id="47134">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/hpgmg/BL_HPGMG.H</label>
        <link refid="BL__HPGMG_8H"/>
        <childnode refid="47135" relation="include">
        </childnode>
      </node>
      <node id="47206">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister_1D_K.H</label>
        <link refid="AMReX__YAFluxRegister__1D__K_8H"/>
      </node>
      <node id="47108">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_K.H</label>
        <link refid="AMReX__MLTensor__K_8H"/>
        <childnode refid="46986" relation="include">
        </childnode>
        <childnode refid="46991" relation="include">
        </childnode>
      </node>
      <node id="47127">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_DataServices.H</label>
        <link refid="AMReX__DataServices_8H"/>
        <childnode refid="47128" relation="include">
        </childnode>
        <childnode refid="47129" relation="include">
        </childnode>
        <childnode refid="47131" relation="include">
        </childnode>
      </node>
      <node id="47195">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil_1D_C.H</label>
        <link refid="AMReX__MultiFabUtil__1D__C_8H"/>
      </node>
      <node id="46950">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_LevelBld.H</label>
        <link refid="AMReX__LevelBld_8H"/>
        <childnode refid="46943" relation="include">
        </childnode>
      </node>
      <node id="47119">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBDataCollection.cpp</label>
        <link refid="AMReX__EBDataCollection_8cpp"/>
      </node>
      <node id="47061">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileDataImpl.H</label>
        <link refid="AMReX__PlotFileDataImpl_8H"/>
        <childnode refid="47062" relation="include">
        </childnode>
        <childnode refid="47063" relation="include">
        </childnode>
      </node>
      <node id="47078">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.cpp</label>
        <link refid="AMReX__MultiMask_8cpp"/>
      </node>
      <node id="47065">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_FabSet.H</label>
        <link refid="AMReX__FabSet_8H"/>
        <childnode refid="46943" relation="include">
        </childnode>
        <childnode refid="47066" relation="include">
        </childnode>
        <childnode refid="47110" relation="include">
        </childnode>
      </node>
      <node id="46970">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX.cpp</label>
        <link refid="AMReX_8cpp"/>
      </node>
      <node id="47038">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.cpp</label>
        <link refid="AMReX__HypreABecLap3_8cpp"/>
      </node>
      <node id="47121">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_MultiGFab.cpp</label>
        <link refid="AMReX__EB2__MultiGFab_8cpp"/>
      </node>
      <node id="47011">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister.cpp</label>
        <link refid="AMReX__YAFluxRegister_8cpp"/>
      </node>
      <node id="47176">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_COORDSYS_2D_C.H</label>
        <link refid="AMReX__COORDSYS__2D__C_8H"/>
      </node>
      <node id="47124">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.cpp</label>
        <link refid="AMReX__MultiCutFab_8cpp"/>
      </node>
      <node id="47201">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData_2D_K.H</label>
        <link refid="AMReX__InterpBndryData__2D__K_8H"/>
      </node>
      <node id="47043">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.H</label>
        <link refid="AMReX__StateData_8H"/>
        <childnode refid="46943" relation="include">
        </childnode>
        <childnode refid="46947" relation="include">
        </childnode>
        <childnode refid="47044" relation="include">
        </childnode>
        <childnode refid="46951" relation="include">
        </childnode>
      </node>
      <node id="47087">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_CGSolver.H</label>
        <link refid="AMReX__CGSolver_8H"/>
        <childnode refid="47088" relation="include">
        </childnode>
        <childnode refid="47089" relation="include">
        </childnode>
        <childnode refid="47090" relation="include">
        </childnode>
      </node>
      <node id="47081">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap2.cpp</label>
        <link refid="AMReX__HypreABecLap2_8cpp"/>
      </node>
      <node id="47224">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap_K.H</label>
        <link refid="AMReX__MLEBABecLap__K_8H"/>
        <childnode refid="46985" relation="include">
        </childnode>
        <childnode refid="47225" relation="include">
        </childnode>
        <childnode refid="47226" relation="include">
        </childnode>
      </node>
      <node id="47112">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim.cpp</label>
        <link refid="AMReX__algoim_8cpp"/>
      </node>
      <node id="47051">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.cpp</label>
        <link refid="AMReX__ForkJoin_8cpp"/>
      </node>
      <node id="47018">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.H</label>
        <link refid="AMReX__MLTensorOp_8H"/>
        <childnode refid="46991" relation="include">
        </childnode>
      </node>
      <node id="47004">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="46942" relation="include">
        </childnode>
        <childnode refid="47005" relation="include">
        </childnode>
        <childnode refid="47156" relation="include">
        </childnode>
        <childnode refid="47006" relation="include">
        </childnode>
        <childnode refid="47157" relation="include">
        </childnode>
        <childnode refid="47039" relation="include">
        </childnode>
        <childnode refid="47158" relation="include">
        </childnode>
        <childnode refid="47162" relation="include">
        </childnode>
        <childnode refid="47117" relation="include">
        </childnode>
        <childnode refid="47163" relation="include">
        </childnode>
      </node>
      <node id="47164">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="47165" relation="include">
        </childnode>
        <childnode refid="47166" relation="include">
        </childnode>
        <childnode refid="47167" relation="include">
        </childnode>
        <childnode refid="47169" relation="include">
        </childnode>
        <childnode refid="47170" relation="include">
        </childnode>
        <childnode refid="47171" relation="include">
        </childnode>
        <childnode refid="47173" relation="include">
        </childnode>
        <childnode refid="47174" relation="include">
        </childnode>
        <childnode refid="47175" relation="include">
        </childnode>
        <childnode refid="47176" relation="include">
        </childnode>
        <childnode refid="47177" relation="include">
        </childnode>
        <childnode refid="47049" relation="include">
        </childnode>
        <childnode refid="47179" relation="include">
        </childnode>
        <childnode refid="47180" relation="include">
        </childnode>
        <childnode refid="47181" relation="include">
        </childnode>
        <childnode refid="47182" relation="include">
        </childnode>
        <childnode refid="47183" relation="include">
        </childnode>
        <childnode refid="47184" relation="include">
        </childnode>
        <childnode refid="47187" relation="include">
        </childnode>
        <childnode refid="47157" relation="include">
        </childnode>
        <childnode refid="47189" relation="include">
        </childnode>
        <childnode refid="47039" relation="include">
        </childnode>
        <childnode refid="47195" relation="include">
        </childnode>
        <childnode refid="47196" relation="include">
        </childnode>
        <childnode refid="47197" relation="include">
        </childnode>
        <childnode refid="47199" relation="include">
        </childnode>
        <childnode refid="47158" relation="include">
        </childnode>
        <childnode refid="47068" relation="include">
        </childnode>
        <childnode refid="47070" relation="include">
        </childnode>
        <childnode refid="47200" relation="include">
        </childnode>
        <childnode refid="47201" relation="include">
        </childnode>
        <childnode refid="47202" relation="include">
        </childnode>
        <childnode refid="47204" relation="include">
        </childnode>
        <childnode refid="47206" relation="include">
        </childnode>
        <childnode refid="47207" relation="include">
        </childnode>
        <childnode refid="47208" relation="include">
        </childnode>
        <childnode refid="47211" relation="include">
        </childnode>
        <childnode refid="47117" relation="include">
        </childnode>
        <childnode refid="47214" relation="include">
        </childnode>
        <childnode refid="47210" relation="include">
        </childnode>
        <childnode refid="47217" relation="include">
        </childnode>
        <childnode refid="47218" relation="include">
        </childnode>
        <childnode refid="47137" relation="include">
        </childnode>
        <childnode refid="47136" relation="include">
        </childnode>
        <childnode refid="47138" relation="include">
        </childnode>
        <childnode refid="47129" relation="include">
        </childnode>
        <childnode refid="47140" relation="include">
        </childnode>
        <childnode refid="47142" relation="include">
        </childnode>
        <childnode refid="47143" relation="include">
        </childnode>
        <childnode refid="47098" relation="include">
        </childnode>
        <childnode refid="47220" relation="include">
        </childnode>
        <childnode refid="47221" relation="include">
        </childnode>
        <childnode refid="47222" relation="include">
        </childnode>
        <childnode refid="47223" relation="include">
        </childnode>
        <childnode refid="47229" relation="include">
        </childnode>
        <childnode refid="47230" relation="include">
        </childnode>
        <childnode refid="47231" relation="include">
        </childnode>
        <childnode refid="47108" relation="include">
        </childnode>
        <childnode refid="47232" relation="include">
        </childnode>
        <childnode refid="46997" relation="include">
        </childnode>
        <childnode refid="46999" relation="include">
        </childnode>
      </node>
      <node id="47005">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="47006" relation="include">
        </childnode>
        <childnode refid="47009" relation="include">
        </childnode>
        <childnode refid="47039" relation="include">
        </childnode>
        <childnode refid="47155" relation="include">
        </childnode>
      </node>
      <node id="46981">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp</label>
        <link refid="AMReX__HypreNodeLap_8cpp"/>
      </node>
      <node id="46974">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_iMultiFab.cpp</label>
        <link refid="AMReX__iMultiFab_8cpp"/>
      </node>
      <node id="46972">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BaseFabUtility.H</label>
        <link refid="AMReX__BaseFabUtility_8H"/>
        <childnode refid="46973" relation="include">
        </childnode>
      </node>
      <node id="47215">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFArrayBox.cpp</label>
        <link refid="AMReX__EBFArrayBox_8cpp"/>
      </node>
      <node id="47025">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.H</label>
        <link refid="AMReX__MLPoisson_8H"/>
        <childnode refid="47021" relation="include">
        </childnode>
      </node>
      <node id="47023">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.H</label>
        <link refid="AMReX__MLEBABecLap_8H"/>
        <childnode refid="46985" relation="include">
        </childnode>
        <childnode refid="46986" relation="include">
        </childnode>
        <childnode refid="47024" relation="include">
        </childnode>
      </node>
      <node id="46969">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBAmrUtil.cpp</label>
        <link refid="AMReX__EBAmrUtil_8cpp"/>
      </node>
      <node id="47136">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfStats.H</label>
        <link refid="AMReX__BLProfStats_8H"/>
        <childnode refid="47137" relation="include">
        </childnode>
        <childnode refid="47138" relation="include">
        </childnode>
        <childnode refid="47139" relation="include">
        </childnode>
        <childnode refid="47142" relation="include">
        </childnode>
        <childnode refid="47143" relation="include">
        </childnode>
      </node>
      <node id="46952">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H</label>
        <link refid="AMReX__AmrDataAdaptor_8H"/>
        <childnode refid="46951" relation="include">
        </childnode>
      </node>
      <node id="47161">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_NFiles.cpp</label>
        <link refid="AMReX__NFiles_8cpp"/>
      </node>
      <node id="46992">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp</label>
        <link refid="AMReX__MacProjector_8cpp"/>
      </node>
      <node id="47092">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG4/AMReX_ABec2.cpp</label>
        <link refid="AMReX__ABec2_8cpp"/>
      </node>
      <node id="47105">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.cpp</label>
        <link refid="AMReX__MCMultiGrid_8cpp"/>
      </node>
      <node id="47187">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilND_C.H</label>
        <link refid="AMReX__FilND__C_8H"/>
        <childnode refid="47188" relation="include">
        </childnode>
        <childnode refid="47056" relation="include">
        </childnode>
      </node>
      <node id="47237">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_IArrayBox.cpp</label>
        <link refid="AMReX__IArrayBox_8cpp"/>
      </node>
      <node id="47217">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBMultiFabUtil_C.H</label>
        <link refid="AMReX__EBMultiFabUtil__C_8H"/>
        <childnode refid="46977" relation="include">
        </childnode>
      </node>
      <node id="47140">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_CommProfStats.cpp</label>
        <link refid="AMReX__CommProfStats_8cpp"/>
      </node>
      <node id="47194">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParIter.H</label>
        <link refid="AMReX__ParIter_8H"/>
        <childnode refid="46995" relation="include">
        </childnode>
      </node>
      <node id="47141">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_RegionsProfStats.cpp</label>
        <link refid="AMReX__RegionsProfStats_8cpp"/>
      </node>
      <node id="47071">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData.cpp</label>
        <link refid="AMReX__InterpBndryData_8cpp"/>
      </node>
      <node id="47166">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxReg_2D_C.H</label>
        <link refid="AMReX__FluxReg__2D__C_8H"/>
      </node>
      <node id="46947">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H</label>
        <link refid="AMReX__AmrLevel_8H"/>
        <childnode refid="46943" relation="include">
        </childnode>
        <childnode refid="46948" relation="include">
        </childnode>
        <childnode refid="46949" relation="include">
        </childnode>
        <childnode refid="46950" relation="include">
        </childnode>
        <childnode refid="46951" relation="include">
        </childnode>
      </node>
      <node id="47113">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H</label>
        <link refid="AMReX__algoim__K_8H"/>
        <childnode refid="47112" relation="include">
        </childnode>
      </node>
      <node id="47159">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BLBackTrace.cpp</label>
        <link refid="AMReX__BLBackTrace_8cpp"/>
      </node>
      <node id="47009">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFab.cpp</label>
        <link refid="AMReX__MultiFab_8cpp"/>
      </node>
      <node id="47101">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_DivVis.H</label>
        <link refid="AMReX__DivVis_8H"/>
        <childnode refid="47102" relation="include">
        </childnode>
      </node>
      <node id="47031">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.H</label>
        <link refid="AMReX__MLNodeLinOp_8H"/>
        <childnode refid="47032" relation="include">
        </childnode>
        <childnode refid="46989" relation="include">
        </childnode>
        <childnode refid="47033" relation="include">
        </childnode>
      </node>
      <node id="47057">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateDescriptor.H</label>
        <link refid="AMReX__StateDescriptor_8H"/>
        <childnode refid="46947" relation="include">
        </childnode>
        <childnode refid="47058" relation="include">
        </childnode>
        <childnode refid="47044" relation="include">
        </childnode>
        <childnode refid="47043" relation="include">
        </childnode>
        <childnode refid="47059" relation="include">
        </childnode>
      </node>
      <node id="47185">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_C.H</label>
        <link refid="AMReX__FilCC__C_8H"/>
        <childnode refid="47186" relation="include">
        </childnode>
        <childnode refid="47056" relation="include">
        </childnode>
      </node>
      <node id="47066">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryRegister.H</label>
        <link refid="AMReX__BndryRegister_8H"/>
        <childnode refid="47067" relation="include">
        </childnode>
        <childnode refid="47068" relation="include">
        </childnode>
        <childnode refid="47109" relation="include">
        </childnode>
        <childnode refid="47014" relation="include">
        </childnode>
      </node>
      <node id="46985">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.cpp</label>
        <link refid="AMReX__MLEBABecLap_8cpp"/>
      </node>
      <node id="47111">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim.H</label>
        <link refid="AMReX__algoim_8H"/>
        <childnode refid="47112" relation="include">
        </childnode>
        <childnode refid="47113" relation="include">
        </childnode>
      </node>
      <node id="46968">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBAmrUtil.H</label>
        <link refid="AMReX__EBAmrUtil_8H"/>
        <childnode refid="46959" relation="include">
        </childnode>
        <childnode refid="46969" relation="include">
        </childnode>
      </node>
      <node id="46962">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8H"/>
        <childnode refid="46963" relation="include">
        </childnode>
      </node>
      <node id="47053">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MFCopyDescriptor.H</label>
        <link refid="AMReX__MFCopyDescriptor_8H"/>
        <childnode refid="47043" relation="include">
        </childnode>
        <childnode refid="47054" relation="include">
        </childnode>
        <childnode refid="47055" relation="include">
        </childnode>
      </node>
      <node id="47106">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCLinOp.cpp</label>
        <link refid="AMReX__MCLinOp_8cpp"/>
      </node>
      <node id="47229">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG_K.H</label>
        <link refid="AMReX__MLMG__K_8H"/>
        <childnode refid="46987" relation="include">
        </childnode>
      </node>
      <node id="47150">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleUtil.cpp</label>
        <link refid="AMReX__ParticleUtil_8cpp"/>
      </node>
      <node id="47188">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilND_C.cpp</label>
        <link refid="AMReX__FilND__C_8cpp"/>
      </node>
      <node id="47094">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG4/AMReX_ABec4.cpp</label>
        <link refid="AMReX__ABec4_8cpp"/>
      </node>
      <node id="47034">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLap_K.H</label>
        <link refid="AMReX__MLNodeTensorLap__K_8H"/>
        <childnode refid="46990" relation="include">
        </childnode>
      </node>
      <node id="47099">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCInterpBndryData.cpp</label>
        <link refid="AMReX__MCInterpBndryData_8cpp"/>
      </node>
      <node id="46945">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrCore.H</label>
        <link refid="AMReX__AmrCore_8H"/>
        <childnode refid="46946" relation="include">
        </childnode>
        <childnode refid="46954" relation="include">
        </childnode>
        <childnode refid="46955" relation="include">
        </childnode>
        <childnode refid="46957" relation="include">
        </childnode>
        <childnode refid="46959" relation="include">
        </childnode>
        <childnode refid="46960" relation="include">
        </childnode>
      </node>
      <node id="47133">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/Conduit/AMReX_Conduit_Blueprint.cpp</label>
        <link refid="AMReX__Conduit__Blueprint_8cpp"/>
      </node>
      <node id="47049">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.cpp</label>
        <link refid="AMReX__DistributionMapping_8cpp"/>
      </node>
      <node id="47236">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_IArrayBox.H</label>
        <link refid="AMReX__IArrayBox_8H"/>
        <childnode refid="47237" relation="include">
        </childnode>
        <childnode refid="47006" relation="include">
        </childnode>
        <childnode refid="47195" relation="include">
        </childnode>
        <childnode refid="47196" relation="include">
        </childnode>
        <childnode refid="47197" relation="include">
        </childnode>
        <childnode refid="47199" relation="include">
        </childnode>
        <childnode refid="47200" relation="include">
        </childnode>
        <childnode refid="47201" relation="include">
        </childnode>
        <childnode refid="47202" relation="include">
        </childnode>
        <childnode refid="47118" relation="include">
        </childnode>
      </node>
      <node id="47130">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.cpp</label>
        <link refid="AMReX__BLWritePlotFile_8cpp"/>
      </node>
      <node id="47228">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_3D_K.H</label>
        <link refid="AMReX__MLTensor__3D__K_8H"/>
        <childnode refid="47108" relation="include">
        </childnode>
      </node>
      <node id="46998">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticles.H</label>
        <link refid="AMReX__TracerParticles_8H"/>
        <childnode refid="46956" relation="include">
        </childnode>
        <childnode refid="46999" relation="include">
        </childnode>
        <childnode refid="47000" relation="include">
        </childnode>
      </node>
      <node id="47239">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBCellFlag.H</label>
        <link refid="AMReX__EBCellFlag_8H"/>
        <childnode refid="47211" relation="include">
        </childnode>
        <childnode refid="47114" relation="include">
        </childnode>
        <childnode refid="47120" relation="include">
        </childnode>
        <childnode refid="47035" relation="include">
        </childnode>
        <childnode refid="46976" relation="include">
        </childnode>
        <childnode refid="46969" relation="include">
        </childnode>
        <childnode refid="47240" relation="include">
        </childnode>
        <childnode refid="47241" relation="include">
        </childnode>
        <childnode refid="47117" relation="include">
        </childnode>
        <childnode refid="47215" relation="include">
        </childnode>
        <childnode refid="47012" relation="include">
        </childnode>
        <childnode refid="47210" relation="include">
        </childnode>
        <childnode refid="47216" relation="include">
        </childnode>
        <childnode refid="46977" relation="include">
        </childnode>
        <childnode refid="47217" relation="include">
        </childnode>
        <childnode refid="47163" relation="include">
        </childnode>
        <childnode refid="47224" relation="include">
        </childnode>
      </node>
      <node id="47017">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.H</label>
        <link refid="AMReX__MLABecLaplacian_8H"/>
        <childnode refid="46982" relation="include">
        </childnode>
        <childnode refid="46985" relation="include">
        </childnode>
        <childnode refid="46987" relation="include">
        </childnode>
        <childnode refid="47018" relation="include">
        </childnode>
        <childnode refid="47019" relation="include">
        </childnode>
      </node>
      <node id="47160">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_NFiles.H</label>
        <link refid="AMReX__NFiles_8H"/>
        <childnode refid="47161" relation="include">
        </childnode>
        <childnode refid="47155" relation="include">
        </childnode>
        <childnode refid="46995" relation="include">
        </childnode>
      </node>
      <node id="47063">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileUtil.H</label>
        <link refid="AMReX__PlotFileUtil_8H"/>
        <childnode refid="46943" relation="include">
        </childnode>
        <childnode refid="47064" relation="include">
        </childnode>
        <childnode refid="46959" relation="include">
        </childnode>
      </node>
      <node id="47241">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBDataCollection.H</label>
        <link refid="AMReX__EBDataCollection_8H"/>
        <childnode refid="47119" relation="include">
        </childnode>
        <childnode refid="47242" relation="include">
        </childnode>
      </node>
      <node id="47046">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FillPatchUtil.cpp</label>
        <link refid="AMReX__FillPatchUtil_8cpp"/>
      </node>
      <node id="47035">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_levelset.H</label>
        <link refid="AMReX__EB__levelset_8H"/>
        <childnode refid="46976" relation="include">
        </childnode>
        <childnode refid="46957" relation="include">
        </childnode>
        <childnode refid="46960" relation="include">
        </childnode>
      </node>
      <node id="46966">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_ErrorList.cpp</label>
        <link refid="AMReX__ErrorList_8cpp"/>
      </node>
      <node id="47223">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp_K.H</label>
        <link refid="AMReX__MLLinOp__K_8H"/>
        <childnode refid="47022" relation="include">
        </childnode>
        <childnode refid="46984" relation="include">
        </childnode>
        <childnode refid="46985" relation="include">
        </childnode>
        <childnode refid="47224" relation="include">
        </childnode>
        <childnode refid="47227" relation="include">
        </childnode>
        <childnode refid="47228" relation="include">
        </childnode>
      </node>
      <node id="47073">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.cpp</label>
        <link refid="AMReX__MacBndry_8cpp"/>
      </node>
      <node id="47172">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interp_C.H</label>
        <link refid="AMReX__Interp__C_8H"/>
        <childnode refid="47173" relation="include">
        </childnode>
      </node>
      <node id="47202">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData_3D_K.H</label>
        <link refid="AMReX__InterpBndryData__3D__K_8H"/>
        <childnode refid="47203" relation="include">
        </childnode>
      </node>
      <node id="47210">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFluxRegister_C.H</label>
        <link refid="AMReX__EBFluxRegister__C_8H"/>
        <childnode refid="47013" relation="include">
        </childnode>
      </node>
      <node id="47192">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_InSituUtils.H</label>
        <link refid="AMReX__InSituUtils_8H"/>
        <childnode refid="46951" relation="include">
        </childnode>
        <childnode refid="46963" relation="include">
        </childnode>
        <childnode refid="47193" relation="include">
        </childnode>
      </node>
      <node id="47162">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.H</label>
        <link refid="AMReX__MultiMask_8H"/>
        <childnode refid="47068" relation="include">
        </childnode>
        <childnode refid="47078" relation="include">
        </childnode>
      </node>
      <node id="47152">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleMesh.H</label>
        <link refid="AMReX__ParticleMesh_8H"/>
      </node>
      <node id="47132">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/Conduit/AMReX_Conduit_Blueprint.H</label>
        <link refid="AMReX__Conduit__Blueprint_8H"/>
        <childnode refid="47133" relation="include">
        </childnode>
      </node>
      <node id="47114">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H</label>
        <link refid="AMReX__EB2__Level_8H"/>
        <childnode refid="47115" relation="include">
        </childnode>
        <childnode refid="47118" relation="include">
        </childnode>
        <childnode refid="47119" relation="include">
        </childnode>
        <childnode refid="47117" relation="include">
        </childnode>
      </node>
      <node id="47060">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.cpp</label>
        <link refid="AMReX__PhysBCFunct_8cpp"/>
      </node>
      <node id="47093">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG4/AMReX_ABec4.H</label>
        <link refid="AMReX__ABec4_8H"/>
        <childnode refid="47094" relation="include">
        </childnode>
      </node>
      <node id="46949">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AsyncFillPatch.cpp</label>
        <link refid="AMReX__AsyncFillPatch_8cpp"/>
      </node>
      <node id="47082">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H</label>
        <link refid="AMReX__PETSc_8H"/>
        <childnode refid="47083" relation="include">
        </childnode>
      </node>
      <node id="47003">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BoxArray.cpp</label>
        <link refid="AMReX__BoxArray_8cpp"/>
      </node>
      <node id="46980">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H</label>
        <link refid="AMReX__HypreNodeLap_8H"/>
        <childnode refid="46981" relation="include">
        </childnode>
      </node>
      <node id="47204">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_Mask.H</label>
        <link refid="AMReX__Mask_8H"/>
        <childnode refid="47205" relation="include">
        </childnode>
        <childnode refid="47162" relation="include">
        </childnode>
        <childnode refid="47098" relation="include">
        </childnode>
      </node>
      <node id="47125">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_WriteEBSurface.H</label>
        <link refid="AMReX__WriteEBSurface_8H"/>
        <childnode refid="46958" relation="include">
        </childnode>
      </node>
      <node id="46955">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrParGDB.H</label>
        <link refid="AMReX__AmrParGDB_8H"/>
        <childnode refid="46956" relation="include">
        </childnode>
      </node>
      <node id="47098">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCInterpBndryData.H</label>
        <link refid="AMReX__MCInterpBndryData_8H"/>
        <childnode refid="47099" relation="include">
        </childnode>
      </node>
      <node id="46983">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.cpp</label>
        <link refid="AMReX__MLALaplacian_8cpp"/>
      </node>
      <node id="47002">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleIO.H</label>
        <link refid="AMReX__ParticleIO_8H"/>
        <childnode refid="46995" relation="include">
        </childnode>
      </node>
      <node id="46995">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particles.H</label>
        <link refid="AMReX__Particles_8H"/>
        <childnode refid="46956" relation="include">
        </childnode>
        <childnode refid="46996" relation="include">
        </childnode>
        <childnode refid="46994" relation="include">
        </childnode>
        <childnode refid="46997" relation="include">
        </childnode>
        <childnode refid="46998" relation="include">
        </childnode>
        <childnode refid="47001" relation="include">
        </childnode>
      </node>
      <node id="46948">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.cpp</label>
        <link refid="AMReX__AmrLevel_8cpp"/>
      </node>
      <node id="47191">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuLaunch.cpp</label>
        <link refid="AMReX__GpuLaunch_8cpp"/>
      </node>
      <node id="47235">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTransformation.H</label>
        <link refid="AMReX__ParticleTransformation_8H"/>
        <childnode refid="46995" relation="include">
        </childnode>
      </node>
      <node id="47157">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MFIter.cpp</label>
        <link refid="AMReX__MFIter_8cpp"/>
      </node>
      <node id="47231">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson_K.H</label>
        <link refid="AMReX__MLPoisson__K_8H"/>
        <childnode refid="47021" relation="include">
        </childnode>
      </node>
      <node id="47184">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FilCC_3D_C.H</label>
        <link refid="AMReX__FilCC__3D__C_8H"/>
        <childnode refid="47185" relation="include">
        </childnode>
      </node>
      <node id="47001">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_WriteBinaryParticleData.H</label>
        <link refid="AMReX__WriteBinaryParticleData_8H"/>
        <childnode refid="47002" relation="include">
        </childnode>
      </node>
      <node id="47221">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLALap_K.H</label>
        <link refid="AMReX__MLALap__K_8H"/>
        <childnode refid="46983" relation="include">
        </childnode>
      </node>
      <node id="47123">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBMultiFabUtil.H</label>
        <link refid="AMReX__EBMultiFabUtil_8H"/>
        <childnode refid="46977" relation="include">
        </childnode>
        <childnode refid="46985" relation="include">
        </childnode>
        <childnode refid="46986" relation="include">
        </childnode>
      </node>
      <node id="47226">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_3D_K.H</label>
        <link refid="AMReX__MLEBTensor__3D__K_8H"/>
        <childnode refid="47222" relation="include">
        </childnode>
      </node>
      <node id="47238">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_GeometryShop.H</label>
        <link refid="AMReX__EB2__GeometryShop_8H"/>
        <childnode refid="47116" relation="include">
        </childnode>
        <childnode refid="47115" relation="include">
        </childnode>
        <childnode refid="47035" relation="include">
        </childnode>
        <childnode refid="46958" relation="include">
        </childnode>
      </node>
      <node id="47156">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FACopyDescriptor.H</label>
        <link refid="AMReX__FACopyDescriptor_8H"/>
        <childnode refid="47053" relation="include">
        </childnode>
      </node>
      <node id="47056">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H</label>
        <link refid="AMReX__PhysBCFunct_8H"/>
        <childnode refid="47043" relation="include">
        </childnode>
        <childnode refid="47057" relation="include">
        </childnode>
        <childnode refid="47045" relation="include">
        </childnode>
        <childnode refid="47048" relation="include">
        </childnode>
        <childnode refid="47060" relation="include">
        </childnode>
        <childnode refid="46959" relation="include">
        </childnode>
      </node>
      <node id="47084">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LinOp.H</label>
        <link refid="AMReX__LinOp_8H"/>
        <childnode refid="47085" relation="include">
        </childnode>
        <childnode refid="47087" relation="include">
        </childnode>
        <childnode refid="47095" relation="include">
        </childnode>
        <childnode refid="47097" relation="include">
        </childnode>
        <childnode refid="47090" relation="include">
        </childnode>
        <childnode refid="47091" relation="include">
        </childnode>
        <childnode refid="47093" relation="include">
        </childnode>
      </node>
      <node id="47048">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCUtil.cpp</label>
        <link refid="AMReX__BCUtil_8cpp"/>
      </node>
      <node id="47000">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticles.cpp</label>
        <link refid="AMReX__TracerParticles_8cpp"/>
      </node>
      <node id="47175">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_COORDSYS_1D_C.H</label>
        <link refid="AMReX__COORDSYS__1D__C_8H"/>
      </node>
      <node id="47167">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxReg_3D_C.H</label>
        <link refid="AMReX__FluxReg__3D__C_8H"/>
        <childnode refid="47168" relation="include">
        </childnode>
      </node>
      <node id="46943">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Amr.cpp</label>
        <link refid="AMReX__Amr_8cpp"/>
      </node>
      <node id="47085">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_ABecLaplacian.H</label>
        <link refid="AMReX__ABecLaplacian_8H"/>
        <childnode refid="47086" relation="include">
        </childnode>
        <childnode refid="47087" relation="include">
        </childnode>
        <childnode refid="47091" relation="include">
        </childnode>
      </node>
      <node id="47139">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfUtilities.H</label>
        <link refid="AMReX__BLProfUtilities_8H"/>
        <childnode refid="47137" relation="include">
        </childnode>
        <childnode refid="47138" relation="include">
        </childnode>
        <childnode refid="47140" relation="include">
        </childnode>
        <childnode refid="47141" relation="include">
        </childnode>
      </node>
      <node id="47219">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_XYPlotDataList.cpp</label>
        <link refid="AMReX__XYPlotDataList_8cpp"/>
      </node>
      <node id="46946">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Amr.H</label>
        <link refid="AMReX__Amr_8H"/>
        <childnode refid="46943" relation="include">
        </childnode>
        <childnode refid="46947" relation="include">
        </childnode>
        <childnode refid="46950" relation="include">
        </childnode>
        <childnode refid="46952" relation="include">
        </childnode>
        <childnode refid="46953" relation="include">
        </childnode>
      </node>
      <node id="47234">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H</label>
        <link refid="AMReX__ParticleTile_8H"/>
        <childnode refid="46995" relation="include">
        </childnode>
        <childnode refid="47235" relation="include">
        </childnode>
        <childnode refid="47149" relation="include">
        </childnode>
      </node>
      <node id="47110">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_FabSet.cpp</label>
        <link refid="AMReX__FabSet_8cpp"/>
      </node>
      <node id="47050">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H</label>
        <link refid="AMReX__ForkJoin_8H"/>
        <childnode refid="47051" relation="include">
        </childnode>
      </node>
      <node id="46990">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLaplacian.cpp</label>
        <link refid="AMReX__MLNodeTensorLaplacian_8cpp"/>
      </node>
      <node id="47115">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H</label>
        <link refid="AMReX__EB2_8H"/>
        <childnode refid="47112" relation="include">
        </childnode>
        <childnode refid="47116" relation="include">
        </childnode>
        <childnode refid="47035" relation="include">
        </childnode>
        <childnode refid="46976" relation="include">
        </childnode>
        <childnode refid="47117" relation="include">
        </childnode>
        <childnode refid="46958" relation="include">
        </childnode>
      </node>
      <node id="47173">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Interpolater.cpp</label>
        <link refid="AMReX__Interpolater_8cpp"/>
      </node>
      <node id="47180">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabConv.cpp</label>
        <link refid="AMReX__FabConv_8cpp"/>
      </node>
      <node id="47144">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParGDB.H</label>
        <link refid="AMReX__ParGDB_8H"/>
        <childnode refid="46955" relation="include">
        </childnode>
        <childnode refid="47145" relation="include">
        </childnode>
        <childnode refid="47151" relation="include">
        </childnode>
        <childnode refid="46995" relation="include">
        </childnode>
        <childnode refid="47149" relation="include">
        </childnode>
      </node>
      <node id="47041">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AuxBoundaryData.cpp</label>
        <link refid="AMReX__AuxBoundaryData_8cpp"/>
      </node>
      <node id="47089">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_MultiGrid.cpp</label>
        <link refid="AMReX__MultiGrid_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structamrex_1_1ReduceOpSum" prot="public">amrex::ReduceOpSum</innerclass>
    <innerclass refid="structamrex_1_1ReduceOpMin" prot="public">amrex::ReduceOpMin</innerclass>
    <innerclass refid="structamrex_1_1ReduceOpMax" prot="public">amrex::ReduceOpMax</innerclass>
    <innerclass refid="structamrex_1_1ReduceOpLogicalAnd" prot="public">amrex::ReduceOpLogicalAnd</innerclass>
    <innerclass refid="structamrex_1_1ReduceOpLogicalOr" prot="public">amrex::ReduceOpLogicalOr</innerclass>
    <innerclass refid="classamrex_1_1ReduceOps" prot="public">amrex::ReduceOps</innerclass>
    <innerclass refid="classamrex_1_1ReduceData" prot="public">amrex::ReduceData</innerclass>
    <innerclass refid="classamrex_1_1ReduceOps" prot="public">amrex::ReduceOps</innerclass>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1Reduce">amrex::Reduce</innernamespace>
    <innernamespace refid="namespaceamrex_1_1Reduce_1_1detail">amrex::Reduce::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_REDUCE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_REDUCE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Gpu_8H" kindref="compound">AMReX_Gpu.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Arena_8H" kindref="compound">AMReX_Arena.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="namespaceamrex_1_1Reduce_1_1detail" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1detail_1a2d9a622392a0eee879ac8180cb2371e6" kindref="member">Reduce</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P&gt;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">for_each_parallel</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P().parallel_update(amrex::get&lt;I&gt;(d),<sp/>amrex::get&lt;I&gt;(s),<sp/>h);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ps&gt;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">for_each_parallel</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P().parallel_update(amrex::get&lt;I&gt;(d),<sp/>amrex::get&lt;I&gt;(s),<sp/>h);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">for_each_parallel</ref>&lt;I+1,T,P1,Ps...&gt;(d,<sp/>s,<sp/>h);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P&gt;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref></highlight></codeline>
<codeline lineno="31" refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">for_each_parallel</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P().parallel_update(amrex::get&lt;I&gt;(d),<sp/>amrex::get&lt;I&gt;(s));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ps&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref></highlight></codeline>
<codeline lineno="38" refid="namespaceamrex_1_1Reduce_1_1detail_1ad1214261e6fd754f2e41e878533756a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">for_each_parallel</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P().parallel_update(amrex::get&lt;I&gt;(d),<sp/>amrex::get&lt;I&gt;(s));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">for_each_parallel</ref>&lt;I+1,T,P1,Ps...&gt;(d,<sp/>s);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P&gt;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref></highlight></codeline>
<codeline lineno="46" refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">for_each_local</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P().local_update(amrex::get&lt;I&gt;(d),<sp/>amrex::get&lt;I&gt;(s));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ps&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref></highlight></codeline>
<codeline lineno="53" refid="namespaceamrex_1_1Reduce_1_1detail_1af7250b0d542b5bed0a2c068b4b43085c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">for_each_local</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P().local_update(amrex::get&lt;I&gt;(d),<sp/>amrex::get&lt;I&gt;(s));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">for_each_local</ref>&lt;I+1,T,P1,Ps...&gt;(d,<sp/>s);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P&gt;</highlight></codeline>
<codeline lineno="60" refid="namespaceamrex_1_1Reduce_1_1detail_1aa49407a52dbde68233cb025e571b8e0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1aa49407a52dbde68233cb025e571b8e0a" kindref="member">for_each_init</ref><sp/>(T&amp;<sp/>t)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P().init(amrex::get&lt;I&gt;(t));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ps&gt;</highlight></codeline>
<codeline lineno="66" refid="namespaceamrex_1_1Reduce_1_1detail_1a87cd8d506ca082d704c64124129d5eab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1aa49407a52dbde68233cb025e571b8e0a" kindref="member">for_each_init</ref><sp/>(T&amp;<sp/>t)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P().init(amrex::get&lt;I&gt;(t));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1aa49407a52dbde68233cb025e571b8e0a" kindref="member">for_each_init</ref>&lt;I+1,T,P1,Ps...&gt;(t);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="structamrex_1_1ReduceOpSum" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ReduceOpSum" kindref="compound">ReduceOpSum</ref></highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parallel_update<sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1ab50ab224d1a043d14eccc5019548c562" kindref="member">Gpu::deviceReduceSum</ref>(&amp;d,s,h);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="84" refid="structamrex_1_1ReduceOpSum_1acc3c648eb08f68c0d72d0bcca9534927" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpSum_1acc3c648eb08f68c0d72d0bcca9534927" kindref="member">parallel_update</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/><ref refid="namespaceamrex_1_1Gpu_1ab50ab224d1a043d14eccc5019548c562" kindref="member">Gpu::deviceReduceSum</ref>(&amp;d,s);<sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="89" refid="structamrex_1_1ReduceOpSum_1a8a57daa2e7672e9a16e824dd2ea6048f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpSum_1a8a57daa2e7672e9a16e824dd2ea6048f" kindref="member">local_update</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/>d<sp/>+=<sp/>s;<sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="92" refid="structamrex_1_1ReduceOpSum_1a4258529c10bd8433cd569a5b45500b92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpSum_1a4258529c10bd8433cd569a5b45500b92" kindref="member">init</ref><sp/>(T&amp;<sp/>t)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/>t<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="structamrex_1_1ReduceOpMin" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ReduceOpMin" kindref="compound">ReduceOpMin</ref></highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parallel_update<sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a43c0464b84a84c9342e01a13f076e1c2" kindref="member">Gpu::deviceReduceMin</ref>(&amp;d,s,h);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="106" refid="structamrex_1_1ReduceOpMin_1a2c9649866c48c03653b4066d1e58a613" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpMin_1a2c9649866c48c03653b4066d1e58a613" kindref="member">parallel_update</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/><ref refid="namespaceamrex_1_1Gpu_1a43c0464b84a84c9342e01a13f076e1c2" kindref="member">Gpu::deviceReduceMin</ref>(&amp;d,s);<sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="111" refid="structamrex_1_1ReduceOpMin_1abffc8f7180874e6c85c54cc670b4e12c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpMin_1abffc8f7180874e6c85c54cc670b4e12c" kindref="member">local_update</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/>d<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(d,s);<sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="114" refid="structamrex_1_1ReduceOpMin_1adc49fc2eed8ae4e2dd244f22e66ef073" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpMin_1adc49fc2eed8ae4e2dd244f22e66ef073" kindref="member">init</ref><sp/>(T&amp;<sp/>t)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/>t<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;T&gt;::max</ref>();<sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="structamrex_1_1ReduceOpMax" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ReduceOpMax" kindref="compound">ReduceOpMax</ref></highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parallel_update<sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a434d47b5660b0c082d361aa5994ee218" kindref="member">Gpu::deviceReduceMax</ref>(&amp;d,s,h);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="128" refid="structamrex_1_1ReduceOpMax_1a4d882050c4554f4f6857b3443a8fd2fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpMax_1a4d882050c4554f4f6857b3443a8fd2fa" kindref="member">parallel_update</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/><ref refid="namespaceamrex_1_1Gpu_1a434d47b5660b0c082d361aa5994ee218" kindref="member">Gpu::deviceReduceMax</ref>(&amp;d,s);<sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="133" refid="structamrex_1_1ReduceOpMax_1a30f832fb9453829363682efa1b829c68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpMax_1a30f832fb9453829363682efa1b829c68" kindref="member">local_update</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/>d<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(d,s);<sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="136" refid="structamrex_1_1ReduceOpMax_1a1cd819d660aa4d2c651f8151e38c3e78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpMax_1a1cd819d660aa4d2c651f8151e38c3e78" kindref="member">init</ref><sp/>(T&amp;<sp/>t)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/>t<sp/>=<sp/>std::numeric_limits&lt;T&gt;::lowest();<sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal">};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="structamrex_1_1ReduceOpLogicalAnd" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ReduceOpLogicalAnd" kindref="compound">ReduceOpLogicalAnd</ref></highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parallel_update<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a3ce0db272209050a5bf6c593c2679607" kindref="member">Gpu::deviceReduceLogicalAnd</ref>(&amp;d,s,h);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="148" refid="structamrex_1_1ReduceOpLogicalAnd_1a644182e552bf0d1f5cca4d18a7e6ebaf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpLogicalAnd_1a644182e552bf0d1f5cca4d18a7e6ebaf" kindref="member">parallel_update</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/><ref refid="namespaceamrex_1_1Gpu_1a3ce0db272209050a5bf6c593c2679607" kindref="member">Gpu::deviceReduceLogicalAnd</ref>(&amp;d,s);<sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="152" refid="structamrex_1_1ReduceOpLogicalAnd_1ab5ad43412cb40defe985c30b5a8c5f66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpLogicalAnd_1ab5ad43412cb40defe985c30b5a8c5f66" kindref="member">local_update</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/>d<sp/>=<sp/>d<sp/>&amp;&amp;<sp/>s;<sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="structamrex_1_1ReduceOpLogicalAnd_1ac51ef2fddec1f919efb83e5a465ceb11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpLogicalAnd_1ac51ef2fddec1f919efb83e5a465ceb11" kindref="member">init</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>t)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/>t<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal">};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="structamrex_1_1ReduceOpLogicalOr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ReduceOpLogicalOr" kindref="compound">ReduceOpLogicalOr</ref></highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parallel_update<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a6c3c7080ba11377ca7a9df8ef573e133" kindref="member">Gpu::deviceReduceLogicalOr</ref>(&amp;d,s,h);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="166" refid="structamrex_1_1ReduceOpLogicalOr_1ad19c4ce20b731bda3b28de6a16a02f0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpLogicalOr_1ad19c4ce20b731bda3b28de6a16a02f0f" kindref="member">parallel_update</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/><ref refid="namespaceamrex_1_1Gpu_1a6c3c7080ba11377ca7a9df8ef573e133" kindref="member">Gpu::deviceReduceLogicalOr</ref>(&amp;d,s);<sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="170" refid="structamrex_1_1ReduceOpLogicalOr_1a64f0f965254ae420bbb827d8d60f1289" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpLogicalOr_1a64f0f965254ae420bbb827d8d60f1289" kindref="member">local_update</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/>d<sp/>=<sp/>d<sp/>||<sp/>s;<sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="structamrex_1_1ReduceOpLogicalOr_1a24e7036b20e02de2a2439d4f3e3fbb5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpLogicalOr_1a24e7036b20e02de2a2439d4f3e3fbb5f" kindref="member">init</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>t)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/>t<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="classamrex_1_1ReduceOps" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ps&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1detail_1a2d9a622392a0eee879ac8180cb2371e6" kindref="member">Reduce</ref><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xxxxx<sp/>DPCPP<sp/>todo:<sp/>the<sp/>compiler<sp/>seems<sp/>to<sp/>have<sp/>a<sp/>bug.<sp/><sp/>It<sp/>cannot<sp/>capture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GpuTuple&lt;T&gt;<sp/>correctly<sp/>even<sp/>if<sp/>it&apos;s<sp/>standard<sp/>layout.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>init_tuple_on_device<sp/>(T*<sp/>p,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3bddb069b268576e6fa712be45c218ae" kindref="member">amrex::single_task</ref>(Gpu::nullStream(),<sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>()<sp/>noexcept</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(p)<sp/>T();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(p+1)<sp/>T();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array&lt;T,2&gt;</ref><sp/>tmp{v,v};</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ae243b10c65516ed7dfeaf9aed7e75aa3" kindref="member">Gpu::htod_memcpy</ref>(p,<sp/>tmp.data(),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)*2);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>init_tuple_on_device<sp/>(T*<sp/>p,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3bddb069b268576e6fa712be45c218ae" kindref="member">amrex::single_task</ref>(Gpu::nullStream(),<sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>()<sp/>noexcept</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(p)<sp/>T(v);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(p+1)<sp/>T(v);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData</ref></highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Type<sp/>=<sp/><ref refid="classamrex_1_1GpuTuple" kindref="compound">GpuTuple</ref>&lt;Ts...&gt;;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ps&gt;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData</ref><sp/>(<ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;Ps...&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_host_tuple(),</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_device_tuple((Type*)(<ref refid="namespaceamrex_1a97a60825e6e7886b3502c2f4ed1eb417" kindref="member">The_Device_Arena</ref>()-&gt;alloc(2*sizeof(m_host_tuple))))</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(<ref refid="AMReX__TypeTraits_8H_1adc50ea9983407ec975c6c594c92bae5d" kindref="member">AMREX_IS_TRIVIALLY_COPYABLE</ref>(Type),</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ReduceData::Type<sp/>must<sp/>be<sp/>trivially<sp/>copyable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(std::is_trivially_destructible&lt;Type&gt;::value,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ReduceData::Type<sp/>must<sp/>be<sp/>trivially<sp/>destructible&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1aa49407a52dbde68233cb025e571b8e0a" kindref="member">Reduce::detail::for_each_init</ref>&lt;0,<sp/>Type,<sp/>Ps...&gt;(m_host_tuple);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reduce::detail::init_tuple_on_device(m_device_tuple,<sp/>m_host_tuple);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a0040af3e7783b853140a6e13c755fc25" kindref="member">Gpu::synchronize</ref>();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>~ReduceData<sp/>()<sp/>{<sp/><ref refid="namespaceamrex_1a97a60825e6e7886b3502c2f4ed1eb417" kindref="member">The_Device_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a0c7e0730574c98febb6ddca2712cb515" kindref="member">free</ref>(m_device_tuple);<sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>ReduceData<sp/>(<ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;Ts...&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>ReduceData<sp/>(<ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;Ts...&gt;</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=<sp/>(<ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;Ts...&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=<sp/>(<ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;Ts...&gt;</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>Type<sp/>value<sp/>()</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a998c5815369d23cd73eea1b09f43a966" kindref="member">Gpu::dtoh_memcpy</ref>(&amp;m_host_tuple,<sp/>m_device_tuple,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_host_tuple));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_host_tuple;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>Type*<sp/>devicePtr<sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_device_tuple;<sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>Type&amp;<sp/>hostRef<sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_host_tuple;<sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>Type<sp/>m_host_tuple;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>Type*<sp/>m_device_tuple;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">};</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1detail_1a2d9a622392a0eee879ac8180cb2371e6" kindref="member">Reduce</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>call_f<sp/>(F<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/><ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref>)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>-&gt;<sp/>decltype(f(0,0,0))</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(i,j,k);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>call_f<sp/>(F<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/><ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref><sp/>t)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>-&gt;<sp/>decltype(f(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref>()))</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref>(<ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(i,j,k)),</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(i,j,k)),</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t));</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ps&gt;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps</ref></highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eval<sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>D<sp/>&amp;<sp/>reduce_data,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D::Type;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/>=<sp/>reduce_data.devicePtr();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncells<sp/>=<sp/>box.<ref refid="classamrex_1_1Box_1a74b39c8b70837cdb61ade61a834997ff" kindref="member">numPts</ref>();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(box);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref><sp/>ixtype<sp/>=<sp/>box.<ref refid="classamrex_1_1Box_1a23dbfc6bba6b19b28a0d893bb760494c" kindref="member">ixType</ref>();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ec<sp/>=<sp/>Gpu::ExecutionConfig(ncells);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec.numBlocks.x<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(ec.numBlocks.x,<sp/>static_cast&lt;unsigned<sp/>int&gt;(Gpu::Device::maxBlocksPerLaunch()));</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>device<sp/>reduce<sp/>needs<sp/>local(i.e.,<sp/>shared)<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>std::size_t<sp/>shared_mem_bytes<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>long)*Gpu::Device::warp_size;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ada73ee47d1c3a0d63725ce77e1334257" kindref="member">amrex::launch</ref>(ec.numBlocks.x,<sp/>ec.numThreads.x,<sp/>shared_mem_bytes,<sp/>Gpu::gpuStream(),</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>gh)<sp/>noexcept</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>r<sp/>=<sp/>*(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>+1);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icell<sp/>=<sp/>gh.item.get_global_id(0),<sp/>stride<sp/>=<sp/>gh.item.get_global_range(0);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icell<sp/>&lt;<sp/>ncells;<sp/>icell<sp/>+=<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/><sp/>icell<sp/>/<sp/><sp/><sp/>(len.x*len.y);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>/<sp/><sp/><sp/>len.x;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>-<sp/>j*len.x;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>lo.x;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>lo.y;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>lo.z;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pr<sp/>=<sp/>Reduce::detail::call_f(f,i,j,k,ixtype);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">Reduce::detail::for_each_local</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r,<sp/>pr);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">Reduce::detail::for_each_parallel</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(*<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>,r,<sp/>gh);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ada73ee47d1c3a0d63725ce77e1334257" kindref="member">amrex::launch</ref>(ec.numBlocks.x,<sp/>ec.numThreads.x,<sp/>0,<sp/>Gpu::gpuStream(),</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>r<sp/>=<sp/>*(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>+1);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icell<sp/>=<sp/>blockDim.x*blockIdx.x+threadIdx.x,<sp/>stride<sp/>=<sp/>blockDim.x*gridDim.x;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icell<sp/>&lt;<sp/>ncells;<sp/>icell<sp/>+=<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/><sp/>icell<sp/>/<sp/><sp/><sp/>(len.x*len.y);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>/<sp/><sp/><sp/>len.x;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>-<sp/>j*len.x;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>lo.x;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>lo.y;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>lo.z;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pr<sp/>=<sp/>Reduce::detail::call_f(f,i,j,k,ixtype);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">Reduce::detail::for_each_local</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r,<sp/>pr);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">Reduce::detail::for_each_parallel</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(*<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>,r);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eval<sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>N<sp/>ncomp,<sp/>D<sp/>&amp;<sp/>reduce_data,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D::Type;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/>=<sp/>reduce_data.devicePtr();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncells<sp/>=<sp/>box.<ref refid="classamrex_1_1Box_1a74b39c8b70837cdb61ade61a834997ff" kindref="member">numPts</ref>();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(box);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ec<sp/>=<sp/>Gpu::ExecutionConfig(ncells);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec.numBlocks.x<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(ec.numBlocks.x,<sp/>static_cast&lt;unsigned<sp/>int&gt;(Gpu::Device::maxBlocksPerLaunch()));</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>device<sp/>reduce<sp/>needs<sp/>local(i.e.,<sp/>shared)<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>std::size_t<sp/>shared_mem_bytes<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>long)*Gpu::Device::warp_size;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ada73ee47d1c3a0d63725ce77e1334257" kindref="member">amrex::launch</ref>(ec.numBlocks.x,<sp/>ec.numThreads.x,<sp/>shared_mem_bytes,<sp/>Gpu::gpuStream(),</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>gh)<sp/>noexcept</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>r<sp/>=<sp/>*(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>+1);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icell<sp/>=<sp/>gh.item.get_global_id(0),<sp/>stride<sp/>=<sp/>gh.item.get_global_range(0);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icell<sp/>&lt;<sp/>ncells;<sp/>icell<sp/>+=<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/><sp/>icell<sp/>/<sp/><sp/><sp/>(len.x*len.y);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>/<sp/><sp/><sp/>len.x;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>-<sp/>j*len.x;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>lo.x;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>lo.y;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>lo.z;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(N<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pr<sp/>=<sp/>f(i,j,k,n);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">Reduce::detail::for_each_local</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r,<sp/>pr);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">Reduce::detail::for_each_parallel</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(*<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>,r,<sp/>gh);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ada73ee47d1c3a0d63725ce77e1334257" kindref="member">amrex::launch</ref>(ec.numBlocks.x,<sp/>ec.numThreads.x,<sp/>0,<sp/>Gpu::gpuStream(),</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>r<sp/>=<sp/>*(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>+1);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icell<sp/>=<sp/>blockDim.x*blockIdx.x+threadIdx.x,<sp/>stride<sp/>=<sp/>blockDim.x*gridDim.x;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icell<sp/>&lt;<sp/>ncells;<sp/>icell<sp/>+=<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/><sp/>icell<sp/>/<sp/><sp/><sp/>(len.x*len.y);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>/<sp/><sp/><sp/>len.x;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>-<sp/>j*len.x;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>lo.x;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>lo.y;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>lo.z;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(N<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pr<sp/>=<sp/>f(i,j,k,n);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">Reduce::detail::for_each_local</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r,<sp/>pr);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">Reduce::detail::for_each_parallel</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(*<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>,r);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eval<sp/>(N<sp/>n,<sp/>D<sp/>&amp;<sp/>reduce_data,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D::Type;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/>=<sp/>reduce_data.devicePtr();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ec<sp/>=<sp/>Gpu::ExecutionConfig(n);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec.numBlocks.x<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(ec.numBlocks.x,<sp/>static_cast&lt;unsigned<sp/>int&gt;(Gpu::Device::maxBlocksPerLaunch()));</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>device<sp/>reduce<sp/>needs<sp/>local(i.e.,<sp/>shared)<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>std::size_t<sp/>shared_mem_bytes<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>long)*Gpu::Device::warp_size;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ada73ee47d1c3a0d63725ce77e1334257" kindref="member">amrex::launch</ref>(ec.numBlocks.x,<sp/>ec.numThreads.x,<sp/>shared_mem_bytes,<sp/>Gpu::gpuStream(),</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>gh)<sp/>noexcept</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>r<sp/>=<sp/>*(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>+1);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(N<sp/>i<sp/>=<sp/>gh.item.get_global_id(0),<sp/>stride<sp/>=<sp/>gh.item.get_global_range(0);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>n;<sp/>i<sp/>+=<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pr<sp/>=<sp/>f(i);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">Reduce::detail::for_each_local</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r,pr);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">Reduce::detail::for_each_parallel</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(*<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>,r,<sp/>gh);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ada73ee47d1c3a0d63725ce77e1334257" kindref="member">amrex::launch</ref>(ec.numBlocks.x,<sp/>ec.numThreads.x,<sp/>0,<sp/>Gpu::gpuStream(),</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>*(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>+1);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(N<sp/>i<sp/>=<sp/>blockDim.x*blockIdx.x+threadIdx.x,<sp/>stride<sp/>=<sp/>blockDim.x*gridDim.x;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>n;<sp/>i<sp/>+=<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pr<sp/>=<sp/>f(i);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">Reduce::detail::for_each_local</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r,pr);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">Reduce::detail::for_each_parallel</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(*<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>,r);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal">};</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1detail_1a2d9a622392a0eee879ac8180cb2371e6" kindref="member">Reduce</ref><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>U,<sp/>typename<sp/>BOP,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="424"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1a3a1bf2418459469b609d213560f4a8da" kindref="member">Sum</ref><sp/>(N<sp/>n,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val,<sp/>BOP<sp/>bop)</highlight></codeline>
<codeline lineno="425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Gpu_1_1LaunchSafeGuard" kindref="compound">Gpu::LaunchSafeGuard</ref><sp/>lsg(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Gpu_1_1DeviceScalar" kindref="compound">Gpu::DeviceScalar&lt;T&gt;</ref><sp/>ds(init_val);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/>=<sp/>ds.dataPtr();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa97bf4be56f176e3af5b90f5b5955a04" kindref="member">amrex::VecReduce</ref>(n,<sp/>init_val,</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(N<sp/>i,<sp/>T*<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>bop(*r,<sp/>v[i]);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>r,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1ab50ab224d1a043d14eccc5019548c562" kindref="member">Gpu::deviceReduceSum</ref>(dp,<sp/>r,<sp/>h);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1ab50ab224d1a043d14eccc5019548c562" kindref="member">Gpu::deviceReduceSum</ref>(dp,<sp/>r);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ds.dataValue();</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="449"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1a3a1bf2418459469b609d213560f4a8da" kindref="member">Sum</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1a3a1bf2418459469b609d213560f4a8da" kindref="member">Reduce::Sum</ref>(n,<sp/>v,<sp/>init_val,<sp/><ref refid="structamrex_1_1Plus" kindref="compound">amrex::Plus&lt;T&gt;</ref>());</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>U,<sp/>typename<sp/>BOP,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="455"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1aa9002a6dc16f2e87ac519151c6d8a7df" kindref="member">Min</ref><sp/>(N<sp/>n,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val,<sp/>BOP<sp/>bop)</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Gpu_1_1LaunchSafeGuard" kindref="compound">Gpu::LaunchSafeGuard</ref><sp/>lsg(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Gpu_1_1DeviceScalar" kindref="compound">Gpu::DeviceScalar&lt;T&gt;</ref><sp/>ds(init_val);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>dp<sp/>=<sp/>ds.dataPtr();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa97bf4be56f176e3af5b90f5b5955a04" kindref="member">amrex::VecReduce</ref>(n,<sp/>init_val,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(N<sp/>i,<sp/>T*<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>bop(*r,<sp/>v[i]);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>r,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a43c0464b84a84c9342e01a13f076e1c2" kindref="member">Gpu::deviceReduceMin</ref>(dp,<sp/>r,<sp/>h);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a43c0464b84a84c9342e01a13f076e1c2" kindref="member">Gpu::deviceReduceMin</ref>(dp,<sp/>r);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ds.dataValue();</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="480"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1aa9002a6dc16f2e87ac519151c6d8a7df" kindref="member">Min</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;T&gt;::max</ref>())</highlight></codeline>
<codeline lineno="481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1aa9002a6dc16f2e87ac519151c6d8a7df" kindref="member">Reduce::Min</ref>(n,<sp/>v,<sp/>init_val,<sp/><ref refid="structamrex_1_1Less" kindref="compound">amrex::Less&lt;T&gt;</ref>());</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>U,<sp/>typename<sp/>BOP,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="486"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1ab3af21594fb654c6c051cdc49536bf35" kindref="member">Max</ref><sp/>(N<sp/>n,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val,<sp/>BOP<sp/>bop)</highlight></codeline>
<codeline lineno="487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Gpu_1_1LaunchSafeGuard" kindref="compound">Gpu::LaunchSafeGuard</ref><sp/>lsg(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Gpu_1_1DeviceScalar" kindref="compound">Gpu::DeviceScalar&lt;T&gt;</ref><sp/>ds(init_val);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>dp<sp/>=<sp/>ds.dataPtr();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa97bf4be56f176e3af5b90f5b5955a04" kindref="member">amrex::VecReduce</ref>(n,<sp/>init_val,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(N<sp/>i,<sp/>T*<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>bop(*r,<sp/>v[i]);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>r,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a434d47b5660b0c082d361aa5994ee218" kindref="member">Gpu::deviceReduceMax</ref>(dp,<sp/>r,<sp/>h);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a434d47b5660b0c082d361aa5994ee218" kindref="member">Gpu::deviceReduceMax</ref>(dp,<sp/>r);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ds.dataValue();</highlight></codeline>
<codeline lineno="508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="511"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1ab3af21594fb654c6c051cdc49536bf35" kindref="member">Max</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val<sp/>=<sp/>std::numeric_limits&lt;T&gt;::lowest())</highlight></codeline>
<codeline lineno="512"><highlight class="normal">{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1ab3af21594fb654c6c051cdc49536bf35" kindref="member">Reduce::Max</ref>(n,<sp/>v,<sp/>init_val,<sp/><ref refid="structamrex_1_1Greater" kindref="compound">amrex::Greater&lt;T&gt;</ref>());</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>U,<sp/>typename<sp/>MINOP,<sp/>typename<sp/>MAXOP,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="517"><highlight class="normal">std::pair&lt;T,T&gt;<sp/><ref refid="namespaceamrex_1_1Reduce_1a407e04992fad29e568b551872b7343f2" kindref="member">MinMax</ref><sp/>(N<sp/>n,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>MINOP<sp/>minop,<sp/>MAXOP<sp/>maxop)</highlight></codeline>
<codeline lineno="518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Gpu_1_1LaunchSafeGuard" kindref="compound">Gpu::LaunchSafeGuard</ref><sp/>lsg(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array&lt;T,2&gt;</ref><sp/>hv{<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;T&gt;::max</ref>(),<sp/>std::numeric_limits&lt;T&gt;::lowest()};</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>dp<sp/>=<sp/>(T*)(<ref refid="namespaceamrex_1a97a60825e6e7886b3502c2f4ed1eb417" kindref="member">The_Device_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a46ce2cd5cfc039cec64548b031fbde2e" kindref="member">alloc</ref>(2*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)));</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ae243b10c65516ed7dfeaf9aed7e75aa3" kindref="member">Gpu::htod_memcpy</ref>(dp,<sp/>hv.data(),<sp/>2*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;T,2&gt;</ref><sp/>Real2;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa97bf4be56f176e3af5b90f5b5955a04" kindref="member">amrex::VecReduce</ref>(n,<sp/>Real2{hv[0],hv[1]},</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(N<sp/>i,<sp/>Real2*<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*r)[0]<sp/>=<sp/>minop((*r)[0],<sp/>v[i]);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*r)[1]<sp/>=<sp/>maxop((*r)[1],<sp/>v[i]);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(Real2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>r,<sp/>Gpu::Handler<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a43c0464b84a84c9342e01a13f076e1c2" kindref="member">Gpu::deviceReduceMin</ref>(dp<sp/><sp/>,<sp/>r[0],<sp/>h);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a434d47b5660b0c082d361aa5994ee218" kindref="member">Gpu::deviceReduceMax</ref>(dp+1,<sp/>r[1],<sp/>h);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(Real2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a43c0464b84a84c9342e01a13f076e1c2" kindref="member">Gpu::deviceReduceMin</ref>(dp<sp/><sp/>,<sp/>r[0]);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a434d47b5660b0c082d361aa5994ee218" kindref="member">Gpu::deviceReduceMax</ref>(dp+1,<sp/>r[1]);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a998c5815369d23cd73eea1b09f43a966" kindref="member">Gpu::dtoh_memcpy</ref>(hv.data(),<sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>,<sp/>2*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a97a60825e6e7886b3502c2f4ed1eb417" kindref="member">The_Device_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a0c7e0730574c98febb6ddca2712cb515" kindref="member">free</ref>(dp);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(hv[0],hv[1]);</highlight></codeline>
<codeline lineno="546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="549"><highlight class="normal">std::pair&lt;T,T&gt;<sp/><ref refid="namespaceamrex_1_1Reduce_1a407e04992fad29e568b551872b7343f2" kindref="member">MinMax</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v)</highlight></codeline>
<codeline lineno="550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Reduce::MinMax&lt;T&gt;(n,<sp/>v,<sp/><ref refid="structamrex_1_1Less" kindref="compound">amrex::Less&lt;T&gt;</ref>(),<sp/><ref refid="structamrex_1_1Greater" kindref="compound">amrex::Greater&lt;T&gt;</ref>());</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>P,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1ada14c45ee9673665c1c3df6749ede80f" kindref="member">AnyOf</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>P&amp;&amp;<sp/>pred)</highlight></codeline>
<codeline lineno="556"><highlight class="normal">{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Gpu_1_1LaunchSafeGuard" kindref="compound">Gpu::LaunchSafeGuard</ref><sp/>lsg(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Gpu_1_1DeviceScalar" kindref="compound">Gpu::DeviceScalar&lt;int&gt;</ref><sp/>ds(0);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dp<sp/>=<sp/>ds.dataPtr();</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xxxxx<sp/>DPCPP<sp/>todo:<sp/>Anyof<sp/>N:<sp/>better<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a6d387a74be2cf34825f4df1714211d53" kindref="member">amrex::ParallelFor</ref>(n,<sp/>[=]<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>noexcept</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>pred(v[i])<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a53a66f5fe06e3b8839cb0f79f0d0ea3d" kindref="member">Gpu::Atomic::LogicalOr</ref>(dp,<sp/>r);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ec<sp/>=<sp/>Gpu::ExecutionConfig(n);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>ec.numBlocks.x<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(ec.numBlocks.x,<sp/>static_cast&lt;unsigned<sp/>int&gt;(Gpu::Device::maxBlocksPerLaunch()));</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ada73ee47d1c3a0d63725ce77e1334257" kindref="member">amrex::launch</ref>(ec.numBlocks.x,<sp/>ec.numThreads.x,<sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__shared__<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>has_any;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(threadIdx.x<sp/>==<sp/>0)<sp/>has_any<sp/>=<sp/>*dp;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__syncthreads();</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!has_any)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(N<sp/>i<sp/>=<sp/>blockDim.x*blockIdx.x+threadIdx.x,<sp/>stride<sp/>=<sp/>blockDim.x*gridDim.x;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>n<sp/>and<sp/>!r;<sp/>i<sp/>+=<sp/>stride)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>pred(v[i])<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>Gpu::blockReduce&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(r,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<ref refid="structamrex_1_1Plus" kindref="compound">amrex::Plus&lt;int&gt;</ref><sp/>&gt;(),<sp/>0);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(threadIdx.x<sp/>==<sp/>0<sp/>and<sp/>r)<sp/>*dp<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ds.dataValue();</highlight></codeline>
<codeline lineno="591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P&gt;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1ada14c45ee9673665c1c3df6749ede80f" kindref="member">AnyOf</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>P&amp;&amp;<sp/>pred)</highlight></codeline>
<codeline lineno="595"><highlight class="normal">{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Gpu_1_1LaunchSafeGuard" kindref="compound">Gpu::LaunchSafeGuard</ref><sp/>lsg(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Gpu_1_1DeviceScalar" kindref="compound">Gpu::DeviceScalar&lt;int&gt;</ref><sp/>ds(0);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dp<sp/>=<sp/>ds.dataPtr();</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncells<sp/>=<sp/>box.<ref refid="classamrex_1_1Box_1a74b39c8b70837cdb61ade61a834997ff" kindref="member">numPts</ref>();</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(box);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xxxxx<sp/>DPCPP<sp/>todo:<sp/>Anyof<sp/>Box:<sp/>better<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a6d387a74be2cf34825f4df1714211d53" kindref="member">amrex::ParallelFor</ref>(box,<sp/>[=]<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k)<sp/>noexcept</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>pred(i,j,k)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a53a66f5fe06e3b8839cb0f79f0d0ea3d" kindref="member">Gpu::Atomic::LogicalOr</ref>(dp,<sp/>r);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ec<sp/>=<sp/>Gpu::ExecutionConfig(ncells);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>ec.numBlocks.x<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(ec.numBlocks.x,<sp/>static_cast&lt;unsigned<sp/>int&gt;(Gpu::Device::maxBlocksPerLaunch()));</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_LAUNCH_KERNEL(ec.numBlocks,<sp/>ec.numThreads,<sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__shared__<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>has_any;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(threadIdx.x<sp/>==<sp/>0)<sp/>has_any<sp/>=<sp/>*dp;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__syncthreads();</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!has_any)</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icell<sp/>=<sp/>blockDim.x*blockIdx.x+threadIdx.x,<sp/>stride<sp/>=<sp/>blockDim.x*gridDim.x;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icell<sp/>&lt;<sp/>ncells<sp/>and<sp/>!r;<sp/>icell<sp/>+=<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>k<sp/>=<sp/><sp/>icell<sp/>/<sp/><sp/><sp/>(len.x*len.y);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>j<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>/<sp/><sp/><sp/>len.x;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>i<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>-<sp/>j*len.x;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>lo.x;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>lo.y;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>lo.z;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>pred(i,j,k)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>Gpu::blockReduce&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(r,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<ref refid="structamrex_1_1Plus" kindref="compound">amrex::Plus&lt;int&gt;</ref><sp/>&gt;(),<sp/>0);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(threadIdx.x<sp/>==<sp/>0<sp/>and<sp/>r)<sp/>*dp<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ds.dataValue();</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="645" refid="classamrex_1_1ReduceData" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ReduceData</highlight></codeline>
<codeline lineno="646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="648" refid="classamrex_1_1ReduceData_1a61d113644b72c6bda6b1221a9079fe8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1GpuTuple" kindref="compound">Type</ref><sp/>=<sp/><ref refid="classamrex_1_1GpuTuple" kindref="compound">GpuTuple</ref>&lt;Ts...&gt;;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ps&gt;</highlight></codeline>
<codeline lineno="651" refid="classamrex_1_1ReduceData_1a71efff73cd20652eb13d1a087e22f14a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ReduceData_1a71efff73cd20652eb13d1a087e22f14a" kindref="member">ReduceData</ref><sp/>(<ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;Ps...&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_tuple()</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1aa49407a52dbde68233cb025e571b8e0a" kindref="member">Reduce::detail::for_each_init</ref>&lt;0,<sp/><ref refid="classamrex_1_1GpuTuple" kindref="compound">Type</ref>,<sp/>Ps...&gt;(m_tuple);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>ReduceData<sp/>(<ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;Ts...&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>ReduceData<sp/>(<ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;Ts...&gt;</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=<sp/>(<ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;Ts...&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=<sp/>(<ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;Ts...&gt;</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662" refid="classamrex_1_1ReduceData_1a0d0638a86325d2fbf74cde6dcea98b1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1GpuTuple" kindref="compound">Type</ref><sp/><ref refid="classamrex_1_1ReduceData_1a0d0638a86325d2fbf74cde6dcea98b1f" kindref="member">value</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="663"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_tuple;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667" refid="classamrex_1_1ReduceData_1a194ec449a1715b376740f5465cb96bc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1GpuTuple" kindref="compound">Type</ref>&amp;<sp/><ref refid="classamrex_1_1ReduceData_1a194ec449a1715b376740f5465cb96bc3" kindref="member">reference</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_tuple;<sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="670" refid="classamrex_1_1ReduceData_1af4154a58a8fb367004c4297cf6b8e189" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1GpuTuple" kindref="compound">Type</ref><sp/><ref refid="classamrex_1_1ReduceData_1af4154a58a8fb367004c4297cf6b8e189" kindref="member">m_tuple</ref>;</highlight></codeline>
<codeline lineno="671"><highlight class="normal">};</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ps&gt;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps</ref></highlight></codeline>
<codeline lineno="675"><highlight class="normal">{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="680" refid="classamrex_1_1ReduceOps_1afae6476d3ca7e59a040c826d0a774dd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ReduceOps_1afae6476d3ca7e59a040c826d0a774dd0" kindref="member">call_f</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>D<sp/>&amp;<sp/></highlight><highlight class="comment">/*reduce_data*/</highlight><highlight class="normal">,<sp/>F<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>f)</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>-&gt;<sp/>decltype(f(0,0,0))</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D::Type;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>r;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1aa49407a52dbde68233cb025e571b8e0a" kindref="member">Reduce::detail::for_each_init</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a6ce6b4176121c2c23327903a8139af0c" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pr<sp/>=<sp/>f(i,j,k);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">Reduce::detail::for_each_local</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r,<sp/>pr);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="699" refid="classamrex_1_1ReduceOps_1a4bb67dee93feb15a157cffb149661a90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ReduceOps_1a4bb67dee93feb15a157cffb149661a90" kindref="member">call_f</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>D&amp;,<sp/>F<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>f)</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>-&gt;<sp/>decltype(f(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref>()))</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(box);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="708" refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>D<sp/>&amp;<sp/>reduce_data,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D::Type;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple&amp;<sp/>rr<sp/>=<sp/>reduce_data.reference();</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>call_f(box,<sp/>reduce_data,<sp/>f);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">Reduce::detail::for_each_parallel</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(rr,r);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="718" refid="classamrex_1_1ReduceOps_1a0b2c2b761a373ac5a95273721a8ae1fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ReduceOps_1a0b2c2b761a373ac5a95273721a8ae1fd" kindref="member">eval</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>N<sp/>ncomp,<sp/>D<sp/>&amp;<sp/>reduce_data,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D::Type;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>r;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1aa49407a52dbde68233cb025e571b8e0a" kindref="member">Reduce::detail::for_each_init</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple&amp;<sp/>rr<sp/>=<sp/>reduce_data.reference();</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a6ce6b4176121c2c23327903a8139af0c" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(N<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pr<sp/>=<sp/>f(i,j,k,n);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">Reduce::detail::for_each_local</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r,<sp/>pr);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}}}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">Reduce::detail::for_each_parallel</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(rr,r);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="738" refid="classamrex_1_1ReduceOps_1a65284f038ea29beb80b99c1a5f246f04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ReduceOps_1a65284f038ea29beb80b99c1a5f246f04" kindref="member">eval</ref><sp/>(N<sp/>n,<sp/>D<sp/>&amp;<sp/>reduce_data,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D::Type;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>r;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1aa49407a52dbde68233cb025e571b8e0a" kindref="member">Reduce::detail::for_each_init</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple&amp;<sp/>rr<sp/>=<sp/>reduce_data.reference();</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(N<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pr<sp/>=<sp/>f(i);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">Reduce::detail::for_each_local</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r,<sp/>pr);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">Reduce::detail::for_each_parallel</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(rr,r);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal">};</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1detail_1a2d9a622392a0eee879ac8180cb2371e6" kindref="member">Reduce</ref><sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal">template<sp/>&lt;typename<sp/>N,<sp/>typename<sp/>T,<sp/>typename<sp/>U,<sp/>typename<sp/>BOP,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="755" refid="namespaceamrex_1_1Reduce_1a3a1bf2418459469b609d213560f4a8da" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1a3a1bf2418459469b609d213560f4a8da" kindref="member">Sum</ref><sp/>(N<sp/>n,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val,<sp/>BOP<sp/>bop)</highlight></codeline>
<codeline lineno="756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref><sp/>=<sp/>init_val;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>dp<sp/>=<sp/>&amp;<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa97bf4be56f176e3af5b90f5b5955a04" kindref="member">amrex::VecReduce</ref>(n,<sp/>init_val,</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/>(N<sp/>i,<sp/>T*<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>bop(*r,<sp/>v[i]);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/>(T<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1ab50ab224d1a043d14eccc5019548c562" kindref="member">Gpu::deviceReduceSum</ref>(dp,<sp/>r);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>;</highlight></codeline>
<codeline lineno="769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal">template<sp/>&lt;typename<sp/>N,<sp/>typename<sp/>T,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="772" refid="namespaceamrex_1_1Reduce_1afac1250d786b98bab8d8d2cf5c06411e" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1a3a1bf2418459469b609d213560f4a8da" kindref="member">Sum</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="773"><highlight class="normal">{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1a3a1bf2418459469b609d213560f4a8da" kindref="member">Reduce::Sum</ref>(n,<sp/>v,<sp/>init_val,<sp/><ref refid="structamrex_1_1Plus" kindref="compound">amrex::Plus&lt;T&gt;</ref>());</highlight></codeline>
<codeline lineno="775"><highlight class="normal">}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal">template<sp/>&lt;typename<sp/>N,<sp/>typename<sp/>T,<sp/>typename<sp/>U,<sp/>typename<sp/>BOP,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="778" refid="namespaceamrex_1_1Reduce_1aa9002a6dc16f2e87ac519151c6d8a7df" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1aa9002a6dc16f2e87ac519151c6d8a7df" kindref="member">Min</ref><sp/>(N<sp/>n,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val,<sp/>BOP<sp/>bop)</highlight></codeline>
<codeline lineno="779"><highlight class="normal">{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>mn<sp/>=<sp/>init_val;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>dp<sp/>=<sp/>&amp;mn;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa97bf4be56f176e3af5b90f5b5955a04" kindref="member">amrex::VecReduce</ref>(n,<sp/>init_val,</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/>(N<sp/>i,<sp/>T*<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>bop(*r,<sp/>v[i]);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/>(T<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a43c0464b84a84c9342e01a13f076e1c2" kindref="member">Gpu::deviceReduceMin</ref>(dp,<sp/>r);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mn;</highlight></codeline>
<codeline lineno="792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal">template<sp/>&lt;typename<sp/>N,<sp/>typename<sp/>T,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="795" refid="namespaceamrex_1_1Reduce_1a07365bcdfaa9fe246330e8d91f71ecc0" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1aa9002a6dc16f2e87ac519151c6d8a7df" kindref="member">Min</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;T&gt;::max</ref>())</highlight></codeline>
<codeline lineno="796"><highlight class="normal">{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1aa9002a6dc16f2e87ac519151c6d8a7df" kindref="member">Reduce::Min</ref>(n,<sp/>v,<sp/>init_val,<sp/><ref refid="structamrex_1_1Less" kindref="compound">amrex::Less&lt;T&gt;</ref>());</highlight></codeline>
<codeline lineno="798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal">template<sp/>&lt;typename<sp/>N,<sp/>typename<sp/>T,<sp/>typename<sp/>U,<sp/>typename<sp/>BOP,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="801" refid="namespaceamrex_1_1Reduce_1ab3af21594fb654c6c051cdc49536bf35" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1ab3af21594fb654c6c051cdc49536bf35" kindref="member">Max</ref><sp/>(N<sp/>n,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val,<sp/>BOP<sp/>bop)</highlight></codeline>
<codeline lineno="802"><highlight class="normal">{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>mx<sp/>=<sp/>init_val;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>dp<sp/>=<sp/>&amp;mx;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa97bf4be56f176e3af5b90f5b5955a04" kindref="member">amrex::VecReduce</ref>(n,<sp/>init_val,</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/>(N<sp/>i,<sp/>T*<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>bop(*r,<sp/>v[i]);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/>(T<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a434d47b5660b0c082d361aa5994ee218" kindref="member">Gpu::deviceReduceMax</ref>(dp,<sp/>r);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mx;</highlight></codeline>
<codeline lineno="815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal">template<sp/>&lt;typename<sp/>N,<sp/>typename<sp/>T,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="818" refid="namespaceamrex_1_1Reduce_1a7ac8075282193aef5024b3a7092a0f3c" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1ab3af21594fb654c6c051cdc49536bf35" kindref="member">Max</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val<sp/>=<sp/>std::numeric_limits&lt;T&gt;::lowest())</highlight></codeline>
<codeline lineno="819"><highlight class="normal">{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1ab3af21594fb654c6c051cdc49536bf35" kindref="member">Reduce::Max</ref>(n,<sp/>v,<sp/>init_val,<sp/><ref refid="structamrex_1_1Greater" kindref="compound">amrex::Greater&lt;T&gt;</ref>());</highlight></codeline>
<codeline lineno="821"><highlight class="normal">}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>U,<sp/>typename<sp/>MINOP,<sp/>typename<sp/>MAXOP,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="824" refid="namespaceamrex_1_1Reduce_1a407e04992fad29e568b551872b7343f2" refkind="member"><highlight class="normal">std::pair&lt;T,T&gt;<sp/><ref refid="namespaceamrex_1_1Reduce_1a407e04992fad29e568b551872b7343f2" kindref="member">MinMax</ref><sp/>(N<sp/>n,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>MINOP<sp/>minop,<sp/>MAXOP<sp/>maxop)</highlight></codeline>
<codeline lineno="825"><highlight class="normal">{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array&lt;T,2&gt;</ref><sp/>hv{<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;T&gt;::max</ref>(),<sp/>std::numeric_limits&lt;T&gt;::lowest()};</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>dp<sp/>=<sp/>hv.data();</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;T,2&gt;</ref><sp/>Real2;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa97bf4be56f176e3af5b90f5b5955a04" kindref="member">amrex::VecReduce</ref>(n,<sp/>Real2{hv[0],hv[1]},</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/>(N<sp/>i,<sp/>Real2*<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*r)[0]<sp/>=<sp/>minop((*r)[0],<sp/>v[i]);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*r)[1]<sp/>=<sp/>maxop((*r)[1],<sp/>v[i]);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/>(Real2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a43c0464b84a84c9342e01a13f076e1c2" kindref="member">Gpu::deviceReduceMin</ref>(dp<sp/><sp/>,<sp/>r[0]);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a434d47b5660b0c082d361aa5994ee218" kindref="member">Gpu::deviceReduceMax</ref>(dp+1,<sp/>r[1]);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(hv[0],hv[1]);</highlight></codeline>
<codeline lineno="841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="844" refid="namespaceamrex_1_1Reduce_1a17b6d6ef1df2c2803c3f460b51ddd012" refkind="member"><highlight class="normal">std::pair&lt;T,T&gt;<sp/><ref refid="namespaceamrex_1_1Reduce_1a407e04992fad29e568b551872b7343f2" kindref="member">MinMax</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v)</highlight></codeline>
<codeline lineno="845"><highlight class="normal">{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Reduce::MinMax&lt;T&gt;(n,<sp/>v,<sp/><ref refid="structamrex_1_1Less" kindref="compound">amrex::Less&lt;T&gt;</ref>(),<sp/><ref refid="structamrex_1_1Greater" kindref="compound">amrex::Greater&lt;T&gt;</ref>());</highlight></codeline>
<codeline lineno="847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>P,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="850" refid="namespaceamrex_1_1Reduce_1ada14c45ee9673665c1c3df6749ede80f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1ada14c45ee9673665c1c3df6749ede80f" kindref="member">AnyOf</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>P&amp;&amp;<sp/>pred)</highlight></codeline>
<codeline lineno="851"><highlight class="normal">{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::any_of(v,<sp/>v+n,<sp/>pred);</highlight></codeline>
<codeline lineno="853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P&gt;</highlight></codeline>
<codeline lineno="856" refid="namespaceamrex_1_1Reduce_1a7cabd7f1db3095d4896d075cc936f0e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1ada14c45ee9673665c1c3df6749ede80f" kindref="member">AnyOf</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>P&amp;&amp;pred)</highlight></codeline>
<codeline lineno="857"><highlight class="normal">{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a6ce6b4176121c2c23327903a8139af0c" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pred(i,j,k))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Reduce.H"/>
  </compounddef>
</doxygen>
