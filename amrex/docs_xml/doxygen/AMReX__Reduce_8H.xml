<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="AMReX__Reduce_8H" kind="file" language="C++">
    <compoundname>AMReX_Reduce.H</compoundname>
    <includes local="no">AMReX_Config.H</includes>
    <includes refid="AMReX__Gpu_8H" local="no">AMReX_Gpu.H</includes>
    <includes refid="AMReX__Arena_8H" local="no">AMReX_Arena.H</includes>
    <includes local="no">algorithm</includes>
    <includedby refid="AMReX__BaseFab_8H" local="no">/home/runner/work/amrex/amrex/Src/Base/AMReX_BaseFab.H</includedby>
    <includedby refid="AMReX__EBCellFlag_8cpp" local="no">/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.cpp</includedby>
    <incdepgraph>
      <node id="47455">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47422" relation="include">
        </childnode>
        <childnode refid="47429" relation="include">
        </childnode>
        <childnode refid="47456" relation="include">
        </childnode>
        <childnode refid="47433" relation="include">
        </childnode>
        <childnode refid="47442" relation="include">
        </childnode>
        <childnode refid="47452" relation="include">
        </childnode>
        <childnode refid="47457" relation="include">
        </childnode>
        <childnode refid="47458" relation="include">
        </childnode>
      </node>
      <node id="47423">
        <label>AMReX_GpuKernelInfo.H</label>
        <link refid="AMReX__GpuKernelInfo_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
      </node>
      <node id="47495">
        <label>AMReX_OpenMP.H</label>
        <link refid="AMReX__OpenMP_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
      </node>
      <node id="47461">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
      </node>
      <node id="47517">
        <label>iomanip</label>
      </node>
      <node id="47446">
        <label>functional</label>
      </node>
      <node id="47457">
        <label>limits</label>
      </node>
      <node id="47485">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47447" relation="include">
        </childnode>
        <childnode refid="47440" relation="include">
        </childnode>
      </node>
      <node id="47467">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47454" relation="include">
        </childnode>
        <childnode refid="47435" relation="include">
        </childnode>
        <childnode refid="47460" relation="include">
        </childnode>
        <childnode refid="47461" relation="include">
        </childnode>
      </node>
      <node id="47503">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47422" relation="include">
        </childnode>
      </node>
      <node id="47476">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47445" relation="include">
        </childnode>
        <childnode refid="47450" relation="include">
        </childnode>
        <childnode refid="47473" relation="include">
        </childnode>
        <childnode refid="47477" relation="include">
        </childnode>
        <childnode refid="47467" relation="include">
        </childnode>
        <childnode refid="47478" relation="include">
        </childnode>
        <childnode refid="47462" relation="include">
        </childnode>
        <childnode refid="47451" relation="include">
        </childnode>
      </node>
      <node id="47519">
        <label>iterator</label>
      </node>
      <node id="47441">
        <label>float.h</label>
      </node>
      <node id="47510">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
      </node>
      <node id="47433">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47434" relation="include">
        </childnode>
      </node>
      <node id="47426">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47427" relation="include">
        </childnode>
      </node>
      <node id="47491">
        <label>cstdint</label>
      </node>
      <node id="47472">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47444" relation="include">
        </childnode>
        <childnode refid="47445" relation="include">
        </childnode>
        <childnode refid="47465" relation="include">
        </childnode>
        <childnode refid="47447" relation="include">
        </childnode>
        <childnode refid="47473" relation="include">
        </childnode>
        <childnode refid="47474" relation="include">
        </childnode>
        <childnode refid="47458" relation="include">
        </childnode>
        <childnode refid="47466" relation="include">
        </childnode>
        <childnode refid="47457" relation="include">
        </childnode>
        <childnode refid="47475" relation="include">
        </childnode>
        <childnode refid="47433" relation="include">
        </childnode>
        <childnode refid="47440" relation="include">
        </childnode>
        <childnode refid="47438" relation="include">
        </childnode>
        <childnode refid="47462" relation="include">
        </childnode>
        <childnode refid="47451" relation="include">
        </childnode>
        <childnode refid="47453" relation="include">
        </childnode>
        <childnode refid="47476" relation="include">
        </childnode>
        <childnode refid="47479" relation="include">
        </childnode>
        <childnode refid="47480" relation="include">
        </childnode>
        <childnode refid="47489" relation="include">
        </childnode>
        <childnode refid="47422" relation="include">
        </childnode>
        <childnode refid="47492" relation="include">
        </childnode>
      </node>
      <node id="47515">
        <label>AMReX_GpuAllocators.H</label>
        <link refid="AMReX__GpuAllocators_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47473" relation="include">
        </childnode>
        <childnode refid="47449" relation="include">
        </childnode>
        <childnode refid="47457" relation="include">
        </childnode>
        <childnode refid="47458" relation="include">
        </childnode>
        <childnode refid="47516" relation="include">
        </childnode>
        <childnode refid="47432" relation="include">
        </childnode>
        <childnode refid="47471" relation="include">
        </childnode>
      </node>
      <node id="47501">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47422" relation="include">
        </childnode>
        <childnode refid="47430" relation="include">
        </childnode>
        <childnode refid="47428" relation="include">
        </childnode>
        <childnode refid="47502" relation="include">
        </childnode>
        <childnode refid="47504" relation="include">
        </childnode>
        <childnode refid="47503" relation="include">
        </childnode>
      </node>
      <node id="47505">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47463" relation="include">
        </childnode>
        <childnode refid="47506" relation="include">
        </childnode>
        <childnode refid="47446" relation="include">
        </childnode>
        <childnode refid="47458" relation="include">
        </childnode>
        <childnode refid="47464" relation="include">
        </childnode>
        <childnode refid="47470" relation="include">
        </childnode>
        <childnode refid="47507" relation="include">
        </childnode>
        <childnode refid="47503" relation="include">
        </childnode>
        <childnode refid="47422" relation="include">
        </childnode>
      </node>
      <node id="47451">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47452" relation="include">
        </childnode>
        <childnode refid="47448" relation="include">
        </childnode>
        <childnode refid="47449" relation="include">
        </childnode>
        <childnode refid="47433" relation="include">
        </childnode>
        <childnode refid="47429" relation="include">
        </childnode>
        <childnode refid="47438" relation="include">
        </childnode>
      </node>
      <node id="47483">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47484" relation="include">
        </childnode>
        <childnode refid="47447" relation="include">
        </childnode>
        <childnode refid="47464" relation="include">
        </childnode>
        <childnode refid="47465" relation="include">
        </childnode>
        <childnode refid="47425" relation="include">
        </childnode>
        <childnode refid="47444" relation="include">
        </childnode>
      </node>
      <node id="47428">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47429" relation="include">
        </childnode>
      </node>
      <node id="47443">
        <label>cmath</label>
      </node>
      <node id="47427">
        <label>cassert</label>
      </node>
      <node id="47440">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47429" relation="include">
        </childnode>
        <childnode refid="47441" relation="include">
        </childnode>
      </node>
      <node id="47437">
        <label>stdexcept</label>
      </node>
      <node id="47435">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
      </node>
      <node id="47487">
        <label>numeric</label>
      </node>
      <node id="47447">
        <label>string</label>
      </node>
      <node id="47471">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47444" relation="include">
        </childnode>
        <childnode refid="47449" relation="include">
        </childnode>
        <childnode refid="47463" relation="include">
        </childnode>
        <childnode refid="47434" relation="include">
        </childnode>
        <childnode refid="47472" relation="include">
        </childnode>
        <childnode refid="47428" relation="include">
        </childnode>
        <childnode refid="47494" relation="include">
        </childnode>
        <childnode refid="47430" relation="include">
        </childnode>
        <childnode refid="47495" relation="include">
        </childnode>
        <childnode refid="47451" relation="include">
        </childnode>
      </node>
      <node id="47473">
        <label>map</label>
      </node>
      <node id="47432">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47433" relation="include">
        </childnode>
        <childnode refid="47450" relation="include">
        </childnode>
        <childnode refid="47444" relation="include">
        </childnode>
      </node>
      <node id="47494">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47472" relation="include">
        </childnode>
        <childnode refid="47447" relation="include">
        </childnode>
      </node>
      <node id="47422">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
      </node>
      <node id="47475">
        <label>cfloat</label>
      </node>
      <node id="47456">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47445" relation="include">
        </childnode>
        <childnode refid="47440" relation="include">
        </childnode>
        <childnode refid="47422" relation="include">
        </childnode>
      </node>
      <node id="47481">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47449" relation="include">
        </childnode>
        <childnode refid="47482" relation="include">
        </childnode>
        <childnode refid="47451" relation="include">
        </childnode>
        <childnode refid="47435" relation="include">
        </childnode>
      </node>
      <node id="47482">
        <label>fstream</label>
      </node>
      <node id="47478">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47454" relation="include">
        </childnode>
        <childnode refid="47460" relation="include">
        </childnode>
        <childnode refid="47467" relation="include">
        </childnode>
        <childnode refid="47453" relation="include">
        </childnode>
        <childnode refid="47462" relation="include">
        </childnode>
        <childnode refid="47451" relation="include">
        </childnode>
      </node>
      <node id="47499">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47422" relation="include">
        </childnode>
        <childnode refid="47430" relation="include">
        </childnode>
        <childnode refid="47494" relation="include">
        </childnode>
        <childnode refid="47453" relation="include">
        </childnode>
        <childnode refid="47470" relation="include">
        </childnode>
      </node>
      <node id="47430">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47422" relation="include">
        </childnode>
        <childnode refid="47428" relation="include">
        </childnode>
      </node>
      <node id="47511">
        <label>AMReX_GpuBuffer.H</label>
        <link refid="AMReX__GpuBuffer_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47432" relation="include">
        </childnode>
        <childnode refid="47470" relation="include">
        </childnode>
        <childnode refid="47471" relation="include">
        </childnode>
        <childnode refid="47497" relation="include">
        </childnode>
        <childnode refid="47444" relation="include">
        </childnode>
        <childnode refid="47512" relation="include">
        </childnode>
        <childnode refid="47449" relation="include">
        </childnode>
      </node>
      <node id="47434">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47422" relation="include">
        </childnode>
        <childnode refid="47424" relation="include">
        </childnode>
        <childnode refid="47426" relation="include">
        </childnode>
        <childnode refid="47435" relation="include">
        </childnode>
        <childnode refid="47436" relation="include">
        </childnode>
        <childnode refid="47429" relation="include">
        </childnode>
        <childnode refid="47438" relation="include">
        </childnode>
        <childnode refid="47440" relation="include">
        </childnode>
        <childnode refid="47442" relation="include">
        </childnode>
        <childnode refid="47445" relation="include">
        </childnode>
        <childnode refid="47446" relation="include">
        </childnode>
        <childnode refid="47447" relation="include">
        </childnode>
        <childnode refid="47425" relation="include">
        </childnode>
        <childnode refid="47448" relation="include">
        </childnode>
        <childnode refid="47449" relation="include">
        </childnode>
      </node>
      <node id="47489">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47434" relation="include">
        </childnode>
        <childnode refid="47422" relation="include">
        </childnode>
        <childnode refid="47480" relation="include">
        </childnode>
        <childnode refid="47490" relation="include">
        </childnode>
        <childnode refid="47457" relation="include">
        </childnode>
        <childnode refid="47491" relation="include">
        </childnode>
      </node>
      <node id="47429">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
      </node>
      <node id="47490">
        <label>AMReX_RandomEngine.H</label>
        <link refid="AMReX__RandomEngine_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47422" relation="include">
        </childnode>
        <childnode refid="47429" relation="include">
        </childnode>
      </node>
      <node id="47493">
        <label>sys/types.h</label>
      </node>
      <node id="47513">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47450" relation="include">
        </childnode>
        <childnode refid="47497" relation="include">
        </childnode>
        <childnode refid="47444" relation="include">
        </childnode>
        <childnode refid="47449" relation="include">
        </childnode>
        <childnode refid="47432" relation="include">
        </childnode>
        <childnode refid="47470" relation="include">
        </childnode>
        <childnode refid="47471" relation="include">
        </childnode>
      </node>
      <node id="47419">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47421" relation="include">
        </childnode>
        <childnode refid="47432" relation="include">
        </childnode>
        <childnode refid="47452" relation="include">
        </childnode>
      </node>
      <node id="47486">
        <label>typeinfo</label>
      </node>
      <node id="47424">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47425" relation="include">
        </childnode>
      </node>
      <node id="47420">
        <label>AMReX_Config.H</label>
      </node>
      <node id="47425">
        <label>cstdio</label>
      </node>
      <node id="47506">
        <label>tuple</label>
      </node>
      <node id="47479">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47473" relation="include">
        </childnode>
        <childnode refid="47457" relation="include">
        </childnode>
        <childnode refid="47449" relation="include">
        </childnode>
        <childnode refid="47450" relation="include">
        </childnode>
        <childnode refid="47445" relation="include">
        </childnode>
        <childnode refid="47434" relation="include">
        </childnode>
        <childnode refid="47462" relation="include">
        </childnode>
        <childnode refid="47451" relation="include">
        </childnode>
        <childnode refid="47453" relation="include">
        </childnode>
        <childnode refid="47440" relation="include">
        </childnode>
        <childnode refid="47480" relation="include">
        </childnode>
      </node>
      <node id="47469">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47462" relation="include">
        </childnode>
        <childnode refid="47460" relation="include">
        </childnode>
        <childnode refid="47424" relation="include">
        </childnode>
      </node>
      <node id="47480">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47435" relation="include">
        </childnode>
        <childnode refid="47481" relation="include">
        </childnode>
        <childnode refid="47483" relation="include">
        </childnode>
        <childnode refid="47485" relation="include">
        </childnode>
        <childnode refid="47433" relation="include">
        </childnode>
        <childnode refid="47438" relation="include">
        </childnode>
        <childnode refid="47440" relation="include">
        </childnode>
        <childnode refid="47462" relation="include">
        </childnode>
        <childnode refid="47451" relation="include">
        </childnode>
        <childnode refid="47453" relation="include">
        </childnode>
        <childnode refid="47445" relation="include">
        </childnode>
        <childnode refid="47448" relation="include">
        </childnode>
        <childnode refid="47447" relation="include">
        </childnode>
        <childnode refid="47486" relation="include">
        </childnode>
        <childnode refid="47452" relation="include">
        </childnode>
        <childnode refid="47446" relation="include">
        </childnode>
        <childnode refid="47457" relation="include">
        </childnode>
        <childnode refid="47487" relation="include">
        </childnode>
        <childnode refid="47488" relation="include">
        </childnode>
      </node>
      <node id="47468">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47454" relation="include">
        </childnode>
        <childnode refid="47433" relation="include">
        </childnode>
        <childnode refid="47461" relation="include">
        </childnode>
        <childnode refid="47422" relation="include">
        </childnode>
      </node>
      <node id="47496">
        <label>AMReX_GpuLaunchGlobal.H</label>
        <link refid="AMReX__GpuLaunchGlobal_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47422" relation="include">
        </childnode>
      </node>
      <node id="47484">
        <label>stack</label>
      </node>
      <node id="47448">
        <label>vector</label>
      </node>
      <node id="47508">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47453" relation="include">
        </childnode>
      </node>
      <node id="47521">
        <label>AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47421" relation="include">
        </childnode>
        <childnode refid="47432" relation="include">
        </childnode>
        <childnode refid="47491" relation="include">
        </childnode>
        <childnode refid="47458" relation="include">
        </childnode>
      </node>
      <node id="47464">
        <label>utility</label>
      </node>
      <node id="47453">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47454" relation="include">
        </childnode>
        <childnode refid="47455" relation="include">
        </childnode>
        <childnode refid="47459" relation="include">
        </childnode>
        <childnode refid="47435" relation="include">
        </childnode>
        <childnode refid="47460" relation="include">
        </childnode>
        <childnode refid="47467" relation="include">
        </childnode>
        <childnode refid="47468" relation="include">
        </childnode>
        <childnode refid="47461" relation="include">
        </childnode>
        <childnode refid="47462" relation="include">
        </childnode>
        <childnode refid="47469" relation="include">
        </childnode>
        <childnode refid="47451" relation="include">
        </childnode>
        <childnode refid="47422" relation="include">
        </childnode>
        <childnode refid="47430" relation="include">
        </childnode>
      </node>
      <node id="47463">
        <label>array</label>
      </node>
      <node id="47514">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47432" relation="include">
        </childnode>
      </node>
      <node id="47465">
        <label>sstream</label>
      </node>
      <node id="47518">
        <label>AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47487" relation="include">
        </childnode>
        <childnode refid="47519" relation="include">
        </childnode>
        <childnode refid="47451" relation="include">
        </childnode>
        <childnode refid="47520" relation="include">
        </childnode>
        <childnode refid="47515" relation="include">
        </childnode>
        <childnode refid="47521" relation="include">
        </childnode>
        <childnode refid="47458" relation="include">
        </childnode>
      </node>
      <node id="47438">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47439" relation="include">
        </childnode>
      </node>
      <node id="47498">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47422" relation="include">
        </childnode>
        <childnode refid="47423" relation="include">
        </childnode>
        <childnode refid="47430" relation="include">
        </childnode>
        <childnode refid="47428" relation="include">
        </childnode>
        <childnode refid="47494" relation="include">
        </childnode>
        <childnode refid="47499" relation="include">
        </childnode>
        <childnode refid="47471" relation="include">
        </childnode>
        <childnode refid="47500" relation="include">
        </childnode>
        <childnode refid="47501" relation="include">
        </childnode>
        <childnode refid="47431" relation="include">
        </childnode>
        <childnode refid="47505" relation="include">
        </childnode>
        <childnode refid="47453" relation="include">
        </childnode>
        <childnode refid="47508" relation="include">
        </childnode>
        <childnode refid="47429" relation="include">
        </childnode>
        <childnode refid="47433" relation="include">
        </childnode>
        <childnode refid="47470" relation="include">
        </childnode>
        <childnode refid="47496" relation="include">
        </childnode>
        <childnode refid="47490" relation="include">
        </childnode>
        <childnode refid="47455" relation="include">
        </childnode>
        <childnode refid="47450" relation="include">
        </childnode>
        <childnode refid="47457" relation="include">
        </childnode>
        <childnode refid="47452" relation="include">
        </childnode>
        <childnode refid="47464" relation="include">
        </childnode>
        <childnode refid="47509" relation="include">
        </childnode>
        <childnode refid="47510" relation="include">
        </childnode>
      </node>
      <node id="47509">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
      </node>
      <node id="47502">
        <label>AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47422" relation="include">
        </childnode>
        <childnode refid="47503" relation="include">
        </childnode>
      </node>
      <node id="47454">
        <label>iosfwd</label>
      </node>
      <node id="47444">
        <label>cstdlib</label>
      </node>
      <node id="47507">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47464" relation="include">
        </childnode>
      </node>
      <node id="47445">
        <label>iostream</label>
      </node>
      <node id="47462">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47463" relation="include">
        </childnode>
        <childnode refid="47449" relation="include">
        </childnode>
        <childnode refid="47464" relation="include">
        </childnode>
        <childnode refid="47447" relation="include">
        </childnode>
        <childnode refid="47445" relation="include">
        </childnode>
        <childnode refid="47465" relation="include">
        </childnode>
        <childnode refid="47425" relation="include">
        </childnode>
        <childnode refid="47458" relation="include">
        </childnode>
        <childnode refid="47434" relation="include">
        </childnode>
        <childnode refid="47422" relation="include">
        </childnode>
        <childnode refid="47430" relation="include">
        </childnode>
        <childnode refid="47433" relation="include">
        </childnode>
        <childnode refid="47461" relation="include">
        </childnode>
        <childnode refid="47440" relation="include">
        </childnode>
        <childnode refid="47455" relation="include">
        </childnode>
        <childnode refid="47456" relation="include">
        </childnode>
      </node>
      <node id="47450">
        <label>cstddef</label>
      </node>
      <node id="47504">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47422" relation="include">
        </childnode>
        <childnode refid="47428" relation="include">
        </childnode>
        <childnode refid="47430" relation="include">
        </childnode>
        <childnode refid="47471" relation="include">
        </childnode>
        <childnode refid="47429" relation="include">
        </childnode>
        <childnode refid="47440" relation="include">
        </childnode>
        <childnode refid="47438" relation="include">
        </childnode>
        <childnode refid="47462" relation="include">
        </childnode>
        <childnode refid="47469" relation="include">
        </childnode>
        <childnode refid="47445" relation="include">
        </childnode>
        <childnode refid="47443" relation="include">
        </childnode>
        <childnode refid="47497" relation="include">
        </childnode>
      </node>
      <node id="47477">
        <label>unordered_map</label>
      </node>
      <node id="47466">
        <label>climits</label>
      </node>
      <node id="47460">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47438" relation="include">
        </childnode>
        <childnode refid="47435" relation="include">
        </childnode>
        <childnode refid="47461" relation="include">
        </childnode>
        <childnode refid="47462" relation="include">
        </childnode>
        <childnode refid="47451" relation="include">
        </childnode>
        <childnode refid="47456" relation="include">
        </childnode>
        <childnode refid="47433" relation="include">
        </childnode>
        <childnode refid="47429" relation="include">
        </childnode>
        <childnode refid="47422" relation="include">
        </childnode>
        <childnode refid="47442" relation="include">
        </childnode>
        <childnode refid="47454" relation="include">
        </childnode>
        <childnode refid="47444" relation="include">
        </childnode>
        <childnode refid="47443" relation="include">
        </childnode>
        <childnode refid="47457" relation="include">
        </childnode>
        <childnode refid="47466" relation="include">
        </childnode>
        <childnode refid="47452" relation="include">
        </childnode>
      </node>
      <node id="47520">
        <label>AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47470" relation="include">
        </childnode>
        <childnode refid="47421" relation="include">
        </childnode>
        <childnode refid="47515" relation="include">
        </childnode>
        <childnode refid="47518" relation="include">
        </childnode>
        <childnode refid="47471" relation="include">
        </childnode>
        <childnode refid="47458" relation="include">
        </childnode>
        <childnode refid="47464" relation="include">
        </childnode>
        <childnode refid="47449" relation="include">
        </childnode>
        <childnode refid="47497" relation="include">
        </childnode>
      </node>
      <node id="47474">
        <label>chrono</label>
      </node>
      <node id="47488">
        <label>csignal</label>
      </node>
      <node id="47431">
        <label>AMReX_GpuFuse.H</label>
        <link refid="AMReX__GpuFuse_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47432" relation="include">
        </childnode>
        <childnode refid="47451" relation="include">
        </childnode>
        <childnode refid="47453" relation="include">
        </childnode>
        <childnode refid="47470" relation="include">
        </childnode>
        <childnode refid="47471" relation="include">
        </childnode>
        <childnode refid="47496" relation="include">
        </childnode>
        <childnode refid="47497" relation="include">
        </childnode>
        <childnode refid="47449" relation="include">
        </childnode>
      </node>
      <node id="47442">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47422" relation="include">
        </childnode>
        <childnode refid="47429" relation="include">
        </childnode>
        <childnode refid="47443" relation="include">
        </childnode>
        <childnode refid="47444" relation="include">
        </childnode>
      </node>
      <node id="47421">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47422" relation="include">
        </childnode>
        <childnode refid="47423" relation="include">
        </childnode>
        <childnode refid="47424" relation="include">
        </childnode>
        <childnode refid="47426" relation="include">
        </childnode>
        <childnode refid="47428" relation="include">
        </childnode>
        <childnode refid="47430" relation="include">
        </childnode>
        <childnode refid="47431" relation="include">
        </childnode>
        <childnode refid="47498" relation="include">
        </childnode>
        <childnode refid="47494" relation="include">
        </childnode>
        <childnode refid="47502" relation="include">
        </childnode>
        <childnode refid="47504" relation="include">
        </childnode>
        <childnode refid="47471" relation="include">
        </childnode>
        <childnode refid="47511" relation="include">
        </childnode>
        <childnode refid="47513" relation="include">
        </childnode>
        <childnode refid="47514" relation="include">
        </childnode>
        <childnode refid="47500" relation="include">
        </childnode>
        <childnode refid="47499" relation="include">
        </childnode>
        <childnode refid="47501" relation="include">
        </childnode>
        <childnode refid="47515" relation="include">
        </childnode>
        <childnode refid="47518" relation="include">
        </childnode>
        <childnode refid="47522" relation="include">
        </childnode>
      </node>
      <node id="47500">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47422" relation="include">
        </childnode>
        <childnode refid="47430" relation="include">
        </childnode>
        <childnode refid="47471" relation="include">
        </childnode>
        <childnode refid="47470" relation="include">
        </childnode>
        <childnode refid="47432" relation="include">
        </childnode>
        <childnode refid="47444" relation="include">
        </childnode>
      </node>
      <node id="47459">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47440" relation="include">
        </childnode>
      </node>
      <node id="47436">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47437" relation="include">
        </childnode>
      </node>
      <node id="47458">
        <label>type_traits</label>
      </node>
      <node id="47452">
        <label>algorithm</label>
      </node>
      <node id="47492">
        <label>AMReX_FileSystem.H</label>
        <link refid="AMReX__FileSystem_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47447" relation="include">
        </childnode>
        <childnode refid="47493" relation="include">
        </childnode>
      </node>
      <node id="47497">
        <label>cstring</label>
      </node>
      <node id="47522">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
      </node>
      <node id="47449">
        <label>memory</label>
      </node>
      <node id="47512">
        <label>initializer_list</label>
      </node>
      <node id="47439">
        <label>inttypes.h</label>
      </node>
      <node id="47470">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47458" relation="include">
        </childnode>
        <childnode refid="47429" relation="include">
        </childnode>
      </node>
      <node id="47516">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="47420" relation="include">
        </childnode>
        <childnode refid="47465" relation="include">
        </childnode>
        <childnode refid="47482" relation="include">
        </childnode>
        <childnode refid="47517" relation="include">
        </childnode>
        <childnode refid="47464" relation="include">
        </childnode>
        <childnode refid="47434" relation="include">
        </childnode>
        <childnode refid="47481" relation="include">
        </childnode>
        <childnode refid="47480" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="47725">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_extrapolater_K.H</label>
        <link refid="AMReX__extrapolater__K_8H"/>
        <childnode refid="47554" relation="include">
        </childnode>
      </node>
      <node id="47714">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MFIter.cpp</label>
        <link refid="AMReX__MFIter_8cpp"/>
      </node>
      <node id="47590">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFluxRegister.cpp</label>
        <link refid="AMReX__EBFluxRegister_8cpp"/>
      </node>
      <node id="47698">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_CommProfStats.H</label>
        <link refid="AMReX__CommProfStats_8H"/>
        <childnode refid="47694" relation="include">
        </childnode>
        <childnode refid="47695" relation="include">
        </childnode>
        <childnode refid="47696" relation="include">
        </childnode>
      </node>
      <node id="47674">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_MultiGFab.H</label>
        <link refid="AMReX__EB2__MultiGFab_8H"/>
        <childnode refid="47665" relation="include">
        </childnode>
        <childnode refid="47675" relation="include">
        </childnode>
      </node>
      <node id="47549">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BaseFab.cpp</label>
        <link refid="AMReX__BaseFab_8cpp"/>
      </node>
      <node id="47687">
        <label>/home/runner/work/amrex/amrex/Src/Extern/Conduit/AMReX_Conduit_Blueprint.H</label>
        <link refid="AMReX__Conduit__Blueprint_8H"/>
        <childnode refid="47688" relation="include">
        </childnode>
      </node>
      <node id="47626">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Geometry.cpp</label>
        <link refid="AMReX__Geometry_8cpp"/>
      </node>
      <node id="47654">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H</label>
        <link refid="AMReX__Hypre_8H"/>
        <childnode refid="47613" relation="include">
        </childnode>
        <childnode refid="47649" relation="include">
        </childnode>
        <childnode refid="47655" relation="include">
        </childnode>
        <childnode refid="47612" relation="include">
        </childnode>
      </node>
      <node id="47779">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMultiFabUtil_C.H</label>
        <link refid="AMReX__EBMultiFabUtil__C_8H"/>
        <childnode refid="47563" relation="include">
        </childnode>
      </node>
      <node id="47777">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.cpp</label>
        <link refid="AMReX__EBFArrayBox_8cpp"/>
      </node>
      <node id="47753">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H</label>
        <link refid="AMReX__ParIter_8H"/>
        <childnode refid="47579" relation="include">
        </childnode>
      </node>
      <node id="47575">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.cpp</label>
        <link refid="AMReX__MLTensorOp_8cpp"/>
      </node>
      <node id="47758">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_nd_C.H</label>
        <link refid="AMReX__MultiFabUtil__nd__C_8H"/>
        <childnode refid="47757" relation="include">
        </childnode>
      </node>
      <node id="47742">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_1D_C.H</label>
        <link refid="AMReX__FilCC__1D__C_8H"/>
      </node>
      <node id="47559">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_iMultiFab.cpp</label>
        <link refid="AMReX__iMultiFab_8cpp"/>
      </node>
      <node id="47724">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="47725" relation="include">
        </childnode>
        <childnode refid="47726" relation="include">
        </childnode>
        <childnode refid="47727" relation="include">
        </childnode>
        <childnode refid="47728" relation="include">
        </childnode>
        <childnode refid="47730" relation="include">
        </childnode>
        <childnode refid="47731" relation="include">
        </childnode>
        <childnode refid="47732" relation="include">
        </childnode>
        <childnode refid="47734" relation="include">
        </childnode>
        <childnode refid="47735" relation="include">
        </childnode>
        <childnode refid="47736" relation="include">
        </childnode>
        <childnode refid="47737" relation="include">
        </childnode>
        <childnode refid="47738" relation="include">
        </childnode>
        <childnode refid="47623" relation="include">
        </childnode>
        <childnode refid="47716" relation="include">
        </childnode>
        <childnode refid="47740" relation="include">
        </childnode>
        <childnode refid="47741" relation="include">
        </childnode>
        <childnode refid="47742" relation="include">
        </childnode>
        <childnode refid="47743" relation="include">
        </childnode>
        <childnode refid="47744" relation="include">
        </childnode>
        <childnode refid="47747" relation="include">
        </childnode>
        <childnode refid="47714" relation="include">
        </childnode>
        <childnode refid="47749" relation="include">
        </childnode>
        <childnode refid="47615" relation="include">
        </childnode>
        <childnode refid="47754" relation="include">
        </childnode>
        <childnode refid="47755" relation="include">
        </childnode>
        <childnode refid="47756" relation="include">
        </childnode>
        <childnode refid="47758" relation="include">
        </childnode>
        <childnode refid="47759" relation="include">
        </childnode>
        <childnode refid="47717" relation="include">
        </childnode>
        <childnode refid="47643" relation="include">
        </childnode>
        <childnode refid="47645" relation="include">
        </childnode>
        <childnode refid="47761" relation="include">
        </childnode>
        <childnode refid="47762" relation="include">
        </childnode>
        <childnode refid="47763" relation="include">
        </childnode>
        <childnode refid="47765" relation="include">
        </childnode>
        <childnode refid="47767" relation="include">
        </childnode>
        <childnode refid="47768" relation="include">
        </childnode>
        <childnode refid="47769" relation="include">
        </childnode>
        <childnode refid="47772" relation="include">
        </childnode>
        <childnode refid="47760" relation="include">
        </childnode>
        <childnode refid="47676" relation="include">
        </childnode>
        <childnode refid="47670" relation="include">
        </childnode>
        <childnode refid="47776" relation="include">
        </childnode>
        <childnode refid="47771" relation="include">
        </childnode>
        <childnode refid="47779" relation="include">
        </childnode>
        <childnode refid="47780" relation="include">
        </childnode>
        <childnode refid="47782" relation="include">
        </childnode>
        <childnode refid="47693" relation="include">
        </childnode>
        <childnode refid="47692" relation="include">
        </childnode>
        <childnode refid="47694" relation="include">
        </childnode>
        <childnode refid="47684" relation="include">
        </childnode>
        <childnode refid="47696" relation="include">
        </childnode>
        <childnode refid="47698" relation="include">
        </childnode>
        <childnode refid="47699" relation="include">
        </childnode>
        <childnode refid="47783" relation="include">
        </childnode>
        <childnode refid="47784" relation="include">
        </childnode>
        <childnode refid="47785" relation="include">
        </childnode>
        <childnode refid="47786" relation="include">
        </childnode>
        <childnode refid="47787" relation="include">
        </childnode>
        <childnode refid="47793" relation="include">
        </childnode>
        <childnode refid="47794" relation="include">
        </childnode>
        <childnode refid="47795" relation="include">
        </childnode>
        <childnode refid="47659" relation="include">
        </childnode>
        <childnode refid="47796" relation="include">
        </childnode>
        <childnode refid="47581" relation="include">
        </childnode>
        <childnode refid="47583" relation="include">
        </childnode>
      </node>
      <node id="47721">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_MultiMask.H</label>
        <link refid="AMReX__MultiMask_8H"/>
        <childnode refid="47643" relation="include">
        </childnode>
        <childnode refid="47653" relation="include">
        </childnode>
      </node>
      <node id="47664">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H</label>
        <link refid="AMReX__algoim__K_8H"/>
        <childnode refid="47663" relation="include">
        </childnode>
      </node>
      <node id="47618">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Extrapolater.H</label>
        <link refid="AMReX__Extrapolater_8H"/>
        <childnode refid="47554" relation="include">
        </childnode>
      </node>
      <node id="47708">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H</label>
        <link refid="AMReX__ParticleLocator_8H"/>
        <childnode refid="47579" relation="include">
        </childnode>
      </node>
      <node id="47675">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_MultiGFab.cpp</label>
        <link refid="AMReX__EB2__MultiGFab_8cpp"/>
      </node>
      <node id="47592">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H</label>
        <link refid="AMReX__MLCellLinOp_8H"/>
        <childnode refid="47593" relation="include">
        </childnode>
        <childnode refid="47568" relation="include">
        </childnode>
        <childnode refid="47603" relation="include">
        </childnode>
      </node>
      <node id="47637">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileUtil.H</label>
        <link refid="AMReX__PlotFileUtil_8H"/>
        <childnode refid="47526" relation="include">
        </childnode>
        <childnode refid="47638" relation="include">
        </childnode>
        <childnode refid="47639" relation="include">
        </childnode>
      </node>
      <node id="47693">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLProfStats.cpp</label>
        <link refid="AMReX__BLProfStats_8cpp"/>
      </node>
      <node id="47679">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.cpp</label>
        <link refid="AMReX__MultiCutFab_8cpp"/>
      </node>
      <node id="47722">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H</label>
        <link refid="AMReX__MultiCutFab_8H"/>
        <childnode refid="47665" relation="include">
        </childnode>
        <childnode refid="47669" relation="include">
        </childnode>
        <childnode refid="47673" relation="include">
        </childnode>
        <childnode refid="47563" relation="include">
        </childnode>
        <childnode refid="47679" relation="include">
        </childnode>
        <childnode refid="47671" relation="include">
        </childnode>
      </node>
      <node id="47691">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreIJIface.H</label>
        <link refid="AMReX__HypreIJIface_8H"/>
        <childnode refid="47612" relation="include">
        </childnode>
        <childnode refid="47639" relation="include">
        </childnode>
        <childnode refid="47564" relation="include">
        </childnode>
      </node>
      <node id="47761">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData_1D_K.H</label>
        <link refid="AMReX__InterpBndryData__1D__K_8H"/>
      </node>
      <node id="47543">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H</label>
        <link refid="AMReX__ErrorList_8H"/>
        <childnode refid="47544" relation="include">
        </childnode>
      </node>
      <node id="47765">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_Mask.H</label>
        <link refid="AMReX__Mask_8H"/>
        <childnode refid="47766" relation="include">
        </childnode>
        <childnode refid="47721" relation="include">
        </childnode>
      </node>
      <node id="47684">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.H</label>
        <link refid="AMReX__BLWritePlotFile_8H"/>
        <childnode refid="47685" relation="include">
        </childnode>
      </node>
      <node id="47731">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interp_2D_C.H</label>
        <link refid="AMReX__Interp__2D__C_8H"/>
      </node>
      <node id="47667">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.cpp</label>
        <link refid="AMReX__EB2_8cpp"/>
      </node>
      <node id="47642">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H</label>
        <link refid="AMReX__FluxRegister_8H"/>
        <childnode refid="47558" relation="include">
        </childnode>
      </node>
      <node id="47723">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.cpp</label>
        <link refid="AMReX__BoxArray_8cpp"/>
      </node>
      <node id="47680">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_WriteEBSurface.H</label>
        <link refid="AMReX__WriteEBSurface_8H"/>
        <childnode refid="47671" relation="include">
        </childnode>
      </node>
      <node id="47632">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Derive.cpp</label>
        <link refid="AMReX__Derive_8cpp"/>
      </node>
      <node id="47696">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_CommProfStats.cpp</label>
        <link refid="AMReX__CommProfStats_8cpp"/>
      </node>
      <node id="47727">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxReg_2D_C.H</label>
        <link refid="AMReX__FluxReg__2D__C_8H"/>
      </node>
      <node id="47756">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_3D_C.H</label>
        <link refid="AMReX__MultiFabUtil__3D__C_8H"/>
        <childnode refid="47757" relation="include">
        </childnode>
      </node>
      <node id="47604">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H</label>
        <link refid="AMReX__MLCGSolver_8H"/>
        <childnode refid="47605" relation="include">
        </childnode>
        <childnode refid="47606" relation="include">
        </childnode>
      </node>
      <node id="47751">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_InSituUtils.H</label>
        <link refid="AMReX__InSituUtils_8H"/>
        <childnode refid="47533" relation="include">
        </childnode>
        <childnode refid="47541" relation="include">
        </childnode>
        <childnode refid="47752" relation="include">
        </childnode>
      </node>
      <node id="47735">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_CoordSys.cpp</label>
        <link refid="AMReX__CoordSys_8cpp"/>
      </node>
      <node id="47748">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilND_C.cpp</label>
        <link refid="AMReX__FilND__C_8cpp"/>
      </node>
      <node id="47706">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTransformation.H</label>
        <link refid="AMReX__ParticleTransformation_8H"/>
        <childnode refid="47579" relation="include">
        </childnode>
      </node>
      <node id="47704">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.cpp</label>
        <link refid="AMReX__ParticleCommunication_8cpp"/>
      </node>
      <node id="47738">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_COORDSYS_3D_C.H</label>
        <link refid="AMReX__COORDSYS__3D__C_8H"/>
        <childnode refid="47739" relation="include">
        </childnode>
      </node>
      <node id="47668">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_utils.H</label>
        <link refid="AMReX__EB__utils_8H"/>
        <childnode refid="47669" relation="include">
        </childnode>
      </node>
      <node id="47563">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMultiFabUtil.cpp</label>
        <link refid="AMReX__EBMultiFabUtil_8cpp"/>
      </node>
      <node id="47657">
        <label>/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H</label>
        <link refid="AMReX__PETSc_8H"/>
        <childnode refid="47658" relation="include">
        </childnode>
      </node>
      <node id="47566">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.cpp</label>
        <link refid="AMReX__MLABecLaplacian_8cpp"/>
      </node>
      <node id="47529">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Amr.H</label>
        <link refid="AMReX__Amr_8H"/>
        <childnode refid="47526" relation="include">
        </childnode>
        <childnode refid="47530" relation="include">
        </childnode>
        <childnode refid="47532" relation="include">
        </childnode>
        <childnode refid="47534" relation="include">
        </childnode>
        <childnode refid="47535" relation="include">
        </childnode>
      </node>
      <node id="47659">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_K.H</label>
        <link refid="AMReX__MLTensor__K_8H"/>
        <childnode refid="47570" relation="include">
        </childnode>
        <childnode refid="47575" relation="include">
        </childnode>
      </node>
      <node id="47638">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileUtil.cpp</label>
        <link refid="AMReX__PlotFileUtil_8cpp"/>
      </node>
      <node id="47791">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_2D_K.H</label>
        <link refid="AMReX__MLTensor__2D__K_8H"/>
      </node>
      <node id="47544">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.cpp</label>
        <link refid="AMReX__ErrorList_8cpp"/>
      </node>
      <node id="47615">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="47530" relation="include">
        </childnode>
        <childnode refid="47616" relation="include">
        </childnode>
        <childnode refid="47618" relation="include">
        </childnode>
        <childnode refid="47619" relation="include">
        </childnode>
        <childnode refid="47543" relation="include">
        </childnode>
        <childnode refid="47556" relation="include">
        </childnode>
        <childnode refid="47548" relation="include">
        </childnode>
        <childnode refid="47621" relation="include">
        </childnode>
        <childnode refid="47623" relation="include">
        </childnode>
        <childnode refid="47624" relation="include">
        </childnode>
        <childnode refid="47626" relation="include">
        </childnode>
        <childnode refid="47627" relation="include">
        </childnode>
        <childnode refid="47560" relation="include">
        </childnode>
        <childnode refid="47561" relation="include">
        </childnode>
        <childnode refid="47630" relation="include">
        </childnode>
        <childnode refid="47635" relation="include">
        </childnode>
        <childnode refid="47637" relation="include">
        </childnode>
        <childnode refid="47640" relation="include">
        </childnode>
        <childnode refid="47587" relation="include">
        </childnode>
        <childnode refid="47662" relation="include">
        </childnode>
        <childnode refid="47665" relation="include">
        </childnode>
        <childnode refid="47674" relation="include">
        </childnode>
        <childnode refid="47676" relation="include">
        </childnode>
        <childnode refid="47669" relation="include">
        </childnode>
        <childnode refid="47668" relation="include">
        </childnode>
        <childnode refid="47546" relation="include">
        </childnode>
        <childnode refid="47673" relation="include">
        </childnode>
        <childnode refid="47678" relation="include">
        </childnode>
        <childnode refid="47679" relation="include">
        </childnode>
        <childnode refid="47671" relation="include">
        </childnode>
        <childnode refid="47680" relation="include">
        </childnode>
        <childnode refid="47681" relation="include">
        </childnode>
        <childnode refid="47687" relation="include">
        </childnode>
        <childnode refid="47689" relation="include">
        </childnode>
        <childnode refid="47654" relation="include">
        </childnode>
        <childnode refid="47649" relation="include">
        </childnode>
        <childnode refid="47691" relation="include">
        </childnode>
        <childnode refid="47564" relation="include">
        </childnode>
        <childnode refid="47657" relation="include">
        </childnode>
        <childnode refid="47692" relation="include">
        </childnode>
        <childnode refid="47694" relation="include">
        </childnode>
        <childnode refid="47684" relation="include">
        </childnode>
        <childnode refid="47698" relation="include">
        </childnode>
        <childnode refid="47540" relation="include">
        </childnode>
        <childnode refid="47542" relation="include">
        </childnode>
        <childnode refid="47604" relation="include">
        </childnode>
        <childnode refid="47591" relation="include">
        </childnode>
        <childnode refid="47577" relation="include">
        </childnode>
        <childnode refid="47607" relation="include">
        </childnode>
        <childnode refid="47578" relation="include">
        </childnode>
        <childnode refid="47700" relation="include">
        </childnode>
        <childnode refid="47709" relation="include">
        </childnode>
        <childnode refid="47710" relation="include">
        </childnode>
      </node>
      <node id="47658">
        <label>/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp</label>
        <link refid="AMReX__PETSc_8cpp"/>
      </node>
      <node id="47782">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Habec_K.H</label>
        <link refid="AMReX__Habec__K_8H"/>
        <childnode refid="47650" relation="include">
        </childnode>
        <childnode refid="47656" relation="include">
        </childnode>
        <childnode refid="47614" relation="include">
        </childnode>
        <childnode refid="47658" relation="include">
        </childnode>
      </node>
      <node id="47757">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_C.H</label>
        <link refid="AMReX__MultiFabUtil__C_8H"/>
        <childnode refid="47561" relation="include">
        </childnode>
        <childnode refid="47563" relation="include">
        </childnode>
      </node>
      <node id="47619">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateData.H</label>
        <link refid="AMReX__StateData_8H"/>
        <childnode refid="47526" relation="include">
        </childnode>
        <childnode refid="47530" relation="include">
        </childnode>
        <childnode refid="47620" relation="include">
        </childnode>
        <childnode refid="47533" relation="include">
        </childnode>
      </node>
      <node id="47776">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H</label>
        <link refid="AMReX__EBFArrayBox_8H"/>
        <childnode refid="47669" relation="include">
        </childnode>
        <childnode refid="47547" relation="include">
        </childnode>
        <childnode refid="47670" relation="include">
        </childnode>
        <childnode refid="47777" relation="include">
        </childnode>
        <childnode refid="47590" relation="include">
        </childnode>
        <childnode refid="47778" relation="include">
        </childnode>
        <childnode refid="47563" relation="include">
        </childnode>
        <childnode refid="47671" relation="include">
        </childnode>
        <childnode refid="47569" relation="include">
        </childnode>
      </node>
      <node id="47781">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_XYPlotDataList.cpp</label>
        <link refid="AMReX__XYPlotDataList_8cpp"/>
      </node>
      <node id="47718">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BLBackTrace.cpp</label>
        <link refid="AMReX__BLBackTrace_8cpp"/>
      </node>
      <node id="47593">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.H</label>
        <link refid="AMReX__MLCellABecLap_8H"/>
        <childnode refid="47594" relation="include">
        </childnode>
        <childnode refid="47597" relation="include">
        </childnode>
        <childnode refid="47599" relation="include">
        </childnode>
        <childnode refid="47600" relation="include">
        </childnode>
        <childnode refid="47602" relation="include">
        </childnode>
      </node>
      <node id="47545">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.cpp</label>
        <link refid="AMReX__TagBox_8cpp"/>
      </node>
      <node id="47733">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interp_C.H</label>
        <link refid="AMReX__Interp__C_8H"/>
        <childnode refid="47734" relation="include">
        </childnode>
      </node>
      <node id="47655">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap2.H</label>
        <link refid="AMReX__HypreABecLap2_8H"/>
        <childnode refid="47613" relation="include">
        </childnode>
        <childnode refid="47656" relation="include">
        </childnode>
      </node>
      <node id="47557">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatchUtil.cpp</label>
        <link refid="AMReX__FillPatchUtil_8cpp"/>
      </node>
      <node id="47646">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.cpp</label>
        <link refid="AMReX__InterpBndryData_8cpp"/>
      </node>
      <node id="47629">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp</label>
        <link refid="AMReX__AmrData_8cpp"/>
      </node>
      <node id="47560">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFab.cpp</label>
        <link refid="AMReX__MultiFab_8cpp"/>
      </node>
      <node id="47623">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.cpp</label>
        <link refid="AMReX__DistributionMapping_8cpp"/>
      </node>
      <node id="47610">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLaplacian.H</label>
        <link refid="AMReX__MLNodeTensorLaplacian_8H"/>
        <childnode refid="47611" relation="include">
        </childnode>
        <childnode refid="47574" relation="include">
        </childnode>
      </node>
      <node id="47552">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="47553" relation="include">
        </childnode>
        <childnode refid="47560" relation="include">
        </childnode>
        <childnode refid="47615" relation="include">
        </childnode>
        <childnode refid="47638" relation="include">
        </childnode>
        <childnode refid="47712" relation="include">
        </childnode>
      </node>
      <node id="47621">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BCUtil.H</label>
        <link refid="AMReX__BCUtil_8H"/>
        <childnode refid="47622" relation="include">
        </childnode>
      </node>
      <node id="47673">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp</label>
        <link refid="AMReX__EBDataCollection_8cpp"/>
      </node>
      <node id="47609">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.H</label>
        <link refid="AMReX__MLNodeLaplacian_8H"/>
        <childnode refid="47565" relation="include">
        </childnode>
        <childnode refid="47572" relation="include">
        </childnode>
        <childnode refid="47577" relation="include">
        </childnode>
        <childnode refid="47607" relation="include">
        </childnode>
      </node>
      <node id="47555">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatchUtil_I.H</label>
        <link refid="AMReX__FillPatchUtil__I_8H"/>
        <childnode refid="47556" relation="include">
        </childnode>
      </node>
      <node id="47595">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.H</label>
        <link refid="AMReX__MLTensorOp_8H"/>
        <childnode refid="47575" relation="include">
        </childnode>
      </node>
      <node id="47767">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister_1D_K.H</label>
        <link refid="AMReX__YAFluxRegister__1D__K_8H"/>
      </node>
      <node id="47542">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshInSituBridge.cpp</label>
        <link refid="AMReX__AmrMeshInSituBridge_8cpp"/>
      </node>
      <node id="47766">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_Mask.cpp</label>
        <link refid="AMReX__Mask_8cpp"/>
      </node>
      <node id="47600">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.H</label>
        <link refid="AMReX__MLEBABecLap_8H"/>
        <childnode refid="47569" relation="include">
        </childnode>
        <childnode refid="47570" relation="include">
        </childnode>
        <childnode refid="47601" relation="include">
        </childnode>
      </node>
      <node id="47747">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilND_C.H</label>
        <link refid="AMReX__FilND__C_8H"/>
        <childnode refid="47748" relation="include">
        </childnode>
        <childnode refid="47630" relation="include">
        </childnode>
      </node>
      <node id="47611">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLap_K.H</label>
        <link refid="AMReX__MLNodeTensorLap__K_8H"/>
        <childnode refid="47574" relation="include">
        </childnode>
      </node>
      <node id="47538">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParticles.H</label>
        <link refid="AMReX__AmrParticles_8H"/>
      </node>
      <node id="47678">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMultiFabUtil.H</label>
        <link refid="AMReX__EBMultiFabUtil_8H"/>
        <childnode refid="47563" relation="include">
        </childnode>
        <childnode refid="47569" relation="include">
        </childnode>
        <childnode refid="47570" relation="include">
        </childnode>
      </node>
      <node id="47602">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.H</label>
        <link refid="AMReX__MLPoisson_8H"/>
        <childnode refid="47598" relation="include">
        </childnode>
        <childnode refid="47596" relation="include">
        </childnode>
      </node>
      <node id="47627">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MFCopyDescriptor.H</label>
        <link refid="AMReX__MFCopyDescriptor_8H"/>
        <childnode refid="47619" relation="include">
        </childnode>
        <childnode refid="47628" relation="include">
        </childnode>
        <childnode refid="47629" relation="include">
        </childnode>
      </node>
      <node id="47771">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFluxRegister_C.H</label>
        <link refid="AMReX__EBFluxRegister__C_8H"/>
        <childnode refid="47590" relation="include">
        </childnode>
      </node>
      <node id="47732">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interp_3D_C.H</label>
        <link refid="AMReX__Interp__3D__C_8H"/>
        <childnode refid="47733" relation="include">
        </childnode>
      </node>
      <node id="47596">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H</label>
        <link refid="AMReX__MacProjector_8H"/>
        <childnode refid="47576" relation="include">
        </childnode>
      </node>
      <node id="47531">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp</label>
        <link refid="AMReX__AmrLevel_8cpp"/>
      </node>
      <node id="47745">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_C.H</label>
        <link refid="AMReX__FilCC__C_8H"/>
        <childnode refid="47746" relation="include">
        </childnode>
        <childnode refid="47630" relation="include">
        </childnode>
      </node>
      <node id="47639">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreIJIface.cpp</label>
        <link refid="AMReX__HypreIJIface_8cpp"/>
      </node>
      <node id="47705">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleUtil.H</label>
        <link refid="AMReX__ParticleUtil_8H"/>
        <childnode refid="47578" relation="include">
        </childnode>
        <childnode refid="47579" relation="include">
        </childnode>
        <childnode refid="47706" relation="include">
        </childnode>
        <childnode refid="47707" relation="include">
        </childnode>
        <childnode refid="47585" relation="include">
        </childnode>
      </node>
      <node id="47570">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.cpp</label>
        <link refid="AMReX__MLEBTensorOp_8cpp"/>
      </node>
      <node id="47571">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.cpp</label>
        <link refid="AMReX__MLMG_8cpp"/>
      </node>
      <node id="47565">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp</label>
        <link refid="AMReX__HypreNodeLap_8cpp"/>
      </node>
      <node id="47726">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxReg_1D_C.H</label>
        <link refid="AMReX__FluxReg__1D__C_8H"/>
      </node>
      <node id="47755">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_2D_C.H</label>
        <link refid="AMReX__MultiFabUtil__2D__C_8H"/>
      </node>
      <node id="47620">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateData.cpp</label>
        <link refid="AMReX__StateData_8cpp"/>
      </node>
      <node id="47796">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H</label>
        <link refid="AMReX__Particle_8H"/>
        <childnode refid="47797" relation="include">
        </childnode>
        <childnode refid="47579" relation="include">
        </childnode>
        <childnode refid="47798" relation="include">
        </childnode>
      </node>
      <node id="47752">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_InSituUtils.cpp</label>
        <link refid="AMReX__InSituUtils_8cpp"/>
      </node>
      <node id="47644">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_BndryData.cpp</label>
        <link refid="AMReX__BndryData_8cpp"/>
      </node>
      <node id="47534">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H</label>
        <link refid="AMReX__AmrDataAdaptor_8H"/>
        <childnode refid="47533" relation="include">
        </childnode>
      </node>
      <node id="47759">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Slopes_K.H</label>
        <link refid="AMReX__Slopes__K_8H"/>
        <childnode refid="47760" relation="include">
        </childnode>
      </node>
      <node id="47583">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticle_mod_K.H</label>
        <link refid="AMReX__TracerParticle__mod__K_8H"/>
        <childnode refid="47584" relation="include">
        </childnode>
      </node>
      <node id="47743">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_2D_C.H</label>
        <link refid="AMReX__FilCC__2D__C_8H"/>
      </node>
      <node id="47737">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_COORDSYS_2D_C.H</label>
        <link refid="AMReX__COORDSYS__2D__C_8H"/>
      </node>
      <node id="47562">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil.cpp</label>
        <link refid="AMReX__MultiFabUtil_8cpp"/>
      </node>
      <node id="47717">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMF.H</label>
        <link refid="AMReX__VisMF_8H"/>
        <childnode refid="47531" relation="include">
        </childnode>
        <childnode refid="47530" relation="include">
        </childnode>
        <childnode refid="47619" relation="include">
        </childnode>
        <childnode refid="47548" relation="include">
        </childnode>
        <childnode refid="47718" relation="include">
        </childnode>
        <childnode refid="47623" relation="include">
        </childnode>
        <childnode refid="47719" relation="include">
        </childnode>
        <childnode refid="47636" relation="include">
        </childnode>
        <childnode refid="47635" relation="include">
        </childnode>
        <childnode refid="47638" relation="include">
        </childnode>
        <childnode refid="47712" relation="include">
        </childnode>
        <childnode refid="47661" relation="include">
        </childnode>
        <childnode refid="47665" relation="include">
        </childnode>
        <childnode refid="47563" relation="include">
        </childnode>
        <childnode refid="47629" relation="include">
        </childnode>
        <childnode refid="47681" relation="include">
        </childnode>
        <childnode refid="47614" relation="include">
        </childnode>
        <childnode refid="47565" relation="include">
        </childnode>
        <childnode refid="47605" relation="include">
        </childnode>
        <childnode refid="47591" relation="include">
        </childnode>
        <childnode refid="47571" relation="include">
        </childnode>
        <childnode refid="47579" relation="include">
        </childnode>
      </node>
      <node id="47784">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLALap_K.H</label>
        <link refid="AMReX__MLALap__K_8H"/>
        <childnode refid="47567" relation="include">
        </childnode>
      </node>
      <node id="47792">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_3D_K.H</label>
        <link refid="AMReX__MLTensor__3D__K_8H"/>
        <childnode refid="47659" relation="include">
        </childnode>
      </node>
      <node id="47652">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.cpp</label>
        <link refid="AMReX__MLMGBndry_8cpp"/>
      </node>
      <node id="47636">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileDataImpl.cpp</label>
        <link refid="AMReX__PlotFileDataImpl_8cpp"/>
      </node>
      <node id="47746">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_C.cpp</label>
        <link refid="AMReX__FilCC__C_8cpp"/>
      </node>
      <node id="47580">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborList.H</label>
        <link refid="AMReX__NeighborList_8H"/>
        <childnode refid="47578" relation="include">
        </childnode>
      </node>
      <node id="47762">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData_2D_K.H</label>
        <link refid="AMReX__InterpBndryData__2D__K_8H"/>
      </node>
      <node id="47567">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.cpp</label>
        <link refid="AMReX__MLALaplacian_8cpp"/>
      </node>
      <node id="47526">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Amr.cpp</label>
        <link refid="AMReX__Amr_8cpp"/>
      </node>
      <node id="47785">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap_K.H</label>
        <link refid="AMReX__MLCellABecLap__K_8H"/>
        <childnode refid="47599" relation="include">
        </childnode>
      </node>
      <node id="47546">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBAmrUtil.H</label>
        <link refid="AMReX__EBAmrUtil_8H"/>
        <childnode refid="47547" relation="include">
        </childnode>
      </node>
      <node id="47715">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.H</label>
        <link refid="AMReX__NonLocalBC_8H"/>
        <childnode refid="47716" relation="include">
        </childnode>
      </node>
      <node id="47783">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLap_K.H</label>
        <link refid="AMReX__MLABecLap__K_8H"/>
        <childnode refid="47566" relation="include">
        </childnode>
        <childnode refid="47569" relation="include">
        </childnode>
        <childnode refid="47575" relation="include">
        </childnode>
      </node>
      <node id="47719">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H</label>
        <link refid="AMReX__NFiles_8H"/>
        <childnode refid="47720" relation="include">
        </childnode>
        <childnode refid="47712" relation="include">
        </childnode>
        <childnode refid="47579" relation="include">
        </childnode>
      </node>
      <node id="47760">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_slopes_K.H</label>
        <link refid="AMReX__EB__slopes__K_8H"/>
      </node>
      <node id="47532">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H</label>
        <link refid="AMReX__LevelBld_8H"/>
        <childnode refid="47526" relation="include">
        </childnode>
      </node>
      <node id="47568">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.cpp</label>
        <link refid="AMReX__MLCellLinOp_8cpp"/>
      </node>
      <node id="47539">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrMesh.cpp</label>
        <link refid="AMReX__AmrMesh_8cpp"/>
      </node>
      <node id="47613">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.cpp</label>
        <link refid="AMReX__Hypre_8cpp"/>
      </node>
      <node id="47606">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H</label>
        <link refid="AMReX__MLMG_8H"/>
        <childnode refid="47605" relation="include">
        </childnode>
        <childnode refid="47571" relation="include">
        </childnode>
        <childnode refid="47572" relation="include">
        </childnode>
        <childnode refid="47596" relation="include">
        </childnode>
        <childnode refid="47577" relation="include">
        </childnode>
        <childnode refid="47607" relation="include">
        </childnode>
      </node>
      <node id="47772">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_C.H</label>
        <link refid="AMReX__EB2__C_8H"/>
        <childnode refid="47773" relation="include">
        </childnode>
        <childnode refid="47774" relation="include">
        </childnode>
        <childnode refid="47665" relation="include">
        </childnode>
        <childnode refid="47675" relation="include">
        </childnode>
        <childnode refid="47775" relation="include">
        </childnode>
      </node>
      <node id="47612">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H</label>
        <link refid="AMReX__HypreABecLap3_8H"/>
        <childnode refid="47613" relation="include">
        </childnode>
        <childnode refid="47614" relation="include">
        </childnode>
      </node>
      <node id="47692">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLProfStats.H</label>
        <link refid="AMReX__BLProfStats_8H"/>
        <childnode refid="47693" relation="include">
        </childnode>
        <childnode refid="47694" relation="include">
        </childnode>
        <childnode refid="47695" relation="include">
        </childnode>
        <childnode refid="47698" relation="include">
        </childnode>
        <childnode refid="47699" relation="include">
        </childnode>
      </node>
      <node id="47556">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatchUtil.H</label>
        <link refid="AMReX__FillPatchUtil_8H"/>
        <childnode refid="47531" relation="include">
        </childnode>
        <childnode refid="47538" relation="include">
        </childnode>
        <childnode refid="47557" relation="include">
        </childnode>
      </node>
      <node id="47734">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.cpp</label>
        <link refid="AMReX__Interpolater_8cpp"/>
      </node>
      <node id="47528">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrCore.H</label>
        <link refid="AMReX__AmrCore_8H"/>
        <childnode refid="47529" relation="include">
        </childnode>
        <childnode refid="47536" relation="include">
        </childnode>
        <childnode refid="47537" relation="include">
        </childnode>
      </node>
      <node id="47660">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_BndryRegister.cpp</label>
        <link refid="AMReX__BndryRegister_8cpp"/>
      </node>
      <node id="47523">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="47524" relation="include">
        </childnode>
        <childnode refid="47807" relation="include">
        </childnode>
      </node>
      <node id="47631">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateDescriptor.H</label>
        <link refid="AMReX__StateDescriptor_8H"/>
        <childnode refid="47530" relation="include">
        </childnode>
        <childnode refid="47632" relation="include">
        </childnode>
        <childnode refid="47620" relation="include">
        </childnode>
        <childnode refid="47619" relation="include">
        </childnode>
        <childnode refid="47633" relation="include">
        </childnode>
      </node>
      <node id="47640">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_FabSet.H</label>
        <link refid="AMReX__FabSet_8H"/>
        <childnode refid="47526" relation="include">
        </childnode>
        <childnode refid="47641" relation="include">
        </childnode>
        <childnode refid="47661" relation="include">
        </childnode>
      </node>
      <node id="47701">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleBufferMap.H</label>
        <link refid="AMReX__ParticleBufferMap_8H"/>
        <childnode refid="47702" relation="include">
        </childnode>
        <childnode refid="47703" relation="include">
        </childnode>
        <childnode refid="47579" relation="include">
        </childnode>
        <childnode refid="47705" relation="include">
        </childnode>
      </node>
      <node id="47558">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp</label>
        <link refid="AMReX__FluxRegister_8cpp"/>
      </node>
      <node id="47690">
        <label>/home/runner/work/amrex/amrex/Src/Extern/hpgmg/BL_HPGMG.cpp</label>
        <link refid="BL__HPGMG_8cpp"/>
      </node>
      <node id="47581">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle_mod_K.H</label>
        <link refid="AMReX__Particle__mod__K_8H"/>
        <childnode refid="47579" relation="include">
        </childnode>
      </node>
      <node id="47527">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrMesh.H</label>
        <link refid="AMReX__AmrMesh_8H"/>
        <childnode refid="47528" relation="include">
        </childnode>
        <childnode refid="47539" relation="include">
        </childnode>
        <childnode refid="47540" relation="include">
        </childnode>
        <childnode refid="47542" relation="include">
        </childnode>
      </node>
      <node id="47577">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_NodalProjector.cpp</label>
        <link refid="AMReX__NodalProjector_8cpp"/>
      </node>
      <node id="47597">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.H</label>
        <link refid="AMReX__MLALaplacian_8H"/>
        <childnode refid="47567" relation="include">
        </childnode>
        <childnode refid="47598" relation="include">
        </childnode>
      </node>
      <node id="47601">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.H</label>
        <link refid="AMReX__MLEBTensorOp_8H"/>
        <childnode refid="47570" relation="include">
        </childnode>
      </node>
      <node id="47786">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_K.H</label>
        <link refid="AMReX__MLEBTensor__K_8H"/>
        <childnode refid="47570" relation="include">
        </childnode>
      </node>
      <node id="47686">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_ProfParserBatch.cpp</label>
        <link refid="AMReX__ProfParserBatch_8cpp"/>
      </node>
      <node id="47584">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticles.cpp</label>
        <link refid="AMReX__TracerParticles_8cpp"/>
      </node>
      <node id="47573">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.cpp</label>
        <link refid="AMReX__MLNodeLinOp_8cpp"/>
      </node>
      <node id="47633">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateDescriptor.cpp</label>
        <link refid="AMReX__StateDescriptor_8cpp"/>
      </node>
      <node id="47663">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.cpp</label>
        <link refid="AMReX__algoim_8cpp"/>
      </node>
      <node id="47616">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AuxBoundaryData.H</label>
        <link refid="AMReX__AuxBoundaryData_8H"/>
        <childnode refid="47617" relation="include">
        </childnode>
      </node>
      <node id="47713">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H</label>
        <link refid="AMReX__FACopyDescriptor_8H"/>
        <childnode refid="47627" relation="include">
        </childnode>
      </node>
      <node id="47576">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp</label>
        <link refid="AMReX__MacProjector_8cpp"/>
      </node>
      <node id="47749">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="47723" relation="include">
        </childnode>
        <childnode refid="47551" relation="include">
        </childnode>
        <childnode refid="47750" relation="include">
        </childnode>
        <childnode refid="47714" relation="include">
        </childnode>
        <childnode refid="47561" relation="include">
        </childnode>
        <childnode refid="47533" relation="include">
        </childnode>
        <childnode refid="47541" relation="include">
        </childnode>
        <childnode refid="47751" relation="include">
        </childnode>
        <childnode refid="47753" relation="include">
        </childnode>
        <childnode refid="47703" relation="include">
        </childnode>
        <childnode refid="47705" relation="include">
        </childnode>
      </node>
      <node id="47572">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.cpp</label>
        <link refid="AMReX__MLNodeLaplacian_8cpp"/>
      </node>
      <node id="47688">
        <label>/home/runner/work/amrex/amrex/Src/Extern/Conduit/AMReX_Conduit_Blueprint.cpp</label>
        <link refid="AMReX__Conduit__Blueprint_8cpp"/>
      </node>
      <node id="47707">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleUtil.cpp</label>
        <link refid="AMReX__ParticleUtil_8cpp"/>
      </node>
      <node id="47744">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_3D_C.H</label>
        <link refid="AMReX__FilCC__3D__C_8H"/>
        <childnode refid="47745" relation="include">
        </childnode>
      </node>
      <node id="47699">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_RegionsProfStats.H</label>
        <link refid="AMReX__RegionsProfStats_8H"/>
        <childnode refid="47693" relation="include">
        </childnode>
        <childnode refid="47694" relation="include">
        </childnode>
        <childnode refid="47695" relation="include">
        </childnode>
        <childnode refid="47697" relation="include">
        </childnode>
      </node>
      <node id="47787">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp_K.H</label>
        <link refid="AMReX__MLLinOp__K_8H"/>
        <childnode refid="47599" relation="include">
        </childnode>
        <childnode refid="47568" relation="include">
        </childnode>
        <childnode refid="47569" relation="include">
        </childnode>
        <childnode refid="47788" relation="include">
        </childnode>
        <childnode refid="47791" relation="include">
        </childnode>
        <childnode refid="47792" relation="include">
        </childnode>
      </node>
      <node id="47806">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap_3D_K.H</label>
        <link refid="AMReX__MLEBABecLap__3D__K_8H"/>
        <childnode refid="47788" relation="include">
        </childnode>
      </node>
      <node id="47695">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLProfUtilities.H</label>
        <link refid="AMReX__BLProfUtilities_8H"/>
        <childnode refid="47693" relation="include">
        </childnode>
        <childnode refid="47694" relation="include">
        </childnode>
        <childnode refid="47696" relation="include">
        </childnode>
        <childnode refid="47697" relation="include">
        </childnode>
      </node>
      <node id="47643">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_BndryData.H</label>
        <link refid="AMReX__BndryData_8H"/>
        <childnode refid="47644" relation="include">
        </childnode>
        <childnode refid="47645" relation="include">
        </childnode>
        <childnode refid="47653" relation="include">
        </childnode>
        <childnode refid="47654" relation="include">
        </childnode>
        <childnode refid="47564" relation="include">
        </childnode>
        <childnode refid="47657" relation="include">
        </childnode>
        <childnode refid="47659" relation="include">
        </childnode>
      </node>
      <node id="47617">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AuxBoundaryData.cpp</label>
        <link refid="AMReX__AuxBoundaryData_8cpp"/>
      </node>
      <node id="47720">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp</label>
        <link refid="AMReX__NFiles_8cpp"/>
      </node>
      <node id="47569">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.cpp</label>
        <link refid="AMReX__MLEBABecLap_8cpp"/>
      </node>
      <node id="47763">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData_3D_K.H</label>
        <link refid="AMReX__InterpBndryData__3D__K_8H"/>
        <childnode refid="47764" relation="include">
        </childnode>
      </node>
      <node id="47547">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBAmrUtil.cpp</label>
        <link refid="AMReX__EBAmrUtil_8cpp"/>
      </node>
      <node id="47789">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_2D_K.H</label>
        <link refid="AMReX__MLEBTensor__2D__K_8H"/>
      </node>
      <node id="47653">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_MultiMask.cpp</label>
        <link refid="AMReX__MultiMask_8cpp"/>
      </node>
      <node id="47598">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.cpp</label>
        <link refid="AMReX__MLPoisson_8cpp"/>
      </node>
      <node id="47797">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H</label>
        <link refid="AMReX__ArrayOfStructs_8H"/>
        <childnode refid="47579" relation="include">
        </childnode>
        <childnode refid="47798" relation="include">
        </childnode>
      </node>
      <node id="47809">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFabFactory.H</label>
        <link refid="AMReX__EBFabFactory_8H"/>
        <childnode refid="47669" relation="include">
        </childnode>
        <childnode refid="47670" relation="include">
        </childnode>
        <childnode refid="47563" relation="include">
        </childnode>
        <childnode refid="47600" relation="include">
        </childnode>
      </node>
      <node id="47533">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp</label>
        <link refid="AMReX__AmrDataAdaptor_8cpp"/>
      </node>
      <node id="47795">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson_K.H</label>
        <link refid="AMReX__MLPoisson__K_8H"/>
        <childnode refid="47598" relation="include">
        </childnode>
      </node>
      <node id="47750">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="47530" relation="include">
        </childnode>
        <childnode refid="47551" relation="include">
        </childnode>
        <childnode refid="47552" relation="include">
        </childnode>
        <childnode refid="47561" relation="include">
        </childnode>
        <childnode refid="47643" relation="include">
        </childnode>
        <childnode refid="47665" relation="include">
        </childnode>
        <childnode refid="47674" relation="include">
        </childnode>
        <childnode refid="47612" relation="include">
        </childnode>
        <childnode refid="47564" relation="include">
        </childnode>
        <childnode refid="47657" relation="include">
        </childnode>
      </node>
      <node id="47739">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_COORDSYS_C.H</label>
        <link refid="AMReX__COORDSYS__C_8H"/>
        <childnode refid="47735" relation="include">
        </childnode>
      </node>
      <node id="47740">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabConv.cpp</label>
        <link refid="AMReX__FabConv_8cpp"/>
      </node>
      <node id="47700">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParGDB.H</label>
        <link refid="AMReX__ParGDB_8H"/>
        <childnode refid="47537" relation="include">
        </childnode>
        <childnode refid="47701" relation="include">
        </childnode>
        <childnode refid="47708" relation="include">
        </childnode>
        <childnode refid="47579" relation="include">
        </childnode>
        <childnode refid="47705" relation="include">
        </childnode>
      </node>
      <node id="47754">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_1D_C.H</label>
        <link refid="AMReX__MultiFabUtil__1D__C_8H"/>
      </node>
      <node id="47649">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H</label>
        <link refid="AMReX__HypreABecLap_8H"/>
        <childnode refid="47613" relation="include">
        </childnode>
        <childnode refid="47650" relation="include">
        </childnode>
      </node>
      <node id="47808">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H</label>
        <link refid="AMReX__EBDataCollection_8H"/>
        <childnode refid="47673" relation="include">
        </childnode>
        <childnode refid="47809" relation="include">
        </childnode>
      </node>
      <node id="47676">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_STL_utils.H</label>
        <link refid="AMReX__EB__STL__utils_8H"/>
        <childnode refid="47677" relation="include">
        </childnode>
      </node>
      <node id="47709">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleMesh.H</label>
        <link refid="AMReX__ParticleMesh_8H"/>
      </node>
      <node id="47537">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H</label>
        <link refid="AMReX__AmrParGDB_8H"/>
        <childnode refid="47538" relation="include">
        </childnode>
      </node>
      <node id="47801">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H</label>
        <link refid="AMReX__EB2__GeometryShop_8H"/>
        <childnode refid="47667" relation="include">
        </childnode>
        <childnode refid="47666" relation="include">
        </childnode>
        <childnode refid="47668" relation="include">
        </childnode>
      </node>
      <node id="47553">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_iMultiFab.H</label>
        <link refid="AMReX__iMultiFab_8H"/>
        <childnode refid="47554" relation="include">
        </childnode>
        <childnode refid="47555" relation="include">
        </childnode>
        <childnode refid="47558" relation="include">
        </childnode>
        <childnode refid="47545" relation="include">
        </childnode>
        <childnode refid="47548" relation="include">
        </childnode>
        <childnode refid="47559" relation="include">
        </childnode>
        <childnode refid="47560" relation="include">
        </childnode>
        <childnode refid="47561" relation="include">
        </childnode>
        <childnode refid="47587" relation="include">
        </childnode>
        <childnode refid="47612" relation="include">
        </childnode>
        <childnode refid="47564" relation="include">
        </childnode>
        <childnode refid="47606" relation="include">
        </childnode>
        <childnode refid="47608" relation="include">
        </childnode>
      </node>
      <node id="47681">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H</label>
        <link refid="AMReX__AmrData_8H"/>
        <childnode refid="47629" relation="include">
        </childnode>
        <childnode refid="47682" relation="include">
        </childnode>
      </node>
      <node id="47793">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG_K.H</label>
        <link refid="AMReX__MLMG__K_8H"/>
        <childnode refid="47571" relation="include">
        </childnode>
      </node>
      <node id="47524">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="47525" relation="include">
        </childnode>
        <childnode refid="47548" relation="include">
        </childnode>
        <childnode refid="47549" relation="include">
        </childnode>
        <childnode refid="47550" relation="include">
        </childnode>
        <childnode refid="47723" relation="include">
        </childnode>
        <childnode refid="47724" relation="include">
        </childnode>
        <childnode refid="47799" relation="include">
        </childnode>
        <childnode refid="47765" relation="include">
        </childnode>
        <childnode refid="47801" relation="include">
        </childnode>
        <childnode refid="47802" relation="include">
        </childnode>
      </node>
      <node id="47648">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_MacBndry.cpp</label>
        <link refid="AMReX__MacBndry_8cpp"/>
      </node>
      <node id="47736">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_COORDSYS_1D_C.H</label>
        <link refid="AMReX__COORDSYS__1D__C_8H"/>
      </node>
      <node id="47805">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_LeastSquares_3D_K.H</label>
        <link refid="AMReX__EB__LeastSquares__3D__K_8H"/>
        <childnode refid="47806" relation="include">
        </childnode>
      </node>
      <node id="47799">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_IArrayBox.H</label>
        <link refid="AMReX__IArrayBox_8H"/>
        <childnode refid="47734" relation="include">
        </childnode>
        <childnode refid="47800" relation="include">
        </childnode>
        <childnode refid="47553" relation="include">
        </childnode>
        <childnode refid="47754" relation="include">
        </childnode>
        <childnode refid="47755" relation="include">
        </childnode>
        <childnode refid="47756" relation="include">
        </childnode>
        <childnode refid="47758" relation="include">
        </childnode>
        <childnode refid="47761" relation="include">
        </childnode>
        <childnode refid="47762" relation="include">
        </childnode>
        <childnode refid="47763" relation="include">
        </childnode>
        <childnode refid="47672" relation="include">
        </childnode>
        <childnode refid="47782" relation="include">
        </childnode>
      </node>
      <node id="47769">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister_3D_K.H</label>
        <link refid="AMReX__YAFluxRegister__3D__K_8H"/>
        <childnode refid="47770" relation="include">
        </childnode>
      </node>
      <node id="47694">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLProfUtilities.cpp</label>
        <link refid="AMReX__BLProfUtilities_8cpp"/>
      </node>
      <node id="47666">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H</label>
        <link refid="AMReX__EB2_8H"/>
        <childnode refid="47663" relation="include">
        </childnode>
        <childnode refid="47667" relation="include">
        </childnode>
        <childnode refid="47668" relation="include">
        </childnode>
        <childnode refid="47670" relation="include">
        </childnode>
        <childnode refid="47671" relation="include">
        </childnode>
      </node>
      <node id="47775">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_ND_C.cpp</label>
        <link refid="AMReX__EB2__ND__C_8cpp"/>
      </node>
      <node id="47554">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Extrapolater.cpp</label>
        <link refid="AMReX__Extrapolater_8cpp"/>
      </node>
      <node id="47770">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister_K.H</label>
        <link refid="AMReX__YAFluxRegister__K_8H"/>
        <childnode refid="47588" relation="include">
        </childnode>
        <childnode refid="47771" relation="include">
        </childnode>
      </node>
      <node id="47548">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX.cpp</label>
        <link refid="AMReX_8cpp"/>
      </node>
      <node id="47625">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_ForkJoin.cpp</label>
        <link refid="AMReX__ForkJoin_8cpp"/>
      </node>
      <node id="47535">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrInSituBridge.cpp</label>
        <link refid="AMReX__AmrInSituBridge_8cpp"/>
      </node>
      <node id="47582">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticles.H</label>
        <link refid="AMReX__TracerParticles_8H"/>
        <childnode refid="47538" relation="include">
        </childnode>
        <childnode refid="47583" relation="include">
        </childnode>
        <childnode refid="47584" relation="include">
        </childnode>
      </node>
      <node id="47716">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.cpp</label>
        <link refid="AMReX__FabArrayBase_8cpp"/>
      </node>
      <node id="47697">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_RegionsProfStats.cpp</label>
        <link refid="AMReX__RegionsProfStats_8cpp"/>
      </node>
      <node id="47780">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_XYPlotDataList.H</label>
        <link refid="AMReX__XYPlotDataList_8H"/>
        <childnode refid="47683" relation="include">
        </childnode>
        <childnode refid="47781" relation="include">
        </childnode>
      </node>
      <node id="47670">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFabFactory.cpp</label>
        <link refid="AMReX__EBFabFactory_8cpp"/>
      </node>
      <node id="47594">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.H</label>
        <link refid="AMReX__MLABecLaplacian_8H"/>
        <childnode refid="47566" relation="include">
        </childnode>
        <childnode refid="47569" relation="include">
        </childnode>
        <childnode refid="47571" relation="include">
        </childnode>
        <childnode refid="47595" relation="include">
        </childnode>
        <childnode refid="47596" relation="include">
        </childnode>
      </node>
      <node id="47541">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8cpp"/>
      </node>
      <node id="47588">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister.cpp</label>
        <link refid="AMReX__YAFluxRegister_8cpp"/>
      </node>
      <node id="47710">
        <label>/home/runner/work/amrex/amrex/Src/SDC/AMReX_SDCstruct.H</label>
        <link refid="AMReX__SDCstruct_8H"/>
        <childnode refid="47711" relation="include">
        </childnode>
      </node>
      <node id="47807">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.cpp</label>
        <link refid="AMReX__EBCellFlag_8cpp"/>
      </node>
      <node id="47645">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H</label>
        <link refid="AMReX__InterpBndryData_8H"/>
        <childnode refid="47646" relation="include">
        </childnode>
        <childnode refid="47647" relation="include">
        </childnode>
        <childnode refid="47651" relation="include">
        </childnode>
      </node>
      <node id="47730">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interp_1D_C.H</label>
        <link refid="AMReX__Interp__1D__C_8H"/>
      </node>
      <node id="47599">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.cpp</label>
        <link refid="AMReX__MLCellABecLap_8cpp"/>
      </node>
      <node id="47711">
        <label>/home/runner/work/amrex/amrex/Src/SDC/AMReX_SDCstruct.cpp</label>
        <link refid="AMReX__SDCstruct_8cpp"/>
      </node>
      <node id="47712">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMF.cpp</label>
        <link refid="AMReX__VisMF_8cpp"/>
      </node>
      <node id="47607">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_NodalProjector.H</label>
        <link refid="AMReX__NodalProjector_8H"/>
        <childnode refid="47577" relation="include">
        </childnode>
      </node>
      <node id="47683">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_DataServices.cpp</label>
        <link refid="AMReX__DataServices_8cpp"/>
      </node>
      <node id="47671">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_WriteEBSurface.cpp</label>
        <link refid="AMReX__WriteEBSurface_8cpp"/>
      </node>
      <node id="47603">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.cpp</label>
        <link refid="AMReX__MLLinOp_8cpp"/>
      </node>
      <node id="47800">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_IArrayBox.cpp</label>
        <link refid="AMReX__IArrayBox_8cpp"/>
      </node>
      <node id="47773">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_2D_C.cpp</label>
        <link refid="AMReX__EB2__2D__C_8cpp"/>
      </node>
      <node id="47614">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.cpp</label>
        <link refid="AMReX__HypreABecLap3_8cpp"/>
      </node>
      <node id="47811">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBToPVD.cpp</label>
        <link refid="AMReX__EBToPVD_8cpp"/>
      </node>
      <node id="47605">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.cpp</label>
        <link refid="AMReX__MLCGSolver_8cpp"/>
      </node>
      <node id="47634">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.cpp</label>
        <link refid="AMReX__PhysBCFunct_8cpp"/>
      </node>
      <node id="47774">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_3D_C.cpp</label>
        <link refid="AMReX__EB2__3D__C_8cpp"/>
      </node>
      <node id="47661">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_FabSet.cpp</label>
        <link refid="AMReX__FabSet_8cpp"/>
      </node>
      <node id="47729">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxReg_C.H</label>
        <link refid="AMReX__FluxReg__C_8H"/>
        <childnode refid="47558" relation="include">
        </childnode>
      </node>
      <node id="47630">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H</label>
        <link refid="AMReX__PhysBCFunct_8H"/>
        <childnode refid="47619" relation="include">
        </childnode>
        <childnode refid="47631" relation="include">
        </childnode>
        <childnode refid="47556" relation="include">
        </childnode>
        <childnode refid="47622" relation="include">
        </childnode>
        <childnode refid="47634" relation="include">
        </childnode>
      </node>
      <node id="47672">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp</label>
        <link refid="AMReX__EB2__Level_8cpp"/>
      </node>
      <node id="47624">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_ForkJoin.H</label>
        <link refid="AMReX__ForkJoin_8H"/>
        <childnode refid="47625" relation="include">
        </childnode>
      </node>
      <node id="47689">
        <label>/home/runner/work/amrex/amrex/Src/Extern/hpgmg/BL_HPGMG.H</label>
        <link refid="BL__HPGMG_8H"/>
        <childnode refid="47690" relation="include">
        </childnode>
      </node>
      <node id="47641">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_BndryRegister.H</label>
        <link refid="AMReX__BndryRegister_8H"/>
        <childnode refid="47642" relation="include">
        </childnode>
        <childnode refid="47643" relation="include">
        </childnode>
        <childnode refid="47660" relation="include">
        </childnode>
        <childnode refid="47591" relation="include">
        </childnode>
      </node>
      <node id="47798">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H</label>
        <link refid="AMReX__ParticleTile_8H"/>
        <childnode refid="47578" relation="include">
        </childnode>
        <childnode refid="47579" relation="include">
        </childnode>
        <childnode refid="47706" relation="include">
        </childnode>
        <childnode refid="47705" relation="include">
        </childnode>
      </node>
      <node id="47591">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H</label>
        <link refid="AMReX__MLLinOp_8H"/>
        <childnode refid="47592" relation="include">
        </childnode>
        <childnode refid="47604" relation="include">
        </childnode>
        <childnode refid="47603" relation="include">
        </childnode>
        <childnode refid="47606" relation="include">
        </childnode>
        <childnode refid="47608" relation="include">
        </childnode>
      </node>
      <node id="47585">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_WriteBinaryParticleData.H</label>
        <link refid="AMReX__WriteBinaryParticleData_8H"/>
        <childnode refid="47586" relation="include">
        </childnode>
      </node>
      <node id="47525">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H</label>
        <link refid="AMReX__TagBox_8H"/>
        <childnode refid="47526" relation="include">
        </childnode>
        <childnode refid="47527" relation="include">
        </childnode>
        <childnode refid="47543" relation="include">
        </childnode>
        <childnode refid="47545" relation="include">
        </childnode>
        <childnode refid="47546" relation="include">
        </childnode>
      </node>
      <node id="47778">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBInterpolater.cpp</label>
        <link refid="AMReX__EBInterpolater_8cpp"/>
      </node>
      <node id="47635">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileDataImpl.H</label>
        <link refid="AMReX__PlotFileDataImpl_8H"/>
        <childnode refid="47636" relation="include">
        </childnode>
        <childnode refid="47637" relation="include">
        </childnode>
      </node>
      <node id="47703">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H</label>
        <link refid="AMReX__ParticleCommunication_8H"/>
        <childnode refid="47704" relation="include">
        </childnode>
        <childnode refid="47579" relation="include">
        </childnode>
      </node>
      <node id="47589">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFluxRegister.H</label>
        <link refid="AMReX__EBFluxRegister_8H"/>
        <childnode refid="47590" relation="include">
        </childnode>
      </node>
      <node id="47665">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H</label>
        <link refid="AMReX__EB2__Level_8H"/>
        <childnode refid="47666" relation="include">
        </childnode>
        <childnode refid="47672" relation="include">
        </childnode>
        <childnode refid="47673" relation="include">
        </childnode>
        <childnode refid="47670" relation="include">
        </childnode>
      </node>
      <node id="47540">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8H"/>
        <childnode refid="47541" relation="include">
        </childnode>
      </node>
      <node id="47662">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H</label>
        <link refid="AMReX__algoim_8H"/>
        <childnode refid="47663" relation="include">
        </childnode>
        <childnode refid="47664" relation="include">
        </childnode>
      </node>
      <node id="47656">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap2.cpp</label>
        <link refid="AMReX__HypreABecLap2_8cpp"/>
      </node>
      <node id="47804">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap_2D_K.H</label>
        <link refid="AMReX__MLEBABecLap__2D__K_8H"/>
      </node>
      <node id="47587">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister.H</label>
        <link refid="AMReX__YAFluxRegister_8H"/>
        <childnode refid="47588" relation="include">
        </childnode>
        <childnode refid="47589" relation="include">
        </childnode>
        <childnode refid="47591" relation="include">
        </childnode>
      </node>
      <node id="47647">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_MacBndry.H</label>
        <link refid="AMReX__MacBndry_8H"/>
        <childnode refid="47648" relation="include">
        </childnode>
        <childnode refid="47649" relation="include">
        </childnode>
      </node>
      <node id="47579">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particles.H</label>
        <link refid="AMReX__Particles_8H"/>
        <childnode refid="47538" relation="include">
        </childnode>
        <childnode refid="47580" relation="include">
        </childnode>
        <childnode refid="47578" relation="include">
        </childnode>
        <childnode refid="47581" relation="include">
        </childnode>
        <childnode refid="47582" relation="include">
        </childnode>
        <childnode refid="47585" relation="include">
        </childnode>
      </node>
      <node id="47650">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.cpp</label>
        <link refid="AMReX__HypreABecLap_8cpp"/>
      </node>
      <node id="47790">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_3D_K.H</label>
        <link refid="AMReX__MLEBTensor__3D__K_8H"/>
        <childnode refid="47786" relation="include">
        </childnode>
      </node>
      <node id="47574">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLaplacian.cpp</label>
        <link refid="AMReX__MLNodeTensorLaplacian_8cpp"/>
      </node>
      <node id="47685">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.cpp</label>
        <link refid="AMReX__BLWritePlotFile_8cpp"/>
      </node>
      <node id="47608">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.H</label>
        <link refid="AMReX__MLNodeLinOp_8H"/>
        <childnode refid="47609" relation="include">
        </childnode>
        <childnode refid="47573" relation="include">
        </childnode>
        <childnode refid="47610" relation="include">
        </childnode>
      </node>
      <node id="47764">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData_K.H</label>
        <link refid="AMReX__InterpBndryData__K_8H"/>
        <childnode refid="47646" relation="include">
        </childnode>
      </node>
      <node id="47551">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="47525" relation="include">
        </childnode>
        <childnode refid="47552" relation="include">
        </childnode>
        <childnode refid="47713" relation="include">
        </childnode>
        <childnode refid="47553" relation="include">
        </childnode>
        <childnode refid="47714" relation="include">
        </childnode>
        <childnode refid="47615" relation="include">
        </childnode>
        <childnode refid="47715" relation="include">
        </childnode>
        <childnode refid="47717" relation="include">
        </childnode>
        <childnode refid="47721" relation="include">
        </childnode>
        <childnode refid="47670" relation="include">
        </childnode>
        <childnode refid="47722" relation="include">
        </childnode>
      </node>
      <node id="47628">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MFCopyDescriptor.cpp</label>
        <link refid="AMReX__MFCopyDescriptor_8cpp"/>
      </node>
      <node id="47622">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BCUtil.cpp</label>
        <link refid="AMReX__BCUtil_8cpp"/>
      </node>
      <node id="47530">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H</label>
        <link refid="AMReX__AmrLevel_8H"/>
        <childnode refid="47526" relation="include">
        </childnode>
        <childnode refid="47531" relation="include">
        </childnode>
        <childnode refid="47532" relation="include">
        </childnode>
        <childnode refid="47533" relation="include">
        </childnode>
      </node>
      <node id="47564">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H</label>
        <link refid="AMReX__HypreNodeLap_8H"/>
        <childnode refid="47565" relation="include">
        </childnode>
      </node>
      <node id="47794">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLap_K.H</label>
        <link refid="AMReX__MLNodeLap__K_8H"/>
        <childnode refid="47572" relation="include">
        </childnode>
        <childnode refid="47573" relation="include">
        </childnode>
        <childnode refid="47574" relation="include">
        </childnode>
      </node>
      <node id="47586">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleIO.H</label>
        <link refid="AMReX__ParticleIO_8H"/>
        <childnode refid="47579" relation="include">
        </childnode>
      </node>
      <node id="47728">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxReg_3D_C.H</label>
        <link refid="AMReX__FluxReg__3D__C_8H"/>
        <childnode refid="47729" relation="include">
        </childnode>
      </node>
      <node id="47550">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BaseFabUtility.H</label>
        <link refid="AMReX__BaseFabUtility_8H"/>
        <childnode refid="47551" relation="include">
        </childnode>
      </node>
      <node id="47561">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil.H</label>
        <link refid="AMReX__MultiFabUtil_8H"/>
        <childnode refid="47530" relation="include">
        </childnode>
        <childnode refid="47545" relation="include">
        </childnode>
        <childnode refid="47559" relation="include">
        </childnode>
        <childnode refid="47562" relation="include">
        </childnode>
        <childnode refid="47563" relation="include">
        </childnode>
        <childnode refid="47564" relation="include">
        </childnode>
        <childnode refid="47566" relation="include">
        </childnode>
        <childnode refid="47567" relation="include">
        </childnode>
        <childnode refid="47568" relation="include">
        </childnode>
        <childnode refid="47569" relation="include">
        </childnode>
        <childnode refid="47570" relation="include">
        </childnode>
        <childnode refid="47571" relation="include">
        </childnode>
        <childnode refid="47572" relation="include">
        </childnode>
        <childnode refid="47573" relation="include">
        </childnode>
        <childnode refid="47574" relation="include">
        </childnode>
        <childnode refid="47575" relation="include">
        </childnode>
        <childnode refid="47576" relation="include">
        </childnode>
        <childnode refid="47577" relation="include">
        </childnode>
        <childnode refid="47578" relation="include">
        </childnode>
        <childnode refid="47579" relation="include">
        </childnode>
      </node>
      <node id="47669">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_utils.cpp</label>
        <link refid="AMReX__EB__utils_8cpp"/>
      </node>
      <node id="47741">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FArrayBox.cpp</label>
        <link refid="AMReX__FArrayBox_8cpp"/>
      </node>
      <node id="47536">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrCore.cpp</label>
        <link refid="AMReX__AmrCore_8cpp"/>
      </node>
      <node id="47788">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap_K.H</label>
        <link refid="AMReX__MLEBABecLap__K_8H"/>
        <childnode refid="47569" relation="include">
        </childnode>
        <childnode refid="47789" relation="include">
        </childnode>
        <childnode refid="47790" relation="include">
        </childnode>
      </node>
      <node id="47803">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_LeastSquares_2D_K.H</label>
        <link refid="AMReX__EB__LeastSquares__2D__K_8H"/>
        <childnode refid="47804" relation="include">
        </childnode>
      </node>
      <node id="47810">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBToPVD.H</label>
        <link refid="AMReX__EBToPVD_8H"/>
        <childnode refid="47811" relation="include">
        </childnode>
        <childnode refid="47671" relation="include">
        </childnode>
      </node>
      <node id="47802">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H</label>
        <link refid="AMReX__EBCellFlag_8H"/>
        <childnode refid="47772" relation="include">
        </childnode>
        <childnode refid="47665" relation="include">
        </childnode>
        <childnode refid="47674" relation="include">
        </childnode>
        <childnode refid="47803" relation="include">
        </childnode>
        <childnode refid="47805" relation="include">
        </childnode>
        <childnode refid="47547" relation="include">
        </childnode>
        <childnode refid="47807" relation="include">
        </childnode>
        <childnode refid="47808" relation="include">
        </childnode>
        <childnode refid="47670" relation="include">
        </childnode>
        <childnode refid="47777" relation="include">
        </childnode>
        <childnode refid="47589" relation="include">
        </childnode>
        <childnode refid="47771" relation="include">
        </childnode>
        <childnode refid="47778" relation="include">
        </childnode>
        <childnode refid="47563" relation="include">
        </childnode>
        <childnode refid="47779" relation="include">
        </childnode>
        <childnode refid="47810" relation="include">
        </childnode>
        <childnode refid="47722" relation="include">
        </childnode>
        <childnode refid="47788" relation="include">
        </childnode>
      </node>
      <node id="47677">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_STL_utils.cpp</label>
        <link refid="AMReX__EB__STL__utils_8cpp"/>
      </node>
      <node id="47768">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister_2D_K.H</label>
        <link refid="AMReX__YAFluxRegister__2D__K_8H"/>
      </node>
      <node id="47682">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_DataServices.H</label>
        <link refid="AMReX__DataServices_8H"/>
        <childnode refid="47683" relation="include">
        </childnode>
        <childnode refid="47684" relation="include">
        </childnode>
        <childnode refid="47686" relation="include">
        </childnode>
      </node>
      <node id="47702">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleBufferMap.cpp</label>
        <link refid="AMReX__ParticleBufferMap_8cpp"/>
      </node>
      <node id="47651">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H</label>
        <link refid="AMReX__MLMGBndry_8H"/>
        <childnode refid="47591" relation="include">
        </childnode>
        <childnode refid="47652" relation="include">
        </childnode>
      </node>
      <node id="47578">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H</label>
        <link refid="AMReX__NeighborParticles_8H"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structamrex_1_1ReduceOpSum" prot="public">amrex::ReduceOpSum</innerclass>
    <innerclass refid="structamrex_1_1ReduceOpMin" prot="public">amrex::ReduceOpMin</innerclass>
    <innerclass refid="structamrex_1_1ReduceOpMax" prot="public">amrex::ReduceOpMax</innerclass>
    <innerclass refid="structamrex_1_1ReduceOpLogicalAnd" prot="public">amrex::ReduceOpLogicalAnd</innerclass>
    <innerclass refid="structamrex_1_1ReduceOpLogicalOr" prot="public">amrex::ReduceOpLogicalOr</innerclass>
    <innerclass refid="classamrex_1_1ReduceOps" prot="public">amrex::ReduceOps</innerclass>
    <innerclass refid="classamrex_1_1ReduceData" prot="public">amrex::ReduceData</innerclass>
    <innerclass refid="classamrex_1_1ReduceOps" prot="public">amrex::ReduceOps</innerclass>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1Reduce">amrex::Reduce</innernamespace>
    <innernamespace refid="namespaceamrex_1_1Reduce_1_1detail">amrex::Reduce::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_REDUCE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_REDUCE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_Config.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Gpu_8H" kindref="compound">AMReX_Gpu.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Arena_8H" kindref="compound">AMReX_Arena.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="namespaceamrex_1_1Reduce_1_1detail" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1detail_1a2d9a622392a0eee879ac8180cb2371e6" kindref="member">Reduce</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P&gt;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">for_each_parallel</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s,<sp/><ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P().parallel_update(amrex::get&lt;I&gt;(d),<sp/>amrex::get&lt;I&gt;(s),<sp/>h);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ps&gt;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">for_each_parallel</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s,<sp/><ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P().parallel_update(amrex::get&lt;I&gt;(d),<sp/>amrex::get&lt;I&gt;(s),<sp/>h);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">for_each_parallel</ref>&lt;I+1,T,P1,Ps...&gt;(d,<sp/>s,<sp/>h);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref></highlight></codeline>
<codeline lineno="32" refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">for_each_parallel</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P().parallel_update(amrex::get&lt;I&gt;(d),<sp/>amrex::get&lt;I&gt;(s));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ps&gt;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref></highlight></codeline>
<codeline lineno="39" refid="namespaceamrex_1_1Reduce_1_1detail_1ad1214261e6fd754f2e41e878533756a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">for_each_parallel</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P().parallel_update(amrex::get&lt;I&gt;(d),<sp/>amrex::get&lt;I&gt;(s));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">for_each_parallel</ref>&lt;I+1,T,P1,Ps...&gt;(d,<sp/>s);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P&gt;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref></highlight></codeline>
<codeline lineno="47" refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">for_each_local</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P().local_update(amrex::get&lt;I&gt;(d),<sp/>amrex::get&lt;I&gt;(s));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ps&gt;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref></highlight></codeline>
<codeline lineno="54" refid="namespaceamrex_1_1Reduce_1_1detail_1af7250b0d542b5bed0a2c068b4b43085c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">for_each_local</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P().local_update(amrex::get&lt;I&gt;(d),<sp/>amrex::get&lt;I&gt;(s));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">for_each_local</ref>&lt;I+1,T,P1,Ps...&gt;(d,<sp/>s);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P&gt;</highlight></codeline>
<codeline lineno="61" refid="namespaceamrex_1_1Reduce_1_1detail_1aa49407a52dbde68233cb025e571b8e0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1aa49407a52dbde68233cb025e571b8e0a" kindref="member">for_each_init</ref><sp/>(T&amp;<sp/>t)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P().init(amrex::get&lt;I&gt;(t));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t<sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ps&gt;</highlight></codeline>
<codeline lineno="67" refid="namespaceamrex_1_1Reduce_1_1detail_1a87cd8d506ca082d704c64124129d5eab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1aa49407a52dbde68233cb025e571b8e0a" kindref="member">for_each_init</ref><sp/>(T&amp;<sp/>t)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P().init(amrex::get&lt;I&gt;(t));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1aa49407a52dbde68233cb025e571b8e0a" kindref="member">for_each_init</ref>&lt;I+1,T,P1,Ps...&gt;(t);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="structamrex_1_1ReduceOpSum" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ReduceOpSum" kindref="compound">ReduceOpSum</ref></highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parallel_update<sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s,<sp/><ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1aeee12c6159c662a95ab53b5b07f4b8e1" kindref="member">Gpu::deviceReduceSum_full</ref>(&amp;d,s,h);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="85" refid="structamrex_1_1ReduceOpSum_1acc3c648eb08f68c0d72d0bcca9534927" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpSum_1acc3c648eb08f68c0d72d0bcca9534927" kindref="member">parallel_update</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/><ref refid="namespaceamrex_1_1Gpu_1aeee12c6159c662a95ab53b5b07f4b8e1" kindref="member">Gpu::deviceReduceSum_full</ref>(&amp;d,s);<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="90" refid="structamrex_1_1ReduceOpSum_1a8a57daa2e7672e9a16e824dd2ea6048f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpSum_1a8a57daa2e7672e9a16e824dd2ea6048f" kindref="member">local_update</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/>d<sp/>+=<sp/>s;<sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="93" refid="structamrex_1_1ReduceOpSum_1a4258529c10bd8433cd569a5b45500b92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpSum_1a4258529c10bd8433cd569a5b45500b92" kindref="member">init</ref><sp/>(T&amp;<sp/>t)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/>t<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal">};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="structamrex_1_1ReduceOpMin" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ReduceOpMin" kindref="compound">ReduceOpMin</ref></highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parallel_update<sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s,<sp/><ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1ab77177838702bf96404e79d35a1582da" kindref="member">Gpu::deviceReduceMin_full</ref>(&amp;d,s,h);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="107" refid="structamrex_1_1ReduceOpMin_1a2c9649866c48c03653b4066d1e58a613" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpMin_1a2c9649866c48c03653b4066d1e58a613" kindref="member">parallel_update</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/><ref refid="namespaceamrex_1_1Gpu_1ab77177838702bf96404e79d35a1582da" kindref="member">Gpu::deviceReduceMin_full</ref>(&amp;d,s);<sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="112" refid="structamrex_1_1ReduceOpMin_1abffc8f7180874e6c85c54cc670b4e12c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpMin_1abffc8f7180874e6c85c54cc670b4e12c" kindref="member">local_update</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/>d<sp/>=<sp/><ref refid="namespaceamrex_1a9f149fc5da0cd0b68a9f7fddc8a7461d" kindref="member">amrex::min</ref>(d,s);<sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="115" refid="structamrex_1_1ReduceOpMin_1adc49fc2eed8ae4e2dd244f22e66ef073" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpMin_1adc49fc2eed8ae4e2dd244f22e66ef073" kindref="member">init</ref><sp/>(T&amp;<sp/>t)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/>t<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;T&gt;::max</ref>();<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="structamrex_1_1ReduceOpMax" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ReduceOpMax" kindref="compound">ReduceOpMax</ref></highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parallel_update<sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s,<sp/><ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a534f127a697d9afa2e13506bb9edacbb" kindref="member">Gpu::deviceReduceMax_full</ref>(&amp;d,s,h);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="129" refid="structamrex_1_1ReduceOpMax_1a4d882050c4554f4f6857b3443a8fd2fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpMax_1a4d882050c4554f4f6857b3443a8fd2fa" kindref="member">parallel_update</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/><ref refid="namespaceamrex_1_1Gpu_1a534f127a697d9afa2e13506bb9edacbb" kindref="member">Gpu::deviceReduceMax_full</ref>(&amp;d,s);<sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="134" refid="structamrex_1_1ReduceOpMax_1a30f832fb9453829363682efa1b829c68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpMax_1a30f832fb9453829363682efa1b829c68" kindref="member">local_update</ref><sp/>(T&amp;<sp/>d,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/>d<sp/>=<sp/><ref refid="namespaceamrex_1a918b31ea2f518389047986cb72a8b546" kindref="member">amrex::max</ref>(d,s);<sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="137" refid="structamrex_1_1ReduceOpMax_1a1cd819d660aa4d2c651f8151e38c3e78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpMax_1a1cd819d660aa4d2c651f8151e38c3e78" kindref="member">init</ref><sp/>(T&amp;<sp/>t)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/>t<sp/>=<sp/>std::numeric_limits&lt;T&gt;::lowest();<sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal">};</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="structamrex_1_1ReduceOpLogicalAnd" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ReduceOpLogicalAnd" kindref="compound">ReduceOpLogicalAnd</ref></highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parallel_update<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/><ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a2ecad6d34c489464aab2787dc6ca07ba" kindref="member">Gpu::deviceReduceLogicalAnd_full</ref>(&amp;d,s,h);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="149" refid="structamrex_1_1ReduceOpLogicalAnd_1a644182e552bf0d1f5cca4d18a7e6ebaf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpLogicalAnd_1a644182e552bf0d1f5cca4d18a7e6ebaf" kindref="member">parallel_update</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/><ref refid="namespaceamrex_1_1Gpu_1a2ecad6d34c489464aab2787dc6ca07ba" kindref="member">Gpu::deviceReduceLogicalAnd_full</ref>(&amp;d,s);<sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="153" refid="structamrex_1_1ReduceOpLogicalAnd_1ab5ad43412cb40defe985c30b5a8c5f66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpLogicalAnd_1ab5ad43412cb40defe985c30b5a8c5f66" kindref="member">local_update</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/>d<sp/>=<sp/>d<sp/>&amp;&amp;<sp/>s;<sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="structamrex_1_1ReduceOpLogicalAnd_1ac51ef2fddec1f919efb83e5a465ceb11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpLogicalAnd_1ac51ef2fddec1f919efb83e5a465ceb11" kindref="member">init</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>t)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/>t<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal">};</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="structamrex_1_1ReduceOpLogicalOr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ReduceOpLogicalOr" kindref="compound">ReduceOpLogicalOr</ref></highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>parallel_update<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/><ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1ace89c6e29c468163b30bd0ca38a59108" kindref="member">Gpu::deviceReduceLogicalOr_full</ref>(&amp;d,s,h);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="167" refid="structamrex_1_1ReduceOpLogicalOr_1ad19c4ce20b731bda3b28de6a16a02f0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpLogicalOr_1ad19c4ce20b731bda3b28de6a16a02f0f" kindref="member">parallel_update</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/><ref refid="namespaceamrex_1_1Gpu_1ace89c6e29c468163b30bd0ca38a59108" kindref="member">Gpu::deviceReduceLogicalOr_full</ref>(&amp;d,s);<sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="171" refid="structamrex_1_1ReduceOpLogicalOr_1a64f0f965254ae420bbb827d8d60f1289" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpLogicalOr_1a64f0f965254ae420bbb827d8d60f1289" kindref="member">local_update</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/>d<sp/>=<sp/>d<sp/>||<sp/>s;<sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="structamrex_1_1ReduceOpLogicalOr_1a24e7036b20e02de2a2439d4f3e3fbb5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ReduceOpLogicalOr_1a24e7036b20e02de2a2439d4f3e3fbb5f" kindref="member">init</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>t)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/>t<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal">};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="classamrex_1_1ReduceOps" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ps&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1detail_1a2d9a622392a0eee879ac8180cb2371e6" kindref="member">Reduce</ref><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xxxxx<sp/>DPCPP<sp/>todo:<sp/>the<sp/>compiler<sp/>seems<sp/>to<sp/>have<sp/>a<sp/>bug.<sp/><sp/>It<sp/>cannot<sp/>capture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GpuTuple&lt;T&gt;<sp/>correctly<sp/>even<sp/>if<sp/>it&apos;s<sp/>standard<sp/>layout.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>init_tuple_on_device<sp/>(T*<sp/>p,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3bddb069b268576e6fa712be45c218ae" kindref="member">amrex::single_task</ref>(Gpu::nullStream(),<sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>()<sp/>noexcept</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(p)<sp/>T();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(p+1)<sp/>T();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array&lt;T,2&gt;</ref><sp/>tmp{v,v};</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ae243b10c65516ed7dfeaf9aed7e75aa3" kindref="member">Gpu::htod_memcpy</ref>(p,<sp/>tmp.data(),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)*2);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>init_tuple_on_device<sp/>(T*<sp/>p,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>v)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3bddb069b268576e6fa712be45c218ae" kindref="member">amrex::single_task</ref>(Gpu::nullStream(),<sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>()<sp/>noexcept</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(p)<sp/>T(v);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(p+1)<sp/>T(v);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData</ref></highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Type<sp/>=<sp/><ref refid="classamrex_1_1GpuTuple" kindref="compound">GpuTuple</ref>&lt;Ts...&gt;;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ps&gt;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData</ref><sp/>(<ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;Ps...&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_host_tuple(),</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_device_tuple((Type*)(<ref refid="namespaceamrex_1a97a60825e6e7886b3502c2f4ed1eb417" kindref="member">The_Device_Arena</ref>()-&gt;alloc(2*sizeof(m_host_tuple))))</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(<ref refid="AMReX__TypeTraits_8H_1adc50ea9983407ec975c6c594c92bae5d" kindref="member">AMREX_IS_TRIVIALLY_COPYABLE</ref>(Type),</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ReduceData::Type<sp/>must<sp/>be<sp/>trivially<sp/>copyable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(std::is_trivially_destructible&lt;Type&gt;::value,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ReduceData::Type<sp/>must<sp/>be<sp/>trivially<sp/>destructible&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1aa49407a52dbde68233cb025e571b8e0a" kindref="member">Reduce::detail::for_each_init</ref>&lt;0,<sp/>Type,<sp/>Ps...&gt;(m_host_tuple);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reduce::detail::init_tuple_on_device(m_device_tuple,<sp/>m_host_tuple);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a0040af3e7783b853140a6e13c755fc25" kindref="member">Gpu::synchronize</ref>();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>~ReduceData<sp/>()<sp/>{<sp/><ref refid="namespaceamrex_1a97a60825e6e7886b3502c2f4ed1eb417" kindref="member">The_Device_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a0c7e0730574c98febb6ddca2712cb515" kindref="member">free</ref>(m_device_tuple);<sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>ReduceData<sp/>(<ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;Ts...&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>ReduceData<sp/>(<ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;Ts...&gt;</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=<sp/>(<ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;Ts...&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=<sp/>(<ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;Ts...&gt;</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>Type<sp/>value<sp/>()</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a998c5815369d23cd73eea1b09f43a966" kindref="member">Gpu::dtoh_memcpy</ref>(&amp;m_host_tuple,<sp/>m_device_tuple,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m_host_tuple));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_host_tuple;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>Type*<sp/>devicePtr<sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_device_tuple;<sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>Type&amp;<sp/>hostRef<sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_host_tuple;<sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>Type<sp/>m_host_tuple;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>Type*<sp/>m_device_tuple;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">};</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1detail_1a2d9a622392a0eee879ac8180cb2371e6" kindref="member">Reduce</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1aca3a36a75e09011d483bcaaa6f9ee7f5" kindref="member">call_f</ref><sp/>(F<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/><ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>-&gt;<sp/>decltype(f(0,0,0))</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(i,j,k);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1aca3a36a75e09011d483bcaaa6f9ee7f5" kindref="member">call_f</ref><sp/>(F<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/><ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref><sp/>t)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>-&gt;<sp/>decltype(f(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref>()))</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_PICK(<ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(j,k),<ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(k),(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)0);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref>(<ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(i,j,k)),</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(i,j,k)),</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t));</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ps&gt;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps</ref></highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eval<sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>D<sp/>&amp;<sp/>reduce_data,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D::Type;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/>=<sp/>reduce_data.devicePtr();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncells<sp/>=<sp/>box.<ref refid="classamrex_1_1Box_1a74b39c8b70837cdb61ade61a834997ff" kindref="member">numPts</ref>();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(box);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref><sp/>ixtype<sp/>=<sp/>box.<ref refid="classamrex_1_1Box_1a23dbfc6bba6b19b28a0d893bb760494c" kindref="member">ixType</ref>();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ec<sp/>=<sp/>Gpu::ExecutionConfig(ncells);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec.numBlocks.x<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(ec.numBlocks.x,<sp/>Gpu::Device::maxBlocksPerLaunch());</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>device<sp/>reduce<sp/>needs<sp/>local(i.e.,<sp/>shared)<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>std::size_t<sp/>shared_mem_bytes<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>long)*Gpu::Device::warp_size;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ada73ee47d1c3a0d63725ce77e1334257" kindref="member">amrex::launch</ref>(ec.numBlocks.x,<sp/>ec.numThreads.x,<sp/>shared_mem_bytes,<sp/>Gpu::gpuStream(),</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(<ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>gh)<sp/>noexcept</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>r<sp/>=<sp/>*(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>+1);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icell<sp/>=<sp/>gh.item-&gt;get_global_id(0),<sp/>stride<sp/>=<sp/>gh.item-&gt;get_global_range(0);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icell<sp/>&lt;<sp/>ncells;<sp/>icell<sp/>+=<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/><sp/>icell<sp/>/<sp/><sp/><sp/>(len.x*len.y);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>/<sp/><sp/><sp/>len.x;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>-<sp/>j*len.x;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>lo.x;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>lo.y;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>lo.z;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pr<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1aca3a36a75e09011d483bcaaa6f9ee7f5" kindref="member">Reduce::detail::call_f</ref>(f,i,j,k,ixtype);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">Reduce::detail::for_each_local</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r,<sp/>pr);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">Reduce::detail::for_each_parallel</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(*<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>,r,<sp/>gh);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_CUDA)<sp/>||<sp/>(defined(AMREX_USE_HIP)<sp/>&amp;&amp;<sp/>defined(AMREX_HIP_INDIRECT_FUNCTION))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Gpu::inFuseRegion()<sp/>&amp;&amp;<sp/>Gpu::inFuseReductionRegion()</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>ec.numBlocks.x*ec.numThreads.x<sp/>&lt;=<sp/>Gpu::getFuseSizeThreshold())</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::Register(box,<sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k)<sp/>noexcept</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>r<sp/>=<sp/>*(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>+1);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box.<ref refid="classamrex_1_1Box_1a0b71343932dcc55cb16d1b2b95973114" kindref="member">contains</ref>(<ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(i,j,k))))<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pr<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1aca3a36a75e09011d483bcaaa6f9ee7f5" kindref="member">Reduce::detail::call_f</ref>(f,i,j,k,ixtype);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">Reduce::detail::for_each_local</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r,<sp/>pr);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">Reduce::detail::for_each_parallel</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(*<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>,r);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ada73ee47d1c3a0d63725ce77e1334257" kindref="member">amrex::launch</ref>(ec.numBlocks.x,<sp/>ec.numThreads.x,<sp/>0,<sp/>Gpu::gpuStream(),</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>r<sp/>=<sp/>*(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>+1);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icell<sp/>=<sp/>blockDim.x*blockIdx.x+threadIdx.x,<sp/>stride<sp/>=<sp/>blockDim.x*gridDim.x;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icell<sp/>&lt;<sp/>ncells;<sp/>icell<sp/>+=<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/><sp/>icell<sp/>/<sp/><sp/><sp/>(len.x*len.y);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>/<sp/><sp/><sp/>len.x;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>-<sp/>j*len.x;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>lo.x;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>lo.y;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>lo.z;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pr<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1aca3a36a75e09011d483bcaaa6f9ee7f5" kindref="member">Reduce::detail::call_f</ref>(f,i,j,k,ixtype);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">Reduce::detail::for_each_local</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r,<sp/>pr);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">Reduce::detail::for_each_parallel</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(*<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>,r);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eval<sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>N<sp/>ncomp,<sp/>D<sp/>&amp;<sp/>reduce_data,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D::Type;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/>=<sp/>reduce_data.devicePtr();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncells<sp/>=<sp/>box.<ref refid="classamrex_1_1Box_1a74b39c8b70837cdb61ade61a834997ff" kindref="member">numPts</ref>();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(box);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ec<sp/>=<sp/>Gpu::ExecutionConfig(ncells);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec.numBlocks.x<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(ec.numBlocks.x,<sp/>Gpu::Device::maxBlocksPerLaunch());</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>device<sp/>reduce<sp/>needs<sp/>local(i.e.,<sp/>shared)<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>std::size_t<sp/>shared_mem_bytes<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>long)*Gpu::Device::warp_size;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ada73ee47d1c3a0d63725ce77e1334257" kindref="member">amrex::launch</ref>(ec.numBlocks.x,<sp/>ec.numThreads.x,<sp/>shared_mem_bytes,<sp/>Gpu::gpuStream(),</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(<ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>gh)<sp/>noexcept</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>r<sp/>=<sp/>*(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>+1);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icell<sp/>=<sp/>gh.item-&gt;get_global_id(0),<sp/>stride<sp/>=<sp/>gh.item-&gt;get_global_range(0);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icell<sp/>&lt;<sp/>ncells;<sp/>icell<sp/>+=<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/><sp/>icell<sp/>/<sp/><sp/><sp/>(len.x*len.y);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>/<sp/><sp/><sp/>len.x;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>-<sp/>j*len.x;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>lo.x;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>lo.y;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>lo.z;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(N<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pr<sp/>=<sp/>f(i,j,k,n);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">Reduce::detail::for_each_local</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r,<sp/>pr);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">Reduce::detail::for_each_parallel</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(*<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>,r,<sp/>gh);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ada73ee47d1c3a0d63725ce77e1334257" kindref="member">amrex::launch</ref>(ec.numBlocks.x,<sp/>ec.numThreads.x,<sp/>0,<sp/>Gpu::gpuStream(),</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>r<sp/>=<sp/>*(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>+1);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icell<sp/>=<sp/>blockDim.x*blockIdx.x+threadIdx.x,<sp/>stride<sp/>=<sp/>blockDim.x*gridDim.x;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icell<sp/>&lt;<sp/>ncells;<sp/>icell<sp/>+=<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/><sp/>icell<sp/>/<sp/><sp/><sp/>(len.x*len.y);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>/<sp/><sp/><sp/>len.x;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>-<sp/>j*len.x;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>lo.x;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>lo.y;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>lo.z;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(N<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pr<sp/>=<sp/>f(i,j,k,n);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">Reduce::detail::for_each_local</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r,<sp/>pr);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">Reduce::detail::for_each_parallel</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(*<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>,r);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eval<sp/>(N<sp/>n,<sp/>D<sp/>&amp;<sp/>reduce_data,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D::Type;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/>=<sp/>reduce_data.devicePtr();</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ec<sp/>=<sp/>Gpu::ExecutionConfig(n);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ec.numBlocks.x<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(ec.numBlocks.x,<sp/>Gpu::Device::maxBlocksPerLaunch());</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>device<sp/>reduce<sp/>needs<sp/>local(i.e.,<sp/>shared)<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>std::size_t<sp/>shared_mem_bytes<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>long)*Gpu::Device::warp_size;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ada73ee47d1c3a0d63725ce77e1334257" kindref="member">amrex::launch</ref>(ec.numBlocks.x,<sp/>ec.numThreads.x,<sp/>shared_mem_bytes,<sp/>Gpu::gpuStream(),</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(<ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>gh)<sp/>noexcept</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>r<sp/>=<sp/>*(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>+1);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(N<sp/>i<sp/>=<sp/>gh.item-&gt;get_global_id(0),<sp/>stride<sp/>=<sp/>gh.item-&gt;get_global_range(0);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>n;<sp/>i<sp/>+=<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pr<sp/>=<sp/>f(i);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">Reduce::detail::for_each_local</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r,pr);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">Reduce::detail::for_each_parallel</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(*<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>,r,<sp/>gh);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ada73ee47d1c3a0d63725ce77e1334257" kindref="member">amrex::launch</ref>(ec.numBlocks.x,<sp/>ec.numThreads.x,<sp/>0,<sp/>Gpu::gpuStream(),</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>*(<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>+1);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(N<sp/>i<sp/>=<sp/>blockDim.x*blockIdx.x+threadIdx.x,<sp/>stride<sp/>=<sp/>blockDim.x*gridDim.x;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>n;<sp/>i<sp/>+=<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pr<sp/>=<sp/>f(i);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">Reduce::detail::for_each_local</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r,pr);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">Reduce::detail::for_each_parallel</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(*<ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>,r);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal">};</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1detail_1a2d9a622392a0eee879ac8180cb2371e6" kindref="member">Reduce</ref><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>U,<sp/>typename<sp/>BOP,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="443"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1a3a1bf2418459469b609d213560f4a8da" kindref="member">Sum</ref><sp/>(N<sp/>n,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val,<sp/>BOP<sp/>bop)</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Gpu_1_1LaunchSafeGuard" kindref="compound">Gpu::LaunchSafeGuard</ref><sp/>lsg(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Gpu_1_1DeviceScalar" kindref="compound">Gpu::DeviceScalar&lt;T&gt;</ref><sp/>ds(init_val);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref><sp/>=<sp/>ds.dataPtr();</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa97bf4be56f176e3af5b90f5b5955a04" kindref="member">amrex::VecReduce</ref>(n,<sp/>init_val,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(N<sp/>i,<sp/>T*<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>bop(*r,<sp/>v[i]);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>r,<sp/><ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1aeee12c6159c662a95ab53b5b07f4b8e1" kindref="member">Gpu::deviceReduceSum_full</ref>(dp,<sp/>r,<sp/>h);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1aeee12c6159c662a95ab53b5b07f4b8e1" kindref="member">Gpu::deviceReduceSum_full</ref>(dp,<sp/>r);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ds.dataValue();</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="468"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1a3a1bf2418459469b609d213560f4a8da" kindref="member">Sum</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1a3a1bf2418459469b609d213560f4a8da" kindref="member">Reduce::Sum</ref>(n,<sp/>v,<sp/>init_val,<sp/><ref refid="structamrex_1_1Plus" kindref="compound">amrex::Plus&lt;T&gt;</ref>());</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="475"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1a3a1bf2418459469b609d213560f4a8da" kindref="member">Sum</ref><sp/>(N<sp/>n,<sp/>F&amp;&amp;<sp/>f,<sp/>T<sp/>init_val<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="476"><highlight class="normal">{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpSum&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;T&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref>(n,<sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(N<sp/>i)<sp/>-&gt;<sp/>ReduceTuple<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{f(i)};<sp/>});</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>amrex::get&lt;0&gt;(reduce_data.value())<sp/>+<sp/>init_val;</highlight></codeline>
<codeline lineno="482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>U,<sp/>typename<sp/>BOP,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="485"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1aa9002a6dc16f2e87ac519151c6d8a7df" kindref="member">Min</ref><sp/>(N<sp/>n,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val,<sp/>BOP<sp/>bop)</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Gpu_1_1LaunchSafeGuard" kindref="compound">Gpu::LaunchSafeGuard</ref><sp/>lsg(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Gpu_1_1DeviceScalar" kindref="compound">Gpu::DeviceScalar&lt;T&gt;</ref><sp/>ds(init_val);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>dp<sp/>=<sp/>ds.dataPtr();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa97bf4be56f176e3af5b90f5b5955a04" kindref="member">amrex::VecReduce</ref>(n,<sp/>init_val,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(N<sp/>i,<sp/>T*<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>bop(*r,<sp/>v[i]);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>r,<sp/><ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1ab77177838702bf96404e79d35a1582da" kindref="member">Gpu::deviceReduceMin_full</ref>(dp,<sp/>r,<sp/>h);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1ab77177838702bf96404e79d35a1582da" kindref="member">Gpu::deviceReduceMin_full</ref>(dp,<sp/>r);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ds.dataValue();</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="510"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1aa9002a6dc16f2e87ac519151c6d8a7df" kindref="member">Min</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;T&gt;::max</ref>())</highlight></codeline>
<codeline lineno="511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1aa9002a6dc16f2e87ac519151c6d8a7df" kindref="member">Reduce::Min</ref>(n,<sp/>v,<sp/>init_val,<sp/><ref refid="structamrex_1_1Less" kindref="compound">amrex::Less&lt;T&gt;</ref>());</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="517"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1aa9002a6dc16f2e87ac519151c6d8a7df" kindref="member">Min</ref><sp/>(N<sp/>n,<sp/>F&amp;&amp;<sp/>f,<sp/>T<sp/>init_val<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;T&gt;::max</ref>())</highlight></codeline>
<codeline lineno="518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpMin&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;T&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref>(n,<sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(N<sp/>i)<sp/>-&gt;<sp/>ReduceTuple<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{f(i)};<sp/>});</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>tmp<sp/>=<sp/>amrex::get&lt;0&gt;(reduce_data.value());</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(tmp,init_val);</highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>U,<sp/>typename<sp/>BOP,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="528"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1ab3af21594fb654c6c051cdc49536bf35" kindref="member">Max</ref><sp/>(N<sp/>n,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val,<sp/>BOP<sp/>bop)</highlight></codeline>
<codeline lineno="529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Gpu_1_1LaunchSafeGuard" kindref="compound">Gpu::LaunchSafeGuard</ref><sp/>lsg(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Gpu_1_1DeviceScalar" kindref="compound">Gpu::DeviceScalar&lt;T&gt;</ref><sp/>ds(init_val);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>dp<sp/>=<sp/>ds.dataPtr();</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa97bf4be56f176e3af5b90f5b5955a04" kindref="member">amrex::VecReduce</ref>(n,<sp/>init_val,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(N<sp/>i,<sp/>T*<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>bop(*r,<sp/>v[i]);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>r,<sp/><ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a534f127a697d9afa2e13506bb9edacbb" kindref="member">Gpu::deviceReduceMax_full</ref>(dp,<sp/>r,<sp/>h);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a534f127a697d9afa2e13506bb9edacbb" kindref="member">Gpu::deviceReduceMax_full</ref>(dp,<sp/>r);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ds.dataValue();</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="553"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1ab3af21594fb654c6c051cdc49536bf35" kindref="member">Max</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val<sp/>=<sp/>std::numeric_limits&lt;T&gt;::lowest())</highlight></codeline>
<codeline lineno="554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1ab3af21594fb654c6c051cdc49536bf35" kindref="member">Reduce::Max</ref>(n,<sp/>v,<sp/>init_val,<sp/><ref refid="structamrex_1_1Greater" kindref="compound">amrex::Greater&lt;T&gt;</ref>());</highlight></codeline>
<codeline lineno="556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="560"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1ab3af21594fb654c6c051cdc49536bf35" kindref="member">Max</ref><sp/>(N<sp/>n,<sp/>F&amp;&amp;<sp/>f,<sp/>T<sp/>init_val<sp/>=<sp/>std::numeric_limits&lt;T&gt;::lowest())</highlight></codeline>
<codeline lineno="561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpMax&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;T&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref>(n,<sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(N<sp/>i)<sp/>-&gt;<sp/>ReduceTuple<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{f(i)};<sp/>});</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>tmp<sp/>=<sp/>amrex::get&lt;0&gt;(reduce_data.value());</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(tmp,init_val);</highlight></codeline>
<codeline lineno="568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>U,<sp/>typename<sp/>MINOP,<sp/>typename<sp/>MAXOP,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="571"><highlight class="normal">std::pair&lt;T,T&gt;<sp/><ref refid="namespaceamrex_1_1Reduce_1a407e04992fad29e568b551872b7343f2" kindref="member">MinMax</ref><sp/>(N<sp/>n,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>MINOP<sp/>minop,<sp/>MAXOP<sp/>maxop)</highlight></codeline>
<codeline lineno="572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Gpu_1_1LaunchSafeGuard" kindref="compound">Gpu::LaunchSafeGuard</ref><sp/>lsg(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array&lt;T,2&gt;</ref><sp/>hv{<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;T&gt;::max</ref>(),<sp/>std::numeric_limits&lt;T&gt;::lowest()};</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>dp<sp/>=<sp/>(T*)(<ref refid="namespaceamrex_1a97a60825e6e7886b3502c2f4ed1eb417" kindref="member">The_Device_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a46ce2cd5cfc039cec64548b031fbde2e" kindref="member">alloc</ref>(2*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)));</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>Gpu::htod_memcpy_async(dp,<sp/>hv.data(),<sp/>2*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;T,2&gt;</ref><sp/>Real2;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa97bf4be56f176e3af5b90f5b5955a04" kindref="member">amrex::VecReduce</ref>(n,<sp/>Real2{hv[0],hv[1]},</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(N<sp/>i,<sp/>Real2*<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*r)[0]<sp/>=<sp/>minop((*r)[0],<sp/>v[i]);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*r)[1]<sp/>=<sp/>maxop((*r)[1],<sp/>v[i]);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(Real2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>r,<sp/><ref refid="structamrex_1_1Gpu_1_1Handler" kindref="compound">Gpu::Handler</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>h)<sp/>noexcept</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1ab77177838702bf96404e79d35a1582da" kindref="member">Gpu::deviceReduceMin_full</ref>(dp<sp/><sp/>,<sp/>r[0],<sp/>h);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a534f127a697d9afa2e13506bb9edacbb" kindref="member">Gpu::deviceReduceMax_full</ref>(dp+1,<sp/>r[1],<sp/>h);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(Real2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1ab77177838702bf96404e79d35a1582da" kindref="member">Gpu::deviceReduceMin_full</ref>(dp<sp/><sp/>,<sp/>r[0]);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a534f127a697d9afa2e13506bb9edacbb" kindref="member">Gpu::deviceReduceMax_full</ref>(dp+1,<sp/>r[1]);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a998c5815369d23cd73eea1b09f43a966" kindref="member">Gpu::dtoh_memcpy</ref>(hv.data(),<sp/><ref refid="namespacesdcquadrature__mod_1a8e53936d3fd7c9e7c1870a499156cd87" kindref="member">dp</ref>,<sp/>2*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a97a60825e6e7886b3502c2f4ed1eb417" kindref="member">The_Device_Arena</ref>()-&gt;<ref refid="classamrex_1_1Arena_1a0c7e0730574c98febb6ddca2712cb515" kindref="member">free</ref>(dp);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(hv[0],hv[1]);</highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="603"><highlight class="normal">std::pair&lt;T,T&gt;<sp/><ref refid="namespaceamrex_1_1Reduce_1a407e04992fad29e568b551872b7343f2" kindref="member">MinMax</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v)</highlight></codeline>
<codeline lineno="604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Reduce::MinMax&lt;T&gt;(n,<sp/>v,<sp/><ref refid="structamrex_1_1Less" kindref="compound">amrex::Less&lt;T&gt;</ref>(),<sp/><ref refid="structamrex_1_1Greater" kindref="compound">amrex::Greater&lt;T&gt;</ref>());</highlight></codeline>
<codeline lineno="606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="610"><highlight class="normal">std::pair&lt;T,T&gt;<sp/><ref refid="namespaceamrex_1_1Reduce_1a407e04992fad29e568b551872b7343f2" kindref="member">MinMax</ref><sp/>(N<sp/>n,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpMin,ReduceOpMax&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;T,T&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref>(n,<sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(N<sp/>i)<sp/>-&gt;<sp/>ReduceTuple<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>tmp<sp/>=<sp/>f(i);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{tmp,tmp};</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hv<sp/>=<sp/>reduce_data.value();</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(amrex::get&lt;0&gt;(hv),<sp/>amrex::get&lt;1&gt;(hv));</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>P,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1ada14c45ee9673665c1c3df6749ede80f" kindref="member">AnyOf</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>P&amp;&amp;<sp/>pred)</highlight></codeline>
<codeline lineno="625"><highlight class="normal">{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Gpu_1_1LaunchSafeGuard" kindref="compound">Gpu::LaunchSafeGuard</ref><sp/>lsg(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Gpu_1_1DeviceScalar" kindref="compound">Gpu::DeviceScalar&lt;int&gt;</ref><sp/>ds(0);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dp<sp/>=<sp/>ds.dataPtr();</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xxxxx<sp/>DPCPP<sp/>todo:<sp/>Anyof<sp/>N:<sp/>better<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">amrex::ParallelFor</ref>(n,<sp/>[=]<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>noexcept</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>pred(v[i])<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a53a66f5fe06e3b8839cb0f79f0d0ea3d" kindref="member">Gpu::Atomic::LogicalOr</ref>(dp,<sp/>r);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ec<sp/>=<sp/>Gpu::ExecutionConfig(n);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>ec.numBlocks.x<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(ec.numBlocks.x,<sp/>Gpu::Device::maxBlocksPerLaunch());</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ada73ee47d1c3a0d63725ce77e1334257" kindref="member">amrex::launch</ref>(ec.numBlocks.x,<sp/>ec.numThreads.x,<sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__shared__<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>has_any;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(threadIdx.x<sp/>==<sp/>0)<sp/>has_any<sp/>=<sp/>*dp;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__syncthreads();</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!has_any)</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(N<sp/>i<sp/>=<sp/>blockDim.x*blockIdx.x+threadIdx.x,<sp/>stride<sp/>=<sp/>blockDim.x*gridDim.x;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>n<sp/>&amp;&amp;<sp/>!r;<sp/>i<sp/>+=<sp/>stride)</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>pred(v[i])<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>Gpu::blockReduce&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(r,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<ref refid="structamrex_1_1Plus" kindref="compound">amrex::Plus&lt;int&gt;</ref><sp/>&gt;(),<sp/>0);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(threadIdx.x<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>r)<sp/>*dp<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ds.dataValue();</highlight></codeline>
<codeline lineno="660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P&gt;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1ada14c45ee9673665c1c3df6749ede80f" kindref="member">AnyOf</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>P&amp;&amp;<sp/>pred)</highlight></codeline>
<codeline lineno="664"><highlight class="normal">{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Gpu_1_1LaunchSafeGuard" kindref="compound">Gpu::LaunchSafeGuard</ref><sp/>lsg(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Gpu_1_1DeviceScalar" kindref="compound">Gpu::DeviceScalar&lt;int&gt;</ref><sp/>ds(0);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dp<sp/>=<sp/>ds.dataPtr();</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_DPCPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>xxxxx<sp/>DPCPP<sp/>todo:<sp/>Anyof<sp/>Box:<sp/>better<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">amrex::ParallelFor</ref>(box,<sp/>[=]<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k)<sp/>noexcept</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>pred(i,j,k)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a53a66f5fe06e3b8839cb0f79f0d0ea3d" kindref="member">Gpu::Atomic::LogicalOr</ref>(dp,<sp/>r);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncells<sp/>=<sp/>box.<ref refid="classamrex_1_1Box_1a74b39c8b70837cdb61ade61a834997ff" kindref="member">numPts</ref>();</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/><sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="namespaceamrex_1ab8f44b56e5ac2f53bcfe742891c1c79c" kindref="member">amrex::length</ref>(box);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ec<sp/>=<sp/>Gpu::ExecutionConfig(ncells);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>ec.numBlocks.x<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(ec.numBlocks.x,<sp/>Gpu::Device::maxBlocksPerLaunch());</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>AMREX_LAUNCH_KERNEL(ec.numBlocks,<sp/>ec.numThreads,<sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__shared__<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>has_any;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(threadIdx.x<sp/>==<sp/>0)<sp/>has_any<sp/>=<sp/>*dp;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__syncthreads();</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!has_any)</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icell<sp/>=<sp/>blockDim.x*blockIdx.x+threadIdx.x,<sp/>stride<sp/>=<sp/>blockDim.x*gridDim.x;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>icell<sp/>&lt;<sp/>ncells<sp/>&amp;&amp;<sp/>!r;<sp/>icell<sp/>+=<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>k<sp/>=<sp/><sp/>icell<sp/>/<sp/><sp/><sp/>(len.x*len.y);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>j<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>/<sp/><sp/><sp/>len.x;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>i<sp/>=<sp/>(icell<sp/>-<sp/>k*(len.x*len.y))<sp/>-<sp/>j*len.x;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>lo.x;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>lo.y;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/>lo.z;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>pred(i,j,k)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>Gpu::blockReduce&lt;Gpu::Device::warp_size&gt;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(r,<sp/>Gpu::warpReduce&lt;Gpu::Device::warp_size,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<ref refid="structamrex_1_1Plus" kindref="compound">amrex::Plus&lt;int&gt;</ref><sp/>&gt;(),<sp/>0);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(threadIdx.x<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>r)<sp/>*dp<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ds.dataValue();</highlight></codeline>
<codeline lineno="707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="714" refid="classamrex_1_1ReduceData" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ReduceData</highlight></codeline>
<codeline lineno="715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="717" refid="classamrex_1_1ReduceData_1a61d113644b72c6bda6b1221a9079fe8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1GpuTuple" kindref="compound">Type</ref><sp/>=<sp/><ref refid="classamrex_1_1GpuTuple" kindref="compound">GpuTuple</ref>&lt;Ts...&gt;;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ps&gt;</highlight></codeline>
<codeline lineno="720" refid="classamrex_1_1ReduceData_1a71efff73cd20652eb13d1a087e22f14a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ReduceData_1a71efff73cd20652eb13d1a087e22f14a" kindref="member">ReduceData</ref><sp/>(<ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;Ps...&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_tuple()</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1aa49407a52dbde68233cb025e571b8e0a" kindref="member">Reduce::detail::for_each_init</ref>&lt;0,<sp/><ref refid="classamrex_1_1GpuTuple" kindref="compound">Type</ref>,<sp/>Ps...&gt;(m_tuple);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>ReduceData<sp/>(<ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;Ts...&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>ReduceData<sp/>(<ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;Ts...&gt;</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=<sp/>(<ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;Ts...&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=<sp/>(<ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;Ts...&gt;</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731" refid="classamrex_1_1ReduceData_1a944bfb881e9bfb88dd7061bac0df76a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1GpuTuple" kindref="compound">Type</ref><sp/><ref refid="classamrex_1_1ReduceData_1a944bfb881e9bfb88dd7061bac0df76a4" kindref="member">value</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="732"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_tuple;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736" refid="classamrex_1_1ReduceData_1a194ec449a1715b376740f5465cb96bc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1GpuTuple" kindref="compound">Type</ref>&amp;<sp/><ref refid="classamrex_1_1ReduceData_1a194ec449a1715b376740f5465cb96bc3" kindref="member">reference</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_tuple;<sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="739" refid="classamrex_1_1ReduceData_1af4154a58a8fb367004c4297cf6b8e189" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1GpuTuple" kindref="compound">Type</ref><sp/><ref refid="classamrex_1_1ReduceData_1af4154a58a8fb367004c4297cf6b8e189" kindref="member">m_tuple</ref>;</highlight></codeline>
<codeline lineno="740"><highlight class="normal">};</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ps&gt;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps</ref></highlight></codeline>
<codeline lineno="744"><highlight class="normal">{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="749" refid="classamrex_1_1ReduceOps_1a9d7de78d79286ae701b8fd50652c4a49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ReduceOps_1a9d7de78d79286ae701b8fd50652c4a49" kindref="member">call_f</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>D<sp/>&amp;<sp/></highlight><highlight class="comment">/*reduce_data*/</highlight><highlight class="normal">,<sp/>F<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>f)</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>-&gt;<sp/>decltype(f(0,0,0))</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D::Type;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>r;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1aa49407a52dbde68233cb025e571b8e0a" kindref="member">Reduce::detail::for_each_init</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a6ce6b4176121c2c23327903a8139af0c" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pr<sp/>=<sp/>f(i,j,k);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">Reduce::detail::for_each_local</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r,<sp/>pr);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="768" refid="classamrex_1_1ReduceOps_1ac50bf0fd7c3d53d20aa796aaf94a3da8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ReduceOps_1ac50bf0fd7c3d53d20aa796aaf94a3da8" kindref="member">call_f</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>D&amp;,<sp/>F<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>f)</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept<sp/>-&gt;<sp/>decltype(f(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref>()))</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(box);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="777" refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>D<sp/>&amp;<sp/>reduce_data,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D::Type;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple&amp;<sp/>rr<sp/>=<sp/>reduce_data.reference();</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1aca3a36a75e09011d483bcaaa6f9ee7f5" kindref="member">call_f</ref>(box,<sp/>reduce_data,<sp/>f);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">Reduce::detail::for_each_parallel</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(rr,r);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="787" refid="classamrex_1_1ReduceOps_1a0b2c2b761a373ac5a95273721a8ae1fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ReduceOps_1a0b2c2b761a373ac5a95273721a8ae1fd" kindref="member">eval</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>N<sp/>ncomp,<sp/>D<sp/>&amp;<sp/>reduce_data,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D::Type;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>r;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1aa49407a52dbde68233cb025e571b8e0a" kindref="member">Reduce::detail::for_each_init</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple&amp;<sp/>rr<sp/>=<sp/>reduce_data.reference();</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a6ce6b4176121c2c23327903a8139af0c" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(N<sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>ncomp;<sp/>++n)<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pr<sp/>=<sp/>f(i,j,k,n);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">Reduce::detail::for_each_local</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r,<sp/>pr);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}}}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">Reduce::detail::for_each_parallel</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(rr,r);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="807" refid="classamrex_1_1ReduceOps_1a65284f038ea29beb80b99c1a5f246f04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ReduceOps_1a65284f038ea29beb80b99c1a5f246f04" kindref="member">eval</ref><sp/>(N<sp/>n,<sp/>D<sp/>&amp;<sp/>reduce_data,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D::Type;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>r;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1aa49407a52dbde68233cb025e571b8e0a" kindref="member">Reduce::detail::for_each_init</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple&amp;<sp/>rr<sp/>=<sp/>reduce_data.reference();</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(N<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pr<sp/>=<sp/>f(i);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1ad02f83351a56bf7abc3fc3ae5807ebce" kindref="member">Reduce::detail::for_each_local</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(r,<sp/>pr);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Reduce_1_1detail_1a084c624b29326e43e50a5dbe65db8b50" kindref="member">Reduce::detail::for_each_parallel</ref>&lt;0,<sp/>ReduceTuple,<sp/>Ps...&gt;(rr,r);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal">};</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1detail_1a2d9a622392a0eee879ac8180cb2371e6" kindref="member">Reduce</ref><sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>U,<sp/>typename<sp/>BOP,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="824" refid="namespaceamrex_1_1Reduce_1a3a1bf2418459469b609d213560f4a8da" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1a3a1bf2418459469b609d213560f4a8da" kindref="member">Sum</ref><sp/>(N<sp/>n,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val,<sp/>BOP<sp/>bop)</highlight></codeline>
<codeline lineno="825"><highlight class="normal">{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref><sp/>=<sp/>init_val;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>dp<sp/>=<sp/>&amp;<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa97bf4be56f176e3af5b90f5b5955a04" kindref="member">amrex::VecReduce</ref>(n,<sp/>init_val,</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/>(N<sp/>i,<sp/>T*<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>bop(*r,<sp/>v[i]);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/>(T<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1aeee12c6159c662a95ab53b5b07f4b8e1" kindref="member">Gpu::deviceReduceSum_full</ref>(dp,<sp/>r);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>;</highlight></codeline>
<codeline lineno="838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="842" refid="namespaceamrex_1_1Reduce_1a4f32ecfd40118417b8bb81078aa24c40" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1a3a1bf2418459469b609d213560f4a8da" kindref="member">Sum</ref><sp/>(N<sp/>n,<sp/>F&amp;&amp;<sp/>f,<sp/>T<sp/>init_val<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="843"><highlight class="normal">{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>r<sp/>=<sp/>init_val;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_OMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>reduction(+:r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(N<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>+=<sp/>f(i);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="855" refid="namespaceamrex_1_1Reduce_1afac1250d786b98bab8d8d2cf5c06411e" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1a3a1bf2418459469b609d213560f4a8da" kindref="member">Sum</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val<sp/>=<sp/>0)</highlight></codeline>
<codeline lineno="856"><highlight class="normal">{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1a3a1bf2418459469b609d213560f4a8da" kindref="member">Sum</ref>(n,<sp/>[=]<sp/>(N<sp/>i)<sp/>-&gt;<sp/>T<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v[i];<sp/>},<sp/>init_val);</highlight></codeline>
<codeline lineno="858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>U,<sp/>typename<sp/>BOP,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="861" refid="namespaceamrex_1_1Reduce_1aa9002a6dc16f2e87ac519151c6d8a7df" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1aa9002a6dc16f2e87ac519151c6d8a7df" kindref="member">Min</ref><sp/>(N<sp/>n,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val,<sp/>BOP<sp/>bop)</highlight></codeline>
<codeline lineno="862"><highlight class="normal">{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>mn<sp/>=<sp/>init_val;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>dp<sp/>=<sp/>&amp;mn;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa97bf4be56f176e3af5b90f5b5955a04" kindref="member">amrex::VecReduce</ref>(n,<sp/>init_val,</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/>(N<sp/>i,<sp/>T*<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>bop(*r,<sp/>v[i]);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/>(T<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1ab77177838702bf96404e79d35a1582da" kindref="member">Gpu::deviceReduceMin_full</ref>(dp,<sp/>r);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mn;</highlight></codeline>
<codeline lineno="875"><highlight class="normal">}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="879" refid="namespaceamrex_1_1Reduce_1a7da96d3ec8efffe9ebeae62d5c3fb710" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1aa9002a6dc16f2e87ac519151c6d8a7df" kindref="member">Min</ref><sp/>(N<sp/>n,<sp/>F&amp;&amp;<sp/>f,<sp/>T<sp/>init_val<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;T&gt;::max</ref>())</highlight></codeline>
<codeline lineno="880"><highlight class="normal">{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>r<sp/>=<sp/>init_val;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_OMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>reduction(min:r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(N<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(r,f(i));</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="889"><highlight class="normal">}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="892" refid="namespaceamrex_1_1Reduce_1a07365bcdfaa9fe246330e8d91f71ecc0" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1aa9002a6dc16f2e87ac519151c6d8a7df" kindref="member">Min</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;T&gt;::max</ref>())</highlight></codeline>
<codeline lineno="893"><highlight class="normal">{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1aa9002a6dc16f2e87ac519151c6d8a7df" kindref="member">Reduce::Min</ref>(n,<sp/>[=]<sp/>(N<sp/>i)<sp/>-&gt;<sp/>T<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v[i];<sp/>},<sp/>init_val);</highlight></codeline>
<codeline lineno="895"><highlight class="normal">}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>U,<sp/>typename<sp/>BOP,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="898" refid="namespaceamrex_1_1Reduce_1ab3af21594fb654c6c051cdc49536bf35" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1ab3af21594fb654c6c051cdc49536bf35" kindref="member">Max</ref><sp/>(N<sp/>n,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val,<sp/>BOP<sp/>bop)</highlight></codeline>
<codeline lineno="899"><highlight class="normal">{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>mx<sp/>=<sp/>init_val;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>dp<sp/>=<sp/>&amp;mx;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa97bf4be56f176e3af5b90f5b5955a04" kindref="member">amrex::VecReduce</ref>(n,<sp/>init_val,</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/>(N<sp/>i,<sp/>T*<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*r<sp/>=<sp/>bop(*r,<sp/>v[i]);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/>(T<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a534f127a697d9afa2e13506bb9edacbb" kindref="member">Gpu::deviceReduceMax_full</ref>(dp,<sp/>r);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mx;</highlight></codeline>
<codeline lineno="912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="916" refid="namespaceamrex_1_1Reduce_1a3cea6f37705bcc227603bf4c75507b94" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1ab3af21594fb654c6c051cdc49536bf35" kindref="member">Max</ref><sp/>(N<sp/>n,<sp/>F&amp;&amp;<sp/>f,<sp/>T<sp/>init_val<sp/>=<sp/>std::numeric_limits&lt;T&gt;::lowest())</highlight></codeline>
<codeline lineno="917"><highlight class="normal">{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>r<sp/>=<sp/>init_val;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_OMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>reduction(max:r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(N<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(r,f(i));</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="929" refid="namespaceamrex_1_1Reduce_1a7ac8075282193aef5024b3a7092a0f3c" refkind="member"><highlight class="normal">T<sp/><ref refid="namespaceamrex_1_1Reduce_1ab3af21594fb654c6c051cdc49536bf35" kindref="member">Max</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>T<sp/>init_val<sp/>=<sp/>std::numeric_limits&lt;T&gt;::lowest())</highlight></codeline>
<codeline lineno="930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1ab3af21594fb654c6c051cdc49536bf35" kindref="member">Reduce::Max</ref>(n,<sp/>[=]<sp/>(N<sp/>i)<sp/>-&gt;<sp/>T<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v[i];<sp/>},<sp/>init_val);</highlight></codeline>
<codeline lineno="932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>U,<sp/>typename<sp/>MINOP,<sp/>typename<sp/>MAXOP,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="935" refid="namespaceamrex_1_1Reduce_1a407e04992fad29e568b551872b7343f2" refkind="member"><highlight class="normal">std::pair&lt;T,T&gt;<sp/><ref refid="namespaceamrex_1_1Reduce_1a407e04992fad29e568b551872b7343f2" kindref="member">MinMax</ref><sp/>(N<sp/>n,<sp/>U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>MINOP<sp/>minop,<sp/>MAXOP<sp/>maxop)</highlight></codeline>
<codeline lineno="936"><highlight class="normal">{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array&lt;T,2&gt;</ref><sp/>hv{<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;T&gt;::max</ref>(),<sp/>std::numeric_limits&lt;T&gt;::lowest()};</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>dp<sp/>=<sp/>hv.data();</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray&lt;T,2&gt;</ref><sp/>Real2;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa97bf4be56f176e3af5b90f5b5955a04" kindref="member">amrex::VecReduce</ref>(n,<sp/>Real2{hv[0],hv[1]},</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/>(N<sp/>i,<sp/>Real2*<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*r)[0]<sp/>=<sp/>minop((*r)[0],<sp/>v[i]);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*r)[1]<sp/>=<sp/>maxop((*r)[1],<sp/>v[i]);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>[=]<sp/>(Real2<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>r)<sp/>noexcept</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1ab77177838702bf96404e79d35a1582da" kindref="member">Gpu::deviceReduceMin_full</ref>(dp<sp/><sp/>,<sp/>r[0]);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a534f127a697d9afa2e13506bb9edacbb" kindref="member">Gpu::deviceReduceMax_full</ref>(dp+1,<sp/>r[1]);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(hv[0],hv[1]);</highlight></codeline>
<codeline lineno="952"><highlight class="normal">}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M=<ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="956" refid="namespaceamrex_1_1Reduce_1a5136e9995043a3e7a3aa0b4ffbe5f429" refkind="member"><highlight class="normal">std::pair&lt;T,T&gt;<sp/><ref refid="namespaceamrex_1_1Reduce_1aa9002a6dc16f2e87ac519151c6d8a7df" kindref="member">Min</ref><sp/>(N<sp/>n,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="957"><highlight class="normal">{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>r_min<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;T&gt;::max</ref>();</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>r_max<sp/>=<sp/>std::numeric_limits&lt;T&gt;::lowest();</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_OMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>reduction(min:r_min)<sp/>reduction(max:r_max)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(N<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>tmp<sp/>=<sp/>f(i);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_min<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(r_min,tmp);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_max<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(r_max,tmp);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(r_min,r_max);</highlight></codeline>
<codeline lineno="969"><highlight class="normal">}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="972" refid="namespaceamrex_1_1Reduce_1a17b6d6ef1df2c2803c3f460b51ddd012" refkind="member"><highlight class="normal">std::pair&lt;T,T&gt;<sp/><ref refid="namespaceamrex_1_1Reduce_1a407e04992fad29e568b551872b7343f2" kindref="member">MinMax</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v)</highlight></codeline>
<codeline lineno="973"><highlight class="normal">{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Reduce::MinMax&lt;T&gt;(n,<sp/>[=]<sp/>(N<sp/>i)<sp/>-&gt;<sp/>T<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v[i];<sp/>});</highlight></codeline>
<codeline lineno="975"><highlight class="normal">}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>N,<sp/>typename<sp/>P,<sp/>typename<sp/>M=amrex::EnableIf_t&lt;std::is_integral&lt;N&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="978" refid="namespaceamrex_1_1Reduce_1ada14c45ee9673665c1c3df6749ede80f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1ada14c45ee9673665c1c3df6749ede80f" kindref="member">AnyOf</ref><sp/>(N<sp/>n,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>v,<sp/>P&amp;&amp;<sp/>pred)</highlight></codeline>
<codeline lineno="979"><highlight class="normal">{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::any_of(v,<sp/>v+n,<sp/>pred);</highlight></codeline>
<codeline lineno="981"><highlight class="normal">}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P&gt;</highlight></codeline>
<codeline lineno="984" refid="namespaceamrex_1_1Reduce_1a7cabd7f1db3095d4896d075cc936f0e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Reduce_1ada14c45ee9673665c1c3df6749ede80f" kindref="member">AnyOf</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>box,<sp/>P&amp;&amp;pred)</highlight></codeline>
<codeline lineno="985"><highlight class="normal">{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/><ref refid="namespaceamrex_1a71600c8a528e0f1863154e4cf0183cbc" kindref="member">amrex::lbound</ref>(box);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/><ref refid="namespaceamrex_1a6ce6b4176121c2c23327903a8139af0c" kindref="member">amrex::ubound</ref>(box);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lo.z;<sp/>k<sp/>&lt;=<sp/>hi.z;<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>lo.y;<sp/>j<sp/>&lt;=<sp/>hi.y;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>lo.x;<sp/>i<sp/>&lt;=<sp/>hi.x;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pred(i,j,k))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="994"><highlight class="normal">}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal">}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H"/>
  </compounddef>
</doxygen>
