<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1FluxRegister" kind="class" language="C++" prot="public">
    <compoundname>amrex::FluxRegister</compoundname>
    <basecompoundref refid="classamrex_1_1BndryRegisterT" prot="public" virt="non-virtual">amrex::BndryRegisterT&lt; MultiFab &gt;</basecompoundref>
    <includes refid="AMReX__FluxRegister_8H" local="no">AMReX_FluxRegister.H</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classamrex_1_1FluxRegister_1a0886ce290105f66be4dc23059aa69cc7" prot="public" static="no" strong="no">
        <type></type>
        <name>FrOp</name>
        <enumvalue id="classamrex_1_1FluxRegister_1a0886ce290105f66be4dc23059aa69cc7ad52ae5c71ab1fc1193bbc006a73ab613" prot="public">
          <name>COPY</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classamrex_1_1FluxRegister_1a0886ce290105f66be4dc23059aa69cc7a6ddca7001a16a7ff26dc0c2c3910ae3a" prot="public">
          <name>ADD</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>An enum that says whether to add or copy src data to members. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="56" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" bodystart="56" bodyend="56"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1FluxRegister_1a8d33188a1ba19154997256c66083b10e" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></type>
        <definition>IntVect amrex::FluxRegister::ratio</definition>
        <argsstring></argsstring>
        <name>ratio</name>
        <briefdescription>
<para>Refinement ratio. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="390" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FluxRegister_1a43c7c6ca83e0c49296f131ecf5eb8b0e" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FluxRegister::fine_level</definition>
        <argsstring></argsstring>
        <name>fine_level</name>
        <briefdescription>
<para>Current level + 1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="393" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FluxRegister_1a311b5caaf3b58835f84598f46315953d" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FluxRegister::ncomp</definition>
        <argsstring></argsstring>
        <name>ncomp</name>
        <briefdescription>
<para>Number of state components. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="396" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" bodystart="396" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1a935b4c43c77115935fcf76b3e4a6e009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FluxRegister::FluxRegister</definition>
        <argsstring>()</argsstring>
        <name>FluxRegister</name>
        <briefdescription>
<para>The default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="27" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="11" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1aea5e30aea810dbb261555f307106d406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FluxRegister::FluxRegister</definition>
        <argsstring>(const BoxArray &amp;fine_boxes, const DistributionMapping &amp;dm, const IntVect &amp;ref_ratio, int fine_lev, int nvar)</argsstring>
        <name>FluxRegister</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>fine_boxes</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dm</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>ref_ratio</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>fine_lev</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nvar</declname>
        </param>
        <briefdescription>
<para>The constructor. This version allows setting the <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fine_boxes</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dm</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ref_ratio</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fine_lev</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nvar</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="38" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="18" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1a02d8b5cbd5285fbddccbbb415cba051c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FluxRegister::~FluxRegister</definition>
        <argsstring>()=default</argsstring>
        <name>~FluxRegister</name>
        <briefdescription>
<para>The destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="47" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1a443996c9a22893bae492440a1f716096" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::FluxRegister::FluxRegister</definition>
        <argsstring>(FluxRegister &amp;&amp;rhs) noexcept=default</argsstring>
        <name>FluxRegister</name>
        <param>
          <type><ref refid="classamrex_1_1FluxRegister" kindref="compound">FluxRegister</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="49" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1a534089570aa27c91fc783470dc34edc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FluxRegister::FluxRegister</definition>
        <argsstring>(const FluxRegister &amp;rhs)=delete</argsstring>
        <name>FluxRegister</name>
        <param>
          <type>const <ref refid="classamrex_1_1FluxRegister" kindref="compound">FluxRegister</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="51" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1ad0bad9568c98a4a189a906541ccbad41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1FluxRegister" kindref="compound">FluxRegister</ref> &amp;</type>
        <definition>FluxRegister&amp; amrex::FluxRegister::operator=</definition>
        <argsstring>(const FluxRegister &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1FluxRegister" kindref="compound">FluxRegister</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="52" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1a8cc3f9a89b01e82521248e4bb7ce6074" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1FluxRegister" kindref="compound">FluxRegister</ref> &amp;</type>
        <definition>FluxRegister&amp; amrex::FluxRegister::operator=</definition>
        <argsstring>(FluxRegister &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1FluxRegister" kindref="compound">FluxRegister</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="53" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1ae0f19ac94fa685e649d56cbdec3eebca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FluxRegister::define</definition>
        <argsstring>(const BoxArray &amp;fine_boxes, const DistributionMapping &amp;dm, const IntVect &amp;ref_ratio, int fine_lev, int nvar)</argsstring>
        <name>define</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>fine_boxes</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dm</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>ref_ratio</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>fine_lev</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nvar</declname>
        </param>
        <briefdescription>
<para>Initialize after using default constructor. This version allows setting the <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fine_boxes</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dm</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ref_ratio</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fine_lev</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nvar</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="68" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="58" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1a453233dd69feba7dad7ae904a24d7aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FluxRegister::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="74" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1acee4de5e4f610fb4bc86bdae1ac7fd49" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
        <definition>const IntVect &amp; amrex::FluxRegister::refRatio</definition>
        <argsstring>() const noexcept</argsstring>
        <name>refRatio</name>
        <briefdescription>
<para>Returns the refinement ratio. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="80" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1a7aa00b34c175fadfdb6bae33c68bf5d1" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FluxRegister::fineLevel</definition>
        <argsstring>() const noexcept</argsstring>
        <name>fineLevel</name>
        <briefdescription>
<para>Returns the level number of the fine level. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="85" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1aef5f291512ba1c3e9208ff5c8216f3ab" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FluxRegister::crseLevel</definition>
        <argsstring>() const noexcept</argsstring>
        <name>crseLevel</name>
        <briefdescription>
<para>Returns the level number of the coarse level (<ref refid="classamrex_1_1FluxRegister_1a7aa00b34c175fadfdb6bae33c68bf5d1" kindref="member">fineLevel()</ref>-1). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="90" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1af8c25dc77c81cfd2e133f1ed79fe0032" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FluxRegister::nComp</definition>
        <argsstring>() const noexcept</argsstring>
        <name>nComp</name>
        <briefdescription>
<para>The number of components. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="95" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1a93804af47daca2ba0d18983401fe5f00" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
        <definition>const BoxArray &amp; amrex::FluxRegister::coarsenedBoxes</definition>
        <argsstring>() const noexcept</argsstring>
        <name>coarsenedBoxes</name>
        <briefdescription>
<para>The coarsened boxes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="100" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1a8eb3103253e2e3aba75f6d67574243f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Real</type>
        <definition>Real amrex::FluxRegister::SumReg</definition>
        <argsstring>(int comp) const</argsstring>
        <name>SumReg</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>comp</declname>
        </param>
        <briefdescription>
<para>Returns the sum of the registers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>comp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="107" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="95" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1ac930be53c9ed97f2b650d00d9922d375" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FluxRegister::CrseInit</definition>
        <argsstring>(const MultiFab &amp;mflx, const MultiFab &amp;area, int dir, int srccomp, int destcomp, int numcomp, Real mult=-1.0, FrOp op=FluxRegister::COPY)</argsstring>
        <name>CrseInit</name>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>mflx</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>area</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dir</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>srccomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>destcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>numcomp</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>mult</declname>
          <defval>-1.0</defval>
        </param>
        <param>
          <type><ref refid="classamrex_1_1FluxRegister_1a0886ce290105f66be4dc23059aa69cc7" kindref="member">FrOp</ref></type>
          <declname>op</declname>
          <defval><ref refid="classamrex_1_1FluxRegister_1a0886ce290105f66be4dc23059aa69cc7ad52ae5c71ab1fc1193bbc006a73ab613" kindref="member">FluxRegister::COPY</ref></defval>
        </param>
        <briefdescription>
<para>Initialize flux correction with coarse data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mflx</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>area</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>srccomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destcomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numcomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mult</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="121" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="160" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1aec1bb41bffa8b078895f0f75149cdae1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FluxRegister::CrseInit</definition>
        <argsstring>(const MultiFab &amp;mflx, int dir, int srccomp, int destcomp, int numcomp, Real mult=-1.0, FrOp op=FluxRegister::COPY)</argsstring>
        <name>CrseInit</name>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>mflx</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dir</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>srccomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>destcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>numcomp</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>mult</declname>
          <defval>-1.0</defval>
        </param>
        <param>
          <type><ref refid="classamrex_1_1FluxRegister_1a0886ce290105f66be4dc23059aa69cc7" kindref="member">FrOp</ref></type>
          <declname>op</declname>
          <defval><ref refid="classamrex_1_1FluxRegister_1a0886ce290105f66be4dc23059aa69cc7ad52ae5c71ab1fc1193bbc006a73ab613" kindref="member">FluxRegister::COPY</ref></defval>
        </param>
        <briefdescription>
<para>Initialize flux correction with coarse data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mflx</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>srccomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destcomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numcomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mult</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="141" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="263" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1a4f11b763bb868b4245b5135f02da8217" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FluxRegister::CrseAdd</definition>
        <argsstring>(const MultiFab &amp;mflx, const MultiFab &amp;area, int dir, int srccomp, int destcomp, int numcomp, Real mult, const Geometry &amp;geom)</argsstring>
        <name>CrseAdd</name>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>mflx</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>area</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dir</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>srccomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>destcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>numcomp</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>mult</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
<para>Add coarse fluxes to the flux register. This is different from CrseInit with <ref refid="classamrex_1_1FluxRegister_1a0886ce290105f66be4dc23059aa69cc7a6ddca7001a16a7ff26dc0c2c3910ae3a" kindref="member">FluxRegister::ADD</ref>. This is used for cases in which the grids covered by fine do not have fluxes computed (e.g., FLASH). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mflx</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>area</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>srccomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destcomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numcomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mult</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>geom</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="164" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="283" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1ac01db2619376c784ccb95918f39d483e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FluxRegister::CrseAdd</definition>
        <argsstring>(const MultiFab &amp;mflx, int dir, int srccomp, int destcomp, int numcomp, Real mult, const Geometry &amp;geom)</argsstring>
        <name>CrseAdd</name>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>mflx</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dir</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>srccomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>destcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>numcomp</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>mult</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
<para>/in this version the area is assumed to muliplied into the flux (if not, use scale to fix) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mflx</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>srccomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destcomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numcomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mult</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>geom</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="184" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="339" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1ab43d78762f0ea9fe8a2146dab58b9cf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FluxRegister::FineAdd</definition>
        <argsstring>(const MultiFab &amp;mflx, int dir, int srccomp, int destcomp, int numcomp, Real mult)</argsstring>
        <name>FineAdd</name>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>mflx</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dir</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>srccomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>destcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>numcomp</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>mult</declname>
        </param>
        <briefdescription>
<para>Increment flux correction with fine data. </para>
        </briefdescription>
        <detaileddescription>
<para>/in this version the area is assumed to muliplied into the flux (if not, use scale to fix)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mflx</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>srccomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destcomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numcomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mult</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="204" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="359" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1a95d4c8d650762923da71c09c414b2258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FluxRegister::FineAdd</definition>
        <argsstring>(const MultiFab &amp;mflx, const MultiFab &amp;area, int dir, int srccomp, int destcomp, int numcomp, Real mult)</argsstring>
        <name>FineAdd</name>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>mflx</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>area</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dir</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>srccomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>destcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>numcomp</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>mult</declname>
        </param>
        <briefdescription>
<para>Increment flux correction with fine data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mflx</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>area</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>srccomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destcomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numcomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mult</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="222" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="377" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1a1632f69b9bb40407c6622d6841c48938" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FluxRegister::FineAdd</definition>
        <argsstring>(const FArrayBox &amp;flux, int dir, int boxno, int srccomp, int destcomp, int numcomp, Real mult, RunOn runon) noexcept</argsstring>
        <name>FineAdd</name>
        <param>
          <type>const <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
          <declname>flux</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dir</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>boxno</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>srccomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>destcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>numcomp</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>mult</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
          <declname>runon</declname>
        </param>
        <briefdescription>
<para>Increment flux correction with fine data. </para>
        </briefdescription>
        <detaileddescription>
<para>in this version the area is assumed to muliplied into the flux (if not, use scale to fix)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flux</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boxno</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>srccomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destcomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numcomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mult</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="243" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="396" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1a4e3874c3557a701913061d4a9ef49c4d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FluxRegister::FineAdd</definition>
        <argsstring>(const FArrayBox &amp;flux, const FArrayBox &amp;area, int dir, int boxno, int srccomp, int destcomp, int numcomp, Real mult, RunOn runon) noexcept</argsstring>
        <name>FineAdd</name>
        <param>
          <type>const <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
          <declname>area</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dir</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>boxno</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>srccomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>destcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>numcomp</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>mult</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
          <declname>runon</declname>
        </param>
        <briefdescription>
<para>Increment flux correction with fine data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flux</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>area</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boxno</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>srccomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destcomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numcomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mult</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="264" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="443" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1a6295b79fe12737051efd360468bfe344" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FluxRegister::FineSetVal</definition>
        <argsstring>(int dir, int boxno, int destcomp, int numcomp, Real val, RunOn runon) noexcept</argsstring>
        <name>FineSetVal</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dir</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>boxno</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>destcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>numcomp</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
          <declname>runon</declname>
        </param>
        <briefdescription>
<para>Set flux correction data for a fine box (given by boxno) to a given value. This routine used by FLASH does NOT run on gpu for safety. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boxno</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destcomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numcomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="284" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="496" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1a1fdafda5f1518b4eabb95c307ca5635e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FluxRegister::Reflux</definition>
        <argsstring>(MultiFab &amp;mf, const MultiFab &amp;volume, Real scale, int scomp, int dcomp, int nc, const Geometry &amp;crse_geom)</argsstring>
        <name>Reflux</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>volume</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>scale</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nc</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>crse_geom</declname>
        </param>
        <briefdescription>
<para>Apply flux correction. Note that this takes the coarse <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mf</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>volume</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>srccomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destcomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numcomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>crse_geom</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="302" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="523" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1ac9162f5722e388cdd747d0abeb4b2ba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FluxRegister::Reflux</definition>
        <argsstring>(MultiFab &amp;mf, const MultiFab &amp;volume, int dir, Real scale, int scomp, int dcomp, int nc, const Geometry &amp;crse_geom)</argsstring>
        <name>Reflux</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>volume</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dir</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>scale</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nc</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>crse_geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="310" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="539" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1aeebc09565fcf23f6050ad9b55275c1b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FluxRegister::Reflux</definition>
        <argsstring>(MultiFab &amp;mf, Real scale, int scomp, int dcomp, int nc, const Geometry &amp;crse_geom)</argsstring>
        <name>Reflux</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>scale</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nc</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>crse_geom</declname>
        </param>
        <briefdescription>
<para>Constant volume version of <ref refid="classamrex_1_1FluxRegister_1a1fdafda5f1518b4eabb95c307ca5635e" kindref="member">Reflux()</ref>. Note that this takes the coarse <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mf</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>srccomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destcomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numcomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>crse_geom</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="329" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="557" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1ad77d84b98f56e41c5736e58f9c5772a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FluxRegister::Reflux</definition>
        <argsstring>(MultiFab &amp;mf, int dir, Real scale, int scomp, int dcomp, int nc, const Geometry &amp;crse_geom)</argsstring>
        <name>Reflux</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dir</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>scale</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nc</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>crse_geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="336" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="575" bodyend="591"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1a4230b5a0ec42a59e2f6e48e51ca77f83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FluxRegister::OverwriteFlux</definition>
        <argsstring>(Array&lt; MultiFab *, AMREX_SPACEDIM &gt; const &amp;crse_fluxes, Real scale, int srccomp, int destcomp, int numcomp, const Geometry &amp;crse_geom)</argsstring>
        <name>OverwriteFlux</name>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>crse_fluxes</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>scale</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>srccomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>destcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>numcomp</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>crse_geom</declname>
        </param>
        <briefdescription>
<para>Overwrite the coarse flux at the coarse/fine interface (and the interface only) with the fine flux stored in the <ref refid="classamrex_1_1FluxRegister" kindref="compound">FluxRegister</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>crse_fluxes</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> pointers to coarse fluxes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scaling factor by which the fine flux is multiplied. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destcomp</parametername>
</parameternamelist>
<parameterdescription>
<para>starting component in coarse flux <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numcomp</parametername>
</parameternamelist>
<parameterdescription>
<para>number of components </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>crse_geom</parametername>
</parameternamelist>
<parameterdescription>
<para>coarse <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="354" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="732" bodyend="873"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1ab1a936eb5769156da6cb7d2dac23b4d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FluxRegister::ClearInternalBorders</definition>
        <argsstring>(const Geometry &amp;crse_geom)</argsstring>
        <name>ClearInternalBorders</name>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>crse_geom</declname>
        </param>
        <briefdescription>
<para>Set internal borders to zero. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>crse_geom</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="364" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="644" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1a0c8efd8e75a881af49dbfc1e6bdc5184" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FluxRegister::write</definition>
        <argsstring>(const std::string &amp;name, std::ostream &amp;os) const</argsstring>
        <name>write</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
<para>Write (used for writing to checkpoint) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="372" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="876" bodyend="888"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1a13861fcb5290d2ce4fe7e6510d3fee34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FluxRegister::read</definition>
        <argsstring>(const std::string &amp;name, std::istream &amp;is)</argsstring>
        <name>read</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <briefdescription>
<para>Read (used for reading from checkpoint) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="380" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="892" bodyend="913"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FluxRegister_1a6bc89bc8c2613160d25e7fd2bd0afb97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FluxRegister::Reflux</definition>
        <argsstring>(MultiFab &amp;mf, const MultiFab &amp;volume, Orientation face, Real scale, int scomp, int dcomp, int nc, const Geometry &amp;geom)</argsstring>
        <name>Reflux</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>volume</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Orientation" kindref="compound">Orientation</ref></type>
          <declname>face</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>scale</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nc</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="384" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp" bodystart="594" bodyend="641"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Flux Register. </para>
    </briefdescription>
    <detaileddescription>
<para>Stores and manipulates fluxes at coarse-fine interfaces. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BndryRegister</label>
        <link refid="classamrex_1_1BndryRegisterT"/>
      </node>
      <node id="1">
        <label>amrex::FluxRegister</label>
        <link refid="classamrex_1_1FluxRegister"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BndryRegister</label>
        <link refid="classamrex_1_1BndryRegisterT"/>
        <childnode refid="3" relation="usage">
          <edgelabel>grids</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="11" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="9">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="9" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="6">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="7" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
      </node>
      <node id="8">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="1">
        <label>amrex::FluxRegister</label>
        <link refid="classamrex_1_1FluxRegister"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>ratio</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" line="18" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H" bodystart="21" bodyend="397"/>
    <listofallmembers>
      <member refid="classamrex_1_1FluxRegister_1a0886ce290105f66be4dc23059aa69cc7a6ddca7001a16a7ff26dc0c2c3910ae3a" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>ADD</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a885dd729158b9a96cc833b5a291be3bf" prot="protected" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>bndry</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1af6ca1d67538728588356d5b07ef6742d" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>BndryRegisterT</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a669440b13ff12d665b4a732a77aa6658" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>BndryRegisterT</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a2922ba0d4eff802a4460e33c950a1ad9" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>BndryRegisterT</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a13afc3531affff7230330514f2b0725a" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>BndryRegisterT</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a50efdc257f760e9e25399c37af9e6cc1" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>boxes</name></member>
      <member refid="classamrex_1_1FluxRegister_1a453233dd69feba7dad7ae904a24d7aa2" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>clear</name></member>
      <member refid="classamrex_1_1FluxRegister_1ab1a936eb5769156da6cb7d2dac23b4d3" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>ClearInternalBorders</name></member>
      <member refid="classamrex_1_1FluxRegister_1a93804af47daca2ba0d18983401fe5f00" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>coarsenedBoxes</name></member>
      <member refid="classamrex_1_1FluxRegister_1a0886ce290105f66be4dc23059aa69cc7ad52ae5c71ab1fc1193bbc006a73ab613" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>COPY</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a859e565c8590d0c8dbe88bede09a35d6" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>Copy</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a1c8fdfc61237f7b6a8d6c040d8daadf2" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>copyFrom</name></member>
      <member refid="classamrex_1_1FluxRegister_1a4f11b763bb868b4245b5135f02da8217" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>CrseAdd</name></member>
      <member refid="classamrex_1_1FluxRegister_1ac01db2619376c784ccb95918f39d483e" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>CrseAdd</name></member>
      <member refid="classamrex_1_1FluxRegister_1ac930be53c9ed97f2b650d00d9922d375" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>CrseInit</name></member>
      <member refid="classamrex_1_1FluxRegister_1aec1bb41bffa8b078895f0f75149cdae1" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>CrseInit</name></member>
      <member refid="classamrex_1_1FluxRegister_1aef5f291512ba1c3e9208ff5c8216f3ab" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>crseLevel</name></member>
      <member refid="classamrex_1_1FluxRegister_1ae0f19ac94fa685e649d56cbdec3eebca" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>define</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a9f157b615e14c68633617c6e2031d027" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryRegisterT::"><scope>amrex::FluxRegister</scope><name>define</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1aac2ef4b2b53e50f002404a507fa667c6" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryRegisterT::"><scope>amrex::FluxRegister</scope><name>define</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a092a134a6f7fd3ba7abb9a0922d08b6d" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>DistributionMap</name></member>
      <member refid="classamrex_1_1FluxRegister_1a43c7c6ca83e0c49296f131ecf5eb8b0e" prot="private" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>fine_level</name></member>
      <member refid="classamrex_1_1FluxRegister_1ab43d78762f0ea9fe8a2146dab58b9cf3" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>FineAdd</name></member>
      <member refid="classamrex_1_1FluxRegister_1a95d4c8d650762923da71c09c414b2258" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>FineAdd</name></member>
      <member refid="classamrex_1_1FluxRegister_1a1632f69b9bb40407c6622d6841c48938" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>FineAdd</name></member>
      <member refid="classamrex_1_1FluxRegister_1a4e3874c3557a701913061d4a9ef49c4d" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>FineAdd</name></member>
      <member refid="classamrex_1_1FluxRegister_1a7aa00b34c175fadfdb6bae33c68bf5d1" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>fineLevel</name></member>
      <member refid="classamrex_1_1FluxRegister_1a6295b79fe12737051efd360468bfe344" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>FineSetVal</name></member>
      <member refid="classamrex_1_1FluxRegister_1a935b4c43c77115935fcf76b3e4a6e009" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>FluxRegister</name></member>
      <member refid="classamrex_1_1FluxRegister_1aea5e30aea810dbb261555f307106d406" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>FluxRegister</name></member>
      <member refid="classamrex_1_1FluxRegister_1a443996c9a22893bae492440a1f716096" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>FluxRegister</name></member>
      <member refid="classamrex_1_1FluxRegister_1a534089570aa27c91fc783470dc34edc2" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>FluxRegister</name></member>
      <member refid="classamrex_1_1FluxRegister_1a0886ce290105f66be4dc23059aa69cc7" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>FrOp</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a3661eefa8a7bc8f810c39fdc6f8fb350" prot="protected" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>grids</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1ae8f5e1195457dc7f2204abbcaf2fe148" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>linComb</name></member>
      <member refid="classamrex_1_1FluxRegister_1af8c25dc77c81cfd2e133f1ed79fe0032" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>nComp</name></member>
      <member refid="classamrex_1_1FluxRegister_1a311b5caaf3b58835f84598f46315953d" prot="private" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>ncomp</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a305048fb353b663f23b3562bc793d4d9" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>operator+=</name></member>
      <member refid="classamrex_1_1FluxRegister_1ad0bad9568c98a4a189a906541ccbad41" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>operator=</name></member>
      <member refid="classamrex_1_1FluxRegister_1a8cc3f9a89b01e82521248e4bb7ce6074" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a453a8fc604e77bc263b7ea91bf8920d3" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryRegisterT::"><scope>amrex::FluxRegister</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a3d277d77c5e0fb1bb42e5834196c6783" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryRegisterT::"><scope>amrex::FluxRegister</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a95bfbf54acf359a2d3c741c345ebaf6e" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a687f7e9c604524cd2ce9b43957f87cac" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1FluxRegister_1a4230b5a0ec42a59e2f6e48e51ca77f83" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>OverwriteFlux</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a5176cafd217bf9069ed83feba52d71c2" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>plus</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a58d2309f0eb636417e763b5a1e74599c" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>plusFrom</name></member>
      <member refid="classamrex_1_1FluxRegister_1a8d33188a1ba19154997256c66083b10e" prot="private" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>ratio</name></member>
      <member refid="classamrex_1_1FluxRegister_1a13861fcb5290d2ce4fe7e6510d3fee34" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>read</name></member>
      <member refid="classamrex_1_1FluxRegister_1a1fdafda5f1518b4eabb95c307ca5635e" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>Reflux</name></member>
      <member refid="classamrex_1_1FluxRegister_1ac9162f5722e388cdd747d0abeb4b2ba4" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>Reflux</name></member>
      <member refid="classamrex_1_1FluxRegister_1aeebc09565fcf23f6050ad9b55275c1b1" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>Reflux</name></member>
      <member refid="classamrex_1_1FluxRegister_1ad77d84b98f56e41c5736e58f9c5772a2" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>Reflux</name></member>
      <member refid="classamrex_1_1FluxRegister_1a6bc89bc8c2613160d25e7fd2bd0afb97" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>Reflux</name></member>
      <member refid="classamrex_1_1FluxRegister_1acee4de5e4f610fb4bc86bdae1ac7fd49" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>refRatio</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a31f3e491669d858c7c73e04d2ad6cb00" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>setBoxes</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a005714dcfffa4635a7261f525892ac37" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>setVal</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a132f07148e07fdae3f891ab726e467fb" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>size</name></member>
      <member refid="classamrex_1_1FluxRegister_1a8eb3103253e2e3aba75f6d67574243f1" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>SumReg</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1ac60614a22752704216c93192f96a4f92" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>value_type</name></member>
      <member refid="classamrex_1_1FluxRegister_1a0c8efd8e75a881af49dbfc1e6bdc5184" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>write</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a2d267bc0d735366bae8c6843d4cc79e3" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>~BndryRegisterT</name></member>
      <member refid="classamrex_1_1FluxRegister_1a02d8b5cbd5285fbddccbbb415cba051c" prot="public" virt="non-virtual"><scope>amrex::FluxRegister</scope><name>~FluxRegister</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
