<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__FPC_8cpp" kind="file" language="C++">
    <compoundname>AMReX_FPC.cpp</compoundname>
    <includes refid="AMReX__FPC_8H" local="no">AMReX_FPC.H</includes>
    <incdepgraph>
      <node id="19273">
        <label>functional</label>
      </node>
      <node id="19268">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="19269" relation="include">
        </childnode>
        <childnode refid="19270" relation="include">
        </childnode>
        <childnode refid="19271" relation="include">
        </childnode>
        <childnode refid="19265" relation="include">
        </childnode>
        <childnode refid="19273" relation="include">
        </childnode>
        <childnode refid="19264" relation="include">
        </childnode>
        <childnode refid="19267" relation="include">
        </childnode>
        <childnode refid="19274" relation="include">
        </childnode>
        <childnode refid="19262" relation="include">
        </childnode>
      </node>
      <node id="19280">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="19281" relation="include">
        </childnode>
        <childnode refid="19274" relation="include">
        </childnode>
        <childnode refid="19262" relation="include">
        </childnode>
        <childnode refid="19276" relation="include">
        </childnode>
      </node>
      <node id="19272">
        <label>stdexcept</label>
      </node>
      <node id="19264">
        <label>string</label>
      </node>
      <node id="19260">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="19261" relation="include">
        </childnode>
        <childnode refid="19262" relation="include">
        </childnode>
        <childnode refid="19263" relation="include">
        </childnode>
        <childnode refid="19264" relation="include">
        </childnode>
        <childnode refid="19265" relation="include">
        </childnode>
        <childnode refid="19266" relation="include">
        </childnode>
        <childnode refid="19267" relation="include">
        </childnode>
        <childnode refid="19268" relation="include">
        </childnode>
        <childnode refid="19269" relation="include">
        </childnode>
        <childnode refid="19275" relation="include">
        </childnode>
        <childnode refid="19276" relation="include">
        </childnode>
        <childnode refid="19277" relation="include">
        </childnode>
        <childnode refid="19278" relation="include">
        </childnode>
      </node>
      <node id="19277">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="19279">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="19267">
        <label>cstdio</label>
      </node>
      <node id="19275">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="19269" relation="include">
        </childnode>
      </node>
      <node id="19274">
        <label>vector</label>
      </node>
      <node id="19276">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="19268" relation="include">
        </childnode>
      </node>
      <node id="19269">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="19263">
        <label>utility</label>
      </node>
      <node id="19261">
        <label>array</label>
      </node>
      <node id="19266">
        <label>sstream</label>
      </node>
      <node id="19271">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="19272" relation="include">
        </childnode>
      </node>
      <node id="19259">
        <label>iosfwd</label>
      </node>
      <node id="19265">
        <label>iostream</label>
      </node>
      <node id="19270">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="19258">
        <label>AMReX_FabConv.H</label>
        <link refid="AMReX__FabConv_8H"/>
        <childnode refid="19259" relation="include">
        </childnode>
        <childnode refid="19260" relation="include">
        </childnode>
        <childnode refid="19280" relation="include">
        </childnode>
        <childnode refid="19276" relation="include">
        </childnode>
        <childnode refid="19278" relation="include">
        </childnode>
      </node>
      <node id="19281">
        <label>algorithm</label>
      </node>
      <node id="19256">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FPC.cpp</label>
        <link refid="AMReX_FPC.cpp"/>
        <childnode refid="19257" relation="include">
        </childnode>
      </node>
      <node id="19257">
        <label>AMReX_FPC.H</label>
        <link refid="AMReX__FPC_8H"/>
        <childnode refid="19258" relation="include">
        </childnode>
      </node>
      <node id="19262">
        <label>memory</label>
      </node>
      <node id="19278">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="19279" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__FPC_8H" kindref="compound">AMReX_FPC.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>endian-ness<sp/>macros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__BYTE_ORDER__)<sp/>&amp;&amp;<sp/>defined(__ORDER_LITTLE_ENDIAN__)<sp/>&amp;&amp;<sp/>defined(__ORDER_BIG_ENDIAN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(__BYTE_ORDER__<sp/>==<sp/>__ORDER_LITTLE_ENDIAN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_LITTLE_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(__BYTE_ORDER__<sp/>==<sp/>__ORDER_BIG_ENDIAN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_BIG_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>Unknow<sp/>Byte<sp/>Order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__i486__)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(i386)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(__i386__)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(__x86_64)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(__amd64__)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(__LITTLE_ENDIAN__)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(__powerpc__)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(powerpc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_LITTLE_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__sgi)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(__sun)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(_AIX)<sp/><sp/>||<sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(__ppc__)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(__ppc64__)<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(_SX)<sp/><sp/><sp/>||<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(__hpux)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__LITTLE_ENDIAN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_BIG_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_LITTLE_ENDIAN)<sp/>&amp;&amp;<sp/>defined(AMREX_BIG_ENDIAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>We<sp/>cannot<sp/>have<sp/>both<sp/>AMREX_LITTLE_ENDIAN<sp/>and<sp/>AMREX_BIG_ENDIAN<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(AMREX_LITTLE_ENDIAN)<sp/>&amp;&amp;<sp/>!defined(AMREX_BIG_ENDIAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>We<sp/>do<sp/>not<sp/>yet<sp/>support<sp/>FAB<sp/>I/O<sp/>on<sp/>this<sp/>machine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FP<sp/>orders.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FPC_1ad1410e009ae5d7319fd2687c7a3457ff" kindref="member">FPC::normal_float_order</ref>[]<sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>1,<sp/>2,<sp/>3,<sp/>4<sp/>};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FPC_1ad8695587637ebea6ad37b278fb7e677d" kindref="member">FPC::reverse_float_order</ref>[]<sp/><sp/><sp/><sp/>=<sp/>{<sp/>4,<sp/>3,<sp/>2,<sp/>1<sp/>};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FPC_1a71ce71bf65be5235d8e74ee6921cfea7" kindref="member">FPC::reverse_float_order_2</ref>[]<sp/><sp/>=<sp/>{<sp/>2,<sp/>1,<sp/>4,<sp/>3<sp/>};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FPC_1a9ece1c795d9454f01f5253539c466abc" kindref="member">FPC::normal_double_order</ref>[]<sp/><sp/><sp/><sp/>=<sp/>{<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>5,<sp/>6,<sp/>7,<sp/>8<sp/>};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FPC_1a8b52b326d6af9d2935f378f82ab6d6ed" kindref="member">FPC::reverse_double_order</ref>[]<sp/><sp/><sp/>=<sp/>{<sp/>8,<sp/>7,<sp/>6,<sp/>5,<sp/>4,<sp/>3,<sp/>2,<sp/>1<sp/>};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FPC_1aa5f55a6cd8a3addc8eb1927b9f700564" kindref="member">FPC::reverse_double_order_2</ref>[]<sp/>=<sp/>{<sp/>2,<sp/>1,<sp/>4,<sp/>3,<sp/>6,<sp/>5,<sp/>8,<sp/>7<sp/>};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Floating<sp/>point<sp/>formats.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FPC_1a1b3e2650f0f9184f503b42a96a8ebd60" kindref="member">FPC::ieee_float</ref>[]<sp/><sp/>=<sp/>{<sp/>32L,<sp/><sp/>8L,<sp/>23L,<sp/>0L,<sp/>1L,<sp/><sp/>9L,<sp/>0L,<sp/><sp/><sp/>0x7FL<sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FPC_1ad349e02b1bbbc807501d2c8de41ebef9" kindref="member">FPC::ieee_double</ref>[]<sp/>=<sp/>{<sp/>64L,<sp/>11L,<sp/>52L,<sp/>0L,<sp/>1L,<sp/>12L,<sp/>0L,<sp/><sp/>0x3FFL<sp/>};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Every<sp/>copy<sp/>of<sp/>the<sp/>library<sp/>will<sp/>have<sp/>exactly<sp/>one<sp/>nativeIntDescriptor,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nativeLongDescriptor,<sp/>and<sp/>nativeRealDescriptor<sp/>compiled<sp/>into<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>machine<sp/>on<sp/>which<sp/>AMReX<sp/>runs<sp/>MUST<sp/>have<sp/>them<sp/>defined<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">IntDescriptor&amp;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="classamrex_1_1FPC_1a9cad45e259106beaa8e4dc56f613bd06" kindref="member">FPC::NativeIntDescriptor</ref><sp/>()</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_LITTLE_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntDescriptor<sp/>nld(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/><ref refid="classamrex_1_1IntDescriptor_1a330214b8c0c3e224aecd2d2d95c0a839a4df03ba7689cd2d0b2bceb929c949b61" kindref="member">IntDescriptor::ReverseOrder</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>AMREX_BIG_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntDescriptor<sp/><sp/>nld(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/><ref refid="classamrex_1_1IntDescriptor_1a330214b8c0c3e224aecd2d2d95c0a839afc3cb7bc0cd89dcb5af02cce5baa23cd" kindref="member">IntDescriptor::NormalOrder</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nld;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">IntDescriptor&amp;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><ref refid="classamrex_1_1FPC_1a6f67a43bd516bcc9547cb3b76424b2b8" kindref="member">FPC::NativeLongDescriptor</ref><sp/>()</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_LITTLE_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntDescriptor<sp/>nld(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">),<sp/><ref refid="classamrex_1_1IntDescriptor_1a330214b8c0c3e224aecd2d2d95c0a839a4df03ba7689cd2d0b2bceb929c949b61" kindref="member">IntDescriptor::ReverseOrder</ref>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>AMREX_BIG_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntDescriptor<sp/><sp/>nld(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">),<sp/><ref refid="classamrex_1_1IntDescriptor_1a330214b8c0c3e224aecd2d2d95c0a839afc3cb7bc0cd89dcb5af02cce5baa23cd" kindref="member">IntDescriptor::NormalOrder</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nld;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">RealDescriptor&amp;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><ref refid="classamrex_1_1FPC_1ab470772000cfb5f507edc5f294383bbc" kindref="member">FPC::NativeRealDescriptor</ref><sp/>()</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_LITTLE_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BL_USE_FLOAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealDescriptor<sp/>nrd(<ref refid="classamrex_1_1FPC_1a1b3e2650f0f9184f503b42a96a8ebd60" kindref="member">ieee_float</ref>,<sp/><ref refid="classamrex_1_1FPC_1ad8695587637ebea6ad37b278fb7e677d" kindref="member">reverse_float_order</ref>,<sp/>4);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealDescriptor<sp/>nrd(<ref refid="classamrex_1_1FPC_1ad349e02b1bbbc807501d2c8de41ebef9" kindref="member">ieee_double</ref>,<sp/><ref refid="classamrex_1_1FPC_1a8b52b326d6af9d2935f378f82ab6d6ed" kindref="member">reverse_double_order</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>AMREX_BIG_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>BL_USE_FLOAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealDescriptor<sp/>nrd(<ref refid="classamrex_1_1FPC_1a1b3e2650f0f9184f503b42a96a8ebd60" kindref="member">ieee_float</ref>,<sp/><ref refid="classamrex_1_1FPC_1ad1410e009ae5d7319fd2687c7a3457ff" kindref="member">normal_float_order</ref>,<sp/>4);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealDescriptor<sp/>nrd(<ref refid="classamrex_1_1FPC_1ad349e02b1bbbc807501d2c8de41ebef9" kindref="member">ieee_double</ref>,<sp/><ref refid="classamrex_1_1FPC_1a9ece1c795d9454f01f5253539c466abc" kindref="member">normal_double_order</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nrd;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">RealDescriptor&amp;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="classamrex_1_1FPC_1a56bb549e278ccc2611fd389c3d2b6bdb" kindref="member">FPC::Native32RealDescriptor</ref><sp/>()</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_LITTLE_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealDescriptor<sp/>n32rd(<ref refid="classamrex_1_1FPC_1a1b3e2650f0f9184f503b42a96a8ebd60" kindref="member">ieee_float</ref>,<sp/><ref refid="classamrex_1_1FPC_1ad8695587637ebea6ad37b278fb7e677d" kindref="member">reverse_float_order</ref>,<sp/>4);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>AMREX_BIG_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealDescriptor<sp/>n32rd(<ref refid="classamrex_1_1FPC_1a1b3e2650f0f9184f503b42a96a8ebd60" kindref="member">ieee_float</ref>,<sp/><ref refid="classamrex_1_1FPC_1ad1410e009ae5d7319fd2687c7a3457ff" kindref="member">normal_float_order</ref>,<sp/>4);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n32rd;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">RealDescriptor&amp;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="classamrex_1_1FPC_1a3e122a19b07bc732bf83c360354ef2a4" kindref="member">FPC::Native64RealDescriptor</ref><sp/>()</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_LITTLE_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealDescriptor<sp/>n64rd(<ref refid="classamrex_1_1FPC_1ad349e02b1bbbc807501d2c8de41ebef9" kindref="member">ieee_double</ref>,<sp/><ref refid="classamrex_1_1FPC_1a8b52b326d6af9d2935f378f82ab6d6ed" kindref="member">reverse_double_order</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>AMREX_BIG_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealDescriptor<sp/>n64rd(<ref refid="classamrex_1_1FPC_1ad349e02b1bbbc807501d2c8de41ebef9" kindref="member">ieee_double</ref>,<sp/><ref refid="classamrex_1_1FPC_1a9ece1c795d9454f01f5253539c466abc" kindref="member">normal_double_order</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n64rd;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">RealDescriptor&amp;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><ref refid="classamrex_1_1FPC_1a712d35cb1071948f9fd7ce809fa8ff2e" kindref="member">FPC::Ieee32NormalRealDescriptor</ref><sp/>()</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealDescriptor<sp/>i32rd(<ref refid="classamrex_1_1FPC_1a1b3e2650f0f9184f503b42a96a8ebd60" kindref="member">ieee_float</ref>,<sp/><ref refid="classamrex_1_1FPC_1ad1410e009ae5d7319fd2687c7a3457ff" kindref="member">normal_float_order</ref>,<sp/>4);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i32rd;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">RealDescriptor&amp;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><ref refid="classamrex_1_1FPC_1a545419a941e545b123cc638c15bfcb72" kindref="member">FPC::Ieee64NormalRealDescriptor</ref><sp/>()</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RealDescriptor<sp/>i64rd(<ref refid="classamrex_1_1FPC_1ad349e02b1bbbc807501d2c8de41ebef9" kindref="member">ieee_double</ref>,<sp/><ref refid="classamrex_1_1FPC_1a9ece1c795d9454f01f5253539c466abc" kindref="member">normal_double_order</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i64rd;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FPC.cpp"/>
  </compounddef>
</doxygen>
