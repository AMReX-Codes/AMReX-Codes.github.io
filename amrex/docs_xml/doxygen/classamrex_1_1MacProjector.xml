<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1MacProjector" kind="class" language="C++" prot="public">
    <compoundname>amrex::MacProjector</compoundname>
    <includes refid="AMReX__MacProjector_8H" local="no">AMReX_MacProjector.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1MacProjector_1a7c2fa9c54f24cec34f034c26d077cf76" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classamrex_1_1MLPoisson" kindref="compound">MLPoisson</ref> &gt;</type>
        <definition>std::unique_ptr&lt;MLPoisson&gt; amrex::MacProjector::m_poisson</definition>
        <argsstring></argsstring>
        <name>m_poisson</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="155" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MacProjector_1a6bbf0668ee0f491ae7917f308d2b393a" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classamrex_1_1MLABecLaplacian" kindref="compound">MLABecLaplacian</ref> &gt;</type>
        <definition>std::unique_ptr&lt;MLABecLaplacian&gt; amrex::MacProjector::m_abeclap</definition>
        <argsstring></argsstring>
        <name>m_abeclap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="156" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MacProjector_1a385ce6f0ea12a10abd1e1c8c88f575db" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLLinOp" kindref="compound">MLLinOp</ref> *</type>
        <definition>MLLinOp* amrex::MacProjector::m_linop</definition>
        <argsstring></argsstring>
        <name>m_linop</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="161" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MacProjector_1af583fbcefda408b64394f80ca2f48799" prot="private" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::MacProjector::m_const_beta</definition>
        <argsstring></argsstring>
        <name>m_const_beta</name>
        <initializer>= 0.</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="163" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MacProjector_1a03008c95ba7a99dcccdde517843078b2" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classamrex_1_1MLMG" kindref="compound">MLMG</ref> &gt;</type>
        <definition>std::unique_ptr&lt;MLMG&gt; amrex::MacProjector::m_mlmg</definition>
        <argsstring></argsstring>
        <name>m_mlmg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="165" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MacProjector_1afd2720d0228305f0b4a55598a7b2d489" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *, AMREX_SPACEDIM &gt; &gt;</type>
        <definition>Vector&lt;Array&lt;MultiFab*,AMREX_SPACEDIM&gt; &gt; amrex::MacProjector::m_umac</definition>
        <argsstring></argsstring>
        <name>m_umac</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="167" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MacProjector_1a5687d73a10dab418a054993dd8c45ab7" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &gt;</type>
        <definition>Vector&lt;MultiFab&gt; amrex::MacProjector::m_rhs</definition>
        <argsstring></argsstring>
        <name>m_rhs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="168" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MacProjector_1aebdb712524eabf236ff67895707985a0" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &gt;</type>
        <definition>Vector&lt;MultiFab&gt; amrex::MacProjector::m_phi</definition>
        <argsstring></argsstring>
        <name>m_phi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="169" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MacProjector_1a384ee79e889b8681cce159cd28a4a832" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &gt;</type>
        <definition>Vector&lt;MultiFab&gt; amrex::MacProjector::m_divu</definition>
        <argsstring></argsstring>
        <name>m_divu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="170" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MacProjector_1a6b94f3fd70113a44a086e85c15643d7a" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>, AMREX_SPACEDIM &gt; &gt;</type>
        <definition>Vector&lt;Array&lt;MultiFab,AMREX_SPACEDIM&gt; &gt; amrex::MacProjector::m_fluxes</definition>
        <argsstring></argsstring>
        <name>m_fluxes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="171" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MacProjector_1a9d2e8fd9d6d26a8cbfb3145a8ebfb746" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &gt;</type>
        <definition>Vector&lt;Geometry&gt; amrex::MacProjector::m_geom</definition>
        <argsstring></argsstring>
        <name>m_geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="173" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MacProjector_1ac21ccd4081f20e018bd02689b363a35e" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MacProjector::m_verbose</definition>
        <argsstring></argsstring>
        <name>m_verbose</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="175" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MacProjector_1a54112712441fa4a6dd9f2de78b744d0d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::MacProjector::m_needs_domain_bcs</definition>
        <argsstring></argsstring>
        <name>m_needs_domain_bcs</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="177" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MacProjector_1a071b0c15395670ec7bcc97f2410da5dd" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::MacProjector::m_needs_level_bcs</definition>
        <argsstring></argsstring>
        <name>m_needs_level_bcs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="178" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MacProjector_1a8fd1a5dce97adbdca72260a029ea88ce" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3" kindref="member">MLMG::Location</ref></type>
        <definition>MLMG::Location amrex::MacProjector::m_umac_loc</definition>
        <argsstring></argsstring>
        <name>m_umac_loc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="181" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MacProjector_1aa260668b917216512f5e47a64f5ad60b" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3" kindref="member">MLMG::Location</ref></type>
        <definition>MLMG::Location amrex::MacProjector::m_beta_loc</definition>
        <argsstring></argsstring>
        <name>m_beta_loc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="183" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MacProjector_1a1fc2dce955c538b7c342c9d8df1ffd48" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3" kindref="member">MLMG::Location</ref></type>
        <definition>MLMG::Location amrex::MacProjector::m_phi_loc</definition>
        <argsstring></argsstring>
        <name>m_phi_loc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="185" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MacProjector_1ad0bba3cdb810fd7e1858bf4cc65e3341" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3" kindref="member">MLMG::Location</ref></type>
        <definition>MLMG::Location amrex::MacProjector::m_divu_loc</definition>
        <argsstring></argsstring>
        <name>m_divu_loc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="188" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MacProjector_1a909a147b7cc52c5d96789923f1e6c5ef" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::MacProjector::m_needs_init</definition>
        <argsstring></argsstring>
        <name>m_needs_init</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="190" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="190" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1MacProjector_1a38e1db6e60b6ef2a4b0681a3dd971651" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MacProjector::MacProjector</definition>
        <argsstring>(const Vector&lt; Geometry &gt; &amp;a_geom, MLMG::Location a_umac_loc=MLMG::Location::FaceCenter, MLMG::Location a_beta_loc=MLMG::Location::FaceCenter, MLMG::Location a_phi_loc=MLMG::Location::CellCenter, MLMG::Location a_divu_loc=MLMG::Location::CellCenter)</argsstring>
        <name>MacProjector</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &gt; &amp;</type>
          <declname>a_geom</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3" kindref="member">MLMG::Location</ref></type>
          <declname>a_umac_loc</declname>
          <defval><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3ad1a130e88790663b2124d7dbd3e9f81e" kindref="member">MLMG::Location::FaceCenter</ref></defval>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3" kindref="member">MLMG::Location</ref></type>
          <declname>a_beta_loc</declname>
          <defval><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3ad1a130e88790663b2124d7dbd3e9f81e" kindref="member">MLMG::Location::FaceCenter</ref></defval>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3" kindref="member">MLMG::Location</ref></type>
          <declname>a_phi_loc</declname>
          <defval><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3af5c101b5f19e97166e7531ffa1c706c4" kindref="member">MLMG::Location::CellCenter</ref></defval>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3" kindref="member">MLMG::Location</ref></type>
          <declname>a_divu_loc</declname>
          <defval><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3af5c101b5f19e97166e7531ffa1c706c4" kindref="member">MLMG::Location::CellCenter</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="18" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp" bodystart="11" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacProjector_1aea88cc4f57e48f1a1480c97470b38492" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MacProjector::MacProjector</definition>
        <argsstring>(const Vector&lt; Array&lt; MultiFab *, AMREX_SPACEDIM &gt; &gt; &amp;a_umac, MLMG::Location a_umac_loc, const Vector&lt; Array&lt; MultiFab const *, AMREX_SPACEDIM &gt; &gt; &amp;a_beta, MLMG::Location a_beta_loc, MLMG::Location a_phi_loc, const Vector&lt; Geometry &gt; &amp;a_geom, const LPInfo &amp;a_lpinfo, const Vector&lt; MultiFab const *&gt; &amp;a_divu, MLMG::Location a_divu_loc, const Vector&lt; iMultiFab const *&gt; &amp;a_overset_mask={})</argsstring>
        <name>MacProjector</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *, AMREX_SPACEDIM &gt; &gt; &amp;</type>
          <declname>a_umac</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3" kindref="member">MLMG::Location</ref></type>
          <declname>a_umac_loc</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> const *, AMREX_SPACEDIM &gt; &gt; &amp;</type>
          <declname>a_beta</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3" kindref="member">MLMG::Location</ref></type>
          <declname>a_beta_loc</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3" kindref="member">MLMG::Location</ref></type>
          <declname>a_phi_loc</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &gt; &amp;</type>
          <declname>a_geom</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1LPInfo" kindref="compound">LPInfo</ref> &amp;</type>
          <declname>a_lpinfo</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> const *&gt; &amp;</type>
          <declname>a_divu</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3" kindref="member">MLMG::Location</ref></type>
          <declname>a_divu_loc</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> const *&gt; &amp;</type>
          <declname>a_overset_mask</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="36" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp" bodystart="27" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacProjector_1a941a4721005ee076273ba3bf0b80939b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::MacProjector::MacProjector</definition>
        <argsstring>(const Vector&lt; Array&lt; MultiFab *, AMREX_SPACEDIM &gt; &gt; &amp;a_umac, MLMG::Location a_umac_loc, const Vector&lt; Array&lt; MultiFab const *, AMREX_SPACEDIM &gt; &gt; &amp;a_beta, MLMG::Location a_beta_loc, MLMG::Location a_phi_loc, const Vector&lt; Geometry &gt; &amp;a_geom, const LPInfo &amp;a_lpinfo, const Vector&lt; MultiFab const *&gt; &amp;a_divu={})</argsstring>
        <name>MacProjector</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *, AMREX_SPACEDIM &gt; &gt; &amp;</type>
          <declname>a_umac</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3" kindref="member">MLMG::Location</ref></type>
          <declname>a_umac_loc</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> const *, AMREX_SPACEDIM &gt; &gt; &amp;</type>
          <declname>a_beta</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3" kindref="member">MLMG::Location</ref></type>
          <declname>a_beta_loc</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3" kindref="member">MLMG::Location</ref></type>
          <declname>a_phi_loc</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &gt; &amp;</type>
          <declname>a_geom</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1LPInfo" kindref="compound">LPInfo</ref> &amp;</type>
          <declname>a_lpinfo</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> const *&gt; &amp;</type>
          <declname>a_divu</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="47" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="47" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacProjector_1a3a8014ec00a69f3cd67719f067eed01b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::MacProjector::MacProjector</definition>
        <argsstring>(const Vector&lt; Array&lt; MultiFab *, AMREX_SPACEDIM &gt; &gt; &amp;a_umac, const Vector&lt; Array&lt; MultiFab const *, AMREX_SPACEDIM &gt; &gt; &amp;a_beta, const Vector&lt; Geometry &gt; &amp;a_geom, const LPInfo &amp;a_lpinfo, const Vector&lt; MultiFab const *&gt; &amp;a_divu={})</argsstring>
        <name>MacProjector</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *, AMREX_SPACEDIM &gt; &gt; &amp;</type>
          <declname>a_umac</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> const *, AMREX_SPACEDIM &gt; &gt; &amp;</type>
          <declname>a_beta</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &gt; &amp;</type>
          <declname>a_geom</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1LPInfo" kindref="compound">LPInfo</ref> &amp;</type>
          <declname>a_lpinfo</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> const *&gt; &amp;</type>
          <declname>a_divu</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="59" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="59" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacProjector_1a91e2b860d8e87423435a917beb5f522c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::MacProjector::MacProjector</definition>
        <argsstring>(const Vector&lt; Array&lt; MultiFab *, AMREX_SPACEDIM &gt; &gt; &amp;a_umac, const Vector&lt; Array&lt; MultiFab const *, AMREX_SPACEDIM &gt; &gt; &amp;a_beta, const Vector&lt; Geometry &gt; &amp;a_geom, const Vector&lt; MultiFab const *&gt; &amp;a_divu={})</argsstring>
        <name>MacProjector</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *, AMREX_SPACEDIM &gt; &gt; &amp;</type>
          <declname>a_umac</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> const *, AMREX_SPACEDIM &gt; &gt; &amp;</type>
          <declname>a_beta</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &gt; &amp;</type>
          <declname>a_geom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> const *&gt; &amp;</type>
          <declname>a_divu</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="68" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="68" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacProjector_1affa481d415d4ee376b6e5f150a4d3001" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MacProjector::MacProjector</definition>
        <argsstring>(const Vector&lt; Array&lt; MultiFab *, AMREX_SPACEDIM &gt; &gt; &amp;a_umac, const Real a_const_beta, const Vector&lt; Geometry &gt; &amp;a_geom, const LPInfo &amp;a_lpinfo, const Vector&lt; iMultiFab const *&gt; &amp;a_overset_mask={}, const Vector&lt; MultiFab const *&gt; &amp;a_divu={})</argsstring>
        <name>MacProjector</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *, AMREX_SPACEDIM &gt; &gt; &amp;</type>
          <declname>a_umac</declname>
        </param>
        <param>
          <type>const Real</type>
          <declname>a_const_beta</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &gt; &amp;</type>
          <declname>a_geom</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1LPInfo" kindref="compound">LPInfo</ref> &amp;</type>
          <declname>a_lpinfo</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> const *&gt; &amp;</type>
          <declname>a_overset_mask</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> const *&gt; &amp;</type>
          <declname>a_divu</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="76" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp" bodystart="464" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacProjector_1a67fc0e8b2e35eab30fd8f895c37acac5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MacProjector::initProjector</definition>
        <argsstring>(const LPInfo &amp;a_lpinfo, const Vector&lt; Array&lt; MultiFab const *, AMREX_SPACEDIM &gt; &gt; &amp;a_beta, const Vector&lt; iMultiFab const *&gt; &amp;a_overset_mask={})</argsstring>
        <name>initProjector</name>
        <param>
          <type>const <ref refid="structamrex_1_1LPInfo" kindref="compound">LPInfo</ref> &amp;</type>
          <declname>a_lpinfo</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> const *, AMREX_SPACEDIM &gt; &gt; &amp;</type>
          <declname>a_beta</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> const *&gt; &amp;</type>
          <declname>a_overset_mask</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the underlying linear operator and <ref refid="classamrex_1_1MLMG" kindref="compound">MLMG</ref> instances </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="86" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp" bodystart="50" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacProjector_1a0a2a6481bff154f255295fe221d053cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MacProjector::updateBeta</definition>
        <argsstring>(const Vector&lt; Array&lt; MultiFab const *, AMREX_SPACEDIM &gt; &gt; &amp;)</argsstring>
        <name>updateBeta</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> const *, AMREX_SPACEDIM &gt; &gt; &amp;</type>
        </param>
        <briefdescription>
<para>Update Bcoeffs for the linear operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacProjector_1a1fdd5c6a83f238114690cc258fe2c7f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MacProjector::initProjector</definition>
        <argsstring>(Vector&lt; BoxArray &gt; const &amp;a_grids, Vector&lt; DistributionMapping &gt; const &amp;a_dmap, const LPInfo &amp;a_lpinfo, Real const a_const_beta, const Vector&lt; iMultiFab const *&gt; &amp;a_overset_mask={})</argsstring>
        <name>initProjector</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &gt; const &amp;</type>
          <declname>a_grids</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &gt; const &amp;</type>
          <declname>a_dmap</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1LPInfo" kindref="compound">LPInfo</ref> &amp;</type>
          <declname>a_lpinfo</declname>
        </param>
        <param>
          <type>Real const</type>
          <declname>a_const_beta</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> const *&gt; &amp;</type>
          <declname>a_overset_mask</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="95" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp" bodystart="418" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacProjector_1a52c7002139721e36ea18c4f76093e5a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MacProjector::updateBeta</definition>
        <argsstring>(Real a_const_beta)</argsstring>
        <name>updateBeta</name>
        <param>
          <type>Real</type>
          <declname>a_const_beta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="100" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp" bodystart="489" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacProjector_1ad613aa64e5ee39c4c5eaacdab8ccb132" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MacProjector::setUMAC</definition>
        <argsstring>(const Vector&lt; Array&lt; MultiFab *, AMREX_SPACEDIM &gt; &gt; &amp;)</argsstring>
        <name>setUMAC</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *, AMREX_SPACEDIM &gt; &gt; &amp;</type>
        </param>
        <briefdescription>
<para>Set Umac before calling the projection step. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="104" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp" bodystart="161" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacProjector_1a8d4a333b442283ece1a2da7c43c58369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MacProjector::setDivU</definition>
        <argsstring>(const Vector&lt; MultiFab const *&gt; &amp;)</argsstring>
        <name>setDivU</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> const *&gt; &amp;</type>
          <defname>a_divu</defname>
        </param>
        <briefdescription>
<para>Set div(U) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="107" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp" bodystart="167" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacProjector_1a9f4cc3fbe43671a4645c523c761b8539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MacProjector::setDomainBC</definition>
        <argsstring>(const Array&lt; LinOpBCType, AMREX_SPACEDIM &gt; &amp;lobc, const Array&lt; LinOpBCType, AMREX_SPACEDIM &gt; &amp;hibc)</argsstring>
        <name>setDomainBC</name>
        <param>
          <type>const <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; LinOpBCType, AMREX_SPACEDIM &gt; &amp;</type>
          <declname>lobc</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; LinOpBCType, AMREX_SPACEDIM &gt; &amp;</type>
          <declname>hibc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="116" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp" bodystart="193" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacProjector_1a6ba419c928377e65d1520d5c0fed1a59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MacProjector::setLevelBC</definition>
        <argsstring>(int amrlev, const MultiFab *levelbcdata)</argsstring>
        <name>setLevelBC</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>amrlev</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *</type>
          <declname>levelbcdata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="119" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp" bodystart="205" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacProjector_1ad6e7116b0259876e65693ce96033e32b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MacProjector::setCoarseFineBC</definition>
        <argsstring>(const MultiFab *crse, int crse_ratio)</argsstring>
        <name>setCoarseFineBC</name>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *</type>
          <declname>crse</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>crse_ratio</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="121" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="121" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacProjector_1a6ca145b547da65e2056fe2a3286bccd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MacProjector::project</definition>
        <argsstring>(const Vector&lt; MultiFab *&gt; &amp;phi_in, Real reltol, Real atol)</argsstring>
        <name>project</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *&gt; &amp;</type>
          <declname>phi_in</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>reltol</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>atol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="127" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp" bodystart="292" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacProjector_1aff77bdcacb89380c3866da77e2e69ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MacProjector::project</definition>
        <argsstring>(Real reltol, Real atol)</argsstring>
        <name>project</name>
        <param>
          <type>Real</type>
          <declname>reltol</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>atol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="128" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp" bodystart="216" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacProjector_1a322aaba53057ccfae547b7dcdaefdb6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MacProjector::getFluxes</definition>
        <argsstring>(const Vector&lt; Array&lt; MultiFab *, AMREX_SPACEDIM &gt; &gt; &amp;a_flux, const Vector&lt; MultiFab *&gt; &amp;a_sol, MLMG::Location a_loc) const</argsstring>
        <name>getFluxes</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *, AMREX_SPACEDIM &gt; &gt; &amp;</type>
          <declname>a_flux</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *&gt; &amp;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLLinOp_1a07cd0a7c45d6542e33a5d97aefe5bab3" kindref="member">MLMG::Location</ref></type>
          <declname>a_loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="133" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp" bodystart="307" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacProjector_1a99ff4480a6b0e8c0131bab59a1794d4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MacProjector::setVerbose</definition>
        <argsstring>(int v) noexcept</argsstring>
        <name>setVerbose</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="139" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacProjector_1af840b40728ddf5e917768b8d91c5f80c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLLinOp" kindref="compound">MLLinOp</ref> &amp;</type>
        <definition>MLLinOp&amp; amrex::MacProjector::getLinOp</definition>
        <argsstring>() noexcept</argsstring>
        <name>getLinOp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="145" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacProjector_1a2cefa0fe04a61276974e2059e72e865a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLMG" kindref="compound">MLMG</ref> &amp;</type>
        <definition>MLMG&amp; amrex::MacProjector::getMLMG</definition>
        <argsstring>() noexcept</argsstring>
        <name>getMLMG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="146" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacProjector_1a37f6358dbc29e858ea5c74be8da7df93" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::MacProjector::needInitialization</definition>
        <argsstring>() const noexcept</argsstring>
        <name>needInitialization</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="148" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="148" bodyend="148"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1MacProjector_1a3a18de5928d83658cfdac540eb69eefa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MacProjector::setOptions</definition>
        <argsstring>()</argsstring>
        <name>setOptions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="151" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp" bodystart="324" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacProjector_1acaa4061613e27a1666415db843c11a1c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MacProjector::averageDownVelocity</definition>
        <argsstring>()</argsstring>
        <name>averageDownVelocity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="153" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp" bodystart="395" bodyend="415"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3080">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
      </node>
      <node id="3047">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="3048" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="3050">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="3075">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="3066">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="3057" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="3031">
        <label>std::vector&lt; Array&lt; amrex::MultiFab, AMREX_SPACEDIM &gt;, std::allocator&lt; Array&lt; amrex::MultiFab, AMREX_SPACEDIM &gt; &gt; &gt;</label>
      </node>
      <node id="3055">
        <label>std::vector&lt; amrex::Box, std::allocator&lt; amrex::Box &gt; &gt;</label>
      </node>
      <node id="3068">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="3043" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="3057" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="3067">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="3043">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="3043" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="3040">
        <label>Real</label>
      </node>
      <node id="3094">
        <label>std::vector&lt; amrex::Geometry, std::allocator&lt; amrex::Geometry &gt; &gt;</label>
      </node>
      <node id="3081">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3082" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3073">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="3074" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="3072">
        <label>std::vector&lt; char *, std::allocator&lt; char *&gt; &gt;</label>
      </node>
      <node id="3089">
        <label>std::vector&lt; Array&lt; BCType, AMREX_SPACEDIM &gt;, std::allocator&lt; Array&lt; BCType, AMREX_SPACEDIM &gt; &gt; &gt;</label>
      </node>
      <node id="3077">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
      </node>
      <node id="3041">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::BoxArray &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3042" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3042">
        <label>std::vector&lt; amrex::Vector&lt; amrex::BoxArray &gt;, std::allocator&lt; amrex::Vector&lt; amrex::BoxArray &gt; &gt; &gt;</label>
      </node>
      <node id="3074">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="3075" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="3026">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3048">
        <label>string</label>
      </node>
      <node id="3083">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="3043" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="3064">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="3085">
        <label>std::vector&lt; Array&lt; int, AMREX_SPACEDIM &gt;, std::allocator&lt; Array&lt; int, AMREX_SPACEDIM &gt; &gt; &gt;</label>
      </node>
      <node id="3053">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="3043" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="3054" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="3056" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
      </node>
      <node id="3028">
        <label>amrex::Vector&lt; amrex::MultiFab &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3029" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3035">
        <label>amrex::Vector&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::FabFactory&lt; amrex::FArrayBox &gt; &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3036" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3061">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="3062" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="3038">
        <label>std::vector&lt; amrex::Vector&lt; amrex::Geometry &gt;, std::allocator&lt; amrex::Vector&lt; amrex::Geometry &gt; &gt; &gt;</label>
      </node>
      <node id="3065">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="3043" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="3078">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="3032">
        <label>amrex::Vector&lt; Array&lt; amrex::MultiFab *, AMREX_SPACEDIM &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3033" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3062">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="3063" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
        <childnode refid="3065" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="3066" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="3067" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="3068" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
      </node>
      <node id="3037">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::Geometry &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3038" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3039">
        <label>amrex::RealVect</label>
        <link refid="classamrex_1_1RealVect"/>
        <childnode refid="3039" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
        <childnode refid="3040" relation="usage">
          <edgelabel>vect</edgelabel>
        </childnode>
      </node>
      <node id="3071">
        <label>amrex::Vector&lt; char *&gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3072" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3086">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::DistributionMapping &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3087" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3090">
        <label>amrex::Vector&lt; amrex::IntVect &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3091" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3082">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
      </node>
      <node id="3027">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="3060">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="3061" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="3030">
        <label>amrex::Vector&lt; Array&lt; amrex::MultiFab, AMREX_SPACEDIM &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3031" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3034">
        <label>amrex::MLLinOp</label>
        <link refid="classamrex_1_1MLLinOp"/>
        <childnode refid="3035" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="3037" relation="usage">
          <edgelabel>m_geom</edgelabel>
        </childnode>
        <childnode refid="3039" relation="usage">
          <edgelabel>m_coarse_bc_loc</edgelabel>
        </childnode>
        <childnode refid="3041" relation="usage">
          <edgelabel>m_grids</edgelabel>
        </childnode>
        <childnode refid="3043" relation="usage">
          <edgelabel>m_ixtype</edgelabel>
        </childnode>
        <childnode refid="3044" relation="usage">
          <edgelabel>m_coarse_data_for_bc</edgelabel>
        </childnode>
        <childnode refid="3026" relation="usage">
          <edgelabel>m_domain_covered</edgelabel>
          <edgelabel>m_amr_ref_ratio</edgelabel>
          <edgelabel>m_num_mg_levels</edgelabel>
        </childnode>
        <childnode refid="3084" relation="usage">
          <edgelabel>m_hi_inhomog_neumann</edgelabel>
          <edgelabel>m_lo_inhomog_neumann</edgelabel>
        </childnode>
        <childnode refid="3086" relation="usage">
          <edgelabel>m_dmap</edgelabel>
        </childnode>
        <childnode refid="3088" relation="usage">
          <edgelabel>m_hibc</edgelabel>
          <edgelabel>m_lobc</edgelabel>
        </childnode>
        <childnode refid="3090" relation="usage">
          <edgelabel>mg_coarsen_ratio_vec</edgelabel>
        </childnode>
        <childnode refid="3034" relation="usage">
          <edgelabel>m_parent</edgelabel>
        </childnode>
        <childnode refid="3092" relation="usage">
          <edgelabel>info</edgelabel>
        </childnode>
      </node>
      <node id="3056">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="3043" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="3057" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="3088">
        <label>amrex::Vector&lt; Array&lt; BCType, AMREX_SPACEDIM &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3089" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3058">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="3059" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="3079">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3080" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3092">
        <label>amrex::LPInfo</label>
        <link refid="structamrex_1_1LPInfo"/>
      </node>
      <node id="3063">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="3043" relation="usage">
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
        <childnode refid="3064" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="3057" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="3025">
        <label>amrex::MacProjector</label>
        <link refid="classamrex_1_1MacProjector"/>
        <childnode refid="3026" relation="usage">
          <edgelabel>m_needs_level_bcs</edgelabel>
        </childnode>
        <childnode refid="3028" relation="usage">
          <edgelabel>m_rhs</edgelabel>
          <edgelabel>m_divu</edgelabel>
          <edgelabel>m_phi</edgelabel>
        </childnode>
        <childnode refid="3030" relation="usage">
          <edgelabel>m_fluxes</edgelabel>
        </childnode>
        <childnode refid="3032" relation="usage">
          <edgelabel>m_umac</edgelabel>
        </childnode>
        <childnode refid="3034" relation="usage">
          <edgelabel>m_linop</edgelabel>
        </childnode>
        <childnode refid="3093" relation="usage">
          <edgelabel>m_geom</edgelabel>
        </childnode>
        <childnode refid="3040" relation="usage">
          <edgelabel>m_const_beta</edgelabel>
        </childnode>
      </node>
      <node id="3057">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="3059">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="3026" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="3076">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3077" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3084">
        <label>amrex::Vector&lt; Array&lt; int, AMREX_SPACEDIM &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3085" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3049">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
      </node>
      <node id="3051">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="3052" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="3058" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="3091">
        <label>std::vector&lt; amrex::IntVect, std::allocator&lt; amrex::IntVect &gt; &gt;</label>
      </node>
      <node id="3044">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="3045" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3029">
        <label>std::vector&lt; amrex::MultiFab, std::allocator&lt; amrex::MultiFab &gt; &gt;</label>
      </node>
      <node id="3033">
        <label>std::vector&lt; Array&lt; amrex::MultiFab *, AMREX_SPACEDIM &gt;, std::allocator&lt; Array&lt; amrex::MultiFab *, AMREX_SPACEDIM &gt; &gt; &gt;</label>
      </node>
      <node id="3093">
        <label>amrex::Vector&lt; amrex::Geometry &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3094" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3045">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="3046" relation="public-inheritance">
        </childnode>
        <childnode refid="3069" relation="usage">
          <edgelabel>pc_recv_size</edgelabel>
          <edgelabel>fb_recv_size</edgelabel>
        </childnode>
        <childnode refid="3071" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
          <edgelabel>pc_recv_data</edgelabel>
        </childnode>
        <childnode refid="3043" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
          <edgelabel>pc_dnghost</edgelabel>
          <edgelabel>pc_snghost</edgelabel>
        </childnode>
        <childnode refid="3073" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="3026" relation="usage">
          <edgelabel>pc_recv_from</edgelabel>
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="3076" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="3078" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="3045" relation="usage">
          <edgelabel>pc_src</edgelabel>
        </childnode>
        <childnode refid="3079" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="3081" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>pc_recv_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
          <edgelabel>pc_send_reqs</edgelabel>
        </childnode>
        <childnode refid="3083" relation="usage">
          <edgelabel>fb_period</edgelabel>
          <edgelabel>pc_period</edgelabel>
        </childnode>
      </node>
      <node id="3069">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3070" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3052">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="3053" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="3054">
        <label>amrex::Vector&lt; amrex::Box &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3055" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3046">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="3047" relation="usage">
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
        </childnode>
        <childnode refid="3049" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="3043" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>mfghostiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="3050" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="3026" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="3051" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="3060" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
      </node>
      <node id="3070">
        <label>std::vector&lt; std::size_t, std::allocator&lt; std::size_t &gt; &gt;</label>
      </node>
      <node id="3087">
        <label>std::vector&lt; amrex::Vector&lt; amrex::DistributionMapping &gt;, std::allocator&lt; amrex::Vector&lt; amrex::DistributionMapping &gt; &gt; &gt;</label>
      </node>
      <node id="3036">
        <label>std::vector&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::FabFactory&lt; amrex::FArrayBox &gt; &gt; &gt;, std::allocator&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::FabFactory&lt; amrex::FArrayBox &gt; &gt; &gt; &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" line="16" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H" bodystart="15" bodyend="191"/>
    <listofallmembers>
      <member refid="classamrex_1_1MacProjector_1acaa4061613e27a1666415db843c11a1c" prot="private" virt="non-virtual"><scope>amrex::MacProjector</scope><name>averageDownVelocity</name></member>
      <member refid="classamrex_1_1MacProjector_1a322aaba53057ccfae547b7dcdaefdb6a" prot="public" virt="non-virtual"><scope>amrex::MacProjector</scope><name>getFluxes</name></member>
      <member refid="classamrex_1_1MacProjector_1af840b40728ddf5e917768b8d91c5f80c" prot="public" virt="non-virtual"><scope>amrex::MacProjector</scope><name>getLinOp</name></member>
      <member refid="classamrex_1_1MacProjector_1a2cefa0fe04a61276974e2059e72e865a" prot="public" virt="non-virtual"><scope>amrex::MacProjector</scope><name>getMLMG</name></member>
      <member refid="classamrex_1_1MacProjector_1a67fc0e8b2e35eab30fd8f895c37acac5" prot="public" virt="non-virtual"><scope>amrex::MacProjector</scope><name>initProjector</name></member>
      <member refid="classamrex_1_1MacProjector_1a1fdd5c6a83f238114690cc258fe2c7f6" prot="public" virt="non-virtual"><scope>amrex::MacProjector</scope><name>initProjector</name></member>
      <member refid="classamrex_1_1MacProjector_1a6bbf0668ee0f491ae7917f308d2b393a" prot="private" virt="non-virtual"><scope>amrex::MacProjector</scope><name>m_abeclap</name></member>
      <member refid="classamrex_1_1MacProjector_1aa260668b917216512f5e47a64f5ad60b" prot="private" virt="non-virtual"><scope>amrex::MacProjector</scope><name>m_beta_loc</name></member>
      <member refid="classamrex_1_1MacProjector_1af583fbcefda408b64394f80ca2f48799" prot="private" virt="non-virtual"><scope>amrex::MacProjector</scope><name>m_const_beta</name></member>
      <member refid="classamrex_1_1MacProjector_1a384ee79e889b8681cce159cd28a4a832" prot="private" virt="non-virtual"><scope>amrex::MacProjector</scope><name>m_divu</name></member>
      <member refid="classamrex_1_1MacProjector_1ad0bba3cdb810fd7e1858bf4cc65e3341" prot="private" virt="non-virtual"><scope>amrex::MacProjector</scope><name>m_divu_loc</name></member>
      <member refid="classamrex_1_1MacProjector_1a6b94f3fd70113a44a086e85c15643d7a" prot="private" virt="non-virtual"><scope>amrex::MacProjector</scope><name>m_fluxes</name></member>
      <member refid="classamrex_1_1MacProjector_1a9d2e8fd9d6d26a8cbfb3145a8ebfb746" prot="private" virt="non-virtual"><scope>amrex::MacProjector</scope><name>m_geom</name></member>
      <member refid="classamrex_1_1MacProjector_1a385ce6f0ea12a10abd1e1c8c88f575db" prot="private" virt="non-virtual"><scope>amrex::MacProjector</scope><name>m_linop</name></member>
      <member refid="classamrex_1_1MacProjector_1a03008c95ba7a99dcccdde517843078b2" prot="private" virt="non-virtual"><scope>amrex::MacProjector</scope><name>m_mlmg</name></member>
      <member refid="classamrex_1_1MacProjector_1a54112712441fa4a6dd9f2de78b744d0d" prot="private" virt="non-virtual"><scope>amrex::MacProjector</scope><name>m_needs_domain_bcs</name></member>
      <member refid="classamrex_1_1MacProjector_1a909a147b7cc52c5d96789923f1e6c5ef" prot="private" virt="non-virtual"><scope>amrex::MacProjector</scope><name>m_needs_init</name></member>
      <member refid="classamrex_1_1MacProjector_1a071b0c15395670ec7bcc97f2410da5dd" prot="private" virt="non-virtual"><scope>amrex::MacProjector</scope><name>m_needs_level_bcs</name></member>
      <member refid="classamrex_1_1MacProjector_1aebdb712524eabf236ff67895707985a0" prot="private" virt="non-virtual"><scope>amrex::MacProjector</scope><name>m_phi</name></member>
      <member refid="classamrex_1_1MacProjector_1a1fc2dce955c538b7c342c9d8df1ffd48" prot="private" virt="non-virtual"><scope>amrex::MacProjector</scope><name>m_phi_loc</name></member>
      <member refid="classamrex_1_1MacProjector_1a7c2fa9c54f24cec34f034c26d077cf76" prot="private" virt="non-virtual"><scope>amrex::MacProjector</scope><name>m_poisson</name></member>
      <member refid="classamrex_1_1MacProjector_1a5687d73a10dab418a054993dd8c45ab7" prot="private" virt="non-virtual"><scope>amrex::MacProjector</scope><name>m_rhs</name></member>
      <member refid="classamrex_1_1MacProjector_1afd2720d0228305f0b4a55598a7b2d489" prot="private" virt="non-virtual"><scope>amrex::MacProjector</scope><name>m_umac</name></member>
      <member refid="classamrex_1_1MacProjector_1a8fd1a5dce97adbdca72260a029ea88ce" prot="private" virt="non-virtual"><scope>amrex::MacProjector</scope><name>m_umac_loc</name></member>
      <member refid="classamrex_1_1MacProjector_1ac21ccd4081f20e018bd02689b363a35e" prot="private" virt="non-virtual"><scope>amrex::MacProjector</scope><name>m_verbose</name></member>
      <member refid="classamrex_1_1MacProjector_1a38e1db6e60b6ef2a4b0681a3dd971651" prot="public" virt="non-virtual"><scope>amrex::MacProjector</scope><name>MacProjector</name></member>
      <member refid="classamrex_1_1MacProjector_1aea88cc4f57e48f1a1480c97470b38492" prot="public" virt="non-virtual"><scope>amrex::MacProjector</scope><name>MacProjector</name></member>
      <member refid="classamrex_1_1MacProjector_1a941a4721005ee076273ba3bf0b80939b" prot="public" virt="non-virtual"><scope>amrex::MacProjector</scope><name>MacProjector</name></member>
      <member refid="classamrex_1_1MacProjector_1a3a8014ec00a69f3cd67719f067eed01b" prot="public" virt="non-virtual"><scope>amrex::MacProjector</scope><name>MacProjector</name></member>
      <member refid="classamrex_1_1MacProjector_1a91e2b860d8e87423435a917beb5f522c" prot="public" virt="non-virtual"><scope>amrex::MacProjector</scope><name>MacProjector</name></member>
      <member refid="classamrex_1_1MacProjector_1affa481d415d4ee376b6e5f150a4d3001" prot="public" virt="non-virtual"><scope>amrex::MacProjector</scope><name>MacProjector</name></member>
      <member refid="classamrex_1_1MacProjector_1a37f6358dbc29e858ea5c74be8da7df93" prot="public" virt="non-virtual"><scope>amrex::MacProjector</scope><name>needInitialization</name></member>
      <member refid="classamrex_1_1MacProjector_1a6ca145b547da65e2056fe2a3286bccd1" prot="public" virt="non-virtual"><scope>amrex::MacProjector</scope><name>project</name></member>
      <member refid="classamrex_1_1MacProjector_1aff77bdcacb89380c3866da77e2e69ea8" prot="public" virt="non-virtual"><scope>amrex::MacProjector</scope><name>project</name></member>
      <member refid="classamrex_1_1MacProjector_1ad6e7116b0259876e65693ce96033e32b" prot="public" virt="non-virtual"><scope>amrex::MacProjector</scope><name>setCoarseFineBC</name></member>
      <member refid="classamrex_1_1MacProjector_1a8d4a333b442283ece1a2da7c43c58369" prot="public" virt="non-virtual"><scope>amrex::MacProjector</scope><name>setDivU</name></member>
      <member refid="classamrex_1_1MacProjector_1a9f4cc3fbe43671a4645c523c761b8539" prot="public" virt="non-virtual"><scope>amrex::MacProjector</scope><name>setDomainBC</name></member>
      <member refid="classamrex_1_1MacProjector_1a6ba419c928377e65d1520d5c0fed1a59" prot="public" virt="non-virtual"><scope>amrex::MacProjector</scope><name>setLevelBC</name></member>
      <member refid="classamrex_1_1MacProjector_1a3a18de5928d83658cfdac540eb69eefa" prot="private" virt="non-virtual"><scope>amrex::MacProjector</scope><name>setOptions</name></member>
      <member refid="classamrex_1_1MacProjector_1ad613aa64e5ee39c4c5eaacdab8ccb132" prot="public" virt="non-virtual"><scope>amrex::MacProjector</scope><name>setUMAC</name></member>
      <member refid="classamrex_1_1MacProjector_1a99ff4480a6b0e8c0131bab59a1794d4b" prot="public" virt="non-virtual"><scope>amrex::MacProjector</scope><name>setVerbose</name></member>
      <member refid="classamrex_1_1MacProjector_1a0a2a6481bff154f255295fe221d053cb" prot="public" virt="non-virtual"><scope>amrex::MacProjector</scope><name>updateBeta</name></member>
      <member refid="classamrex_1_1MacProjector_1a52c7002139721e36ea18c4f76093e5a2" prot="public" virt="non-virtual"><scope>amrex::MacProjector</scope><name>updateBeta</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
