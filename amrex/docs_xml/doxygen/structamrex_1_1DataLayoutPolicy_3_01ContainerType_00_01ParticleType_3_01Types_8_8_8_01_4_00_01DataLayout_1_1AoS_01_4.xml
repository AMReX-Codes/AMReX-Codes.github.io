<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4" kind="struct" language="C++" prot="public">
    <compoundname>amrex::DataLayoutPolicy&lt; ContainerType, ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;</compoundname>
    <includes refid="AMReX__ParticleArray_8H" local="no">AMReX_ParticleArray.H</includes>
    <templateparamlist>
      <param>
        <type>template&lt; typename... &gt; class</type>
        <declname>ContainerType</declname>
        <defname>ContainerType</defname>
      </param>
      <param>
        <type>template&lt; typename... &gt; class</type>
        <declname>ParticleType</declname>
        <defname>ParticleType</defname>
      </param>
      <param>
        <type>typename...</type>
        <declname>Types</declname>
        <defname>Types</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a7bdcc3eb6bbb219b65280bd41b97b774" prot="public" static="no">
        <type>ContainerType&lt; ParticleType&lt; Types... &gt; &gt;</type>
        <definition>using amrex::DataLayoutPolicy&lt; ContainerType, ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;::container_type =  ContainerType&lt;ParticleType&lt;Types...&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>container_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="75" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1ab6759853d755a1a01624618efeb177b0" prot="public" static="no">
        <type>ParticleType&lt; Types... &gt; *</type>
        <definition>using amrex::DataLayoutPolicy&lt; ContainerType, ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;::raw_type =  ParticleType&lt;Types...&gt;*</definition>
        <argsstring></argsstring>
        <name>raw_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="76" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1acf82f34218d15ed26f163a36979c5a30" prot="public" static="no">
        <type>ParticleType&lt; Types... &gt; &amp;</type>
        <definition>using amrex::DataLayoutPolicy&lt; ContainerType, ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;::value_type =  ParticleType&lt;Types...&gt;&amp;</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="77" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a530916a537dcc4b424694411b430833e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1ab6759853d755a1a01624618efeb177b0" kindref="member">raw_type</ref></type>
        <definition>static constexpr raw_type amrex::DataLayoutPolicy&lt; ContainerType, ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;::get_raw_data</definition>
        <argsstring>(container_type &amp;a_container)</argsstring>
        <name>get_raw_data</name>
        <param>
          <type><ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a7bdcc3eb6bbb219b65280bd41b97b774" kindref="member">container_type</ref> &amp;</type>
          <declname>a_container</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="79" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a20054ec96a4caf67051d57e923579a8e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>static constexpr void amrex::DataLayoutPolicy&lt; ContainerType, ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;::resize</definition>
        <argsstring>(container_type &amp;a_container, std::size_t a_size)</argsstring>
        <name>resize</name>
        <param>
          <type><ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a7bdcc3eb6bbb219b65280bd41b97b774" kindref="member">container_type</ref> &amp;</type>
          <declname>a_container</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>a_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="84" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a59c2843f59e6ba99661a6d26958b6f08" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void amrex::DataLayoutPolicy&lt; ContainerType, ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;::push_back</definition>
        <argsstring>(container_type &amp;a_container, ValueType &amp;&amp;a_value)</argsstring>
        <name>push_back</name>
        <param>
          <type><ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a7bdcc3eb6bbb219b65280bd41b97b774" kindref="member">container_type</ref> &amp;</type>
          <declname>a_container</declname>
        </param>
        <param>
          <type>ValueType &amp;&amp;</type>
          <declname>a_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="90" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1ac8950252d5f3400022f97669a5ae9f66" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr std::size_t</type>
        <definition>static constexpr std::size_t amrex::DataLayoutPolicy&lt; ContainerType, ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;::size</definition>
        <argsstring>(container_type &amp;a_container)</argsstring>
        <name>size</name>
        <param>
          <type><ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a7bdcc3eb6bbb219b65280bd41b97b774" kindref="member">container_type</ref> &amp;</type>
          <declname>a_container</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="95" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="95" bodyend="98"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Implementation of the AoS policy. Pretty much a straightforward wrapper around ContainterType&lt;ParticleType&gt; </para>    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="74" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="73" bodyend="99"/>
    <listofallmembers>
      <member refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a7bdcc3eb6bbb219b65280bd41b97b774" prot="public" virt="non-virtual"><scope>amrex::DataLayoutPolicy&lt; ContainerType, ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;</scope><name>container_type</name></member>
      <member refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a530916a537dcc4b424694411b430833e" prot="public" virt="non-virtual"><scope>amrex::DataLayoutPolicy&lt; ContainerType, ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;</scope><name>get_raw_data</name></member>
      <member refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a59c2843f59e6ba99661a6d26958b6f08" prot="public" virt="non-virtual"><scope>amrex::DataLayoutPolicy&lt; ContainerType, ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;</scope><name>push_back</name></member>
      <member refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1ab6759853d755a1a01624618efeb177b0" prot="public" virt="non-virtual"><scope>amrex::DataLayoutPolicy&lt; ContainerType, ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;</scope><name>raw_type</name></member>
      <member refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a20054ec96a4caf67051d57e923579a8e" prot="public" virt="non-virtual"><scope>amrex::DataLayoutPolicy&lt; ContainerType, ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;</scope><name>resize</name></member>
      <member refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1ac8950252d5f3400022f97669a5ae9f66" prot="public" virt="non-virtual"><scope>amrex::DataLayoutPolicy&lt; ContainerType, ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;</scope><name>size</name></member>
      <member refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1acf82f34218d15ed26f163a36979c5a30" prot="public" virt="non-virtual"><scope>amrex::DataLayoutPolicy&lt; ContainerType, ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
