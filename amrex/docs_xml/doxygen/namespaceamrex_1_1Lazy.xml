<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespaceamrex_1_1Lazy" kind="namespace" language="C++">
    <compoundname>amrex::Lazy</compoundname>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespaceamrex_1_1Lazy_1ac520a3dfdc05eaffb3b4eea05eea5668" prot="public" static="no">
        <type>std::function&lt; void()&gt;</type>
        <definition>typedef std::function&lt;void()&gt; amrex::Lazy::Func</definition>
        <argsstring></argsstring>
        <name>Func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Lazy.H" line="12" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Lazy.H" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceamrex_1_1Lazy_1a17dde5bdf675b748b4cff2f01edd7fc5" prot="public" static="no">
        <type>std::vector&lt; <ref refid="namespaceamrex_1_1Lazy_1ac520a3dfdc05eaffb3b4eea05eea5668" kindref="member">Func</ref> &gt;</type>
        <definition>typedef std::vector&lt;Func&gt; amrex::Lazy::FuncQue</definition>
        <argsstring></argsstring>
        <name>FuncQue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Lazy.H" line="13" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Lazy.H" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceamrex_1_1Lazy_1aaf84a070bebdd187b4edacd264604b5f" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Lazy_1a17dde5bdf675b748b4cff2f01edd7fc5" kindref="member">FuncQue</ref></type>
        <definition>FuncQue amrex::Lazy::reduction_queue</definition>
        <argsstring></argsstring>
        <name>reduction_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Lazy.cpp" line="7" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Lazy.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex_1_1Lazy_1a48f09e6d45685ddcaa72f6424891b9e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Lazy::QueueReduction</definition>
        <argsstring>(Func f)</argsstring>
        <name>QueueReduction</name>
        <param>
          <type><ref refid="namespaceamrex_1_1Lazy_1ac520a3dfdc05eaffb3b4eea05eea5668" kindref="member">Func</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Lazy.cpp" line="9" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Lazy.cpp" bodystart="9" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Lazy_1a0a2dd2d6e19976b8eaebb9d81a65718a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Lazy::EvalReduction</definition>
        <argsstring>()</argsstring>
        <name>EvalReduction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Lazy.cpp" line="21" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Lazy.cpp" bodystart="21" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Lazy_1a01ac7d4ed0bfab3839b45995cf260a05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Lazy::Finalize</definition>
        <argsstring>()</argsstring>
        <name>Finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Lazy.cpp" line="35" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Lazy.cpp" bodystart="35" bodyend="38"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Lazy.cpp" line="6" column="1"/>
  </compounddef>
</doxygen>
