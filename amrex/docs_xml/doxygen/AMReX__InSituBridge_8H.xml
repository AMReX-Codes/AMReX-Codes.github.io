<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__InSituBridge_8H" kind="file" language="C++">
    <compoundname>AMReX_InSituBridge.H</compoundname>
    <includes local="no">string</includes>
    <includes refid="AMReX__Vector_8H" local="no">AMReX_Vector.H</includes>
    <includedby refid="AMReX__AmrInSituBridge_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrInSituBridge.H</includedby>
    <includedby refid="AMReX__AmrMeshInSituBridge_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrMeshInSituBridge.H</includedby>
    <includedby refid="AMReX__InSituBridge_8cpp" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_InSituBridge.cpp</includedby>
    <incdepgraph>
      <node id="66476">
        <label>functional</label>
      </node>
      <node id="66471">
        <label>float.h</label>
      </node>
      <node id="66458">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="66459" relation="include">
        </childnode>
        <childnode refid="66460" relation="include">
        </childnode>
        <childnode refid="66462" relation="include">
        </childnode>
        <childnode refid="66464" relation="include">
        </childnode>
        <childnode refid="66465" relation="include">
        </childnode>
        <childnode refid="66467" relation="include">
        </childnode>
        <childnode refid="66468" relation="include">
        </childnode>
        <childnode refid="66470" relation="include">
        </childnode>
        <childnode refid="66472" relation="include">
        </childnode>
        <childnode refid="66475" relation="include">
        </childnode>
        <childnode refid="66476" relation="include">
        </childnode>
        <childnode refid="66452" relation="include">
        </childnode>
        <childnode refid="66461" relation="include">
        </childnode>
        <childnode refid="66455" relation="include">
        </childnode>
        <childnode refid="66456" relation="include">
        </childnode>
      </node>
      <node id="66460">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="66461" relation="include">
        </childnode>
      </node>
      <node id="66453">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="66454" relation="include">
        </childnode>
        <childnode refid="66455" relation="include">
        </childnode>
        <childnode refid="66456" relation="include">
        </childnode>
        <childnode refid="66457" relation="include">
        </childnode>
        <childnode refid="66468" relation="include">
        </childnode>
      </node>
      <node id="66473">
        <label>cmath</label>
      </node>
      <node id="66463">
        <label>cassert</label>
      </node>
      <node id="66466">
        <label>stdexcept</label>
      </node>
      <node id="66452">
        <label>string</label>
      </node>
      <node id="66467">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="66451">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_InSituBridge.H</label>
        <link refid="AMReX_InSituBridge.H"/>
        <childnode refid="66452" relation="include">
        </childnode>
        <childnode refid="66453" relation="include">
        </childnode>
      </node>
      <node id="66461">
        <label>cstdio</label>
      </node>
      <node id="66455">
        <label>vector</label>
      </node>
      <node id="66457">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="66458" relation="include">
        </childnode>
      </node>
      <node id="66472">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="66459" relation="include">
        </childnode>
        <childnode refid="66467" relation="include">
        </childnode>
        <childnode refid="66473" relation="include">
        </childnode>
        <childnode refid="66474" relation="include">
        </childnode>
      </node>
      <node id="66459">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="66465">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="66466" relation="include">
        </childnode>
      </node>
      <node id="66468">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="66469" relation="include">
        </childnode>
      </node>
      <node id="66474">
        <label>cstdlib</label>
      </node>
      <node id="66475">
        <label>iostream</label>
      </node>
      <node id="66464">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="66454">
        <label>algorithm</label>
      </node>
      <node id="66462">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="66463" relation="include">
        </childnode>
      </node>
      <node id="66456">
        <label>memory</label>
      </node>
      <node id="66469">
        <label>inttypes.h</label>
      </node>
      <node id="66470">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="66467" relation="include">
        </childnode>
        <childnode refid="66471" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="66480">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrMeshInSituBridge.H</label>
        <link refid="AMReX__AmrMeshInSituBridge_8H"/>
        <childnode refid="66481" relation="include">
        </childnode>
      </node>
      <node id="66479">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrInSituBridge.cpp</label>
        <link refid="AMReX__AmrInSituBridge_8cpp"/>
      </node>
      <node id="66478">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrInSituBridge.H</label>
        <link refid="AMReX__AmrInSituBridge_8H"/>
        <childnode refid="66479" relation="include">
        </childnode>
      </node>
      <node id="66481">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrMeshInSituBridge.cpp</label>
        <link refid="AMReX__AmrMeshInSituBridge_8cpp"/>
      </node>
      <node id="66477">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_InSituBridge.H</label>
        <link refid="AMReX_InSituBridge.H"/>
        <childnode refid="66478" relation="include">
        </childnode>
        <childnode refid="66480" relation="include">
        </childnode>
        <childnode refid="66482" relation="include">
        </childnode>
      </node>
      <node id="66482">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_InSituBridge.cpp</label>
        <link refid="AMReX__InSituBridge_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classamrex_1_1InSituBridge" prot="public">amrex::InSituBridge</innerclass>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMReX_InSituBridge_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMReX_InSituBridge_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Vector_8H" kindref="compound">AMReX_Vector.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(BL_USE_SENSEI_INSITU)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mpi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">sensei<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AnalysisAdaptor;</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classamrex_1_1InSituBridge" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1InSituBridge" kindref="compound">InSituBridge</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1InSituBridge" kindref="compound">InSituBridge</ref>();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classamrex_1_1InSituBridge" kindref="compound">InSituBridge</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1InSituBridge" kindref="compound">InSituBridge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1InSituBridge" kindref="compound">InSituBridge</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1InSituBridge" kindref="compound">InSituBridge</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(BL_USE_MPI)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCommuniator(<ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref><sp/>acomm)<sp/>{<sp/>comm<sp/>=<sp/>acomm;<sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Runtime<sp/>control<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>may<sp/>set<sp/>explicitly<sp/>or<sp/>via<sp/>ParmParse.<sp/>ParmParse<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>take<sp/>precedence<sp/>over<sp/>set<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>sensei.enabled<sp/><sp/>--<sp/>integer<sp/>0<sp/>or<sp/>1,<sp/>when<sp/>0<sp/>the<sp/>bridge<sp/>is<sp/>disabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>sensei.frequency<sp/>--<sp/>integer<sp/>&gt;=<sp/>1,<sp/>how<sp/>often<sp/>the<sp/>analysis<sp/>executes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>sensei.config<sp/>--<sp/>file<sp/>path,<sp/>path<sp/>to<sp/>the<sp/>SENSEI<sp/>XML<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>sensei.pin_mesh<sp/>--<sp/>integer,<sp/>0<sp/>or<sp/>1,<sp/>when<sp/>1<sp/>mesh<sp/>origin<sp/>is<sp/>forced<sp/>to<sp/>0,0,0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classamrex_1_1InSituBridge_1a093ff6109c501d8b6fd3fa102e0710d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1InSituBridge_1a093ff6109c501d8b6fd3fa102e0710d4" kindref="member">setEnabled</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aenabled)<sp/>{<sp/>enabled<sp/>=<sp/>aenabled;<sp/>}</highlight></codeline>
<codeline lineno="44" refid="classamrex_1_1InSituBridge_1ae5232eec8f5c7437d9bccac9ea52f912" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1InSituBridge_1ae5232eec8f5c7437d9bccac9ea52f912" kindref="member">setFrequency</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>freq)<sp/>{<sp/>frequency<sp/>=<sp/>freq;<sp/>}</highlight></codeline>
<codeline lineno="45" refid="classamrex_1_1InSituBridge_1a84245d419fe7f73058027c01448495c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1InSituBridge_1a84245d419fe7f73058027c01448495c3" kindref="member">setConfig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;aconfig)<sp/>{<sp/>config<sp/>=<sp/>aconfig;<sp/>}</highlight></codeline>
<codeline lineno="46" refid="classamrex_1_1InSituBridge_1add236657ccdc541799595a04e5b7c80f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1InSituBridge_1add236657ccdc541799595a04e5b7c80f" kindref="member">setPinMesh</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>apinMesh)<sp/>{<sp/>pinMesh<sp/>=<sp/>apinMesh;<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>the<sp/>adaptors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>make<sp/>use<sp/>of<sp/>parm<sp/>parse<sp/>for<sp/>any<sp/>unset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>control<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initialize();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clean<sp/>up<sp/>the<sp/>adaptors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>finalize();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>doUpdate();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(BL_USE_MPI)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref><sp/>comm;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(BL_USE_SENSEI_INSITU)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>sensei::AnalysisAdaptor<sp/>*analysis_adaptor;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classamrex_1_1InSituBridge_1a1ebf5d26f2262a8604ef624ebc72fdf2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classamrex_1_1InSituBridge_1a1ebf5d26f2262a8604ef624ebc72fdf2" kindref="member">config</ref>;</highlight></codeline>
<codeline lineno="67" refid="classamrex_1_1InSituBridge_1a479b95e65f876998b375cdbaba5ed658" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1InSituBridge_1a479b95e65f876998b375cdbaba5ed658" kindref="member">enabled</ref>;</highlight></codeline>
<codeline lineno="68" refid="classamrex_1_1InSituBridge_1a1f8a76f22bde94cbfc3c495aa50877e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1InSituBridge_1a1f8a76f22bde94cbfc3c495aa50877e7" kindref="member">frequency</ref>;</highlight></codeline>
<codeline lineno="69" refid="classamrex_1_1InSituBridge_1acba77d88ac888913a071c5a5ec180542" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1InSituBridge_1acba77d88ac888913a071c5a5ec180542" kindref="member">counter</ref>;</highlight></codeline>
<codeline lineno="70" refid="classamrex_1_1InSituBridge_1a3cf163ea993bb9ab3a642bb0b16e9d90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1InSituBridge_1a3cf163ea993bb9ab3a642bb0b16e9d90" kindref="member">pinMesh</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_InSituBridge.H"/>
  </compounddef>
</doxygen>
