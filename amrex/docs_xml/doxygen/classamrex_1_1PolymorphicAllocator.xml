<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1PolymorphicAllocator" kind="class" language="C++" prot="public">
    <compoundname>amrex::PolymorphicAllocator</compoundname>
    <includes refid="AMReX__GpuAllocators_8H" local="no">AMReX_GpuAllocators.H</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1PolymorphicAllocator_1a72355f37a3018d8871f4f997c9180a22" prot="public" static="no">
        <type>T</type>
        <definition>using amrex::PolymorphicAllocator&lt; T &gt;::value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" line="122" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classamrex_1_1PolymorphicAllocator_1a17194831c5f2740968428a41f16a41fc" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::PolymorphicAllocator&lt; T &gt;::m_use_gpu_aware_mpi</definition>
        <argsstring></argsstring>
        <name>m_use_gpu_aware_mpi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" line="152" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" bodystart="152" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1PolymorphicAllocator_1aa692a6382997d3eecf97fc0b51cba599" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::PolymorphicAllocator&lt; T &gt;::PolymorphicAllocator</definition>
        <argsstring>()</argsstring>
        <name>PolymorphicAllocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" line="124" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PolymorphicAllocator_1aac8b392f17694bc59ff27a81a1a55b2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1PolymorphicAllocator_1a72355f37a3018d8871f4f997c9180a22" kindref="member">value_type</ref> *</type>
        <definition>value_type* amrex::PolymorphicAllocator&lt; T &gt;::allocate</definition>
        <argsstring>(std::size_t n)</argsstring>
        <name>allocate</name>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" line="126" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" bodystart="126" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PolymorphicAllocator_1a48ec36e08b0ded236d50c15c54194cc5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PolymorphicAllocator&lt; T &gt;::deallocate</definition>
        <argsstring>(value_type *ptr, std::size_t)</argsstring>
        <name>deallocate</name>
        <param>
          <type><ref refid="classamrex_1_1PolymorphicAllocator_1a72355f37a3018d8871f4f997c9180a22" kindref="member">value_type</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>std::size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" line="140" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" bodystart="140" bodyend="150"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classamrex_1_1PolymorphicAllocator_1acd631df716e315396e3861e45a45dba6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class V</type>
          </param>
        </templateparamlist>
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(PolymorphicAllocator&lt; U &gt; const &amp;a, PolymorphicAllocator&lt; V &gt; const &amp;b) noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="classamrex_1_1PolymorphicAllocator" kindref="compound">PolymorphicAllocator</ref>&lt; U &gt; const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1PolymorphicAllocator" kindref="compound">PolymorphicAllocator</ref>&lt; V &gt; const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" line="156" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="friend" id="classamrex_1_1PolymorphicAllocator_1a683ae339e0bad414c7683ee7478c6ad0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class V</type>
          </param>
        </templateparamlist>
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(PolymorphicAllocator&lt; U &gt; const &amp;a, PolymorphicAllocator&lt; V &gt; const &amp;b) noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="classamrex_1_1PolymorphicAllocator" kindref="compound">PolymorphicAllocator</ref>&lt; U &gt; const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1PolymorphicAllocator" kindref="compound">PolymorphicAllocator</ref>&lt; V &gt; const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" line="163" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" bodystart="163" bodyend="166"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" line="119" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" bodystart="118" bodyend="168"/>
    <listofallmembers>
      <member refid="classamrex_1_1PolymorphicAllocator_1aac8b392f17694bc59ff27a81a1a55b2f" prot="public" virt="non-virtual"><scope>amrex::PolymorphicAllocator</scope><name>allocate</name></member>
      <member refid="classamrex_1_1PolymorphicAllocator_1a48ec36e08b0ded236d50c15c54194cc5" prot="public" virt="non-virtual"><scope>amrex::PolymorphicAllocator</scope><name>deallocate</name></member>
      <member refid="classamrex_1_1PolymorphicAllocator_1a17194831c5f2740968428a41f16a41fc" prot="public" virt="non-virtual"><scope>amrex::PolymorphicAllocator</scope><name>m_use_gpu_aware_mpi</name></member>
      <member refid="classamrex_1_1PolymorphicAllocator_1a683ae339e0bad414c7683ee7478c6ad0" prot="public" virt="non-virtual"><scope>amrex::PolymorphicAllocator</scope><name>operator!=</name></member>
      <member refid="classamrex_1_1PolymorphicAllocator_1acd631df716e315396e3861e45a45dba6" prot="public" virt="non-virtual"><scope>amrex::PolymorphicAllocator</scope><name>operator==</name></member>
      <member refid="classamrex_1_1PolymorphicAllocator_1aa692a6382997d3eecf97fc0b51cba599" prot="public" virt="non-virtual"><scope>amrex::PolymorphicAllocator</scope><name>PolymorphicAllocator</name></member>
      <member refid="classamrex_1_1PolymorphicAllocator_1a72355f37a3018d8871f4f997c9180a22" prot="public" virt="non-virtual"><scope>amrex::PolymorphicAllocator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
