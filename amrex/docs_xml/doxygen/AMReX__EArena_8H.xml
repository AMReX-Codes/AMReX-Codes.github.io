<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__EArena_8H" kind="file" language="C++">
    <compoundname>AMReX_EArena.H</compoundname>
    <includes local="no">cstddef</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">limits</includes>
    <includes local="no">set</includes>
    <includes local="no">vector</includes>
    <includes local="no">mutex</includes>
    <includes local="no">unordered_set</includes>
    <includes local="no">functional</includes>
    <includes refid="AMReX__Arena_8H" local="no">AMReX_Arena.H</includes>
    <includedby refid="AMReX__Arena_8cpp" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Arena.cpp</includedby>
    <includedby refid="AMReX__EArena_8cpp" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_EArena.cpp</includedby>
    <incdepgraph>
      <node id="15413">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_EArena.H</label>
        <link refid="AMReX_EArena.H"/>
        <childnode refid="15414" relation="include">
        </childnode>
        <childnode refid="15415" relation="include">
        </childnode>
        <childnode refid="15416" relation="include">
        </childnode>
        <childnode refid="15417" relation="include">
        </childnode>
        <childnode refid="15418" relation="include">
        </childnode>
        <childnode refid="15419" relation="include">
        </childnode>
        <childnode refid="15420" relation="include">
        </childnode>
        <childnode refid="15421" relation="include">
        </childnode>
        <childnode refid="15422" relation="include">
        </childnode>
      </node>
      <node id="15421">
        <label>functional</label>
      </node>
      <node id="15416">
        <label>limits</label>
      </node>
      <node id="15415">
        <label>cstdint</label>
      </node>
      <node id="15424">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="15425" relation="include">
        </childnode>
        <childnode refid="15426" relation="include">
        </childnode>
        <childnode refid="15427" relation="include">
        </childnode>
        <childnode refid="15429" relation="include">
        </childnode>
        <childnode refid="15421" relation="include">
        </childnode>
        <childnode refid="15430" relation="include">
        </childnode>
        <childnode refid="15431" relation="include">
        </childnode>
        <childnode refid="15418" relation="include">
        </childnode>
        <childnode refid="15432" relation="include">
        </childnode>
      </node>
      <node id="15428">
        <label>stdexcept</label>
      </node>
      <node id="15430">
        <label>string</label>
      </node>
      <node id="15420">
        <label>unordered_set</label>
      </node>
      <node id="15431">
        <label>cstdio</label>
      </node>
      <node id="15418">
        <label>vector</label>
      </node>
      <node id="15423">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="15424" relation="include">
        </childnode>
      </node>
      <node id="15425">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="15427">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="15428" relation="include">
        </childnode>
      </node>
      <node id="15422">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="15423" relation="include">
        </childnode>
        <childnode refid="15414" relation="include">
        </childnode>
        <childnode refid="15433" relation="include">
        </childnode>
      </node>
      <node id="15433">
        <label>cstdlib</label>
      </node>
      <node id="15429">
        <label>iostream</label>
      </node>
      <node id="15414">
        <label>cstddef</label>
      </node>
      <node id="15419">
        <label>mutex</label>
      </node>
      <node id="15417">
        <label>set</label>
      </node>
      <node id="15426">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="15432">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="15434">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_EArena.H</label>
        <link refid="AMReX_EArena.H"/>
        <childnode refid="15435" relation="include">
        </childnode>
        <childnode refid="15436" relation="include">
        </childnode>
      </node>
      <node id="15436">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_EArena.cpp</label>
        <link refid="AMReX__EArena_8cpp"/>
      </node>
      <node id="15435">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Arena.cpp</label>
        <link refid="AMReX__Arena_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classamrex_1_1EArena" prot="public">amrex::EArena</innerclass>
    <innerclass refid="structamrex_1_1EArena_1_1Node" prot="protected">amrex::EArena::Node</innerclass>
    <innerclass refid="structamrex_1_1EArena_1_1Node_1_1CompareSize" prot="public">amrex::EArena::Node::CompareSize</innerclass>
    <innerclass refid="structamrex_1_1EArena_1_1Node_1_1CompareAddr" prot="public">amrex::EArena::Node::CompareAddr</innerclass>
    <innerclass refid="structamrex_1_1EArena_1_1Node_1_1hash" prot="public">amrex::EArena::Node::hash</innerclass>
    <innerclass refid="structamrex_1_1EArena_1_1Node_1_1equal" prot="public">amrex::EArena::Node::equal</innerclass>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_EARENA_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_EARENA_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Arena_8H" kindref="compound">AMReX_Arena.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classamrex_1_1EArena" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1EArena" kindref="compound">EArena</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Arena" kindref="compound">Arena</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EArena_1a7daa56ae6423cd9a6cfb476bfea3b3c6" kindref="member">EArena</ref><sp/>(std::size_t<sp/>hunk_size<sp/>=<sp/>0,<sp/><ref refid="structamrex_1_1ArenaInfo" kindref="compound">ArenaInfo</ref><sp/>info<sp/>=<sp/><ref refid="structamrex_1_1ArenaInfo" kindref="compound">ArenaInfo</ref>());</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EArena_1a7daa56ae6423cd9a6cfb476bfea3b3c6" kindref="member">EArena</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1EArena" kindref="compound">EArena</ref>&amp;<sp/>rhs)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EArena" kindref="compound">EArena</ref>&amp;<sp/><ref refid="classamrex_1_1EArena_1a11977fb44e25805691551018979867f3" kindref="member">operator= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1EArena" kindref="compound">EArena</ref>&amp;<sp/>rhs)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1EArena_1aa7ffefaf198e2f27d6e28d6e92228a4a" kindref="member">~EArena</ref><sp/>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="classamrex_1_1EArena_1a9f316f7f2bf3ffa4528045191ebdc2b5" kindref="member">alloc</ref><sp/>(std::size_t<sp/>nbytes)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1EArena_1a3c0b58cac2bd02c2ca5d94c31d6b1d8c" kindref="member">free</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>vp)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="classamrex_1_1EArena_1a55f86980147fa57369f877931c2c4d86" kindref="member">heap_space_used</ref><sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="classamrex_1_1EArena_1a795022c226b14833fce78db68a3b570f" kindref="member">free_space_available</ref><sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classamrex_1_1EArena_1a1b22e6b83f6b933e0b46d6866bd457d0afe2474a51d981bd38fcc0bab1928f23e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/><ref refid="classamrex_1_1EArena_1a1b22e6b83f6b933e0b46d6866bd457d0afe2474a51d981bd38fcc0bab1928f23e" kindref="member">DefaultHunkSize</ref><sp/>=<sp/>1024*1024*8<sp/>};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structamrex_1_1EArena_1_1Node" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1EArena_1_1Node" kindref="compound">Node</ref></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50" refid="structamrex_1_1EArena_1_1Node_1a288b2fef1ea5646d959ae154b8790ecb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1EArena_1_1Node_1a288b2fef1ea5646d959ae154b8790ecb" kindref="member">Node</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>block,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>owner,<sp/>std::size_t<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1ac0bbdd3b8f64770191201e431e16c723" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1EArena_1_1Node_1af098a20a26f8c6450ac2751d8f02a263" kindref="member">m_block</ref>(reinterpret_cast&lt;uintptr_t&gt;(block)),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1EArena_1_1Node_1a8f0286fae08719933cb4848f028ac40a" kindref="member">m_owner</ref>(reinterpret_cast&lt;uintptr_t&gt;(owner)),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1EArena_1_1Node_1a89529f45bfc11373bc41d2da43c3a12f" kindref="member">m_size</ref>(size)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="structamrex_1_1EArena_1_1Node_1ab2e370518b6574a337ddd9fc4cefe3bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1EArena_1_1Node_1ab2e370518b6574a337ddd9fc4cefe3bf" kindref="member">Node</ref><sp/>(std::size_t<sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1ac0bbdd3b8f64770191201e431e16c723" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1EArena_1_1Node_1af098a20a26f8c6450ac2751d8f02a263" kindref="member">m_block</ref>(0),<sp/><ref refid="structamrex_1_1EArena_1_1Node_1a8f0286fae08719933cb4848f028ac40a" kindref="member">m_owner</ref>(0),<sp/><ref refid="structamrex_1_1EArena_1_1Node_1a89529f45bfc11373bc41d2da43c3a12f" kindref="member">m_size</ref>(size)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="structamrex_1_1EArena_1_1Node_1af098a20a26f8c6450ac2751d8f02a263" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uintptr_t<sp/><ref refid="structamrex_1_1EArena_1_1Node_1af098a20a26f8c6450ac2751d8f02a263" kindref="member">m_block</ref>;</highlight></codeline>
<codeline lineno="61" refid="structamrex_1_1EArena_1_1Node_1a8f0286fae08719933cb4848f028ac40a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uintptr_t<sp/><ref refid="structamrex_1_1EArena_1_1Node_1a8f0286fae08719933cb4848f028ac40a" kindref="member">m_owner</ref>;</highlight></codeline>
<codeline lineno="62" refid="structamrex_1_1EArena_1_1Node_1a89529f45bfc11373bc41d2da43c3a12f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="structamrex_1_1EArena_1_1Node_1a89529f45bfc11373bc41d2da43c3a12f" kindref="member">m_size</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="structamrex_1_1EArena_1_1Node_1_1CompareSize" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1EArena_1_1Node_1_1CompareSize" kindref="compound">CompareSize</ref><sp/>{</highlight></codeline>
<codeline lineno="65" refid="structamrex_1_1EArena_1_1Node_1_1CompareSize_1a1e9e9b66227e5c39f4cbd553d856582e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1EArena_1_1Node_1_1CompareSize_1a1e9e9b66227e5c39f4cbd553d856582e" kindref="member">operator () </ref>(<ref refid="structamrex_1_1EArena_1_1Node" kindref="compound">Node</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>lhs,<sp/><ref refid="structamrex_1_1EArena_1_1Node" kindref="compound">Node</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lhs.m_size<sp/>&lt;<sp/>rhs.m_size)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>((lhs.m_size<sp/>==<sp/>rhs.m_size)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(lhs.m_block<sp/>&lt;<sp/>rhs.m_block));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="structamrex_1_1EArena_1_1Node_1_1CompareAddr" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1EArena_1_1Node_1_1CompareAddr" kindref="compound">CompareAddr</ref><sp/>{</highlight></codeline>
<codeline lineno="73" refid="structamrex_1_1EArena_1_1Node_1_1CompareAddr_1a93e8a155b5f40c4f48c5830378f692d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1EArena_1_1Node_1_1CompareSize_1a1e9e9b66227e5c39f4cbd553d856582e" kindref="member">operator () </ref>(<ref refid="structamrex_1_1EArena_1_1Node" kindref="compound">Node</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>lhs,<sp/><ref refid="structamrex_1_1EArena_1_1Node" kindref="compound">Node</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lhs.m_owner<sp/>&lt;<sp/>rhs.m_owner)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>((lhs.m_owner<sp/>==<sp/>rhs.m_owner)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(lhs.m_block<sp/>&lt;<sp/>rhs.m_block));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="structamrex_1_1EArena_1_1Node_1_1hash" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1EArena_1_1Node_1_1hash" kindref="compound">hash</ref><sp/>{</highlight></codeline>
<codeline lineno="81" refid="structamrex_1_1EArena_1_1Node_1_1hash_1a41f1bd5ef8cd90aebfd2fe0689303466" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="structamrex_1_1EArena_1_1Node_1_1CompareSize_1a1e9e9b66227e5c39f4cbd553d856582e" kindref="member">operator() </ref>(<ref refid="structamrex_1_1EArena_1_1Node" kindref="compound">Node</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>n)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::hash&lt;uintptr_t&gt;{}(n.m_block);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="structamrex_1_1EArena_1_1Node_1_1equal" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1EArena_1_1Node_1_1equal" kindref="compound">equal</ref><sp/>{</highlight></codeline>
<codeline lineno="87" refid="structamrex_1_1EArena_1_1Node_1_1equal_1ab3d1eb44cebd3e6a76907c66f5c9af39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1EArena_1_1Node_1_1CompareSize_1a1e9e9b66227e5c39f4cbd553d856582e" kindref="member">operator() </ref>(<ref refid="structamrex_1_1EArena_1_1Node" kindref="compound">Node</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>lhs,<sp/><ref refid="structamrex_1_1EArena_1_1Node" kindref="compound">Node</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.m_block<sp/>==<sp/>rhs.m_block;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="classamrex_1_1EArena_1a3b05dd7697d03b2752d96117fe50bf03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;void*,std::size_t&gt;<sp/>&gt;<sp/><ref refid="classamrex_1_1EArena_1a3b05dd7697d03b2752d96117fe50bf03" kindref="member">m_alloc</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classamrex_1_1EArena_1a62a6459912f2dee99fb7dc6dfe60d851" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1EArena_1a62a6459912f2dee99fb7dc6dfe60d851" kindref="member">FreeList</ref><sp/>=<sp/>std::set&lt;Node,Node::CompareSize&gt;;</highlight></codeline>
<codeline lineno="96" refid="classamrex_1_1EArena_1a643d1d395c74559a883cea436b148679" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EArena_1a62a6459912f2dee99fb7dc6dfe60d851" kindref="member">FreeList</ref><sp/><ref refid="classamrex_1_1EArena_1a643d1d395c74559a883cea436b148679" kindref="member">m_freelist</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>store<sp/>the<sp/>same<sp/>nodes<sp/>as<sp/>FreeList,<sp/>but<sp/>in<sp/>different<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classamrex_1_1EArena_1a4b262f8a364b67bc38f2db23df5dcc75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1EArena_1a4b262f8a364b67bc38f2db23df5dcc75" kindref="member">MergeList</ref><sp/>=<sp/>std::set&lt;Node,Node::CompareAddr&gt;;</highlight></codeline>
<codeline lineno="100" refid="classamrex_1_1EArena_1a68dd7c13d4db50eeaa1b7b075a140960" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EArena_1a4b262f8a364b67bc38f2db23df5dcc75" kindref="member">MergeList</ref><sp/><ref refid="classamrex_1_1EArena_1a68dd7c13d4db50eeaa1b7b075a140960" kindref="member">m_mergelist</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classamrex_1_1EArena_1a05797269791825a6ff9f39ec670c5e1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1EArena_1a05797269791825a6ff9f39ec670c5e1c" kindref="member">BusyList</ref><sp/>=<sp/>std::unordered_set&lt;Node,Node::hash,Node::equal&gt;;</highlight></codeline>
<codeline lineno="103" refid="classamrex_1_1EArena_1a9cc0a06009f6f282f7bc260c283d970f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1EArena_1a05797269791825a6ff9f39ec670c5e1c" kindref="member">BusyList</ref><sp/><ref refid="classamrex_1_1EArena_1a9cc0a06009f6f282f7bc260c283d970f" kindref="member">m_busylist</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classamrex_1_1EArena_1af16871ff173840b654ff8a3748099fa1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="classamrex_1_1EArena_1af16871ff173840b654ff8a3748099fa1" kindref="member">m_hunk</ref>;</highlight></codeline>
<codeline lineno="108" refid="classamrex_1_1EArena_1a9286ee7b29d7014dcdb72b9302bc4f50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="classamrex_1_1EArena_1a9286ee7b29d7014dcdb72b9302bc4f50" kindref="member">m_used_size</ref>;</highlight></codeline>
<codeline lineno="110" refid="classamrex_1_1EArena_1a35e2bae13b9e7e85a420c8e11a5f6c73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="classamrex_1_1EArena_1a35e2bae13b9e7e85a420c8e11a5f6c73" kindref="member">m_free_size</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classamrex_1_1EArena_1a0418b867a5d3fb99a7035977c14fd89c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::mutex<sp/><ref refid="classamrex_1_1EArena_1a0418b867a5d3fb99a7035977c14fd89c" kindref="member">earena_mutex</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_EArena.H"/>
  </compounddef>
</doxygen>
