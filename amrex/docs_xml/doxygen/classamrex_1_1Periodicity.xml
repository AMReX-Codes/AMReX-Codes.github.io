<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1Periodicity" kind="class" language="C++" prot="public">
    <compoundname>amrex::Periodicity</compoundname>
    <includes refid="AMReX__Periodicity_8H" local="no">AMReX_Periodicity.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1Periodicity_1ace8592786e8de8bb2dc6ac31716adc7e" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></type>
        <definition>IntVect amrex::Periodicity::period</definition>
        <argsstring></argsstring>
        <name>period</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Periodicity.H" line="40" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Periodicity.H" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1Periodicity_1ab912d518e6c2289d18ca26e791920ea7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Periodicity::Periodicity</definition>
        <argsstring>() noexcept</argsstring>
        <name>Periodicity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Periodicity.H" line="19" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Periodicity.H" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Periodicity_1abaaf6e49e85d1624a89b4ce8ade5c541" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Periodicity::Periodicity</definition>
        <argsstring>(const IntVect &amp;v) noexcept</argsstring>
        <name>Periodicity</name>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Periodicity.H" line="20" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Periodicity.H" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Periodicity_1a6f3139a13faee557751404e44ab09042" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::Periodicity::isAnyPeriodic</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isAnyPeriodic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Periodicity.H" line="22" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Periodicity.H" bodystart="22" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Periodicity_1a0c514a0dab32786f1285b20cdfd327a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::Periodicity::isAllPeriodic</definition>
        <argsstring>() const noexcept</argsstring>
        <name>isAllPeriodic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Periodicity.H" line="24" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Periodicity.H" bodystart="24" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Periodicity_1ab263804d56d1280b7ece30109482ecee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::Periodicity::isPeriodic</definition>
        <argsstring>(int dir) const noexcept</argsstring>
        <name>isPeriodic</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Periodicity.H" line="26" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Periodicity.H" bodystart="26" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Periodicity_1aa8f0c58703d74ff60d7fde603725e54c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::Periodicity::operator==</definition>
        <argsstring>(const Periodicity &amp;rhs) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classamrex_1_1Periodicity" kindref="compound">Periodicity</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Periodicity.H" line="29" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Periodicity.H" bodystart="29" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Periodicity_1a41d52e3a7bfcb2c174c80a6a14ad5e53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref></type>
        <definition>Box amrex::Periodicity::Domain</definition>
        <argsstring>() const noexcept</argsstring>
        <name>Domain</name>
        <briefdescription>
<para>Cell-centered domain <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &quot;infinitely&quot; long in non-periodic directions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Periodicity.H" line="33" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Periodicity.cpp" bodystart="33" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Periodicity_1aa00f72c117ab2cfa93707b4dfce502c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &gt;</type>
        <definition>std::vector&lt; IntVect &gt; amrex::Periodicity::shiftIntVect</definition>
        <argsstring>() const</argsstring>
        <name>shiftIntVect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Periodicity.H" line="35" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Periodicity.cpp" bodystart="8" bodyend="30"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1Periodicity_1a194e779bf59d1700830a35cecb5271a5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1Periodicity" kindref="compound">Periodicity</ref> &amp;</type>
        <definition>const Periodicity &amp; amrex::Periodicity::NonPeriodic</definition>
        <argsstring>() noexcept</argsstring>
        <name>NonPeriodic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Periodicity.H" line="37" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Periodicity.cpp" bodystart="49" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This provides length of period for periodic domains. 0 means it is not periodic in that direction. It is also assumed that the periodic domain starts with index 0. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4206">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="4206" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="4205">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="4206" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Periodicity.H" line="17" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Periodicity.H" bodystart="16" bodyend="41"/>
    <listofallmembers>
      <member refid="classamrex_1_1Periodicity_1a41d52e3a7bfcb2c174c80a6a14ad5e53" prot="public" virt="non-virtual"><scope>amrex::Periodicity</scope><name>Domain</name></member>
      <member refid="classamrex_1_1Periodicity_1a0c514a0dab32786f1285b20cdfd327a7" prot="public" virt="non-virtual"><scope>amrex::Periodicity</scope><name>isAllPeriodic</name></member>
      <member refid="classamrex_1_1Periodicity_1a6f3139a13faee557751404e44ab09042" prot="public" virt="non-virtual"><scope>amrex::Periodicity</scope><name>isAnyPeriodic</name></member>
      <member refid="classamrex_1_1Periodicity_1ab263804d56d1280b7ece30109482ecee" prot="public" virt="non-virtual"><scope>amrex::Periodicity</scope><name>isPeriodic</name></member>
      <member refid="classamrex_1_1Periodicity_1a194e779bf59d1700830a35cecb5271a5" prot="public" virt="non-virtual"><scope>amrex::Periodicity</scope><name>NonPeriodic</name></member>
      <member refid="classamrex_1_1Periodicity_1aa8f0c58703d74ff60d7fde603725e54c" prot="public" virt="non-virtual"><scope>amrex::Periodicity</scope><name>operator==</name></member>
      <member refid="classamrex_1_1Periodicity_1ace8592786e8de8bb2dc6ac31716adc7e" prot="private" virt="non-virtual"><scope>amrex::Periodicity</scope><name>period</name></member>
      <member refid="classamrex_1_1Periodicity_1ab912d518e6c2289d18ca26e791920ea7" prot="public" virt="non-virtual"><scope>amrex::Periodicity</scope><name>Periodicity</name></member>
      <member refid="classamrex_1_1Periodicity_1abaaf6e49e85d1624a89b4ce8ade5c541" prot="public" virt="non-virtual"><scope>amrex::Periodicity</scope><name>Periodicity</name></member>
      <member refid="classamrex_1_1Periodicity_1aa00f72c117ab2cfa93707b4dfce502c6" prot="public" virt="non-virtual"><scope>amrex::Periodicity</scope><name>shiftIntVect</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
