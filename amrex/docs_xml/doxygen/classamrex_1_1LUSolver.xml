<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classamrex_1_1LUSolver" kind="class" language="C++" prot="public">
    <compoundname>amrex::LUSolver</compoundname>
    <includes refid="AMReX__LUSolver_8H" local="no">AMReX_LUSolver.H</includes>
    <templateparamlist>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1LUSolver_1a5a5715e926af85d43393633db8dd9e99" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1Array2D" kindref="compound">Array2D</ref>&lt; T, 0, N-1, 0, N-1, <ref refid="namespaceamrex_1a1e470da9cdaa55f3e887edb813385d20a0d61f8370cad1d412f80b84d143e1257" kindref="member">Order::C</ref> &gt;</type>
        <definition>Array2D&lt;T, 0, N-1, 0, N-1, Order::C&gt; amrex::LUSolver&lt; N, T &gt;::m_mat</definition>
        <argsstring></argsstring>
        <name>m_mat</name>
        <qualifiedname>amrex::LUSolver::m_mat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_LUSolver.H" line="81" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_LUSolver.H" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1LUSolver_1aaceb7a501559fdef423b5e60f493d4fd" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1Array1D" kindref="compound">Array1D</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, 0, N-1 &gt;</type>
        <definition>Array1D&lt;int, 0, N-1&gt; amrex::LUSolver&lt; N, T &gt;::m_piv</definition>
        <argsstring></argsstring>
        <name>m_piv</name>
        <qualifiedname>amrex::LUSolver::m_piv</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_LUSolver.H" line="82" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_LUSolver.H" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1LUSolver_1a27b3efefb425391025f69a103f062dc0" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::LUSolver&lt; N, T &gt;::m_npivs</definition>
        <argsstring></argsstring>
        <name>m_npivs</name>
        <qualifiedname>amrex::LUSolver::m_npivs</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_LUSolver.H" line="83" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_LUSolver.H" bodystart="83" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1LUSolver_1afdbcba9c8adb9f87e26470604e85e5d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::LUSolver&lt; N, T &gt;::LUSolver</definition>
        <argsstring>()=default</argsstring>
        <name>LUSolver</name>
        <qualifiedname>amrex::LUSolver::LUSolver</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_LUSolver.H" line="19" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LUSolver_1a39bf746e19e32ff8a3b2e37f0288b791" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::LUSolver&lt; N, T &gt;::LUSolver</definition>
        <argsstring>(Array2D&lt; T, 0, N-1, 0, N-1, Order::C &gt; const &amp;a_mat)</argsstring>
        <name>LUSolver</name>
        <qualifiedname>amrex::LUSolver::LUSolver</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1Array2D" kindref="compound">Array2D</ref>&lt; T, 0, N-1, 0, N-1, <ref refid="namespaceamrex_1a1e470da9cdaa55f3e887edb813385d20a0d61f8370cad1d412f80b84d143e1257" kindref="member">Order::C</ref> &gt; const &amp;</type>
          <declname>a_mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_LUSolver.H" line="22" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_LUSolver.H" bodystart="88" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LUSolver_1ac140887d397e31e0b3e3d827b09a7429" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::LUSolver&lt; N, T &gt;::define</definition>
        <argsstring>(Array2D&lt; T, 0, N-1, 0, N-1, Order::C &gt; const &amp;a_mat)</argsstring>
        <name>define</name>
        <qualifiedname>amrex::LUSolver::define</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1Array2D" kindref="compound">Array2D</ref>&lt; T, 0, N-1, 0, N-1, <ref refid="namespaceamrex_1a1e470da9cdaa55f3e887edb813385d20a0d61f8370cad1d412f80b84d143e1257" kindref="member">Order::C</ref> &gt; const &amp;</type>
          <declname>a_mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_LUSolver.H" line="24" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_LUSolver.H" bodystart="95" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LUSolver_1aaf960814958b6c90e2d7e7a8f49a1243" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::LUSolver&lt; N, T &gt;::operator()</definition>
        <argsstring>(T *AMREX_RESTRICT x, T const *AMREX_RESTRICT b) const</argsstring>
        <name>operator()</name>
        <qualifiedname>amrex::LUSolver::operator()</qualifiedname>
        <param>
          <type>T *<ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type>T const *<ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_LUSolver.H" line="27" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_LUSolver.H" bodystart="27" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LUSolver_1ac5276286b1b3b50f47a57116f9e1f3b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="structamrex_1_1Array2D" kindref="compound">Array2D</ref>&lt; T, 0, N-1, 0, N-1, <ref refid="namespaceamrex_1a1e470da9cdaa55f3e887edb813385d20a0d61f8370cad1d412f80b84d143e1257" kindref="member">Order::C</ref> &gt;</type>
        <definition>AMREX_GPU_HOST_DEVICE Array2D&lt; T, 0, N-1, 0, N-1, Order::C &gt; amrex::LUSolver&lt; N, T &gt;::invert</definition>
        <argsstring>() const</argsstring>
        <name>invert</name>
        <qualifiedname>amrex::LUSolver::invert</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_LUSolver.H" line="45" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_LUSolver.H" bodystart="45" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LUSolver_1a4f37e841ada15630a76680aae4e88eb5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> T</type>
        <definition>AMREX_GPU_HOST_DEVICE T amrex::LUSolver&lt; N, T &gt;::determinant</definition>
        <argsstring>() const</argsstring>
        <name>determinant</name>
        <qualifiedname>amrex::LUSolver::determinant</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_LUSolver.H" line="66" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_LUSolver.H" bodystart="66" bodyend="74"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1LUSolver_1a57e2853a78e56b34a4af4547590b1702" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::LUSolver&lt; N, T &gt;::define_innard</definition>
        <argsstring>()</argsstring>
        <name>define_innard</name>
        <qualifiedname>amrex::LUSolver::define_innard</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_LUSolver.H" line="79" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_LUSolver.H" bodystart="103" bodyend="146"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>amrex::Array1D&lt; int, 0, N-1 &gt;</label>
        <link refid="structamrex_1_1Array1D"/>
      </node>
      <node id="2">
        <label>amrex::Array2D&lt; T, 0, N-1, 0, N-1, Order::C &gt;</label>
        <link refid="structamrex_1_1Array2D"/>
        <childnode refid="3" relation="usage">
          <edgelabel>arr</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>T</label>
      </node>
      <node id="1">
        <label>amrex::LUSolver&lt; N, T &gt;</label>
        <link refid="classamrex_1_1LUSolver"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_mat</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_piv</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_LUSolver.H" line="15" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_LUSolver.H" bodystart="16" bodyend="84"/>
    <listofallmembers>
      <member refid="classamrex_1_1LUSolver_1ac140887d397e31e0b3e3d827b09a7429" prot="public" virt="non-virtual"><scope>amrex::LUSolver</scope><name>define</name></member>
      <member refid="classamrex_1_1LUSolver_1a57e2853a78e56b34a4af4547590b1702" prot="private" virt="non-virtual"><scope>amrex::LUSolver</scope><name>define_innard</name></member>
      <member refid="classamrex_1_1LUSolver_1a4f37e841ada15630a76680aae4e88eb5" prot="public" virt="non-virtual"><scope>amrex::LUSolver</scope><name>determinant</name></member>
      <member refid="classamrex_1_1LUSolver_1ac5276286b1b3b50f47a57116f9e1f3b4" prot="public" virt="non-virtual"><scope>amrex::LUSolver</scope><name>invert</name></member>
      <member refid="classamrex_1_1LUSolver_1afdbcba9c8adb9f87e26470604e85e5d0" prot="public" virt="non-virtual"><scope>amrex::LUSolver</scope><name>LUSolver</name></member>
      <member refid="classamrex_1_1LUSolver_1a39bf746e19e32ff8a3b2e37f0288b791" prot="public" virt="non-virtual"><scope>amrex::LUSolver</scope><name>LUSolver</name></member>
      <member refid="classamrex_1_1LUSolver_1a5a5715e926af85d43393633db8dd9e99" prot="private" virt="non-virtual"><scope>amrex::LUSolver</scope><name>m_mat</name></member>
      <member refid="classamrex_1_1LUSolver_1a27b3efefb425391025f69a103f062dc0" prot="private" virt="non-virtual"><scope>amrex::LUSolver</scope><name>m_npivs</name></member>
      <member refid="classamrex_1_1LUSolver_1aaceb7a501559fdef423b5e60f493d4fd" prot="private" virt="non-virtual"><scope>amrex::LUSolver</scope><name>m_piv</name></member>
      <member refid="classamrex_1_1LUSolver_1aaf960814958b6c90e2d7e7a8f49a1243" prot="public" virt="non-virtual"><scope>amrex::LUSolver</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
