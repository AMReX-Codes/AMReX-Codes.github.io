<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1EB2_1_1ComplementIF" kind="class" language="C++" prot="public">
    <compoundname>amrex::EB2::ComplementIF</compoundname>
    <includes refid="AMReX__EB2__IF__Complement_8H" local="no">AMReX_EB2_IF_Complement.H</includes>
    <templateparamlist>
      <param>
        <type>class F</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1ComplementIF_1a0258d3b856f873ca8b5d4e6452d49605" prot="protected" static="no" mutable="no">
        <type>F</type>
        <definition>F amrex::EB2::ComplementIF&lt; F &gt;::m_f</definition>
        <argsstring></argsstring>
        <name>m_f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Complement.H" line="41" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Complement.H" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1ComplementIF_1a3a1f9777ef8a723adf4368d75ba3a714" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::ComplementIF&lt; F &gt;::ComplementIF</definition>
        <argsstring>(F &amp;&amp;a_f)</argsstring>
        <name>ComplementIF</name>
        <param>
          <type>F &amp;&amp;</type>
          <declname>a_f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Complement.H" line="19" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Complement.H" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1ComplementIF_1ae26d05d519a6d3d29a26ae0923343e47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::ComplementIF&lt; F &gt;::ComplementIF</definition>
        <argsstring>(F const &amp;a_f)</argsstring>
        <name>ComplementIF</name>
        <param>
          <type>F const &amp;</type>
          <declname>a_f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Complement.H" line="20" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Complement.H" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1ComplementIF_1aa9c921b677ba98d1bb5018c7b069b6e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::ComplementIF&lt; F &gt;::ComplementIF</definition>
        <argsstring>(const ComplementIF &amp;rhs)=default</argsstring>
        <name>ComplementIF</name>
        <param>
          <type>const <ref refid="classamrex_1_1EB2_1_1ComplementIF" kindref="compound">ComplementIF</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Complement.H" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1ComplementIF_1acff65bc20cd6254b106f5a32f535d440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::ComplementIF&lt; F &gt;::ComplementIF</definition>
        <argsstring>(ComplementIF &amp;&amp;rhs)=default</argsstring>
        <name>ComplementIF</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1ComplementIF" kindref="compound">ComplementIF</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Complement.H" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1ComplementIF_1a685e7ecdd7bd169d7a5b5f25258c30bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1ComplementIF" kindref="compound">ComplementIF</ref> &amp;</type>
        <definition>ComplementIF&amp; amrex::EB2::ComplementIF&lt; F &gt;::operator=</definition>
        <argsstring>(const ComplementIF &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1EB2_1_1ComplementIF" kindref="compound">ComplementIF</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Complement.H" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1ComplementIF_1a65002bb68b66966ed35a4228c0e92069" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1ComplementIF" kindref="compound">ComplementIF</ref> &amp;</type>
        <definition>ComplementIF&amp; amrex::EB2::ComplementIF&lt; F &gt;::operator=</definition>
        <argsstring>(ComplementIF &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1ComplementIF" kindref="compound">ComplementIF</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Complement.H" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1ComplementIF_1a0acb6e6e2c0fec594ee992b4811f3702" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Real</type>
        <definition>Real amrex::EB2::ComplementIF&lt; F &gt;::operator()</definition>
        <argsstring>(const RealArray &amp;p) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Complement.H" line="27" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Complement.H" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1ComplementIF_1ac114241000abc43b7c9d00e98603b6f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>F</defval>
          </param>
          <param>
            <type>typename std::enable_if&lt; <ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt; U &gt;::value, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;::type</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> Real</type>
        <definition>AMREX_GPU_HOST_DEVICE Real amrex::EB2::ComplementIF&lt; F &gt;::operator()</definition>
        <argsstring>(AMREX_D_DECL(Real x, Real y, Real z)) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>AMREX_D_DECL(Real x, Real y, Real z)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Complement.H" line="34" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Complement.H" bodystart="34" bodyend="37"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Complement.H" line="16" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Complement.H" bodystart="15" bodyend="42"/>
    <listofallmembers>
      <member refid="classamrex_1_1EB2_1_1ComplementIF_1a3a1f9777ef8a723adf4368d75ba3a714" prot="public" virt="non-virtual"><scope>amrex::EB2::ComplementIF</scope><name>ComplementIF</name></member>
      <member refid="classamrex_1_1EB2_1_1ComplementIF_1ae26d05d519a6d3d29a26ae0923343e47" prot="public" virt="non-virtual"><scope>amrex::EB2::ComplementIF</scope><name>ComplementIF</name></member>
      <member refid="classamrex_1_1EB2_1_1ComplementIF_1aa9c921b677ba98d1bb5018c7b069b6e4" prot="public" virt="non-virtual"><scope>amrex::EB2::ComplementIF</scope><name>ComplementIF</name></member>
      <member refid="classamrex_1_1EB2_1_1ComplementIF_1acff65bc20cd6254b106f5a32f535d440" prot="public" virt="non-virtual"><scope>amrex::EB2::ComplementIF</scope><name>ComplementIF</name></member>
      <member refid="classamrex_1_1EB2_1_1ComplementIF_1a0258d3b856f873ca8b5d4e6452d49605" prot="protected" virt="non-virtual"><scope>amrex::EB2::ComplementIF</scope><name>m_f</name></member>
      <member refid="classamrex_1_1EB2_1_1ComplementIF_1a0acb6e6e2c0fec594ee992b4811f3702" prot="public" virt="non-virtual"><scope>amrex::EB2::ComplementIF</scope><name>operator()</name></member>
      <member refid="classamrex_1_1EB2_1_1ComplementIF_1ac114241000abc43b7c9d00e98603b6f9" prot="public" virt="non-virtual"><scope>amrex::EB2::ComplementIF</scope><name>operator()</name></member>
      <member refid="classamrex_1_1EB2_1_1ComplementIF_1a685e7ecdd7bd169d7a5b5f25258c30bb" prot="public" virt="non-virtual"><scope>amrex::EB2::ComplementIF</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1ComplementIF_1a65002bb68b66966ed35a4228c0e92069" prot="public" virt="non-virtual"><scope>amrex::EB2::ComplementIF</scope><name>operator=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
