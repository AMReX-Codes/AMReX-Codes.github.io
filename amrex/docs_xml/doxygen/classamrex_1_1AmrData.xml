<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1AmrData" kind="class" language="C++" prot="public">
    <compoundname>amrex::AmrData</compoundname>
    <includes refid="AMReX__AmrData_8H" local="no">AMReX_AmrData.H</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1AmrData_1a8f9fb6ae8ec27c11da30c4a979701707" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> * &gt; &gt;</type>
        <definition>Vector&lt;Vector&lt;MultiFab *&gt; &gt; amrex::AmrData::dataGrids</definition>
        <argsstring></argsstring>
        <name>dataGrids</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="25" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1af81255387eae3d9ae9efbeb317a26d40" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::vector&lt; bool &gt; &gt; &gt;</type>
        <definition>Vector&lt;Vector&lt;std::vector&lt;bool&gt; &gt; &gt; amrex::AmrData::dataGridsDefined</definition>
        <argsstring></argsstring>
        <name>dataGridsDefined</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="26" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1a5a5958ef910e9bf598e3e22c1b6f107f" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1VisMF" kindref="compound">VisMF</ref> * &gt; &gt;</type>
        <definition>Vector&lt;Vector&lt;VisMF *&gt; &gt; amrex::AmrData::visMF</definition>
        <argsstring></argsstring>
        <name>visMF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="27" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1ae0e599a7af6fc6308d0984560eba02df" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::AmrData::compIndexToVisMFMap</definition>
        <argsstring></argsstring>
        <name>compIndexToVisMFMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="28" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1a28bf0151eaaf2d32cb7b6e3f37e8d499" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::AmrData::compIndexToVisMFComponentMap</definition>
        <argsstring></argsstring>
        <name>compIndexToVisMFComponentMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="29" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1a6284a1347eff4eb0f6f6bdb2f4417354" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrData::finestLevel</definition>
        <argsstring></argsstring>
        <name>finestLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="31" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1aa4cc6f66406b7faf1a605b4d56df77ef" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::AmrData::refRatio</definition>
        <argsstring></argsstring>
        <name>refRatio</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="32" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1acf28800ea1c047a973e104f20c05fa4d" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt; &gt;</type>
        <definition>Vector&lt; Vector&lt;Real&gt; &gt; amrex::AmrData::dxLevel</definition>
        <argsstring></argsstring>
        <name>dxLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="33" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1a28d407574c4e864763d7e30c5374a5f7" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt; &gt; &gt;</type>
        <definition>Vector&lt; Vector&lt; Vector&lt;Real&gt; &gt; &gt; amrex::AmrData::gridLocLo</definition>
        <argsstring></argsstring>
        <name>gridLocLo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="34" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1a7d683070bd9df75f69f1f11257baff26" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt; &gt; &gt;</type>
        <definition>Vector&lt; Vector&lt; Vector&lt;Real&gt; &gt; &gt; amrex::AmrData::gridLocHi</definition>
        <argsstring></argsstring>
        <name>gridLocHi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="34" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1a837415b3fb8f8b8f378228d94a2563df" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &gt;</type>
        <definition>Vector&lt;Box&gt; amrex::AmrData::probDomain</definition>
        <argsstring></argsstring>
        <name>probDomain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="35" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1a8def7a794d486314a85bfb4133a12313" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &gt;</type>
        <definition>Vector&lt;Box&gt; amrex::AmrData::maxDomain</definition>
        <argsstring></argsstring>
        <name>maxDomain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="36" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1a05119789d1f20fa785068e24580129d5" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt;</type>
        <definition>Vector&lt;Real&gt; amrex::AmrData::probSize</definition>
        <argsstring></argsstring>
        <name>probSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="37" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1a1e66e43e21552623a1e0c9fad7df4e46" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt;</type>
        <definition>Vector&lt;Real&gt; amrex::AmrData::probLo</definition>
        <argsstring></argsstring>
        <name>probLo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="37" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1ac34dc700ac457772b9fc634e2f80edd8" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt;</type>
        <definition>Vector&lt;Real&gt; amrex::AmrData::probHi</definition>
        <argsstring></argsstring>
        <name>probHi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="37" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1af36e6cd9e76d13205ad8dfc57cba5b58" prot="protected" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::AmrData::time</definition>
        <argsstring></argsstring>
        <name>time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="38" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1abb37b63392fa96850b26d06e6b3f4be1" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::string &gt;</type>
        <definition>Vector&lt;std::string&gt; amrex::AmrData::plotVars</definition>
        <argsstring></argsstring>
        <name>plotVars</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="39" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1aa1abeaf749a362244bd9f82a68a6ec12" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt;</type>
        <definition>Vector&lt;Real&gt; amrex::AmrData::vfEps</definition>
        <argsstring></argsstring>
        <name>vfEps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="40" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1a157a97d6fc15b68f5f18710113d3329a" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt;</type>
        <definition>Vector&lt;Real&gt; amrex::AmrData::afEps</definition>
        <argsstring></argsstring>
        <name>afEps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="40" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1aa4789a7f8a95114cbb7eafa31541e362" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrData::nComp</definition>
        <argsstring></argsstring>
        <name>nComp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="41" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1aaa772f863501b3d0a0c4a883b91b9083" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrData::nGrow</definition>
        <argsstring></argsstring>
        <name>nGrow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="41" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1a5d4d3de59d23f664fca0fd8898c3f2b0" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrData::nRegions</definition>
        <argsstring></argsstring>
        <name>nRegions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="42" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1afe8bc6f5489bcdb1c869821656362357" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrData::boundaryWidth</definition>
        <argsstring></argsstring>
        <name>boundaryWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="43" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1a6c2cd93052ccb8644d8a419d9d2230bc" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrData::coordSys</definition>
        <argsstring></argsstring>
        <name>coordSys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="44" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1a2e14123fa9e7caeae727ac2c307e8956" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> * &gt; &gt;</type>
        <definition>Vector&lt; Vector&lt; FArrayBox *&gt; &gt; amrex::AmrData::regions</definition>
        <argsstring></argsstring>
        <name>regions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="45" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1afd0ce8b38263bf89dedc4e1c806f3de2" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref></type>
        <definition>BoxArray amrex::AmrData::fabBoxArray</definition>
        <argsstring></argsstring>
        <name>fabBoxArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="46" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1a5cb67cc4b9127391a42535788c43c49d" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string amrex::AmrData::plotFileVersion</definition>
        <argsstring></argsstring>
        <name>plotFileVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="47" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1a55f80ce2d869787fb73ec8acb5383864" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cf" kindref="member">Amrvis::FileType</ref></type>
        <definition>Amrvis::FileType amrex::AmrData::fileType</definition>
        <argsstring></argsstring>
        <name>fileType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="49" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1ab44433cd1de27af67df3e342b3cd36e7" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::AmrData::bCartGrid</definition>
        <argsstring></argsstring>
        <name>bCartGrid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="50" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1ac7742574ff1d7b24879cbac34c7382b6" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::AmrData::bShowBody</definition>
        <argsstring></argsstring>
        <name>bShowBody</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="50" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1a93d8a8d179bc25e308d12760514402c3" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrData::vCartGrid</definition>
        <argsstring></argsstring>
        <name>vCartGrid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="51" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1afabb8e1c24620e4fa9cba00f9e4a386d" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::AmrData::bTerrain</definition>
        <argsstring></argsstring>
        <name>bTerrain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="52" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1a9a873156471b39d52631b3e56b8218a5" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::AmrData::levelSteps</definition>
        <argsstring></argsstring>
        <name>levelSteps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="53" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1AmrData_1a68af42ba1e62a0b858d0f9075d9a44e6" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string amrex::AmrData::fileName</definition>
        <argsstring></argsstring>
        <name>fileName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="177" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="177" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1AmrData_1a85ba54b8833cffb9983c02e13c3536a4" prot="private" static="yes" mutable="no">
        <type><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cf" kindref="member">Amrvis::FileType</ref></type>
        <definition>Amrvis::FileType amrex::AmrData::defaultFileType</definition>
        <argsstring></argsstring>
        <name>defaultFileType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="178" column="27" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1a1bd53088e127ea5603447dd7e7c574e1" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool amrex::AmrData::verbose</definition>
        <argsstring></argsstring>
        <name>verbose</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="179" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1aea8c1f5867b40ff35944f471b3808071" prot="private" static="yes" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrData::skipPltLines</definition>
        <argsstring></argsstring>
        <name>skipPltLines</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="180" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1AmrData_1a04cbef7bbdc59553a3899ce2567e3f44" prot="private" static="yes" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrData::sBoundaryWidth</definition>
        <argsstring></argsstring>
        <name>sBoundaryWidth</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="181" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="181" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1AmrData_1a8fbbfb01083cf0c56560f765945cdfb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::AmrData::AmrData</definition>
        <argsstring>()</argsstring>
        <name>AmrData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="56" column="3" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="111" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1aa48f45d99e5cc5131854e6c700003f28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::AmrData::~AmrData</definition>
        <argsstring>()</argsstring>
        <name>~AmrData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="57" column="3" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="122" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1ae41ad53f7f76cc59fd271cdd1476228a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::AmrData::ReadData</definition>
        <argsstring>(const std::string &amp;filename, Amrvis::FileType filetype)</argsstring>
        <name>ReadData</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cf" kindref="member">Amrvis::FileType</ref></type>
          <declname>filetype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="59" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="158" bodyend="804"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a10551f29207a5f3ff861bd8eeedcb435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::AmrData::ReadNonPlotfileData</definition>
        <argsstring>(const std::string &amp;filename, Amrvis::FileType filetype)</argsstring>
        <name>ReadNonPlotfileData</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cf" kindref="member">Amrvis::FileType</ref></type>
          <declname>filetype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="60" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="808" bodyend="1030"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1aacf2bf93e89399ca37e10646536f3218" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::string &gt; &amp;</type>
        <definition>const Vector&lt;std::string&gt;&amp; amrex::AmrData::PlotVarNames</definition>
        <argsstring>() const</argsstring>
        <name>PlotVarNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="62" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a1bfae1293b49c3ace47ffd0cb40b45ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrData::FinestLevel</definition>
        <argsstring>() const</argsstring>
        <name>FinestLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="64" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a7c4bfee257c49d17e634776ddff2fc54" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &amp;</type>
        <definition>const Vector&lt;int&gt;&amp; amrex::AmrData::RefRatio</definition>
        <argsstring>() const</argsstring>
        <name>RefRatio</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="65" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1aa45d9bdd77447ee858455e5ff5dc2aad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
        <definition>const BoxArray&amp; amrex::AmrData::boxArray</definition>
        <argsstring>(int level) const</argsstring>
        <name>boxArray</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="66" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="66" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a9e7b30efeb63bececf47db9012dcc114" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
        <definition>const DistributionMapping&amp; amrex::AmrData::DistributionMap</definition>
        <argsstring>(int level) const</argsstring>
        <name>DistributionMap</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="76" column="29" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="76" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a37b2fde345a6609763be8a1fdd7ece25" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &gt; &amp;</type>
        <definition>const Vector&lt;Box&gt;&amp; amrex::AmrData::ProbDomain</definition>
        <argsstring>() const</argsstring>
        <name>ProbDomain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="85" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1aee3000e243b4b85b74bad050fa9f0484" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt; &amp;</type>
        <definition>const Vector&lt;Real&gt;&amp; amrex::AmrData::ProbSize</definition>
        <argsstring>() const</argsstring>
        <name>ProbSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="87" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a1dea3e08037a71158cda1adafab206ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt; &amp;</type>
        <definition>const Vector&lt;Real&gt;&amp; amrex::AmrData::ProbLo</definition>
        <argsstring>() const</argsstring>
        <name>ProbLo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="88" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a413de6a07cab35d38f1f23801cae1060" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt; &amp;</type>
        <definition>const Vector&lt;Real&gt;&amp; amrex::AmrData::ProbHi</definition>
        <argsstring>() const</argsstring>
        <name>ProbHi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="89" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1aafe06e3fa4b2ad1b95508230dbeffa72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AmrData::CellLoc</definition>
        <argsstring>(int lev, IntVect ix, Vector&lt; Real &gt; &amp;pos) const</argsstring>
        <name>CellLoc</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a8792201c856a367dda275e09047daa33" kindref="member">IntVect</ref></type>
          <declname>ix</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt; &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="95" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1034" bodyend="1039"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a0fc16f868cf63f196fa3b3aecc6f211e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AmrData::LoNodeLoc</definition>
        <argsstring>(int lev, IntVect ix, Vector&lt; Real &gt; &amp;pos) const</argsstring>
        <name>LoNodeLoc</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a8792201c856a367dda275e09047daa33" kindref="member">IntVect</ref></type>
          <declname>ix</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt; &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="96" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1043" bodyend="1048"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1aa0c2291b475b15e34106f3ecf3b6a0e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AmrData::HiNodeLoc</definition>
        <argsstring>(int lev, IntVect ix, Vector&lt; Real &gt; &amp;pos) const</argsstring>
        <name>HiNodeLoc</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a8792201c856a367dda275e09047daa33" kindref="member">IntVect</ref></type>
          <declname>ix</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt; &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="97" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1052" bodyend="1057"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a6826d1760f9a6a60187230e3495ca3be" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt;</type>
        <definition>Vector&lt;Real&gt; amrex::AmrData::CellSize</definition>
        <argsstring>(int iLevel) const</argsstring>
        <name>CellSize</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>iLevel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="100" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1ab662246a334dad2696f3b8560c78de94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AmrData::IntVectFromLocation</definition>
        <argsstring>(const int finestFillLevel, const Vector&lt; Real &gt; &amp;location, IntVect &amp;ivLoc, int &amp;ivLevel, IntVect &amp;ivFinestFillLev) const</argsstring>
        <name>IntVectFromLocation</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>finestFillLevel</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt; &amp;</type>
          <declname>location</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a8792201c856a367dda275e09047daa33" kindref="member">IntVect</ref> &amp;</type>
          <declname>ivLoc</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &amp;</type>
          <declname>ivLevel</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a8792201c856a367dda275e09047daa33" kindref="member">IntVect</ref> &amp;</type>
          <declname>ivFinestFillLev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="105" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1061" bodyend="1085"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a26585c76f370219e547cc9c018faead7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt; &gt; &gt; &amp;</type>
        <definition>const Vector&lt; Vector&lt; Vector&lt;Real&gt; &gt; &gt;&amp; amrex::AmrData::GridLocLo</definition>
        <argsstring>() const</argsstring>
        <name>GridLocLo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="108" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a06732eabff2d761d63404d048d57d130" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt; &gt; &gt; &amp;</type>
        <definition>const Vector&lt; Vector&lt; Vector&lt;Real&gt; &gt; &gt;&amp; amrex::AmrData::GridLocHi</definition>
        <argsstring>() const</argsstring>
        <name>GridLocHi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="109" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a6a60af608e73c830bde3bf1b312d1df5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt; &gt; &amp;</type>
        <definition>const Vector&lt; Vector&lt;Real&gt; &gt;&amp; amrex::AmrData::DxLevel</definition>
        <argsstring>() const</argsstring>
        <name>DxLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="110" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1ae438fc92d638f323795408735f2cebb8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &amp;</type>
        <definition>const Vector&lt;int&gt;&amp; amrex::AmrData::LevelSteps</definition>
        <argsstring>() const</argsstring>
        <name>LevelSteps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="111" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1ad096b226eb7958f5d2bbd63449b077d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrData::NComp</definition>
        <argsstring>() const</argsstring>
        <name>NComp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="113" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a561095d726e8e7578b1c59fcee3311c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrData::BoundaryWidth</definition>
        <argsstring>() const</argsstring>
        <name>BoundaryWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="114" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a93648bc3842b67bb1dffa164bdd5f0d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrData::NGrow</definition>
        <argsstring>() const</argsstring>
        <name>NGrow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="115" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a03474c53ab517d87862ddc487c2cdeab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrData::CoordSys</definition>
        <argsstring>() const</argsstring>
        <name>CoordSys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="116" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a3e139eef25f3ada10cd551ada84b4a94" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Real</type>
        <definition>Real amrex::AmrData::Time</definition>
        <argsstring>() const</argsstring>
        <name>Time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="117" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1aff316a96447744ee3bd4e3abbb555f6b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; amrex::AmrData::PlotFileVersion</definition>
        <argsstring>() const</argsstring>
        <name>PlotFileVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="118" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a9da43b855d7bb5e6a5e7ca51b4d60e98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AmrData::FillVar</definition>
        <argsstring>(FArrayBox *destFab, const Box &amp;destBox, int finestFillLevel, const std::string &amp;varName, int procWithFabs)</argsstring>
        <name>FillVar</name>
        <param>
          <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> *</type>
          <declname>destFab</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>destBox</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>finestFillLevel</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>varName</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>procWithFabs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="121" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1089" bodyend="1098"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a65b5439faa7e1ef2949f00edaac3d1f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AmrData::FillVar</definition>
        <argsstring>(Vector&lt; FArrayBox * &gt; &amp;destFabs, const Vector&lt; Box &gt; &amp;destBoxes, int finestFillLevel, const std::string &amp;varName, int procWithFabs)</argsstring>
        <name>FillVar</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> * &gt; &amp;</type>
          <declname>destFabs</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &gt; &amp;</type>
          <declname>destBoxes</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>finestFillLevel</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>varName</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>procWithFabs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="123" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1353" bodyend="1573"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1ad21c6566676a74569438fc34998a9874" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AmrData::FillVar</definition>
        <argsstring>(MultiFab &amp;destMultiFab, int finestFillLevel, const Vector&lt; std::string &gt; &amp;varNames, const Vector&lt; int &gt; &amp;destFillComps)</argsstring>
        <name>FillVar</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>destMultiFab</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>finestFillLevel</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::string &gt; &amp;</type>
          <declname>varNames</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &amp;</type>
          <declname>destFillComps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="125" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1115" bodyend="1349"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a07cc26d410e6d3ff0a3bca3426e1343c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AmrData::FillVar</definition>
        <argsstring>(MultiFab &amp;destMultiFab, int finestFillLevel, const std::string &amp;varname, int destcomp=0)</argsstring>
        <name>FillVar</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>destMultiFab</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>finestFillLevel</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>varname</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>destcomp</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="127" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1102" bodyend="1111"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1aae6972ddc9fa4b14594680e841fcf19e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; amrex::AmrData::GetFileName</definition>
        <argsstring>() const</argsstring>
        <name>GetFileName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="130" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a2bfd78d92eae8d100a08f1b954c70483" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AmrData::SetFileType</definition>
        <argsstring>(Amrvis::FileType type)</argsstring>
        <name>SetFileType</name>
        <param>
          <type><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cf" kindref="member">Amrvis::FileType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="132" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a567e2aa9690d270dbf95dfda84f909f6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cf" kindref="member">Amrvis::FileType</ref></type>
        <definition>Amrvis::FileType amrex::AmrData::GetFileType</definition>
        <argsstring>() const</argsstring>
        <name>GetFileType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="133" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a2f1db26232c0faf4e0b164bff1e2848b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::AmrData::CartGrid</definition>
        <argsstring>() const</argsstring>
        <name>CartGrid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="134" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a97f5b63eea482f1fc8c4fab33c7afc4d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::AmrData::GetShowBody</definition>
        <argsstring>() const</argsstring>
        <name>GetShowBody</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="135" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1ac3e2ebf3a95fc625bf57908fe1d07585" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AmrData::SetShowBody</definition>
        <argsstring>(bool tf)</argsstring>
        <name>SetShowBody</name>
        <param>
          <type>bool</type>
          <declname>tf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="136" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1abbd11f921125e23499969c24f8d0e4d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrData::CartGridVersion</definition>
        <argsstring>() const</argsstring>
        <name>CartGridVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="137" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a31f677540a6f76eb6d0f414a71ed544a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Real</type>
        <definition>Real amrex::AmrData::VfEps</definition>
        <argsstring>(int level) const</argsstring>
        <name>VfEps</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="138" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1ab2473a7e3aa4aaa9e89dfa521add4252" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AmrData::SetVfEps</definition>
        <argsstring>(Real *newvfeps, int finestlev)</argsstring>
        <name>SetVfEps</name>
        <param>
          <type>Real *</type>
          <declname>newvfeps</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>finestlev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="139" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a8d89242fc1acffe99a9df2cd45c6ab9e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::AmrData::Terrain</definition>
        <argsstring>() const</argsstring>
        <name>Terrain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="140" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1ac85bd7e77961978803b66748f57c1a14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AmrData::SetBoundaryWidth</definition>
        <argsstring>(int width)</argsstring>
        <name>SetBoundaryWidth</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="142" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1af87b3b3ccc957963371870e73f8679e1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::AmrData::CanDerive</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>CanDerive</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="144" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1592" bodyend="1599"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a351b40fa21a1d0ae733b0da5874bba69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::AmrData::CanDerive</definition>
        <argsstring>(const Vector&lt; std::string &gt; &amp;names) const</argsstring>
        <name>CanDerive</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::string &gt; &amp;</type>
          <declname>names</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="145" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1603" bodyend="1614"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a11275d3515db9c31ef424271070717c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrData::NumDeriveFunc</definition>
        <argsstring>() const</argsstring>
        <name>NumDeriveFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="146" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1583" bodyend="1585"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a1335563a0cca7162b541f4bdf3d7b5a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AmrData::ListDeriveFunc</definition>
        <argsstring>(std::ostream &amp;os) const</argsstring>
        <name>ListDeriveFunc</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="147" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1620" bodyend="1624"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a9123a637a2bcb30632bd253a7f0705eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrData::StateNumber</definition>
        <argsstring>(const std::string &amp;statename) const</argsstring>
        <name>StateNumber</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>statename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="148" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1952" bodyend="1963"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1ac2d3dd0aea616e10181d20da60d32239" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrData::FinestContainingLevel</definition>
        <argsstring>(const Box &amp;b, int startLevel) const</argsstring>
        <name>FinestContainingLevel</name>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>startLevel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="152" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1648" bodyend="1665"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a9578a44932eb4060e7ba940ac622005a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrData::FinestIntersectingLevel</definition>
        <argsstring>(const Box &amp;b, int startLevel) const</argsstring>
        <name>FinestIntersectingLevel</name>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>startLevel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="156" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1669" bodyend="1690"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a766fc8383910abe6808b900bb63ce574" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::AmrData::NIntersectingGrids</definition>
        <argsstring>(int level, const Box &amp;b) const</argsstring>
        <name>NIntersectingGrids</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="159" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1628" bodyend="1644"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a780cda5b717c23ce62c232042dc686f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
        <definition>MultiFab &amp; amrex::AmrData::GetGrids</definition>
        <argsstring>(int level, int componentIndex)</argsstring>
        <name>GetGrids</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>componentIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="160" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1694" bodyend="1699"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a2fb7ab2d7a3b0eab52eab3edff96621d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
        <definition>MultiFab &amp; amrex::AmrData::GetGrids</definition>
        <argsstring>(int level, int componentIndex, const Box &amp;onBox)</argsstring>
        <name>GetGrids</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>componentIndex</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>onBox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="161" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1703" bodyend="1717"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1aa4bfe1de93aafef1d7365e677047b5ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AmrData::FlushGrids</definition>
        <argsstring>()</argsstring>
        <name>FlushGrids</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="163" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1736" bodyend="1740"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a41a948375962564d161d7b43d9f72484" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AmrData::FlushGrids</definition>
        <argsstring>(int componentIndex)</argsstring>
        <name>FlushGrids</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>componentIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="164" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1744" bodyend="1765"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1aeed9a789444eed02d262bbbf8ee333de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::AmrData::MinMax</definition>
        <argsstring>(const Box &amp;onBox, const std::string &amp;derived, int level, Real &amp;dataMin, Real &amp;dataMax)</argsstring>
        <name>MinMax</name>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>onBox</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>derived</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type>Real &amp;</type>
          <declname>dataMin</declname>
        </param>
        <param>
          <type>Real &amp;</type>
          <declname>dataMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="168" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1769" bodyend="1948"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1AmrData_1a93023ed252fb2a08657bbdfa7ccc6a87" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void amrex::AmrData::SetVerbose</definition>
        <argsstring>(bool tf)</argsstring>
        <name>SetVerbose</name>
        <param>
          <type>bool</type>
          <declname>tf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="171" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1af952472581f78b118b6337ec671d65f4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool amrex::AmrData::Verbose</definition>
        <argsstring>()</argsstring>
        <name>Verbose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="172" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1ae3bed0818b249c54dd2b51368264dd72" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void amrex::AmrData::SetSkipPltLines</definition>
        <argsstring>(int spl)</argsstring>
        <name>SetSkipPltLines</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>spl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="173" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a45d9b6c2a9fff2fce88fccc4deed8b62" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void amrex::AmrData::SetStaticBoundaryWidth</definition>
        <argsstring>(int bw)</argsstring>
        <name>SetStaticBoundaryWidth</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>bw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="174" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="174" bodyend="174"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1AmrData_1afb5907b2c56371b7ab6b7d35c156d7bd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AmrData::FillInterior</definition>
        <argsstring>(FArrayBox &amp;dest, int level, const Box &amp;subbox)</argsstring>
        <name>FillInterior</name>
        <param>
          <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>subbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="184" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1577" bodyend="1579"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a9b0be0d1fe433ea0a5c86db43e82cbcb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AmrData::Interp</definition>
        <argsstring>(FArrayBox &amp;fine, FArrayBox &amp;crse, const Box &amp;fine_box, int lrat)</argsstring>
        <name>Interp</name>
        <param>
          <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
          <declname>fine</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
          <declname>crse</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>fine_box</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lrat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="185" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1967" bodyend="2015"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a852ba956d157fa2eb049e1b7cc6d50db" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AmrData::PcInterp</definition>
        <argsstring>(FArrayBox &amp;fine, const FArrayBox &amp;crse, const Box &amp;subbox, int lrat)</argsstring>
        <name>PcInterp</name>
        <param>
          <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
          <declname>fine</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
          <declname>crse</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>subbox</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lrat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="187" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="2019" bodyend="2051"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1a511a1b01b981c6b4a4bdbdc71582ea68" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> *</type>
        <definition>FArrayBox * amrex::AmrData::ReadGrid</definition>
        <argsstring>(std::istream &amp;is, int numVar)</argsstring>
        <name>ReadGrid</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>numVar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="189" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="2055" bodyend="2105"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AmrData_1acd91c393bc58c4eabbffcd3f8790b74b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::AmrData::DefineFab</definition>
        <argsstring>(int level, int componentIndex, int fabIndex)</argsstring>
        <name>DefineFab</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>componentIndex</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>fabIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="190" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp" bodystart="1721" bodyend="1732"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="27">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="24" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::MultiFab * &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="22" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="4">
        <label>T</label>
      </node>
      <node id="30">
        <label>Real</label>
      </node>
      <node id="24">
        <label>amrex::IndexTypeND&lt; AMREX_SPACEDIM &gt;</label>
        <link refid="classamrex_1_1IndexTypeND"/>
        <childnode refid="25" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::FArrayBox * &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="8">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::VisMF * &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="19">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="20" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="22" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="21" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::AmrData</label>
        <link refid="classamrex_1_1AmrData"/>
        <childnode refid="2" relation="usage">
          <edgelabel>gridLocHi</edgelabel>
          <edgelabel>gridLocLo</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>regions</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>dataGridsDefined</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>afEps</edgelabel>
          <edgelabel>probHi</edgelabel>
          <edgelabel>probLo</edgelabel>
          <edgelabel>probSize</edgelabel>
          <edgelabel>vfEps</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>visMF</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>dataGrids</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>plotVars</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>compIndexToVisMFComponentMap</edgelabel>
          <edgelabel>compIndexToVisMFMap</edgelabel>
          <edgelabel>levelSteps</edgelabel>
          <edgelabel>refRatio</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>fileName</edgelabel>
          <edgelabel>plotFileVersion</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>maxDomain</edgelabel>
          <edgelabel>probDomain</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>dxLevel</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>fabBoxArray</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>time</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::Vector&lt; Real &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="17" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>amrex::Vector&lt; amrex::Vector&lt; std::vector&lt; bool &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
      </node>
      <node id="21">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="22" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>amrex::Vector&lt; Real &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>amrex::CellIndexEnum</label>
        <link refid="structamrex_1_1CellIndexEnum"/>
      </node>
      <node id="18">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
      </node>
      <node id="14">
        <label>amrex::Vector&lt; amrex::Box &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>amrex::Vector&lt; amrex::Vector&lt; Real &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>std::string</label>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>amrex::IntVectND&lt; AMREX_SPACEDIM &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" line="21" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H" bodystart="21" bodyend="191"/>
    <listofallmembers>
      <member refid="classamrex_1_1AmrData_1a157a97d6fc15b68f5f18710113d3329a" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>afEps</name></member>
      <member refid="classamrex_1_1AmrData_1a8fbbfb01083cf0c56560f765945cdfb4" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>AmrData</name></member>
      <member refid="classamrex_1_1AmrData_1ab44433cd1de27af67df3e342b3cd36e7" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>bCartGrid</name></member>
      <member refid="classamrex_1_1AmrData_1afe8bc6f5489bcdb1c869821656362357" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>boundaryWidth</name></member>
      <member refid="classamrex_1_1AmrData_1a561095d726e8e7578b1c59fcee3311c5" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>BoundaryWidth</name></member>
      <member refid="classamrex_1_1AmrData_1aa45d9bdd77447ee858455e5ff5dc2aad" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>boxArray</name></member>
      <member refid="classamrex_1_1AmrData_1ac7742574ff1d7b24879cbac34c7382b6" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>bShowBody</name></member>
      <member refid="classamrex_1_1AmrData_1afabb8e1c24620e4fa9cba00f9e4a386d" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>bTerrain</name></member>
      <member refid="classamrex_1_1AmrData_1af87b3b3ccc957963371870e73f8679e1" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>CanDerive</name></member>
      <member refid="classamrex_1_1AmrData_1a351b40fa21a1d0ae733b0da5874bba69" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>CanDerive</name></member>
      <member refid="classamrex_1_1AmrData_1a2f1db26232c0faf4e0b164bff1e2848b" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>CartGrid</name></member>
      <member refid="classamrex_1_1AmrData_1abbd11f921125e23499969c24f8d0e4d0" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>CartGridVersion</name></member>
      <member refid="classamrex_1_1AmrData_1aafe06e3fa4b2ad1b95508230dbeffa72" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>CellLoc</name></member>
      <member refid="classamrex_1_1AmrData_1a6826d1760f9a6a60187230e3495ca3be" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>CellSize</name></member>
      <member refid="classamrex_1_1AmrData_1a28bf0151eaaf2d32cb7b6e3f37e8d499" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>compIndexToVisMFComponentMap</name></member>
      <member refid="classamrex_1_1AmrData_1ae0e599a7af6fc6308d0984560eba02df" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>compIndexToVisMFMap</name></member>
      <member refid="classamrex_1_1AmrData_1a03474c53ab517d87862ddc487c2cdeab" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>CoordSys</name></member>
      <member refid="classamrex_1_1AmrData_1a6c2cd93052ccb8644d8a419d9d2230bc" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>coordSys</name></member>
      <member refid="classamrex_1_1AmrData_1a8f9fb6ae8ec27c11da30c4a979701707" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>dataGrids</name></member>
      <member refid="classamrex_1_1AmrData_1af81255387eae3d9ae9efbeb317a26d40" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>dataGridsDefined</name></member>
      <member refid="classamrex_1_1AmrData_1a85ba54b8833cffb9983c02e13c3536a4" prot="private" virt="non-virtual"><scope>amrex::AmrData</scope><name>defaultFileType</name></member>
      <member refid="classamrex_1_1AmrData_1acd91c393bc58c4eabbffcd3f8790b74b" prot="private" virt="non-virtual"><scope>amrex::AmrData</scope><name>DefineFab</name></member>
      <member refid="classamrex_1_1AmrData_1a9e7b30efeb63bececf47db9012dcc114" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>DistributionMap</name></member>
      <member refid="classamrex_1_1AmrData_1acf28800ea1c047a973e104f20c05fa4d" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>dxLevel</name></member>
      <member refid="classamrex_1_1AmrData_1a6a60af608e73c830bde3bf1b312d1df5" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>DxLevel</name></member>
      <member refid="classamrex_1_1AmrData_1afd0ce8b38263bf89dedc4e1c806f3de2" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>fabBoxArray</name></member>
      <member refid="classamrex_1_1AmrData_1a68af42ba1e62a0b858d0f9075d9a44e6" prot="private" virt="non-virtual"><scope>amrex::AmrData</scope><name>fileName</name></member>
      <member refid="classamrex_1_1AmrData_1a55f80ce2d869787fb73ec8acb5383864" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>fileType</name></member>
      <member refid="classamrex_1_1AmrData_1afb5907b2c56371b7ab6b7d35c156d7bd" prot="private" virt="non-virtual"><scope>amrex::AmrData</scope><name>FillInterior</name></member>
      <member refid="classamrex_1_1AmrData_1a9da43b855d7bb5e6a5e7ca51b4d60e98" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>FillVar</name></member>
      <member refid="classamrex_1_1AmrData_1a65b5439faa7e1ef2949f00edaac3d1f0" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>FillVar</name></member>
      <member refid="classamrex_1_1AmrData_1ad21c6566676a74569438fc34998a9874" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>FillVar</name></member>
      <member refid="classamrex_1_1AmrData_1a07cc26d410e6d3ff0a3bca3426e1343c" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>FillVar</name></member>
      <member refid="classamrex_1_1AmrData_1ac2d3dd0aea616e10181d20da60d32239" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>FinestContainingLevel</name></member>
      <member refid="classamrex_1_1AmrData_1a9578a44932eb4060e7ba940ac622005a" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>FinestIntersectingLevel</name></member>
      <member refid="classamrex_1_1AmrData_1a1bfae1293b49c3ace47ffd0cb40b45ce" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>FinestLevel</name></member>
      <member refid="classamrex_1_1AmrData_1a6284a1347eff4eb0f6f6bdb2f4417354" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>finestLevel</name></member>
      <member refid="classamrex_1_1AmrData_1aa4bfe1de93aafef1d7365e677047b5ec" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>FlushGrids</name></member>
      <member refid="classamrex_1_1AmrData_1a41a948375962564d161d7b43d9f72484" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>FlushGrids</name></member>
      <member refid="classamrex_1_1AmrData_1aae6972ddc9fa4b14594680e841fcf19e" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>GetFileName</name></member>
      <member refid="classamrex_1_1AmrData_1a567e2aa9690d270dbf95dfda84f909f6" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>GetFileType</name></member>
      <member refid="classamrex_1_1AmrData_1a780cda5b717c23ce62c232042dc686f8" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>GetGrids</name></member>
      <member refid="classamrex_1_1AmrData_1a2fb7ab2d7a3b0eab52eab3edff96621d" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>GetGrids</name></member>
      <member refid="classamrex_1_1AmrData_1a97f5b63eea482f1fc8c4fab33c7afc4d" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>GetShowBody</name></member>
      <member refid="classamrex_1_1AmrData_1a06732eabff2d761d63404d048d57d130" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>GridLocHi</name></member>
      <member refid="classamrex_1_1AmrData_1a7d683070bd9df75f69f1f11257baff26" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>gridLocHi</name></member>
      <member refid="classamrex_1_1AmrData_1a26585c76f370219e547cc9c018faead7" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>GridLocLo</name></member>
      <member refid="classamrex_1_1AmrData_1a28d407574c4e864763d7e30c5374a5f7" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>gridLocLo</name></member>
      <member refid="classamrex_1_1AmrData_1aa0c2291b475b15e34106f3ecf3b6a0e0" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>HiNodeLoc</name></member>
      <member refid="classamrex_1_1AmrData_1a9b0be0d1fe433ea0a5c86db43e82cbcb" prot="private" virt="non-virtual"><scope>amrex::AmrData</scope><name>Interp</name></member>
      <member refid="classamrex_1_1AmrData_1ab662246a334dad2696f3b8560c78de94" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>IntVectFromLocation</name></member>
      <member refid="classamrex_1_1AmrData_1ae438fc92d638f323795408735f2cebb8" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>LevelSteps</name></member>
      <member refid="classamrex_1_1AmrData_1a9a873156471b39d52631b3e56b8218a5" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>levelSteps</name></member>
      <member refid="classamrex_1_1AmrData_1a1335563a0cca7162b541f4bdf3d7b5a4" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>ListDeriveFunc</name></member>
      <member refid="classamrex_1_1AmrData_1a0fc16f868cf63f196fa3b3aecc6f211e" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>LoNodeLoc</name></member>
      <member refid="classamrex_1_1AmrData_1a8def7a794d486314a85bfb4133a12313" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>maxDomain</name></member>
      <member refid="classamrex_1_1AmrData_1aeed9a789444eed02d262bbbf8ee333de" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>MinMax</name></member>
      <member refid="classamrex_1_1AmrData_1ad096b226eb7958f5d2bbd63449b077d2" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>NComp</name></member>
      <member refid="classamrex_1_1AmrData_1aa4789a7f8a95114cbb7eafa31541e362" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>nComp</name></member>
      <member refid="classamrex_1_1AmrData_1a93648bc3842b67bb1dffa164bdd5f0d1" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>NGrow</name></member>
      <member refid="classamrex_1_1AmrData_1aaa772f863501b3d0a0c4a883b91b9083" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>nGrow</name></member>
      <member refid="classamrex_1_1AmrData_1a766fc8383910abe6808b900bb63ce574" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>NIntersectingGrids</name></member>
      <member refid="classamrex_1_1AmrData_1a5d4d3de59d23f664fca0fd8898c3f2b0" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>nRegions</name></member>
      <member refid="classamrex_1_1AmrData_1a11275d3515db9c31ef424271070717c2" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>NumDeriveFunc</name></member>
      <member refid="classamrex_1_1AmrData_1a852ba956d157fa2eb049e1b7cc6d50db" prot="private" virt="non-virtual"><scope>amrex::AmrData</scope><name>PcInterp</name></member>
      <member refid="classamrex_1_1AmrData_1a5cb67cc4b9127391a42535788c43c49d" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>plotFileVersion</name></member>
      <member refid="classamrex_1_1AmrData_1aff316a96447744ee3bd4e3abbb555f6b" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>PlotFileVersion</name></member>
      <member refid="classamrex_1_1AmrData_1aacf2bf93e89399ca37e10646536f3218" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>PlotVarNames</name></member>
      <member refid="classamrex_1_1AmrData_1abb37b63392fa96850b26d06e6b3f4be1" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>plotVars</name></member>
      <member refid="classamrex_1_1AmrData_1a37b2fde345a6609763be8a1fdd7ece25" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>ProbDomain</name></member>
      <member refid="classamrex_1_1AmrData_1a837415b3fb8f8b8f378228d94a2563df" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>probDomain</name></member>
      <member refid="classamrex_1_1AmrData_1a413de6a07cab35d38f1f23801cae1060" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>ProbHi</name></member>
      <member refid="classamrex_1_1AmrData_1ac34dc700ac457772b9fc634e2f80edd8" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>probHi</name></member>
      <member refid="classamrex_1_1AmrData_1a1e66e43e21552623a1e0c9fad7df4e46" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>probLo</name></member>
      <member refid="classamrex_1_1AmrData_1a1dea3e08037a71158cda1adafab206ef" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>ProbLo</name></member>
      <member refid="classamrex_1_1AmrData_1aee3000e243b4b85b74bad050fa9f0484" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>ProbSize</name></member>
      <member refid="classamrex_1_1AmrData_1a05119789d1f20fa785068e24580129d5" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>probSize</name></member>
      <member refid="classamrex_1_1AmrData_1ae41ad53f7f76cc59fd271cdd1476228a" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>ReadData</name></member>
      <member refid="classamrex_1_1AmrData_1a511a1b01b981c6b4a4bdbdc71582ea68" prot="private" virt="non-virtual"><scope>amrex::AmrData</scope><name>ReadGrid</name></member>
      <member refid="classamrex_1_1AmrData_1a10551f29207a5f3ff861bd8eeedcb435" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>ReadNonPlotfileData</name></member>
      <member refid="classamrex_1_1AmrData_1aa4cc6f66406b7faf1a605b4d56df77ef" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>refRatio</name></member>
      <member refid="classamrex_1_1AmrData_1a7c4bfee257c49d17e634776ddff2fc54" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>RefRatio</name></member>
      <member refid="classamrex_1_1AmrData_1a2e14123fa9e7caeae727ac2c307e8956" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>regions</name></member>
      <member refid="classamrex_1_1AmrData_1a04cbef7bbdc59553a3899ce2567e3f44" prot="private" virt="non-virtual"><scope>amrex::AmrData</scope><name>sBoundaryWidth</name></member>
      <member refid="classamrex_1_1AmrData_1ac85bd7e77961978803b66748f57c1a14" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>SetBoundaryWidth</name></member>
      <member refid="classamrex_1_1AmrData_1a2bfd78d92eae8d100a08f1b954c70483" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>SetFileType</name></member>
      <member refid="classamrex_1_1AmrData_1ac3e2ebf3a95fc625bf57908fe1d07585" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>SetShowBody</name></member>
      <member refid="classamrex_1_1AmrData_1ae3bed0818b249c54dd2b51368264dd72" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>SetSkipPltLines</name></member>
      <member refid="classamrex_1_1AmrData_1a45d9b6c2a9fff2fce88fccc4deed8b62" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>SetStaticBoundaryWidth</name></member>
      <member refid="classamrex_1_1AmrData_1a93023ed252fb2a08657bbdfa7ccc6a87" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>SetVerbose</name></member>
      <member refid="classamrex_1_1AmrData_1ab2473a7e3aa4aaa9e89dfa521add4252" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>SetVfEps</name></member>
      <member refid="classamrex_1_1AmrData_1aea8c1f5867b40ff35944f471b3808071" prot="private" virt="non-virtual"><scope>amrex::AmrData</scope><name>skipPltLines</name></member>
      <member refid="classamrex_1_1AmrData_1a9123a637a2bcb30632bd253a7f0705eb" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>StateNumber</name></member>
      <member refid="classamrex_1_1AmrData_1a8d89242fc1acffe99a9df2cd45c6ab9e" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>Terrain</name></member>
      <member refid="classamrex_1_1AmrData_1af36e6cd9e76d13205ad8dfc57cba5b58" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>time</name></member>
      <member refid="classamrex_1_1AmrData_1a3e139eef25f3ada10cd551ada84b4a94" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>Time</name></member>
      <member refid="classamrex_1_1AmrData_1a93d8a8d179bc25e308d12760514402c3" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>vCartGrid</name></member>
      <member refid="classamrex_1_1AmrData_1af952472581f78b118b6337ec671d65f4" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>Verbose</name></member>
      <member refid="classamrex_1_1AmrData_1a1bd53088e127ea5603447dd7e7c574e1" prot="private" virt="non-virtual"><scope>amrex::AmrData</scope><name>verbose</name></member>
      <member refid="classamrex_1_1AmrData_1aa1abeaf749a362244bd9f82a68a6ec12" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>vfEps</name></member>
      <member refid="classamrex_1_1AmrData_1a31f677540a6f76eb6d0f414a71ed544a" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>VfEps</name></member>
      <member refid="classamrex_1_1AmrData_1a5a5958ef910e9bf598e3e22c1b6f107f" prot="protected" virt="non-virtual"><scope>amrex::AmrData</scope><name>visMF</name></member>
      <member refid="classamrex_1_1AmrData_1aa48f45d99e5cc5131854e6c700003f28" prot="public" virt="non-virtual"><scope>amrex::AmrData</scope><name>~AmrData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
