<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1NFilesIter" kind="class" language="C++" prot="public">
    <compoundname>amrex::NFilesIter</compoundname>
    <includes refid="AMReX__NFiles_8H" local="no">AMReX_NFiles.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::myProc</definition>
        <argsstring></argsstring>
        <name>myProc</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="208" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a78880a4ba0c24b3fe3ee88bc7a10e71b" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::nProcs</definition>
        <argsstring></argsstring>
        <name>nProcs</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="209" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::nOutFiles</definition>
        <argsstring></argsstring>
        <name>nOutFiles</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="210" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1af0eab0426caa91fff3a64bcea5192ba3" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::nSets</definition>
        <argsstring></argsstring>
        <name>nSets</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="211" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1ae979bf2ecefe688126ee3f348ea609ce" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::NFilesIter::groupSets</definition>
        <argsstring></argsstring>
        <name>groupSets</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="212" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1ac8060f9d60b3f7dff21c1f8a826302d3" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::mySetPosition</definition>
        <argsstring></argsstring>
        <name>mySetPosition</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="213" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1ab7f699657b24b33c1b56a64dd6887c47" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::fileNumber</definition>
        <argsstring></argsstring>
        <name>fileNumber</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="214" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a7491b9b7bee6d89900b7948670ea6425" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string amrex::NFilesIter::filePrefix</definition>
        <argsstring></argsstring>
        <name>filePrefix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="215" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string amrex::NFilesIter::fullFileName</definition>
        <argsstring></argsstring>
        <name>fullFileName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="216" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a72265d22f478a8f599486c0dad93f7d7" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1VisMFBuffer_1a1b2038a46c20c406d77023b6cdc956c0" kindref="member">VisMFBuffer::IO_Buffer</ref></type>
        <definition>VisMFBuffer::IO_Buffer amrex::NFilesIter::io_buffer</definition>
        <argsstring></argsstring>
        <name>io_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="217" column="28" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" prot="private" static="no" mutable="no">
        <type>std::fstream</type>
        <definition>std::fstream amrex::NFilesIter::fileStream</definition>
        <argsstring></argsstring>
        <name>fileStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="218" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a7f0df2d517d11041df8498eedf986153" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::NFilesIter::finishedWriting</definition>
        <argsstring></argsstring>
        <name>finishedWriting</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="219" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1afcf233d4914d8cb31a987d6d3283ada4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::NFilesIter::isReading</definition>
        <argsstring></argsstring>
        <name>isReading</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="220" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a85a53512b313a24369fca3a3a53dbdb9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::NFilesIter::finishedReading</definition>
        <argsstring></argsstring>
        <name>finishedReading</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="221" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a5a0e5e8e0bd5503f9246b4d4c714a4a1" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::NFilesIter::readRanks</definition>
        <argsstring></argsstring>
        <name>readRanks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="222" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1af79193f1c65df83e1998042123690bec" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt;</type>
        <definition>Vector&lt; Vector&lt;int&gt; &gt; amrex::NFilesIter::fileNumbersWriteOrder</definition>
        <argsstring></argsstring>
        <name>fileNumbersWriteOrder</name>
        <briefdescription>
<para>[filenumber][ranks in order they wrote to filenumber] </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="223" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1aecbccfacd424296243d4fb271f754258" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::myReadIndex</definition>
        <argsstring></argsstring>
        <name>myReadIndex</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="224" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1ab85302b89ef7c47f7213adc1c25e7fbe" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::NFilesIter::useStaticSetSelection</definition>
        <argsstring></argsstring>
        <name>useStaticSetSelection</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="225" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1ae13a47d2ead798be8070c16227694412" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::remainingWriters</definition>
        <argsstring></argsstring>
        <name>remainingWriters</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="226" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a64d2a6da3e2847bc9601352409d79ceb" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::deciderProc</definition>
        <argsstring></argsstring>
        <name>deciderProc</name>
        <initializer>=-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="226" column="27" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a86d15e5891de4e1968493a59da32f121" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::coordinatorProc</definition>
        <argsstring></argsstring>
        <name>coordinatorProc</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="226" column="39" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a5ee82bc72ab839617286472e64131009" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::deciderTag</definition>
        <argsstring></argsstring>
        <name>deciderTag</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="227" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a29ac83e60acfc2a393c76e950b16160e" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::coordinatorTag</definition>
        <argsstring></argsstring>
        <name>coordinatorTag</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="227" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1ac2bc46fbbf9021c0c3991365bde31e33" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::doneTag</definition>
        <argsstring></argsstring>
        <name>doneTag</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="227" column="37" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a85f34f8f85d278c2a003b7861afc62c0" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::writeTag</definition>
        <argsstring></argsstring>
        <name>writeTag</name>
        <initializer>=-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="227" column="46" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1ae9224fba010f5b9f9b337f1e1ebdbbec" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::stWriteTag</definition>
        <argsstring></argsstring>
        <name>stWriteTag</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="228" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1aa46825b65b950336cbbdf7fdad5bd4d0" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::stReadTag</definition>
        <argsstring></argsstring>
        <name>stReadTag</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="229" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a9ef9f0f0fd1029ffd3024da64c841c9a" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::NFilesIter::availableDeciders</definition>
        <argsstring></argsstring>
        <name>availableDeciders</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="230" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a3862f6ec68ebefd530ce66a3bd5e37b2" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::NFilesIter::setZeroProcs</definition>
        <argsstring></argsstring>
        <name>setZeroProcs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="231" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a97ff46c50d110eeeacfcb90f5c001bd0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::NFilesIter::useSparseFPP</definition>
        <argsstring></argsstring>
        <name>useSparseFPP</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="232" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a7ea5dbf41c762d6e8e90def0b878ea8d" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::NFilesIter::sparseWritingRanks</definition>
        <argsstring></argsstring>
        <name>sparseWritingRanks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="233" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1adbf2559963632d8d8e286065e081205c" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::mySparseFileNumber</definition>
        <argsstring></argsstring>
        <name>mySparseFileNumber</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="234" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a8ac006de5caf3cfd0e6456dd6c3b3f2a" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::pair&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt;</type>
        <definition>Vector&lt;std::pair&lt;int, int&gt; &gt; amrex::NFilesIter::unreadMessages</definition>
        <argsstring></argsstring>
        <name>unreadMessages</name>
        <briefdescription>
<para>these were ignored by the decider procs and need to be cleaned up </para>
        </briefdescription>
        <detaileddescription>
<para>[](tag, nmessages) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="239" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="239" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a1ade88e3f8e68ea489d4ba016de2df7f" prot="private" static="yes" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::currentDeciderIndex</definition>
        <argsstring></argsstring>
        <name>currentDeciderIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="236" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1abde8301fcb9fb91f30cb12abc376bbc1" prot="private" static="yes" mutable="no">
        <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>const int amrex::NFilesIter::indexUndefined</definition>
        <argsstring></argsstring>
        <name>indexUndefined</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="241" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NFilesIter_1a0a8c15566295f7f51ea956a8abed24ed" prot="private" static="yes" mutable="no">
        <type><ref refid="AMReX__Extension_8H_1ac05fa35b3db13c4599d7ad5fc51bef47" kindref="member">AMREX_EXPORT</ref> <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::minDigits</definition>
        <argsstring></argsstring>
        <name>minDigits</name>
        <briefdescription>
<para>for Concatenate </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="243" column="29" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="243" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a50735b1e0f0c04d53e60371d210d50f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::NFilesIter::NFilesIter</definition>
        <argsstring>(int noutfiles, std::string fileprefix, bool groupsets, bool setBuf)</argsstring>
        <name>NFilesIter</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>noutfiles</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>fileprefix</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>groupsets</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>setBuf</declname>
        </param>
        <briefdescription>
<para>the nfiles will be named &quot;filePrefix&quot; + &quot;00000&quot; through &quot;filePrefix&quot; + &quot;noutfiles-1&quot; the range [1, nProcs] for noutfiles is enforced </para>
        </briefdescription>
        <detaileddescription>
<para>constructor for writing with static set selection</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>noutfiles</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&amp;fileprefix</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>groupsets</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>setBuf</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="43" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="13" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1afaabf4f7bbf8f45e425237a5116fffda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NFilesIter::SetDynamic</definition>
        <argsstring>(int deciderproc=-1)</argsstring>
        <name>SetDynamic</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>deciderproc</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>call this to use dynamic set selection deciderproc defaults to nprocs - 1 if &lt; 0 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deciderproc</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="53" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="69" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a17a5f370eb055df9d62919d0bbf34f66" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::NFilesIter::GetDynamic</definition>
        <argsstring>() const</argsstring>
        <name>GetDynamic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="54" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a4502510b5b15f7e87226e43367e1923a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NFilesIter::SetSparseFPP</definition>
        <argsstring>(const Vector&lt; int &gt; &amp;ranksToWrite)</argsstring>
        <name>SetSparseFPP</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &amp;</type>
          <declname>ranksToWrite</declname>
        </param>
        <briefdescription>
<para>call this to use a file per process for a sparse set of writers. <ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">ranksToWrite.size()</ref> will set noutfiles rank ranksToWrite[n] will write to file_rank </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&amp;ranksToWrite</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="64" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="114" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a201227cf338dfa1a032bc9018902204c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::NFilesIter::GetSparseFPP</definition>
        <argsstring>() const</argsstring>
        <name>GetSparseFPP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="65" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a41bf610b1a4c7439a960fa7589c09f53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::NFilesIter::NFilesIter</definition>
        <argsstring>(std::string fileName, Vector&lt; int &gt; readRanks, bool setBuf=false)</argsstring>
        <name>NFilesIter</name>
        <param>
          <type>std::string</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
          <declname>readRanks</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>setBuf</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>constructor for reading </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&amp;fileName</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>&amp;readRanks</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>setBuf</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="75" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="164" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a4f9a9917a9842e888fbdf9d45f5de52e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::NFilesIter::~NFilesIter</definition>
        <argsstring>()</argsstring>
        <name>~NFilesIter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="79" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="197" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a6da73e54601733abbefb73b558441299" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::NFilesIter::NFilesIter</definition>
        <argsstring>(NFilesIter const &amp;)=delete</argsstring>
        <name>NFilesIter</name>
        <param>
          <type><ref refid="classamrex_1_1NFilesIter" kindref="compound">NFilesIter</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="81" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a9f952996fef2f589f9d82962ab7b4ff7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::NFilesIter::NFilesIter</definition>
        <argsstring>(NFilesIter &amp;&amp;)=delete</argsstring>
        <name>NFilesIter</name>
        <param>
          <type><ref refid="classamrex_1_1NFilesIter" kindref="compound">NFilesIter</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="82" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a3c0bbbb50d35a9362c988549d3806f2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1NFilesIter" kindref="compound">NFilesIter</ref> &amp;</type>
        <definition>NFilesIter&amp; amrex::NFilesIter::operator=</definition>
        <argsstring>(NFilesIter const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1NFilesIter" kindref="compound">NFilesIter</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="83" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a391d14db5a565155805448e0168c1da5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1NFilesIter" kindref="compound">NFilesIter</ref> &amp;</type>
        <definition>NFilesIter&amp; amrex::NFilesIter::operator=</definition>
        <argsstring>(NFilesIter &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1NFilesIter" kindref="compound">NFilesIter</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="84" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a6c012f15ef5b8e7438a88bc794766143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::NFilesIter::ReadyToWrite</definition>
        <argsstring>(bool appendFirst=false)</argsstring>
        <name>ReadyToWrite</name>
        <param>
          <type>bool</type>
          <declname>appendFirst</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>if appendFirst is true, the first set for this iterator will open the files in append mode </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>appendFirst</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="92" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="204" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1af4f8ba9c90ecfcea92b6426df76049af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::NFilesIter::ReadyToRead</definition>
        <argsstring>()</argsstring>
        <name>ReadyToRead</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="94" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="325" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a47cb9c9c13164881e7cd69a7fd7bf455" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1NFilesIter" kindref="compound">NFilesIter</ref> &amp;</type>
        <definition>NFilesIter &amp; amrex::NFilesIter::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="96" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="345" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a4c71f8cab2ada9d8f54d800d0b7abc65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::fstream &amp;</type>
        <definition>std::fstream&amp; amrex::NFilesIter::Stream</definition>
        <argsstring>()</argsstring>
        <name>Stream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="98" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a66c78163b811ad78cb91330d0100cc54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::streampos</type>
        <definition>std::streampos amrex::NFilesIter::SeekPos</definition>
        <argsstring>()</argsstring>
        <name>SeekPos</name>
        <briefdescription>
<para>get the current <ref refid="classamrex_1_1NFilesIter_1a4c71f8cab2ada9d8f54d800d0b7abc65" kindref="member">Stream()</ref>&apos;s seek position </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="104" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="493" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a9fad70f99318130bf5c883b3cbd20650" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; amrex::NFilesIter::FileName</definition>
        <argsstring>() const</argsstring>
        <name>FileName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="160" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a971648481cfcbc77ebd0258b2ea03538" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::FileNumber</definition>
        <argsstring>() const</argsstring>
        <name>FileNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="161" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1ad05e5285d1e34ab3e64e20f5e87c32c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NFilesIter::CoordinatorProc</definition>
        <argsstring>() const</argsstring>
        <name>CoordinatorProc</name>
        <briefdescription>
<para>this is the processor coordinating dynamic set selection </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="184" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a071c4306e5a102244c1461684ab17cf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt; int &gt; amrex::NFilesIter::FileNumbersWritten</definition>
        <argsstring>()</argsstring>
        <name>FileNumbersWritten</name>
        <briefdescription>
<para>these are the file numbers to which each rank wrote [rank] a rank only writes to one file </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="191" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="517" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1ad9233c5996de29b80cfb5c0ac02e8214" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt; &amp;</type>
        <definition>const Vector&lt; Vector&lt;int&gt; &gt;&amp; amrex::NFilesIter::FileNumbersWriteOrder</definition>
        <argsstring>() const</argsstring>
        <name>FileNumbersWriteOrder</name>
        <briefdescription>
<para>these are the order of ranks which wrote to each file [filenumber][ranks in order they wrote to filenumber] </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="198" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1aa0c0e9a50f259bef6b3a1f2a932c65bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NFilesIter::CleanUpMessages</definition>
        <argsstring>()</argsstring>
        <name>CleanUpMessages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="200" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="552" bodyend="568"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a9138f1bb7d077d7d1cd043715ecb7d74" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>static int amrex::NFilesIter::LengthOfSet</definition>
        <argsstring>(int nProcs, int nOutFiles)</argsstring>
        <name>LengthOfSet</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nProcs</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nOutFiles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="106" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1af7dd1b0a5336926700c382a1af0ab5de" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>static int amrex::NFilesIter::WhichSetPosition</definition>
        <argsstring>(int whichproc, int nprocs, int noutfiles, bool groupsets)</argsstring>
        <name>WhichSetPosition</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>whichproc</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nprocs</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>noutfiles</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>groupsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="111" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="111" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a11b5dec9fc1e0865a1e59a896d8c2f8e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>static int amrex::NFilesIter::ActualNFiles</definition>
        <argsstring>(int nOutFiles)</argsstring>
        <name>ActualNFiles</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nOutFiles</declname>
        </param>
        <briefdescription>
<para>this returns the actual number of files used the range [1, nProcs] is enforced </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nOutFiles</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="130" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a0a8de2ff506c69fd9d2165fe0f294100" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::NFilesIter::CheckNFiles</definition>
        <argsstring>(int nProcs, int nOutFiles, bool groupSets)</argsstring>
        <name>CheckNFiles</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nProcs</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nOutFiles</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>groupSets</declname>
        </param>
        <briefdescription>
<para>this checks if nOutFiles equals the calculated number of files returns false if they do not match </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nProcs</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nOutFiles</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>groupSets</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="144" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.cpp" bodystart="498" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1aee88f93815c534f75ecc51eda61c60c5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>static int amrex::NFilesIter::FileNumber</definition>
        <argsstring>(int nOutFiles, int whichProc, bool groupSets)</argsstring>
        <name>FileNumber</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nOutFiles</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>whichProc</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>groupSets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="146" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="146" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a498f8a22acbe763c2df48062f3fe18bf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string amrex::NFilesIter::FileName</definition>
        <argsstring>(int nOutFiles, const std::string &amp;filePrefix, int whichProc, bool groupSets)</argsstring>
        <name>FileName</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nOutFiles</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filePrefix</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>whichProc</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>groupSets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="163" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="163" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a56f719e4f91d3d0ffbe3ec791236585f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string amrex::NFilesIter::FileName</definition>
        <argsstring>(int fileNumber, const std::string &amp;filePrefix)</argsstring>
        <name>FileName</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>fileNumber</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filePrefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="174" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="174" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a3d957684f758d55f7060078a5f49b08f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>static int amrex::NFilesIter::GetMinDigits</definition>
        <argsstring>()</argsstring>
        <name>GetMinDigits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="202" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="202" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NFilesIter_1a1ba8e895b17fe1e7c39d318b1e1ed9f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void amrex::NFilesIter::SetMinDigits</definition>
        <argsstring>(int md)</argsstring>
        <name>SetMinDigits</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>md</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="204" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="204" bodyend="204"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class encapsulates writing to nfiles. </para>
    </briefdescription>
    <detaileddescription>
<para>an example:</para>
<para>for(<ref refid="classamrex_1_1NFilesIter" kindref="compound">NFilesIter</ref> nfi(nOutFiles, filePrefix); nfi.ReadyToWrite(); ++nfi) { // do your writing here nfi.Stream().write((const char *) data.dataPtr(), nChars); } </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="11">
        <label>T</label>
      </node>
      <node id="9">
        <label>amrex::Vector&lt; Setbuf_Char_Type &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="11" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::basic_istream&lt; Char &gt;</label>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>amrex::Vector&lt; amrex::Vector&lt; int &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>amrex::Vector&lt; std::pair&lt; int, int &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::basic_iostream&lt; Char &gt;</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="1">
        <label>amrex::NFilesIter</label>
        <link refid="classamrex_1_1NFilesIter"/>
        <childnode refid="2" relation="usage">
          <edgelabel>fileStream</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>io_buffer</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>availableDeciders</edgelabel>
          <edgelabel>readRanks</edgelabel>
          <edgelabel>setZeroProcs</edgelabel>
          <edgelabel>sparseWritingRanks</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>filePrefix</edgelabel>
          <edgelabel>fullFileName</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>fileNumbersWriteOrder</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>unreadMessages</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>std::basic_ostream&lt; Char &gt;</label>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>std::basic_ios&lt; Char &gt;</label>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>std::ios_base</label>
      </node>
      <node id="2">
        <label>std::fstream</label>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>std::string</label>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::basic_fstream&lt; Char &gt;</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" line="26" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NFiles.H" bodystart="27" bodyend="244"/>
    <listofallmembers>
      <member refid="classamrex_1_1NFilesIter_1a11b5dec9fc1e0865a1e59a896d8c2f8e" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>ActualNFiles</name></member>
      <member refid="classamrex_1_1NFilesIter_1a9ef9f0f0fd1029ffd3024da64c841c9a" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>availableDeciders</name></member>
      <member refid="classamrex_1_1NFilesIter_1a0a8de2ff506c69fd9d2165fe0f294100" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>CheckNFiles</name></member>
      <member refid="classamrex_1_1NFilesIter_1aa0c0e9a50f259bef6b3a1f2a932c65bc" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>CleanUpMessages</name></member>
      <member refid="classamrex_1_1NFilesIter_1ad05e5285d1e34ab3e64e20f5e87c32c6" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>CoordinatorProc</name></member>
      <member refid="classamrex_1_1NFilesIter_1a86d15e5891de4e1968493a59da32f121" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>coordinatorProc</name></member>
      <member refid="classamrex_1_1NFilesIter_1a29ac83e60acfc2a393c76e950b16160e" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>coordinatorTag</name></member>
      <member refid="classamrex_1_1NFilesIter_1a1ade88e3f8e68ea489d4ba016de2df7f" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>currentDeciderIndex</name></member>
      <member refid="classamrex_1_1NFilesIter_1a64d2a6da3e2847bc9601352409d79ceb" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>deciderProc</name></member>
      <member refid="classamrex_1_1NFilesIter_1a5ee82bc72ab839617286472e64131009" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>deciderTag</name></member>
      <member refid="classamrex_1_1NFilesIter_1ac2bc46fbbf9021c0c3991365bde31e33" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>doneTag</name></member>
      <member refid="classamrex_1_1NFilesIter_1a9fad70f99318130bf5c883b3cbd20650" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>FileName</name></member>
      <member refid="classamrex_1_1NFilesIter_1a498f8a22acbe763c2df48062f3fe18bf" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>FileName</name></member>
      <member refid="classamrex_1_1NFilesIter_1a56f719e4f91d3d0ffbe3ec791236585f" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>FileName</name></member>
      <member refid="classamrex_1_1NFilesIter_1aee88f93815c534f75ecc51eda61c60c5" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>FileNumber</name></member>
      <member refid="classamrex_1_1NFilesIter_1a971648481cfcbc77ebd0258b2ea03538" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>FileNumber</name></member>
      <member refid="classamrex_1_1NFilesIter_1ab7f699657b24b33c1b56a64dd6887c47" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>fileNumber</name></member>
      <member refid="classamrex_1_1NFilesIter_1ad9233c5996de29b80cfb5c0ac02e8214" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>FileNumbersWriteOrder</name></member>
      <member refid="classamrex_1_1NFilesIter_1af79193f1c65df83e1998042123690bec" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>fileNumbersWriteOrder</name></member>
      <member refid="classamrex_1_1NFilesIter_1a071c4306e5a102244c1461684ab17cf5" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>FileNumbersWritten</name></member>
      <member refid="classamrex_1_1NFilesIter_1a7491b9b7bee6d89900b7948670ea6425" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>filePrefix</name></member>
      <member refid="classamrex_1_1NFilesIter_1a5aaa489ed5f07c1d0111647857d2f72f" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>fileStream</name></member>
      <member refid="classamrex_1_1NFilesIter_1a85a53512b313a24369fca3a3a53dbdb9" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>finishedReading</name></member>
      <member refid="classamrex_1_1NFilesIter_1a7f0df2d517d11041df8498eedf986153" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>finishedWriting</name></member>
      <member refid="classamrex_1_1NFilesIter_1a153902641555fc709b3befb6a4c6e881" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>fullFileName</name></member>
      <member refid="classamrex_1_1NFilesIter_1a17a5f370eb055df9d62919d0bbf34f66" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>GetDynamic</name></member>
      <member refid="classamrex_1_1NFilesIter_1a3d957684f758d55f7060078a5f49b08f" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>GetMinDigits</name></member>
      <member refid="classamrex_1_1NFilesIter_1a201227cf338dfa1a032bc9018902204c" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>GetSparseFPP</name></member>
      <member refid="classamrex_1_1NFilesIter_1ae979bf2ecefe688126ee3f348ea609ce" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>groupSets</name></member>
      <member refid="classamrex_1_1NFilesIter_1abde8301fcb9fb91f30cb12abc376bbc1" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>indexUndefined</name></member>
      <member refid="classamrex_1_1NFilesIter_1a72265d22f478a8f599486c0dad93f7d7" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>io_buffer</name></member>
      <member refid="classamrex_1_1NFilesIter_1afcf233d4914d8cb31a987d6d3283ada4" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>isReading</name></member>
      <member refid="classamrex_1_1NFilesIter_1a9138f1bb7d077d7d1cd043715ecb7d74" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>LengthOfSet</name></member>
      <member refid="classamrex_1_1NFilesIter_1a0a8c15566295f7f51ea956a8abed24ed" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>minDigits</name></member>
      <member refid="classamrex_1_1NFilesIter_1a0ce6d467be8a3cc0a59bdf0a4a84c18a" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>myProc</name></member>
      <member refid="classamrex_1_1NFilesIter_1aecbccfacd424296243d4fb271f754258" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>myReadIndex</name></member>
      <member refid="classamrex_1_1NFilesIter_1ac8060f9d60b3f7dff21c1f8a826302d3" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>mySetPosition</name></member>
      <member refid="classamrex_1_1NFilesIter_1adbf2559963632d8d8e286065e081205c" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>mySparseFileNumber</name></member>
      <member refid="classamrex_1_1NFilesIter_1a50735b1e0f0c04d53e60371d210d50f2" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>NFilesIter</name></member>
      <member refid="classamrex_1_1NFilesIter_1a41bf610b1a4c7439a960fa7589c09f53" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>NFilesIter</name></member>
      <member refid="classamrex_1_1NFilesIter_1a6da73e54601733abbefb73b558441299" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>NFilesIter</name></member>
      <member refid="classamrex_1_1NFilesIter_1a9f952996fef2f589f9d82962ab7b4ff7" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>NFilesIter</name></member>
      <member refid="classamrex_1_1NFilesIter_1a18181e8b91ada22808e9ddf517b3c753" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>nOutFiles</name></member>
      <member refid="classamrex_1_1NFilesIter_1a78880a4ba0c24b3fe3ee88bc7a10e71b" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>nProcs</name></member>
      <member refid="classamrex_1_1NFilesIter_1af0eab0426caa91fff3a64bcea5192ba3" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>nSets</name></member>
      <member refid="classamrex_1_1NFilesIter_1a47cb9c9c13164881e7cd69a7fd7bf455" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>operator++</name></member>
      <member refid="classamrex_1_1NFilesIter_1a3c0bbbb50d35a9362c988549d3806f2b" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>operator=</name></member>
      <member refid="classamrex_1_1NFilesIter_1a391d14db5a565155805448e0168c1da5" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>operator=</name></member>
      <member refid="classamrex_1_1NFilesIter_1a5a0e5e8e0bd5503f9246b4d4c714a4a1" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>readRanks</name></member>
      <member refid="classamrex_1_1NFilesIter_1af4f8ba9c90ecfcea92b6426df76049af" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>ReadyToRead</name></member>
      <member refid="classamrex_1_1NFilesIter_1a6c012f15ef5b8e7438a88bc794766143" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>ReadyToWrite</name></member>
      <member refid="classamrex_1_1NFilesIter_1ae13a47d2ead798be8070c16227694412" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>remainingWriters</name></member>
      <member refid="classamrex_1_1NFilesIter_1a66c78163b811ad78cb91330d0100cc54" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>SeekPos</name></member>
      <member refid="classamrex_1_1NFilesIter_1afaabf4f7bbf8f45e425237a5116fffda" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>SetDynamic</name></member>
      <member refid="classamrex_1_1NFilesIter_1a1ba8e895b17fe1e7c39d318b1e1ed9f8" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>SetMinDigits</name></member>
      <member refid="classamrex_1_1NFilesIter_1a4502510b5b15f7e87226e43367e1923a" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>SetSparseFPP</name></member>
      <member refid="classamrex_1_1NFilesIter_1a3862f6ec68ebefd530ce66a3bd5e37b2" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>setZeroProcs</name></member>
      <member refid="classamrex_1_1NFilesIter_1a7ea5dbf41c762d6e8e90def0b878ea8d" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>sparseWritingRanks</name></member>
      <member refid="classamrex_1_1NFilesIter_1aa46825b65b950336cbbdf7fdad5bd4d0" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>stReadTag</name></member>
      <member refid="classamrex_1_1NFilesIter_1a4c71f8cab2ada9d8f54d800d0b7abc65" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>Stream</name></member>
      <member refid="classamrex_1_1NFilesIter_1ae9224fba010f5b9f9b337f1e1ebdbbec" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>stWriteTag</name></member>
      <member refid="classamrex_1_1NFilesIter_1a8ac006de5caf3cfd0e6456dd6c3b3f2a" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>unreadMessages</name></member>
      <member refid="classamrex_1_1NFilesIter_1a97ff46c50d110eeeacfcb90f5c001bd0" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>useSparseFPP</name></member>
      <member refid="classamrex_1_1NFilesIter_1ab85302b89ef7c47f7213adc1c25e7fbe" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>useStaticSetSelection</name></member>
      <member refid="classamrex_1_1NFilesIter_1af7dd1b0a5336926700c382a1af0ab5de" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>WhichSetPosition</name></member>
      <member refid="classamrex_1_1NFilesIter_1a85f34f8f85d278c2a003b7861afc62c0" prot="private" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>writeTag</name></member>
      <member refid="classamrex_1_1NFilesIter_1a4f9a9917a9842e888fbdf9d45f5de52e" prot="public" virt="non-virtual"><scope>amrex::NFilesIter</scope><name>~NFilesIter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
