<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="AMReX__NonLocalBC_8H" kind="file" language="C++">
    <compoundname>AMReX_NonLocalBC.H</compoundname>
    <includes local="no">AMReX_Config.H</includes>
    <includes refid="AMReX__TypeTraits_8H" local="no">AMReX_TypeTraits.H</includes>
    <includes refid="AMReX__FabArray_8H" local="no">AMReX_FabArray.H</includes>
    <includes refid="AMReX__NonLocalBCImpl_8H" local="no">AMReX_NonLocalBCImpl.H</includes>
    <includedby refid="AMReX__FabArrayBase_8cpp" local="no">/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.cpp</includedby>
    <includedby refid="AMReX__NonLocalBC_8cpp" local="yes">/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.cpp</includedby>
    <includedby refid="AMReX__NonLocalBCImpl_8H" local="yes">/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBCImpl.H</includedby>
    <incdepgraph>
      <node id="131">
        <label>atomic</label>
      </node>
      <node id="86">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>AMReX_GpuKernelInfo.H</label>
        <link refid="AMReX__GpuKernelInfo_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>AMReX_OpenMP.H</label>
        <link refid="AMReX__OpenMP_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>AMReX_FBI.H</label>
        <link refid="AMReX__FBI_8H"/>
      </node>
      <node id="60">
        <label>iomanip</label>
      </node>
      <node id="33">
        <label>functional</label>
      </node>
      <node id="9">
        <label>limits</label>
      </node>
      <node id="65">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="123">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>iterator</label>
      </node>
      <node id="29">
        <label>float.h</label>
      </node>
      <node id="109">
        <label>AMReX_GpuLaunchFunctsG.H</label>
        <link refid="AMReX__GpuLaunchFunctsG_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>cstdint</label>
      </node>
      <node id="74">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>AMReX_GpuAllocators.H</label>
        <link refid="AMReX__GpuAllocators_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>cuda_runtime.h</label>
      </node>
      <node id="39">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>cmath</label>
      </node>
      <node id="22">
        <label>cassert</label>
      </node>
      <node id="28">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>stdexcept</label>
      </node>
      <node id="23">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>numeric</label>
      </node>
      <node id="137">
        <label>AMReX_NonLocalBCImpl.H</label>
        <link refid="AMReX__NonLocalBCImpl_8H"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>string</label>
      </node>
      <node id="92">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>map</label>
      </node>
      <node id="128">
        <label>unordered_set</label>
      </node>
      <node id="70">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>cfloat</label>
      </node>
      <node id="42">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>fstream</label>
      </node>
      <node id="55">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>driver_types.h</label>
      </node>
      <node id="97">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>AMReX_GpuBuffer.H</label>
        <link refid="AMReX__GpuBuffer_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.H</label>
        <link refid="AMReX__NonLocalBC_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>AMReX_RandomEngine.H</label>
        <link refid="AMReX__RandomEngine_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>sys/types.h</label>
      </node>
      <node id="112">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>typeinfo</label>
      </node>
      <node id="19">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>AMReX_Config.H</label>
      </node>
      <node id="20">
        <label>cstdio</label>
      </node>
      <node id="136">
        <label>AMReX_PCI.H</label>
        <link refid="AMReX__PCI_8H"/>
      </node>
      <node id="105">
        <label>tuple</label>
      </node>
      <node id="71">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>AMReX_GpuLaunchGlobal.H</label>
        <link refid="AMReX__GpuLaunchGlobal_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>stack</label>
      </node>
      <node id="12">
        <label>vector</label>
      </node>
      <node id="107">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>utility</label>
      </node>
      <node id="44">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>array</label>
      </node>
      <node id="113">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>sstream</label>
      </node>
      <node id="117">
        <label>AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>AMReX_GpuLaunchMacrosG.H</label>
        <link refid="AMReX__GpuLaunchMacrosG_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>iosfwd</label>
      </node>
      <node id="32">
        <label>cstdlib</label>
      </node>
      <node id="69">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="35">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>cstddef</label>
      </node>
      <node id="102">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>unordered_map</label>
      </node>
      <node id="103">
        <label>cuda.h</label>
      </node>
      <node id="48">
        <label>climits</label>
      </node>
      <node id="47">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>mutex</label>
      </node>
      <node id="119">
        <label>AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>chrono</label>
      </node>
      <node id="68">
        <label>csignal</label>
      </node>
      <node id="57">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>AMReX_GpuFuse.H</label>
        <link refid="AMReX__GpuFuse_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>type_traits</label>
      </node>
      <node id="14">
        <label>set</label>
      </node>
      <node id="73">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>algorithm</label>
      </node>
      <node id="6">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>AMReX_FileSystem.H</label>
        <link refid="AMReX__FileSystem_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>curand.h</label>
      </node>
      <node id="133">
        <label>AMReX_BaseFabUtility.H</label>
        <link refid="AMReX__BaseFabUtility_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cstring</label>
      </node>
      <node id="121">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>memory</label>
      </node>
      <node id="111">
        <label>initializer_list</label>
      </node>
      <node id="27">
        <label>inttypes.h</label>
      </node>
      <node id="3">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>curand_kernel.h</label>
      </node>
      <node id="129">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBCImpl.H</label>
        <link refid="AMReX__NonLocalBCImpl_8H"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.H</label>
        <link refid="AMReX__NonLocalBC_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.cpp</label>
        <link refid="AMReX__NonLocalBC_8cpp"/>
      </node>
      <node id="2">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.cpp</label>
        <link refid="AMReX__FabArrayBase_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1HasInverseMemFn" prot="public">amrex::NonLocalBC::HasInverseMemFn</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1IsIndexMapping" prot="public">amrex::NonLocalBC::IsIndexMapping</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping" prot="public">amrex::NonLocalBC::MultiBlockIndexMapping</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData" prot="public">amrex::NonLocalBC::MultiBlockCommMetaData</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1IsFabProjection" prot="public">amrex::NonLocalBC::IsFabProjection</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1Identity" prot="public">amrex::NonLocalBC::Identity</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1MapComponents" prot="public">amrex::NonLocalBC::MapComponents</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1SwapComponents" prot="public">amrex::NonLocalBC::SwapComponents</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1SwapComponents_3_01I_00_01-1_01_4" prot="public">amrex::NonLocalBC::SwapComponents&lt; I, -1 &gt;</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1SwapComponents_3-1_00_01J_01_4" prot="public">amrex::NonLocalBC::SwapComponents&lt;-1, J &gt;</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1SwapComponents_3-1_00_01-1_01_4" prot="public">amrex::NonLocalBC::SwapComponents&lt;-1, -1 &gt;</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1CommData" prot="public">amrex::NonLocalBC::CommData</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1CommHandler" prot="public">amrex::NonLocalBC::CommHandler</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1IsDataPacking" prot="public">amrex::NonLocalBC::IsDataPacking</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1PackComponents" prot="public">amrex::NonLocalBC::PackComponents</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1ApplyDtosAndProjectionOnReciever" prot="public">amrex::NonLocalBC::ApplyDtosAndProjectionOnReciever</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1NoLocalCopy" prot="public">amrex::NonLocalBC::NoLocalCopy</innerclass>
    <innerclass refid="structamrex_1_1NonLocalBC_1_1DoLocalCopy" prot="public">amrex::NonLocalBC::DoLocalCopy</innerclass>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1NonLocalBC">amrex::NonLocalBC</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_NONLOCAL_BC_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_NONLOCAL_BC_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_Config.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__TypeTraits_8H" kindref="compound">AMReX_TypeTraits.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__FabArray_8H" kindref="compound">AMReX_FabArray.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">NonLocalBC<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[concept.IndexMapping]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="15" refid="namespaceamrex_1_1NonLocalBC_1a165fdced073fa98b961fd6aaceb213d5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a165fdced073fa98b961fd6aaceb213d5" kindref="member">Inverse_t</ref><sp/>=<sp/>decltype(std::declval&lt;T&gt;().Inverse(std::declval&lt;Args&gt;()...));</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="19" refid="structamrex_1_1NonLocalBC_1_1HasInverseMemFn" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1NonLocalBC_1_1HasInverseMemFn" kindref="compound">HasInverseMemFn</ref><sp/>:<sp/><ref refid="namespaceamrex_1afcea7cdc6e03361f56c401b56d66a870" kindref="member">IsDetectedExact</ref>&lt;Dim3,<sp/>Inverse_t,<sp/>T,<sp/>Dim3&gt;<sp/>{};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>IndexMap&gt;</highlight></codeline>
<codeline lineno="24" refid="structamrex_1_1NonLocalBC_1_1IsIndexMapping" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1NonLocalBC_1_1IsIndexMapping" kindref="compound">IsIndexMapping</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1Conjunction" kindref="compound">Conjunction</ref>&lt;IsCallableR&lt;Dim3,<sp/>IndexMap&amp;,<sp/>const<sp/>Dim3&amp;&gt;,<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HasInverseMemFn&lt;const<sp/>IndexMap&amp;&gt;&gt;<sp/>{};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[IndexMapping.MultiBlockIndexMapping]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping" kindref="compound">MultiBlockIndexMapping</ref><sp/>{</highlight></codeline>
<codeline lineno="38" refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a874f4d4d95984b6d53a10e76a5a7d27a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/><ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a874f4d4d95984b6d53a10e76a5a7d27a" kindref="member">permutation</ref>{<ref refid="AMReX__SPACE_8H_1af5ea8082b66e48cdbea53d08cdfca9a0" kindref="member">AMREX_D_DECL</ref>(0,<sp/>1,<sp/>2)};</highlight></codeline>
<codeline lineno="40" refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a57d71866cb674a85f1cc645bfdc0bd06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/><ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a57d71866cb674a85f1cc645bfdc0bd06" kindref="member">offset</ref>{<ref refid="AMReX__SPACE_8H_1af5ea8082b66e48cdbea53d08cdfca9a0" kindref="member">AMREX_D_DECL</ref>(0,<sp/>0,<sp/>0)};</highlight></codeline>
<codeline lineno="42" refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a3a8fe25b0375f175a86024aef70cd49b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/><ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a3a8fe25b0375f175a86024aef70cd49b" kindref="member">sign</ref>{<ref refid="AMReX__SPACE_8H_1af5ea8082b66e48cdbea53d08cdfca9a0" kindref="member">AMREX_D_DECL</ref>(1,<sp/>1,<sp/>1)};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a73c39a5e51dab2870165da88688306d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="structamrex_1_1Dim3" kindref="compound">Dim3</ref><sp/><ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a73c39a5e51dab2870165da88688306d7" kindref="member">operator()</ref>(<ref refid="structamrex_1_1Dim3" kindref="compound">Dim3</ref><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iv[3]{i.<ref refid="structamrex_1_1Dim3_1a090510e5e79fd6c75d96c906cd9250e1" kindref="member">x</ref>,<sp/>i.y,<sp/>i.z};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iv_new[3]{};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++d)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iv_new[d]<sp/>=<sp/><ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a3a8fe25b0375f175a86024aef70cd49b" kindref="member">sign</ref>[d]<sp/>*<sp/>(iv[<ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a874f4d4d95984b6d53a10e76a5a7d27a" kindref="member">permutation</ref>[d]]<sp/>-<sp/><ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a57d71866cb674a85f1cc645bfdc0bd06" kindref="member">offset</ref>[d]);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{iv_new[0],<sp/>iv_new[1],<sp/>iv_new[2]};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1af8970386ed97a77fdb26348c6ae02871" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="structamrex_1_1Dim3" kindref="compound">Dim3</ref><sp/><ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1af8970386ed97a77fdb26348c6ae02871" kindref="member">Inverse</ref>(<ref refid="structamrex_1_1Dim3" kindref="compound">Dim3</ref><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iv_new[3]{i.<ref refid="structamrex_1_1Dim3_1a090510e5e79fd6c75d96c906cd9250e1" kindref="member">x</ref>,<sp/>i.y,<sp/>i.z};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iv[3]{};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++d)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(<ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a3a8fe25b0375f175a86024aef70cd49b" kindref="member">sign</ref>[d]<sp/>==<sp/>1<sp/>||<sp/><ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a3a8fe25b0375f175a86024aef70cd49b" kindref="member">sign</ref>[d]<sp/>==<sp/>-1);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iv[<ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a874f4d4d95984b6d53a10e76a5a7d27a" kindref="member">permutation</ref>[d]]<sp/>=<sp/>iv_new[d]<sp/>*<sp/><ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a3a8fe25b0375f175a86024aef70cd49b" kindref="member">sign</ref>[d]<sp/>+<sp/><ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a57d71866cb674a85f1cc645bfdc0bd06" kindref="member">offset</ref>[d];</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{iv[0],<sp/>iv[1],<sp/>iv[2]};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a2b43db01447bc941d865e495da9c568f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref><sp/><ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a2b43db01447bc941d865e495da9c568f" kindref="member">operator()</ref>(<ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref><sp/>it)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref>{<ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>{<ref refid="AMReX__SPACE_8H_1af5ea8082b66e48cdbea53d08cdfca9a0" kindref="member">AMREX_D_DECL</ref>(it[<ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a874f4d4d95984b6d53a10e76a5a7d27a" kindref="member">permutation</ref>[0]],<sp/>it[<ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a874f4d4d95984b6d53a10e76a5a7d27a" kindref="member">permutation</ref>[1]],<sp/>it[<ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a874f4d4d95984b6d53a10e76a5a7d27a" kindref="member">permutation</ref>[2]])}};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a952e8acf8b0d5176442546ca16c789ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref><sp/><ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a952e8acf8b0d5176442546ca16c789ee" kindref="member">Inverse</ref>(<ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref><sp/>it)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>inverse_permutation;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inverse_permutation[<ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockIndexMapping_1a874f4d4d95984b6d53a10e76a5a7d27a" kindref="member">permutation</ref>[i]]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref>{<ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>{<ref refid="AMReX__SPACE_8H_1af5ea8082b66e48cdbea53d08cdfca9a0" kindref="member">AMREX_D_DECL</ref>(it[inverse_permutation[0]],<sp/>it[inverse_permutation[1]],<sp/>it[inverse_permutation[2]])}};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DTOS&gt;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">EnableIf_t&lt;IsCallableR&lt;Dim3, DTOS, Dim3&gt;::value</ref>,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&gt;<sp/></highlight></codeline>
<codeline lineno="101" refid="namespaceamrex_1_1NonLocalBC_1a19f8c76ecd9518c09232b2e9b0264f9b" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1a19f8c76ecd9518c09232b2e9b0264f9b" kindref="member">Apply</ref>(DTOS<sp/>dtos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>iv)<sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Dim3" kindref="compound">Dim3</ref><sp/>i<sp/>=<sp/>dtos(iv.<ref refid="classamrex_1_1IntVect_1ab58021983f7ea091fa42717851af0a3a" kindref="member">dim3</ref>());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>{<ref refid="AMReX__SPACE_8H_1af5ea8082b66e48cdbea53d08cdfca9a0" kindref="member">AMREX_D_DECL</ref>(i.<ref refid="structamrex_1_1Dim3_1a090510e5e79fd6c75d96c906cd9250e1" kindref="member">x</ref>,<sp/>i.<ref refid="structamrex_1_1Dim3_1a5b607ff8424cba649fe2c3c19f34714b" kindref="member">y</ref>,<sp/>i.<ref refid="structamrex_1_1Dim3_1a301b8be615c36e302d8510be17c63e90" kindref="member">z</ref>)};</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DTOS&gt;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">EnableIf_t&lt;IsCallableR&lt;Dim3, DTOS, Dim3&gt;::value</ref><sp/>&amp;&amp;<sp/>!<ref refid="structamrex_1_1IsCallableR" kindref="compound">IsCallableR&lt;IndexType, DTOS, IndexType&gt;::value</ref>,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&gt;<sp/></highlight></codeline>
<codeline lineno="117" refid="namespaceamrex_1_1NonLocalBC_1aab736652cc2b4ffab3b978b140c8719a" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1aab736652cc2b4ffab3b978b140c8719a" kindref="member">Image</ref>(DTOS<sp/>dtos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>box)<sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>mapped_smallEnd<sp/>=<sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a19f8c76ecd9518c09232b2e9b0264f9b" kindref="member">Apply</ref>(dtos,<sp/>box.<ref refid="classamrex_1_1Box_1a500e159391a7508f43c2595e9eb3c7b0" kindref="member">smallEnd</ref>());</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>mapped_bigEnd<sp/>=<sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a19f8c76ecd9518c09232b2e9b0264f9b" kindref="member">Apply</ref>(dtos,<sp/>box.<ref refid="classamrex_1_1Box_1a5189ec92f8ca7c53818603447974750f" kindref="member">bigEnd</ref>());</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>smallEnd;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>bigEnd;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>AMREX_SPACEDIM;<sp/>++d)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smallEnd[d]<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(mapped_smallEnd[d],<sp/>mapped_bigEnd[d]);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bigEnd[d]<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(mapped_smallEnd[d],<sp/>mapped_bigEnd[d]);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>{smallEnd,<sp/>bigEnd,<sp/>box.<ref refid="classamrex_1_1Box_1a23dbfc6bba6b19b28a0d893bb760494c" kindref="member">ixType</ref>()};</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DTOS&gt;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">EnableIf_t&lt;IsCallableR&lt;Dim3, DTOS, Dim3&gt;::value</ref><sp/>&amp;&amp;<sp/><ref refid="structamrex_1_1IsCallableR" kindref="compound">IsCallableR&lt;IndexType, DTOS, IndexType&gt;::value</ref>,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&gt;<sp/></highlight></codeline>
<codeline lineno="140" refid="namespaceamrex_1_1NonLocalBC_1ad6a248d8548045b7011916ea21890355" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1aab736652cc2b4ffab3b978b140c8719a" kindref="member">Image</ref>(DTOS<sp/>dtos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>box)<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;Forget&quot;<sp/>the<sp/>index<sp/>type<sp/>mapping<sp/>and<sp/>invoke<sp/>Image<sp/>without<sp/>changing<sp/>the<sp/>index<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>srcbox<sp/>=<sp/><ref refid="namespaceamrex_1_1NonLocalBC_1aab736652cc2b4ffab3b978b140c8719a" kindref="member">Image</ref>([&amp;dtos](<ref refid="structamrex_1_1Dim3" kindref="compound">Dim3</ref><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dtos(i);<sp/>},<sp/>box);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fix<sp/>the<sp/>index<sp/>type<sp/>of<sp/>the<sp/>resulting<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>srcbox.<ref refid="classamrex_1_1Box_1a498ed0e94f9ce975f45018cdb770b5de" kindref="member">setType</ref>(dtos(box.<ref refid="classamrex_1_1Box_1a23dbfc6bba6b19b28a0d893bb760494c" kindref="member">ixType</ref>()));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>srcbox;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DTOS&gt;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">EnableIf_t&lt;HasInverseMemFn&lt;DTOS&gt;::value</ref>,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&gt;<sp/></highlight></codeline>
<codeline lineno="162" refid="namespaceamrex_1_1NonLocalBC_1afbab6be143546f7e2b0ade819eb9fe85" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1afbab6be143546f7e2b0ade819eb9fe85" kindref="member">ApplyInverse</ref>(DTOS<sp/>dtos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>iv)<sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a19f8c76ecd9518c09232b2e9b0264f9b" kindref="member">Apply</ref>([&amp;dtos](<ref refid="structamrex_1_1Dim3" kindref="compound">Dim3</ref><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dtos.Inverse(i);<sp/>},<sp/>iv);</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DTOS&gt;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">EnableIf_t&lt;HasInverseMemFn&lt;DTOS&gt;::value</ref><sp/>&amp;&amp;<sp/>!<ref refid="structamrex_1_1IsCallableR" kindref="compound">IsCallableR&lt;IndexType, DTOS, IndexType&gt;::value</ref>,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&gt;<sp/></highlight></codeline>
<codeline lineno="177" refid="namespaceamrex_1_1NonLocalBC_1a004c09f131c82ecf7250eafe92f970b4" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1a004c09f131c82ecf7250eafe92f970b4" kindref="member">InverseImage</ref>(DTOS<sp/>dtos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>box)<sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1aab736652cc2b4ffab3b978b140c8719a" kindref="member">Image</ref>([&amp;dtos](<ref refid="structamrex_1_1Dim3" kindref="compound">Dim3</ref><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dtos.Inverse(i);<sp/>},<sp/>box);</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DTOS&gt;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">EnableIf_t&lt;HasInverseMemFn&lt;DTOS&gt;::value</ref><sp/>&amp;&amp;<sp/><ref refid="structamrex_1_1IsCallableR" kindref="compound">IsCallableR&lt;IndexType, DTOS, IndexType&gt;::value</ref>,<sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&gt;<sp/></highlight></codeline>
<codeline lineno="192" refid="namespaceamrex_1_1NonLocalBC_1acd492cf556ac73f2a7274aef054b9231" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1a004c09f131c82ecf7250eafe92f970b4" kindref="member">InverseImage</ref>(DTOS<sp/>dtos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>box)<sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1aab736652cc2b4ffab3b978b140c8719a" kindref="member">Image</ref>([&amp;dtos](</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dtos.Inverse(i);<sp/>},<sp/>box);</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal">static_assert(IsIndexMapping&lt;MultiBlockIndexMapping&gt;(),</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MultiBlockIndexMapping<sp/>is<sp/>expected<sp/>to<sp/>satisfy<sp/>IndexMapping&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[class.MultiBlockCommMetaData]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData" kindref="compound">MultiBlockCommMetaData</ref><sp/>:<sp/><ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData" kindref="compound">FabArrayBase::CommMetaData</ref><sp/>{</highlight></codeline>
<codeline lineno="211"></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DTOS,<sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">EnableIf_t&lt;IsIndexMapping&lt;DTOS&gt;::value</ref>&gt;&gt;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData_1a6ea96cd111bb2309d963623079b2c870" kindref="member">MultiBlockCommMetaData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArrayBase" kindref="compound">FabArrayBase</ref>&amp;<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>dstbox,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArrayBase" kindref="compound">FabArrayBase</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>ngrow,<sp/>DTOS<sp/>dtos);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DTOS,<sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">EnableIf_t&lt;IsIndexMapping&lt;DTOS&gt;::value</ref>&gt;&gt;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData_1a6ea96cd111bb2309d963623079b2c870" kindref="member">MultiBlockCommMetaData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref>&amp;<sp/>dstba,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref>&amp;<sp/>dstdm,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>dstbox,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref>&amp;<sp/>srcba,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref>&amp;<sp/>srcdm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>ngrow,<sp/>DTOS<sp/>dtos);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DTOS&gt;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">EnableIf_t&lt;IsIndexMapping&lt;DTOS&gt;::value</ref>&gt;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData_1aa52e9990224c689ba127f5eb3a79c08d" kindref="member">define</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref>&amp;<sp/>dstba,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref>&amp;<sp/>dstdm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>dstbox,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref>&amp;<sp/>srcba,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref>&amp;<sp/>srcdm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>ngrow,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DTOS<sp/>dtos);</highlight></codeline>
<codeline lineno="260"><highlight class="normal">};</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[concept.FabProjection]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB&gt;</highlight></codeline>
<codeline lineno="268" refid="structamrex_1_1NonLocalBC_1_1IsFabProjection" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1NonLocalBC_1_1IsFabProjection" kindref="compound">IsFabProjection</ref></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1IsCallableR" kindref="compound">IsCallableR</ref>&lt;typename<sp/>FAB::value_type,<sp/>P,<sp/>Array4&lt;const<sp/>typename<sp/>FAB::value_type&gt;,<sp/>Dim3,<sp/>int&gt;<sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal">{};</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[FabProjection.Identity]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[IndexMapping.Identity]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="structamrex_1_1NonLocalBC_1_1Identity" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1NonLocalBC_1_1Identity" kindref="compound">Identity</ref><sp/><sp/>{</highlight></codeline>
<codeline lineno="281" refid="structamrex_1_1NonLocalBC_1_1Identity_1a0a03a9cf27f2ed969f918c7946e68659" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structamrex_1_1Dim3" kindref="compound">Dim3</ref><sp/><ref refid="structamrex_1_1NonLocalBC_1_1Identity_1a0a03a9cf27f2ed969f918c7946e68659" kindref="member">operator()</ref>(<ref refid="structamrex_1_1Dim3" kindref="compound">Dim3</ref><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;<sp/>}</highlight></codeline>
<codeline lineno="283" refid="structamrex_1_1NonLocalBC_1_1Identity_1ae1ac0e6d45d64ff668824d1b1180900a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structamrex_1_1Dim3" kindref="compound">Dim3</ref><sp/><ref refid="structamrex_1_1NonLocalBC_1_1Identity_1ae1ac0e6d45d64ff668824d1b1180900a" kindref="member">Inverse</ref>(<ref refid="structamrex_1_1Dim3" kindref="compound">Dim3</ref><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;<sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="287" refid="structamrex_1_1NonLocalBC_1_1Identity_1a2be194ea3baaf9a996c82b946bf54803" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>T<sp/><ref refid="structamrex_1_1NonLocalBC_1_1Identity_1a2be194ea3baaf9a996c82b946bf54803" kindref="member">operator()</ref>(<ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;const T&gt;</ref><sp/>array,<sp/><ref refid="structamrex_1_1Dim3" kindref="compound">Dim3</ref><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp<sp/>=<sp/>0)<sp/>const</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept(noexcept(array(i.x,<sp/>i.y,<sp/>i.z,<sp/>comp)))<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>array(i.<ref refid="structamrex_1_1Dim3_1a090510e5e79fd6c75d96c906cd9250e1" kindref="member">x</ref>,<sp/>i.<ref refid="structamrex_1_1Dim3_1a5b607ff8424cba649fe2c3c19f34714b" kindref="member">y</ref>,<sp/>i.<ref refid="structamrex_1_1Dim3_1a301b8be615c36e302d8510be17c63e90" kindref="member">z</ref>,<sp/>comp);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="structamrex_1_1NonLocalBC_1_1Identity_1a3319c4ea6b55bcbf4790af653e33257a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1Identity_1a3319c4ea6b55bcbf4790af653e33257a" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;<sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal">};</highlight></codeline>
<codeline lineno="295" refid="namespaceamrex_1_1NonLocalBC_1abb7cd050d6dd1aef7603048eeccd7ded" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="structamrex_1_1NonLocalBC_1_1Identity" kindref="compound">Identity</ref><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1abb7cd050d6dd1aef7603048eeccd7ded" kindref="member">identity</ref>{};</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal">static_assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Identity)<sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="298"><highlight class="normal">static_assert(std::is_trivially_default_constructible&lt;Identity&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal">static_assert(std::is_trivially_copy_assignable&lt;Identity&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal">static_assert(std::is_trivially_copy_constructible&lt;Identity&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal">static_assert(IsIndexMapping&lt;Identity&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="302"><highlight class="normal">static_assert(IsFabProjection&lt;Identity,<sp/>FArrayBox&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[FabProjection.MapComponents]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="structamrex_1_1NonLocalBC_1_1MapComponents" refkind="compound"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Map<sp/>=<sp/>Identity&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1NonLocalBC_1_1MapComponents" kindref="compound">MapComponents</ref><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(<ref refid="structamrex_1_1IsCallable" kindref="compound">IsCallable</ref>&lt;Base,<sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;const Real&gt;</ref>,<sp/><ref refid="structamrex_1_1Dim3" kindref="compound">Dim3</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;::value,</highlight></codeline>
<codeline lineno="315" refid="structamrex_1_1NonLocalBC_1_1MapComponents_1aed142392f1b6e4cf889fcf4720c3bf40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Base<sp/>needs<sp/>to<sp/>be<sp/>a<sp/>callable<sp/>function:<sp/>(Array4&lt;const<sp/>T&gt;,<sp/>Dim3,<sp/>i)<sp/>-&gt;<sp/>auto.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(<ref refid="structamrex_1_1IsCallableR" kindref="compound">IsCallableR&lt;int, Map, int&gt;::value</ref>,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Map<sp/>needs<sp/>to<sp/>be<sp/>a<sp/>callable<sp/>function:<sp/>int<sp/>-&gt;<sp/>int.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a4239dc930ea8f47a20ebf1aca31dc602" kindref="member">AMREX_NO_UNIQUE_ADDRESS</ref><sp/>Base<sp/><ref refid="structamrex_1_1NonLocalBC_1_1MapComponents_1aed142392f1b6e4cf889fcf4720c3bf40" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="321" refid="structamrex_1_1NonLocalBC_1_1MapComponents_1acb1857bad9016fbe91bf815b485dddf7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a4239dc930ea8f47a20ebf1aca31dc602" kindref="member">AMREX_NO_UNIQUE_ADDRESS</ref><sp/>Map<sp/><ref refid="structamrex_1_1NonLocalBC_1_1MapComponents_1acb1857bad9016fbe91bf815b485dddf7" kindref="member">map</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">EnableIf_t&lt;IsCallable&lt;Base, Array4&lt;const T&gt;</ref>,<sp/><ref refid="structamrex_1_1Dim3" kindref="compound">Dim3</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;::value&gt;,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">EnableIf_t&lt;IsCallableR&lt;int, Map, int&gt;::value</ref>&gt;&gt;</highlight></codeline>
<codeline lineno="326" refid="structamrex_1_1NonLocalBC_1_1MapComponents_1a368643b0ca2dfd8221c8ce8252b2fc4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>decltype(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/>operator()(<ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt;const<sp/>T&gt;<sp/>array,<sp/><ref refid="structamrex_1_1Dim3" kindref="compound">Dim3</ref><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp)<sp/>const</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noexcept(noexcept(<ref refid="structamrex_1_1NonLocalBC_1_1MapComponents_1aed142392f1b6e4cf889fcf4720c3bf40" kindref="member">base</ref>(array,<sp/>i,<sp/><ref refid="structamrex_1_1NonLocalBC_1_1MapComponents_1acb1857bad9016fbe91bf815b485dddf7" kindref="member">map</ref>(comp))))<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1MapComponents_1aed142392f1b6e4cf889fcf4720c3bf40" kindref="member">base</ref>(array,<sp/>i,<sp/><ref refid="structamrex_1_1NonLocalBC_1_1MapComponents_1acb1857bad9016fbe91bf815b485dddf7" kindref="member">map</ref>(comp));</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal">};</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_HAS_NO_UNIQUE_ADDRESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal">static_assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MapComponents&lt;Identity,<sp/>Identity&gt;)<sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal">static_assert(std::is_trivially_copy_assignable&lt;MapComponents&lt;Identity&gt;&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="336"><highlight class="normal">static_assert(std::is_trivially_copy_constructible&lt;MapComponents&lt;Identity&gt;&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal">static_assert(IsFabProjection&lt;MapComponents&lt;Identity&gt;,<sp/><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref>&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[FabProjection.MapComponents.SwapComponents]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="structamrex_1_1NonLocalBC_1_1SwapComponents" refkind="compound"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>J&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1NonLocalBC_1_1SwapComponents" kindref="compound">SwapComponents</ref><sp/>{<sp/></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(I<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>J<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;I<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>J<sp/>&gt;=<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="structamrex_1_1NonLocalBC_1_1SwapComponents_1a3e790daff54f3ef4a93edc593eba1a58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1SwapComponents_1a3e790daff54f3ef4a93edc593eba1a58" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>map[2]<sp/>=<sp/>{I,<sp/>J};</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i<sp/>==<sp/>I<sp/>||<sp/>i<sp/>==<sp/>J<sp/>?<sp/>map[std::size_t(i<sp/>==<sp/>I)]<sp/>:<sp/>i;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal">};</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="structamrex_1_1NonLocalBC_1_1SwapComponents_3_01I_00_01-1_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1NonLocalBC_1_1SwapComponents" kindref="compound">SwapComponents</ref>&lt;I,<sp/>-1&gt;<sp/>{</highlight></codeline>
<codeline lineno="360" refid="structamrex_1_1NonLocalBC_1_1SwapComponents_3_01I_00_01-1_01_4_1ab372b7b522321fc1945703f182df8e33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(I<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;I<sp/>&gt;=<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1SwapComponents_3_01I_00_01-1_01_4_1ab372b7b522321fc1945703f182df8e33" kindref="member">J</ref>;</highlight></codeline>
<codeline lineno="363" refid="structamrex_1_1NonLocalBC_1_1SwapComponents_3_01I_00_01-1_01_4_1ad93f4a373b80177a48be382269f0830b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1SwapComponents_3_01I_00_01-1_01_4_1ad93f4a373b80177a48be382269f0830b" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>map[2]<sp/>=<sp/>{I,<sp/>J};</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i<sp/>==<sp/>I<sp/>||<sp/>i<sp/>==<sp/>J<sp/>?<sp/>map[std::size_t(i<sp/>==<sp/>I)]<sp/>:<sp/>i;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal">};</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="structamrex_1_1NonLocalBC_1_1SwapComponents_3-1_00_01J_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>J&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1NonLocalBC_1_1SwapComponents" kindref="compound">SwapComponents</ref>&lt;-1,<sp/>J&gt;<sp/>{</highlight></codeline>
<codeline lineno="370" refid="structamrex_1_1NonLocalBC_1_1SwapComponents_3-1_00_01J_01_4_1af0de73dc01cde0d016257305cd549250" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(J<sp/>&gt;=<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;J<sp/>&gt;=<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1SwapComponents_3-1_00_01J_01_4_1af0de73dc01cde0d016257305cd549250" kindref="member">I</ref>;</highlight></codeline>
<codeline lineno="373" refid="structamrex_1_1NonLocalBC_1_1SwapComponents_3-1_00_01J_01_4_1aa952c0160cc709f5bf2dc7183c9b25b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1SwapComponents_3-1_00_01J_01_4_1aa952c0160cc709f5bf2dc7183c9b25b5" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>map[2]<sp/>=<sp/>{I,<sp/>J};</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i<sp/>==<sp/>I<sp/>||<sp/>i<sp/>==<sp/>J<sp/>?<sp/>map[std::size_t(i<sp/>==<sp/>I)]<sp/>:<sp/>i;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal">};</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="structamrex_1_1NonLocalBC_1_1SwapComponents_3-1_00_01-1_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1NonLocalBC_1_1SwapComponents" kindref="compound">SwapComponents</ref>&lt;-1,<sp/>-1&gt;<sp/>{</highlight></codeline>
<codeline lineno="380" refid="structamrex_1_1NonLocalBC_1_1SwapComponents_3-1_00_01-1_01_4_1ad0e0feaecbe43eaccf9c81d204c0b8e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1SwapComponents_3-1_00_01-1_01_4_1ad0e0feaecbe43eaccf9c81d204c0b8e2" kindref="member">I</ref>;</highlight></codeline>
<codeline lineno="381" refid="structamrex_1_1NonLocalBC_1_1SwapComponents_3-1_00_01-1_01_4_1a370d78d6eb6099b588674027f5da6c10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1SwapComponents_3-1_00_01-1_01_4_1a370d78d6eb6099b588674027f5da6c10" kindref="member">J</ref>;</highlight></codeline>
<codeline lineno="382" refid="structamrex_1_1NonLocalBC_1_1SwapComponents_3-1_00_01-1_01_4_1af48ff04f7ea7849aee3b597e21c1ffc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1SwapComponents_3-1_00_01-1_01_4_1af48ff04f7ea7849aee3b597e21c1ffc8" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>map[2]<sp/>=<sp/>{I,<sp/>J};</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i<sp/>==<sp/>I<sp/>||<sp/>i<sp/>==<sp/>J<sp/>?<sp/>map[std::size_t(i<sp/>==<sp/>I)]<sp/>:<sp/>i;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal">};</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388" refid="namespaceamrex_1_1NonLocalBC_1adc23e3a1b040b4f68b4429a2a40e00d6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1SwapComponents_3-1_00_01-1_01_4" kindref="compound">DynamicSwapComponents</ref><sp/>=<sp/><ref refid="structamrex_1_1NonLocalBC_1_1SwapComponents" kindref="compound">SwapComponents</ref>&lt;-1,<sp/>-1&gt;;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="namespaceamrex_1_1NonLocalBC_1a618f8d1f0b1258ad4931eb6a5ae65ebc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>J&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="structamrex_1_1NonLocalBC_1_1SwapComponents" kindref="compound">SwapComponents&lt;I, J&gt;</ref><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a618f8d1f0b1258ad4931eb6a5ae65ebc" kindref="member">swap_indices</ref>{};</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal">static_assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SwapComponents&lt;0,<sp/>1&gt;)<sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="393"><highlight class="normal">static_assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespaceamrex_1_1NonLocalBC_1adc23e3a1b040b4f68b4429a2a40e00d6" kindref="member">DynamicSwapComponents</ref>)<sp/>==<sp/>2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="394"><highlight class="normal">static_assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SwapComponents&lt;0,<sp/>-1&gt;)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="395"><highlight class="normal">static_assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SwapComponents&lt;-1,<sp/>1&gt;)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_HAS_NO_UNIQUE_ADDRESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal">static_assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MapComponents&lt;Identity,<sp/>SwapComponents&lt;0,<sp/>1&gt;&gt;)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SwapComponents&lt;0,<sp/>1&gt;),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal">static_assert(std::is_trivially_default_constructible&lt;MapComponents&lt;Identity,<sp/>SwapComponents&lt;0,<sp/>1&gt;&gt;&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="400"><highlight class="normal">static_assert(std::is_trivially_copy_assignable&lt;MapComponents&lt;Identity,<sp/>SwapComponents&lt;0,<sp/>1&gt;&gt;&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="401"><highlight class="normal">static_assert(std::is_trivially_copy_constructible&lt;MapComponents&lt;Identity,<sp/>SwapComponents&lt;0,<sp/>1&gt;&gt;&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="402"><highlight class="normal">static_assert(IsFabProjection&lt;MapComponents&lt;Identity,<sp/>SwapComponents&lt;0,<sp/>1&gt;&gt;,<sp/><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref>&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal">static_assert(swap_indices&lt;0,<sp/>1&gt;(0)<sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="405"><highlight class="normal">static_assert(swap_indices&lt;0,<sp/>1&gt;(1)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="406"><highlight class="normal">static_assert(swap_indices&lt;0,<sp/>1&gt;(2)<sp/>==<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="407"><highlight class="normal">static_assert(<ref refid="namespaceamrex_1_1NonLocalBC_1adc23e3a1b040b4f68b4429a2a40e00d6" kindref="member">DynamicSwapComponents</ref>{0,<sp/>1}(0)<sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="408"><highlight class="normal">static_assert(<ref refid="namespaceamrex_1_1NonLocalBC_1adc23e3a1b040b4f68b4429a2a40e00d6" kindref="member">DynamicSwapComponents</ref>{0,<sp/>1}(1)<sp/>==<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="409"><highlight class="normal">static_assert(<ref refid="namespaceamrex_1_1NonLocalBC_1adc23e3a1b040b4f68b4429a2a40e00d6" kindref="member">DynamicSwapComponents</ref>{0,<sp/>1}(2)<sp/>==<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[class.CommData]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[class.CommHandler]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="structamrex_1_1NonLocalBC_1_1CommData" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1NonLocalBC_1_1CommData" kindref="compound">CommData</ref><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a2081a3d338ad899832ab632c44a12eb5" kindref="member">TheFaArenaPointer</ref><sp/><ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a543e95dcf88e9bc9ec1a944364639037" kindref="member">the_data</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425" refid="structamrex_1_1NonLocalBC_1_1CommData_1a7043829d46fc0b8fe144d8f94a2d8580" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;int&gt;</ref><sp/><ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a7043829d46fc0b8fe144d8f94a2d8580" kindref="member">rank</ref>{};</highlight></codeline>
<codeline lineno="427" refid="structamrex_1_1NonLocalBC_1_1CommData_1a013fcdb6969b2114c8a41b59a75ce564" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;char*&gt;</ref><sp/><ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a013fcdb6969b2114c8a41b59a75ce564" kindref="member">data</ref>{};</highlight></codeline>
<codeline lineno="429" refid="structamrex_1_1NonLocalBC_1_1CommData_1adacc0eb8f4427cd400d829a713149d17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;std::size_t&gt;</ref><sp/><ref refid="structamrex_1_1NonLocalBC_1_1CommData_1adacc0eb8f4427cd400d829a713149d17" kindref="member">offset</ref>{};</highlight></codeline>
<codeline lineno="431" refid="structamrex_1_1NonLocalBC_1_1CommData_1a003cda29a508c69f8a9cb1ee80c7b72b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;std::size_t&gt;</ref><sp/><ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a003cda29a508c69f8a9cb1ee80c7b72b" kindref="member">size</ref>{};</highlight></codeline>
<codeline lineno="433" refid="structamrex_1_1NonLocalBC_1_1CommData_1a4e23f4023dc19cf04cce947add6a27a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;MPI_Request&gt;</ref><sp/><ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a4e23f4023dc19cf04cce947add6a27a8" kindref="member">request</ref>{};</highlight></codeline>
<codeline lineno="435" refid="structamrex_1_1NonLocalBC_1_1CommData_1a482a19ba37661846afa0f40688702f95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;MPI_Status&gt;</ref><sp/><ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a482a19ba37661846afa0f40688702f95" kindref="member">stats</ref>{};</highlight></codeline>
<codeline lineno="437" refid="structamrex_1_1NonLocalBC_1_1CommData_1a1bef6147ea1eda449fa5872d533d1876" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;const FabArrayBase::CopyComTagsContainer*&gt;</ref><sp/><ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a1bef6147ea1eda449fa5872d533d1876" kindref="member">cctc</ref>{};</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal">};</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a303b8c034244500930c9f5ead86a22bf" kindref="member">PrepareCommBuffers</ref>(CommData&amp;<sp/>comm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArrayBase_1a70b58356e2e49c69d54eed3850a9c231" kindref="member">FabArrayBase::MapOfCopyComTagContainers</ref>&amp;<sp/>cctc,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_components,<sp/>std::size_t<sp/>object_size,<sp/>std::size_t<sp/>align);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a34a28ebeabdd6a92596cb786799a5046" kindref="member">PostRecvs</ref>(CommData&amp;<sp/>comm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mpi_tag);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1abf909fc012a4354b2f2411d36eedc26a" kindref="member">PostSends</ref>(CommData&amp;<sp/>comm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mpi_tag);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="457" refid="structamrex_1_1NonLocalBC_1_1CommHandler" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1NonLocalBC_1_1CommHandler" kindref="compound">CommHandler</ref><sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459" refid="structamrex_1_1NonLocalBC_1_1CommHandler_1aa8135050d54b2e8cf0216b9038c4ab8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1CommHandler_1aa8135050d54b2e8cf0216b9038c4ab8b" kindref="member">mpi_tag</ref>{};</highlight></codeline>
<codeline lineno="460" refid="structamrex_1_1NonLocalBC_1_1CommHandler_1adfa07b567a77f261fb60efa5a54f505c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1NonLocalBC_1_1CommData" kindref="compound">CommData</ref><sp/><ref refid="structamrex_1_1NonLocalBC_1_1CommHandler_1adfa07b567a77f261fb60efa5a54f505c" kindref="member">recv</ref>{};</highlight></codeline>
<codeline lineno="461" refid="structamrex_1_1NonLocalBC_1_1CommHandler_1a18b34e7c60c895b063c694f7745190ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1NonLocalBC_1_1CommData" kindref="compound">CommData</ref><sp/><ref refid="structamrex_1_1NonLocalBC_1_1CommHandler_1a18b34e7c60c895b063c694f7745190ae" kindref="member">send</ref>{};</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal">};</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[concept.DataPacking]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="469" refid="namespaceamrex_1_1NonLocalBC_1aa9d38898e06da05aa7e4bfab9706f1f0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1aa9d38898e06da05aa7e4bfab9706f1f0" kindref="member">PrepareSendBuffers_t</ref><sp/>=<sp/>decltype(<ref refid="namespaceamrex_1_1NonLocalBC_1a7a60288f2dd74a2f2adb38b6d5586eac" kindref="member">PrepareSendBuffers</ref>(std::declval&lt;Args&gt;()...));</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="472" refid="namespaceamrex_1_1NonLocalBC_1ac352232fe0363d175aaf2615666c8439" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1ac352232fe0363d175aaf2615666c8439" kindref="member">PrepareRecvBuffers_t</ref><sp/>=<sp/>decltype(<ref refid="namespaceamrex_1_1NonLocalBC_1a2e9d4fa2214539e1304ed1ad6fa243c9" kindref="member">PrepareRecvBuffers</ref>(std::declval&lt;Args&gt;()...));</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="475" refid="namespaceamrex_1_1NonLocalBC_1a2457a717c906cb9f086a39faea4da88d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a2457a717c906cb9f086a39faea4da88d" kindref="member">PackSendBuffers_t</ref><sp/>=<sp/>decltype(<ref refid="namespaceamrex_1_1NonLocalBC_1a69daa706f0034393ac2836f7c04b99c8" kindref="member">PackSendBuffers</ref>(std::declval&lt;Args&gt;()...));</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="478" refid="namespaceamrex_1_1NonLocalBC_1a0050536eff7fd3244ef573e961858999" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a0050536eff7fd3244ef573e961858999" kindref="member">UnpackRecvBuffers_t</ref><sp/>=<sp/>decltype(<ref refid="namespaceamrex_1_1NonLocalBC_1a414c981dffeff68e903947287e786ed4" kindref="member">UnpackRecvBuffers</ref>(std::declval&lt;Args&gt;()...));</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="481" refid="namespaceamrex_1_1NonLocalBC_1a4b44aa3d7a205826948ced4323d0be80" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a4b44aa3d7a205826948ced4323d0be80" kindref="member">LocalCopy_t</ref><sp/>=<sp/>decltype(<ref refid="namespaceamrex_1_1NonLocalBC_1a0507a8842305bc6b8a8668ca8221e365" kindref="member">LocalCopy</ref>(std::declval&lt;Args&gt;()...));</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DP,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB&gt;</highlight></codeline>
<codeline lineno="485" refid="structamrex_1_1NonLocalBC_1_1IsDataPacking" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1NonLocalBC_1_1IsDataPacking" kindref="compound">IsDataPacking</ref><sp/>:<sp/></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1Conjunction" kindref="compound">Conjunction</ref>&lt;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsDetected&lt;LocalCopy_t,<sp/>DP&amp;,<sp/>FabArray&lt;FAB&gt;&amp;,<sp/>const<sp/>FabArray&lt;FAB&gt;&amp;,<sp/>const<sp/>FabArrayBase::CopyComTagsContainer&amp;&gt;</highlight></codeline>
<codeline lineno="488"><highlight class="normal">#ifdef<sp/>AMREX_USE_MPI</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,IsDetected&lt;PrepareSendBuffers_t,<sp/>DP&amp;,<sp/>FabArray&lt;FAB&gt;&amp;,<sp/>const<sp/>FabArray&lt;FAB&gt;&amp;,<sp/>CommData&amp;,<sp/>const<sp/>FabArrayBase::MapOfCopyComTagContainers&amp;&gt;,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsDetected&lt;PrepareRecvBuffers_t,<sp/>DP&amp;,<sp/>FabArray&lt;FAB&gt;&amp;,<sp/>const<sp/>FabArray&lt;FAB&gt;&amp;,<sp/>CommData&amp;,<sp/>const<sp/>FabArrayBase::MapOfCopyComTagContainers&amp;&gt;,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsDetected&lt;PackSendBuffers_t,<sp/>DP&amp;,<sp/>const<sp/>FabArray&lt;FAB&gt;&amp;,<sp/>CommData&amp;&gt;,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsDetected&lt;UnpackRecvBuffers_t,<sp/>DP&amp;,<sp/>FabArray&lt;FAB&gt;&amp;,<sp/>CommData&amp;&gt;</highlight></codeline>
<codeline lineno="493"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;<sp/>{};</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[DataPacking.PackComponents]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PackComponents<sp/>is<sp/>the<sp/>simplest<sp/>data<sp/>packing<sp/>policy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>provides<sp/>us<sp/>with<sp/>sane<sp/>default<sp/>behaviour<sp/>that<sp/>we<sp/>can<sp/>use<sp/>when<sp/>defining<sp/>new<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="comment">//<sp/>data<sp/>packing<sp/>policies.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="504" refid="structamrex_1_1NonLocalBC_1_1PackComponents" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1NonLocalBC_1_1PackComponents" kindref="compound">PackComponents</ref><sp/>{</highlight></codeline>
<codeline lineno="505" refid="structamrex_1_1NonLocalBC_1_1PackComponents_1a30d08fef2b14e838731f87056d78a617" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1a30d08fef2b14e838731f87056d78a617" kindref="member">dest_component</ref>{0};</highlight></codeline>
<codeline lineno="506" refid="structamrex_1_1NonLocalBC_1_1PackComponents_1abde0cfb7cbd64033b3462d65905c5831" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1abde0cfb7cbd64033b3462d65905c5831" kindref="member">src_component</ref>{0};</highlight></codeline>
<codeline lineno="507" refid="structamrex_1_1NonLocalBC_1_1PackComponents_1ace297f67083473f1a5777f7cfd1a0135" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1ace297f67083473f1a5777f7cfd1a0135" kindref="member">n_components</ref>{0};</highlight></codeline>
<codeline lineno="508"><highlight class="normal">};</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB&gt;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;</highlight></codeline>
<codeline lineno="513" refid="namespaceamrex_1_1NonLocalBC_1a0507a8842305bc6b8a8668ca8221e365" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1a0507a8842305bc6b8a8668ca8221e365" kindref="member">LocalCopy</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1PackComponents" kindref="compound">PackComponents</ref>&amp;<sp/>components,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArrayBase_1a1bb6a09ada00b5b7a900d8fecbf92e3c" kindref="member">FabArrayBase::CopyComTagsContainer</ref>&amp;<sp/>local_tags)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a7a05369cacb826ba5546b4dd507c49dd" kindref="member">Gpu::inLaunchRegion</ref>())<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a7f30fc2beb3209813124768a73377afc" kindref="member">local_copy_gpu</ref>(dest,<sp/>src,<sp/>components.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1a30d08fef2b14e838731f87056d78a617" kindref="member">dest_component</ref>,<sp/>components.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1abde0cfb7cbd64033b3462d65905c5831" kindref="member">src_component</ref>,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1ace297f67083473f1a5777f7cfd1a0135" kindref="member">n_components</ref>,<sp/>local_tags);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1ad8e907e6aee2eda184a620f2a010a386" kindref="member">local_copy_cpu</ref>(dest,<sp/>src,<sp/>components.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1a30d08fef2b14e838731f87056d78a617" kindref="member">dest_component</ref>,<sp/>components.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1abde0cfb7cbd64033b3462d65905c5831" kindref="member">src_component</ref>,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1ace297f67083473f1a5777f7cfd1a0135" kindref="member">n_components</ref>,<sp/>local_tags);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB&gt;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;</highlight></codeline>
<codeline lineno="531" refid="namespaceamrex_1_1NonLocalBC_1a7a60288f2dd74a2f2adb38b6d5586eac" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1a7a60288f2dd74a2f2adb38b6d5586eac" kindref="member">PrepareSendBuffers</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1PackComponents" kindref="compound">PackComponents</ref>&amp;<sp/>components,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1NonLocalBC_1_1CommData" kindref="compound">CommData</ref>&amp;<sp/>comm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArrayBase_1a70b58356e2e49c69d54eed3850a9c231" kindref="member">FabArrayBase::MapOfCopyComTagContainers</ref>&amp;<sp/>cctc)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>T<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">ignore_unused</ref>(dest,<sp/>src);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a303b8c034244500930c9f5ead86a22bf" kindref="member">PrepareCommBuffers</ref>(comm,<sp/>cctc,<sp/>components.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1ace297f67083473f1a5777f7cfd1a0135" kindref="member">n_components</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/></highlight><highlight class="keyword">alignof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB&gt;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;</highlight></codeline>
<codeline lineno="541" refid="namespaceamrex_1_1NonLocalBC_1a2e9d4fa2214539e1304ed1ad6fa243c9" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1a2e9d4fa2214539e1304ed1ad6fa243c9" kindref="member">PrepareRecvBuffers</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1PackComponents" kindref="compound">PackComponents</ref>&amp;<sp/>components,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>src,<sp/></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1NonLocalBC_1_1CommData" kindref="compound">CommData</ref>&amp;<sp/>comm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArrayBase_1a70b58356e2e49c69d54eed3850a9c231" kindref="member">FabArrayBase::MapOfCopyComTagContainers</ref>&amp;<sp/>cctc)<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>T<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">ignore_unused</ref>(dest,<sp/>src);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a303b8c034244500930c9f5ead86a22bf" kindref="member">PrepareCommBuffers</ref>(comm,<sp/>cctc,<sp/>components.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1ace297f67083473f1a5777f7cfd1a0135" kindref="member">n_components</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/></highlight><highlight class="keyword">alignof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB&gt;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;</highlight></codeline>
<codeline lineno="551" refid="namespaceamrex_1_1NonLocalBC_1a69daa706f0034393ac2836f7c04b99c8" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1a69daa706f0034393ac2836f7c04b99c8" kindref="member">PackSendBuffers</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1PackComponents" kindref="compound">PackComponents</ref>&amp;<sp/>components,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>src,<sp/><ref refid="structamrex_1_1NonLocalBC_1_1CommData" kindref="compound">CommData</ref>&amp;<sp/>send)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a7a05369cacb826ba5546b4dd507c49dd" kindref="member">Gpu::inLaunchRegion</ref>())<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArray_1a7904811e2a83af68b16bd6c6bd9bce6a" kindref="member">FabArray&lt;FAB&gt;::pack_send_buffer_gpu</ref>(src,<sp/>components.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1abde0cfb7cbd64033b3462d65905c5831" kindref="member">src_component</ref>,<sp/>components.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1ace297f67083473f1a5777f7cfd1a0135" kindref="member">n_components</ref>,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send.<ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a013fcdb6969b2114c8a41b59a75ce564" kindref="member">data</ref>,<sp/>send.<ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a003cda29a508c69f8a9cb1ee80c7b72b" kindref="member">size</ref>,<sp/>send.<ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a1bef6147ea1eda449fa5872d533d1876" kindref="member">cctc</ref>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArray_1a345e1546f8ae1dcca4a44a140abe8483" kindref="member">FabArray&lt;FAB&gt;::pack_send_buffer_cpu</ref>(src,<sp/>components.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1abde0cfb7cbd64033b3462d65905c5831" kindref="member">src_component</ref>,<sp/>components.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1ace297f67083473f1a5777f7cfd1a0135" kindref="member">n_components</ref>,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send.<ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a013fcdb6969b2114c8a41b59a75ce564" kindref="member">data</ref>,<sp/>send.<ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a003cda29a508c69f8a9cb1ee80c7b72b" kindref="member">size</ref>,<sp/>send.<ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a1bef6147ea1eda449fa5872d533d1876" kindref="member">cctc</ref>);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB&gt;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;</highlight></codeline>
<codeline lineno="567" refid="namespaceamrex_1_1NonLocalBC_1a414c981dffeff68e903947287e786ed4" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1a414c981dffeff68e903947287e786ed4" kindref="member">UnpackRecvBuffers</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1PackComponents" kindref="compound">PackComponents</ref>&amp;<sp/>components,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1CommData" kindref="compound">CommData</ref>&amp;<sp/>recv)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a7a05369cacb826ba5546b4dd507c49dd" kindref="member">Gpu::inLaunchRegion</ref>())<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1ad66eb23c232469831c3e4a3c5215223e" kindref="member">unpack_recv_buffer_gpu</ref>(dest,<sp/>components.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1a30d08fef2b14e838731f87056d78a617" kindref="member">dest_component</ref>,<sp/>components.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1ace297f67083473f1a5777f7cfd1a0135" kindref="member">n_components</ref>,<sp/>recv.<ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a013fcdb6969b2114c8a41b59a75ce564" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recv.<ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a003cda29a508c69f8a9cb1ee80c7b72b" kindref="member">size</ref>,<sp/>recv.<ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a1bef6147ea1eda449fa5872d533d1876" kindref="member">cctc</ref>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a6c186f360eaf702c480e90fc6b60f3a9" kindref="member">unpack_recv_buffer_cpu</ref>(dest,<sp/>components.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1a30d08fef2b14e838731f87056d78a617" kindref="member">dest_component</ref>,<sp/>components.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1ace297f67083473f1a5777f7cfd1a0135" kindref="member">n_components</ref>,<sp/>recv.<ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a013fcdb6969b2114c8a41b59a75ce564" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recv.<ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a003cda29a508c69f8a9cb1ee80c7b72b" kindref="member">size</ref>,<sp/>recv.<ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a1bef6147ea1eda449fa5872d533d1876" kindref="member">cctc</ref>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>AMREX_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal">static_assert(IsDataPacking&lt;PackComponents,<sp/>FArrayBox&gt;(),</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;PackComponents<sp/>is<sp/>expected<sp/>to<sp/>satisfy<sp/>the<sp/>concept<sp/>DataPacking.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[DataPacking.ApplyDtosAndProjectionOnReciever]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="590"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DTOS<sp/>=<sp/>Identity,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FabProj<sp/>=<sp/>Identity&gt;</highlight></codeline>
<codeline lineno="591" refid="structamrex_1_1NonLocalBC_1_1ApplyDtosAndProjectionOnReciever" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1NonLocalBC_1_1ApplyDtosAndProjectionOnReciever" kindref="compound">ApplyDtosAndProjectionOnReciever</ref><sp/>:<sp/><ref refid="structamrex_1_1NonLocalBC_1_1PackComponents" kindref="compound">PackComponents</ref><sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structamrex_1_1NonLocalBC_1_1ApplyDtosAndProjectionOnReciever_1a86713118d056b9b6aecf7c588915b7a4" kindref="member">ApplyDtosAndProjectionOnReciever</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="593" refid="structamrex_1_1NonLocalBC_1_1ApplyDtosAndProjectionOnReciever_1a961b07dcb0ecaf46a06c9e792f6e451f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structamrex_1_1NonLocalBC_1_1ApplyDtosAndProjectionOnReciever_1a961b07dcb0ecaf46a06c9e792f6e451f" kindref="member">ApplyDtosAndProjectionOnReciever</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1PackComponents" kindref="compound">PackComponents</ref>&amp;<sp/>components,<sp/>DTOS<sp/>dtos_<sp/>=<sp/>DTOS{},<sp/>FabProj<sp/>proj_<sp/>=<sp/>FabProj{})</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>PackComponents(components),<sp/><ref refid="structamrex_1_1NonLocalBC_1_1ApplyDtosAndProjectionOnReciever_1a8eeaf24732b9b42da363c9c92992d161" kindref="member">dtos</ref>(std::move(dtos_)),<sp/><ref refid="structamrex_1_1NonLocalBC_1_1ApplyDtosAndProjectionOnReciever_1a5e61ec62df4e0fedd54c4ad426b5c14d" kindref="member">proj</ref>(std::move(proj_))<sp/>{}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596" refid="structamrex_1_1NonLocalBC_1_1ApplyDtosAndProjectionOnReciever_1a8eeaf24732b9b42da363c9c92992d161" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a4239dc930ea8f47a20ebf1aca31dc602" kindref="member">AMREX_NO_UNIQUE_ADDRESS</ref><sp/>DTOS<sp/><ref refid="structamrex_1_1NonLocalBC_1_1ApplyDtosAndProjectionOnReciever_1a8eeaf24732b9b42da363c9c92992d161" kindref="member">dtos</ref>;</highlight></codeline>
<codeline lineno="597" refid="structamrex_1_1NonLocalBC_1_1ApplyDtosAndProjectionOnReciever_1a5e61ec62df4e0fedd54c4ad426b5c14d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a4239dc930ea8f47a20ebf1aca31dc602" kindref="member">AMREX_NO_UNIQUE_ADDRESS</ref><sp/>FabProj<sp/><ref refid="structamrex_1_1NonLocalBC_1_1ApplyDtosAndProjectionOnReciever_1a5e61ec62df4e0fedd54c4ad426b5c14d" kindref="member">proj</ref>;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(<ref refid="structamrex_1_1IsCallableR" kindref="compound">IsCallableR&lt;Dim3, DTOS, Dim3&gt;</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;DTOS<sp/>needs<sp/>to<sp/>be<sp/>a<sp/>callable:<sp/>Dim3<sp/>-&gt;<sp/>Dim3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(<ref refid="structamrex_1_1NonLocalBC_1_1IsFabProjection" kindref="compound">IsFabProjection&lt;FabProj, FArrayBox&gt;</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;FabProj<sp/>needs<sp/>to<sp/>be<sp/>at<sp/>least<sp/>a<sp/>projection<sp/>on<sp/>FArrayBox.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="601"><highlight class="normal">};</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DTOS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FabProj&gt;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;</highlight></codeline>
<codeline lineno="606" refid="namespaceamrex_1_1NonLocalBC_1a3c6b7b621af8b139c7c30462ba6a69a9" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1a0507a8842305bc6b8a8668ca8221e365" kindref="member">LocalCopy</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1ApplyDtosAndProjectionOnReciever" kindref="compound">ApplyDtosAndProjectionOnReciever&lt;DTOS, FabProj&gt;</ref>&amp;<sp/>packing,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dest,</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArrayBase_1a1bb6a09ada00b5b7a900d8fecbf92e3c" kindref="member">FabArrayBase::CopyComTagsContainer</ref>&amp;<sp/>local_tags)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(<ref refid="structamrex_1_1NonLocalBC_1_1IsFabProjection" kindref="compound">IsFabProjection&lt;FabProj, FAB&gt;</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;FabProj<sp/>needs<sp/>to<sp/>be<sp/>a<sp/>projection<sp/>for<sp/>given<sp/>FAB<sp/>type.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a7a05369cacb826ba5546b4dd507c49dd" kindref="member">Gpu::inLaunchRegion</ref>())<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a7f30fc2beb3209813124768a73377afc" kindref="member">local_copy_gpu</ref>(dest,<sp/>src,<sp/>packing.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1a30d08fef2b14e838731f87056d78a617" kindref="member">dest_component</ref>,<sp/>packing.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1abde0cfb7cbd64033b3462d65905c5831" kindref="member">src_component</ref>,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packing.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1ace297f67083473f1a5777f7cfd1a0135" kindref="member">n_components</ref>,<sp/>local_tags,<sp/>packing.<ref refid="structamrex_1_1NonLocalBC_1_1ApplyDtosAndProjectionOnReciever_1a8eeaf24732b9b42da363c9c92992d161" kindref="member">dtos</ref>,<sp/>packing.<ref refid="structamrex_1_1NonLocalBC_1_1ApplyDtosAndProjectionOnReciever_1a5e61ec62df4e0fedd54c4ad426b5c14d" kindref="member">proj</ref>);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1ad8e907e6aee2eda184a620f2a010a386" kindref="member">local_copy_cpu</ref>(dest,<sp/>src,<sp/>packing.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1a30d08fef2b14e838731f87056d78a617" kindref="member">dest_component</ref>,<sp/>packing.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1abde0cfb7cbd64033b3462d65905c5831" kindref="member">src_component</ref>,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packing.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1ace297f67083473f1a5777f7cfd1a0135" kindref="member">n_components</ref>,<sp/>local_tags,<sp/>packing.<ref refid="structamrex_1_1NonLocalBC_1_1ApplyDtosAndProjectionOnReciever_1a8eeaf24732b9b42da363c9c92992d161" kindref="member">dtos</ref>,<sp/>packing.<ref refid="structamrex_1_1NonLocalBC_1_1ApplyDtosAndProjectionOnReciever_1a5e61ec62df4e0fedd54c4ad426b5c14d" kindref="member">proj</ref>);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DTOS,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FabProj&gt;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;</highlight></codeline>
<codeline lineno="625" refid="namespaceamrex_1_1NonLocalBC_1a4d5eebcfc32058388d6374b28b7bac21" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1a414c981dffeff68e903947287e786ed4" kindref="member">UnpackRecvBuffers</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1ApplyDtosAndProjectionOnReciever" kindref="compound">ApplyDtosAndProjectionOnReciever&lt;DTOS, FabProj&gt;</ref>&amp;<sp/>packing,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1NonLocalBC_1_1CommData" kindref="compound">CommData</ref>&amp;<sp/>recv)<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>FAB<sp/>is<sp/>not<sp/>FArrayBox<sp/>we<sp/>have<sp/>not<sp/>checked<sp/>for<sp/>the<sp/>correct<sp/>types<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(<ref refid="structamrex_1_1NonLocalBC_1_1IsFabProjection" kindref="compound">IsFabProjection&lt;FabProj, FAB&gt;</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;FabProj<sp/>needs<sp/>to<sp/>be<sp/>a<sp/>projection<sp/>for<sp/>given<sp/>FAB<sp/>type.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a7a05369cacb826ba5546b4dd507c49dd" kindref="member">Gpu::inLaunchRegion</ref>())<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1ad66eb23c232469831c3e4a3c5215223e" kindref="member">unpack_recv_buffer_gpu</ref>(dest,<sp/>packing.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1a30d08fef2b14e838731f87056d78a617" kindref="member">dest_component</ref>,<sp/>packing.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1ace297f67083473f1a5777f7cfd1a0135" kindref="member">n_components</ref>,<sp/>recv.<ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a013fcdb6969b2114c8a41b59a75ce564" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recv.<ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a003cda29a508c69f8a9cb1ee80c7b72b" kindref="member">size</ref>,<sp/>recv.<ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a1bef6147ea1eda449fa5872d533d1876" kindref="member">cctc</ref>,<sp/>packing.<ref refid="structamrex_1_1NonLocalBC_1_1ApplyDtosAndProjectionOnReciever_1a8eeaf24732b9b42da363c9c92992d161" kindref="member">dtos</ref>,<sp/>packing.<ref refid="structamrex_1_1NonLocalBC_1_1ApplyDtosAndProjectionOnReciever_1a5e61ec62df4e0fedd54c4ad426b5c14d" kindref="member">proj</ref>);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a6c186f360eaf702c480e90fc6b60f3a9" kindref="member">unpack_recv_buffer_cpu</ref>(dest,<sp/>packing.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1a30d08fef2b14e838731f87056d78a617" kindref="member">dest_component</ref>,<sp/>packing.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1ace297f67083473f1a5777f7cfd1a0135" kindref="member">n_components</ref>,<sp/>recv.<ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a013fcdb6969b2114c8a41b59a75ce564" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recv.<ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a003cda29a508c69f8a9cb1ee80c7b72b" kindref="member">size</ref>,<sp/>recv.<ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a1bef6147ea1eda449fa5872d533d1876" kindref="member">cctc</ref>,<sp/>packing.<ref refid="structamrex_1_1NonLocalBC_1_1ApplyDtosAndProjectionOnReciever_1a8eeaf24732b9b42da363c9c92992d161" kindref="member">dtos</ref>,<sp/>packing.<ref refid="structamrex_1_1NonLocalBC_1_1ApplyDtosAndProjectionOnReciever_1a5e61ec62df4e0fedd54c4ad426b5c14d" kindref="member">proj</ref>);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>AMREX_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal">static_assert(IsDataPacking&lt;ApplyDtosAndProjectionOnReciever&lt;&gt;,<sp/><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref>&gt;(),</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ApplyDtosAndProjectionOnReciever&lt;&gt;<sp/>is<sp/>expected<sp/>to<sp/>satisfy<sp/>the<sp/>DataPacking<sp/>concept.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[ParallelCopy_nowait]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648" refid="structamrex_1_1NonLocalBC_1_1NoLocalCopy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1NonLocalBC_1_1NoLocalCopy" kindref="compound">NoLocalCopy</ref><sp/>{}<sp/><ref refid="namespaceamrex_1_1NonLocalBC_1ad604544d2fd60b6d9fb7a8b75f95ffe0" kindref="member">no_local_copy</ref>{};</highlight></codeline>
<codeline lineno="649" refid="structamrex_1_1NonLocalBC_1_1DoLocalCopy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1NonLocalBC_1_1DoLocalCopy" kindref="compound">DoLocalCopy</ref><sp/>{}<sp/><ref refid="namespaceamrex_1_1NonLocalBC_1aa0174cdbe72e2968e46f0293c2ecab73" kindref="member">do_local_copy</ref>{};</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataPacking,<sp/></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">EnableIf_t&lt;IsDataPacking&lt;DataPacking, FAB&gt;::value</ref>&gt;&gt;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a8cfb0291f150c6676f99a0b6c4578717" kindref="member">AMREX_NODISCARD</ref><sp/>CommHandler<sp/></highlight></codeline>
<codeline lineno="677" refid="namespaceamrex_1_1NonLocalBC_1a7bf19b06a9bab53ac6dea6bfa875af9d" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1a7bf19b06a9bab53ac6dea6bfa875af9d" kindref="member">ParallelCopy_nowait</ref><sp/>(<ref refid="structamrex_1_1NonLocalBC_1_1NoLocalCopy" kindref="compound">NoLocalCopy</ref>,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData" kindref="compound">FabArrayBase::CommMetaData</ref>&amp;<sp/>cmd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataPacking&amp;<sp/>data_packing)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1NonLocalBC_1_1CommHandler" kindref="compound">CommHandler</ref><sp/>handler{};</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelContext_1aa7f481a6be5e8f2eefbe9448135a3843" kindref="member">ParallelContext::NProcsSub</ref>()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>this<sp/>before<sp/>prematurely<sp/>exiting<sp/>if<sp/>running<sp/>in<sp/>parallel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>sequence<sp/>numbers<sp/>will<sp/>not<sp/>match<sp/>across<sp/>MPI<sp/>processes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>handler.<ref refid="structamrex_1_1NonLocalBC_1_1CommHandler_1aa8135050d54b2e8cf0216b9038c4ab8b" kindref="member">mpi_tag</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a9fa50b376ee8c97f8d84852e244fd916" kindref="member">ParallelDescriptor::SeqNum</ref>();</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N_rcvs<sp/>=<sp/>cmd.<ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData_1a8a30e2336976ffe878c2c6558ecce70d" kindref="member">m_RcvTags</ref><sp/>?<sp/>cmd.<ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData_1a8a30e2336976ffe878c2c6558ecce70d" kindref="member">m_RcvTags</ref>-&gt;size()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(N_rcvs<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a2e9d4fa2214539e1304ed1ad6fa243c9" kindref="member">PrepareRecvBuffers</ref>(data_packing,<sp/>dest,<sp/>src,<sp/>handler.recv,<sp/>*cmd.<ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData_1a8a30e2336976ffe878c2c6558ecce70d" kindref="member">m_RcvTags</ref>);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a34a28ebeabdd6a92596cb786799a5046" kindref="member">PostRecvs</ref>(handler.recv,<sp/>handler.mpi_tag);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N_snds<sp/>=<sp/>cmd.<ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData_1a9faedeb4a7bf786a1143c2f4264369a0" kindref="member">m_SndTags</ref><sp/>?<sp/>cmd.<ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData_1a9faedeb4a7bf786a1143c2f4264369a0" kindref="member">m_SndTags</ref>-&gt;size()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(N_snds<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a7a60288f2dd74a2f2adb38b6d5586eac" kindref="member">PrepareSendBuffers</ref>(data_packing,<sp/>dest,<sp/>src,<sp/>handler.send,<sp/>*cmd.<ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData_1a9faedeb4a7bf786a1143c2f4264369a0" kindref="member">m_SndTags</ref>);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a69daa706f0034393ac2836f7c04b99c8" kindref="member">PackSendBuffers</ref>(data_packing,<sp/>src,<sp/>handler.send);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1abf909fc012a4354b2f2411d36eedc26a" kindref="member">PostSends</ref>(handler.send,<sp/>handler.mpi_tag);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>handler;</highlight></codeline>
<codeline lineno="702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal">CommHandler<sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a7bf19b06a9bab53ac6dea6bfa875af9d" kindref="member">ParallelCopy_nowait</ref><sp/>(NoLocalCopy,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;,</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData" kindref="compound">FabArrayBase::CommMetaData</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataPacking&amp;)<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CommHandler{};</highlight></codeline>
<codeline lineno="707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataPacking,<sp/></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value&gt;,</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>EnableIf_t&lt;IsDataPacking&lt;DataPacking,<sp/>FAB&gt;::value&gt;&gt;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><ref refid="AMReX__Extension_8H_1a8cfb0291f150c6676f99a0b6c4578717" kindref="member">AMREX_NODISCARD</ref><sp/></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal">CommHandler<sp/></highlight></codeline>
<codeline lineno="738" refid="namespaceamrex_1_1NonLocalBC_1a57dca62d2b38257c9da61d6a1f0ed9d8" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1a7bf19b06a9bab53ac6dea6bfa875af9d" kindref="member">ParallelCopy_nowait</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>src,</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData" kindref="compound">FabArrayBase::CommMetaData</ref>&amp;<sp/>cmd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataPacking&amp;<sp/>data_packing)<sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1NonLocalBC_1_1CommHandler" kindref="compound">CommHandler</ref><sp/>comm<sp/>=<sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a7bf19b06a9bab53ac6dea6bfa875af9d" kindref="member">ParallelCopy_nowait</ref>(<ref refid="namespaceamrex_1_1NonLocalBC_1ad604544d2fd60b6d9fb7a8b75f95ffe0" kindref="member">no_local_copy</ref>,<sp/>dest,<sp/>src,<sp/>cmd,<sp/>data_packing);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Eagerly<sp/>do<sp/>the<sp/>local<sp/>work<sp/>and<sp/>hope<sp/>for<sp/>some<sp/>overlap<sp/>with<sp/>communication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd.<ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData_1ac9cf38f68949932d8e7815a7caffc7c8" kindref="member">m_LocTags</ref><sp/>&amp;&amp;<sp/>cmd.<ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData_1ac9cf38f68949932d8e7815a7caffc7c8" kindref="member">m_LocTags</ref>-&gt;size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a0507a8842305bc6b8a8668ca8221e365" kindref="member">LocalCopy</ref>(data_packing,<sp/>dest,<sp/>src,<sp/>*cmd.<ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData_1ac9cf38f68949932d8e7815a7caffc7c8" kindref="member">m_LocTags</ref>);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comm;</highlight></codeline>
<codeline lineno="746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="748"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[ParallelCopy_finish]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataPacking&gt;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">EnableIf_t&lt;IsBaseFab&lt;FAB&gt;</ref>()<sp/>&amp;&amp;<sp/>IsDataPacking&lt;DataPacking,<sp/>FAB&gt;()&gt;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771" refid="namespaceamrex_1_1NonLocalBC_1a543ee3c92ebf4b00332dfc86a6364b87" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1a543ee3c92ebf4b00332dfc86a6364b87" kindref="member">ParallelCopy_finish</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dest,<sp/><ref refid="structamrex_1_1NonLocalBC_1_1CommHandler" kindref="compound">CommHandler</ref><sp/>handler,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData" kindref="compound">FabArrayBase::CommMetaData</ref>&amp;<sp/>cmd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataPacking&amp;<sp/>data_packing)<sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>any<sp/>FabArray<sp/>is<sp/>empty<sp/>we<sp/>have<sp/>nothing<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dest.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>if<sp/>nothing<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelContext_1aa7f481a6be5e8f2eefbe9448135a3843" kindref="member">ParallelContext::NProcsSub</ref>()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unpack<sp/>recieves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N_rcvs<sp/>=<sp/>cmd.<ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData_1a8a30e2336976ffe878c2c6558ecce70d" kindref="member">m_RcvTags</ref><sp/>?<sp/>cmd.<ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData_1a8a30e2336976ffe878c2c6558ecce70d" kindref="member">m_RcvTags</ref>-&gt;size()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(N_rcvs<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a63d04588d41cd108e9255c231e2562d9" kindref="member">ParallelDescriptor::Waitall</ref>(handler.<ref refid="structamrex_1_1NonLocalBC_1_1CommHandler_1adfa07b567a77f261fb60efa5a54f505c" kindref="member">recv</ref>.<ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a4e23f4023dc19cf04cce947add6a27a8" kindref="member">request</ref>,<sp/>handler.<ref refid="structamrex_1_1NonLocalBC_1_1CommHandler_1adfa07b567a77f261fb60efa5a54f505c" kindref="member">recv</ref>.<ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a482a19ba37661846afa0f40688702f95" kindref="member">stats</ref>);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_D_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CheckRcvStats(stats,<sp/>handler.recv_size,<sp/>handler.<ref refid="structamrex_1_1NonLocalBC_1_1CommHandler_1aa8135050d54b2e8cf0216b9038c4ab8b" kindref="member">mpi_tag</ref>))<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;NonLocalPC::ParallelCopy_finish<sp/>failed<sp/>with<sp/>wrong<sp/>message<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a414c981dffeff68e903947287e786ed4" kindref="member">UnpackRecvBuffers</ref>(data_packing,<sp/>dest,<sp/>handler.<ref refid="structamrex_1_1NonLocalBC_1_1CommHandler_1adfa07b567a77f261fb60efa5a54f505c" kindref="member">recv</ref>);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>all<sp/>sends<sp/>to<sp/>be<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N_snds<sp/>=<sp/>cmd.<ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData_1a9faedeb4a7bf786a1143c2f4264369a0" kindref="member">m_SndTags</ref><sp/>?<sp/>cmd.<ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData_1a9faedeb4a7bf786a1143c2f4264369a0" kindref="member">m_SndTags</ref>-&gt;size()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(N_snds<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a63d04588d41cd108e9255c231e2562d9" kindref="member">ParallelDescriptor::Waitall</ref>(handler.<ref refid="structamrex_1_1NonLocalBC_1_1CommHandler_1a18b34e7c60c895b063c694f7745190ae" kindref="member">send</ref>.<ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a4e23f4023dc19cf04cce947add6a27a8" kindref="member">request</ref>,<sp/>handler.<ref refid="structamrex_1_1NonLocalBC_1_1CommHandler_1a18b34e7c60c895b063c694f7745190ae" kindref="member">send</ref>.<ref refid="structamrex_1_1NonLocalBC_1_1CommData_1a482a19ba37661846afa0f40688702f95" kindref="member">stats</ref>);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1a543ee3c92ebf4b00332dfc86a6364b87" kindref="member">ParallelCopy_finish</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;,<sp/>CommHandler,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData" kindref="compound">FabArrayBase::CommMetaData</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataPacking&amp;)<sp/>{}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataPacking&gt;</highlight></codeline>
<codeline lineno="823"><highlight class="normal">EnableIf_t&lt;IsBaseFab&lt;FAB&gt;()<sp/>&amp;&amp;<sp/>IsDataPacking&lt;DataPacking,<sp/>FAB&gt;()&gt;</highlight></codeline>
<codeline lineno="824" refid="namespaceamrex_1_1NonLocalBC_1a07ab87dce42365257d6f4e0e8226851b" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1a543ee3c92ebf4b00332dfc86a6364b87" kindref="member">ParallelCopy_finish</ref><sp/>(<ref refid="structamrex_1_1NonLocalBC_1_1DoLocalCopy" kindref="compound">DoLocalCopy</ref>,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>src,<sp/><ref refid="structamrex_1_1NonLocalBC_1_1CommHandler" kindref="compound">CommHandler</ref><sp/>handler,</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData" kindref="compound">FabArrayBase::CommMetaData</ref>&amp;<sp/>cmd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DataPacking&amp;<sp/>data_packing)<sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Eagerly<sp/>do<sp/>the<sp/>local<sp/>work<sp/>and<sp/>hope<sp/>for<sp/>some<sp/>overlap<sp/>with<sp/>communication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd.<ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData_1ac9cf38f68949932d8e7815a7caffc7c8" kindref="member">m_LocTags</ref><sp/>&amp;&amp;<sp/>cmd.<ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData_1ac9cf38f68949932d8e7815a7caffc7c8" kindref="member">m_LocTags</ref>-&gt;size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a0507a8842305bc6b8a8668ca8221e365" kindref="member">LocalCopy</ref>(data_packing,<sp/>dest,<sp/>src,<sp/>*cmd.<ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData_1ac9cf38f68949932d8e7815a7caffc7c8" kindref="member">m_LocTags</ref>);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a543ee3c92ebf4b00332dfc86a6364b87" kindref="member">ParallelCopy_finish</ref>(dest,<sp/>std::move(handler),<sp/>cmd,<sp/>data_packing);</highlight></codeline>
<codeline lineno="831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DTOS<sp/>=<sp/>Identity,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Proj<sp/>=<sp/>Identity&gt;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">EnableIf_t&lt;IsBaseFab&lt;FAB&gt;</ref>()<sp/>&amp;&amp;<sp/><ref refid="structamrex_1_1IsCallableR" kindref="compound">IsCallableR&lt;Dim3, DTOS, Dim3&gt;</ref>()<sp/>&amp;&amp;<sp/>IsFabProjection&lt;Proj,<sp/>FAB&gt;()&gt;</highlight></codeline>
<codeline lineno="859" refid="namespaceamrex_1_1NonLocalBC_1a80e852b15ca18cfeaef8ec9b1de653b9" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1ac09ca9edc6d06054f9f1c62d5627c916" kindref="member">ParallelCopy</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData" kindref="compound">FabArrayBase::CommMetaData</ref>&amp;<sp/>cmd,</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref><sp/>srccomp,<sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>destcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>numcomp,<sp/>DTOS<sp/>dtos<sp/>=<sp/>DTOS{},<sp/>Proj<sp/>proj<sp/>=<sp/>Proj{})<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>PackComponents<sp/>components{};</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>components.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1a30d08fef2b14e838731f87056d78a617" kindref="member">dest_component</ref><sp/>=<sp/>destcomp.<ref refid="structamrex_1_1DestComp_1ab31802a9ed04a354ae054227b10ec7e0" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>components.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1abde0cfb7cbd64033b3462d65905c5831" kindref="member">src_component</ref><sp/>=<sp/>srccomp.<ref refid="structamrex_1_1SrcComp_1aa5c3f7babca38810fa13e9b419f9649b" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>components.<ref refid="structamrex_1_1NonLocalBC_1_1PackComponents_1ace297f67083473f1a5777f7cfd1a0135" kindref="member">n_components</ref><sp/>=<sp/>numcomp.<ref refid="structamrex_1_1NumComps_1a51d8b50d57ee8a52833c414ae13a5381" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>ApplyDtosAndProjectionOnReciever&lt;DTOS,<sp/>Proj&gt;<sp/>packing{components,<sp/>std::move(dtos),<sp/>std::move(proj)};</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>CommHandler<sp/>handler<sp/>=<sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a7bf19b06a9bab53ac6dea6bfa875af9d" kindref="member">ParallelCopy_nowait</ref>(dest,<sp/>src,<sp/>cmd,<sp/>packing);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1a543ee3c92ebf4b00332dfc86a6364b87" kindref="member">ParallelCopy_finish</ref>(dest,<sp/>std::move(handler),<sp/>cmd,<sp/>packing);</highlight></codeline>
<codeline lineno="868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DTOS<sp/>=<sp/>Identity,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Proj<sp/>=<sp/>Identity&gt;</highlight></codeline>
<codeline lineno="895"><highlight class="normal">EnableIf_t&lt;IsBaseFab&lt;FAB&gt;()<sp/>&amp;&amp;<sp/>IsCallableR&lt;Dim3,<sp/>DTOS,<sp/>Dim3&gt;()<sp/>&amp;&amp;<sp/>IsFabProjection&lt;Proj,<sp/>FAB&gt;()&gt;</highlight></codeline>
<codeline lineno="896" refid="namespaceamrex_1_1NonLocalBC_1a61a26a8c6abd1fb507959f9f745d9ff6" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1ac09ca9edc6d06054f9f1c62d5627c916" kindref="member">ParallelCopy</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1FabArrayBase_1_1CommMetaData" kindref="compound">FabArrayBase::CommMetaData</ref>&amp;<sp/>cmd,</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp,<sp/>DTOS<sp/>dtos<sp/>=<sp/>DTOS{},<sp/>Proj<sp/>proj<sp/>=<sp/>Proj{})<sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1ac09ca9edc6d06054f9f1c62d5627c916" kindref="member">ParallelCopy</ref>(dest,<sp/>src,<sp/>cmd,<sp/>SrcComp(srccomp),<sp/>DestComp(destcomp),<sp/>NumComps(numcomp),<sp/>std::move(dtos),<sp/>std::move(proj));</highlight></codeline>
<codeline lineno="899"><highlight class="normal">}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DTOS<sp/>=<sp/>Identity,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Proj<sp/>=<sp/>Identity&gt;</highlight></codeline>
<codeline lineno="931"><highlight class="normal">EnableIf_t&lt;IsBaseFab&lt;FAB&gt;()<sp/>&amp;&amp;<sp/>IsIndexMapping&lt;DTOS&gt;()<sp/>&amp;&amp;<sp/>IsFabProjection&lt;Proj,<sp/>FAB&gt;(),</highlight></codeline>
<codeline lineno="932"><highlight class="normal">MultiBlockCommMetaData&gt;</highlight></codeline>
<codeline lineno="933" refid="namespaceamrex_1_1NonLocalBC_1a0b89d88ce09c0a99177b355166b76c1c" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1ac09ca9edc6d06054f9f1c62d5627c916" kindref="member">ParallelCopy</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>destbox,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>src,<sp/><ref refid="structamrex_1_1SrcComp" kindref="compound">SrcComp</ref><sp/>srccomp,</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1DestComp" kindref="compound">DestComp</ref><sp/>destcomp,<sp/><ref refid="structamrex_1_1NumComps" kindref="compound">NumComps</ref><sp/>numcomp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>ngrow,<sp/>DTOS<sp/>dtos<sp/>=<sp/>DTOS{},<sp/>Proj<sp/>proj<sp/>=<sp/>Proj{})<sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>MultiBlockCommMetaData<sp/>cmd(dest,<sp/>destbox,<sp/>src,<sp/>ngrow,<sp/>dtos);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1ac09ca9edc6d06054f9f1c62d5627c916" kindref="member">ParallelCopy</ref>(dest,<sp/>src,<sp/>cmd,<sp/>srccomp,<sp/>destcomp,<sp/>numcomp,<sp/>std::move(dtos),<sp/>std::move(proj));</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cmd;</highlight></codeline>
<codeline lineno="938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DTOS<sp/>=<sp/>Identity,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Proj<sp/>=<sp/>Identity&gt;</highlight></codeline>
<codeline lineno="970"><highlight class="normal">EnableIf_t&lt;IsBaseFab&lt;FAB&gt;()<sp/>&amp;&amp;<sp/>IsIndexMapping&lt;DTOS&gt;()<sp/>&amp;&amp;<sp/>IsFabProjection&lt;Proj,<sp/>FAB&gt;(),</highlight></codeline>
<codeline lineno="971"><highlight class="normal">MultiBlockCommMetaData&gt;</highlight></codeline>
<codeline lineno="972" refid="namespaceamrex_1_1NonLocalBC_1ad93adad52db8fb0e6c7f727ecfd8b25a" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1ac09ca9edc6d06054f9f1c62d5627c916" kindref="member">ParallelCopy</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>destbox,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>ngrow,<sp/>DTOS<sp/>dtos<sp/>=<sp/>DTOS{},<sp/>Proj<sp/>proj<sp/>=<sp/>Proj{})<sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1NonLocalBC_1ac09ca9edc6d06054f9f1c62d5627c916" kindref="member">ParallelCopy</ref>(dest,<sp/>destbox,<sp/>src,<sp/>SrcComp(srccomp),<sp/>DestComp(destcomp),<sp/>NumComps(numcomp),<sp/>ngrow,<sp/>std::move(dtos),<sp/>std::move(proj));</highlight></codeline>
<codeline lineno="975"><highlight class="normal">}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rotate90<sp/>fills<sp/>the<sp/>lo-x<sp/>and<sp/>lo-y<sp/>boundary<sp/>regions<sp/>by<sp/>rotating<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="comment">//<sp/>around<sp/>(x=0,y=0)<sp/>by<sp/>90<sp/>degrees<sp/>in<sp/>either<sp/>direction.<sp/><sp/>It<sp/>also<sp/>fills<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="comment">//<sp/>corner<sp/>of<sp/>lo-x<sp/>and<sp/>lo-y<sp/>boundary<sp/>region<sp/>by<sp/>rotating<sp/>the<sp/>data<sp/>by<sp/>180</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight><highlight class="comment">//<sp/>degrees.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB&gt;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1ac572ffb29de7038f4296072c1ecfb79d" kindref="member">Rotate90</ref><sp/>(FabArray&lt;FAB&gt;&amp;<sp/>mf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp,<sp/>IntVect<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>domain);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB&gt;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1ac572ffb29de7038f4296072c1ecfb79d" kindref="member">Rotate90</ref><sp/>(FabArray&lt;FAB&gt;&amp;<sp/>mf,<sp/>Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>domain);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rotate180<sp/>fills<sp/>the<sp/>lo-x<sp/>boundary<sp/>by<sp/>rotating<sp/>the<sp/>data<sp/>around</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(x=0,y=L_y/2)<sp/>by<sp/>180<sp/>degrees.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB&gt;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1ac1490f123094d9379d2b32e133c8a067" kindref="member">Rotate180</ref><sp/>(FabArray&lt;FAB&gt;&amp;<sp/>mf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp,<sp/>IntVect<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>domain);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB&gt;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1ac1490f123094d9379d2b32e133c8a067" kindref="member">Rotate180</ref><sp/>(FabArray&lt;FAB&gt;&amp;<sp/>mf,<sp/>Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>domain);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fill<sp/>the<sp/>polar<sp/>boundaries<sp/>of<sp/>the<sp/>spherical<sp/>coordinates<sp/>(theta,<sp/>phi,<sp/>r).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>lo-x<sp/>boundary<sp/>is<sp/>filled<sp/>with<sp/>f(-x,y)<sp/>=<sp/>f(x,mod(y+pi,2*pi)),<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>hi-x<sp/>boundary<sp/>is<sp/>filled<sp/>with<sp/>f(pi+x,y)<sp/>=<sp/>f(pi-x,mod(y+pi,2*pi)).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB&gt;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1a0a70c208adf8ed71ecbea53ddbbc8e6d" kindref="member">FillPolar</ref><sp/>(FabArray&lt;FAB&gt;&amp;<sp/>mf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp,<sp/>IntVect<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>domain);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB&gt;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><ref refid="namespaceamrex_1_1NonLocalBC_1a0a70c208adf8ed71ecbea53ddbbc8e6d" kindref="member">FillPolar</ref><sp/>(FabArray&lt;FAB&gt;&amp;<sp/>mf,<sp/>Box<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>domain);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__NonLocalBCImpl_8H" kindref="compound">AMReX_NonLocalBCImpl.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.H"/>
  </compounddef>
</doxygen>
