<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData" kind="struct" language="C++" prot="public">
    <compoundname>amrex::NonLocalBC::MultiBlockCommMetaData</compoundname>
    <basecompoundref refid="structamrex_1_1FabArrayBase_1_1CommMetaData" prot="public" virt="non-virtual">amrex::FabArrayBase::CommMetaData</basecompoundref>
    <includes refid="AMReX__NonLocalBC_8H" local="no">AMReX_NonLocalBC.H</includes>
    <sectiondef kind="user-defined">
      <header>Constructors</header>
      <memberdef kind="function" id="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData_1a07bee095114ca505ad4c3a70de926628" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DTOS</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;<ref refid="structamrex_1_1NonLocalBC_1_1IsIndexMapping" kindref="compound">IsIndexMapping</ref>&lt;DTOS&gt;::value&gt;</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>amrex::NonLocalBC::MultiBlockCommMetaData::MultiBlockCommMetaData</definition>
        <argsstring>(const FabArrayBase &amp;dst, const Box &amp;dstbox, const FabArrayBase &amp;src, const IntVect &amp;ngrow, DTOS const &amp;dtos)</argsstring>
        <name>MultiBlockCommMetaData</name>
        <qualifiedname>amrex::NonLocalBC::MultiBlockCommMetaData::MultiBlockCommMetaData</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1FabArrayBase" kindref="compound">FabArrayBase</ref> &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a5e922fb76ff2eb645844783ad65d1490" kindref="member">Box</ref> &amp;</type>
          <declname>dstbox</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1FabArrayBase" kindref="compound">FabArrayBase</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a95101764f5ec64cd1dd6e55614702cdb" kindref="member">IntVect</ref> &amp;</type>
          <declname>ngrow</declname>
        </param>
        <param>
          <type>DTOS const &amp;</type>
          <declname>dtos</declname>
        </param>
        <briefdescription>
<para>Build global meta data by calling the <ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData_1a7c8d153a059ab7a3d4667268e44b37bd" kindref="member">define()</ref> member function. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData_1a7c8d153a059ab7a3d4667268e44b37bd" kindref="member">MultiBlockCommMetaData::define</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.H" line="224" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData_1ab10c5e2ad3652e1739eaaa8577ec551c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DTOS</type>
          </param>
          <param>
            <type>typename</type>
            <defval>std::enable_if_t&lt;<ref refid="structamrex_1_1NonLocalBC_1_1IsIndexMapping" kindref="compound">IsIndexMapping</ref>&lt;DTOS&gt;::value&gt;</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>amrex::NonLocalBC::MultiBlockCommMetaData::MultiBlockCommMetaData</definition>
        <argsstring>(const BoxArray &amp;dstba, const DistributionMapping &amp;dstdm, const Box &amp;dstbox, const BoxArray &amp;srcba, const DistributionMapping &amp;srcdm, const IntVect &amp;ngrow, DTOS const &amp;dtos)</argsstring>
        <name>MultiBlockCommMetaData</name>
        <qualifiedname>amrex::NonLocalBC::MultiBlockCommMetaData::MultiBlockCommMetaData</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>dstba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dstdm</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a5e922fb76ff2eb645844783ad65d1490" kindref="member">Box</ref> &amp;</type>
          <declname>dstbox</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>srcba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>srcdm</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a95101764f5ec64cd1dd6e55614702cdb" kindref="member">IntVect</ref> &amp;</type>
          <declname>ngrow</declname>
        </param>
        <param>
          <type>DTOS const &amp;</type>
          <declname>dtos</declname>
        </param>
        <briefdescription>
<para>Build global meta data by calling the <ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData_1a7c8d153a059ab7a3d4667268e44b37bd" kindref="member">define()</ref> member function. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData_1a7c8d153a059ab7a3d4667268e44b37bd" kindref="member">MultiBlockCommMetaData::define</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.H" line="232" column="5"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Manipulators</header>
      <memberdef kind="function" id="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData_1a7c8d153a059ab7a3d4667268e44b37bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DTOS</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; <ref refid="structamrex_1_1NonLocalBC_1_1IsIndexMapping" kindref="compound">IsIndexMapping</ref>&lt; DTOS &gt;::value &gt;</type>
        <definition>std::enable_if_t&lt; IsIndexMapping&lt; DTOS &gt;::value &gt; amrex::NonLocalBC::MultiBlockCommMetaData::define</definition>
        <argsstring>(const BoxArray &amp;dstba, const DistributionMapping &amp;dstdm, const Box &amp;dstbox, const BoxArray &amp;srcba, const DistributionMapping &amp;srcdm, const IntVect &amp;ngrow, DTOS const &amp;dtos)</argsstring>
        <name>define</name>
        <qualifiedname>amrex::NonLocalBC::MultiBlockCommMetaData::define</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>dstba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dstdm</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a5e922fb76ff2eb645844783ad65d1490" kindref="member">Box</ref> &amp;</type>
          <declname>dstbox</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>srcba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>srcdm</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a95101764f5ec64cd1dd6e55614702cdb" kindref="member">IntVect</ref> &amp;</type>
          <declname>ngrow</declname>
        </param>
        <param>
          <type>DTOS const &amp;</type>
          <declname>dtos</declname>
        </param>
        <briefdescription>
<para>Build global meta data that is being used to identify send and recv dependencies in communication routines. </para>
        </briefdescription>
        <detaileddescription>
<para>This call is quadratic in the number of boxes, i.e. it is in O(dstba.size() * srcba.size()). Therefore, it might be wise to cache the construction of this object to minimize its computation.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>DTOS</parametername>
</parameternamelist>
<parameterdescription>
<para>This parameter needs to satisfy <ref refid="structamrex_1_1NonLocalBC_1_1IsIndexMapping" kindref="compound">IsIndexMapping</ref> and HasInverseImage.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dstba</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination box array.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dstdm</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination distribution mapping.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dstbox</parametername>
</parameternamelist>
<parameterdescription>
<para>The box that will be filled and that lives in the destination space.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcba</parametername>
</parameternamelist>
<parameterdescription>
<para>The source box array.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">srcdm</parametername>
</parameternamelist>
<parameterdescription>
<para>The source distribution mapping.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ngrow</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of ghost cells that shall be considered when filling data.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dtos</parametername>
</parameternamelist>
<parameterdescription>
<para>The dest to source index mapping that has an inverse image.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Nothing. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.H" line="264" column="5"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>This is the index mapping based on the DTOS MultiBlockDestToSrc. </para>
    </briefdescription>
    <detaileddescription>
<para>This class stores data dependencies for an inter-block communication.</para>
<para>In communication between two blocks one might need to do an index transformation from one block to another. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>amrex::FabArrayBase::CommMetaData</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CommMetaData"/>
      </node>
      <node id="1">
        <label>amrex::NonLocalBC::MultiBlockCommMetaData</label>
        <link refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>K</label>
      </node>
      <node id="5">
        <label>T</label>
      </node>
      <node id="2">
        <label>amrex::FabArrayBase::CommMetaData</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CommMetaData"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_LocTags</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_RcvTags</edgelabel>
          <edgelabel>m_SndTags</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::NonLocalBC::MultiBlockCommMetaData</label>
        <link refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::unique_ptr&lt; CopyComTagsContainer &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::unique_ptr&lt; MapOfCopyComTagContainers &gt;</label>
        <childnode refid="7" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.H" line="216" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.H" bodystart="216" bodyend="267"/>
    <listofallmembers>
      <member refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData_1a7c8d153a059ab7a3d4667268e44b37bd" prot="public" virt="non-virtual"><scope>amrex::NonLocalBC::MultiBlockCommMetaData</scope><name>define</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1CommMetaData_1ac9cf38f68949932d8e7815a7caffc7c8" prot="public" virt="non-virtual"><scope>amrex::NonLocalBC::MultiBlockCommMetaData</scope><name>m_LocTags</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1CommMetaData_1a8a30e2336976ffe878c2c6558ecce70d" prot="public" virt="non-virtual"><scope>amrex::NonLocalBC::MultiBlockCommMetaData</scope><name>m_RcvTags</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1CommMetaData_1a9faedeb4a7bf786a1143c2f4264369a0" prot="public" virt="non-virtual"><scope>amrex::NonLocalBC::MultiBlockCommMetaData</scope><name>m_SndTags</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1CommMetaData_1a0d33ba955e754e4749cbb8337082bb0d" prot="public" virt="non-virtual"><scope>amrex::NonLocalBC::MultiBlockCommMetaData</scope><name>m_threadsafe_loc</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1CommMetaData_1a45f8bde679589b1086b07cc3faba6740" prot="public" virt="non-virtual"><scope>amrex::NonLocalBC::MultiBlockCommMetaData</scope><name>m_threadsafe_rcv</name></member>
      <member refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData_1a07bee095114ca505ad4c3a70de926628" prot="public" virt="non-virtual"><scope>amrex::NonLocalBC::MultiBlockCommMetaData</scope><name>MultiBlockCommMetaData</name></member>
      <member refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData_1ab10c5e2ad3652e1739eaaa8577ec551c" prot="public" virt="non-virtual"><scope>amrex::NonLocalBC::MultiBlockCommMetaData</scope><name>MultiBlockCommMetaData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
