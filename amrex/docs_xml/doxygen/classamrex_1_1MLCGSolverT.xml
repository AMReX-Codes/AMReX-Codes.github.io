<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1MLCGSolverT" kind="class" language="C++" prot="public">
    <compoundname>amrex::MLCGSolverT</compoundname>
    <includes refid="AMReX__MLCGSolver_8H" local="no">AMReX_MLCGSolver.H</includes>
    <templateparamlist>
      <param>
        <type>typename MF</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classamrex_1_1MLCGSolverT_1abfa2bc8d81a4f4c9a4a05f82ab18312f" prot="public" static="no" strong="yes">
        <type></type>
        <name>Type</name>
        <enumvalue id="classamrex_1_1MLCGSolverT_1abfa2bc8d81a4f4c9a4a05f82ab18312fa17f477cd947340d28b9a4d6f49c1e43b" prot="public">
          <name>BiCGStab</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classamrex_1_1MLCGSolverT_1abfa2bc8d81a4f4c9a4a05f82ab18312fa5202c6586cac8bee468e86d1ff854231" prot="public">
          <name>CG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="18" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1MLCGSolverT_1aa451ec4b622e13b46ecf2a03730b4cc4" prot="public" static="no">
        <type>typename MF::fab_type</type>
        <definition>using amrex::MLCGSolverT&lt; MF &gt;::FAB =  typename MF::fab_type</definition>
        <argsstring></argsstring>
        <name>FAB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="15" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1MLCGSolverT_1a715cbdd232dde9c1915da31bb37418ff" prot="public" static="no">
        <type>typename MF::value_type</type>
        <definition>using amrex::MLCGSolverT&lt; MF &gt;::RT =  typename MF::value_type</definition>
        <argsstring></argsstring>
        <name>RT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="16" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1MLCGSolverT_1a16d88d529344d6a6f99d66a99e122443" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLLinOpT" kindref="compound">MLLinOpT</ref>&lt; MF &gt; &amp;</type>
        <definition>MLLinOpT&lt;MF&gt;&amp; amrex::MLCGSolverT&lt; MF &gt;::Lp</definition>
        <argsstring></argsstring>
        <name>Lp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="57" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLCGSolverT_1af2a29b081fce0743089c448703b6da3a" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLCGSolverT_1abfa2bc8d81a4f4c9a4a05f82ab18312f" kindref="member">Type</ref></type>
        <definition>Type amrex::MLCGSolverT&lt; MF &gt;::solver_type</definition>
        <argsstring></argsstring>
        <name>solver_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="58" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLCGSolverT_1a68c9f3778780bf9f4b88f0a8cb3f34eb" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>const int amrex::MLCGSolverT&lt; MF &gt;::amrlev</definition>
        <argsstring></argsstring>
        <name>amrlev</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="59" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLCGSolverT_1a3210f3ff9e55a7746a24d849cf9c39b2" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>const int amrex::MLCGSolverT&lt; MF &gt;::mglev</definition>
        <argsstring></argsstring>
        <name>mglev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="60" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLCGSolverT_1a0f7eb83547164209035b1dd1d8a5409c" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLCGSolverT&lt; MF &gt;::verbose</definition>
        <argsstring></argsstring>
        <name>verbose</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="61" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLCGSolverT_1a98e289422bb9545526d029a73b9df214" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLCGSolverT&lt; MF &gt;::maxiter</definition>
        <argsstring></argsstring>
        <name>maxiter</name>
        <initializer>= 100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="62" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLCGSolverT_1a3389add6565681ffce22be42b4101fe2" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></type>
        <definition>IntVect amrex::MLCGSolverT&lt; MF &gt;::nghost</definition>
        <argsstring></argsstring>
        <name>nghost</name>
        <initializer>= <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="63" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLCGSolverT_1a0fa5976e3bee03e63b07a0848c74380f" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLCGSolverT&lt; MF &gt;::iter</definition>
        <argsstring></argsstring>
        <name>iter</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="64" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1MLCGSolverT_1ac9a3353d649e44294c57d703d55dcdcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MLCGSolverT&lt; MF &gt;::MLCGSolverT</definition>
        <argsstring>(MLLinOpT&lt; MF &gt; &amp;_lp, Type _typ=Type::BiCGStab)</argsstring>
        <name>MLCGSolverT</name>
        <param>
          <type><ref refid="classamrex_1_1MLLinOpT" kindref="compound">MLLinOpT</ref>&lt; MF &gt; &amp;</type>
          <declname>_lp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLCGSolverT_1abfa2bc8d81a4f4c9a4a05f82ab18312f" kindref="member">Type</ref></type>
          <declname>_typ</declname>
          <defval><ref refid="classamrex_1_1MLCGSolverT_1abfa2bc8d81a4f4c9a4a05f82ab18312fa17f477cd947340d28b9a4d6f49c1e43b" kindref="member">Type::BiCGStab</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="20" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCGSolverT_1afe5724c3c9591ad70c477c8c08ac5cc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MLCGSolverT&lt; MF &gt;::~MLCGSolverT</definition>
        <argsstring>()</argsstring>
        <name>~MLCGSolverT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="21" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCGSolverT_1af5d3a1f9df449bcf61618ab27c1c4b03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MLCGSolverT&lt; MF &gt;::MLCGSolverT</definition>
        <argsstring>(const MLCGSolverT&lt; MF &gt; &amp;rhs)=delete</argsstring>
        <name>MLCGSolverT</name>
        <param>
          <type>const <ref refid="classamrex_1_1MLCGSolverT" kindref="compound">MLCGSolverT</ref>&lt; MF &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="23" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCGSolverT_1a877dda86118302b3f3b08fed8db57b03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MLCGSolverT&lt; MF &gt;::MLCGSolverT</definition>
        <argsstring>(MLCGSolverT&lt; MF &gt; &amp;&amp;rhs)=delete</argsstring>
        <name>MLCGSolverT</name>
        <param>
          <type><ref refid="classamrex_1_1MLCGSolverT" kindref="compound">MLCGSolverT</ref>&lt; MF &gt; &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="24" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCGSolverT_1a1e65cb69c133e5230dead4ce4894015b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLCGSolverT" kindref="compound">MLCGSolverT</ref>&lt; MF &gt; &amp;</type>
        <definition>MLCGSolverT&lt;MF&gt;&amp; amrex::MLCGSolverT&lt; MF &gt;::operator=</definition>
        <argsstring>(const MLCGSolverT&lt; MF &gt; &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1MLCGSolverT" kindref="compound">MLCGSolverT</ref>&lt; MF &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="25" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCGSolverT_1a7685399dae192cd7ab6ec2dfcf0c4fd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLCGSolverT" kindref="compound">MLCGSolverT</ref>&lt; MF &gt; &amp;</type>
        <definition>MLCGSolverT&lt;MF&gt;&amp; amrex::MLCGSolverT&lt; MF &gt;::operator=</definition>
        <argsstring>(MLCGSolverT&lt; MF &gt; &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1MLCGSolverT" kindref="compound">MLCGSolverT</ref>&lt; MF &gt; &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="26" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCGSolverT_1a1e6d43c5befb02185a364de58415471b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLCGSolverT&lt; MF &gt;::setSolver</definition>
        <argsstring>(Type _typ) noexcept</argsstring>
        <name>setSolver</name>
        <param>
          <type><ref refid="classamrex_1_1MLCGSolverT_1abfa2bc8d81a4f4c9a4a05f82ab18312f" kindref="member">Type</ref></type>
          <declname>_typ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="28" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCGSolverT_1aad8e08ec70f7e680e43b8fa108a08e39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLCGSolverT&lt; MF &gt;::solve</definition>
        <argsstring>(MF &amp;solnL, const MF &amp;rhsL, RT eps_rel, RT eps_abs)</argsstring>
        <name>solve</name>
        <param>
          <type>MF &amp;</type>
          <declname>solnL</declname>
        </param>
        <param>
          <type>const MF &amp;</type>
          <declname>rhsL</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLCGSolverT_1a715cbdd232dde9c1915da31bb37418ff" kindref="member">RT</ref></type>
          <declname>eps_rel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLCGSolverT_1a715cbdd232dde9c1915da31bb37418ff" kindref="member">RT</ref></type>
          <declname>eps_abs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>solve the system, Lp(solnL)=rhsL to relative err, tolerance Returns an int indicating success or failure. 0 means success 1 means failed for loss of precision 2 means iterations exceeded </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="37" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="76" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCGSolverT_1a2579b4ef8718da67e5d5e499b4c484c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLCGSolverT&lt; MF &gt;::setVerbose</definition>
        <argsstring>(int _verbose)</argsstring>
        <name>setVerbose</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>_verbose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="39" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCGSolverT_1ad7cd32d077461754bae70ed300d440a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLCGSolverT&lt; MF &gt;::getVerbose</definition>
        <argsstring>() const</argsstring>
        <name>getVerbose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="40" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCGSolverT_1adaf95795df6022fbffaeea323e4df3e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLCGSolverT&lt; MF &gt;::setMaxIter</definition>
        <argsstring>(int _maxiter)</argsstring>
        <name>setMaxIter</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>_maxiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="42" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCGSolverT_1a957b574059224be85b8085912c5b7aab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLCGSolverT&lt; MF &gt;::getMaxIter</definition>
        <argsstring>() const</argsstring>
        <name>getMaxIter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="43" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCGSolverT_1ac578fcc67a6e49ae96d7578ce36c508f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLCGSolverT&lt; MF &gt;::setNGhost</definition>
        <argsstring>(int _nghost)</argsstring>
        <name>setNGhost</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>_nghost</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="45" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCGSolverT_1a3180b6fc90c59d409dd729364cac7423" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLCGSolverT&lt; MF &gt;::getNGhost</definition>
        <argsstring>()</argsstring>
        <name>getNGhost</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="46" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCGSolverT_1a0763a66aaeb9436c92418c9438af1348" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLCGSolverT_1a715cbdd232dde9c1915da31bb37418ff" kindref="member">RT</ref></type>
        <definition>auto amrex::MLCGSolverT&lt; MF &gt;::dotxy</definition>
        <argsstring>(const MF &amp;r, const MF &amp;z, bool local=false)</argsstring>
        <name>dotxy</name>
        <param>
          <type>const MF &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const MF &amp;</type>
          <declname>z</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>local</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="48" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="387" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCGSolverT_1a65945094568d6e9ab21b7b1852c4afd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLCGSolverT_1a715cbdd232dde9c1915da31bb37418ff" kindref="member">RT</ref></type>
        <definition>auto amrex::MLCGSolverT&lt; MF &gt;::norm_inf</definition>
        <argsstring>(const MF &amp;res, bool local=false)</argsstring>
        <name>norm_inf</name>
        <param>
          <type>const MF &amp;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>local</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="49" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="398" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCGSolverT_1a7e4df044793281aa42b1943cb720e3c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLCGSolverT&lt; MF &gt;::solve_bicgstab</definition>
        <argsstring>(MF &amp;solnL, const MF &amp;rhsL, RT eps_rel, RT eps_abs)</argsstring>
        <name>solve_bicgstab</name>
        <param>
          <type>MF &amp;</type>
          <declname>solnL</declname>
        </param>
        <param>
          <type>const MF &amp;</type>
          <declname>rhsL</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLCGSolverT_1a715cbdd232dde9c1915da31bb37418ff" kindref="member">RT</ref></type>
          <declname>eps_rel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLCGSolverT_1a715cbdd232dde9c1915da31bb37418ff" kindref="member">RT</ref></type>
          <declname>eps_abs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="50" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="87" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCGSolverT_1a56708cd7b832c09b21bb39fb35d61c5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLCGSolverT&lt; MF &gt;::solve_cg</definition>
        <argsstring>(MF &amp;solnL, const MF &amp;rhsL, RT eps_rel, RT eps_abs)</argsstring>
        <name>solve_cg</name>
        <param>
          <type>MF &amp;</type>
          <declname>solnL</declname>
        </param>
        <param>
          <type>const MF &amp;</type>
          <declname>rhsL</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLCGSolverT_1a715cbdd232dde9c1915da31bb37418ff" kindref="member">RT</ref></type>
          <declname>eps_rel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLCGSolverT_1a715cbdd232dde9c1915da31bb37418ff" kindref="member">RT</ref></type>
          <declname>eps_abs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="51" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="258" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLCGSolverT_1a566d8e16eab81e003fdf43b18112836b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLCGSolverT&lt; MF &gt;::getNumIters</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getNumIters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="53" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="53" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="2" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::MLCGSolverT&lt; MF &gt;</label>
        <link refid="classamrex_1_1MLCGSolverT"/>
        <childnode refid="2" relation="usage">
          <edgelabel>nghost</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" line="11" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H" bodystart="12" bodyend="65"/>
    <listofallmembers>
      <member refid="classamrex_1_1MLCGSolverT_1a68c9f3778780bf9f4b88f0a8cb3f34eb" prot="private" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>amrlev</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1a0763a66aaeb9436c92418c9438af1348" prot="public" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>dotxy</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1aa451ec4b622e13b46ecf2a03730b4cc4" prot="public" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>FAB</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1a957b574059224be85b8085912c5b7aab" prot="public" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>getMaxIter</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1a3180b6fc90c59d409dd729364cac7423" prot="public" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>getNGhost</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1a566d8e16eab81e003fdf43b18112836b" prot="public" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>getNumIters</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1ad7cd32d077461754bae70ed300d440a6" prot="public" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>getVerbose</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1a0fa5976e3bee03e63b07a0848c74380f" prot="private" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>iter</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1a16d88d529344d6a6f99d66a99e122443" prot="private" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>Lp</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1a98e289422bb9545526d029a73b9df214" prot="private" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>maxiter</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1a3210f3ff9e55a7746a24d849cf9c39b2" prot="private" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>mglev</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1ac9a3353d649e44294c57d703d55dcdcd" prot="public" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>MLCGSolverT</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1af5d3a1f9df449bcf61618ab27c1c4b03" prot="public" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>MLCGSolverT</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1a877dda86118302b3f3b08fed8db57b03" prot="public" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>MLCGSolverT</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1a3389add6565681ffce22be42b4101fe2" prot="private" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>nghost</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1a65945094568d6e9ab21b7b1852c4afd8" prot="public" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>norm_inf</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1a1e65cb69c133e5230dead4ce4894015b" prot="public" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>operator=</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1a7685399dae192cd7ab6ec2dfcf0c4fd7" prot="public" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>operator=</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1a715cbdd232dde9c1915da31bb37418ff" prot="public" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>RT</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1adaf95795df6022fbffaeea323e4df3e0" prot="public" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>setMaxIter</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1ac578fcc67a6e49ae96d7578ce36c508f" prot="public" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>setNGhost</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1a1e6d43c5befb02185a364de58415471b" prot="public" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>setSolver</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1a2579b4ef8718da67e5d5e499b4c484c1" prot="public" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>setVerbose</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1aad8e08ec70f7e680e43b8fa108a08e39" prot="public" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>solve</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1a7e4df044793281aa42b1943cb720e3c0" prot="public" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>solve_bicgstab</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1a56708cd7b832c09b21bb39fb35d61c5c" prot="public" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>solve_cg</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1af2a29b081fce0743089c448703b6da3a" prot="private" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>solver_type</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1abfa2bc8d81a4f4c9a4a05f82ab18312f" prot="public" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>Type</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1a0f7eb83547164209035b1dd1d8a5409c" prot="private" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>verbose</name></member>
      <member refid="classamrex_1_1MLCGSolverT_1afe5724c3c9591ad70c477c8c08ac5cc8" prot="public" virt="non-virtual"><scope>amrex::MLCGSolverT</scope><name>~MLCGSolverT</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
