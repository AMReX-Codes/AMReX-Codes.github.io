<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classamrex_1_1InterpBndryDataT" kind="class" language="C++" prot="public">
    <compoundname>amrex::InterpBndryDataT</compoundname>
    <basecompoundref refid="classamrex_1_1BndryDataT" prot="public" virt="non-virtual">amrex::BndryDataT&lt; MF &gt;</basecompoundref>
    <derivedcompoundref refid="classamrex_1_1MLMGBndryT" prot="public" virt="non-virtual">amrex::MLMGBndryT&lt; MF &gt;</derivedcompoundref>
    <includes refid="AMReX__InterpBndryData_8H" local="no">AMReX_InterpBndryData.H</includes>
    <templateparamlist>
      <param>
        <type>typename MF</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1InterpBndryDataT_1ad2de450062127ddfed6337961fdcf3c0" prot="public" static="no">
        <type>typename MF::value_type</type>
        <definition>using amrex::InterpBndryDataT&lt; MF &gt;::value_type =  typename MF::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>amrex::InterpBndryDataT::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H" line="43" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H" bodystart="43" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1InterpBndryDataT_1a258eb38558243a71923bbc3fc82990ba" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int amrex::InterpBndryDataT&lt; MF &gt;::IBD_max_order_DEF</definition>
        <argsstring></argsstring>
        <name>IBD_max_order_DEF</name>
        <qualifiedname>amrex::InterpBndryDataT::IBD_max_order_DEF</qualifiedname>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H" line="115" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H" bodystart="115" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1InterpBndryDataT_1a71ecda5638e531eb2f2c81496b3a3422" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::InterpBndryDataT&lt; MF &gt;::InterpBndryDataT</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>InterpBndryDataT</name>
        <qualifiedname>amrex::InterpBndryDataT::InterpBndryDataT</qualifiedname>
        <briefdescription>
<para>default constructor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H" line="48" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1InterpBndryDataT_1ab3867a4fd0a4d8e7eba5d2847576bd74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::InterpBndryDataT&lt; MF &gt;::InterpBndryDataT</definition>
        <argsstring>(const BoxArray &amp;_grids, const DistributionMapping &amp;_dmap, int _ncomp, const Geometry &amp;geom)</argsstring>
        <name>InterpBndryDataT</name>
        <qualifiedname>amrex::InterpBndryDataT::InterpBndryDataT</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>_grids</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>_dmap</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_ncomp</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
<para>constructor for given <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref>, etc </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_grids</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_dmap</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_ncomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>geom</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H" line="58" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H" bodystart="120" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1InterpBndryDataT_1a62be51bb2441bc950b73e4ced3870ed9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::InterpBndryDataT&lt; MF &gt;::~InterpBndryDataT</definition>
        <argsstring>()=default</argsstring>
        <name>~InterpBndryDataT</name>
        <qualifiedname>amrex::InterpBndryDataT::~InterpBndryDataT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H" line="63" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1InterpBndryDataT_1aca339f6cfefd2b60592adb0bb79a01ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::InterpBndryDataT&lt; MF &gt;::InterpBndryDataT</definition>
        <argsstring>(const InterpBndryDataT&lt; MF &gt; &amp;rhs)=delete</argsstring>
        <name>InterpBndryDataT</name>
        <qualifiedname>amrex::InterpBndryDataT::InterpBndryDataT</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1InterpBndryDataT" kindref="compound">InterpBndryDataT</ref>&lt; MF &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H" line="65" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1InterpBndryDataT_1a58930dee10ca630b2f499dc6f20aa0ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::InterpBndryDataT&lt; MF &gt;::InterpBndryDataT</definition>
        <argsstring>(InterpBndryDataT&lt; MF &gt; &amp;&amp;rhs)=delete</argsstring>
        <name>InterpBndryDataT</name>
        <qualifiedname>amrex::InterpBndryDataT::InterpBndryDataT</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1InterpBndryDataT" kindref="compound">InterpBndryDataT</ref>&lt; MF &gt; &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H" line="66" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1InterpBndryDataT_1ad9954b0c7811f48d093edb8810e6422d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1InterpBndryDataT" kindref="compound">InterpBndryDataT</ref>&lt; MF &gt; &amp;</type>
        <definition>InterpBndryDataT&lt; MF &gt; &amp; amrex::InterpBndryDataT&lt; MF &gt;::operator=</definition>
        <argsstring>(const InterpBndryDataT&lt; MF &gt; &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::InterpBndryDataT::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1InterpBndryDataT" kindref="compound">InterpBndryDataT</ref>&lt; MF &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H" line="67" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1InterpBndryDataT_1a3c85030c4d51afacd2d7fe15effa1fc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1InterpBndryDataT" kindref="compound">InterpBndryDataT</ref>&lt; MF &gt; &amp;</type>
        <definition>InterpBndryDataT&lt; MF &gt; &amp; amrex::InterpBndryDataT&lt; MF &gt;::operator=</definition>
        <argsstring>(InterpBndryDataT&lt; MF &gt; &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::InterpBndryDataT::operator=</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1InterpBndryDataT" kindref="compound">InterpBndryDataT</ref>&lt; MF &gt; &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H" line="68" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1InterpBndryDataT_1a24af38cde0573af0a4557b5e165690ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::InterpBndryDataT&lt; MF &gt;::setPhysBndryValues</definition>
        <argsstring>(const MF &amp;mf, int mf_start, int bnd_start, int num_comp)</argsstring>
        <name>setPhysBndryValues</name>
        <qualifiedname>amrex::InterpBndryDataT::setPhysBndryValues</qualifiedname>
        <param>
          <type>const MF &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mf_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bnd_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_comp</declname>
        </param>
        <briefdescription>
<para>Set bndry values at physical boundaries. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mf</parametername>
</parameternamelist>
<parameterdescription>
<para>MF containing physical boundary values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mf_start</parametername>
</parameternamelist>
<parameterdescription>
<para>starting component of the data in MF </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bnd_start</parametername>
</parameternamelist>
<parameterdescription>
<para>starting component in this boundary register </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_comp</parametername>
</parameternamelist>
<parameterdescription>
<para>number of components </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H" line="78" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H" bodystart="130" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1InterpBndryDataT_1accdac636c68436e7163d72917cba76c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::InterpBndryDataT&lt; MF &gt;::setBndryValues</definition>
        <argsstring>(BndryRegisterT&lt; MF &gt; const &amp;crse, int c_start, const MF &amp;fine, int f_start, int bnd_start, int num_comp, const IntVect &amp;ratio, int max_order=IBD_max_order_DEF, int max_width=2)</argsstring>
        <name>setBndryValues</name>
        <qualifiedname>amrex::InterpBndryDataT::setBndryValues</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1BndryRegisterT" kindref="compound">BndryRegisterT</ref>&lt; MF &gt; const &amp;</type>
          <declname>crse</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c_start</declname>
        </param>
        <param>
          <type>const MF &amp;</type>
          <declname>fine</declname>
        </param>
        <param>
          <type>int</type>
          <declname>f_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bnd_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_comp</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a95101764f5ec64cd1dd6e55614702cdb" kindref="member">IntVect</ref> &amp;</type>
          <declname>ratio</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_order</declname>
          <defval><ref refid="classamrex_1_1InterpBndryDataT_1a258eb38558243a71923bbc3fc82990ba" kindref="member">IBD_max_order_DEF</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>max_width</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
<para>Sset bndry values at coarse/fine and physical boundaries. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>crse</parametername>
</parameternamelist>
<parameterdescription>
<para>BndryRegister storing coarse level data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c_start</parametername>
</parameternamelist>
<parameterdescription>
<para>starting component of the coarse data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fine</parametername>
</parameternamelist>
<parameterdescription>
<para>MF containing physical boundary values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f_start</parametername>
</parameternamelist>
<parameterdescription>
<para>starting component of the fine data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bnd_start</parametername>
</parameternamelist>
<parameterdescription>
<para>starting component in this InterpBndryData </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_comp</parametername>
</parameternamelist>
<parameterdescription>
<para>number of component </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ratio</parametername>
</parameternamelist>
<parameterdescription>
<para>refinement ratio </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_order</parametername>
</parameternamelist>
<parameterdescription>
<para>interpolation order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_width</parametername>
</parameternamelist>
<parameterdescription>
<para>max width of the interpolation stencil </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H" line="93" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H" bodystart="163" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1InterpBndryDataT_1a46045099a99335613063cba938a27623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::InterpBndryDataT&lt; MF &gt;::updateBndryValues</definition>
        <argsstring>(BndryRegisterT&lt; MF &gt; &amp;crse, int c_start, int bnd_start, int num_comp, const IntVect &amp;ratio, int max_order=IBD_max_order_DEF, int max_width=2)</argsstring>
        <name>updateBndryValues</name>
        <qualifiedname>amrex::InterpBndryDataT::updateBndryValues</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1BndryRegisterT" kindref="compound">BndryRegisterT</ref>&lt; MF &gt; &amp;</type>
          <declname>crse</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bnd_start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_comp</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a95101764f5ec64cd1dd6e55614702cdb" kindref="member">IntVect</ref> &amp;</type>
          <declname>ratio</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_order</declname>
          <defval><ref refid="classamrex_1_1InterpBndryDataT_1a258eb38558243a71923bbc3fc82990ba" kindref="member">IBD_max_order_DEF</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>max_width</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
<para>Update boundary values at coarse/fine boundaries. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>crse</parametername>
</parameternamelist>
<parameterdescription>
<para>BndryRegister storing coarse level data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c_start</parametername>
</parameternamelist>
<parameterdescription>
<para>starting component of the coarse data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bnd_start</parametername>
</parameternamelist>
<parameterdescription>
<para>starting component in this InterpBndryData </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_comp</parametername>
</parameternamelist>
<parameterdescription>
<para>number of component </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ratio</parametername>
</parameternamelist>
<parameterdescription>
<para>refinement ratio </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_order</parametername>
</parameternamelist>
<parameterdescription>
<para>interpolation order </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_width</parametername>
</parameternamelist>
<parameterdescription>
<para>max width of the interpolation stencil </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H" line="108" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H" bodystart="265" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1InterpBndryDataT_1a772640cb8d0030c7b6e69714d055d8e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::InterpBndryDataT&lt; MF &gt;::setHomogValues</definition>
        <argsstring>()</argsstring>
        <name>setHomogValues</name>
        <qualifiedname>amrex::InterpBndryDataT::setHomogValues</qualifiedname>
        <briefdescription>
<para>Set boundary values to zero. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H" line="112" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H" bodystart="274" bodyend="277"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>An InterpBndryData object adds to a BndryData object the ability to manipulate and set the data stored in the boundary cells. </para>
    </briefdescription>
    <detaileddescription>
<para>The InterpBndryData class is a class derived from BndryData. It is intended to provide a more physical method for filling boundary-related data. Boundary values in a BndryData object are stored in FabSets around each grid in the domain, and the InterpBndryData class provides a mechanism for filling these FabSets, consistent with AMR-like numerical discretizations. When asked to set its boundary values, an InterpBndryData object:</para>
<para>Fills with physical boundary values if the FAB is on the domain boundary - the corresponding values are presumed to be stored in the ghost cells of a <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> given to the boundary filling routine</para>
<para>Fills on intersection with data from the VALID region of the input <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>, ensuring that adjacent FABs use consistent data at their intersection, and otherwise,</para>
<para>Fills with values interpolated from a coarser FAB that bounds the cells that do not meet the above two criteria </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>amrex::BndryDataT&lt; MF &gt;</label>
        <link refid="classamrex_1_1BndryDataT"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>amrex::BndryRegisterT&lt; MF &gt;</label>
        <link refid="classamrex_1_1BndryRegisterT"/>
      </node>
      <node id="1">
        <label>amrex::InterpBndryDataT&lt; MF &gt;</label>
        <link refid="classamrex_1_1InterpBndryDataT"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>amrex::MLMGBndryT&lt; MF &gt;</label>
        <link refid="classamrex_1_1MLMGBndryT"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="21">
        <label>amrex::BoxND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1BoxND"/>
      </node>
      <node id="63">
        <label>amrex::GpuArray&lt; ParticleReal, 3 &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="9">
        <label>amrex::IndexTypeND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1IndexTypeND"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>amrex::IntVectND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="30">
        <label>K</label>
      </node>
      <node id="55">
        <label>amrex::LayoutData&lt; RealTuple &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>amrex::LayoutData&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>T</label>
      </node>
      <node id="56">
        <label>amrex::Vector&lt; RealTuple &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="57" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>amrex::Vector&lt; amrex::BoxND &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
      </node>
      <node id="58">
        <label>amrex::Vector&lt; amrex::MultiMask &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="59" relation="public-inheritance">
        </childnode>
      </node>
      <node id="53">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="41" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="18" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="15" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="12" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="5">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="6" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="7" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::BndryDataT&lt; MF &gt;</label>
        <link refid="classamrex_1_1BndryDataT"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>bcond</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>bcloc</edgelabel>
        </childnode>
        <childnode refid="58" relation="usage">
          <edgelabel>masks</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>amrex::BndryRegisterT&lt; MF &gt;</label>
        <link refid="classamrex_1_1BndryRegisterT"/>
        <childnode refid="4" relation="usage">
          <edgelabel>grids</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="5" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="17" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="49">
        <label>amrex::BoxIndexerND&lt; dim &gt;</label>
        <link refid="structamrex_1_1BoxIndexerND"/>
        <childnode refid="50" relation="usage">
          <edgelabel>fdm</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>amrex::BoxList</label>
        <link refid="classamrex_1_1BoxList"/>
        <childnode refid="18" relation="usage">
          <edgelabel>m_lbox</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>amrex::CellIndexEnum</label>
        <link refid="structamrex_1_1CellIndexEnum"/>
      </node>
      <node id="61">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
      </node>
      <node id="37">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
        <childnode refid="38" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="40" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>m_ownership</edgelabel>
        </childnode>
      </node>
      <node id="45">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="39" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="23" relation="usage">
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>m_TheCPCache</edgelabel>
          <edgelabel>m_TheCrseFineCache</edgelabel>
          <edgelabel>m_TheFBCache</edgelabel>
          <edgelabel>m_TheFillPatchCache</edgelabel>
          <edgelabel>m_ThePolarBCache</edgelabel>
          <edgelabel>m_TheRB180Cache</edgelabel>
          <edgelabel>m_TheRB90Cache</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>m_mem_usage</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>m_region_tag</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>ownership</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>m_TheTileArrayCache</edgelabel>
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>m_TheParForCache</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>m_BD_count</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
      </node>
      <node id="43">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="44" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="32" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="52">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="48">
        <label>amrex::FabArrayBase::ParForInfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1ParForInfo"/>
        <childnode refid="5" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_ng</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>m_boxes</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>amrex::FabArrayBase::meminfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1meminfo"/>
      </node>
      <node id="60">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="61" relation="public-inheritance">
        </childnode>
        <childnode refid="62" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>roundoff_hi</edgelabel>
          <edgelabel>roundoff_lo</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>amrex::IntVectND&lt; dim &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="1">
        <label>amrex::InterpBndryDataT&lt; MF &gt;</label>
        <link refid="classamrex_1_1InterpBndryDataT"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="50">
        <label>amrex::Math::FastDivmodU64</label>
        <link refid="structamrex_1_1Math_1_1FastDivmodU64"/>
      </node>
      <node id="15">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="62">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
      </node>
      <node id="51">
        <label>std::map&lt; amrex::FabArrayBase::BDKey, int &gt;</label>
        <childnode refid="43" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>std::map&lt; std::string, amrex::FabArrayBase::meminfo &gt;</label>
        <childnode refid="32" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>std::multimap&lt; amrex::FabArrayBase::BDKey, amrex::FabArrayBase::ParForInfo * &gt;</label>
        <childnode refid="43" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
        <childnode refid="17" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
        <childnode refid="26" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>std::shared_ptr&lt; amrex::DistributionMapping::Ref &gt;</label>
        <childnode refid="39" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="46">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="30" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>std::multimap&lt; K, T &gt;</label>
        <childnode refid="30" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>std::string</label>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
      <node id="57">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="20" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="20" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="59">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="20" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="54">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="20" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="20" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="23" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="24">
        <label>std::vector&lt; int &gt;</label>
      </node>
      <node id="36">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="32" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H" line="37" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H" bodystart="40" bodyend="117"/>
    <listofallmembers>
      <member refid="classamrex_1_1BndryDataT_1af7bb1a70a4e8bb07247e07f9de03c3ab" prot="protected" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>bcloc</name></member>
      <member refid="classamrex_1_1BndryDataT_1a043be8a7bc1486ff3e42dde8d785023c" prot="protected" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>bcond</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1ac60edab09d2f18c8198be796a81e60d7" prot="protected" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>bndry</name></member>
      <member refid="classamrex_1_1BndryDataT_1ae3a893425723763871fed2b8f6727abf" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>bndryConds</name></member>
      <member refid="classamrex_1_1BndryDataT_1a06c546aa81b72020efdddf748a5d0164" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>bndryConds</name></member>
      <member refid="classamrex_1_1BndryDataT_1a18326b434a399d2ae2bf82938e6cb77b" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>BndryDataT</name></member>
      <member refid="classamrex_1_1BndryDataT_1ae449a1eee7596c48ad129d92e02e79c4" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>BndryDataT</name></member>
      <member refid="classamrex_1_1BndryDataT_1a48956cc70261a5b28ab7a2559d2df611" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>BndryDataT</name></member>
      <member refid="classamrex_1_1BndryDataT_1a0997f3f226667e9d93136128fcfaf798" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>BndryDataT</name></member>
      <member refid="classamrex_1_1BndryDataT_1af48fcbe60dd847da0a52181bf10ef7aa" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>bndryLocs</name></member>
      <member refid="classamrex_1_1BndryDataT_1a311921844eeca8b18621c7199a86729b" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>bndryLocs</name></member>
      <member refid="classamrex_1_1BndryDataT_1a8e588de5156b9b8ef5a2e39d80f0c597" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>bndryMasks</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1af6ca1d67538728588356d5b07ef6742d" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>BndryRegisterT</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a669440b13ff12d665b4a732a77aa6658" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>BndryRegisterT</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a2922ba0d4eff802a4460e33c950a1ad9" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>BndryRegisterT</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a13afc3531affff7230330514f2b0725a" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>BndryRegisterT</name></member>
      <member refid="classamrex_1_1BndryDataT_1a36cc9b78cac505283d1bc72183c98eb9" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>bndryValues</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1aedfa13c401a3f3825bca5297f1e1e2be" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>boxes</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a691927d0b6e40f9923bacd565c590a91" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>clear</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a859e565c8590d0c8dbe88bede09a35d6" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>Copy</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a1c8fdfc61237f7b6a8d6c040d8daadf2" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>copyFrom</name></member>
      <member refid="classamrex_1_1BndryDataT_1ac96be78c84438c0c74a235d969972846a1a2056eb03f81ff6a627850c9b05e2c3" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>covered</name></member>
      <member refid="classamrex_1_1BndryDataT_1a90495c408f01aebfc13f916272d48c5c" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>define</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a9f157b615e14c68633617c6e2031d027" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryRegisterT::"><scope>amrex::InterpBndryDataT</scope><name>define</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1aac2ef4b2b53e50f002404a507fa667c6" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryRegisterT::"><scope>amrex::InterpBndryDataT</scope><name>define</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a5edc3e7632c3ce5994b8e464213ac5ba" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>DistributionMap</name></member>
      <member refid="classamrex_1_1BndryDataT_1ae4436ce0d60dc60cd15ff3ab3c2ed7a7" prot="protected" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>geom</name></member>
      <member refid="classamrex_1_1BndryDataT_1a92151fcf8699dd91fea3d37556ad0f10" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>getDomain</name></member>
      <member refid="classamrex_1_1BndryDataT_1a7404546670c7ff0157337715f9d25ba0" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>getGeom</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a3661eefa8a7bc8f810c39fdc6f8fb350" prot="protected" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>grids</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1a258eb38558243a71923bbc3fc82990ba" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>IBD_max_order_DEF</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1a71ecda5638e531eb2f2c81496b3a3422" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>InterpBndryDataT</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1ab3867a4fd0a4d8e7eba5d2847576bd74" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>InterpBndryDataT</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1aca339f6cfefd2b60592adb0bb79a01ea" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>InterpBndryDataT</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1a58930dee10ca630b2f499dc6f20aa0ac" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>InterpBndryDataT</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1ae8f5e1195457dc7f2204abbcaf2fe148" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>linComb</name></member>
      <member refid="classamrex_1_1BndryDataT_1a1c152f39fdeb4881636df629cc0d8077" prot="protected" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>m_defined</name></member>
      <member refid="classamrex_1_1BndryDataT_1adabe55330d4668477240acc170ab6032" prot="protected" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>m_ncomp</name></member>
      <member refid="classamrex_1_1BndryDataT_1abb734566f5eab0761ad80aec4f7dfa3d" prot="protected" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>masks</name></member>
      <member refid="classamrex_1_1BndryDataT_1ac96be78c84438c0c74a235d969972846" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>MaskVal</name></member>
      <member refid="classamrex_1_1BndryDataT_1a1052f19a1566840110263a9ebe9c3587" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>nComp</name></member>
      <member refid="classamrex_1_1BndryDataT_1ac96be78c84438c0c74a235d969972846a08dba959557635494bd0b8ca5e561288" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>not_covered</name></member>
      <member refid="classamrex_1_1BndryDataT_1af24fa42fa7ee1bcbb9fb775c5ab192d6" prot="private" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>NTangHalfWidth</name></member>
      <member refid="classamrex_1_1BndryDataT_1ac96be78c84438c0c74a235d969972846a139601a0038d30ced2a28a0e4f6763e7" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>NumMaskVals</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a305048fb353b663f23b3562bc793d4d9" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>operator+=</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1ad9954b0c7811f48d093edb8810e6422d" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>operator=</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1a3c85030c4d51afacd2d7fe15effa1fc1" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BndryDataT_1a7039d1380e4212a2e4bff6b012a97ab3" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryDataT::"><scope>amrex::InterpBndryDataT</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BndryDataT_1a9f9264ac8620d6fd40267e5669f82874" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryDataT::"><scope>amrex::InterpBndryDataT</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a7efdacff6fd618550d5a3e15c0764871" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryRegisterT::"><scope>amrex::InterpBndryDataT</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1aa188d45d82ca39e004cccfca57393095" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryRegisterT::"><scope>amrex::InterpBndryDataT</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BndryDataT_1afa55ddaaa31a917a23d490a8d08d7e18" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1BndryDataT_1af7419c85a4844bf1f351f7ecedb7e22a" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1BndryDataT_1ac96be78c84438c0c74a235d969972846a60efc76c5d4cabbf71077b1aa4700077" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>outside_domain</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a5176cafd217bf9069ed83feba52d71c2" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>plus</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a58d2309f0eb636417e763b5a1e74599c" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>plusFrom</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1ad918f23e64a2d59ba453b09617e5ac15" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>read</name></member>
      <member refid="classamrex_1_1BndryDataT_1ad374546dd93b34c0cb7b6f4032bcfb35" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>RealTuple</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1accdac636c68436e7163d72917cba76c6" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>setBndryValues</name></member>
      <member refid="classamrex_1_1BndryDataT_1aa8cb046e06f3de6cb1db4be12ec87010" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>setBoundCond</name></member>
      <member refid="classamrex_1_1BndryDataT_1afd3fdc202fd316dff91863242679263f" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>setBoundCond</name></member>
      <member refid="classamrex_1_1BndryDataT_1ac308c460f9c083f2fd2326ca62cd1811" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>setBoundLoc</name></member>
      <member refid="classamrex_1_1BndryDataT_1a85f08d239e69b27930ba8ba4e4c163c1" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>setBoundLoc</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a31f3e491669d858c7c73e04d2ad6cb00" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>setBoxes</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1a772640cb8d0030c7b6e69714d055d8e3" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>setHomogValues</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1a24af38cde0573af0a4557b5e165690ff" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>setPhysBndryValues</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a005714dcfffa4635a7261f525892ac37" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>setVal</name></member>
      <member refid="classamrex_1_1BndryDataT_1acf8b7ee0ecbe4e7a753b470251c106d0" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>setValue</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a132f07148e07fdae3f891ab726e467fb" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>size</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1a46045099a99335613063cba938a27623" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>updateBndryValues</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1ad2de450062127ddfed6337961fdcf3c0" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>value_type</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a18c2a8b193ac63488ae4d1ef4acad7b8" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>write</name></member>
      <member refid="classamrex_1_1BndryDataT_1a5516fe31e846fc0e58ac78628938940b" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>~BndryDataT</name></member>
      <member refid="classamrex_1_1BndryRegisterT_1a2d267bc0d735366bae8c6843d4cc79e3" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>~BndryRegisterT</name></member>
      <member refid="classamrex_1_1InterpBndryDataT_1a62be51bb2441bc950b73e4ced3870ed9" prot="public" virt="non-virtual"><scope>amrex::InterpBndryDataT</scope><name>~InterpBndryDataT</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
