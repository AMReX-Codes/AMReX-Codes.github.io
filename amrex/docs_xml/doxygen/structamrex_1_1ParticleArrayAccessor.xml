<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structamrex_1_1ParticleArrayAccessor" kind="struct" language="C++" prot="public">
    <compoundname>amrex::ParticleArrayAccessor</compoundname>
    <includes refid="AMReX__ParticleArray_8H" local="no">AMReX_ParticleArray.H</includes>
    <templateparamlist>
      <param>
        <type>typename ParticleType</type>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1a83d03eb75adb29c552bae0a3d625895b" kindref="member">DataLayout</ref></type>
        <declname>DataLayoutTag</declname>
        <defname>DataLayoutTag</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structamrex_1_1ParticleArrayAccessor_1a7fd6a1c4f97aa655b71ce36e4aad357d" prot="public" static="no">
        <type><ref refid="structamrex_1_1DataLayoutPolicyRaw" kindref="compound">DataLayoutPolicyRaw</ref>&lt; ParticleType, DataLayoutTag &gt;</type>
        <definition>using amrex::ParticleArrayAccessor&lt; ParticleType, DataLayoutTag &gt;::policy_type =  DataLayoutPolicyRaw&lt;ParticleType, DataLayoutTag&gt;</definition>
        <argsstring></argsstring>
        <name>policy_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="251" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleArrayAccessor_1ac08ef3659c93f94805a96457a9419b5e" prot="public" static="no">
        <type>typename policy_type::value_type</type>
        <definition>using amrex::ParticleArrayAccessor&lt; ParticleType, DataLayoutTag &gt;::value_type =  typename policy_type::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="252" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleArrayAccessor_1a07ee693a6d6f19f5c34611ecc35a74b5" prot="public" static="no">
        <type>typename policy_type::raw_type</type>
        <definition>using amrex::ParticleArrayAccessor&lt; ParticleType, DataLayoutTag &gt;::raw_type =  typename policy_type::raw_type</definition>
        <argsstring></argsstring>
        <name>raw_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="253" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="253" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structamrex_1_1ParticleArrayAccessor_1af573478aee535409b3c2bffd8d16dd24" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto amrex::ParticleArrayAccessor&lt; ParticleType, DataLayoutTag &gt;::data_layout</definition>
        <argsstring></argsstring>
        <name>data_layout</name>
        <initializer>= DataLayoutTag</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="255" column="27" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="255" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structamrex_1_1ParticleArrayAccessor_1a22fdbcda4f3aba7fe5a29d9137589c4b" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t amrex::ParticleArrayAccessor&lt; ParticleType, DataLayoutTag &gt;::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="268" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleArrayAccessor_1ac6fd95b2e7f736db5408bbdc3e44cbe4" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1ParticleArrayAccessor_1a07ee693a6d6f19f5c34611ecc35a74b5" kindref="member">raw_type</ref></type>
        <definition>raw_type amrex::ParticleArrayAccessor&lt; ParticleType, DataLayoutTag &gt;::m_data</definition>
        <argsstring></argsstring>
        <name>m_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="269" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="269" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1ParticleArrayAccessor_1ad27aa85c57de2acbd9936f84108365c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::ParticleArrayAccessor&lt; ParticleType, DataLayoutTag &gt;::ParticleArrayAccessor</definition>
        <argsstring>(std::size_t a_size, raw_type a_data)</argsstring>
        <name>ParticleArrayAccessor</name>
        <param>
          <type>std::size_t</type>
          <declname>a_size</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1ParticleArrayAccessor_1a07ee693a6d6f19f5c34611ecc35a74b5" kindref="member">raw_type</ref></type>
          <declname>a_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="257" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="257" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleArrayAccessor_1a5c651ceec4c12e5fb2905c321abc5471" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="structamrex_1_1ParticleArrayAccessor_1ac08ef3659c93f94805a96457a9419b5e" kindref="member">value_type</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE value_type amrex::ParticleArrayAccessor&lt; ParticleType, DataLayoutTag &gt;::operator[]</definition>
        <argsstring>(std::size_t a_index) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>std::size_t</type>
          <declname>a_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="262" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="262" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleArrayAccessor_1a1e73ca781d2a6cd7b92499a8fa188a7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> std::size_t</type>
        <definition>AMREX_GPU_HOST_DEVICE std::size_t amrex::ParticleArrayAccessor&lt; ParticleType, DataLayoutTag &gt;::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="265" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="265" bodyend="265"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A Version of <ref refid="structamrex_1_1ParticleArray" kindref="compound">ParticleArray</ref> that contains only raw pointers, so that it can be copied by value into GPU kernels. </para>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="249" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="250" bodyend="270"/>
    <listofallmembers>
      <member refid="structamrex_1_1ParticleArrayAccessor_1af573478aee535409b3c2bffd8d16dd24" prot="public" virt="non-virtual"><scope>amrex::ParticleArrayAccessor</scope><name>data_layout</name></member>
      <member refid="structamrex_1_1ParticleArrayAccessor_1ac6fd95b2e7f736db5408bbdc3e44cbe4" prot="private" virt="non-virtual"><scope>amrex::ParticleArrayAccessor</scope><name>m_data</name></member>
      <member refid="structamrex_1_1ParticleArrayAccessor_1a22fdbcda4f3aba7fe5a29d9137589c4b" prot="private" virt="non-virtual"><scope>amrex::ParticleArrayAccessor</scope><name>m_size</name></member>
      <member refid="structamrex_1_1ParticleArrayAccessor_1a5c651ceec4c12e5fb2905c321abc5471" prot="public" virt="non-virtual"><scope>amrex::ParticleArrayAccessor</scope><name>operator[]</name></member>
      <member refid="structamrex_1_1ParticleArrayAccessor_1ad27aa85c57de2acbd9936f84108365c9" prot="public" virt="non-virtual"><scope>amrex::ParticleArrayAccessor</scope><name>ParticleArrayAccessor</name></member>
      <member refid="structamrex_1_1ParticleArrayAccessor_1a7fd6a1c4f97aa655b71ce36e4aad357d" prot="public" virt="non-virtual"><scope>amrex::ParticleArrayAccessor</scope><name>policy_type</name></member>
      <member refid="structamrex_1_1ParticleArrayAccessor_1a07ee693a6d6f19f5c34611ecc35a74b5" prot="public" virt="non-virtual"><scope>amrex::ParticleArrayAccessor</scope><name>raw_type</name></member>
      <member refid="structamrex_1_1ParticleArrayAccessor_1a1e73ca781d2a6cd7b92499a8fa188a7d" prot="public" virt="non-virtual"><scope>amrex::ParticleArrayAccessor</scope><name>size</name></member>
      <member refid="structamrex_1_1ParticleArrayAccessor_1ac08ef3659c93f94805a96457a9419b5e" prot="public" virt="non-virtual"><scope>amrex::ParticleArrayAccessor</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
