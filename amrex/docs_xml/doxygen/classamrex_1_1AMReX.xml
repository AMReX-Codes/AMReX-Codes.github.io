<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1AMReX" kind="class" language="C++" prot="public">
    <compoundname>amrex::AMReX</compoundname>
    <includes refid="AMReX_8H" local="no">AMReX.H</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1AMReX_1ad7909bf4e2448edc26489e346cb367ac" prot="private" static="yes" mutable="no">
        <type><ref refid="AMReX__Extension_8H_1ac05fa35b3db13c4599d7ad5fc51bef47" kindref="member">AMREX_EXPORT</ref> std::vector&lt; std::unique_ptr&lt; <ref refid="classamrex_1_1AMReX" kindref="compound">AMReX</ref> &gt; &gt;</type>
        <definition>std::vector&lt; std::unique_ptr&lt; AMReX &gt; &gt; amrex::AMReX::m_instance</definition>
        <argsstring></argsstring>
        <name>m_instance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX.H" line="276" column="41" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX.H" bodystart="276" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1AMReX_1a723c404098736351072f4a99daf9bddb" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> *</type>
        <definition>Geometry* amrex::AMReX::m_geom</definition>
        <argsstring></argsstring>
        <name>m_geom</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX.H" line="278" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX.H" bodystart="278" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1AMReX_1ac0662c8a56afbc04493004cebe490826" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::AMReX::AMReX</definition>
        <argsstring>()</argsstring>
        <name>AMReX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX.H" line="250" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX.cpp" bodystart="878" bodyend="881"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AMReX_1aadaaabd7881bbce62f2b282789482259" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::AMReX::~AMReX</definition>
        <argsstring>()</argsstring>
        <name>~AMReX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX.H" line="251" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX.cpp" bodystart="883" bodyend="886"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AMReX_1a5b73d42e9a3382fdbdf48691f1ca541f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::AMReX::AMReX</definition>
        <argsstring>(AMReX const &amp;)=delete</argsstring>
        <name>AMReX</name>
        <param>
          <type><ref refid="classamrex_1_1AMReX" kindref="compound">AMReX</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX.H" line="252" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AMReX_1ad8198c112ee47aabbd7239cbcf054427" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::AMReX::AMReX</definition>
        <argsstring>(AMReX &amp;&amp;)=delete</argsstring>
        <name>AMReX</name>
        <param>
          <type><ref refid="classamrex_1_1AMReX" kindref="compound">AMReX</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX.H" line="253" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AMReX_1a4f4386d3cc3282acbafb5f961a30f04f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1AMReX" kindref="compound">AMReX</ref> &amp;</type>
        <definition>AMReX&amp; amrex::AMReX::operator=</definition>
        <argsstring>(AMReX const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1AMReX" kindref="compound">AMReX</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX.H" line="254" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AMReX_1a77b2c8844d06a8456a0532c7ec154884" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1AMReX" kindref="compound">AMReX</ref> &amp;</type>
        <definition>AMReX&amp; amrex::AMReX::operator=</definition>
        <argsstring>(AMReX &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1AMReX" kindref="compound">AMReX</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX.H" line="255" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AMReX_1a58a5a186a18bfb36f2631db4a1c2a665" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> *</type>
        <definition>Geometry* amrex::AMReX::getDefaultGeometry</definition>
        <argsstring>() noexcept</argsstring>
        <name>getDefaultGeometry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX.H" line="272" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX.H" bodystart="272" bodyend="272"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1AMReX_1a25710d2c2fdeae4c7b7b36ca2a1e5b90" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool amrex::AMReX::empty</definition>
        <argsstring>() noexcept</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX.H" line="257" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX.H" bodystart="257" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AMReX_1a42bc947424343bc3814de983a6218d26" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>static int amrex::AMReX::size</definition>
        <argsstring>() noexcept</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX.H" line="259" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX.H" bodystart="259" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AMReX_1a961f4d4e88be70b0f922d93122c5f0ca" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1AMReX" kindref="compound">AMReX</ref> *</type>
        <definition>static AMReX* amrex::AMReX::top</definition>
        <argsstring>() noexcept</argsstring>
        <name>top</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX.H" line="261" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX.H" bodystart="261" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AMReX_1aacd757c228bab84f39dc148cc5777624" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AMReX::push</definition>
        <argsstring>(AMReX *pamrex)</argsstring>
        <name>push</name>
        <param>
          <type><ref refid="classamrex_1_1AMReX" kindref="compound">AMReX</ref> *</type>
          <declname>pamrex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX.H" line="267" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX.cpp" bodystart="889" bodyend="899"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1AMReX_1a745d2d5f1157d1c3cb6b620f5544e01d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::AMReX::erase</definition>
        <argsstring>(AMReX *pamrex)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="classamrex_1_1AMReX" kindref="compound">AMReX</ref> *</type>
          <declname>pamrex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX.H" line="270" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX.cpp" bodystart="902" bodyend="910"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="8">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="8" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::AMReX</label>
        <link refid="classamrex_1_1AMReX"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_geom</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_instance</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Real</label>
      </node>
      <node id="11">
        <label>std::unique_ptr&lt; amrex::AMReX &gt;</label>
      </node>
      <node id="10">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::AMReX &gt; &gt;</label>
        <childnode refid="11" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="4" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="8" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="4" relation="usage">
          <edgelabel>dx</edgelabel>
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="5">
        <label>amrex::GpuArray&lt; ParticleReal, AMREX_SPACEDIM &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="2">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>roundoff_hi</edgelabel>
          <edgelabel>roundoff_lo</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX.H" line="247" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX.H" bodystart="248" bodyend="279"/>
    <listofallmembers>
      <member refid="classamrex_1_1AMReX_1ac0662c8a56afbc04493004cebe490826" prot="public" virt="non-virtual"><scope>amrex::AMReX</scope><name>AMReX</name></member>
      <member refid="classamrex_1_1AMReX_1a5b73d42e9a3382fdbdf48691f1ca541f" prot="public" virt="non-virtual"><scope>amrex::AMReX</scope><name>AMReX</name></member>
      <member refid="classamrex_1_1AMReX_1ad8198c112ee47aabbd7239cbcf054427" prot="public" virt="non-virtual"><scope>amrex::AMReX</scope><name>AMReX</name></member>
      <member refid="classamrex_1_1AMReX_1a25710d2c2fdeae4c7b7b36ca2a1e5b90" prot="public" virt="non-virtual"><scope>amrex::AMReX</scope><name>empty</name></member>
      <member refid="classamrex_1_1AMReX_1a745d2d5f1157d1c3cb6b620f5544e01d" prot="public" virt="non-virtual"><scope>amrex::AMReX</scope><name>erase</name></member>
      <member refid="classamrex_1_1AMReX_1a58a5a186a18bfb36f2631db4a1c2a665" prot="public" virt="non-virtual"><scope>amrex::AMReX</scope><name>getDefaultGeometry</name></member>
      <member refid="classamrex_1_1AMReX_1a723c404098736351072f4a99daf9bddb" prot="private" virt="non-virtual"><scope>amrex::AMReX</scope><name>m_geom</name></member>
      <member refid="classamrex_1_1AMReX_1ad7909bf4e2448edc26489e346cb367ac" prot="private" virt="non-virtual"><scope>amrex::AMReX</scope><name>m_instance</name></member>
      <member refid="classamrex_1_1AMReX_1a4f4386d3cc3282acbafb5f961a30f04f" prot="public" virt="non-virtual"><scope>amrex::AMReX</scope><name>operator=</name></member>
      <member refid="classamrex_1_1AMReX_1a77b2c8844d06a8456a0532c7ec154884" prot="public" virt="non-virtual"><scope>amrex::AMReX</scope><name>operator=</name></member>
      <member refid="classamrex_1_1AMReX_1aacd757c228bab84f39dc148cc5777624" prot="public" virt="non-virtual"><scope>amrex::AMReX</scope><name>push</name></member>
      <member refid="classamrex_1_1AMReX_1a42bc947424343bc3814de983a6218d26" prot="public" virt="non-virtual"><scope>amrex::AMReX</scope><name>size</name></member>
      <member refid="classamrex_1_1AMReX_1a961f4d4e88be70b0f922d93122c5f0ca" prot="public" virt="non-virtual"><scope>amrex::AMReX</scope><name>top</name></member>
      <member refid="classamrex_1_1AMReX_1aadaaabd7881bbce62f2b282789482259" prot="public" virt="non-virtual"><scope>amrex::AMReX</scope><name>~AMReX</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
