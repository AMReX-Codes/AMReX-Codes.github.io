<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structamrex_1_1Gpu_1_1DeviceScalar" kind="struct" language="C++" prot="public">
    <compoundname>amrex::Gpu::DeviceScalar</compoundname>
    <includes refid="AMReX__GpuMemory_8H" local="no">AMReX_GpuMemory.H</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
      <param>
        <type>typename std::enable_if&lt; <ref refid="AMReX__TypeTraits_8H_1adc50ea9983407ec975c6c594c92bae5d" kindref="member">AMREX_IS_TRIVIALLY_COPYABLE</ref>(T), <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;::type</type>
        <defval>0</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structamrex_1_1Gpu_1_1DeviceScalar_1acec02fcbe3ecb7ea76b4021b6688cc17" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* amrex::Gpu::DeviceScalar&lt; T, type &gt;::dp</definition>
        <argsstring></argsstring>
        <name>dp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="104" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1a8b99ac457d4bfca3c079e994e753575b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::DeviceScalar&lt; T, type &gt;::DeviceScalar</definition>
        <argsstring>(DeviceScalar const &amp;)=delete</argsstring>
        <name>DeviceScalar</name>
        <param>
          <type><ref refid="structamrex_1_1Gpu_1_1DeviceScalar" kindref="compound">DeviceScalar</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="58" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1ad4d0986a7fc50af5a5e9effe5b16c7f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::DeviceScalar&lt; T, type &gt;::DeviceScalar</definition>
        <argsstring>(DeviceScalar &amp;&amp;)=delete</argsstring>
        <name>DeviceScalar</name>
        <param>
          <type><ref refid="structamrex_1_1Gpu_1_1DeviceScalar" kindref="compound">DeviceScalar</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="59" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1a43c12caf52ae75b1b84f6aae76760cc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::DeviceScalar&lt; T, type &gt;::operator=</definition>
        <argsstring>(DeviceScalar const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structamrex_1_1Gpu_1_1DeviceScalar" kindref="compound">DeviceScalar</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="60" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1ae9143db2f06789fa77eac6db1f78638e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::DeviceScalar&lt; T, type &gt;::operator=</definition>
        <argsstring>(DeviceScalar &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structamrex_1_1Gpu_1_1DeviceScalar" kindref="compound">DeviceScalar</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="61" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1a02ba6754708f4d56196f0e221aca8e90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::DeviceScalar&lt; T, type &gt;::DeviceScalar</definition>
        <argsstring>()</argsstring>
        <name>DeviceScalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="65" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="65" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1a68b30221dbfd66a1d496c03af10c6c61" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::DeviceScalar&lt; T, type &gt;::DeviceScalar</definition>
        <argsstring>(T init_val)</argsstring>
        <name>DeviceScalar</name>
        <param>
          <type>T</type>
          <declname>init_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="73" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="73" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1adc44c4f760a09682152b593a0a8158c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::DeviceScalar&lt; T, type &gt;::~DeviceScalar</definition>
        <argsstring>()</argsstring>
        <name>~DeviceScalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="83" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="83" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1a91b5b8012de7320f5b6af0684caffab9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* amrex::Gpu::DeviceScalar&lt; T, type &gt;::dataPtr</definition>
        <argsstring>()</argsstring>
        <name>dataPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="91" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1a65321edb44d3a11855d85be6f9afedb8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T const  *</type>
        <definition>T const* amrex::Gpu::DeviceScalar&lt; T, type &gt;::dataPtr</definition>
        <argsstring>() const</argsstring>
        <name>dataPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="92" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1a3a557860f06c4da68f57b6c2e6222fca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T amrex::Gpu::DeviceScalar&lt; T, type &gt;::dataValue</definition>
        <argsstring>() const</argsstring>
        <name>dataValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="93" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="93" bodyend="101"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="57" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="56" bodyend="120"/>
    <listofallmembers>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1a91b5b8012de7320f5b6af0684caffab9" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>dataPtr</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1a65321edb44d3a11855d85be6f9afedb8" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>dataPtr</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1a3a557860f06c4da68f57b6c2e6222fca" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>dataValue</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1a8b99ac457d4bfca3c079e994e753575b" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>DeviceScalar</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1ad4d0986a7fc50af5a5e9effe5b16c7f7" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>DeviceScalar</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1a02ba6754708f4d56196f0e221aca8e90" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>DeviceScalar</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1a68b30221dbfd66a1d496c03af10c6c61" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>DeviceScalar</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1acec02fcbe3ecb7ea76b4021b6688cc17" prot="private" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>dp</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1a43c12caf52ae75b1b84f6aae76760cc4" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>operator=</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1ae9143db2f06789fa77eac6db1f78638e" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>operator=</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1adc44c4f760a09682152b593a0a8158c5" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>~DeviceScalar</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
