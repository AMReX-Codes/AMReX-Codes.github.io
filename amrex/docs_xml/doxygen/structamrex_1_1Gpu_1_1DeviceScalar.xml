<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structamrex_1_1Gpu_1_1DeviceScalar" kind="struct" language="C++" prot="public">
    <compoundname>amrex::Gpu::DeviceScalar</compoundname>
    <includes refid="AMReX__GpuMemory_8H" local="no">AMReX_GpuMemory.H</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>typename</type>
        <defval><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t</ref>&lt;<ref refid="AMReX__TypeTraits_8H_1adc50ea9983407ec975c6c594c92bae5d" kindref="member">AMREX_IS_TRIVIALLY_COPYABLE</ref>(T)&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structamrex_1_1Gpu_1_1DeviceScalar_1a2e8ab226b92837706b9b1a1ae80b65d7" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T amrex::Gpu::DeviceScalar&lt; T, typename &gt;::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuMemory.H" line="101" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1a33b92fa55c3bf9ac9b2b743b01fedcfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::DeviceScalar&lt; T, typename &gt;::DeviceScalar</definition>
        <argsstring>(DeviceScalar const &amp;)=delete</argsstring>
        <name>DeviceScalar</name>
        <param>
          <type><ref refid="structamrex_1_1Gpu_1_1DeviceScalar" kindref="compound">DeviceScalar</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuMemory.H" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1a3afc83644de9fc1d5bfe13cc19b99cc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::DeviceScalar&lt; T, typename &gt;::DeviceScalar</definition>
        <argsstring>(DeviceScalar &amp;&amp;)=delete</argsstring>
        <name>DeviceScalar</name>
        <param>
          <type><ref refid="structamrex_1_1Gpu_1_1DeviceScalar" kindref="compound">DeviceScalar</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuMemory.H" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1ae2c1bb3b0cb9e73181a8ac5c55f9fc66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::DeviceScalar&lt; T, typename &gt;::operator=</definition>
        <argsstring>(DeviceScalar const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structamrex_1_1Gpu_1_1DeviceScalar" kindref="compound">DeviceScalar</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuMemory.H" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1a1d7bcd5671f01a7705a99ab4542e3bd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::DeviceScalar&lt; T, typename &gt;::operator=</definition>
        <argsstring>(DeviceScalar &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structamrex_1_1Gpu_1_1DeviceScalar" kindref="compound">DeviceScalar</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuMemory.H" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1a768feff46b37d9b67d7da2cfd6d81635" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::DeviceScalar&lt; T, typename &gt;::DeviceScalar</definition>
        <argsstring>(T init_val)</argsstring>
        <name>DeviceScalar</name>
        <param>
          <type>T</type>
          <declname>init_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuMemory.H" line="93" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1adfb360e2b6294abfe61f5295838d194c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::DeviceScalar&lt; T, typename &gt;::~DeviceScalar</definition>
        <argsstring>()</argsstring>
        <name>~DeviceScalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuMemory.H" line="94" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1acf81cf5381d6b530faca3ed567ae6e4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* amrex::Gpu::DeviceScalar&lt; T, typename &gt;::dataPtr</definition>
        <argsstring>()</argsstring>
        <name>dataPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuMemory.H" line="96" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1a294da611738077a3367c2f7f339cf22e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T const *</type>
        <definition>T const* amrex::Gpu::DeviceScalar&lt; T, typename &gt;::dataPtr</definition>
        <argsstring>() const </argsstring>
        <name>dataPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuMemory.H" line="97" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1a39847ad33434d24a037e870700538dcb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T amrex::Gpu::DeviceScalar&lt; T, typename &gt;::dataValue</definition>
        <argsstring>() const </argsstring>
        <name>dataValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuMemory.H" line="98" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="98" bodyend="98"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1114">
        <label>T</label>
      </node>
      <node id="1113">
        <label>amrex::Gpu::DeviceScalar&lt; T, typename &gt;</label>
        <link refid="structamrex_1_1Gpu_1_1DeviceScalar"/>
        <childnode refid="1114" relation="usage">
          <edgelabel>d</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuMemory.H" line="50" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="49" bodyend="104"/>
    <listofallmembers>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1a2e8ab226b92837706b9b1a1ae80b65d7" prot="private" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>d</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1acf81cf5381d6b530faca3ed567ae6e4a" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>dataPtr</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1a294da611738077a3367c2f7f339cf22e" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>dataPtr</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1a39847ad33434d24a037e870700538dcb" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>dataValue</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1a33b92fa55c3bf9ac9b2b743b01fedcfe" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>DeviceScalar</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1a3afc83644de9fc1d5bfe13cc19b99cc7" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>DeviceScalar</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1a768feff46b37d9b67d7da2cfd6d81635" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>DeviceScalar</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1ae2c1bb3b0cb9e73181a8ac5c55f9fc66" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>operator=</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1a1d7bcd5671f01a7705a99ab4542e3bd0" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>operator=</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1adfb360e2b6294abfe61f5295838d194c" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>~DeviceScalar</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
