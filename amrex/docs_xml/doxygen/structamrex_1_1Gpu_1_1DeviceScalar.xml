<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structamrex_1_1Gpu_1_1DeviceScalar" kind="struct" language="C++" prot="public">
    <compoundname>amrex::Gpu::DeviceScalar</compoundname>
    <includes refid="AMReX__GpuMemory_8H" local="no">AMReX_GpuMemory.H</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
      <param>
        <type>std::enable_if_t&lt; std::is_trivially_copyable&lt; T &gt;::value, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <defval>0</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structamrex_1_1Gpu_1_1DeviceScalar_1aef9ccbc50e8c6d02eda1902423d91f02" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* amrex::Gpu::DeviceScalar&lt; T, &gt;::dp</definition>
        <argsstring></argsstring>
        <name>dp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="103" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1a22ee1039a5affe922974db84c8753e9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::DeviceScalar&lt; T, &gt;::DeviceScalar</definition>
        <argsstring>(DeviceScalar const &amp;)=delete</argsstring>
        <name>DeviceScalar</name>
        <param>
          <type><ref refid="structamrex_1_1Gpu_1_1DeviceScalar" kindref="compound">DeviceScalar</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="57" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1aad0f00e8321544217083503dd9cc0b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::DeviceScalar&lt; T, &gt;::DeviceScalar</definition>
        <argsstring>(DeviceScalar &amp;&amp;)=delete</argsstring>
        <name>DeviceScalar</name>
        <param>
          <type><ref refid="structamrex_1_1Gpu_1_1DeviceScalar" kindref="compound">DeviceScalar</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="58" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1a1ea24985de3f4264b68f8c5f55611178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::DeviceScalar&lt; T, &gt;::operator=</definition>
        <argsstring>(DeviceScalar const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structamrex_1_1Gpu_1_1DeviceScalar" kindref="compound">DeviceScalar</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="59" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1a09ce14e97aa618c00bcc778e9337fd4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Gpu::DeviceScalar&lt; T, &gt;::operator=</definition>
        <argsstring>(DeviceScalar &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structamrex_1_1Gpu_1_1DeviceScalar" kindref="compound">DeviceScalar</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="60" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1a041e21c03012c74793a6baf0d916e587" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::DeviceScalar&lt; T, &gt;::DeviceScalar</definition>
        <argsstring>()</argsstring>
        <name>DeviceScalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="64" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="64" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1adb2f941325add1703b7369f68060c2bb" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::DeviceScalar&lt; T, &gt;::DeviceScalar</definition>
        <argsstring>(T init_val)</argsstring>
        <name>DeviceScalar</name>
        <param>
          <type>T</type>
          <declname>init_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="72" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="72" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1ae203fe8c3032a05c2f06c38b8638308c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Gpu::DeviceScalar&lt; T, &gt;::~DeviceScalar</definition>
        <argsstring>()</argsstring>
        <name>~DeviceScalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="82" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="82" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1a3a4fecbe5bb784d58b047fa09d73c504" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* amrex::Gpu::DeviceScalar&lt; T, &gt;::dataPtr</definition>
        <argsstring>()</argsstring>
        <name>dataPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="90" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1ac7995253d4db738ff6283ab41aaf67c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T const  *</type>
        <definition>T const* amrex::Gpu::DeviceScalar&lt; T, &gt;::dataPtr</definition>
        <argsstring>() const</argsstring>
        <name>dataPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="91" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1Gpu_1_1DeviceScalar_1a14f5716ceb831c094aabcf9cf8cba989" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T amrex::Gpu::DeviceScalar&lt; T, &gt;::dataValue</definition>
        <argsstring>() const</argsstring>
        <name>dataValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="92" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="92" bodyend="100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" line="55" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuMemory.H" bodystart="56" bodyend="119"/>
    <listofallmembers>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1a3a4fecbe5bb784d58b047fa09d73c504" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>dataPtr</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1ac7995253d4db738ff6283ab41aaf67c8" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>dataPtr</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1a14f5716ceb831c094aabcf9cf8cba989" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>dataValue</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1a22ee1039a5affe922974db84c8753e9e" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>DeviceScalar</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1aad0f00e8321544217083503dd9cc0b9c" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>DeviceScalar</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1a041e21c03012c74793a6baf0d916e587" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>DeviceScalar</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1adb2f941325add1703b7369f68060c2bb" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>DeviceScalar</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1aef9ccbc50e8c6d02eda1902423d91f02" prot="private" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>dp</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1a1ea24985de3f4264b68f8c5f55611178" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>operator=</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1a09ce14e97aa618c00bcc778e9337fd4f" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>operator=</name></member>
      <member refid="structamrex_1_1Gpu_1_1DeviceScalar_1ae203fe8c3032a05c2f06c38b8638308c" prot="public" virt="non-virtual"><scope>amrex::Gpu::DeviceScalar</scope><name>~DeviceScalar</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
