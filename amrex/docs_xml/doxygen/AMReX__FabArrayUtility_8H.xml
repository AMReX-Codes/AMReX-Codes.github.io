<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__FabArrayUtility_8H" kind="file" language="C++">
    <compoundname>AMReX_FabArrayUtility.H</compoundname>
    <includes local="no">AMReX_Config.H</includes>
    <includes refid="AMReX__FabArray_8H" local="no">AMReX_FabArray.H</includes>
    <includes refid="AMReX__LayoutData_8H" local="no">AMReX_LayoutData.H</includes>
    <includes refid="AMReX__Print_8H" local="no">AMReX_Print.H</includes>
    <includes local="no">limits</includes>
    <includedby refid="AMReX__iMultiFab_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_iMultiFab.H</includedby>
    <includedby refid="AMReX__MultiFab_8cpp" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFab.cpp</includedby>
    <includedby refid="AMReX__MultiFab_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFab.H</includedby>
    <includedby refid="AMReX__PlotFileUtil_8cpp" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileUtil.cpp</includedby>
    <includedby refid="AMReX__VisMF_8cpp" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_VisMF.cpp</includedby>
    <incdepgraph>
      <node id="19024">
        <label>atomic</label>
      </node>
      <node id="18998">
        <label>AMReX_OpenMP.H</label>
        <link refid="AMReX__OpenMP_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
      </node>
      <node id="19016">
        <label>AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18972" relation="include">
        </childnode>
        <childnode refid="19017" relation="include">
        </childnode>
        <childnode refid="18948" relation="include">
        </childnode>
        <childnode refid="19018" relation="include">
        </childnode>
        <childnode refid="19015" relation="include">
        </childnode>
        <childnode refid="19019" relation="include">
        </childnode>
        <childnode refid="18942" relation="include">
        </childnode>
      </node>
      <node id="18966">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18938" relation="include">
        </childnode>
        <childnode refid="18964" relation="include">
        </childnode>
        <childnode refid="18948" relation="include">
        </childnode>
        <childnode refid="18926" relation="include">
        </childnode>
      </node>
      <node id="18965">
        <label>iomanip</label>
      </node>
      <node id="18937">
        <label>functional</label>
      </node>
      <node id="18957">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18910" relation="include">
        </childnode>
        <childnode refid="18958" relation="include">
        </childnode>
        <childnode refid="18913" relation="include">
        </childnode>
        <childnode refid="18959" relation="include">
        </childnode>
        <childnode refid="18954" relation="include">
        </childnode>
        <childnode refid="18960" relation="include">
        </childnode>
        <childnode refid="18939" relation="include">
        </childnode>
        <childnode refid="18948" relation="include">
        </childnode>
      </node>
      <node id="19029">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18936" relation="include">
        </childnode>
        <childnode refid="18919" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18932" relation="include">
        </childnode>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18952" relation="include">
        </childnode>
      </node>
      <node id="18912">
        <label>limits</label>
      </node>
      <node id="18970">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18918" relation="include">
        </childnode>
        <childnode refid="18932" relation="include">
        </childnode>
      </node>
      <node id="19017">
        <label>iterator</label>
      </node>
      <node id="18949">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18950" relation="include">
        </childnode>
        <childnode refid="18946" relation="include">
        </childnode>
        <childnode refid="18951" relation="include">
        </childnode>
        <childnode refid="18926" relation="include">
        </childnode>
        <childnode refid="18952" relation="include">
        </childnode>
        <childnode refid="18954" relation="include">
        </childnode>
        <childnode refid="18955" relation="include">
        </childnode>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18939" relation="include">
        </childnode>
        <childnode refid="18956" relation="include">
        </childnode>
        <childnode refid="18948" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
        <childnode refid="18943" relation="include">
        </childnode>
      </node>
      <node id="18933">
        <label>float.h</label>
      </node>
      <node id="19006">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
        <childnode refid="18944" relation="include">
        </childnode>
        <childnode refid="18943" relation="include">
        </childnode>
        <childnode refid="18996" relation="include">
        </childnode>
        <childnode refid="18929" relation="include">
        </childnode>
        <childnode refid="18932" relation="include">
        </childnode>
        <childnode refid="18930" relation="include">
        </childnode>
        <childnode refid="18939" relation="include">
        </childnode>
        <childnode refid="18956" relation="include">
        </childnode>
        <childnode refid="18910" relation="include">
        </childnode>
        <childnode refid="18935" relation="include">
        </childnode>
      </node>
      <node id="18986">
        <label>cstdint</label>
      </node>
      <node id="18990">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18918" relation="include">
        </childnode>
        <childnode refid="18957" relation="include">
        </childnode>
        <childnode refid="18976" relation="include">
        </childnode>
        <childnode refid="18967" relation="include">
        </childnode>
        <childnode refid="18991" relation="include">
        </childnode>
        <childnode refid="18989" relation="include">
        </childnode>
        <childnode refid="18963" relation="include">
        </childnode>
        <childnode refid="18975" relation="include">
        </childnode>
        <childnode refid="18992" relation="include">
        </childnode>
      </node>
      <node id="18976">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18913" relation="include">
        </childnode>
        <childnode refid="18912" relation="include">
        </childnode>
        <childnode refid="18938" relation="include">
        </childnode>
        <childnode refid="18958" relation="include">
        </childnode>
        <childnode refid="18910" relation="include">
        </childnode>
        <childnode refid="18920" relation="include">
        </childnode>
        <childnode refid="18939" relation="include">
        </childnode>
        <childnode refid="18948" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18932" relation="include">
        </childnode>
        <childnode refid="18967" relation="include">
        </childnode>
      </node>
      <node id="19005">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
      </node>
      <node id="18952">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18930" relation="include">
        </childnode>
        <childnode refid="18926" relation="include">
        </childnode>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18939" relation="include">
        </childnode>
        <childnode refid="18948" relation="include">
        </childnode>
        <childnode refid="18947" relation="include">
        </childnode>
        <childnode refid="18919" relation="include">
        </childnode>
        <childnode refid="18929" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
        <childnode refid="18934" relation="include">
        </childnode>
        <childnode refid="18950" relation="include">
        </childnode>
        <childnode refid="18936" relation="include">
        </childnode>
        <childnode refid="18935" relation="include">
        </childnode>
        <childnode refid="18912" relation="include">
        </childnode>
        <childnode refid="18953" relation="include">
        </childnode>
        <childnode refid="18916" relation="include">
        </childnode>
      </node>
      <node id="18920">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
        <childnode refid="18922" relation="include">
        </childnode>
        <childnode refid="18924" relation="include">
        </childnode>
        <childnode refid="18926" relation="include">
        </childnode>
        <childnode refid="18927" relation="include">
        </childnode>
        <childnode refid="18929" relation="include">
        </childnode>
        <childnode refid="18930" relation="include">
        </childnode>
        <childnode refid="18932" relation="include">
        </childnode>
        <childnode refid="18934" relation="include">
        </childnode>
        <childnode refid="18910" relation="include">
        </childnode>
        <childnode refid="18937" relation="include">
        </childnode>
        <childnode refid="18918" relation="include">
        </childnode>
        <childnode refid="18923" relation="include">
        </childnode>
        <childnode refid="18915" relation="include">
        </childnode>
        <childnode refid="18938" relation="include">
        </childnode>
      </node>
      <node id="18974">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
      </node>
      <node id="18922">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18923" relation="include">
        </childnode>
      </node>
      <node id="19012">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
      </node>
      <node id="18997">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18981" relation="include">
        </childnode>
        <childnode refid="18918" relation="include">
        </childnode>
      </node>
      <node id="18948">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18916" relation="include">
        </childnode>
        <childnode refid="18915" relation="include">
        </childnode>
        <childnode refid="18938" relation="include">
        </childnode>
        <childnode refid="18919" relation="include">
        </childnode>
        <childnode refid="18930" relation="include">
        </childnode>
      </node>
      <node id="18963">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18941" relation="include">
        </childnode>
        <childnode refid="18964" relation="include">
        </childnode>
        <childnode refid="18965" relation="include">
        </childnode>
        <childnode refid="18914" relation="include">
        </childnode>
        <childnode refid="18920" relation="include">
        </childnode>
        <childnode refid="18966" relation="include">
        </childnode>
        <childnode refid="18967" relation="include">
        </childnode>
      </node>
      <node id="18935">
        <label>cmath</label>
      </node>
      <node id="18925">
        <label>cassert</label>
      </node>
      <node id="18928">
        <label>stdexcept</label>
      </node>
      <node id="18972">
        <label>numeric</label>
      </node>
      <node id="19007">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18940" relation="include">
        </childnode>
        <childnode refid="19008" relation="include">
        </childnode>
        <childnode refid="18937" relation="include">
        </childnode>
        <childnode refid="18942" relation="include">
        </childnode>
        <childnode refid="18914" relation="include">
        </childnode>
        <childnode refid="18995" relation="include">
        </childnode>
        <childnode refid="19009" relation="include">
        </childnode>
        <childnode refid="19005" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
      </node>
      <node id="18960">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18950" relation="include">
        </childnode>
        <childnode refid="18952" relation="include">
        </childnode>
        <childnode refid="18954" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18939" relation="include">
        </childnode>
        <childnode refid="18948" relation="include">
        </childnode>
      </node>
      <node id="19023">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18935" relation="include">
        </childnode>
        <childnode refid="18936" relation="include">
        </childnode>
        <childnode refid="18916" relation="include">
        </childnode>
        <childnode refid="18912" relation="include">
        </childnode>
        <childnode refid="18953" relation="include">
        </childnode>
        <childnode refid="18940" relation="include">
        </childnode>
        <childnode refid="18942" relation="include">
        </childnode>
        <childnode refid="18938" relation="include">
        </childnode>
        <childnode refid="19024" relation="include">
        </childnode>
        <childnode refid="18929" relation="include">
        </childnode>
        <childnode refid="18919" relation="include">
        </childnode>
        <childnode refid="18939" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="19010" relation="include">
        </childnode>
        <childnode refid="18960" relation="include">
        </childnode>
        <childnode refid="19025" relation="include">
        </childnode>
        <childnode refid="19026" relation="include">
        </childnode>
        <childnode refid="18932" relation="include">
        </childnode>
        <childnode refid="18970" relation="include">
        </childnode>
        <childnode refid="19029" relation="include">
        </childnode>
        <childnode refid="18974" relation="include">
        </childnode>
        <childnode refid="18981" relation="include">
        </childnode>
        <childnode refid="19030" relation="include">
        </childnode>
        <childnode refid="18992" relation="include">
        </childnode>
        <childnode refid="18934" relation="include">
        </childnode>
      </node>
      <node id="18918">
        <label>string</label>
      </node>
      <node id="19010">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
      </node>
      <node id="18913">
        <label>map</label>
      </node>
      <node id="19028">
        <label>unordered_set</label>
      </node>
      <node id="19032">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
        <childnode refid="19033" relation="include">
        </childnode>
        <childnode refid="19034" relation="include">
        </childnode>
      </node>
      <node id="18984">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18920" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
        <childnode refid="18967" relation="include">
        </childnode>
        <childnode refid="18985" relation="include">
        </childnode>
        <childnode refid="18912" relation="include">
        </childnode>
        <childnode refid="18986" relation="include">
        </childnode>
      </node>
      <node id="19009">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18914" relation="include">
        </childnode>
      </node>
      <node id="18983">
        <label>cfloat</label>
      </node>
      <node id="19031">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18990" relation="include">
        </childnode>
        <childnode refid="19021" relation="include">
        </childnode>
      </node>
      <node id="19030">
        <label>AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18992" relation="include">
        </childnode>
        <childnode refid="18975" relation="include">
        </childnode>
        <childnode refid="18916" relation="include">
        </childnode>
      </node>
      <node id="18964">
        <label>fstream</label>
      </node>
      <node id="18977">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18950" relation="include">
        </childnode>
        <childnode refid="18913" relation="include">
        </childnode>
        <childnode refid="18939" relation="include">
        </childnode>
        <childnode refid="18978" relation="include">
        </childnode>
        <childnode refid="18967" relation="include">
        </childnode>
        <childnode refid="18979" relation="include">
        </childnode>
        <childnode refid="18989" relation="include">
        </childnode>
      </node>
      <node id="19021">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18938" relation="include">
        </childnode>
        <childnode refid="18975" relation="include">
        </childnode>
        <childnode refid="18990" relation="include">
        </childnode>
        <childnode refid="18952" relation="include">
        </childnode>
        <childnode refid="19022" relation="include">
        </childnode>
        <childnode refid="18979" relation="include">
        </childnode>
        <childnode refid="18992" relation="include">
        </childnode>
      </node>
      <node id="18951">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18932" relation="include">
        </childnode>
      </node>
      <node id="18979">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18950" relation="include">
        </childnode>
        <childnode refid="18940" relation="include">
        </childnode>
        <childnode refid="18939" relation="include">
        </childnode>
        <childnode refid="18948" relation="include">
        </childnode>
        <childnode refid="18932" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18980" relation="include">
        </childnode>
      </node>
      <node id="18939">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18940" relation="include">
        </childnode>
        <childnode refid="18938" relation="include">
        </childnode>
        <childnode refid="18914" relation="include">
        </childnode>
        <childnode refid="18918" relation="include">
        </childnode>
        <childnode refid="18910" relation="include">
        </childnode>
        <childnode refid="18941" relation="include">
        </childnode>
        <childnode refid="18923" relation="include">
        </childnode>
        <childnode refid="18942" relation="include">
        </childnode>
        <childnode refid="18920" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
        <childnode refid="18943" relation="include">
        </childnode>
        <childnode refid="18919" relation="include">
        </childnode>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18932" relation="include">
        </childnode>
        <childnode refid="18946" relation="include">
        </childnode>
        <childnode refid="18947" relation="include">
        </childnode>
      </node>
      <node id="19003">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
        <childnode refid="18943" relation="include">
        </childnode>
        <childnode refid="18944" relation="include">
        </childnode>
        <childnode refid="19004" relation="include">
        </childnode>
        <childnode refid="19006" relation="include">
        </childnode>
        <childnode refid="19005" relation="include">
        </childnode>
      </node>
      <node id="18945">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
      </node>
      <node id="18985">
        <label>AMReX_RandomEngine.H</label>
        <link refid="AMReX__RandomEngine_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
        <childnode refid="18929" relation="include">
        </childnode>
      </node>
      <node id="18991">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18920" relation="include">
        </childnode>
        <childnode refid="18967" relation="include">
        </childnode>
        <childnode refid="18963" relation="include">
        </childnode>
        <childnode refid="18948" relation="include">
        </childnode>
        <childnode refid="18942" relation="include">
        </childnode>
      </node>
      <node id="18944">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
      </node>
      <node id="18929">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
      </node>
      <node id="19015">
        <label>AMReX_GpuAllocators.H</label>
        <link refid="AMReX__GpuAllocators_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18913" relation="include">
        </childnode>
        <childnode refid="18938" relation="include">
        </childnode>
        <childnode refid="18912" relation="include">
        </childnode>
        <childnode refid="18942" relation="include">
        </childnode>
        <childnode refid="18963" relation="include">
        </childnode>
        <childnode refid="18975" relation="include">
        </childnode>
        <childnode refid="18996" relation="include">
        </childnode>
      </node>
      <node id="19000">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
        <childnode refid="18993" relation="include">
        </childnode>
        <childnode refid="18943" relation="include">
        </childnode>
        <childnode refid="18944" relation="include">
        </childnode>
        <childnode refid="18997" relation="include">
        </childnode>
        <childnode refid="19001" relation="include">
        </childnode>
        <childnode refid="18996" relation="include">
        </childnode>
        <childnode refid="19002" relation="include">
        </childnode>
        <childnode refid="19003" relation="include">
        </childnode>
        <childnode refid="18994" relation="include">
        </childnode>
        <childnode refid="19007" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="19010" relation="include">
        </childnode>
        <childnode refid="18929" relation="include">
        </childnode>
        <childnode refid="18919" relation="include">
        </childnode>
        <childnode refid="18995" relation="include">
        </childnode>
        <childnode refid="18999" relation="include">
        </childnode>
        <childnode refid="18985" relation="include">
        </childnode>
        <childnode refid="18946" relation="include">
        </childnode>
        <childnode refid="18958" relation="include">
        </childnode>
        <childnode refid="18912" relation="include">
        </childnode>
        <childnode refid="18916" relation="include">
        </childnode>
        <childnode refid="18914" relation="include">
        </childnode>
        <childnode refid="19011" relation="include">
        </childnode>
        <childnode refid="19012" relation="include">
        </childnode>
      </node>
      <node id="19033">
        <label>AMReX_FBI.H</label>
        <link refid="AMReX__FBI_8H"/>
      </node>
      <node id="18988">
        <label>sys/types.h</label>
      </node>
      <node id="18989">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18952" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18915" relation="include">
        </childnode>
      </node>
      <node id="18971">
        <label>typeinfo</label>
      </node>
      <node id="18908">
        <label>AMReX_Config.H</label>
      </node>
      <node id="18923">
        <label>cstdio</label>
      </node>
      <node id="18995">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18942" relation="include">
        </childnode>
        <childnode refid="18929" relation="include">
        </childnode>
      </node>
      <node id="18943">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
        <childnode refid="18944" relation="include">
        </childnode>
      </node>
      <node id="19008">
        <label>tuple</label>
      </node>
      <node id="18968">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18969" relation="include">
        </childnode>
        <childnode refid="18918" relation="include">
        </childnode>
        <childnode refid="18914" relation="include">
        </childnode>
        <childnode refid="18941" relation="include">
        </childnode>
        <childnode refid="18923" relation="include">
        </childnode>
        <childnode refid="18936" relation="include">
        </childnode>
      </node>
      <node id="19019">
        <label>AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18992" relation="include">
        </childnode>
        <childnode refid="18975" relation="include">
        </childnode>
        <childnode refid="18986" relation="include">
        </childnode>
        <childnode refid="18942" relation="include">
        </childnode>
      </node>
      <node id="18987">
        <label>AMReX_FileSystem.H</label>
        <link refid="AMReX__FileSystem_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18918" relation="include">
        </childnode>
        <childnode refid="18988" relation="include">
        </childnode>
      </node>
      <node id="19034">
        <label>AMReX_PCI.H</label>
        <link refid="AMReX__PCI_8H"/>
      </node>
      <node id="18969">
        <label>stack</label>
      </node>
      <node id="18915">
        <label>vector</label>
      </node>
      <node id="18962">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18963" relation="include">
        </childnode>
        <childnode refid="18974" relation="include">
        </childnode>
        <childnode refid="18948" relation="include">
        </childnode>
        <childnode refid="18975" relation="include">
        </childnode>
      </node>
      <node id="18919">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18920" relation="include">
        </childnode>
      </node>
      <node id="18934">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
        <childnode refid="18929" relation="include">
        </childnode>
        <childnode refid="18935" relation="include">
        </childnode>
        <childnode refid="18936" relation="include">
        </childnode>
      </node>
      <node id="18921">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
      </node>
      <node id="18914">
        <label>utility</label>
      </node>
      <node id="18940">
        <label>array</label>
      </node>
      <node id="18909">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18910" relation="include">
        </childnode>
        <childnode refid="18911" relation="include">
        </childnode>
        <childnode refid="18912" relation="include">
        </childnode>
        <childnode refid="18913" relation="include">
        </childnode>
        <childnode refid="18914" relation="include">
        </childnode>
        <childnode refid="18915" relation="include">
        </childnode>
        <childnode refid="18916" relation="include">
        </childnode>
        <childnode refid="18917" relation="include">
        </childnode>
        <childnode refid="18918" relation="include">
        </childnode>
        <childnode refid="18919" relation="include">
        </childnode>
        <childnode refid="18939" relation="include">
        </childnode>
        <childnode refid="18948" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18920" relation="include">
        </childnode>
        <childnode refid="18957" relation="include">
        </childnode>
        <childnode refid="18961" relation="include">
        </childnode>
        <childnode refid="18962" relation="include">
        </childnode>
        <childnode refid="18976" relation="include">
        </childnode>
        <childnode refid="18977" relation="include">
        </childnode>
        <childnode refid="18967" relation="include">
        </childnode>
        <childnode refid="18981" relation="include">
        </childnode>
        <childnode refid="18926" relation="include">
        </childnode>
        <childnode refid="18970" relation="include">
        </childnode>
        <childnode refid="18989" relation="include">
        </childnode>
        <childnode refid="18963" relation="include">
        </childnode>
        <childnode refid="18990" relation="include">
        </childnode>
        <childnode refid="19021" relation="include">
        </childnode>
        <childnode refid="18974" relation="include">
        </childnode>
        <childnode refid="18995" relation="include">
        </childnode>
        <childnode refid="19031" relation="include">
        </childnode>
        <childnode refid="19023" relation="include">
        </childnode>
        <childnode refid="18992" relation="include">
        </childnode>
        <childnode refid="19032" relation="include">
        </childnode>
      </node>
      <node id="19022">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="19023" relation="include">
        </childnode>
        <childnode refid="18932" relation="include">
        </childnode>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18962" relation="include">
        </childnode>
        <childnode refid="18935" relation="include">
        </childnode>
      </node>
      <node id="18941">
        <label>sstream</label>
      </node>
      <node id="18907">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayUtility.H</label>
        <link refid="AMReX_FabArrayUtility.H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18909" relation="include">
        </childnode>
        <childnode refid="19031" relation="include">
        </childnode>
        <childnode refid="18963" relation="include">
        </childnode>
        <childnode refid="18912" relation="include">
        </childnode>
      </node>
      <node id="18927">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18928" relation="include">
        </childnode>
      </node>
      <node id="18946">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18916" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
        <childnode refid="18929" relation="include">
        </childnode>
        <childnode refid="18947" relation="include">
        </childnode>
        <childnode refid="18919" relation="include">
        </childnode>
      </node>
      <node id="18930">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18931" relation="include">
        </childnode>
      </node>
      <node id="18993">
        <label>AMReX_GpuKernelInfo.H</label>
        <link refid="AMReX__GpuKernelInfo_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
      </node>
      <node id="19001">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
        <childnode refid="18943" relation="include">
        </childnode>
        <childnode refid="18997" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18995" relation="include">
        </childnode>
      </node>
      <node id="18967">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18926" relation="include">
        </childnode>
        <childnode refid="18966" relation="include">
        </childnode>
        <childnode refid="18968" relation="include">
        </childnode>
        <childnode refid="18970" relation="include">
        </childnode>
        <childnode refid="18919" relation="include">
        </childnode>
        <childnode refid="18930" relation="include">
        </childnode>
        <childnode refid="18932" relation="include">
        </childnode>
        <childnode refid="18939" relation="include">
        </childnode>
        <childnode refid="18948" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18910" relation="include">
        </childnode>
        <childnode refid="18915" relation="include">
        </childnode>
        <childnode refid="18918" relation="include">
        </childnode>
        <childnode refid="18971" relation="include">
        </childnode>
        <childnode refid="18916" relation="include">
        </childnode>
        <childnode refid="18937" relation="include">
        </childnode>
        <childnode refid="18912" relation="include">
        </childnode>
        <childnode refid="18972" relation="include">
        </childnode>
        <childnode refid="18973" relation="include">
        </childnode>
      </node>
      <node id="18981">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18936" relation="include">
        </childnode>
        <childnode refid="18910" relation="include">
        </childnode>
        <childnode refid="18941" relation="include">
        </childnode>
        <childnode refid="18918" relation="include">
        </childnode>
        <childnode refid="18913" relation="include">
        </childnode>
        <childnode refid="18982" relation="include">
        </childnode>
        <childnode refid="18942" relation="include">
        </childnode>
        <childnode refid="18953" relation="include">
        </childnode>
        <childnode refid="18912" relation="include">
        </childnode>
        <childnode refid="18983" relation="include">
        </childnode>
        <childnode refid="18919" relation="include">
        </childnode>
        <childnode refid="18932" relation="include">
        </childnode>
        <childnode refid="18930" relation="include">
        </childnode>
        <childnode refid="18939" relation="include">
        </childnode>
        <childnode refid="18948" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18957" relation="include">
        </childnode>
        <childnode refid="18976" relation="include">
        </childnode>
        <childnode refid="18967" relation="include">
        </childnode>
        <childnode refid="18984" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
        <childnode refid="18987" relation="include">
        </childnode>
      </node>
      <node id="18975">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18919" relation="include">
        </childnode>
        <childnode refid="18958" relation="include">
        </childnode>
        <childnode refid="18936" relation="include">
        </childnode>
      </node>
      <node id="18955">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18950" relation="include">
        </childnode>
        <childnode refid="18919" relation="include">
        </childnode>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
      </node>
      <node id="18947">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18910" relation="include">
        </childnode>
        <childnode refid="18932" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
      </node>
      <node id="18950">
        <label>iosfwd</label>
      </node>
      <node id="18936">
        <label>cstdlib</label>
      </node>
      <node id="18910">
        <label>iostream</label>
      </node>
      <node id="18954">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18950" relation="include">
        </childnode>
        <childnode refid="18926" relation="include">
        </childnode>
        <childnode refid="18952" relation="include">
        </childnode>
        <childnode refid="18945" relation="include">
        </childnode>
      </node>
      <node id="18956">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18952" relation="include">
        </childnode>
        <childnode refid="18922" relation="include">
        </childnode>
      </node>
      <node id="18958">
        <label>cstddef</label>
      </node>
      <node id="18959">
        <label>unordered_map</label>
      </node>
      <node id="18961">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18950" relation="include">
        </childnode>
        <childnode refid="18954" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18952" relation="include">
        </childnode>
        <childnode refid="18960" relation="include">
        </childnode>
      </node>
      <node id="19018">
        <label>AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18995" relation="include">
        </childnode>
        <childnode refid="18992" relation="include">
        </childnode>
        <childnode refid="19015" relation="include">
        </childnode>
        <childnode refid="19016" relation="include">
        </childnode>
        <childnode refid="18996" relation="include">
        </childnode>
        <childnode refid="18942" relation="include">
        </childnode>
        <childnode refid="18914" relation="include">
        </childnode>
        <childnode refid="18938" relation="include">
        </childnode>
        <childnode refid="18911" relation="include">
        </childnode>
      </node>
      <node id="18992">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
        <childnode refid="18993" relation="include">
        </childnode>
        <childnode refid="18922" relation="include">
        </childnode>
        <childnode refid="18924" relation="include">
        </childnode>
        <childnode refid="18944" relation="include">
        </childnode>
        <childnode refid="18943" relation="include">
        </childnode>
        <childnode refid="18994" relation="include">
        </childnode>
        <childnode refid="19000" relation="include">
        </childnode>
        <childnode refid="18997" relation="include">
        </childnode>
        <childnode refid="19004" relation="include">
        </childnode>
        <childnode refid="19006" relation="include">
        </childnode>
        <childnode refid="18996" relation="include">
        </childnode>
        <childnode refid="19013" relation="include">
        </childnode>
        <childnode refid="19014" relation="include">
        </childnode>
        <childnode refid="19002" relation="include">
        </childnode>
        <childnode refid="19001" relation="include">
        </childnode>
        <childnode refid="19003" relation="include">
        </childnode>
        <childnode refid="19015" relation="include">
        </childnode>
        <childnode refid="19016" relation="include">
        </childnode>
        <childnode refid="19020" relation="include">
        </childnode>
      </node>
      <node id="18953">
        <label>climits</label>
      </node>
      <node id="19020">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
      </node>
      <node id="19027">
        <label>mutex</label>
      </node>
      <node id="18982">
        <label>chrono</label>
      </node>
      <node id="19011">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
      </node>
      <node id="18973">
        <label>csignal</label>
      </node>
      <node id="18994">
        <label>AMReX_GpuFuse.H</label>
        <link refid="AMReX__GpuFuse_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18975" relation="include">
        </childnode>
        <childnode refid="18948" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18995" relation="include">
        </childnode>
        <childnode refid="18996" relation="include">
        </childnode>
        <childnode refid="18999" relation="include">
        </childnode>
        <childnode refid="18911" relation="include">
        </childnode>
        <childnode refid="18938" relation="include">
        </childnode>
      </node>
      <node id="18999">
        <label>AMReX_GpuLaunchGlobal.H</label>
        <link refid="AMReX__GpuLaunchGlobal_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
      </node>
      <node id="19026">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18958" relation="include">
        </childnode>
        <childnode refid="18917" relation="include">
        </childnode>
        <childnode refid="18915" relation="include">
        </childnode>
        <childnode refid="19027" relation="include">
        </childnode>
        <childnode refid="19028" relation="include">
        </childnode>
        <childnode refid="18937" relation="include">
        </childnode>
        <childnode refid="18918" relation="include">
        </childnode>
        <childnode refid="18975" relation="include">
        </childnode>
      </node>
      <node id="18942">
        <label>type_traits</label>
      </node>
      <node id="18917">
        <label>set</label>
      </node>
      <node id="19025">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18975" relation="include">
        </childnode>
      </node>
      <node id="18926">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
      </node>
      <node id="19014">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18975" relation="include">
        </childnode>
      </node>
      <node id="18916">
        <label>algorithm</label>
      </node>
      <node id="18996">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18936" relation="include">
        </childnode>
        <childnode refid="18938" relation="include">
        </childnode>
        <childnode refid="18940" relation="include">
        </childnode>
        <childnode refid="18920" relation="include">
        </childnode>
        <childnode refid="18981" relation="include">
        </childnode>
        <childnode refid="18944" relation="include">
        </childnode>
        <childnode refid="18997" relation="include">
        </childnode>
        <childnode refid="18943" relation="include">
        </childnode>
        <childnode refid="18998" relation="include">
        </childnode>
        <childnode refid="18948" relation="include">
        </childnode>
      </node>
      <node id="18924">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18925" relation="include">
        </childnode>
      </node>
      <node id="19004">
        <label>AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
        <childnode refid="19005" relation="include">
        </childnode>
      </node>
      <node id="18911">
        <label>cstring</label>
      </node>
      <node id="18980">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18958" relation="include">
        </childnode>
        <childnode refid="18936" relation="include">
        </childnode>
        <childnode refid="18911" relation="include">
        </childnode>
        <childnode refid="18910" relation="include">
        </childnode>
        <childnode refid="18935" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
        <childnode refid="18932" relation="include">
        </childnode>
        <childnode refid="18945" relation="include">
        </childnode>
        <childnode refid="18915" relation="include">
        </childnode>
        <childnode refid="18952" relation="include">
        </childnode>
        <childnode refid="18981" relation="include">
        </childnode>
        <childnode refid="18934" relation="include">
        </childnode>
      </node>
      <node id="18978">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18912" relation="include">
        </childnode>
        <childnode refid="18920" relation="include">
        </childnode>
        <childnode refid="18932" relation="include">
        </childnode>
        <childnode refid="18939" relation="include">
        </childnode>
        <childnode refid="18948" relation="include">
        </childnode>
        <childnode refid="18949" relation="include">
        </childnode>
      </node>
      <node id="18938">
        <label>memory</label>
      </node>
      <node id="19013">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18958" relation="include">
        </childnode>
        <childnode refid="18911" relation="include">
        </childnode>
        <childnode refid="18936" relation="include">
        </childnode>
        <childnode refid="18938" relation="include">
        </childnode>
        <childnode refid="18975" relation="include">
        </childnode>
        <childnode refid="18995" relation="include">
        </childnode>
        <childnode refid="18996" relation="include">
        </childnode>
      </node>
      <node id="18931">
        <label>inttypes.h</label>
      </node>
      <node id="19002">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18921" relation="include">
        </childnode>
        <childnode refid="18943" relation="include">
        </childnode>
        <childnode refid="18996" relation="include">
        </childnode>
        <childnode refid="18995" relation="include">
        </childnode>
        <childnode refid="18975" relation="include">
        </childnode>
        <childnode refid="18936" relation="include">
        </childnode>
      </node>
      <node id="18932">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="18908" relation="include">
        </childnode>
        <childnode refid="18929" relation="include">
        </childnode>
        <childnode refid="18933" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="19111">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_ErrorList.H</label>
        <link refid="AMReX__ErrorList_8H"/>
        <childnode refid="19112" relation="include">
        </childnode>
      </node>
      <node id="19048">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp</label>
        <link refid="AMReX__AmrDataAdaptor_8cpp"/>
      </node>
      <node id="19073">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticle_mod_K.H</label>
        <link refid="AMReX__TracerParticle__mod__K_8H"/>
        <childnode refid="19074" relation="include">
        </childnode>
      </node>
      <node id="19059">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.cpp</label>
        <link refid="AMReX__MLEBTensorOp_8cpp"/>
      </node>
      <node id="19154">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryRegister.cpp</label>
        <link refid="AMReX__BndryRegister_8cpp"/>
      </node>
      <node id="19200">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleBufferMap.cpp</label>
        <link refid="AMReX__ParticleBufferMap_8cpp"/>
      </node>
      <node id="19038">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxRegister.cpp</label>
        <link refid="AMReX__FluxRegister_8cpp"/>
      </node>
      <node id="19185">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreIJIface.H</label>
        <link refid="AMReX__HypreIJIface_8H"/>
        <childnode refid="19102" relation="include">
        </childnode>
        <childnode refid="19133" relation="include">
        </childnode>
        <childnode refid="19053" relation="include">
        </childnode>
      </node>
      <node id="19057">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.cpp</label>
        <link refid="AMReX__MLCellLinOp_8cpp"/>
      </node>
      <node id="19067">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_NeighborParticles.H</label>
        <link refid="AMReX__NeighborParticles_8H"/>
      </node>
      <node id="19143">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H</label>
        <link refid="AMReX__HypreABecLap_8H"/>
        <childnode refid="19103" relation="include">
        </childnode>
        <childnode refid="19144" relation="include">
        </childnode>
      </node>
      <node id="19148">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_Hypre.H</label>
        <link refid="AMReX__Hypre_8H"/>
        <childnode refid="19103" relation="include">
        </childnode>
        <childnode refid="19143" relation="include">
        </childnode>
        <childnode refid="19149" relation="include">
        </childnode>
        <childnode refid="19102" relation="include">
        </childnode>
      </node>
      <node id="19089">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.cpp</label>
        <link refid="AMReX__MLCellABecLap_8cpp"/>
      </node>
      <node id="19110">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.cpp</label>
        <link refid="AMReX__StateData_8cpp"/>
      </node>
      <node id="19077">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister.H</label>
        <link refid="AMReX__YAFluxRegister_8H"/>
        <childnode refid="19078" relation="include">
        </childnode>
        <childnode refid="19079" relation="include">
        </childnode>
        <childnode refid="19081" relation="include">
        </childnode>
      </node>
      <node id="19208">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/SDC/AMReX_SDCstruct.H</label>
        <link refid="AMReX__SDCstruct_8H"/>
        <childnode refid="19209" relation="include">
        </childnode>
      </node>
      <node id="19163">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_utils.cpp</label>
        <link refid="AMReX__EB__utils_8cpp"/>
      </node>
      <node id="19152">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp</label>
        <link refid="AMReX__PETSc_8cpp"/>
      </node>
      <node id="19061">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.cpp</label>
        <link refid="AMReX__MLNodeLaplacian_8cpp"/>
      </node>
      <node id="19087">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.H</label>
        <link refid="AMReX__MLALaplacian_8H"/>
        <childnode refid="19056" relation="include">
        </childnode>
        <childnode refid="19088" relation="include">
        </childnode>
      </node>
      <node id="19115">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCUtil.H</label>
        <link refid="AMReX__BCUtil_8H"/>
        <childnode refid="19116" relation="include">
        </childnode>
      </node>
      <node id="19093">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.cpp</label>
        <link refid="AMReX__MLLinOp_8cpp"/>
      </node>
      <node id="19130">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileDataImpl.cpp</label>
        <link refid="AMReX__PlotFileDataImpl_8cpp"/>
      </node>
      <node id="19094">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H</label>
        <link refid="AMReX__MLCGSolver_8H"/>
        <childnode refid="19095" relation="include">
        </childnode>
        <childnode refid="19096" relation="include">
        </childnode>
      </node>
      <node id="19132">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileUtil.cpp</label>
        <link refid="AMReX__PlotFileUtil_8cpp"/>
      </node>
      <node id="19141">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H</label>
        <link refid="AMReX__MacBndry_8H"/>
        <childnode refid="19142" relation="include">
        </childnode>
        <childnode refid="19143" relation="include">
        </childnode>
      </node>
      <node id="19136">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FluxRegister.H</label>
        <link refid="AMReX__FluxRegister_8H"/>
        <childnode refid="19038" relation="include">
        </childnode>
      </node>
      <node id="19149">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap2.H</label>
        <link refid="AMReX__HypreABecLap2_8H"/>
        <childnode refid="19103" relation="include">
        </childnode>
        <childnode refid="19150" relation="include">
        </childnode>
      </node>
      <node id="19081">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H</label>
        <link refid="AMReX__MLLinOp_8H"/>
        <childnode refid="19082" relation="include">
        </childnode>
        <childnode refid="19094" relation="include">
        </childnode>
        <childnode refid="19093" relation="include">
        </childnode>
        <childnode refid="19096" relation="include">
        </childnode>
        <childnode refid="19098" relation="include">
        </childnode>
      </node>
      <node id="19195">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8cpp"/>
      </node>
      <node id="19165">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_WriteEBSurface.cpp</label>
        <link refid="AMReX__WriteEBSurface_8cpp"/>
      </node>
      <node id="19096">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H</label>
        <link refid="AMReX__MLMG_8H"/>
        <childnode refid="19095" relation="include">
        </childnode>
        <childnode refid="19060" relation="include">
        </childnode>
        <childnode refid="19061" relation="include">
        </childnode>
        <childnode refid="19086" relation="include">
        </childnode>
        <childnode refid="19066" relation="include">
        </childnode>
        <childnode refid="19097" relation="include">
        </childnode>
      </node>
      <node id="19146">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.cpp</label>
        <link refid="AMReX__MLMGBndry_8cpp"/>
      </node>
      <node id="19051">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_Habec_2D_K.H</label>
        <link refid="AMReX__Habec__2D__K_8H"/>
      </node>
      <node id="19039">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_TagBox.cpp</label>
        <link refid="AMReX__TagBox_8cpp"/>
      </node>
      <node id="19113">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FillPatchUtil.H</label>
        <link refid="AMReX__FillPatchUtil_8H"/>
        <childnode refid="19046" relation="include">
        </childnode>
        <childnode refid="19069" relation="include">
        </childnode>
        <childnode refid="19114" relation="include">
        </childnode>
      </node>
      <node id="19138">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryData.cpp</label>
        <link refid="AMReX__BndryData_8cpp"/>
      </node>
      <node id="19178">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.H</label>
        <link refid="AMReX__BLWritePlotFile_8H"/>
        <childnode refid="19179" relation="include">
        </childnode>
      </node>
      <node id="19193">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_RegionsProfStats.H</label>
        <link refid="AMReX__RegionsProfStats_8H"/>
        <childnode refid="19187" relation="include">
        </childnode>
        <childnode refid="19188" relation="include">
        </childnode>
        <childnode refid="19189" relation="include">
        </childnode>
        <childnode refid="19191" relation="include">
        </childnode>
      </node>
      <node id="19108">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Extrapolater.H</label>
        <link refid="AMReX__Extrapolater_8H"/>
        <childnode refid="19037" relation="include">
        </childnode>
      </node>
      <node id="19100">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLaplacian.H</label>
        <link refid="AMReX__MLNodeTensorLaplacian_8H"/>
        <childnode refid="19101" relation="include">
        </childnode>
        <childnode refid="19063" relation="include">
        </childnode>
      </node>
      <node id="19082">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H</label>
        <link refid="AMReX__MLCellLinOp_8H"/>
        <childnode refid="19083" relation="include">
        </childnode>
        <childnode refid="19057" relation="include">
        </childnode>
        <childnode refid="19093" relation="include">
        </childnode>
      </node>
      <node id="19202">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleCommunication.cpp</label>
        <link refid="AMReX__ParticleCommunication_8cpp"/>
      </node>
      <node id="19145">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H</label>
        <link refid="AMReX__MLMGBndry_8H"/>
        <childnode refid="19081" relation="include">
        </childnode>
        <childnode refid="19146" relation="include">
        </childnode>
      </node>
      <node id="19201">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleCommunication.H</label>
        <link refid="AMReX__ParticleCommunication_8H"/>
        <childnode refid="19202" relation="include">
        </childnode>
        <childnode refid="19068" relation="include">
        </childnode>
      </node>
      <node id="19079">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFluxRegister.H</label>
        <link refid="AMReX__EBFluxRegister_8H"/>
        <childnode refid="19080" relation="include">
        </childnode>
      </node>
      <node id="19069">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrParticles.H</label>
        <link refid="AMReX__AmrParticles_8H"/>
      </node>
      <node id="19083">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.H</label>
        <link refid="AMReX__MLCellABecLap_8H"/>
        <childnode refid="19084" relation="include">
        </childnode>
        <childnode refid="19087" relation="include">
        </childnode>
        <childnode refid="19089" relation="include">
        </childnode>
        <childnode refid="19090" relation="include">
        </childnode>
        <childnode refid="19092" relation="include">
        </childnode>
      </node>
      <node id="19144">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.cpp</label>
        <link refid="AMReX__HypreABecLap_8cpp"/>
      </node>
      <node id="19210">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_VisMF.cpp</label>
        <link refid="AMReX__VisMF_8cpp"/>
      </node>
      <node id="19091">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.H</label>
        <link refid="AMReX__MLEBTensorOp_8H"/>
        <childnode refid="19059" relation="include">
        </childnode>
      </node>
      <node id="19106">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AuxBoundaryData.H</label>
        <link refid="AMReX__AuxBoundaryData_8H"/>
        <childnode refid="19107" relation="include">
        </childnode>
      </node>
      <node id="19103">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_Hypre.cpp</label>
        <link refid="AMReX__Hypre_8cpp"/>
      </node>
      <node id="19070">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_NeighborList.H</label>
        <link refid="AMReX__NeighborList_8H"/>
        <childnode refid="19067" relation="include">
        </childnode>
      </node>
      <node id="19184">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/hpgmg/BL_HPGMG.cpp</label>
        <link refid="BL__HPGMG_8cpp"/>
      </node>
      <node id="19126">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Derive.cpp</label>
        <link refid="AMReX__Derive_8cpp"/>
      </node>
      <node id="19175">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_AmrData.H</label>
        <link refid="AMReX__AmrData_8H"/>
        <childnode refid="19123" relation="include">
        </childnode>
        <childnode refid="19176" relation="include">
        </childnode>
      </node>
      <node id="19105">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="19044" relation="include">
        </childnode>
        <childnode refid="19106" relation="include">
        </childnode>
        <childnode refid="19108" relation="include">
        </childnode>
        <childnode refid="19109" relation="include">
        </childnode>
        <childnode refid="19111" relation="include">
        </childnode>
        <childnode refid="19113" relation="include">
        </childnode>
        <childnode refid="19040" relation="include">
        </childnode>
        <childnode refid="19115" relation="include">
        </childnode>
        <childnode refid="19117" relation="include">
        </childnode>
        <childnode refid="19118" relation="include">
        </childnode>
        <childnode refid="19120" relation="include">
        </childnode>
        <childnode refid="19121" relation="include">
        </childnode>
        <childnode refid="19042" relation="include">
        </childnode>
        <childnode refid="19043" relation="include">
        </childnode>
        <childnode refid="19124" relation="include">
        </childnode>
        <childnode refid="19129" relation="include">
        </childnode>
        <childnode refid="19131" relation="include">
        </childnode>
        <childnode refid="19134" relation="include">
        </childnode>
        <childnode refid="19077" relation="include">
        </childnode>
        <childnode refid="19156" relation="include">
        </childnode>
        <childnode refid="19159" relation="include">
        </childnode>
        <childnode refid="19168" relation="include">
        </childnode>
        <childnode refid="19163" relation="include">
        </childnode>
        <childnode refid="19162" relation="include">
        </childnode>
        <childnode refid="19170" relation="include">
        </childnode>
        <childnode refid="19167" relation="include">
        </childnode>
        <childnode refid="19172" relation="include">
        </childnode>
        <childnode refid="19173" relation="include">
        </childnode>
        <childnode refid="19165" relation="include">
        </childnode>
        <childnode refid="19174" relation="include">
        </childnode>
        <childnode refid="19175" relation="include">
        </childnode>
        <childnode refid="19181" relation="include">
        </childnode>
        <childnode refid="19183" relation="include">
        </childnode>
        <childnode refid="19148" relation="include">
        </childnode>
        <childnode refid="19143" relation="include">
        </childnode>
        <childnode refid="19185" relation="include">
        </childnode>
        <childnode refid="19053" relation="include">
        </childnode>
        <childnode refid="19151" relation="include">
        </childnode>
        <childnode refid="19186" relation="include">
        </childnode>
        <childnode refid="19188" relation="include">
        </childnode>
        <childnode refid="19178" relation="include">
        </childnode>
        <childnode refid="19192" relation="include">
        </childnode>
        <childnode refid="19194" relation="include">
        </childnode>
        <childnode refid="19196" relation="include">
        </childnode>
        <childnode refid="19094" relation="include">
        </childnode>
        <childnode refid="19081" relation="include">
        </childnode>
        <childnode refid="19066" relation="include">
        </childnode>
        <childnode refid="19097" relation="include">
        </childnode>
        <childnode refid="19067" relation="include">
        </childnode>
        <childnode refid="19197" relation="include">
        </childnode>
        <childnode refid="19207" relation="include">
        </childnode>
        <childnode refid="19208" relation="include">
        </childnode>
      </node>
      <node id="19180">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_ProfParserBatch.cpp</label>
        <link refid="AMReX__ProfParserBatch_8cpp"/>
      </node>
      <node id="19049">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil.cpp</label>
        <link refid="AMReX__MultiFabUtil_8cpp"/>
      </node>
      <node id="19137">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryData.H</label>
        <link refid="AMReX__BndryData_8H"/>
        <childnode refid="19138" relation="include">
        </childnode>
        <childnode refid="19139" relation="include">
        </childnode>
        <childnode refid="19147" relation="include">
        </childnode>
        <childnode refid="19148" relation="include">
        </childnode>
        <childnode refid="19053" relation="include">
        </childnode>
        <childnode refid="19151" relation="include">
        </childnode>
        <childnode refid="19153" relation="include">
        </childnode>
      </node>
      <node id="19199">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleBufferMap.H</label>
        <link refid="AMReX__ParticleBufferMap_8H"/>
        <childnode refid="19200" relation="include">
        </childnode>
        <childnode refid="19201" relation="include">
        </childnode>
        <childnode refid="19068" relation="include">
        </childnode>
        <childnode refid="19203" relation="include">
        </childnode>
      </node>
      <node id="19088">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.cpp</label>
        <link refid="AMReX__MLPoisson_8cpp"/>
      </node>
      <node id="19095">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.cpp</label>
        <link refid="AMReX__MLCGSolver_8cpp"/>
      </node>
      <node id="19196">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrMeshInSituBridge.cpp</label>
        <link refid="AMReX__AmrMeshInSituBridge_8cpp"/>
      </node>
      <node id="19066">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/Projections/AMReX_NodalProjector.cpp</label>
        <link refid="AMReX__NodalProjector_8cpp"/>
      </node>
      <node id="19123">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp</label>
        <link refid="AMReX__AmrData_8cpp"/>
      </node>
      <node id="19206">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleLocator.H</label>
        <link refid="AMReX__ParticleLocator_8H"/>
        <childnode refid="19068" relation="include">
        </childnode>
      </node>
      <node id="19177">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_DataServices.cpp</label>
        <link refid="AMReX__DataServices_8cpp"/>
      </node>
      <node id="19164">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFabFactory.cpp</label>
        <link refid="AMReX__EBFabFactory_8cpp"/>
      </node>
      <node id="19187">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfStats.cpp</label>
        <link refid="AMReX__BLProfStats_8cpp"/>
      </node>
      <node id="19060">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.cpp</label>
        <link refid="AMReX__MLMG_8cpp"/>
      </node>
      <node id="19168">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_MultiGFab.H</label>
        <link refid="AMReX__EB2__MultiGFab_8H"/>
        <childnode refid="19159" relation="include">
        </childnode>
        <childnode refid="19169" relation="include">
        </childnode>
      </node>
      <node id="19080">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBFluxRegister.cpp</label>
        <link refid="AMReX__EBFluxRegister_8cpp"/>
      </node>
      <node id="19203">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleUtil.H</label>
        <link refid="AMReX__ParticleUtil_8H"/>
        <childnode refid="19067" relation="include">
        </childnode>
        <childnode refid="19068" relation="include">
        </childnode>
        <childnode refid="19204" relation="include">
        </childnode>
        <childnode refid="19205" relation="include">
        </childnode>
        <childnode refid="19075" relation="include">
        </childnode>
      </node>
      <node id="19102">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H</label>
        <link refid="AMReX__HypreABecLap3_8H"/>
        <childnode refid="19103" relation="include">
        </childnode>
        <childnode refid="19104" relation="include">
        </childnode>
      </node>
      <node id="19166">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.cpp</label>
        <link refid="AMReX__EB2__Level_8cpp"/>
      </node>
      <node id="19139">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData.H</label>
        <link refid="AMReX__InterpBndryData_8H"/>
        <childnode refid="19140" relation="include">
        </childnode>
        <childnode refid="19141" relation="include">
        </childnode>
        <childnode refid="19145" relation="include">
        </childnode>
      </node>
      <node id="19122">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MFCopyDescriptor.cpp</label>
        <link refid="AMReX__MFCopyDescriptor_8cpp"/>
      </node>
      <node id="19064">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.cpp</label>
        <link refid="AMReX__MLTensorOp_8cpp"/>
      </node>
      <node id="19052">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_Habec_3D_K.H</label>
        <link refid="AMReX__Habec__3D__K_8H"/>
      </node>
      <node id="19188">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfUtilities.cpp</label>
        <link refid="AMReX__BLProfUtilities_8cpp"/>
      </node>
      <node id="19120">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_Geometry.cpp</label>
        <link refid="AMReX__Geometry_8cpp"/>
      </node>
      <node id="19043">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFabUtil.H</label>
        <link refid="AMReX__MultiFabUtil_8H"/>
        <childnode refid="19044" relation="include">
        </childnode>
        <childnode refid="19039" relation="include">
        </childnode>
        <childnode refid="19041" relation="include">
        </childnode>
        <childnode refid="19049" relation="include">
        </childnode>
        <childnode refid="19050" relation="include">
        </childnode>
        <childnode refid="19051" relation="include">
        </childnode>
        <childnode refid="19052" relation="include">
        </childnode>
        <childnode refid="19053" relation="include">
        </childnode>
        <childnode refid="19055" relation="include">
        </childnode>
        <childnode refid="19056" relation="include">
        </childnode>
        <childnode refid="19057" relation="include">
        </childnode>
        <childnode refid="19058" relation="include">
        </childnode>
        <childnode refid="19059" relation="include">
        </childnode>
        <childnode refid="19060" relation="include">
        </childnode>
        <childnode refid="19061" relation="include">
        </childnode>
        <childnode refid="19062" relation="include">
        </childnode>
        <childnode refid="19063" relation="include">
        </childnode>
        <childnode refid="19064" relation="include">
        </childnode>
        <childnode refid="19065" relation="include">
        </childnode>
        <childnode refid="19066" relation="include">
        </childnode>
        <childnode refid="19067" relation="include">
        </childnode>
        <childnode refid="19068" relation="include">
        </childnode>
      </node>
      <node id="19037">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Extrapolater.cpp</label>
        <link refid="AMReX__Extrapolater_8cpp"/>
      </node>
      <node id="19036">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_iMultiFab.H</label>
        <link refid="AMReX__iMultiFab_8H"/>
        <childnode refid="19037" relation="include">
        </childnode>
        <childnode refid="19038" relation="include">
        </childnode>
        <childnode refid="19039" relation="include">
        </childnode>
        <childnode refid="19040" relation="include">
        </childnode>
        <childnode refid="19041" relation="include">
        </childnode>
        <childnode refid="19042" relation="include">
        </childnode>
        <childnode refid="19043" relation="include">
        </childnode>
        <childnode refid="19077" relation="include">
        </childnode>
        <childnode refid="19102" relation="include">
        </childnode>
        <childnode refid="19053" relation="include">
        </childnode>
        <childnode refid="19096" relation="include">
        </childnode>
        <childnode refid="19098" relation="include">
        </childnode>
      </node>
      <node id="19192">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_CommProfStats.H</label>
        <link refid="AMReX__CommProfStats_8H"/>
        <childnode refid="19188" relation="include">
        </childnode>
        <childnode refid="19189" relation="include">
        </childnode>
        <childnode refid="19190" relation="include">
        </childnode>
      </node>
      <node id="19161">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.cpp</label>
        <link refid="AMReX__EB2_8cpp"/>
      </node>
      <node id="19055">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.cpp</label>
        <link refid="AMReX__MLABecLaplacian_8cpp"/>
      </node>
      <node id="19209">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/SDC/AMReX_SDCstruct.cpp</label>
        <link refid="AMReX__SDCstruct_8cpp"/>
      </node>
      <node id="19127">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateDescriptor.cpp</label>
        <link refid="AMReX__StateDescriptor_8cpp"/>
      </node>
      <node id="19062">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.cpp</label>
        <link refid="AMReX__MLNodeLinOp_8cpp"/>
      </node>
      <node id="19097">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/Projections/AMReX_NodalProjector.H</label>
        <link refid="AMReX__NodalProjector_8H"/>
        <childnode refid="19066" relation="include">
        </childnode>
      </node>
      <node id="19099">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.H</label>
        <link refid="AMReX__MLNodeLaplacian_8H"/>
        <childnode refid="19054" relation="include">
        </childnode>
        <childnode refid="19061" relation="include">
        </childnode>
        <childnode refid="19066" relation="include">
        </childnode>
        <childnode refid="19097" relation="include">
        </childnode>
      </node>
      <node id="19071">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particle_mod_K.H</label>
        <link refid="AMReX__Particle__mod__K_8H"/>
        <childnode refid="19068" relation="include">
        </childnode>
      </node>
      <node id="19086">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.H</label>
        <link refid="AMReX__MacProjector_8H"/>
        <childnode refid="19065" relation="include">
        </childnode>
      </node>
      <node id="19050">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBMultiFabUtil.cpp</label>
        <link refid="AMReX__EBMultiFabUtil_8cpp"/>
      </node>
      <node id="19183">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/hpgmg/BL_HPGMG.H</label>
        <link refid="BL__HPGMG_8H"/>
        <childnode refid="19184" relation="include">
        </childnode>
      </node>
      <node id="19153">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_K.H</label>
        <link refid="AMReX__MLTensor__K_8H"/>
        <childnode refid="19059" relation="include">
        </childnode>
        <childnode refid="19064" relation="include">
        </childnode>
      </node>
      <node id="19176">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/amrdata/AMReX_DataServices.H</label>
        <link refid="AMReX__DataServices_8H"/>
        <childnode refid="19177" relation="include">
        </childnode>
        <childnode refid="19178" relation="include">
        </childnode>
        <childnode refid="19180" relation="include">
        </childnode>
      </node>
      <node id="19047">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_LevelBld.H</label>
        <link refid="AMReX__LevelBld_8H"/>
        <childnode refid="19045" relation="include">
        </childnode>
      </node>
      <node id="19167">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBDataCollection.cpp</label>
        <link refid="AMReX__EBDataCollection_8cpp"/>
      </node>
      <node id="19129">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileDataImpl.H</label>
        <link refid="AMReX__PlotFileDataImpl_8H"/>
        <childnode refid="19130" relation="include">
        </childnode>
        <childnode refid="19131" relation="include">
        </childnode>
      </node>
      <node id="19147">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MultiMask.cpp</label>
        <link refid="AMReX__MultiMask_8cpp"/>
      </node>
      <node id="19134">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_FabSet.H</label>
        <link refid="AMReX__FabSet_8H"/>
        <childnode refid="19045" relation="include">
        </childnode>
        <childnode refid="19135" relation="include">
        </childnode>
        <childnode refid="19155" relation="include">
        </childnode>
      </node>
      <node id="19040">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX.cpp</label>
        <link refid="AMReX_8cpp"/>
      </node>
      <node id="19104">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.cpp</label>
        <link refid="AMReX__HypreABecLap3_8cpp"/>
      </node>
      <node id="19169">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_MultiGFab.cpp</label>
        <link refid="AMReX__EB2__MultiGFab_8cpp"/>
      </node>
      <node id="19078">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_YAFluxRegister.cpp</label>
        <link refid="AMReX__YAFluxRegister_8cpp"/>
      </node>
      <node id="19173">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_MultiCutFab.cpp</label>
        <link refid="AMReX__MultiCutFab_8cpp"/>
      </node>
      <node id="19109">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateData.H</label>
        <link refid="AMReX__StateData_8H"/>
        <childnode refid="19045" relation="include">
        </childnode>
        <childnode refid="19044" relation="include">
        </childnode>
        <childnode refid="19110" relation="include">
        </childnode>
        <childnode refid="19048" relation="include">
        </childnode>
      </node>
      <node id="19150">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap2.cpp</label>
        <link refid="AMReX__HypreABecLap2_8cpp"/>
      </node>
      <node id="19157">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim.cpp</label>
        <link refid="AMReX__algoim_8cpp"/>
      </node>
      <node id="19119">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.cpp</label>
        <link refid="AMReX__ForkJoin_8cpp"/>
      </node>
      <node id="19085">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.H</label>
        <link refid="AMReX__MLTensorOp_8H"/>
        <childnode refid="19064" relation="include">
        </childnode>
      </node>
      <node id="19035">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayUtility.H</label>
        <link refid="AMReX_FabArrayUtility.H"/>
        <childnode refid="19036" relation="include">
        </childnode>
        <childnode refid="19042" relation="include">
        </childnode>
        <childnode refid="19105" relation="include">
        </childnode>
        <childnode refid="19132" relation="include">
        </childnode>
        <childnode refid="19210" relation="include">
        </childnode>
      </node>
      <node id="19054">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp</label>
        <link refid="AMReX__HypreNodeLap_8cpp"/>
      </node>
      <node id="19041">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_iMultiFab.cpp</label>
        <link refid="AMReX__iMultiFab_8cpp"/>
      </node>
      <node id="19092">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.H</label>
        <link refid="AMReX__MLPoisson_8H"/>
        <childnode refid="19088" relation="include">
        </childnode>
      </node>
      <node id="19090">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.H</label>
        <link refid="AMReX__MLEBABecLap_8H"/>
        <childnode refid="19058" relation="include">
        </childnode>
        <childnode refid="19059" relation="include">
        </childnode>
        <childnode refid="19091" relation="include">
        </childnode>
      </node>
      <node id="19171">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBAmrUtil.cpp</label>
        <link refid="AMReX__EBAmrUtil_8cpp"/>
      </node>
      <node id="19186">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfStats.H</label>
        <link refid="AMReX__BLProfStats_8H"/>
        <childnode refid="19187" relation="include">
        </childnode>
        <childnode refid="19188" relation="include">
        </childnode>
        <childnode refid="19189" relation="include">
        </childnode>
        <childnode refid="19192" relation="include">
        </childnode>
        <childnode refid="19193" relation="include">
        </childnode>
      </node>
      <node id="19065">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/Projections/AMReX_MacProjector.cpp</label>
        <link refid="AMReX__MacProjector_8cpp"/>
      </node>
      <node id="19190">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_CommProfStats.cpp</label>
        <link refid="AMReX__CommProfStats_8cpp"/>
      </node>
      <node id="19191">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_RegionsProfStats.cpp</label>
        <link refid="AMReX__RegionsProfStats_8cpp"/>
      </node>
      <node id="19140">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_InterpBndryData.cpp</label>
        <link refid="AMReX__InterpBndryData_8cpp"/>
      </node>
      <node id="19044">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.H</label>
        <link refid="AMReX__AmrLevel_8H"/>
        <childnode refid="19045" relation="include">
        </childnode>
        <childnode refid="19046" relation="include">
        </childnode>
        <childnode refid="19047" relation="include">
        </childnode>
        <childnode refid="19048" relation="include">
        </childnode>
      </node>
      <node id="19158">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H</label>
        <link refid="AMReX__algoim__K_8H"/>
        <childnode refid="19157" relation="include">
        </childnode>
      </node>
      <node id="19042">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MultiFab.cpp</label>
        <link refid="AMReX__MultiFab_8cpp"/>
      </node>
      <node id="19098">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.H</label>
        <link refid="AMReX__MLNodeLinOp_8H"/>
        <childnode refid="19099" relation="include">
        </childnode>
        <childnode refid="19062" relation="include">
        </childnode>
        <childnode refid="19100" relation="include">
        </childnode>
      </node>
      <node id="19133">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreIJIface.cpp</label>
        <link refid="AMReX__HypreIJIface_8cpp"/>
      </node>
      <node id="19125">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_StateDescriptor.H</label>
        <link refid="AMReX__StateDescriptor_8H"/>
        <childnode refid="19044" relation="include">
        </childnode>
        <childnode refid="19126" relation="include">
        </childnode>
        <childnode refid="19110" relation="include">
        </childnode>
        <childnode refid="19109" relation="include">
        </childnode>
        <childnode refid="19127" relation="include">
        </childnode>
      </node>
      <node id="19135">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_BndryRegister.H</label>
        <link refid="AMReX__BndryRegister_8H"/>
        <childnode refid="19136" relation="include">
        </childnode>
        <childnode refid="19137" relation="include">
        </childnode>
        <childnode refid="19154" relation="include">
        </childnode>
        <childnode refid="19081" relation="include">
        </childnode>
      </node>
      <node id="19058">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.cpp</label>
        <link refid="AMReX__MLEBABecLap_8cpp"/>
      </node>
      <node id="19156">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim.H</label>
        <link refid="AMReX__algoim_8H"/>
        <childnode refid="19157" relation="include">
        </childnode>
        <childnode refid="19158" relation="include">
        </childnode>
      </node>
      <node id="19194">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8H"/>
        <childnode refid="19195" relation="include">
        </childnode>
      </node>
      <node id="19170">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBAmrUtil.H</label>
        <link refid="AMReX__EBAmrUtil_8H"/>
        <childnode refid="19171" relation="include">
        </childnode>
      </node>
      <node id="19121">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MFCopyDescriptor.H</label>
        <link refid="AMReX__MFCopyDescriptor_8H"/>
        <childnode refid="19109" relation="include">
        </childnode>
        <childnode refid="19122" relation="include">
        </childnode>
        <childnode refid="19123" relation="include">
        </childnode>
      </node>
      <node id="19205">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleUtil.cpp</label>
        <link refid="AMReX__ParticleUtil_8cpp"/>
      </node>
      <node id="19101">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLap_K.H</label>
        <link refid="AMReX__MLNodeTensorLap__K_8H"/>
        <childnode refid="19063" relation="include">
        </childnode>
      </node>
      <node id="19182">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/Conduit/AMReX_Conduit_Blueprint.cpp</label>
        <link refid="AMReX__Conduit__Blueprint_8cpp"/>
      </node>
      <node id="19117">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_DistributionMapping.cpp</label>
        <link refid="AMReX__DistributionMapping_8cpp"/>
      </node>
      <node id="19179">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.cpp</label>
        <link refid="AMReX__BLWritePlotFile_8cpp"/>
      </node>
      <node id="19072">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticles.H</label>
        <link refid="AMReX__TracerParticles_8H"/>
        <childnode refid="19069" relation="include">
        </childnode>
        <childnode refid="19073" relation="include">
        </childnode>
        <childnode refid="19074" relation="include">
        </childnode>
      </node>
      <node id="19084">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.H</label>
        <link refid="AMReX__MLABecLaplacian_8H"/>
        <childnode refid="19055" relation="include">
        </childnode>
        <childnode refid="19058" relation="include">
        </childnode>
        <childnode refid="19060" relation="include">
        </childnode>
        <childnode refid="19085" relation="include">
        </childnode>
        <childnode refid="19086" relation="include">
        </childnode>
      </node>
      <node id="19131">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PlotFileUtil.H</label>
        <link refid="AMReX__PlotFileUtil_8H"/>
        <childnode refid="19045" relation="include">
        </childnode>
        <childnode refid="19132" relation="include">
        </childnode>
        <childnode refid="19133" relation="include">
        </childnode>
      </node>
      <node id="19114">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_FillPatchUtil.cpp</label>
        <link refid="AMReX__FillPatchUtil_8cpp"/>
      </node>
      <node id="19112">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_ErrorList.cpp</label>
        <link refid="AMReX__ErrorList_8cpp"/>
      </node>
      <node id="19142">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.cpp</label>
        <link refid="AMReX__MacBndry_8cpp"/>
      </node>
      <node id="19207">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleMesh.H</label>
        <link refid="AMReX__ParticleMesh_8H"/>
      </node>
      <node id="19181">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/Conduit/AMReX_Conduit_Blueprint.H</label>
        <link refid="AMReX__Conduit__Blueprint_8H"/>
        <childnode refid="19182" relation="include">
        </childnode>
      </node>
      <node id="19159">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_Level.H</label>
        <link refid="AMReX__EB2__Level_8H"/>
        <childnode refid="19160" relation="include">
        </childnode>
        <childnode refid="19166" relation="include">
        </childnode>
        <childnode refid="19167" relation="include">
        </childnode>
        <childnode refid="19164" relation="include">
        </childnode>
      </node>
      <node id="19128">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.cpp</label>
        <link refid="AMReX__PhysBCFunct_8cpp"/>
      </node>
      <node id="19151">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/PETSc/AMReX_PETSc.H</label>
        <link refid="AMReX__PETSc_8H"/>
        <childnode refid="19152" relation="include">
        </childnode>
      </node>
      <node id="19053">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H</label>
        <link refid="AMReX__HypreNodeLap_8H"/>
        <childnode refid="19054" relation="include">
        </childnode>
      </node>
      <node id="19198">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrParGDB.H</label>
        <link refid="AMReX__AmrParGDB_8H"/>
        <childnode refid="19069" relation="include">
        </childnode>
      </node>
      <node id="19174">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_WriteEBSurface.H</label>
        <link refid="AMReX__WriteEBSurface_8H"/>
        <childnode refid="19165" relation="include">
        </childnode>
      </node>
      <node id="19056">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.cpp</label>
        <link refid="AMReX__MLALaplacian_8cpp"/>
      </node>
      <node id="19076">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleIO.H</label>
        <link refid="AMReX__ParticleIO_8H"/>
        <childnode refid="19068" relation="include">
        </childnode>
      </node>
      <node id="19068">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particles.H</label>
        <link refid="AMReX__Particles_8H"/>
        <childnode refid="19069" relation="include">
        </childnode>
        <childnode refid="19070" relation="include">
        </childnode>
        <childnode refid="19067" relation="include">
        </childnode>
        <childnode refid="19071" relation="include">
        </childnode>
        <childnode refid="19072" relation="include">
        </childnode>
        <childnode refid="19075" relation="include">
        </childnode>
      </node>
      <node id="19046">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AmrLevel.cpp</label>
        <link refid="AMReX__AmrLevel_8cpp"/>
      </node>
      <node id="19204">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTransformation.H</label>
        <link refid="AMReX__ParticleTransformation_8H"/>
        <childnode refid="19068" relation="include">
        </childnode>
      </node>
      <node id="19075">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_WriteBinaryParticleData.H</label>
        <link refid="AMReX__WriteBinaryParticleData_8H"/>
        <childnode refid="19076" relation="include">
        </childnode>
      </node>
      <node id="19172">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EBMultiFabUtil.H</label>
        <link refid="AMReX__EBMultiFabUtil_8H"/>
        <childnode refid="19050" relation="include">
        </childnode>
        <childnode refid="19058" relation="include">
        </childnode>
        <childnode refid="19059" relation="include">
        </childnode>
      </node>
      <node id="19124">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_PhysBCFunct.H</label>
        <link refid="AMReX__PhysBCFunct_8H"/>
        <childnode refid="19109" relation="include">
        </childnode>
        <childnode refid="19125" relation="include">
        </childnode>
        <childnode refid="19113" relation="include">
        </childnode>
        <childnode refid="19116" relation="include">
        </childnode>
        <childnode refid="19128" relation="include">
        </childnode>
      </node>
      <node id="19116">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BCUtil.cpp</label>
        <link refid="AMReX__BCUtil_8cpp"/>
      </node>
      <node id="19074">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticles.cpp</label>
        <link refid="AMReX__TracerParticles_8cpp"/>
      </node>
      <node id="19045">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_Amr.cpp</label>
        <link refid="AMReX__Amr_8cpp"/>
      </node>
      <node id="19189">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/ProfParser/AMReX_BLProfUtilities.H</label>
        <link refid="AMReX__BLProfUtilities_8H"/>
        <childnode refid="19187" relation="include">
        </childnode>
        <childnode refid="19188" relation="include">
        </childnode>
        <childnode refid="19190" relation="include">
        </childnode>
        <childnode refid="19191" relation="include">
        </childnode>
      </node>
      <node id="19162">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB_utils.H</label>
        <link refid="AMReX__EB__utils_8H"/>
        <childnode refid="19163" relation="include">
        </childnode>
      </node>
      <node id="19155">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_FabSet.cpp</label>
        <link refid="AMReX__FabSet_8cpp"/>
      </node>
      <node id="19118">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H</label>
        <link refid="AMReX__ForkJoin_8H"/>
        <childnode refid="19119" relation="include">
        </childnode>
      </node>
      <node id="19063">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLaplacian.cpp</label>
        <link refid="AMReX__MLNodeTensorLaplacian_8cpp"/>
      </node>
      <node id="19160">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2.H</label>
        <link refid="AMReX__EB2_8H"/>
        <childnode refid="19157" relation="include">
        </childnode>
        <childnode refid="19161" relation="include">
        </childnode>
        <childnode refid="19162" relation="include">
        </childnode>
        <childnode refid="19164" relation="include">
        </childnode>
        <childnode refid="19165" relation="include">
        </childnode>
      </node>
      <node id="19197">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParGDB.H</label>
        <link refid="AMReX__ParGDB_8H"/>
        <childnode refid="19198" relation="include">
        </childnode>
        <childnode refid="19199" relation="include">
        </childnode>
        <childnode refid="19206" relation="include">
        </childnode>
        <childnode refid="19068" relation="include">
        </childnode>
        <childnode refid="19203" relation="include">
        </childnode>
      </node>
      <node id="19107">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Amr/AMReX_AuxBoundaryData.cpp</label>
        <link refid="AMReX__AuxBoundaryData_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1fudetail">amrex::fudetail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_FABARRAY_UTILITY_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_FABARRAY_UTILITY_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_Config.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__FabArray_8H" kindref="compound">AMReX_FabArray.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__LayoutData_8H" kindref="compound">AMReX_LayoutData.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Print_8H" kindref="compound">AMReX_Print.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type</highlight></codeline>
<codeline lineno="15" refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" kindref="member">ReduceSum</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost,<sp/>F&amp;&amp;<sp/>f)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" kindref="member">ReduceSum</ref>(fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(nghost),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="namespaceamrex_1_1fudetail" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type</highlight></codeline>
<codeline lineno="23" refid="namespaceamrex_1_1fudetail_1ac4e4c8968ec9936d092c05b63cadb38b" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1fudetail_1ac4e4c8968ec9936d092c05b63cadb38b" kindref="member">ReduceSum_host</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>sm<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(!system::regtest_reduction)<sp/>reduction(+:sm)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.growntilebox(nghost);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>arr<sp/>=<sp/>fa.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sm<sp/>+=<sp/>f(bx,<sp/>arr);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sm;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type</highlight></codeline>
<codeline lineno="47"><highlight class="normal">ReduceSum_device<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>sm<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpSum&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;value_type&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(mfi.validbox(),nghost);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr<sp/>=<sp/>fa.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref>(bx,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>b)<sp/>-&gt;<sp/>ReduceTuple</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<sp/>f(b,arr)<sp/>};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a0d0638a86325d2fbf74cde6dcea98b1f" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sm<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sm;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;!amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">ReduceSum_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1ac4e4c8968ec9936d092c05b63cadb38b" kindref="member">ReduceSum_host</ref>(fa,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type&gt;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">ReduceSum_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(fa,nghost,f);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;ReduceSum:<sp/>Launch<sp/>Region<sp/>is<sp/>off.<sp/>Device<sp/>lambda<sp/>cannot<sp/>be<sp/>called<sp/>by<sp/>host.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" kindref="member">ReduceSum</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceSum_device(fa,<sp/>nghost,<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceSum_host_wrapper(fa,<sp/>nghost,<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type</highlight></codeline>
<codeline lineno="107" refid="namespaceamrex_1a5e32d93cb04b6557dcf30553793aeb92" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" kindref="member">ReduceSum</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1ac4e4c8968ec9936d092c05b63cadb38b" kindref="member">fudetail::ReduceSum_host</ref>(fa,<sp/>nghost,<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="116" refid="namespaceamrex_1a4252562789c375cc55a545cd278cf212" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" kindref="member">ReduceSum</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost,<sp/>F&amp;&amp;<sp/>f)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" kindref="member">ReduceSum</ref>(fa1,<sp/>fa2,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(nghost),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="125" refid="namespaceamrex_1_1fudetail_1a1d6bdf0b12bbf8248f758bc5ef357fd2" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1fudetail_1ac4e4c8968ec9936d092c05b63cadb38b" kindref="member">ReduceSum_host</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>sm<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(!system::regtest_reduction)<sp/>reduction(+:sm)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa1,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.growntilebox(nghost);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr1<sp/>=<sp/>fa1.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr2<sp/>=<sp/>fa2.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sm<sp/>+=<sp/>f(bx,<sp/>arr1,<sp/>arr2);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sm;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="151"><highlight class="normal">ReduceSum_device<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>sm<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;ReduceSum_device&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpSum&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;value_type&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::FuseReductionSafeGuard<sp/>rsg(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa1);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(mfi.validbox(),nghost);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr1<sp/>=<sp/>fa1.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr2<sp/>=<sp/>fa2.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref>(bx,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>b)<sp/>-&gt;<sp/>ReduceTuple</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<sp/>f(b,<sp/>arr1,<sp/>arr2)<sp/>};</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a0d0638a86325d2fbf74cde6dcea98b1f" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sm<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sm;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;!amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type&gt;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">ReduceSum_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1ac4e4c8968ec9936d092c05b63cadb38b" kindref="member">ReduceSum_host</ref>(fa1,fa2,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type&gt;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">ReduceSum_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(fa1,fa2,nghost,f);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;ReduceSum:<sp/>Launch<sp/>Region<sp/>is<sp/>off.<sp/>Device<sp/>lambda<sp/>cannot<sp/>be<sp/>called<sp/>by<sp/>host.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><ref refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" kindref="member">ReduceSum</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceSum_device(fa1,fa2,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceSum_host_wrapper(fa1,fa2,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="218" refid="namespaceamrex_1a580c267bdc2ecf41ead1889d77b287c5" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" kindref="member">ReduceSum</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1ac4e4c8968ec9936d092c05b63cadb38b" kindref="member">fudetail::ReduceSum_host</ref>(fa1,fa2,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB3,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="228" refid="namespaceamrex_1a41a3ccdb479b7b99b07b29315b85d602" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" kindref="member">ReduceSum</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa3,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" kindref="member">ReduceSum</ref>(fa1,<sp/>fa2,<sp/>fa3,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(nghost),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB3,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="238" refid="namespaceamrex_1_1fudetail_1af78389647cebd607843fc15976161901" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1fudetail_1ac4e4c8968ec9936d092c05b63cadb38b" kindref="member">ReduceSum_host</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa3,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>sm<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(!system::regtest_reduction)<sp/>reduction(+:sm)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa1,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.growntilebox(nghost);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr1<sp/>=<sp/>fa1.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr2<sp/>=<sp/>fa2.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr3<sp/>=<sp/>fa3.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sm<sp/>+=<sp/>f(bx,<sp/>arr1,<sp/>arr2,<sp/>arr3);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sm;</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB3,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="265"><highlight class="normal">ReduceSum_device<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa3,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>sm<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpSum&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;value_type&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa1);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(mfi.validbox(),nghost);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr1<sp/>=<sp/>fa1.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr2<sp/>=<sp/>fa2.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr3<sp/>=<sp/>fa3.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref>(bx,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>b)<sp/>-&gt;<sp/>ReduceTuple</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<sp/>f(b,<sp/>arr1,<sp/>arr2,<sp/>arr3)<sp/>};</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a0d0638a86325d2fbf74cde6dcea98b1f" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sm<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sm;</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB3,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;!amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type&gt;</highlight></codeline>
<codeline lineno="298"><highlight class="normal">ReduceSum_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa3,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1ac4e4c8968ec9936d092c05b63cadb38b" kindref="member">fudetail::ReduceSum_host</ref>(fa1,fa2,fa3,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB3,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type&gt;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">ReduceSum_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa3,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(fa1,fa2,fa3,nghost,f);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;ReduceSum:<sp/>Launch<sp/>Region<sp/>is<sp/>off.<sp/>Device<sp/>lambda<sp/>cannot<sp/>be<sp/>called<sp/>by<sp/>host.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB3,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><ref refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" kindref="member">ReduceSum</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa3,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceSum_device(fa1,fa2,fa3,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceSum_host_wrapper(fa1,fa2,fa3,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB3,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="331" refid="namespaceamrex_1a643762b10ddb6c66e880320c6df34809" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" kindref="member">ReduceSum</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa3,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1ac4e4c8968ec9936d092c05b63cadb38b" kindref="member">fudetail::ReduceSum_host</ref>(fa1,fa2,fa3,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type</highlight></codeline>
<codeline lineno="341" refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" kindref="member">ReduceMin</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" kindref="member">ReduceMin</ref>(fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(nghost),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type</highlight></codeline>
<codeline lineno="350" refid="namespaceamrex_1_1fudetail_1a5f4b1211dc0900c0f69987454ec85ada" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1fudetail_1a5f4b1211dc0900c0f69987454ec85ada" kindref="member">ReduceMin_host</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>value_type<sp/>value_max<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;value_type&gt;::max</ref>();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>r<sp/>=<sp/>value_max;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>reduction(min:r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.growntilebox(nghost);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr<sp/>=<sp/>fa.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(r,<sp/>f(bx,<sp/>arr));</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type</highlight></codeline>
<codeline lineno="374"><highlight class="normal">ReduceMin_device<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>value_type<sp/>value_max<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;value_type&gt;::max</ref>();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>r<sp/>=<sp/>value_max;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpMin&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;value_type&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(mfi.validbox(),nghost);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr<sp/>=<sp/>fa.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref>(bx,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>b)<sp/>-&gt;<sp/>ReduceTuple</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<sp/>f(b,<sp/>arr)<sp/>};</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a0d0638a86325d2fbf74cde6dcea98b1f" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;!amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type&gt;</highlight></codeline>
<codeline lineno="405"><highlight class="normal">ReduceMin_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1a5f4b1211dc0900c0f69987454ec85ada" kindref="member">ReduceMin_host</ref>(fa,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type&gt;</highlight></codeline>
<codeline lineno="412"><highlight class="normal">ReduceMin_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(fa,nghost,f);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;ReduceMin:<sp/>Launch<sp/>Region<sp/>is<sp/>off.<sp/>Device<sp/>lambda<sp/>cannot<sp/>be<sp/>called<sp/>by<sp/>host.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><ref refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" kindref="member">ReduceMin</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceMin_device(fa,<sp/>nghost,<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceMin_host_wrapper(fa,<sp/>nghost,<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type</highlight></codeline>
<codeline lineno="435" refid="namespaceamrex_1a0b14cf8ae0f4d40d865377df85ff8301" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" kindref="member">ReduceMin</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1a5f4b1211dc0900c0f69987454ec85ada" kindref="member">fudetail::ReduceMin_host</ref>(fa,<sp/>nghost,<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="444" refid="namespaceamrex_1ab427586186a5143d74279bb26107044a" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" kindref="member">ReduceMin</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="445"><highlight class="normal">{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" kindref="member">ReduceMin</ref>(fa1,<sp/>fa2,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(nghost),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="453" refid="namespaceamrex_1_1fudetail_1adf5af5f75a1e703a505298286d4c584b" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1fudetail_1a5f4b1211dc0900c0f69987454ec85ada" kindref="member">ReduceMin_host</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>value_type<sp/>value_max<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;value_type&gt;::max</ref>();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>r<sp/>=<sp/>value_max;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>reduction(min:r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa1,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.growntilebox(nghost);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr1<sp/>=<sp/>fa1.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr2<sp/>=<sp/>fa2.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(r,<sp/>f(bx,<sp/>arr1,<sp/>arr2));</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="480"><highlight class="normal">ReduceMin_device<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="482"><highlight class="normal">{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>value_type<sp/>value_max<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;value_type&gt;::max</ref>();</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>r<sp/>=<sp/>value_max;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpMin&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;value_type&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa1);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(mfi.validbox(),nghost);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr1<sp/>=<sp/>fa1.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr2<sp/>=<sp/>fa2.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref>(bx,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>b)<sp/>-&gt;<sp/>ReduceTuple</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<sp/>f(b,<sp/>arr1,<sp/>arr2)<sp/>};</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a0d0638a86325d2fbf74cde6dcea98b1f" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;!amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type&gt;</highlight></codeline>
<codeline lineno="513"><highlight class="normal">ReduceMin_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1a5f4b1211dc0900c0f69987454ec85ada" kindref="member">fudetail::ReduceMin_host</ref>(fa1,fa2,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type&gt;</highlight></codeline>
<codeline lineno="521"><highlight class="normal">ReduceMin_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(fa1,fa2,nghost,f);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;ReduceMin:<sp/>Launch<sp/>Region<sp/>is<sp/>off.<sp/>Device<sp/>lambda<sp/>cannot<sp/>be<sp/>called<sp/>by<sp/>host.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><ref refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" kindref="member">ReduceMin</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="535"><highlight class="normal">{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceMin_device(fa1,fa2,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceMin_host_wrapper(fa1,fa2,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="546" refid="namespaceamrex_1a7385647d73fd0e4b29617d87309f3c78" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" kindref="member">ReduceMin</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1a5f4b1211dc0900c0f69987454ec85ada" kindref="member">fudetail::ReduceMin_host</ref>(fa1,fa2,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB3,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="556" refid="namespaceamrex_1adbeb820864e599e86ce8f5f30773beac" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" kindref="member">ReduceMin</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa3,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" kindref="member">ReduceMin</ref>(fa1,<sp/>fa2,<sp/>fa3,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(nghost),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB3,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="566" refid="namespaceamrex_1_1fudetail_1abadf4108c12ac900966af4200172575f" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1fudetail_1a5f4b1211dc0900c0f69987454ec85ada" kindref="member">ReduceMin_host</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa3,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>value_type<sp/>value_max<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;value_type&gt;::max</ref>();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>r<sp/>=<sp/>value_max;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>reduction(min:r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa1,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.growntilebox(nghost);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr1<sp/>=<sp/>fa1.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr2<sp/>=<sp/>fa2.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr3<sp/>=<sp/>fa3.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(r,<sp/>f(bx,<sp/>arr1,<sp/>arr2,<sp/>arr3));</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB3,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="594"><highlight class="normal">ReduceMin_device<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa3,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>value_type<sp/>value_max<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;value_type&gt;::max</ref>();</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>r<sp/>=<sp/>value_max;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpMin&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;value_type&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa1);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(mfi.validbox(),nghost);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr1<sp/>=<sp/>fa1.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr2<sp/>=<sp/>fa2.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr3<sp/>=<sp/>fa3.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref>(bx,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>b)<sp/>-&gt;<sp/>ReduceTuple</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<sp/>f(b,<sp/>arr1,<sp/>arr2,<sp/>arr3)<sp/>};</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a0d0638a86325d2fbf74cde6dcea98b1f" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB3,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;!amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type&gt;</highlight></codeline>
<codeline lineno="628"><highlight class="normal">ReduceMin_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa3,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1a5f4b1211dc0900c0f69987454ec85ada" kindref="member">fudetail::ReduceMin_host</ref>(fa1,fa2,fa3,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB3,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type&gt;</highlight></codeline>
<codeline lineno="636"><highlight class="normal">ReduceMin_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa3,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="638"><highlight class="normal">{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(fa1,fa2,fa3,nghost,f);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;ReduceMin:<sp/>Launch<sp/>Region<sp/>is<sp/>off.<sp/>Device<sp/>lambda<sp/>lambda<sp/>cannot<sp/>be<sp/>called<sp/>by<sp/>host.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB3,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><ref refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" kindref="member">ReduceMin</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa3,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="650"><highlight class="normal">{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceMin_device(fa1,fa2,fa3,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceMin_host_wrapper(fa1,fa2,fa3,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB3,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="661" refid="namespaceamrex_1a98b8b6dfe17e7e9225a567793e47f606" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" kindref="member">ReduceMin</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa3,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="663"><highlight class="normal">{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1a5f4b1211dc0900c0f69987454ec85ada" kindref="member">fudetail::ReduceMin_host</ref>(fa1,fa2,fa3,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type</highlight></codeline>
<codeline lineno="671" refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" kindref="member">ReduceMax</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" kindref="member">ReduceMax</ref>(fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(nghost),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type</highlight></codeline>
<codeline lineno="680" refid="namespaceamrex_1_1fudetail_1af879cc28290c113cead314b2f3a5ce68" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1fudetail_1af879cc28290c113cead314b2f3a5ce68" kindref="member">ReduceMax_host</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="681"><highlight class="normal">{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>value_type<sp/>value_lowest<sp/>=<sp/>std::numeric_limits&lt;value_type&gt;::lowest();</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>r<sp/>=<sp/>value_lowest;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>reduction(max:r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.growntilebox(nghost);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr<sp/>=<sp/>fa.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(r,<sp/>f(bx,<sp/>arr));</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type</highlight></codeline>
<codeline lineno="705"><highlight class="normal">ReduceMax_device<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="706"><highlight class="normal">{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>value_type<sp/>value_lowest<sp/>=<sp/>std::numeric_limits&lt;value_type&gt;::lowest();</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>r<sp/>=<sp/>value_lowest;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpMax&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;value_type&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(mfi.validbox(),nghost);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr<sp/>=<sp/>fa.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref>(bx,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>b)<sp/>-&gt;<sp/>ReduceTuple</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<sp/>f(b,<sp/>arr)<sp/>};</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a0d0638a86325d2fbf74cde6dcea98b1f" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;!amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type&gt;</highlight></codeline>
<codeline lineno="736"><highlight class="normal">ReduceMax_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="737"><highlight class="normal">{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1af879cc28290c113cead314b2f3a5ce68" kindref="member">ReduceMax_host</ref>(fa,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="739"><highlight class="normal">}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type&gt;</highlight></codeline>
<codeline lineno="743"><highlight class="normal">ReduceMax_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="744"><highlight class="normal">{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(fa,nghost,f);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;ReduceMax:<sp/>Launch<sp/>Region<sp/>is<sp/>off.<sp/>Device<sp/>lambda<sp/>cannot<sp/>be<sp/>called<sp/>by<sp/>host.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><ref refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" kindref="member">ReduceMax</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceMax_device(fa,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceMax_host_wrapper(fa,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type</highlight></codeline>
<codeline lineno="766" refid="namespaceamrex_1aced90eccf9c8aa5de4fa7fddacbab125" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" kindref="member">ReduceMax</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="767"><highlight class="normal">{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1af879cc28290c113cead314b2f3a5ce68" kindref="member">fudetail::ReduceMax_host</ref>(fa,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="775" refid="namespaceamrex_1ac8df373fd6d52b64c70d0e2c218f7b56" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" kindref="member">ReduceMax</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="776"><highlight class="normal">{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" kindref="member">ReduceMax</ref>(fa1,<sp/>fa2,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(nghost),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="784" refid="namespaceamrex_1_1fudetail_1ab7bf29dd429c8f97882dfbd556d7c94e" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1fudetail_1af879cc28290c113cead314b2f3a5ce68" kindref="member">ReduceMax_host</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>value_type<sp/>value_lowest<sp/>=<sp/>std::numeric_limits&lt;value_type&gt;::lowest();</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>r<sp/>=<sp/>value_lowest;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>reduction(max:r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa1,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.growntilebox(nghost);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr1<sp/>=<sp/>fa1.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr2<sp/>=<sp/>fa2.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(r,<sp/>f(bx,<sp/>arr1,<sp/>arr2));</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="811"><highlight class="normal">ReduceMax_device<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="813"><highlight class="normal">{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>value_type<sp/>value_lowest<sp/>=<sp/>std::numeric_limits&lt;value_type&gt;::lowest();</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>r<sp/>=<sp/>value_lowest;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpMax&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;value_type&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa1);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(mfi.validbox(),nghost);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr1<sp/>=<sp/>fa1.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr2<sp/>=<sp/>fa2.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref>(bx,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>b)<sp/>-&gt;<sp/>ReduceTuple</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<sp/>f(b,<sp/>arr1,<sp/>arr2)<sp/>};</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a0d0638a86325d2fbf74cde6dcea98b1f" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;!amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type&gt;</highlight></codeline>
<codeline lineno="844"><highlight class="normal">ReduceMax_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="846"><highlight class="normal">{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1af879cc28290c113cead314b2f3a5ce68" kindref="member">ReduceMax_host</ref>(fa1,fa2,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="848"><highlight class="normal">}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type&gt;</highlight></codeline>
<codeline lineno="852"><highlight class="normal">ReduceMax_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="854"><highlight class="normal">{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(fa1,fa2,nghost,f);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;ReduceMax:<sp/>Launch<sp/>Region<sp/>is<sp/>off.<sp/>Device<sp/>lambda<sp/>cannot<sp/>be<sp/>called<sp/>by<sp/>host.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="859"><highlight class="normal">}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><ref refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" kindref="member">ReduceMax</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="866"><highlight class="normal">{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())<sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceMax_device(fa1,fa2,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceMax_host_wrapper(fa1,fa2,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="877" refid="namespaceamrex_1a0f27335e5238a53e12af0ad6dc8e04a3" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" kindref="member">ReduceMax</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="879"><highlight class="normal">{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1af879cc28290c113cead314b2f3a5ce68" kindref="member">fudetail::ReduceMax_host</ref>(fa1,fa2,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="881"><highlight class="normal">}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB3,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="887" refid="namespaceamrex_1a07315aba6826805030c5f6fd847fc370" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" kindref="member">ReduceMax</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa3,</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="889"><highlight class="normal">{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" kindref="member">ReduceMax</ref>(fa1,<sp/>fa2,<sp/>fa3,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(nghost),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="891"><highlight class="normal">}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB3,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="897" refid="namespaceamrex_1_1fudetail_1aa6f390b174acee81ffe7acf835d7c89d" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1fudetail_1af879cc28290c113cead314b2f3a5ce68" kindref="member">ReduceMax_host</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa3,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="899"><highlight class="normal">{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>value_type<sp/>value_lowest<sp/>=<sp/>std::numeric_limits&lt;value_type&gt;::lowest();</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>r<sp/>=<sp/>value_lowest;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>reduction(max:r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa1,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.growntilebox(nghost);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr1<sp/>=<sp/>fa1.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr2<sp/>=<sp/>fa2.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr3<sp/>=<sp/>fa3.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(r,<sp/>f(bx,<sp/>arr1,<sp/>arr2,<sp/>arr3));</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="917"><highlight class="normal">}</highlight></codeline>
<codeline lineno="918"><highlight class="normal">}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB3,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="925"><highlight class="normal">ReduceMax_device<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa3,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="927"><highlight class="normal">{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>value_type<sp/>value_lowest<sp/>=<sp/>std::numeric_limits&lt;value_type&gt;::lowest();</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>r<sp/>=<sp/>value_lowest;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpMax&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;value_type&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa1);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(mfi.validbox(),nghost);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr1<sp/>=<sp/>fa1.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr2<sp/>=<sp/>fa2.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr3<sp/>=<sp/>fa3.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref>(bx,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>b)<sp/>-&gt;<sp/>ReduceTuple</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<sp/>f(b,<sp/>arr1,<sp/>arr2,<sp/>arr3)<sp/>};</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a0d0638a86325d2fbf74cde6dcea98b1f" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB3,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;!amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type&gt;</highlight></codeline>
<codeline lineno="959"><highlight class="normal">ReduceMax_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa3,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="961"><highlight class="normal">{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1af879cc28290c113cead314b2f3a5ce68" kindref="member">fudetail::ReduceMax_host</ref>(fa1,fa2,fa3,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="963"><highlight class="normal">}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB3,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type&gt;</highlight></codeline>
<codeline lineno="967"><highlight class="normal">ReduceMax_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa3,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="969"><highlight class="normal">{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(fa1,fa2,fa3,nghost,f);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;ReduceMax:<sp/>Launch<sp/>Region<sp/>is<sp/>off.<sp/>Device<sp/>lambda<sp/>lambda<sp/>cannot<sp/>be<sp/>called<sp/>by<sp/>host.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="973"><highlight class="normal">}</highlight></codeline>
<codeline lineno="974"><highlight class="normal">}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB3,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><ref refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" kindref="member">ReduceMax</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa3,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="981"><highlight class="normal">{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())<sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceMax_device(fa1,fa2,fa3,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceMax_host_wrapper(fa1,fa2,fa3,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal">}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB3,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB1::value_type</highlight></codeline>
<codeline lineno="992" refid="namespaceamrex_1a210e45f0c136c51a835032cc34cfb0a1" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" kindref="member">ReduceMax</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa3,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="994"><highlight class="normal">{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1af879cc28290c113cead314b2f3a5ce68" kindref="member">fudetail::ReduceMax_host</ref>(fa1,fa2,fa3,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="996"><highlight class="normal">}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002" refid="namespaceamrex_1a3866c459fc8c798d5a19fa747a3500b5" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a3866c459fc8c798d5a19fa747a3500b5" kindref="member">ReduceLogicalAnd</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3866c459fc8c798d5a19fa747a3500b5" kindref="member">ReduceLogicalAnd</ref>(fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(nghost),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="1005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011" refid="namespaceamrex_1_1fudetail_1a75ae0dd863b3cf62c2b8b6be06147359" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1fudetail_1a75ae0dd863b3cf62c2b8b6be06147359" kindref="member">ReduceLogicalAnd_host</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1012"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>reduction(&amp;&amp;:r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.growntilebox(nghost);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr<sp/>=<sp/>fa.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>r<sp/>&amp;&amp;<sp/>f(bx,<sp/>arr);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal">ReduceLogicalAnd_device<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1035"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpLogicalAnd&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;int&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(mfi.validbox(),nghost);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr<sp/>=<sp/>fa.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref>(bx,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>b)<sp/>-&gt;<sp/>ReduceTuple</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tr<sp/>=<sp/>f(b,arr);</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{tr};</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a0d0638a86325d2fbf74cde6dcea98b1f" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;!amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal">ReduceLogicalAnd_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1065"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1a75ae0dd863b3cf62c2b8b6be06147359" kindref="member">ReduceLogicalAnd_host</ref>(fa,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="1067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal">ReduceLogicalAnd_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1072"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(fa,nghost,f);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;ReduceLogicalAnd:<sp/>Launch<sp/>Region<sp/>is<sp/>off.<sp/>Device<sp/>lambda<sp/>cannot<sp/>be<sp/>called<sp/>by<sp/>host.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><ref refid="namespaceamrex_1a3866c459fc8c798d5a19fa747a3500b5" kindref="member">ReduceLogicalAnd</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1083"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceLogicalAnd_device(fa,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceLogicalAnd_host_wrapper(fa,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094" refid="namespaceamrex_1add25d5d5612fe7f7e697f9eff76568ba" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a3866c459fc8c798d5a19fa747a3500b5" kindref="member">ReduceLogicalAnd</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1095"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1a75ae0dd863b3cf62c2b8b6be06147359" kindref="member">fudetail::ReduceLogicalAnd_host</ref>(fa,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="1097"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103" refid="namespaceamrex_1aff9cc4b21a84dbb1def69e24fa575064" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a3866c459fc8c798d5a19fa747a3500b5" kindref="member">ReduceLogicalAnd</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3866c459fc8c798d5a19fa747a3500b5" kindref="member">ReduceLogicalAnd</ref>(fa1,<sp/>fa2,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(nghost),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="1107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113" refid="namespaceamrex_1_1fudetail_1a4763bc320be9d82b05c937331689be35" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1fudetail_1a75ae0dd863b3cf62c2b8b6be06147359" kindref="member">ReduceLogicalAnd_host</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>reduction(&amp;&amp;:r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa1,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.growntilebox(nghost);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr1<sp/>=<sp/>fa1.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr2<sp/>=<sp/>fa2.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>r<sp/>&amp;&amp;<sp/>f(bx,<sp/>arr1,<sp/>arr2);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal">ReduceLogicalAnd_device<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpLogicalAnd&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;int&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa1);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(mfi.validbox(),nghost);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr1<sp/>=<sp/>fa1.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr2<sp/>=<sp/>fa2.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref>(bx,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>b)<sp/>-&gt;<sp/>ReduceTuple</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tr<sp/>=<sp/>f(b,<sp/>arr1,<sp/>arr2);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{tr};</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a0d0638a86325d2fbf74cde6dcea98b1f" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;!amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal">ReduceLogicalAnd_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1a75ae0dd863b3cf62c2b8b6be06147359" kindref="member">ReduceLogicalAnd_host</ref>(fa1,fa2,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="1174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal">ReduceLogicalAnd_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(fa1,fa2,nghost,f);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;ReduceLogicalAnd:<sp/>Luanch<sp/>Region<sp/>is<sp/>off.<sp/>Device<sp/>lambda<sp/>cannot<sp/>be<sp/>called<sp/>by<sp/>host.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><ref refid="namespaceamrex_1a3866c459fc8c798d5a19fa747a3500b5" kindref="member">ReduceLogicalAnd</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceLogicalAnd_device(fa1,fa2,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceLogicalAnd_host_wrapper(fa1,fa2,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203" refid="namespaceamrex_1ab19f7ad2a54b1e324d431adfe05978aa" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a3866c459fc8c798d5a19fa747a3500b5" kindref="member">ReduceLogicalAnd</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1a75ae0dd863b3cf62c2b8b6be06147359" kindref="member">fudetail::ReduceLogicalAnd_host</ref>(fa1,fa2,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="1207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213" refid="namespaceamrex_1a86ff43c965c29ca6c76704135c773345" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a86ff43c965c29ca6c76704135c773345" kindref="member">ReduceLogicalOr</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a86ff43c965c29ca6c76704135c773345" kindref="member">ReduceLogicalOr</ref>(fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(nghost),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="1216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222" refid="namespaceamrex_1_1fudetail_1a794d2b1adeaabd6feb0ab8dd6d4ff842" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1fudetail_1a794d2b1adeaabd6feb0ab8dd6d4ff842" kindref="member">ReduceLogicalOr_host</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>reduction(||:r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.growntilebox(nghost);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr<sp/>=<sp/>fa.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>r<sp/>||<sp/>f(bx,<sp/>arr);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal">ReduceLogicalOr_device<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpLogicalOr&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;int&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(mfi.validbox(),nghost);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr<sp/>=<sp/>fa.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref>(bx,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>b)<sp/>-&gt;<sp/>ReduceTuple</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tr<sp/>=<sp/>f(b,<sp/>arr);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{tr};</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a0d0638a86325d2fbf74cde6dcea98b1f" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;!amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal">ReduceLogicalOr_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1a794d2b1adeaabd6feb0ab8dd6d4ff842" kindref="member">ReduceLogicalOr_host</ref>(fa,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="1278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><ref refid="namespaceamrex_1_1fudetail_1a794d2b1adeaabd6feb0ab8dd6d4ff842" kindref="member">ReduceLogicalOr_host</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(fa,nghost,f);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;ReduceLogicalOr:<sp/>Launch<sp/>Region<sp/>is<sp/>off.<sp/>Device<sp/>lambda<sp/>cannot<sp/>be<sp/>called<sp/>by<sp/>host.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><ref refid="namespaceamrex_1a86ff43c965c29ca6c76704135c773345" kindref="member">ReduceLogicalOr</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceLogicalOr_device(fa,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceLogicalOr_host_wrapper(fa,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305" refid="namespaceamrex_1afbf67596dd1ba6faf566beabcbab7776" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a86ff43c965c29ca6c76704135c773345" kindref="member">ReduceLogicalOr</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1a794d2b1adeaabd6feb0ab8dd6d4ff842" kindref="member">fudetail::ReduceLogicalOr_host</ref>(fa,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="1308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314" refid="namespaceamrex_1aeddb35f2f67fa5f607d190b5d5306c9d" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a86ff43c965c29ca6c76704135c773345" kindref="member">ReduceLogicalOr</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a86ff43c965c29ca6c76704135c773345" kindref="member">ReduceLogicalOr</ref>(fa1,<sp/>fa2,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(nghost),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="1318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324" refid="namespaceamrex_1_1fudetail_1ad0e216d8bd9e533b9386ff484bb06499" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1fudetail_1a794d2b1adeaabd6feb0ab8dd6d4ff842" kindref="member">ReduceLogicalOr_host</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>reduction(||:r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa1,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.growntilebox(nghost);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr1<sp/>=<sp/>fa1.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr2<sp/>=<sp/>fa2.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>r<sp/>||<sp/>f(bx,<sp/>arr1,<sp/>arr2);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fudetail<sp/>{</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal">ReduceLogicalOr_device<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpLogicalOr&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;int&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa1);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(mfi.validbox(),nghost);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr1<sp/>=<sp/>fa1.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>arr2<sp/>=<sp/>fa2.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref>(bx,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(<ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>b)<sp/>-&gt;<sp/>ReduceTuple</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tr<sp/>=<sp/>f(b,<sp/>arr1,<sp/>arr2);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{tr};</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a0d0638a86325d2fbf74cde6dcea98b1f" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;!amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal">ReduceLogicalOr_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1383"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1a794d2b1adeaabd6feb0ab8dd6d4ff842" kindref="member">fudetail::ReduceLogicalOr_host</ref>(fa1,fa2,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="1385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>FAB2,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;amrex::DefinitelyNotHostRunnable&lt;F&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal">ReduceLogicalOr_host_wrapper<sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(fa1,fa2,nghost,f);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad26f2328bf66aa9678347a6055a25431" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;ReeuceLogicalOr:<sp/>Launch<sp/>Region<sp/>is<sp/>off.<sp/>Device<sp/>lambda<sp/>cannot<sp/>be<sp/>called<sp/>by<sp/>host.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><ref refid="namespaceamrex_1a86ff43c965c29ca6c76704135c773345" kindref="member">ReduceLogicalOr</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceLogicalOr_device(fa1,fa2,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fudetail::ReduceLogicalOr_host_wrapper(fa1,fa2,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB1,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FAB2,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">F,</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB1&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414" refid="namespaceamrex_1a93ead4b7e5a5b99b0a88040076d7fd21" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a86ff43c965c29ca6c76704135c773345" kindref="member">ReduceLogicalOr</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB1&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa1,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB2&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa2,</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="1416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1fudetail_1a794d2b1adeaabd6feb0ab8dd6d4ff842" kindref="member">fudetail::ReduceLogicalOr_host</ref>(fa1,fa2,nghost,std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="1418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal">template<sp/>&lt;class<sp/>FAB,<sp/>class<sp/>bar<sp/>=<sp/>amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423" refid="namespaceamrex_1a376ff66b5e6a76d195cace00df41d05e" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a376ff66b5e6a76d195cace00df41d05e" kindref="member">printCell</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>mf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>cell,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>ng<sp/>=<sp/><ref refid="classamrex_1_1IntVect_1a16fd2692186f9d2a1291058ac5ab0ca0" kindref="member">IntVect::TheZeroVector</ref>())</highlight></codeline>
<codeline lineno="1425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(mf);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(mfi.validbox(),<sp/>ng);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bx.<ref refid="classamrex_1_1Box_1a0b71343932dcc55cb16d1b2b95973114" kindref="member">contains</ref>(cell))<sp/>{</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1AllPrint" kindref="compound">amrex::AllPrint</ref>().<ref refid="classamrex_1_1Print_1a7c4b1f95c46cd9f3e0435d36b25af7ca" kindref="member">SetPrecision</ref>(17)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>At<sp/>cell<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cell<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>Box<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>bx</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mf[mfi](cell,<sp/>comp)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>ss;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss.precision(17);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp<sp/>=<sp/>mf.<ref refid="classamrex_1_1FabArrayBase_1aec6647af0d0a9f2d760d502a8975d6f1" kindref="member">nComp</ref>();</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ncomp-1;<sp/>++i)</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>mf[mfi](cell,i)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/>mf[mfi](cell,ncomp-1);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1AllPrint" kindref="compound">amrex::AllPrint</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>At<sp/>cell<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cell<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>Box<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>bx</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>ss.str()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1453" refid="namespaceamrex_1ab72e53672887ede3d7ddc5f65002700e" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1ab72e53672887ede3d7ddc5f65002700e" kindref="member">Add</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dst,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dstcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost)</highlight></codeline>
<codeline lineno="1454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ab72e53672887ede3d7ddc5f65002700e" kindref="member">Add</ref>(dst,src,srccomp,dstcomp,numcomp,<ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(nghost));</highlight></codeline>
<codeline lineno="1456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461" refid="namespaceamrex_1ae53cc004fbab26533ec33294445a4d5c" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1ab72e53672887ede3d7ddc5f65002700e" kindref="member">Add</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dst,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dstcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>nghost)</highlight></codeline>
<codeline lineno="1462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(Gpu::notInLaunchRegion())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(dst,<ref refid="namespaceamrex_1a89faf58cc9f92b14a4c334bcb8390966" kindref="member">TilingIfNotGPU</ref>());<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.growntilebox(nghost);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bx.<ref refid="classamrex_1_1Box_1a615de7e44f8ba7f007be244af31b5a97" kindref="member">ok</ref>())</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>srcFab<sp/>=<sp/>src.<ref refid="classamrex_1_1FabArray_1a6484b86e240ddcddbe0d68e9408e1d94" kindref="member">array</ref>(mfi);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstFab<sp/>=<sp/>dst.<ref refid="classamrex_1_1FabArray_1a6484b86e240ddcddbe0d68e9408e1d94" kindref="member">array</ref>(mfi);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a0206546a2d346a82cc3955b4e02e5c3a" kindref="member">AMREX_HOST_DEVICE_PARALLEL_FOR_4D_FUSIBLE</ref><sp/>(<sp/>bx,<sp/>numcomp,<sp/>i,<sp/>j,<sp/>k,<sp/>n,</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstFab(i,j,k,n+dstcomp)<sp/>+=<sp/>srcFab(i,j,k,n+srccomp);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1485" refid="namespaceamrex_1a1036d99710a96586826f090a3266f5da" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a1036d99710a96586826f090a3266f5da" kindref="member">Copy</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dst,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dstcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost)</highlight></codeline>
<codeline lineno="1486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a1036d99710a96586826f090a3266f5da" kindref="member">Copy</ref>(dst,src,srccomp,dstcomp,numcomp,<ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(nghost));</highlight></codeline>
<codeline lineno="1488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1493" refid="namespaceamrex_1abe39b5ec64aab9ed8e59747f0983d848" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a1036d99710a96586826f090a3266f5da" kindref="member">Copy</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dst,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dstcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>nghost)</highlight></codeline>
<codeline lineno="1494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(Gpu::notInLaunchRegion())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(dst,<ref refid="namespaceamrex_1a89faf58cc9f92b14a4c334bcb8390966" kindref="member">TilingIfNotGPU</ref>());<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.growntilebox(nghost);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bx.<ref refid="classamrex_1_1Box_1a615de7e44f8ba7f007be244af31b5a97" kindref="member">ok</ref>())</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>srcFab<sp/>=<sp/>src.<ref refid="classamrex_1_1FabArray_1a6484b86e240ddcddbe0d68e9408e1d94" kindref="member">array</ref>(mfi);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstFab<sp/>=<sp/>dst.<ref refid="classamrex_1_1FabArray_1a6484b86e240ddcddbe0d68e9408e1d94" kindref="member">array</ref>(mfi);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a0206546a2d346a82cc3955b4e02e5c3a" kindref="member">AMREX_HOST_DEVICE_PARALLEL_FOR_4D_FUSIBLE</ref><sp/>(<sp/>bx,<sp/>numcomp,<sp/>i,<sp/>j,<sp/>k,<sp/>n,</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstFab(i,j,k,dstcomp+n)<sp/>=<sp/>srcFab(i,j,k,srccomp+n);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1517" refid="namespaceamrex_1a54b8b46deca518b441b849bbd1ceda02" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a54b8b46deca518b441b849bbd1ceda02" kindref="member">Subtract</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dst,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dstcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost)</highlight></codeline>
<codeline lineno="1518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a54b8b46deca518b441b849bbd1ceda02" kindref="member">Subtract</ref>(dst,src,srccomp,dstcomp,numcomp,nghost);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1525" refid="namespaceamrex_1afeebec2f58b85bfde5b88b30810cd82d" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a54b8b46deca518b441b849bbd1ceda02" kindref="member">Subtract</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dst,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dstcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>nghost)</highlight></codeline>
<codeline lineno="1526"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(Gpu::notInLaunchRegion())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(dst,<ref refid="namespaceamrex_1a89faf58cc9f92b14a4c334bcb8390966" kindref="member">TilingIfNotGPU</ref>());<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.growntilebox(nghost);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bx.<ref refid="classamrex_1_1Box_1a615de7e44f8ba7f007be244af31b5a97" kindref="member">ok</ref>())</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>srcFab<sp/>=<sp/>src.<ref refid="classamrex_1_1FabArray_1a6484b86e240ddcddbe0d68e9408e1d94" kindref="member">array</ref>(mfi);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstFab<sp/>=<sp/>dst.<ref refid="classamrex_1_1FabArray_1a6484b86e240ddcddbe0d68e9408e1d94" kindref="member">array</ref>(mfi);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a0206546a2d346a82cc3955b4e02e5c3a" kindref="member">AMREX_HOST_DEVICE_PARALLEL_FOR_4D_FUSIBLE</ref><sp/>(<sp/>bx,<sp/>numcomp,<sp/>i,<sp/>j,<sp/>k,<sp/>n,</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstFab(i,j,k,n+dstcomp)<sp/>-=<sp/>srcFab(i,j,k,n+srccomp);</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1549" refid="namespaceamrex_1aec148f53c2d7fcc3b00c9e91999d4058" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1aec148f53c2d7fcc3b00c9e91999d4058" kindref="member">Multiply</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dst,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dstcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost)</highlight></codeline>
<codeline lineno="1550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aec148f53c2d7fcc3b00c9e91999d4058" kindref="member">Multiply</ref>(dst,src,srccomp,dstcomp,numcomp,<ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(nghost));</highlight></codeline>
<codeline lineno="1552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1557" refid="namespaceamrex_1a71808e748d2cf6ea301231f278269b70" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1aec148f53c2d7fcc3b00c9e91999d4058" kindref="member">Multiply</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dst,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dstcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>nghost)</highlight></codeline>
<codeline lineno="1558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(Gpu::notInLaunchRegion())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(dst,<ref refid="namespaceamrex_1a89faf58cc9f92b14a4c334bcb8390966" kindref="member">TilingIfNotGPU</ref>());<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.growntilebox(nghost);</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bx.<ref refid="classamrex_1_1Box_1a615de7e44f8ba7f007be244af31b5a97" kindref="member">ok</ref>())</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>srcFab<sp/>=<sp/>src.<ref refid="classamrex_1_1FabArray_1a6484b86e240ddcddbe0d68e9408e1d94" kindref="member">array</ref>(mfi);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstFab<sp/>=<sp/>dst.<ref refid="classamrex_1_1FabArray_1a6484b86e240ddcddbe0d68e9408e1d94" kindref="member">array</ref>(mfi);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a0206546a2d346a82cc3955b4e02e5c3a" kindref="member">AMREX_HOST_DEVICE_PARALLEL_FOR_4D_FUSIBLE</ref><sp/>(<sp/>bx,<sp/>numcomp,<sp/>i,<sp/>j,<sp/>k,<sp/>n,</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstFab(i,j,k,n+dstcomp)<sp/>*=<sp/>srcFab(i,j,k,n+srccomp);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1581" refid="namespaceamrex_1aa9f3bb9afb6e1fdfc272654ee6923492" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1aa9f3bb9afb6e1fdfc272654ee6923492" kindref="member">Divide</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dst,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dstcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost)</highlight></codeline>
<codeline lineno="1582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aa9f3bb9afb6e1fdfc272654ee6923492" kindref="member">Divide</ref>(dst,src,srccomp,dstcomp,numcomp,<ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(nghost));</highlight></codeline>
<codeline lineno="1584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1589" refid="namespaceamrex_1a98b5b165f2a8926b40da786a678ed7af" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1aa9f3bb9afb6e1fdfc272654ee6923492" kindref="member">Divide</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dst,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srccomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dstcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>nghost)</highlight></codeline>
<codeline lineno="1590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(Gpu::notInLaunchRegion())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(dst,<ref refid="namespaceamrex_1a89faf58cc9f92b14a4c334bcb8390966" kindref="member">TilingIfNotGPU</ref>());<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.growntilebox(nghost);</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bx.<ref refid="classamrex_1_1Box_1a615de7e44f8ba7f007be244af31b5a97" kindref="member">ok</ref>())</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>srcFab<sp/>=<sp/>src.<ref refid="classamrex_1_1FabArray_1a6484b86e240ddcddbe0d68e9408e1d94" kindref="member">array</ref>(mfi);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstFab<sp/>=<sp/>dst.<ref refid="classamrex_1_1FabArray_1a6484b86e240ddcddbe0d68e9408e1d94" kindref="member">array</ref>(mfi);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a0206546a2d346a82cc3955b4e02e5c3a" kindref="member">AMREX_HOST_DEVICE_PARALLEL_FOR_4D_FUSIBLE</ref><sp/>(<sp/>bx,<sp/>numcomp,<sp/>i,<sp/>j,<sp/>k,<sp/>n,</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstFab(i,j,k,n+dstcomp)<sp/>/=<sp/>srcFab(i,j,k,n+srccomp);</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1612" refid="namespaceamrex_1a3f0f44b09d21b49d00d3d1b12e9e2489" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a3f0f44b09d21b49d00d3d1b12e9e2489" kindref="member">Abs</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>fa,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nghost)</highlight></codeline>
<codeline lineno="1613"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3f0f44b09d21b49d00d3d1b12e9e2489" kindref="member">Abs</ref>(fa,icomp,numcomp,<ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(nghost));</highlight></codeline>
<codeline lineno="1615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>,</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">bar<sp/>=<sp/><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1620" refid="namespaceamrex_1a76eee97924f5b2d883d161eb976b2cad" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a3f0f44b09d21b49d00d3d1b12e9e2489" kindref="member">Abs</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>fa,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numcomp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>&amp;<sp/>nghost)</highlight></codeline>
<codeline lineno="1621"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(Gpu::notInLaunchRegion())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa,<ref refid="namespaceamrex_1a89faf58cc9f92b14a4c334bcb8390966" kindref="member">TilingIfNotGPU</ref>());<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.growntilebox(nghost);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bx.<ref refid="classamrex_1_1Box_1a615de7e44f8ba7f007be244af31b5a97" kindref="member">ok</ref>())</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fab<sp/>=<sp/>fa.<ref refid="classamrex_1_1FabArray_1a6484b86e240ddcddbe0d68e9408e1d94" kindref="member">array</ref>(mfi);</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a0206546a2d346a82cc3955b4e02e5c3a" kindref="member">AMREX_HOST_DEVICE_PARALLEL_FOR_4D_FUSIBLE</ref><sp/>(<sp/>bx,<sp/>numcomp,<sp/>i,<sp/>j,<sp/>k,<sp/>n,</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fab(i,j,k,n+icomp)<sp/>=<sp/><ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">amrex::Math::abs</ref>(fab(i,j,k,n+icomp));</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal">template<sp/>&lt;class<sp/>FAB,<sp/>class<sp/>bar<sp/>=<sp/>amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1641" refid="namespaceamrex_1ab02b05e2eb3282f8df33e5cbc655b2a3" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1ab02b05e2eb3282f8df33e5cbc655b2a3" kindref="member">prefetchToHost</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>synchronous<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1642"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fa.<ref refid="classamrex_1_1FabArray_1acfab6e1a9aaaffd0c875021c5f10c0bb" kindref="member">arena</ref>()<sp/>==<sp/><ref refid="namespaceamrex_1ae3d1414946b992f39ca41f135f12a0d1" kindref="member">The_Arena</ref>()<sp/>or<sp/>fa.<ref refid="classamrex_1_1FabArray_1acfab6e1a9aaaffd0c875021c5f10c0bb" kindref="member">arena</ref>()<sp/>==<sp/><ref refid="namespaceamrex_1a76cc74eb7c42bf4d111ac5cae5db8420" kindref="member">The_Managed_Arena</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa,<sp/><ref refid="structamrex_1_1MFItInfo" kindref="compound">MFItInfo</ref>().SetDeviceSync(synchronous));<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)<sp/>{</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fa.<ref refid="classamrex_1_1FabArray_1ae803504d641d86a8ba9e4b58e81f136b" kindref="member">prefetchToHost</ref>(mfi);</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(fa,synchronous);</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal">template<sp/>&lt;class<sp/>FAB,<sp/>class<sp/>bar<sp/>=<sp/>amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656" refid="namespaceamrex_1a4db8bcd1f50c790aba6b81860143cc96" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a4db8bcd1f50c790aba6b81860143cc96" kindref="member">prefetchToDevice</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fa,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>synchronous<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1657"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fa.<ref refid="classamrex_1_1FabArray_1acfab6e1a9aaaffd0c875021c5f10c0bb" kindref="member">arena</ref>()<sp/>==<sp/><ref refid="namespaceamrex_1ae3d1414946b992f39ca41f135f12a0d1" kindref="member">The_Arena</ref>()<sp/>or<sp/>fa.<ref refid="classamrex_1_1FabArray_1acfab6e1a9aaaffd0c875021c5f10c0bb" kindref="member">arena</ref>()<sp/>==<sp/><ref refid="namespaceamrex_1a76cc74eb7c42bf4d111ac5cae5db8420" kindref="member">The_Managed_Arena</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa,<sp/><ref refid="structamrex_1_1MFItInfo" kindref="compound">MFItInfo</ref>().SetDeviceSync(synchronous));<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)<sp/>{</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fa.<ref refid="classamrex_1_1FabArray_1a1ad78902f6ce66d7f4d0557de26ee971" kindref="member">prefetchToDevice</ref>(mfi);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(fa,synchronous);</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal">template<sp/>&lt;class<sp/>FAB,<sp/>class<sp/>IFAB,<sp/>class<sp/>bar<sp/>=<sp/>amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="structamrex_1_1IsBaseFab" kindref="compound">IsBaseFab&lt;IFAB&gt;::value</ref>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1672" refid="namespaceamrex_1a5821b989454c54f92dd1f2312e95b5b6" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a5821b989454c54f92dd1f2312e95b5b6" kindref="member">OverrideSync</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/>&amp;<sp/>fa,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;IFAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>msk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Periodicity" kindref="compound">Periodicity</ref>&amp;<sp/>period)</highlight></codeline>
<codeline lineno="1673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;OverrideSync()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fa.<ref refid="classamrex_1_1FabArrayBase_1a682fdf86619f6028fea2805d9693ae22" kindref="member">ixType</ref>().cellCentered())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp<sp/>=<sp/>fa.<ref refid="classamrex_1_1FabArrayBase_1aec6647af0d0a9f2d760d502a8975d6f1" kindref="member">nComp</ref>();</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(Gpu::notInLaunchRegion())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa,<ref refid="namespaceamrex_1a89faf58cc9f92b14a4c334bcb8390966" kindref="member">TilingIfNotGPU</ref>());<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.tilebox();</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fab<sp/>=<sp/>fa.<ref refid="classamrex_1_1FabArray_1a6484b86e240ddcddbe0d68e9408e1d94" kindref="member">array</ref>(mfi);</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ifab<sp/>=<sp/>msk.<ref refid="classamrex_1_1FabArray_1a6484b86e240ddcddbe0d68e9408e1d94" kindref="member">array</ref>(mfi);</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuLaunch_8H_1a0206546a2d346a82cc3955b4e02e5c3a" kindref="member">AMREX_HOST_DEVICE_PARALLEL_FOR_4D_FUSIBLE</ref><sp/>(<sp/>bx,<sp/>ncomp,<sp/>i,<sp/>j,<sp/>k,<sp/>n,</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ifab(i,j,k))<sp/>fab(i,j,k,n)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/>tmpmf(fa.<ref refid="classamrex_1_1FabArrayBase_1a4bb7e999eee8c04f07573269b54e39d0" kindref="member">boxArray</ref>(),<sp/>fa.<ref refid="classamrex_1_1FabArrayBase_1abd59469241abaab18e1c2db8b7ceb4ed" kindref="member">DistributionMap</ref>(),<sp/>ncomp,<sp/>0,</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1MFInfo" kindref="compound">MFInfo</ref>(),<sp/>fa.<ref refid="classamrex_1_1FabArray_1a362cb84f113b8019a6f8b03129d1cf48" kindref="member">Factory</ref>());</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpmf.<ref refid="classamrex_1_1FabArray_1a9235d60131ff0d5f81450896420fe691" kindref="member">setVal</ref>(0);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/>tmpmf.ParallelCopy(fa,<sp/>period,<sp/><ref refid="classamrex_1_1FabArrayBase_1ac86e93bfc13df1bdcfb0ebbafb6a1cffa10289ce78187f199681fabf1c9956399" kindref="member">FabArrayBase::ADD</ref>);</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a1036d99710a96586826f090a3266f5da" kindref="member">amrex::Copy</ref>(fa,<sp/>tmpmf,<sp/>0,<sp/>0,<sp/>ncomp,<sp/>0);</highlight></codeline>
<codeline lineno="1700"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal">template<sp/>&lt;class<sp/>FAB,<sp/>class<sp/>foo<sp/>=<sp/>amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1704" refid="namespaceamrex_1a998c5815369d23cd73eea1b09f43a966" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a998c5815369d23cd73eea1b09f43a966" kindref="member">dtoh_memcpy</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dst,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>src,</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp)</highlight></codeline>
<codeline lineno="1706"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(<ref refid="namespaceamrex_1a6a1aa0c151c5fe560ebb86c99194bfc3" kindref="member">isMFIterSafe</ref>(dst,<sp/>src));</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(dst.<ref refid="classamrex_1_1FabArrayBase_1a0598988ee34f3885bd6d2a4787a8f427" kindref="member">nGrowVect</ref>()<sp/>==<sp/>src.<ref refid="classamrex_1_1FabArrayBase_1a0598988ee34f3885bd6d2a4787a8f427" kindref="member">nGrowVect</ref>());</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(dst);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)<sp/>{</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pdst<sp/>=<sp/>dst[mfi].dataPtr(dcomp);</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>psrc<sp/>=<sp/>src[mfi].dataPtr(scomp);</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::dtoh_memcpy_async(pdst,<sp/>psrc,<sp/>dst[mfi].nBytes(mfi.fabbox(),<sp/>ncomp));</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a1036d99710a96586826f090a3266f5da" kindref="member">Copy</ref>(dst,<sp/>src,<sp/>scomp,<sp/>dcomp,<sp/>ncomp,<sp/>dst.<ref refid="classamrex_1_1FabArrayBase_1a0598988ee34f3885bd6d2a4787a8f427" kindref="member">nGrowVect</ref>());</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal">template<sp/>&lt;class<sp/>FAB,<sp/>class<sp/>foo<sp/>=<sp/>amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722" refid="namespaceamrex_1a8531953b8fba66482d81cad6c5dc3e73" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a998c5815369d23cd73eea1b09f43a966" kindref="member">dtoh_memcpy</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dst,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>src)</highlight></codeline>
<codeline lineno="1723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a998c5815369d23cd73eea1b09f43a966" kindref="member">dtoh_memcpy</ref>(dst,<sp/>src,<sp/>0,<sp/>0,<sp/>dst.<ref refid="classamrex_1_1FabArrayBase_1aec6647af0d0a9f2d760d502a8975d6f1" kindref="member">nComp</ref>());</highlight></codeline>
<codeline lineno="1725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal">template<sp/>&lt;class<sp/>FAB,<sp/>class<sp/>foo<sp/>=<sp/>amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1729" refid="namespaceamrex_1ae243b10c65516ed7dfeaf9aed7e75aa3" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1ae243b10c65516ed7dfeaf9aed7e75aa3" kindref="member">htod_memcpy</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dst,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>src,</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dcomp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp)</highlight></codeline>
<codeline lineno="1731"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(<ref refid="namespaceamrex_1a6a1aa0c151c5fe560ebb86c99194bfc3" kindref="member">isMFIterSafe</ref>(dst,<sp/>src));</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(dst.<ref refid="classamrex_1_1FabArrayBase_1a0598988ee34f3885bd6d2a4787a8f427" kindref="member">nGrowVect</ref>()<sp/>==<sp/>src.<ref refid="classamrex_1_1FabArrayBase_1a0598988ee34f3885bd6d2a4787a8f427" kindref="member">nGrowVect</ref>());</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(dst);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)<sp/>{</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pdst<sp/>=<sp/>dst[mfi].dataPtr(dcomp);</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>psrc<sp/>=<sp/>src[mfi].dataPtr(scomp);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gpu::htod_memcpy_async(pdst,<sp/>psrc,<sp/>dst[mfi].nBytes(mfi.fabbox(),<sp/>ncomp));</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a1036d99710a96586826f090a3266f5da" kindref="member">Copy</ref>(dst,<sp/>src,<sp/>scomp,<sp/>dcomp,<sp/>ncomp,<sp/>dst.<ref refid="classamrex_1_1FabArrayBase_1a0598988ee34f3885bd6d2a4787a8f427" kindref="member">nGrowVect</ref>());</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal">template<sp/>&lt;class<sp/>FAB,<sp/>class<sp/>foo<sp/>=<sp/>amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1747" refid="namespaceamrex_1aa9df7c449e875ece24add0d826c4f133" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1ae243b10c65516ed7dfeaf9aed7e75aa3" kindref="member">htod_memcpy</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>dst,<sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>src)</highlight></codeline>
<codeline lineno="1748"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ae243b10c65516ed7dfeaf9aed7e75aa3" kindref="member">htod_memcpy</ref>(dst,<sp/>src,<sp/>0,<sp/>0,<sp/>dst.<ref refid="classamrex_1_1FabArrayBase_1aec6647af0d0a9f2d760d502a8975d6f1" kindref="member">nComp</ref>());</highlight></codeline>
<codeline lineno="1750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal">template<sp/>&lt;class<sp/>FAB,<sp/>class<sp/>foo<sp/>=<sp/>amrex::EnableIf_t&lt;IsBaseFab&lt;FAB&gt;::value&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></highlight></codeline>
<codeline lineno="1754" refid="namespaceamrex_1af1fe8dd7d2e436cf2e4e696b9b5ae006" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1af1fe8dd7d2e436cf2e4e696b9b5ae006" kindref="member">indexFromValue</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>mf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp,<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nghost,</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type<sp/>value)</highlight></codeline>
<codeline lineno="1756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>loc;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp[1+AMREX_SPACEDIM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Gpu_1_1AsyncArray" kindref="compound">amrex::Gpu::AsyncArray&lt;int&gt;</ref><sp/>aa(tmp,<sp/>1+AMREX_SPACEDIM);</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/>aa.<ref refid="classamrex_1_1Gpu_1_1AsyncArray_1a3c0649a02bc8985508034155a8fabee5" kindref="member">data</ref>();</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>device<sp/>ptr<sp/>to<sp/>1+AMREX_SPACEDIM<sp/>int<sp/>zeros.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>is<sp/>used<sp/>as<sp/>an<sp/>atomic<sp/>bool<sp/>and<sp/>the<sp/>others<sp/>for<sp/>intvect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(mf);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)<sp/>{</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/><ref refid="namespaceamrex_1aedb1ce8af83d1d6323271203b7168bcc" kindref="member">amrex::grow</ref>(mfi.validbox(),<sp/>nghost);</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>arr<sp/>=<sp/>mf.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aff9b2ebd167a621c7784769618bda4c6" kindref="member">amrex::ParallelFor</ref>(bx,<sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k)<sp/>noexcept</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>flag<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*flag<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arr(i,j,k,comp)<sp/>==<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1aead1011333d0e8605985cd0ab8c163bf" kindref="member">Gpu::Atomic::Exch</ref>(flag,1)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(p[1]<sp/>=<sp/>i;,</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[2]<sp/>=<sp/>j;,</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[3]<sp/>=<sp/>k;);</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aa.<ref refid="classamrex_1_1Gpu_1_1AsyncArray_1ab74fa0189049d4d2118e070af36ab175" kindref="member">copyToHost</ref>(tmp,<sp/>1+AMREX_SPACEDIM);</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_D_TERM(loc[0]<sp/>=<sp/>tmp[1];,</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loc[1]<sp/>=<sp/>tmp[2];,</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loc[2]<sp/>=<sp/>tmp[3];);</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>f<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>priv_loc<sp/>=<sp/><ref refid="classamrex_1_1IntVect_1afe8d49fa4939449ea2da3ee0ae5003eb" kindref="member">IntVect::TheMinVector</ref>();</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(mf,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.growntilebox(nghost);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fab<sp/>=<sp/>mf.<ref refid="classamrex_1_1FabArray_1a0af1d5ec31ed2b73f391952c5d45660a" kindref="member">const_array</ref>(mfi);</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__Loop_8H_1a03b436b41a98f86757c053a372a7947f" kindref="member">AMREX_LOOP_3D</ref>(bx,<sp/>i,<sp/>j,<sp/>k,</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fab(i,j,k,comp)<sp/>==<sp/>value)<sp/>priv_loc<sp/>=<sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref>(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(i,j,k));</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(priv_loc.<ref refid="classamrex_1_1IntVect_1aa2afc8258c47e63ae123d7f2edf12589" kindref="member">allGT</ref>(<ref refid="classamrex_1_1IntVect_1afe8d49fa4939449ea2da3ee0ae5003eb" kindref="member">IntVect::TheMinVector</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>old;</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>should<sp/>be<sp/>able<sp/>to<sp/>test<sp/>on<sp/>_OPENMP<sp/>&lt;<sp/>201107<sp/>for<sp/>capture<sp/>(version<sp/>3.1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>must<sp/>work<sp/>around<sp/>a<sp/>bug<sp/>in<sp/>gcc<sp/>&lt;<sp/>4.9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_OPENMP)<sp/>&amp;&amp;<sp/>_OPENMP<sp/>&lt;<sp/>201307<sp/>//<sp/>OpenMP<sp/>4.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>critical<sp/>(amrex_indexfromvalue)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_OPENMP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>atomic<sp/>capture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old<sp/>=<sp/>f;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>loc<sp/>=<sp/>priv_loc;</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loc;</highlight></codeline>
<codeline lineno="1828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FabArrayUtility.H"/>
  </compounddef>
</doxygen>
