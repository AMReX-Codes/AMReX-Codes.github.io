<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structamrex_1_1EArena_1_1Node" kind="struct" language="C++" prot="protected">
    <compoundname>amrex::EArena::Node</compoundname>
    <includes refid="AMReX__EArena_8H" local="no">AMReX_EArena.H</includes>
    <innerclass refid="structamrex_1_1EArena_1_1Node_1_1CompareAddr" prot="public">amrex::EArena::Node::CompareAddr</innerclass>
    <innerclass refid="structamrex_1_1EArena_1_1Node_1_1CompareSize" prot="public">amrex::EArena::Node::CompareSize</innerclass>
    <innerclass refid="structamrex_1_1EArena_1_1Node_1_1equal" prot="public">amrex::EArena::Node::equal</innerclass>
    <innerclass refid="structamrex_1_1EArena_1_1Node_1_1hash" prot="public">amrex::EArena::Node::hash</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1EArena_1_1Node_1af098a20a26f8c6450ac2751d8f02a263" prot="public" static="no" mutable="no">
        <type>uintptr_t</type>
        <definition>uintptr_t amrex::EArena::Node::m_block</definition>
        <argsstring></argsstring>
        <name>m_block</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_EArena.H" line="61" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_EArena.H" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1EArena_1_1Node_1a8f0286fae08719933cb4848f028ac40a" prot="public" static="no" mutable="no">
        <type>uintptr_t</type>
        <definition>uintptr_t amrex::EArena::Node::m_owner</definition>
        <argsstring></argsstring>
        <name>m_owner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_EArena.H" line="62" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_EArena.H" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1EArena_1_1Node_1a89529f45bfc11373bc41d2da43c3a12f" prot="public" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t amrex::EArena::Node::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_EArena.H" line="63" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_EArena.H" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1EArena_1_1Node_1a288b2fef1ea5646d959ae154b8790ecb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EArena::Node::Node</definition>
        <argsstring>(void *block, void *owner, std::size_t size)</argsstring>
        <name>Node</name>
        <param>
          <type>void *</type>
          <declname>block</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_EArena.H" line="51" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_EArena.H" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1EArena_1_1Node_1ab2e370518b6574a337ddd9fc4cefe3bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EArena::Node::Node</definition>
        <argsstring>(std::size_t size)</argsstring>
        <name>Node</name>
        <param>
          <type>std::size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_EArena.H" line="57" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_EArena.H" bodystart="57" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_EArena.H" line="50" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_EArena.H" bodystart="49" bodyend="92"/>
    <listofallmembers>
      <member refid="structamrex_1_1EArena_1_1Node_1af098a20a26f8c6450ac2751d8f02a263" prot="public" virt="non-virtual"><scope>amrex::EArena::Node</scope><name>m_block</name></member>
      <member refid="structamrex_1_1EArena_1_1Node_1a8f0286fae08719933cb4848f028ac40a" prot="public" virt="non-virtual"><scope>amrex::EArena::Node</scope><name>m_owner</name></member>
      <member refid="structamrex_1_1EArena_1_1Node_1a89529f45bfc11373bc41d2da43c3a12f" prot="public" virt="non-virtual"><scope>amrex::EArena::Node</scope><name>m_size</name></member>
      <member refid="structamrex_1_1EArena_1_1Node_1a288b2fef1ea5646d959ae154b8790ecb" prot="public" virt="non-virtual"><scope>amrex::EArena::Node</scope><name>Node</name></member>
      <member refid="structamrex_1_1EArena_1_1Node_1ab2e370518b6574a337ddd9fc4cefe3bf" prot="public" virt="non-virtual"><scope>amrex::EArena::Node</scope><name>Node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
