<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structamrex_1_1detail_1_1gpu__tuple__impl_3_01I_00_01Head_01_4" kind="struct" language="C++" prot="public">
    <compoundname>amrex::detail::gpu_tuple_impl&lt; I, Head &gt;</compoundname>
    <basecompoundref refid="structamrex_1_1detail_1_1gpu__tuple__element" prot="public" virt="non-virtual">amrex::detail::gpu_tuple_element&lt; I, Head &gt;</basecompoundref>
    <includes refid="AMReX__Tuple_8H" local="no">AMReX_Tuple.H</includes>
    <templateparamlist>
      <param>
        <type>std::size_t</type>
        <declname>I</declname>
        <defname>I</defname>
      </param>
      <param>
        <type>typename Head</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1detail_1_1gpu__tuple__impl_3_01I_00_01Head_01_4_1a0155f6654065a86f17b865227f31290e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
            <defval>Head</defval>
          </param>
          <param>
            <type><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t</ref>&lt; std::is_default_constructible&lt; U &gt;::value, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> constexpr</type>
        <definition>AMREX_GPU_HOST_DEVICE constexpr amrex::detail::gpu_tuple_impl&lt; I, Head &gt;::gpu_tuple_impl</definition>
        <argsstring>()</argsstring>
        <name>gpu_tuple_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Tuple.H" line="75" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Tuple.H" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1detail_1_1gpu__tuple__impl_3_01I_00_01Head_01_4_1a138287a5f4ac861068205835ac07da5b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr amrex::detail::gpu_tuple_impl&lt; I, Head &gt;::gpu_tuple_impl</definition>
        <argsstring>(Head const &amp;a_head)</argsstring>
        <name>gpu_tuple_impl</name>
        <param>
          <type>Head const &amp;</type>
          <declname>a_head</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Tuple.H" line="77" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Tuple.H" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1detail_1_1gpu__tuple__impl_3_01I_00_01Head_01_4_1a2a0e1d6ab3b7c9ea94631a06b23a3f12" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">amrex::EnableIf_t</ref>&lt; std::is_convertible&lt; U &amp;&amp;, Head &gt;::value, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr amrex::detail::gpu_tuple_impl&lt; I, Head &gt;::gpu_tuple_impl</definition>
        <argsstring>(U &amp;&amp;a_head)</argsstring>
        <name>gpu_tuple_impl</name>
        <param>
          <type>U &amp;&amp;</type>
          <declname>a_head</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Tuple.H" line="82" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Tuple.H" bodystart="82" bodyend="84"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1680">
        <label>amrex::detail::gpu_tuple_element&lt; I, Head &gt;</label>
        <link refid="structamrex_1_1detail_1_1gpu__tuple__element"/>
      </node>
      <node id="1679">
        <label>amrex::detail::gpu_tuple_impl&lt; I, Head &gt;</label>
        <link refid="structamrex_1_1detail_1_1gpu__tuple__impl_3_01I_00_01Head_01_4"/>
        <childnode refid="1680" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1682">
        <label>amrex::detail::gpu_tuple_element&lt; I, Head &gt;</label>
        <link refid="structamrex_1_1detail_1_1gpu__tuple__element"/>
      </node>
      <node id="1681">
        <label>amrex::detail::gpu_tuple_impl&lt; I, Head &gt;</label>
        <link refid="structamrex_1_1detail_1_1gpu__tuple__impl_3_01I_00_01Head_01_4"/>
        <childnode refid="1682" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Tuple.H" line="71" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Tuple.H" bodystart="69" bodyend="85"/>
    <listofallmembers>
      <member refid="structamrex_1_1detail_1_1gpu__tuple__element_1ac655aea03f3e2822105ba586c80db55e" prot="public" virt="non-virtual"><scope>amrex::detail::gpu_tuple_impl&lt; I, Head &gt;</scope><name>gpu_tuple_element</name></member>
      <member refid="structamrex_1_1detail_1_1gpu__tuple__element_1a92871fbadc5d83cf854ac97d12ec1399" prot="public" virt="non-virtual"><scope>amrex::detail::gpu_tuple_impl&lt; I, Head &gt;</scope><name>gpu_tuple_element</name></member>
      <member refid="structamrex_1_1detail_1_1gpu__tuple__element_1a173fd40f6e1643b310b699177737307f" prot="public" virt="non-virtual"><scope>amrex::detail::gpu_tuple_impl&lt; I, Head &gt;</scope><name>gpu_tuple_element</name></member>
      <member refid="structamrex_1_1detail_1_1gpu__tuple__impl_3_01I_00_01Head_01_4_1a0155f6654065a86f17b865227f31290e" prot="public" virt="non-virtual"><scope>amrex::detail::gpu_tuple_impl&lt; I, Head &gt;</scope><name>gpu_tuple_impl</name></member>
      <member refid="structamrex_1_1detail_1_1gpu__tuple__impl_3_01I_00_01Head_01_4_1a138287a5f4ac861068205835ac07da5b" prot="public" virt="non-virtual"><scope>amrex::detail::gpu_tuple_impl&lt; I, Head &gt;</scope><name>gpu_tuple_impl</name></member>
      <member refid="structamrex_1_1detail_1_1gpu__tuple__impl_3_01I_00_01Head_01_4_1a2a0e1d6ab3b7c9ea94631a06b23a3f12" prot="public" virt="non-virtual"><scope>amrex::detail::gpu_tuple_impl&lt; I, Head &gt;</scope><name>gpu_tuple_impl</name></member>
      <member refid="structamrex_1_1detail_1_1gpu__tuple__element_1a33dfcf0ade1a0d7f43ce7a1249a48c54" prot="public" virt="non-virtual"><scope>amrex::detail::gpu_tuple_impl&lt; I, Head &gt;</scope><name>m_value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
