<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__MCMultiGrid_8cpp" kind="file" language="C++">
    <compoundname>AMReX_MCMultiGrid.cpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">cstdlib</includes>
    <includes refid="AMReX__ParmParse_8H" local="no">AMReX_ParmParse.H</includes>
    <includes refid="AMReX__Utility_8H" local="no">AMReX_Utility.H</includes>
    <includes refid="AMReX__ParallelDescriptor_8H" local="no">AMReX_ParallelDescriptor.H</includes>
    <includes refid="AMReX__MCCGSolver_8H" local="no">AMReX_MCCGSolver.H</includes>
    <includes refid="AMReX__MG__F_8H" local="no">AMReX_MG_F.H</includes>
    <includes refid="AMReX__MCMultiGrid_8H" local="no">AMReX_MCMultiGrid.H</includes>
    <incdepgraph>
      <node id="53568">
        <label>list</label>
      </node>
      <node id="53677">
        <label>AMReX_MG_F.H</label>
        <link refid="AMReX__MG__F_8H"/>
        <childnode refid="53678" relation="include">
        </childnode>
      </node>
      <node id="53612">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="53579" relation="include">
        </childnode>
        <childnode refid="53613" relation="include">
        </childnode>
        <childnode refid="53594" relation="include">
        </childnode>
        <childnode refid="53573" relation="include">
        </childnode>
      </node>
      <node id="53651">
        <label>iomanip</label>
      </node>
      <node id="53577">
        <label>functional</label>
      </node>
      <node id="53606">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="53576" relation="include">
        </childnode>
        <childnode refid="53607" relation="include">
        </childnode>
        <childnode refid="53581" relation="include">
        </childnode>
        <childnode refid="53608" relation="include">
        </childnode>
        <childnode refid="53603" relation="include">
        </childnode>
        <childnode refid="53609" relation="include">
        </childnode>
        <childnode refid="53589" relation="include">
        </childnode>
        <childnode refid="53594" relation="include">
        </childnode>
      </node>
      <node id="53633">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="53562" relation="include">
        </childnode>
        <childnode refid="53570" relation="include">
        </childnode>
        <childnode refid="53595" relation="include">
        </childnode>
        <childnode refid="53587" relation="include">
        </childnode>
        <childnode refid="53593" relation="include">
        </childnode>
        <childnode refid="53599" relation="include">
        </childnode>
      </node>
      <node id="53601">
        <label>limits</label>
      </node>
      <node id="53618">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="53565" relation="include">
        </childnode>
        <childnode refid="53587" relation="include">
        </childnode>
      </node>
      <node id="53652">
        <label>AMReX_CudaContainers.H</label>
        <link refid="AMReX__CudaContainers_8H"/>
        <childnode refid="53620" relation="include">
        </childnode>
        <childnode refid="53594" relation="include">
        </childnode>
        <childnode refid="53649" relation="include">
        </childnode>
      </node>
      <node id="53595">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="53566" relation="include">
        </childnode>
        <childnode refid="53596" relation="include">
        </childnode>
        <childnode refid="53598" relation="include">
        </childnode>
        <childnode refid="53573" relation="include">
        </childnode>
        <childnode refid="53599" relation="include">
        </childnode>
        <childnode refid="53603" relation="include">
        </childnode>
        <childnode refid="53604" relation="include">
        </childnode>
        <childnode refid="53593" relation="include">
        </childnode>
        <childnode refid="53589" relation="include">
        </childnode>
        <childnode refid="53605" relation="include">
        </childnode>
        <childnode refid="53594" relation="include">
        </childnode>
        <childnode refid="53572" relation="include">
        </childnode>
        <childnode refid="53592" relation="include">
        </childnode>
      </node>
      <node id="53643">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="53572" relation="include">
        </childnode>
        <childnode refid="53592" relation="include">
        </childnode>
        <childnode refid="53640" relation="include">
        </childnode>
        <childnode refid="53588" relation="include">
        </childnode>
        <childnode refid="53587" relation="include">
        </childnode>
        <childnode refid="53589" relation="include">
        </childnode>
        <childnode refid="53605" relation="include">
        </childnode>
        <childnode refid="53576" relation="include">
        </childnode>
        <childnode refid="53600" relation="include">
        </childnode>
      </node>
      <node id="53623">
        <label>cstdint</label>
      </node>
      <node id="53621">
        <label>AMReX_MCCGSolver.H</label>
        <link refid="AMReX__MCCGSolver_8H"/>
        <childnode refid="53600" relation="include">
        </childnode>
        <childnode refid="53589" relation="include">
        </childnode>
        <childnode refid="53594" relation="include">
        </childnode>
        <childnode refid="53622" relation="include">
        </childnode>
        <childnode refid="53669" relation="include">
        </childnode>
        <childnode refid="53676" relation="include">
        </childnode>
      </node>
      <node id="53663">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="53565" relation="include">
        </childnode>
        <childnode refid="53606" relation="include">
        </childnode>
        <childnode refid="53610" relation="include">
        </childnode>
        <childnode refid="53611" relation="include">
        </childnode>
        <childnode refid="53664" relation="include">
        </childnode>
        <childnode refid="53662" relation="include">
        </childnode>
        <childnode refid="53650" relation="include">
        </childnode>
        <childnode refid="53628" relation="include">
        </childnode>
        <childnode refid="53635" relation="include">
        </childnode>
      </node>
      <node id="53610">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="53581" relation="include">
        </childnode>
        <childnode refid="53601" relation="include">
        </childnode>
        <childnode refid="53579" relation="include">
        </childnode>
        <childnode refid="53607" relation="include">
        </childnode>
        <childnode refid="53576" relation="include">
        </childnode>
        <childnode refid="53571" relation="include">
        </childnode>
        <childnode refid="53589" relation="include">
        </childnode>
        <childnode refid="53594" relation="include">
        </childnode>
        <childnode refid="53595" relation="include">
        </childnode>
        <childnode refid="53587" relation="include">
        </childnode>
        <childnode refid="53611" relation="include">
        </childnode>
      </node>
      <node id="53599">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="53566" relation="include">
        </childnode>
        <childnode refid="53562" relation="include">
        </childnode>
        <childnode refid="53600" relation="include">
        </childnode>
        <childnode refid="53601" relation="include">
        </childnode>
        <childnode refid="53602" relation="include">
        </childnode>
        <childnode refid="53561" relation="include">
        </childnode>
        <childnode refid="53573" relation="include">
        </childnode>
        <childnode refid="53593" relation="include">
        </childnode>
        <childnode refid="53589" relation="include">
        </childnode>
        <childnode refid="53594" relation="include">
        </childnode>
        <childnode refid="53597" relation="include">
        </childnode>
        <childnode refid="53570" relation="include">
        </childnode>
        <childnode refid="53588" relation="include">
        </childnode>
        <childnode refid="53572" relation="include">
        </childnode>
      </node>
      <node id="53571">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="53572" relation="include">
        </childnode>
        <childnode refid="53573" relation="include">
        </childnode>
        <childnode refid="53574" relation="include">
        </childnode>
        <childnode refid="53576" relation="include">
        </childnode>
        <childnode refid="53577" relation="include">
        </childnode>
        <childnode refid="53565" relation="include">
        </childnode>
        <childnode refid="53578" relation="include">
        </childnode>
        <childnode refid="53567" relation="include">
        </childnode>
        <childnode refid="53579" relation="include">
        </childnode>
      </node>
      <node id="53634">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="53642">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="53637">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="53580" relation="include">
        </childnode>
        <childnode refid="53565" relation="include">
        </childnode>
      </node>
      <node id="53669">
        <label>AMReX_MCLinOp.H</label>
        <link refid="AMReX__MCLinOp_8H"/>
        <childnode refid="53570" relation="include">
        </childnode>
        <childnode refid="53589" relation="include">
        </childnode>
        <childnode refid="53594" relation="include">
        </childnode>
        <childnode refid="53587" relation="include">
        </childnode>
        <childnode refid="53606" relation="include">
        </childnode>
        <childnode refid="53622" relation="include">
        </childnode>
        <childnode refid="53670" relation="include">
        </childnode>
      </node>
      <node id="53594">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="53561" relation="include">
        </childnode>
        <childnode refid="53567" relation="include">
        </childnode>
        <childnode refid="53579" relation="include">
        </childnode>
        <childnode refid="53570" relation="include">
        </childnode>
      </node>
      <node id="53650">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="53591" relation="include">
        </childnode>
        <childnode refid="53613" relation="include">
        </childnode>
        <childnode refid="53651" relation="include">
        </childnode>
        <childnode refid="53571" relation="include">
        </childnode>
        <childnode refid="53612" relation="include">
        </childnode>
        <childnode refid="53611" relation="include">
        </childnode>
      </node>
      <node id="53600">
        <label>cmath</label>
      </node>
      <node id="53661">
        <label>cassert</label>
      </node>
      <node id="53575">
        <label>stdexcept</label>
      </node>
      <node id="53620">
        <label>numeric</label>
      </node>
      <node id="53678">
        <label>AMReX_BLFort.H</label>
        <link refid="AMReX__BLFort_8H"/>
        <childnode refid="53598" relation="include">
        </childnode>
        <childnode refid="53587" relation="include">
        </childnode>
        <childnode refid="53593" relation="include">
        </childnode>
      </node>
      <node id="53609">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="53566" relation="include">
        </childnode>
        <childnode refid="53599" relation="include">
        </childnode>
        <childnode refid="53603" relation="include">
        </childnode>
        <childnode refid="53595" relation="include">
        </childnode>
        <childnode refid="53589" relation="include">
        </childnode>
        <childnode refid="53594" relation="include">
        </childnode>
      </node>
      <node id="53625">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="53600" relation="include">
        </childnode>
        <childnode refid="53562" relation="include">
        </childnode>
        <childnode refid="53561" relation="include">
        </childnode>
        <childnode refid="53601" relation="include">
        </childnode>
        <childnode refid="53602" relation="include">
        </childnode>
        <childnode refid="53569" relation="include">
        </childnode>
        <childnode refid="53583" relation="include">
        </childnode>
        <childnode refid="53579" relation="include">
        </childnode>
        <childnode refid="53588" relation="include">
        </childnode>
        <childnode refid="53570" relation="include">
        </childnode>
        <childnode refid="53589" relation="include">
        </childnode>
        <childnode refid="53595" relation="include">
        </childnode>
        <childnode refid="53626" relation="include">
        </childnode>
        <childnode refid="53609" relation="include">
        </childnode>
        <childnode refid="53627" relation="include">
        </childnode>
        <childnode refid="53629" relation="include">
        </childnode>
        <childnode refid="53587" relation="include">
        </childnode>
        <childnode refid="53618" relation="include">
        </childnode>
        <childnode refid="53633" relation="include">
        </childnode>
        <childnode refid="53634" relation="include">
        </childnode>
        <childnode refid="53580" relation="include">
        </childnode>
        <childnode refid="53635" relation="include">
        </childnode>
      </node>
      <node id="53565">
        <label>string</label>
      </node>
      <node id="53649">
        <label>AMReX_CudaAllocators.H</label>
        <link refid="AMReX__CudaAllocators_8H"/>
        <childnode refid="53581" relation="include">
        </childnode>
        <childnode refid="53579" relation="include">
        </childnode>
        <childnode refid="53601" relation="include">
        </childnode>
        <childnode refid="53650" relation="include">
        </childnode>
        <childnode refid="53628" relation="include">
        </childnode>
        <childnode refid="53640" relation="include">
        </childnode>
      </node>
      <node id="53676">
        <label>AMReX_MCMultiGrid.H</label>
        <link refid="AMReX__MCMultiGrid_8H"/>
        <childnode refid="53589" relation="include">
        </childnode>
        <childnode refid="53594" relation="include">
        </childnode>
        <childnode refid="53622" relation="include">
        </childnode>
        <childnode refid="53669" relation="include">
        </childnode>
      </node>
      <node id="53626">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="53595" relation="include">
        </childnode>
      </node>
      <node id="53581">
        <label>map</label>
      </node>
      <node id="53622">
        <label>AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="53623" relation="include">
        </childnode>
        <childnode refid="53570" relation="include">
        </childnode>
        <childnode refid="53624" relation="include">
        </childnode>
        <childnode refid="53655" relation="include">
        </childnode>
        <childnode refid="53668" relation="include">
        </childnode>
        <childnode refid="53662" relation="include">
        </childnode>
      </node>
      <node id="53632">
        <label>unordered_set</label>
      </node>
      <node id="53670">
        <label>AMReX_BndryData.H</label>
        <link refid="AMReX__BndryData_8H"/>
        <childnode refid="53570" relation="include">
        </childnode>
        <childnode refid="53606" relation="include">
        </childnode>
        <childnode refid="53624" relation="include">
        </childnode>
        <childnode refid="53604" relation="include">
        </childnode>
        <childnode refid="53671" relation="include">
        </childnode>
        <childnode refid="53673" relation="include">
        </childnode>
        <childnode refid="53675" relation="include">
        </childnode>
        <childnode refid="53657" relation="include">
        </childnode>
        <childnode refid="53589" relation="include">
        </childnode>
        <childnode refid="53666" relation="include">
        </childnode>
        <childnode refid="53579" relation="include">
        </childnode>
        <childnode refid="53581" relation="include">
        </childnode>
      </node>
      <node id="53667">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
      </node>
      <node id="53666">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="53663" relation="include">
        </childnode>
        <childnode refid="53665" relation="include">
        </childnode>
      </node>
      <node id="53613">
        <label>fstream</label>
      </node>
      <node id="53657">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="53566" relation="include">
        </childnode>
        <childnode refid="53581" relation="include">
        </childnode>
        <childnode refid="53589" relation="include">
        </childnode>
        <childnode refid="53658" relation="include">
        </childnode>
        <childnode refid="53611" relation="include">
        </childnode>
        <childnode refid="53659" relation="include">
        </childnode>
        <childnode refid="53662" relation="include">
        </childnode>
      </node>
      <node id="53665">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="53579" relation="include">
        </childnode>
        <childnode refid="53628" relation="include">
        </childnode>
        <childnode refid="53663" relation="include">
        </childnode>
        <childnode refid="53599" relation="include">
        </childnode>
        <childnode refid="53624" relation="include">
        </childnode>
        <childnode refid="53659" relation="include">
        </childnode>
        <childnode refid="53635" relation="include">
        </childnode>
      </node>
      <node id="53675">
        <label>AMReX_BoundCond.H</label>
        <link refid="AMReX__BoundCond_8H"/>
        <childnode refid="53570" relation="include">
        </childnode>
        <childnode refid="53572" relation="include">
        </childnode>
      </node>
      <node id="53598">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="53587" relation="include">
        </childnode>
      </node>
      <node id="53659">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="53566" relation="include">
        </childnode>
        <childnode refid="53569" relation="include">
        </childnode>
        <childnode refid="53589" relation="include">
        </childnode>
        <childnode refid="53594" relation="include">
        </childnode>
        <childnode refid="53587" relation="include">
        </childnode>
        <childnode refid="53595" relation="include">
        </childnode>
        <childnode refid="53660" relation="include">
        </childnode>
      </node>
      <node id="53589">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="53569" relation="include">
        </childnode>
        <childnode refid="53579" relation="include">
        </childnode>
        <childnode refid="53590" relation="include">
        </childnode>
        <childnode refid="53565" relation="include">
        </childnode>
        <childnode refid="53576" relation="include">
        </childnode>
        <childnode refid="53591" relation="include">
        </childnode>
        <childnode refid="53578" relation="include">
        </childnode>
        <childnode refid="53571" relation="include">
        </childnode>
        <childnode refid="53572" relation="include">
        </childnode>
        <childnode refid="53592" relation="include">
        </childnode>
        <childnode refid="53570" relation="include">
        </childnode>
        <childnode refid="53593" relation="include">
        </childnode>
        <childnode refid="53587" relation="include">
        </childnode>
      </node>
      <node id="53648">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="53572" relation="include">
        </childnode>
        <childnode refid="53592" relation="include">
        </childnode>
        <childnode refid="53580" relation="include">
        </childnode>
      </node>
      <node id="53593">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="53664">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="53571" relation="include">
        </childnode>
        <childnode refid="53611" relation="include">
        </childnode>
        <childnode refid="53650" relation="include">
        </childnode>
        <childnode refid="53594" relation="include">
        </childnode>
        <childnode refid="53583" relation="include">
        </childnode>
      </node>
      <node id="53588">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="53636">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="53572" relation="include">
        </childnode>
        <childnode refid="53592" relation="include">
        </childnode>
        <childnode refid="53637" relation="include">
        </childnode>
        <childnode refid="53638" relation="include">
        </childnode>
        <childnode refid="53640" relation="include">
        </childnode>
        <childnode refid="53595" relation="include">
        </childnode>
        <childnode refid="53626" relation="include">
        </childnode>
        <childnode refid="53588" relation="include">
        </childnode>
        <childnode refid="53570" relation="include">
        </childnode>
        <childnode refid="53639" relation="include">
        </childnode>
        <childnode refid="53607" relation="include">
        </childnode>
        <childnode refid="53601" relation="include">
        </childnode>
        <childnode refid="53561" relation="include">
        </childnode>
        <childnode refid="53641" relation="include">
        </childnode>
        <childnode refid="53642" relation="include">
        </childnode>
      </node>
      <node id="53584">
        <label>sys/types.h</label>
      </node>
      <node id="53662">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="53599" relation="include">
        </childnode>
        <childnode refid="53595" relation="include">
        </childnode>
        <childnode refid="53567" relation="include">
        </childnode>
      </node>
      <node id="53619">
        <label>typeinfo</label>
      </node>
      <node id="53578">
        <label>cstdio</label>
      </node>
      <node id="53639">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="53583" relation="include">
        </childnode>
        <childnode refid="53588" relation="include">
        </childnode>
      </node>
      <node id="53592">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="53572" relation="include">
        </childnode>
      </node>
      <node id="53672">
        <label>AMReX_FabSet.H</label>
        <link refid="AMReX__FabSet_8H"/>
        <childnode refid="53622" relation="include">
        </childnode>
        <childnode refid="53657" relation="include">
        </childnode>
      </node>
      <node id="53614">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="53564" relation="include">
        </childnode>
        <childnode refid="53565" relation="include">
        </childnode>
        <childnode refid="53590" relation="include">
        </childnode>
        <childnode refid="53591" relation="include">
        </childnode>
        <childnode refid="53578" relation="include">
        </childnode>
        <childnode refid="53562" relation="include">
        </childnode>
        <childnode refid="53615" relation="include">
        </childnode>
        <childnode refid="53616" relation="include">
        </childnode>
        <childnode refid="53617" relation="include">
        </childnode>
      </node>
      <node id="53585">
        <label>unistd.h</label>
      </node>
      <node id="53567">
        <label>vector</label>
      </node>
      <node id="53564">
        <label>stack</label>
      </node>
      <node id="53654">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="53595" relation="include">
        </childnode>
        <childnode refid="53650" relation="include">
        </childnode>
        <childnode refid="53634" relation="include">
        </childnode>
        <childnode refid="53594" relation="include">
        </childnode>
        <childnode refid="53628" relation="include">
        </childnode>
      </node>
      <node id="53570">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="53571" relation="include">
        </childnode>
      </node>
      <node id="53572">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="53590">
        <label>utility</label>
      </node>
      <node id="53569">
        <label>array</label>
      </node>
      <node id="53655">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="53576" relation="include">
        </childnode>
        <childnode refid="53645" relation="include">
        </childnode>
        <childnode refid="53601" relation="include">
        </childnode>
        <childnode refid="53581" relation="include">
        </childnode>
        <childnode refid="53590" relation="include">
        </childnode>
        <childnode refid="53567" relation="include">
        </childnode>
        <childnode refid="53561" relation="include">
        </childnode>
        <childnode refid="53630" relation="include">
        </childnode>
        <childnode refid="53565" relation="include">
        </childnode>
        <childnode refid="53570" relation="include">
        </childnode>
        <childnode refid="53589" relation="include">
        </childnode>
        <childnode refid="53594" relation="include">
        </childnode>
        <childnode refid="53595" relation="include">
        </childnode>
        <childnode refid="53571" relation="include">
        </childnode>
        <childnode refid="53606" relation="include">
        </childnode>
        <childnode refid="53656" relation="include">
        </childnode>
        <childnode refid="53654" relation="include">
        </childnode>
        <childnode refid="53610" relation="include">
        </childnode>
        <childnode refid="53657" relation="include">
        </childnode>
        <childnode refid="53611" relation="include">
        </childnode>
        <childnode refid="53580" relation="include">
        </childnode>
        <childnode refid="53573" relation="include">
        </childnode>
        <childnode refid="53618" relation="include">
        </childnode>
        <childnode refid="53662" relation="include">
        </childnode>
        <childnode refid="53650" relation="include">
        </childnode>
        <childnode refid="53663" relation="include">
        </childnode>
        <childnode refid="53665" relation="include">
        </childnode>
        <childnode refid="53634" relation="include">
        </childnode>
        <childnode refid="53639" relation="include">
        </childnode>
        <childnode refid="53666" relation="include">
        </childnode>
        <childnode refid="53625" relation="include">
        </childnode>
        <childnode refid="53635" relation="include">
        </childnode>
        <childnode refid="53667" relation="include">
        </childnode>
      </node>
      <node id="53624">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="53595" relation="include">
        </childnode>
        <childnode refid="53625" relation="include">
        </childnode>
        <childnode refid="53587" relation="include">
        </childnode>
        <childnode refid="53593" relation="include">
        </childnode>
        <childnode refid="53654" relation="include">
        </childnode>
        <childnode refid="53600" relation="include">
        </childnode>
      </node>
      <node id="53591">
        <label>sstream</label>
      </node>
      <node id="53668">
        <label>AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="53655" relation="include">
        </childnode>
        <childnode refid="53666" relation="include">
        </childnode>
        <childnode refid="53650" relation="include">
        </childnode>
        <childnode refid="53601" relation="include">
        </childnode>
      </node>
      <node id="53574">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="53575" relation="include">
        </childnode>
      </node>
      <node id="53596">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="53561" relation="include">
        </childnode>
        <childnode refid="53572" relation="include">
        </childnode>
        <childnode refid="53588" relation="include">
        </childnode>
        <childnode refid="53597" relation="include">
        </childnode>
      </node>
      <node id="53638">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="53572" relation="include">
        </childnode>
        <childnode refid="53592" relation="include">
        </childnode>
        <childnode refid="53637" relation="include">
        </childnode>
        <childnode refid="53595" relation="include">
        </childnode>
        <childnode refid="53639" relation="include">
        </childnode>
      </node>
      <node id="53611">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="53573" relation="include">
        </childnode>
        <childnode refid="53612" relation="include">
        </childnode>
        <childnode refid="53614" relation="include">
        </childnode>
        <childnode refid="53618" relation="include">
        </childnode>
        <childnode refid="53570" relation="include">
        </childnode>
        <childnode refid="53587" relation="include">
        </childnode>
        <childnode refid="53589" relation="include">
        </childnode>
        <childnode refid="53594" relation="include">
        </childnode>
        <childnode refid="53595" relation="include">
        </childnode>
        <childnode refid="53576" relation="include">
        </childnode>
        <childnode refid="53567" relation="include">
        </childnode>
        <childnode refid="53565" relation="include">
        </childnode>
        <childnode refid="53619" relation="include">
        </childnode>
        <childnode refid="53561" relation="include">
        </childnode>
        <childnode refid="53577" relation="include">
        </childnode>
        <childnode refid="53601" relation="include">
        </childnode>
        <childnode refid="53620" relation="include">
        </childnode>
      </node>
      <node id="53580">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="53562" relation="include">
        </childnode>
        <childnode refid="53576" relation="include">
        </childnode>
        <childnode refid="53565" relation="include">
        </childnode>
        <childnode refid="53581" relation="include">
        </childnode>
        <childnode refid="53582" relation="include">
        </childnode>
        <childnode refid="53583" relation="include">
        </childnode>
        <childnode refid="53584" relation="include">
        </childnode>
        <childnode refid="53585" relation="include">
        </childnode>
        <childnode refid="53586" relation="include">
        </childnode>
        <childnode refid="53570" relation="include">
        </childnode>
        <childnode refid="53587" relation="include">
        </childnode>
        <childnode refid="53589" relation="include">
        </childnode>
        <childnode refid="53594" relation="include">
        </childnode>
        <childnode refid="53595" relation="include">
        </childnode>
        <childnode refid="53606" relation="include">
        </childnode>
        <childnode refid="53610" relation="include">
        </childnode>
        <childnode refid="53611" relation="include">
        </childnode>
      </node>
      <node id="53560">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.cpp</label>
        <link refid="AMReX_MCMultiGrid.cpp"/>
        <childnode refid="53561" relation="include">
        </childnode>
        <childnode refid="53562" relation="include">
        </childnode>
        <childnode refid="53563" relation="include">
        </childnode>
        <childnode refid="53580" relation="include">
        </childnode>
        <childnode refid="53611" relation="include">
        </childnode>
        <childnode refid="53621" relation="include">
        </childnode>
        <childnode refid="53677" relation="include">
        </childnode>
        <childnode refid="53676" relation="include">
        </childnode>
      </node>
      <node id="53628">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="53570" relation="include">
        </childnode>
        <childnode refid="53607" relation="include">
        </childnode>
        <childnode refid="53562" relation="include">
        </childnode>
      </node>
      <node id="53604">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="53566" relation="include">
        </childnode>
        <childnode refid="53570" relation="include">
        </childnode>
        <childnode refid="53593" relation="include">
        </childnode>
        <childnode refid="53572" relation="include">
        </childnode>
      </node>
      <node id="53597">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="53576" relation="include">
        </childnode>
        <childnode refid="53587" relation="include">
        </childnode>
        <childnode refid="53589" relation="include">
        </childnode>
      </node>
      <node id="53586">
        <label>sys/wait.h</label>
      </node>
      <node id="53566">
        <label>iosfwd</label>
      </node>
      <node id="53562">
        <label>cstdlib</label>
      </node>
      <node id="53617">
        <label>cfenv</label>
      </node>
      <node id="53576">
        <label>iostream</label>
      </node>
      <node id="53603">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="53566" relation="include">
        </childnode>
        <childnode refid="53573" relation="include">
        </childnode>
        <childnode refid="53599" relation="include">
        </childnode>
        <childnode refid="53593" relation="include">
        </childnode>
      </node>
      <node id="53671">
        <label>AMReX_BndryRegister.H</label>
        <link refid="AMReX__BndryRegister_8H"/>
        <childnode refid="53606" relation="include">
        </childnode>
        <childnode refid="53672" relation="include">
        </childnode>
      </node>
      <node id="53605">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="53599" relation="include">
        </childnode>
      </node>
      <node id="53607">
        <label>cstddef</label>
      </node>
      <node id="53608">
        <label>unordered_map</label>
      </node>
      <node id="53656">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="53566" relation="include">
        </childnode>
        <childnode refid="53603" relation="include">
        </childnode>
        <childnode refid="53595" relation="include">
        </childnode>
        <childnode refid="53599" relation="include">
        </childnode>
        <childnode refid="53609" relation="include">
        </childnode>
      </node>
      <node id="53635">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="53572" relation="include">
        </childnode>
        <childnode refid="53592" relation="include">
        </childnode>
        <childnode refid="53636" relation="include">
        </childnode>
        <childnode refid="53637" relation="include">
        </childnode>
        <childnode refid="53643" relation="include">
        </childnode>
        <childnode refid="53640" relation="include">
        </childnode>
        <childnode refid="53644" relation="include">
        </childnode>
        <childnode refid="53646" relation="include">
        </childnode>
        <childnode refid="53647" relation="include">
        </childnode>
        <childnode refid="53638" relation="include">
        </childnode>
        <childnode refid="53648" relation="include">
        </childnode>
        <childnode refid="53649" relation="include">
        </childnode>
        <childnode refid="53652" relation="include">
        </childnode>
        <childnode refid="53653" relation="include">
        </childnode>
      </node>
      <node id="53602">
        <label>climits</label>
      </node>
      <node id="53653">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="53631">
        <label>mutex</label>
      </node>
      <node id="53582">
        <label>chrono</label>
      </node>
      <node id="53641">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="53616">
        <label>csignal</label>
      </node>
      <node id="53673">
        <label>AMReX_MultiMask.H</label>
        <link refid="AMReX__MultiMask_8H"/>
        <childnode refid="53674" relation="include">
        </childnode>
        <childnode refid="53655" relation="include">
        </childnode>
        <childnode refid="53657" relation="include">
        </childnode>
      </node>
      <node id="53674">
        <label>AMReX_Mask.H</label>
        <link refid="AMReX__Mask_8H"/>
        <childnode refid="53625" relation="include">
        </childnode>
        <childnode refid="53624" relation="include">
        </childnode>
      </node>
      <node id="53629">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="53607" relation="include">
        </childnode>
        <childnode refid="53630" relation="include">
        </childnode>
        <childnode refid="53567" relation="include">
        </childnode>
        <childnode refid="53631" relation="include">
        </childnode>
        <childnode refid="53632" relation="include">
        </childnode>
        <childnode refid="53577" relation="include">
        </childnode>
        <childnode refid="53628" relation="include">
        </childnode>
      </node>
      <node id="53583">
        <label>type_traits</label>
      </node>
      <node id="53630">
        <label>set</label>
      </node>
      <node id="53627">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="53628" relation="include">
        </childnode>
      </node>
      <node id="53573">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="53646">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="53628" relation="include">
        </childnode>
      </node>
      <node id="53563">
        <label>AMReX_ParmParse.H</label>
        <link refid="AMReX__ParmParse_8H"/>
        <childnode refid="53564" relation="include">
        </childnode>
        <childnode refid="53565" relation="include">
        </childnode>
        <childnode refid="53566" relation="include">
        </childnode>
        <childnode refid="53567" relation="include">
        </childnode>
        <childnode refid="53568" relation="include">
        </childnode>
        <childnode refid="53569" relation="include">
        </childnode>
        <childnode refid="53570" relation="include">
        </childnode>
      </node>
      <node id="53561">
        <label>algorithm</label>
      </node>
      <node id="53640">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="53562" relation="include">
        </childnode>
        <childnode refid="53579" relation="include">
        </childnode>
        <childnode refid="53569" relation="include">
        </childnode>
        <childnode refid="53571" relation="include">
        </childnode>
        <childnode refid="53580" relation="include">
        </childnode>
        <childnode refid="53637" relation="include">
        </childnode>
        <childnode refid="53592" relation="include">
        </childnode>
      </node>
      <node id="53615">
        <label>execinfo.h</label>
      </node>
      <node id="53645">
        <label>cstring</label>
      </node>
      <node id="53660">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="53607" relation="include">
        </childnode>
        <childnode refid="53562" relation="include">
        </childnode>
        <childnode refid="53645" relation="include">
        </childnode>
        <childnode refid="53576" relation="include">
        </childnode>
        <childnode refid="53600" relation="include">
        </childnode>
        <childnode refid="53595" relation="include">
        </childnode>
        <childnode refid="53587" relation="include">
        </childnode>
        <childnode refid="53593" relation="include">
        </childnode>
        <childnode refid="53567" relation="include">
        </childnode>
        <childnode refid="53661" relation="include">
        </childnode>
        <childnode refid="53599" relation="include">
        </childnode>
      </node>
      <node id="53658">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="53601" relation="include">
        </childnode>
        <childnode refid="53571" relation="include">
        </childnode>
        <childnode refid="53587" relation="include">
        </childnode>
        <childnode refid="53589" relation="include">
        </childnode>
        <childnode refid="53594" relation="include">
        </childnode>
        <childnode refid="53595" relation="include">
        </childnode>
      </node>
      <node id="53579">
        <label>memory</label>
      </node>
      <node id="53644">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="53607" relation="include">
        </childnode>
        <childnode refid="53645" relation="include">
        </childnode>
        <childnode refid="53562" relation="include">
        </childnode>
        <childnode refid="53579" relation="include">
        </childnode>
        <childnode refid="53628" relation="include">
        </childnode>
        <childnode refid="53639" relation="include">
        </childnode>
        <childnode refid="53640" relation="include">
        </childnode>
      </node>
      <node id="53647">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="53572" relation="include">
        </childnode>
        <childnode refid="53592" relation="include">
        </childnode>
        <childnode refid="53640" relation="include">
        </childnode>
        <childnode refid="53639" relation="include">
        </childnode>
        <childnode refid="53628" relation="include">
        </childnode>
        <childnode refid="53562" relation="include">
        </childnode>
      </node>
      <node id="53587">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="53588" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParmParse_8H" kindref="compound">AMReX_ParmParse.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Utility_8H" kindref="compound">AMReX_Utility.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParallelDescriptor_8H" kindref="compound">AMReX_ParallelDescriptor.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MCCGSolver_8H" kindref="compound">AMReX_MCCGSolver.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MG__F_8H" kindref="compound">AMReX_MG_F.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__MCMultiGrid_8H" kindref="compound">AMReX_MCMultiGrid.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;omp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a4f43e2df85d0db8585e437a05c9c6a81" kindref="member">initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>default<sp/>values<sp/>for<sp/>these<sp/>in<sp/>Initialize()!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1aee55b67c8974572a540084bddc52157c" kindref="member">MCMultiGrid::def_nu_0</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1a9153671c5bf8b17dc9eb0c566321c1ed" kindref="member">MCMultiGrid::def_nu_1</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1a815dd069cc9480d3c4ed143721b2b5a6" kindref="member">MCMultiGrid::def_nu_2</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1acc73cfec1af465a8e6cffb09b3c3e8ec" kindref="member">MCMultiGrid::def_nu_f</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1aecbbb892e0206b2655a6581c8506d653" kindref="member">MCMultiGrid::def_maxiter</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1aba2608b10d91e179377e0d8df52547d7" kindref="member">MCMultiGrid::def_numiter</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1ab7e7b4548e5c2bc0a1d7e5c100b00f73" kindref="member">MCMultiGrid::def_verbose</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1a2011d3db3f99fa8d2e6251bfae111803" kindref="member">MCMultiGrid::def_usecg</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">Real<sp/><ref refid="classamrex_1_1MCMultiGrid_1a381e86ed8c54c5536f4c6f2b7d789d26" kindref="member">MCMultiGrid::def_rtol_b</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">Real<sp/><ref refid="classamrex_1_1MCMultiGrid_1a5a15395def2e8b4945a98a86f075f452" kindref="member">MCMultiGrid::def_atol_b</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1afb3acec37b9c55ce0401d2b28792af0d" kindref="member">MCMultiGrid::def_nu_b</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1a2a7e2bdc2cfab721a94b4ea3dc4fc837" kindref="member">MCMultiGrid::def_numLevelsMAX</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="classamrex_1_1MCMultiGrid_1af75aa17e64cba19f86120d0c1450c7a5" kindref="member">MCMultiGrid::Initialize</ref><sp/>()</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1a4f43e2df85d0db8585e437a05c9c6a81" kindref="member">initialized</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>defaults<sp/>here!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>MCMultiGrid::def_nu_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>MCMultiGrid::def_nu_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>MCMultiGrid::def_nu_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>MCMultiGrid::def_nu_f<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>MCMultiGrid::def_maxiter<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>40;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>MCMultiGrid::def_numiter<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>MCMultiGrid::def_verbose<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>MCMultiGrid::def_usecg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>MCMultiGrid::def_rtol_b<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.01;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>MCMultiGrid::def_atol_b<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>MCMultiGrid::def_nu_b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>MCMultiGrid::def_numLevelsMAX<sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>ParmParse<sp/>pp(</highlight><highlight class="stringliteral">&quot;mg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;maxiter&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1aecbbb892e0206b2655a6581c8506d653" kindref="member">def_maxiter</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;numiter&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1aba2608b10d91e179377e0d8df52547d7" kindref="member">def_numiter</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;nu_0&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1aee55b67c8974572a540084bddc52157c" kindref="member">def_nu_0</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;nu_1&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1a9153671c5bf8b17dc9eb0c566321c1ed" kindref="member">def_nu_1</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;nu_2&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1a815dd069cc9480d3c4ed143721b2b5a6" kindref="member">def_nu_2</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;nu_f&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1acc73cfec1af465a8e6cffb09b3c3e8ec" kindref="member">def_nu_f</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1ab7e7b4548e5c2bc0a1d7e5c100b00f73" kindref="member">def_verbose</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;usecg&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1a2011d3db3f99fa8d2e6251bfae111803" kindref="member">def_usecg</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;rtol_b&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1a381e86ed8c54c5536f4c6f2b7d789d26" kindref="member">def_rtol_b</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;bot_atol&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1a5a15395def2e8b4945a98a86f075f452" kindref="member">def_atol_b</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;nu_b&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1afb3acec37b9c55ce0401d2b28792af0d" kindref="member">def_nu_b</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;numLevelsMAX&quot;</highlight><highlight class="normal">,<sp/><ref refid="classamrex_1_1MCMultiGrid_1a2a7e2bdc2cfab721a94b4ea3dc4fc837" kindref="member">def_numLevelsMAX</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>()<sp/>&amp;&amp;<sp/><ref refid="classamrex_1_1MCMultiGrid_1ab7e7b4548e5c2bc0a1d7e5c100b00f73" kindref="member">def_verbose</ref>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;def_nu_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classamrex_1_1MCMultiGrid_1aee55b67c8974572a540084bddc52157c" kindref="member">def_nu_0</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;def_nu_1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classamrex_1_1MCMultiGrid_1a9153671c5bf8b17dc9eb0c566321c1ed" kindref="member">def_nu_1</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;def_nu_2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classamrex_1_1MCMultiGrid_1a815dd069cc9480d3c4ed143721b2b5a6" kindref="member">def_nu_2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;def_nu_f<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classamrex_1_1MCMultiGrid_1acc73cfec1af465a8e6cffb09b3c3e8ec" kindref="member">def_nu_f</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;def_maxiter<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classamrex_1_1MCMultiGrid_1aecbbb892e0206b2655a6581c8506d653" kindref="member">def_maxiter</ref><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;def_usecg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classamrex_1_1MCMultiGrid_1a2011d3db3f99fa8d2e6251bfae111803" kindref="member">def_usecg</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;def_rtol_b<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classamrex_1_1MCMultiGrid_1a381e86ed8c54c5536f4c6f2b7d789d26" kindref="member">def_rtol_b</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;def_atol_b<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classamrex_1_1MCMultiGrid_1a5a15395def2e8b4945a98a86f075f452" kindref="member">def_atol_b</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;def_nu_b<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classamrex_1_1MCMultiGrid_1afb3acec37b9c55ce0401d2b28792af0d" kindref="member">def_nu_b</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;def_numLevelsMAX<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classamrex_1_1MCMultiGrid_1a2a7e2bdc2cfab721a94b4ea3dc4fc837" kindref="member">def_numLevelsMAX</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;def_verbose<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classamrex_1_1MCMultiGrid_1ab7e7b4548e5c2bc0a1d7e5c100b00f73" kindref="member">def_verbose</ref><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aec8ceac1148bd8331f3a51572068f8a0" kindref="member">amrex::ExecOnFinalize</ref>(<ref refid="classamrex_1_1MCMultiGrid_1af1274728ad6d690d266227214a347e93" kindref="member">MCMultiGrid::Finalize</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4f43e2df85d0db8585e437a05c9c6a81" kindref="member">initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><ref refid="classamrex_1_1MCMultiGrid_1af1274728ad6d690d266227214a347e93" kindref="member">MCMultiGrid::Finalize</ref><sp/>()</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4f43e2df85d0db8585e437a05c9c6a81" kindref="member">initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">Real</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="namespaceamrex_1a897f9881c98a276a81004760a2bf67b0" kindref="member">norm_inf</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/><ref refid="classamrex_1_1MCMultiGrid_1a9560d41448c4b3f3fcacddf3ac79790b" kindref="member">res</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>local<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>restot<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>reduction(max:restot)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(res,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>mfi.isValid();<sp/>++mfi)<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>restot<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(restot,<sp/>res[mfi].norm(mfi.tilebox(),<sp/>0,<sp/>0,<sp/>res.nComp()));</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!local<sp/>)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a552f084c17efd580d0962eb68e6b43ee" kindref="member">ParallelDescriptor::ReduceRealMax</ref>(restot);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>restot;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><ref refid="namespaceamrex_1a98d93b35767e8e98fcdcfab5217f4e8f" kindref="member">Spacer</ref><sp/>(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>lev;<sp/>k++)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><ref refid="classamrex_1_1MCMultiGrid_1a60098bb0f80fbc4656191a495ada015f" kindref="member">MCMultiGrid::MCMultiGrid</ref><sp/>(MCLinOp<sp/>&amp;_lp)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1a2e8cc4671e3f0c31c5562ffadd69b95a" kindref="member">initialsolution</ref>(0),</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCMultiGrid_1a4429ca05cf021bd7ebace5ce69b037d1" kindref="member">Lp</ref>(_lp)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCLinOp_1a20ce8b97ab1c99080dd1cd36dc623200" kindref="member">Initialize</ref>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>maxiter<sp/>=<sp/>def_maxiter;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>numiter<sp/>=<sp/>def_numiter;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>nu_0<sp/>=<sp/>def_nu_0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>nu_1<sp/>=<sp/>def_nu_1;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>nu_2<sp/>=<sp/>def_nu_2;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>nu_f<sp/>=<sp/>def_nu_f;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>usecg<sp/>=<sp/>def_usecg;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCLinOp_1afb9e6ab7626ec58559aecc611c010b8b" kindref="member">verbose</ref><sp/>=<sp/><ref refid="classamrex_1_1MCLinOp_1a46a805edef342618ac1dbc55736a6c7e" kindref="member">def_verbose</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>rtol_b<sp/>=<sp/>def_rtol_b;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>atol_b<sp/>=<sp/>def_atol_b;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>nu_b<sp/>=<sp/>def_nu_b;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>numLevelsMAX<sp/>=<sp/>def_numLevelsMAX;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>numlevels<sp/>=<sp/><ref refid="classamrex_1_1MCLinOp_1a47f1b32dacb74cf6e351ab88c6803cd5" kindref="member">numLevels</ref>();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>numcomps<sp/>=<sp/>_lp.numberComponents();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>()<sp/>&amp;&amp;<sp/>(<ref refid="classamrex_1_1MCLinOp_1afb9e6ab7626ec58559aecc611c010b8b" kindref="member">verbose</ref><sp/>&gt;<sp/>2)<sp/>)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>BoxArray<sp/>tmp<sp/>=<sp/>Lp.boxArray();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MCMultiGrid:<sp/>numlevels<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>numlevels<sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>ngrid<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>tmp.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>npts<sp/>=<sp/>[&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numlevels;<sp/>++i<sp/>)<sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>&gt;<sp/>0<sp/>)<sp/>tmp.coarsen(2);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/>tmp.d_numPts()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MCMultiGrid:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>numlevels</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>multigrid<sp/>levels<sp/>created<sp/>for<sp/>this<sp/>solve&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>()<sp/>&amp;&amp;<sp/>(<ref refid="classamrex_1_1MCLinOp_1afb9e6ab7626ec58559aecc611c010b8b" kindref="member">verbose</ref><sp/>&gt;<sp/>4)<sp/>)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Grids:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>BoxArray<sp/>tmp<sp/>=<sp/>Lp.boxArray();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numlevels;<sp/>++i)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Orientation<sp/>face(0,<sp/><ref refid="classamrex_1_1Orientation_1a877c697bbab9de21af4012197ba76410a20ab23ed836ba1667dddbd915ff85255" kindref="member">Orientation::low</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>map<sp/>=<sp/>Lp.bndryData().bndryValues(face).DistributionMap();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.coarsen(2);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Level:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>tmp.size();<sp/>k++)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>b<sp/>=<sp/>tmp[k];</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>k<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>b<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/>b.length(j)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;::<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>map[k]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><ref refid="classamrex_1_1MCMultiGrid_1a63f2a6108ea62706ecea3548cdfacea1" kindref="member">MCMultiGrid::~MCMultiGrid</ref><sp/>()</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>initialsolution;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cor.size();<sp/>++i)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>res[i];</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>rhs[i];</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>cor[i];</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal">Real</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><ref refid="classamrex_1_1MCMultiGrid_1a81489135d1f27df4d6064c63cb5999ed" kindref="member">MCMultiGrid::errorEstimate</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7ae" kindref="member">MCBC_Mode</ref><sp/>bc_mode,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>local)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>Lp.residual(*res[level],<sp/>*rhs[level],<sp/>*cor[level],<sp/>level,<sp/>bc_mode);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a897f9881c98a276a81004760a2bf67b0" kindref="member">norm_inf</ref>(*res[level],<sp/>local);</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><ref refid="classamrex_1_1MCMultiGrid_1adc8c2d0bfe19ea24cdbfccec5d3a8b65" kindref="member">MCMultiGrid::prepareForLevel</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>this<sp/>level<sp/>by<sp/>allocating<sp/>reqd<sp/>internal<sp/>MultiFabs<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cor.size()<sp/>&gt;<sp/>level)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>res.resize(level+1,<sp/>(MultiFab*)0);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.resize(level+1,<sp/>(MultiFab*)0);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>cor.resize(level+1,<sp/>(MultiFab*)0);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>Lp.prepareForLevel(level);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cor[level]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray&amp;<sp/>ba<sp/>=<sp/>Lp.boxArray(level);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DistributionMapping&amp;<sp/>dm<sp/>=<sp/>Lp.DistributionMap();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>res[level]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MultiFab(ba,dm,numcomps,1);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs[level]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MultiFab(ba,dm,numcomps,1);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>cor[level]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MultiFab(ba,dm,numcomps,1);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialsolution<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MultiFab(ba,<sp/>dm,<sp/>numcomps,<sp/>1);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><ref refid="classamrex_1_1MCMultiGrid_1ac56bc061ee74ae09390d21dd40a2774c" kindref="member">MCMultiGrid::residualCorrectionForm</ref><sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>resL,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>rhsL,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>solnL,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>inisol,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7ae" kindref="member">MCBC_Mode</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bc_mode,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Using<sp/>the<sp/>linearity<sp/>of<sp/>the<sp/>operator,<sp/>Lp,<sp/>we<sp/>can<sp/>solve<sp/>this<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>instead<sp/>by<sp/>solving<sp/>for<sp/>the<sp/>correction<sp/>required<sp/>to<sp/>the<sp/>initial<sp/>guess.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>initialsolution-&gt;copy(inisol);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>solnL.copy(inisol);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>Lp.residual(resL,<sp/>rhsL,<sp/>solnL,<sp/>level,<sp/>bc_mode);</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><ref refid="classamrex_1_1MCMultiGrid_1a4e816bc394f4f94915656d1f5f2a6321" kindref="member">MCMultiGrid::solve</ref><sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>_sol,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>_rhs,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_eps_rel,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_eps_abs,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7ae" kindref="member">MCBC_Mode</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bc_mode)</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(numcomps<sp/>==<sp/>_sol.nComp());</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepare<sp/>memory<sp/>for<sp/>new<sp/>level,<sp/>and<sp/>solve<sp/>the<sp/>general<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>problem<sp/>to<sp/>within<sp/>relative<sp/>error<sp/>_eps_rel.<sp/><sp/>Customized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>solve<sp/>at<sp/>level=0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCLinOp_1a4f8f72730b5255f1849dc924737afb2b" kindref="member">prepareForLevel</ref>(level);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>residualCorrectionForm(*rhs[level],_rhs,*cor[level],_sol,bc_mode,level);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!solve_(_sol,<sp/>_eps_rel,<sp/>_eps_abs,<sp/><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7aea690909eddef5100a075a6465dc94537f" kindref="member">MCHomogeneous_BC</ref>,<sp/>level))</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac0e2e23df625040ded95611ceae98352" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;MCMultiGrid::solve():<sp/>failed<sp/>to<sp/>converge!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><ref refid="classamrex_1_1MCMultiGrid_1a51e5ca229e6b162c6f3dcc843cdbf9cb" kindref="member">MCMultiGrid::solve_</ref><sp/>(MultiFab&amp;<sp/>_sol,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/>eps_rel,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/>eps_abs,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7ae" kindref="member">MCBC_Mode</ref><sp/>bc_mode,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Relax<sp/>system<sp/>maxiter<sp/>times,<sp/>stop<sp/>if<sp/>relative<sp/>error<sp/>&lt;=<sp/>_eps_rel<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>absolute<sp/>err<sp/>&lt;=<sp/>_abs_eps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>strt_time<sp/>=<sp/><ref refid="namespaceamrex_1a6f975f843338c8eada684f0e8e2c0cb7" kindref="member">amrex::second</ref>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Elide<sp/>a<sp/>reduction<sp/>by<sp/>doing<sp/>these<sp/>together.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>Real<sp/>tmp[2]<sp/>=<sp/>{<sp/><ref refid="namespaceamrex_1a897f9881c98a276a81004760a2bf67b0" kindref="member">norm_inf</ref>(*rhs[level],</highlight><highlight class="keyword">true</highlight><highlight class="normal">),<sp/>errorEstimate(level,bc_mode,</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>};</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a552f084c17efd580d0962eb68e6b43ee" kindref="member">ParallelDescriptor::ReduceRealMax</ref>(tmp,2);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>norm_rhs<sp/><sp/>=<sp/>tmp[0];</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>error0<sp/><sp/><sp/><sp/>=<sp/>tmp[1];</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnVal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/><sp/><sp/><sp/><sp/>=<sp/>error0;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>()<sp/>&amp;&amp;<sp/>(<ref refid="classamrex_1_1MCLinOp_1afb9e6ab7626ec58559aecc611c010b8b" kindref="member">verbose</ref><sp/>&gt;<sp/>0)<sp/>)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a98d93b35767e8e98fcdcfab5217f4e8f" kindref="member">Spacer</ref>(<ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>(),<sp/>level);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MCMultiGrid:<sp/>Initial<sp/>rhs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>norm_rhs<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MCMultiGrid:<sp/>Initial<sp/>error<sp/>(error0)<sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>error0<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>()<sp/>&amp;&amp;<sp/>eps_rel<sp/>&lt;<sp/>1.0e-16<sp/>&amp;&amp;<sp/>eps_rel<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MCMultiGrid:<sp/>Tolerance<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>eps_rel</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&lt;<sp/>1e-16<sp/>is<sp/>probably<sp/>set<sp/>too<sp/>low&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>correction<sp/>to<sp/>zero<sp/>at<sp/>this<sp/>level<sp/>(auto-filled<sp/>at<sp/>levels<sp/>below)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>(*cor[level]).setVal(0.0);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>if<sp/>eps_rel,<sp/>eps_abs<sp/>&lt;<sp/>0<sp/>then<sp/>that<sp/>test<sp/>is<sp/>effectively<sp/>bypassed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nit<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>new_error_0<sp/>=<sp/>norm_rhs;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//const<sp/>Real<sp/>norm_Lp<sp/><sp/><sp/><sp/><sp/>=<sp/>Lp.norm(0,<sp/>level);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>&gt;<sp/>eps_abs<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>&gt;<sp/>eps_rel*norm_rhs<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nit<sp/>&lt;=<sp/>maxiter;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nit)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>relax(*cor[level],<sp/>*rhs[level],<sp/>level,<sp/>eps_rel,<sp/>eps_abs,<sp/>bc_mode);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>errorEstimate(level,bc_mode);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>()<sp/>&amp;&amp;<sp/><ref refid="classamrex_1_1MCLinOp_1afb9e6ab7626ec58559aecc611c010b8b" kindref="member">verbose</ref><sp/>&gt;<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>rel_error<sp/>=<sp/>(error0<sp/>!=<sp/>0)<sp/>?<sp/>error/new_error_0<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a98d93b35767e8e98fcdcfab5217f4e8f" kindref="member">Spacer</ref>(<ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>(),<sp/>level);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MCMultiGrid:<sp/>Iteration<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>nit</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>error/error0<sp/>=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>rel_error<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>Real<sp/>run_time<sp/>=<sp/>(<ref refid="namespaceamrex_1a6f975f843338c8eada684f0e8e2c0cb7" kindref="member">amrex::second</ref>()<sp/>-<sp/>strt_time);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classamrex_1_1MCLinOp_1afb9e6ab7626ec58559aecc611c010b8b" kindref="member">verbose</ref><sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>()<sp/>)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>rel_error<sp/>=<sp/>(error0<sp/>!=<sp/>0)<sp/>?<sp/>error/error0<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a98d93b35767e8e98fcdcfab5217f4e8f" kindref="member">Spacer</ref>(<ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>(),<sp/>level);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;MCMultiGrid:<sp/>Final<sp/>Iter.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>nit-1</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>error/error0<sp/>=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>rel_error;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classamrex_1_1MCLinOp_1afb9e6ab7626ec58559aecc611c010b8b" kindref="member">verbose</ref><sp/>&gt;<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a552f084c17efd580d0962eb68e6b43ee" kindref="member">ParallelDescriptor::ReduceRealMax</ref>(run_time);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Print" kindref="compound">amrex::Print</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Solve<sp/>time:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>run_time<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>()<sp/>&amp;&amp;<sp/>(<ref refid="classamrex_1_1MCLinOp_1afb9e6ab7626ec58559aecc611c010b8b" kindref="member">verbose</ref><sp/>&gt;<sp/>0)<sp/>)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>error<sp/>&lt;<sp/>eps_rel*norm_rhs<sp/>)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Converged<sp/>res<sp/>&lt;<sp/>eps_rel*bnorm\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>error<sp/>&lt;<sp/>eps_abs<sp/>)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1add2f0f36ce80f2f3934e3a8ec2a966df" kindref="member">amrex::OutStream</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Converged<sp/>res<sp/>&lt;<sp/>eps_abs\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Omit<sp/>ghost<sp/>update<sp/>since<sp/>maybe<sp/>not<sp/>initialized<sp/>in<sp/>calling<sp/>routine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>boundary<sp/>values<sp/>stored<sp/>in<sp/>initialsolution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>_sol.copy(*cor[level]);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>_sol.plus(*initialsolution,0,_sol.nComp(),0);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>error<sp/>&lt;=<sp/>eps_rel*(norm_rhs)<sp/>||</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>&lt;=<sp/>eps_abs<sp/>)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>returnVal<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>failed<sp/>to<sp/>solve<sp/>satisfactorily</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnVal;</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><ref refid="classamrex_1_1MCMultiGrid_1a22724fbe189ff34c1d9023f7eb5ced3c" kindref="member">MCMultiGrid::getNumLevels</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_numlevels)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(_numlevels<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldnumlevels<sp/>=<sp/>numlevels;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>numlevels<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(_numlevels,<sp/><ref refid="classamrex_1_1MCLinOp_1a47f1b32dacb74cf6e351ab88c6803cd5" kindref="member">numLevels</ref>());</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oldnumlevels;</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><ref refid="classamrex_1_1MCMultiGrid_1a9fbbe2304aa4c92756ce2add897df951" kindref="member">MCMultiGrid::numLevels</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="402"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ng<sp/>=<sp/>Lp.numGrids();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lv<sp/>=<sp/>numLevelsMAX<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>routine<sp/>`falls<sp/>through&apos;<sp/>since<sp/>coarsening<sp/>and<sp/>refining</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>unit<sp/>box<sp/>does<sp/>not<sp/>yield<sp/>the<sp/>initial<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxArray<sp/>&amp;bs<sp/>=<sp/>Lp.boxArray(0);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ng;<sp/>++i)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>llv<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>Box<sp/>tmp<sp/>=<sp/>bs[i];</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp.shortside()<sp/>&lt;=<sp/>3<sp/>)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac0e2e23df625040ded95611ceae98352" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;MCMultiGrid::numLevels():<sp/>fine<sp/>grid<sp/>too<sp/>small&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/>ctmp<sp/><sp/>=<sp/>tmp;<sp/>ctmp.coarsen(2);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/>rctmp<sp/>=<sp/>ctmp;<sp/>rctmp.refine(2);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>!=<sp/>rctmp)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctmp.numPts()<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wyc<sp/>--<sp/>change<sp/>so<sp/>grid<sp/>does<sp/>not<sp/>get<sp/>too<sp/>small</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wyc<sp/>--<sp/>this<sp/>is<sp/>necessary<sp/>for<sp/>one-sided<sp/>derivs<sp/>in<sp/>tensor-solve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wyc<sp/>--<sp/>when<sp/>BBMGoUR<sp/>is<sp/>implemented,<sp/>this<sp/>will<sp/>only<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wyc<sp/>--<sp/>necessary<sp/>on<sp/>finest<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctmp.shortside()<sp/>&lt;=<sp/>3)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>llv++;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>ctmp;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>number<sp/>of<sp/>levels<sp/>so<sp/>that<sp/>every<sp/>box<sp/>can<sp/>be<sp/>refined<sp/>to<sp/>there.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>lv<sp/>=<sp/>(lv<sp/>&lt;<sp/>llv)?<sp/>lv<sp/>:<sp/>llv;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lv+1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>including<sp/>coarsest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><ref refid="classamrex_1_1MCMultiGrid_1ae5e797b340bee23c04cff9b1a6b0873f" kindref="member">MCMultiGrid::relax</ref><sp/>(MultiFab&amp;<sp/>solL,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiFab&amp;<sp/>rhsL,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/>eps_rel,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/>eps_abs,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7ae" kindref="member">MCBC_Mode</ref><sp/>bc_mode)</highlight></codeline>
<codeline lineno="454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Recursively<sp/>relax<sp/>system.<sp/><sp/>Equivalent<sp/>to<sp/>multigrid<sp/>V-cycle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>coarsest<sp/>grid,<sp/>call<sp/>coarsestSmooth.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>&lt;<sp/>numlevels<sp/>-<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>preSmooth()<sp/>;<sp/>i<sp/>&gt;<sp/>0<sp/>;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Lp.smooth(solL,<sp/>rhsL,<sp/>level,<sp/>bc_mode);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>Lp.residual(*res[level],<sp/>rhsL,<sp/>solL,<sp/>level,<sp/>bc_mode);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCLinOp_1a4f8f72730b5255f1849dc924737afb2b" kindref="member">prepareForLevel</ref>(level+1);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>average(*rhs[level+1],<sp/>*res[level]);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>cor[level+1]-&gt;setVal(0.0);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>cntRelax();<sp/>i<sp/>&gt;<sp/>0<sp/>;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>relax(*cor[level+1],*rhs[level+1],level+1,eps_rel,eps_abs,bc_mode);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>interpolate(solL,<sp/>*cor[level+1]);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>postSmooth();<sp/>i<sp/>&gt;<sp/>0<sp/>;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Lp.smooth(solL,<sp/>rhsL,<sp/>level,<sp/>bc_mode);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>coarsestSmooth(solL,<sp/>rhsL,<sp/>level,<sp/>eps_rel,<sp/>eps_abs,<sp/>bc_mode);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><ref refid="classamrex_1_1MCMultiGrid_1a23dc417720283621c337ee067b68125b" kindref="member">MCMultiGrid::coarsestSmooth</ref><sp/>(MultiFab&amp;<sp/>solL,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiFab&amp;<sp/>rhsL,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/>eps_rel,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/>eps_abs,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7ae" kindref="member">MCBC_Mode</ref><sp/>bc_mode)</highlight></codeline>
<codeline lineno="487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MCLinOp_1a4f8f72730b5255f1849dc924737afb2b" kindref="member">prepareForLevel</ref>(level);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(usecg<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>finalSmooth();<sp/>i<sp/>&gt;<sp/>0;<sp/>i--)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lp.smooth(solL,<sp/>rhsL,<sp/>level,<sp/>bc_mode);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_mg_precond<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MCCGSolver<sp/><ref refid="namespaceamrex_1a9303c93b47b7839de8ce552cb7cb21c4a6e9cf3eef65da697796cf33f27eb0f57" kindref="member">cg</ref>(Lp,<sp/>use_mg_precond,<sp/>level);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a9303c93b47b7839de8ce552cb7cb21c4a6e9cf3eef65da697796cf33f27eb0f57" kindref="member">cg</ref>.solve(solL,<sp/>rhsL,<sp/>rtol_b,<sp/>atol_b,<sp/>bc_mode);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;nu_b;<sp/>i++)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Lp.smooth(solL,<sp/>rhsL,<sp/>level,<sp/>bc_mode);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><ref refid="classamrex_1_1MCMultiGrid_1afffd34c6fffe43df53b427fa60f0bf5c" kindref="member">MCMultiGrid::average</ref><sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>c,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>f)</highlight></codeline>
<codeline lineno="508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>Fortran<sp/>function<sp/>to<sp/>average<sp/>down<sp/>(restrict)<sp/>f<sp/>to<sp/>c.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>cmfi(c,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>cmfi.isValid();<sp/>++cmfi)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>bx<sp/><sp/><sp/>=<sp/>cmfi.tilebox();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nc<sp/><sp/><sp/>=<sp/>c.nComp();</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfab<sp/>=<sp/>c[cmfi];</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>ffab<sp/>=<sp/>f[cmfi];</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__MG__F_8H_1a990f1eda483f40aae57c8f6a14c6e6b6" kindref="member">amrex_mg_average</ref>(</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfab.dataPtr(),ARLIM(cfab.loVect()),ARLIM(cfab.hiVect()),</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ffab.dataPtr(),ARLIM(ffab.loVect()),ARLIM(ffab.hiVect()),</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bx.loVect(),<sp/>bx.hiVect(),<sp/>&amp;nc);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><ref refid="classamrex_1_1MCMultiGrid_1ab38c4ee6d30c1e348bce944365234426" kindref="member">MCMultiGrid::interpolate</ref><sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>f,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>c)</highlight></codeline>
<codeline lineno="531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>fortran<sp/>function<sp/>to<sp/>interpolate<sp/>up<sp/>(prolong)<sp/>c<sp/>to<sp/>f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>returns<sp/>f=f+P(c)<sp/>,<sp/>i.e.<sp/>ADDS<sp/>interp&apos;d<sp/>c<sp/>to<sp/>f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>fmfi(c,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>fmfi.isValid();<sp/>++fmfi)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>bx<sp/><sp/><sp/>=<sp/>fmfi.tilebox();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nc<sp/><sp/><sp/>=<sp/>f.nComp();</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>cfab<sp/>=<sp/>c[fmfi];</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ffab<sp/>=<sp/>f[fmfi];</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__MG__F_8H_1a6a31c2b9479ed3a489346b700dee6430" kindref="member">amrex_mg_interp</ref>(</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ffab.dataPtr(),ARLIM(ffab.loVect()),ARLIM(ffab.hiVect()),</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfab.dataPtr(),ARLIM(cfab.loVect()),ARLIM(cfab.hiVect()),</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bx.loVect(),<sp/>bx.hiVect(),<sp/>&amp;nc);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.cpp"/>
  </compounddef>
</doxygen>
