<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1ClusterList" kind="class" language="C++" prot="public">
    <compoundname>amrex::ClusterList</compoundname>
    <includes refid="AMReX__Cluster_8H" local="no">AMReX_Cluster.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1ClusterList_1a27c46e812840379455b46b092f2e6732" prot="private" static="no" mutable="no">
        <type>std::list&lt; <ref refid="classamrex_1_1Cluster" kindref="compound">Cluster</ref> * &gt;</type>
        <definition>std::list&lt;Cluster*&gt; amrex::ClusterList::lst</definition>
        <argsstring></argsstring>
        <name>lst</name>
        <briefdescription>
<para>The data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.H" line="240" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.H" bodystart="240" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1ClusterList_1acda755ef38bb85be6244f480e2fe9838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ClusterList::ClusterList</definition>
        <argsstring>()</argsstring>
        <name>ClusterList</name>
        <briefdescription>
<para>The default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.H" line="155" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.cpp" bodystart="450" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ClusterList_1a6a625f9cdf04d1051c936fcfebfc0db5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ClusterList::ClusterList</definition>
        <argsstring>(IntVect *pts, long len)</argsstring>
        <name>ClusterList</name>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> *</type>
          <declname>pts</declname>
        </param>
        <param>
          <type>long</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Construct a list containing Cluster(pts,len). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pts</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.H" line="163" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.cpp" bodystart="455" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ClusterList_1a85b6b93eeb622db0290b7b1a9fcb8fc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ClusterList::~ClusterList</definition>
        <argsstring>()</argsstring>
        <name>~ClusterList</name>
        <briefdescription>
<para>The destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.H" line="169" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.cpp" bodystart="461" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ClusterList_1a345fb938d7791e2cdb8b03dcdf22dc72" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ClusterList::length</definition>
        <argsstring>() const </argsstring>
        <name>length</name>
        <briefdescription>
<para>Return number of clusters in list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.H" line="174" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.H" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ClusterList_1ac43f48e56f1fd91ced82b35b4f8f8458" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ClusterList::append</definition>
        <argsstring>(Cluster *c)</argsstring>
        <name>append</name>
        <param>
          <type><ref refid="classamrex_1_1Cluster" kindref="compound">Cluster</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Add cluster to end of list. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.H" line="181" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.H" bodystart="181" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ClusterList_1aefd9576c6ef343b517bc119b8d0a686f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref></type>
        <definition>BoxArray amrex::ClusterList::boxArray</definition>
        <argsstring>() const </argsstring>
        <name>boxArray</name>
        <briefdescription>
<para>Return array of boxes corresponding to clusters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.H" line="186" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.cpp" bodystart="472" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ClusterList_1a56338eee09414016143cc35288d359db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ClusterList::boxArray</definition>
        <argsstring>(BoxArray &amp;ba) const </argsstring>
        <name>boxArray</name>
        <param>
          <type><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>ba</declname>
        </param>
        <briefdescription>
<para>Return array of boxes corresponding to clusters in argument. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ba</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.H" line="193" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.cpp" bodystart="489" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ClusterList_1ab6ce1a3650f4d0c3e164308bfe516eb4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1BoxList" kindref="compound">BoxList</ref></type>
        <definition>BoxList amrex::ClusterList::boxList</definition>
        <argsstring>() const </argsstring>
        <name>boxList</name>
        <briefdescription>
<para>Return list of boxes corresponding to clusters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.H" line="198" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.cpp" bodystart="506" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ClusterList_1a6633ad33b54cfcf0b82aef9aa6645f78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ClusterList::boxList</definition>
        <argsstring>(BoxList &amp;blst) const </argsstring>
        <name>boxList</name>
        <param>
          <type><ref refid="classamrex_1_1BoxList" kindref="compound">BoxList</ref> &amp;</type>
          <declname>blst</declname>
        </param>
        <briefdescription>
<para>Return list of boxes corresponding to clusters in argument. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>blst</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.H" line="205" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.cpp" bodystart="520" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ClusterList_1ae1763edf735b27fc9399dc6e09a4c983" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ClusterList::chop</definition>
        <argsstring>(Real eff)</argsstring>
        <name>chop</name>
        <param>
          <type>Real</type>
          <declname>eff</declname>
        </param>
        <briefdescription>
<para>Chop all clusters in list that have poor efficiency. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eff</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.H" line="212" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.cpp" bodystart="533" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ClusterList_1aa556ac17a14c8ed6b6280bae1ab48be5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ClusterList::new_chop</definition>
        <argsstring>(Real eff)</argsstring>
        <name>new_chop</name>
        <param>
          <type>Real</type>
          <declname>eff</declname>
        </param>
        <briefdescription>
<para>Chop all clusters in list that have poor efficiency. This version calls <ref refid="classamrex_1_1ClusterList_1aa556ac17a14c8ed6b6280bae1ab48be5" kindref="member">new_chop()</ref> instead of <ref refid="classamrex_1_1ClusterList_1ae1763edf735b27fc9399dc6e09a4c983" kindref="member">chop()</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eff</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.H" line="220" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.cpp" bodystart="550" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ClusterList_1af3f0289898299f45f430039d43778067" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ClusterList::intersect</definition>
        <argsstring>(const BoxDomain &amp;dom)</argsstring>
        <name>intersect</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxDomain" kindref="compound">BoxDomain</ref> &amp;</type>
          <declname>dom</declname>
        </param>
        <briefdescription>
<para>Intersect clusters with <ref refid="classamrex_1_1BoxDomain" kindref="compound">BoxDomain</ref> to insure cluster boxes are interior to domain. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dom</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.H" line="228" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.cpp" bodystart="567" bodyend="604"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1ClusterList_1a30defdbf282bed5cef976efce699955a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ClusterList::ClusterList</definition>
        <argsstring>(const ClusterList &amp;)</argsstring>
        <name>ClusterList</name>
        <param>
          <type>const <ref refid="classamrex_1_1ClusterList" kindref="compound">ClusterList</ref> &amp;</type>
        </param>
        <briefdescription>
<para>These are disallowed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.H" line="236" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ClusterList_1aacc7e1cd0f1616e33757d4b37a363909" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1ClusterList" kindref="compound">ClusterList</ref> &amp;</type>
        <definition>ClusterList&amp; amrex::ClusterList::operator=</definition>
        <argsstring>(const ClusterList &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1ClusterList" kindref="compound">ClusterList</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.H" line="237" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A list of <ref refid="classamrex_1_1Cluster" kindref="compound">Cluster</ref> objects. </para>    </briefdescription>
    <detaileddescription>
<para>A container class for <ref refid="classamrex_1_1Cluster" kindref="compound">Cluster</ref>. </para>    </detaileddescription>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.H" line="149" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_Cluster.H" bodystart="148" bodyend="241"/>
    <listofallmembers>
      <member refid="classamrex_1_1ClusterList_1ac43f48e56f1fd91ced82b35b4f8f8458" prot="public" virt="non-virtual"><scope>amrex::ClusterList</scope><name>append</name></member>
      <member refid="classamrex_1_1ClusterList_1aefd9576c6ef343b517bc119b8d0a686f" prot="public" virt="non-virtual"><scope>amrex::ClusterList</scope><name>boxArray</name></member>
      <member refid="classamrex_1_1ClusterList_1a56338eee09414016143cc35288d359db" prot="public" virt="non-virtual"><scope>amrex::ClusterList</scope><name>boxArray</name></member>
      <member refid="classamrex_1_1ClusterList_1ab6ce1a3650f4d0c3e164308bfe516eb4" prot="public" virt="non-virtual"><scope>amrex::ClusterList</scope><name>boxList</name></member>
      <member refid="classamrex_1_1ClusterList_1a6633ad33b54cfcf0b82aef9aa6645f78" prot="public" virt="non-virtual"><scope>amrex::ClusterList</scope><name>boxList</name></member>
      <member refid="classamrex_1_1ClusterList_1ae1763edf735b27fc9399dc6e09a4c983" prot="public" virt="non-virtual"><scope>amrex::ClusterList</scope><name>chop</name></member>
      <member refid="classamrex_1_1ClusterList_1acda755ef38bb85be6244f480e2fe9838" prot="public" virt="non-virtual"><scope>amrex::ClusterList</scope><name>ClusterList</name></member>
      <member refid="classamrex_1_1ClusterList_1a6a625f9cdf04d1051c936fcfebfc0db5" prot="public" virt="non-virtual"><scope>amrex::ClusterList</scope><name>ClusterList</name></member>
      <member refid="classamrex_1_1ClusterList_1a30defdbf282bed5cef976efce699955a" prot="private" virt="non-virtual"><scope>amrex::ClusterList</scope><name>ClusterList</name></member>
      <member refid="classamrex_1_1ClusterList_1af3f0289898299f45f430039d43778067" prot="public" virt="non-virtual"><scope>amrex::ClusterList</scope><name>intersect</name></member>
      <member refid="classamrex_1_1ClusterList_1a345fb938d7791e2cdb8b03dcdf22dc72" prot="public" virt="non-virtual"><scope>amrex::ClusterList</scope><name>length</name></member>
      <member refid="classamrex_1_1ClusterList_1a27c46e812840379455b46b092f2e6732" prot="private" virt="non-virtual"><scope>amrex::ClusterList</scope><name>lst</name></member>
      <member refid="classamrex_1_1ClusterList_1aa556ac17a14c8ed6b6280bae1ab48be5" prot="public" virt="non-virtual"><scope>amrex::ClusterList</scope><name>new_chop</name></member>
      <member refid="classamrex_1_1ClusterList_1aacc7e1cd0f1616e33757d4b37a363909" prot="private" virt="non-virtual"><scope>amrex::ClusterList</scope><name>operator=</name></member>
      <member refid="classamrex_1_1ClusterList_1a85b6b93eeb622db0290b7b1a9fcb8fc6" prot="public" virt="non-virtual"><scope>amrex::ClusterList</scope><name>~ClusterList</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
