<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structamrex_1_1ConstParticleTileData" kind="struct" language="C++" prot="public">
    <compoundname>amrex::ConstParticleTileData</compoundname>
    <includes refid="AMReX__ParticleTile_8H" local="no">AMReX_ParticleTile.H</includes>
    <templateparamlist>
      <param>
        <type>typename T_ParticleType</type>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NArrayReal</declname>
        <defname>NArrayReal</defname>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NArrayInt</declname>
        <defname>NArrayInt</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structamrex_1_1ConstParticleTileData_1a49bf1484da915d1cbf5eb4e5eef61efe" prot="public" static="no">
        <type>T_ParticleType</type>
        <definition>using amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::ParticleType =  T_ParticleType</definition>
        <argsstring></argsstring>
        <name>ParticleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="495" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ConstParticleTileData_1a9df3ed969c2de287106d9a3634bd7c6c" prot="public" static="no">
        <type>T_ParticleType const  &amp;</type>
        <definition>using amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::ParticleRefType =  T_ParticleType const&amp;</definition>
        <argsstring></argsstring>
        <name>ParticleRefType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="496" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ConstParticleTileData_1a26342fe95b550a7e29d72d3292ceab0d" prot="public" static="no">
        <type><ref refid="structamrex_1_1Particle" kindref="compound">Particle</ref>&lt; <ref refid="structamrex_1_1ConstParticleTileData_1a52823e648da48d1b8f45cd9de8e4a82f" kindref="member">NStructReal</ref>+NArrayReal, <ref refid="structamrex_1_1ConstParticleTileData_1a7ef19db67a548484a9f341f986156534" kindref="member">NStructInt</ref>+NArrayInt &gt;</type>
        <definition>using amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::SuperParticleType =  Particle&lt;NStructReal+NArrayReal, NStructInt+NArrayInt&gt;</definition>
        <argsstring></argsstring>
        <name>SuperParticleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="501" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ConstParticleTileData_1a9a0e29e42090b2a5ef8c987b4286dfbb" prot="public" static="no">
        <type>std::conditional_t&lt; T_ParticleType::is_soa_particle, void const *<ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref>, <ref refid="structamrex_1_1ConstParticleTileData_1a49bf1484da915d1cbf5eb4e5eef61efe" kindref="member">ParticleType</ref> const *<ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref> &gt;</type>
        <definition>using amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::AOS_PTR =  std::conditional_t&lt;T_ParticleType::is_soa_particle, void const * AMREX_RESTRICT, ParticleType const * AMREX_RESTRICT&gt;</definition>
        <argsstring></argsstring>
        <name>AOS_PTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="507" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="508" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structamrex_1_1ConstParticleTileData_1a9e82deaff2c7df2a96769926c0f35240" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::NAR</definition>
        <argsstring></argsstring>
        <name>NAR</name>
        <initializer>= NArrayReal</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="493" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ConstParticleTileData_1a06d45e3facca70a0951cbccddc01c804" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::NAI</definition>
        <argsstring></argsstring>
        <name>NAI</name>
        <initializer>= NArrayInt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="494" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ConstParticleTileData_1a52823e648da48d1b8f45cd9de8e4a82f" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::NStructReal</definition>
        <argsstring></argsstring>
        <name>NStructReal</name>
        <initializer>= ParticleType::NReal</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="498" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ConstParticleTileData_1a7ef19db67a548484a9f341f986156534" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::NStructInt</definition>
        <argsstring></argsstring>
        <name>NStructInt</name>
        <initializer>= ParticleType::NInt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="499" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ConstParticleTileData_1a053a4cde79a10dae428d3e992c190794" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::is_particle_tile_data</definition>
        <argsstring></argsstring>
        <name>is_particle_tile_data</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="503" column="27" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="503" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1ConstParticleTileData_1a4981ac43889bbde5f5d254c7fd5b3dee" prot="public" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="505" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ConstParticleTileData_1aaed81e14a45c2fb6fb56c56f7b9ca1ab" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1ConstParticleTileData_1a9a0e29e42090b2a5ef8c987b4286dfbb" kindref="member">AOS_PTR</ref></type>
        <definition>AOS_PTR amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::m_aos</definition>
        <argsstring></argsstring>
        <name>m_aos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="509" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="509" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ConstParticleTileData_1acd97b53df5e00957d639422e2e1d2127" prot="public" static="no" mutable="no">
        <type>const uint64_t *</type>
        <definition>const uint64_t* amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::m_idcpu</definition>
        <argsstring></argsstring>
        <name>m_idcpu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="511" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ConstParticleTileData_1afb784bdcba676085fb35c643d7af1813" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; const ParticleReal *, NArrayReal &gt;</type>
        <definition>GpuArray&lt;const ParticleReal*, NArrayReal&gt; amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::m_rdata</definition>
        <argsstring></argsstring>
        <name>m_rdata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="512" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="512" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ConstParticleTileData_1a09a5202b7c3b1227e67bf4ba69a3acb1" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *, NArrayInt &gt;</type>
        <definition>GpuArray&lt;const int*, NArrayInt &gt; amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::m_idata</definition>
        <argsstring></argsstring>
        <name>m_idata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="513" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ConstParticleTileData_1a6f05aa13e362cb416ba3f0ed01b25231" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::m_num_runtime_real</definition>
        <argsstring></argsstring>
        <name>m_num_runtime_real</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="577" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="577" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ConstParticleTileData_1a951364a24289b8bad79125f8cb81dafe" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::m_num_runtime_int</definition>
        <argsstring></argsstring>
        <name>m_num_runtime_int</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="578" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="578" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ConstParticleTileData_1a36375e824fc8bc51653e49929843701b" prot="public" static="no" mutable="no">
        <type>const ParticleReal *<ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref> *<ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref></type>
        <definition>const ParticleReal* AMREX_RESTRICT* AMREX_RESTRICT amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::m_runtime_rdata</definition>
        <argsstring></argsstring>
        <name>m_runtime_rdata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="579" column="55" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="579" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ConstParticleTileData_1a45bd743cea8c770a0600e7b10b01212a" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *<ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref> *<ref refid="AMReX__Extension_8H_1a97eafbdde3320b2e8981a1d1d3936f58" kindref="member">AMREX_RESTRICT</ref></type>
        <definition>const int* AMREX_RESTRICT* AMREX_RESTRICT amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::m_runtime_idata</definition>
        <argsstring></argsstring>
        <name>m_runtime_idata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="580" column="46" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="580" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1ConstParticleTileData_1abfab103d2cbcd0e41c61c00a4d4b77ce" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> const ParticleReal &amp;</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE const ParticleReal&amp; amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::pos</definition>
        <argsstring>(const int dir, const int index) const &amp;</argsstring>
        <name>pos</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="516" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="516" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ConstParticleTileData_1a364ed62398854b15640406fd8c833064" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type>AMREX_GPU_HOST_DEVICEdecltype(auto) <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICEdecltype(auto) AMREX_FORCE_INLINE amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::id</definition>
        <argsstring>(const int index) const &amp;</argsstring>
        <name>id</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="526" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="526" bodyend="533"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ConstParticleTileData_1ad2ca9ec5f12694c504ad479b6f452a62" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type>AMREX_GPU_HOST_DEVICEdecltype(auto) <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICEdecltype(auto) AMREX_FORCE_INLINE amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::cpu</definition>
        <argsstring>(const int index) const &amp;</argsstring>
        <name>cpu</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="536" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="536" bodyend="543"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ConstParticleTileData_1aa6a8094bb10b5559e034cf6624a2e034" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type>AMREX_GPU_HOST_DEVICEdecltype(auto) <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICEdecltype(auto) AMREX_FORCE_INLINE amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::idcpu</definition>
        <argsstring>(const int index) const &amp;</argsstring>
        <name>idcpu</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="546" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="546" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ConstParticleTileData_1a54d0d4ae5404e0c933c0fdeaab60ed9f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> const ParticleReal *</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE const ParticleReal* amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::rdata</definition>
        <argsstring>(const int attribute_index) const</argsstring>
        <name>rdata</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>attribute_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="556" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="556" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ConstParticleTileData_1a84707b98dac18e03e7539db1c072dd4d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE const int* amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::idata</definition>
        <argsstring>(const int attribute_index) const</argsstring>
        <name>idata</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>attribute_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="562" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="562" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ConstParticleTileData_1a105b772528c0a4ab1ddd6970c04e1456" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>AMREX_GPU_HOST_DEVICEdecltype(auto) <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICEdecltype(auto) AMREX_FORCE_INLINE amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::operator[]</definition>
        <argsstring>(const int index) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="568" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="568" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ConstParticleTileData_1ac72dd343efcb41ccea96af50686e1dad" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> void</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::packParticleData</definition>
        <argsstring>(char *buffer, int src_index, Long dst_offset, const int *comm_real, const int *comm_int) const noexcept</argsstring>
        <name>packParticleData</name>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>src_index</declname>
        </param>
        <param>
          <type>Long</type>
          <declname>dst_offset</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>comm_real</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>comm_int</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="583" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="583" bodyend="631"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ConstParticleTileData_1a13a4e750961bea9387e82b31eb85c071" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval><ref refid="structamrex_1_1ConstParticleTileData_1a49bf1484da915d1cbf5eb4e5eef61efe" kindref="member">ParticleType</ref></defval>
          </param>
          <param>
            <type>typename std::enable_if&lt;!T::is_soa_particle, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;::type</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> <ref refid="structamrex_1_1ConstParticleTileData_1a26342fe95b550a7e29d72d3292ceab0d" kindref="member">SuperParticleType</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE SuperParticleType amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::getSuperParticle</definition>
        <argsstring>(int index) const noexcept</argsstring>
        <name>getSuperParticle</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="635" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="635" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ConstParticleTileData_1a13a4e750961bea9387e82b31eb85c071" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval><ref refid="structamrex_1_1ConstParticleTileData_1a49bf1484da915d1cbf5eb4e5eef61efe" kindref="member">ParticleType</ref></defval>
          </param>
          <param>
            <type>typename std::enable_if&lt; T::is_soa_particle, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;::type</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> <ref refid="structamrex_1_1ConstParticleTileData_1a26342fe95b550a7e29d72d3292ceab0d" kindref="member">SuperParticleType</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE SuperParticleType amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;::getSuperParticle</definition>
        <argsstring>(int index) const noexcept</argsstring>
        <name>getSuperParticle</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="665" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="665" bodyend="678"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>amrex::GpuArray&lt; const ParticleReal *, NArrayReal &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="3">
        <label>amrex::GpuArray&lt; const int *, NArrayInt &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="1">
        <label>amrex::ConstParticleTileData&lt; T_ParticleType, NArrayReal, NArrayInt &gt;</label>
        <link refid="structamrex_1_1ConstParticleTileData"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_rdata</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_idata</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="491" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="492" bodyend="679"/>
    <listofallmembers>
      <member refid="structamrex_1_1ConstParticleTileData_1a9a0e29e42090b2a5ef8c987b4286dfbb" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>AOS_PTR</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1ad2ca9ec5f12694c504ad479b6f452a62" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>cpu</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1a13a4e750961bea9387e82b31eb85c071" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>getSuperParticle</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1a13a4e750961bea9387e82b31eb85c071" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>getSuperParticle</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1a364ed62398854b15640406fd8c833064" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>id</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1a84707b98dac18e03e7539db1c072dd4d" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>idata</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1aa6a8094bb10b5559e034cf6624a2e034" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>idcpu</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1a053a4cde79a10dae428d3e992c190794" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>is_particle_tile_data</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1aaed81e14a45c2fb6fb56c56f7b9ca1ab" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>m_aos</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1a09a5202b7c3b1227e67bf4ba69a3acb1" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>m_idata</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1acd97b53df5e00957d639422e2e1d2127" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>m_idcpu</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1a951364a24289b8bad79125f8cb81dafe" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>m_num_runtime_int</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1a6f05aa13e362cb416ba3f0ed01b25231" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>m_num_runtime_real</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1afb784bdcba676085fb35c643d7af1813" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>m_rdata</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1a45bd743cea8c770a0600e7b10b01212a" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>m_runtime_idata</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1a36375e824fc8bc51653e49929843701b" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>m_runtime_rdata</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1a4981ac43889bbde5f5d254c7fd5b3dee" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>m_size</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1a06d45e3facca70a0951cbccddc01c804" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>NAI</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1a9e82deaff2c7df2a96769926c0f35240" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>NAR</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1a7ef19db67a548484a9f341f986156534" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>NStructInt</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1a52823e648da48d1b8f45cd9de8e4a82f" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>NStructReal</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1a105b772528c0a4ab1ddd6970c04e1456" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>operator[]</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1ac72dd343efcb41ccea96af50686e1dad" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>packParticleData</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1a9df3ed969c2de287106d9a3634bd7c6c" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>ParticleRefType</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1a49bf1484da915d1cbf5eb4e5eef61efe" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>ParticleType</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1abfab103d2cbcd0e41c61c00a4d4b77ce" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>pos</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1a54d0d4ae5404e0c933c0fdeaab60ed9f" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>rdata</name></member>
      <member refid="structamrex_1_1ConstParticleTileData_1a26342fe95b550a7e29d72d3292ceab0d" prot="public" virt="non-virtual"><scope>amrex::ConstParticleTileData</scope><name>SuperParticleType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
