<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1HypreSolver" kind="class" language="C++" prot="public">
    <compoundname>amrex::HypreSolver</compoundname>
    <includes refid="AMReX__HypreSolver_8H" local="no">AMReX_HypreSolver.H</includes>
    <templateparamlist>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>MSS</declname>
        <defname>MSS</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1HypreSolver_1a3c89ce27b59a958a85af76b7106d0d47" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::HypreSolver&lt; MSS &gt;::m_nvars</definition>
        <argsstring></argsstring>
        <name>m_nvars</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="133" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreSolver_1acf16a10afaa8e55e344ed56680c70c13" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref> &gt;</type>
        <definition>Vector&lt;IndexType&gt; amrex::HypreSolver&lt; MSS &gt;::m_index_type</definition>
        <argsstring></argsstring>
        <name>m_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="134" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreSolver_1a0c8e0e716132c46ca1f819aec5f0ffc9" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></type>
        <definition>IntVect amrex::HypreSolver&lt; MSS &gt;::m_nghost</definition>
        <argsstring></argsstring>
        <name>m_nghost</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="135" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreSolver_1a20ebfa3f1563d8e3f8e1dcea53380a01" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::HypreSolver&lt; MSS &gt;::m_geom</definition>
        <argsstring></argsstring>
        <name>m_geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="136" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreSolver_1ad5f189d2a76fa6190a2c636cd1c41fa1" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &gt;</type>
        <definition>Vector&lt;BoxArray&gt; amrex::HypreSolver&lt; MSS &gt;::m_grids</definition>
        <argsstring></argsstring>
        <name>m_grids</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="137" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreSolver_1adbc41185b004eb0fbb4db236ee599d8c" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref></type>
        <definition>DistributionMapping amrex::HypreSolver&lt; MSS &gt;::m_dmap</definition>
        <argsstring></argsstring>
        <name>m_dmap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="138" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreSolver_1ada654e05e95e8e0a94b7176ac293d60f" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::HypreSolver&lt; MSS &gt;::m_verbose</definition>
        <argsstring></argsstring>
        <name>m_verbose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="140" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreSolver_1a68f95ee1a326d07fe027835c905ece00" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string amrex::HypreSolver&lt; MSS &gt;::m_options_namespace</definition>
        <argsstring></argsstring>
        <name>m_options_namespace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="141" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreSolver_1a53343f77d0925c7567465f6d07bfa012" prot="private" static="no" mutable="no">
        <type><ref refid="AMReX__ccse-mpi_8H_1a161d2f0d69c09838316e4ea9a74f02d7" kindref="member">MPI_Comm</ref></type>
        <definition>MPI_Comm amrex::HypreSolver&lt; MSS &gt;::m_comm</definition>
        <argsstring></argsstring>
        <name>m_comm</name>
        <initializer>= <ref refid="AMReX__ccse-mpi_8H_1a9eb867d9cda6acfce33985d67a31d5fc" kindref="member">MPI_COMM_NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="143" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreSolver_1ac643c87beeb9db50b0bf6c3584e0e055" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::unique_ptr&lt; <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> &gt; &gt;</type>
        <definition>Vector&lt;std::unique_ptr&lt;iMultiFab&gt; &gt; amrex::HypreSolver&lt; MSS &gt;::m_owner_mask</definition>
        <argsstring></argsstring>
        <name>m_owner_mask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="145" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreSolver_1ad8cc6880de72069843e8277129ece3dc" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> &gt;</type>
        <definition>Vector&lt;iMultiFab&gt; amrex::HypreSolver&lt; MSS &gt;::m_local_id</definition>
        <argsstring></argsstring>
        <name>m_local_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="146" column="36" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreSolver_1ab6a49cdaf1b77ee27cbace82f6051bd8" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt; HYPRE_Int &gt; &gt; &gt;</type>
        <definition>Vector&lt;FabArray&lt;BaseFab&lt;HYPRE_Int&gt; &gt; &gt; amrex::HypreSolver&lt; MSS &gt;::m_global_id</definition>
        <argsstring></argsstring>
        <name>m_global_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="147" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreSolver_1a2bb4aceb3d3328636d465c9e548946a2" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; <ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">Gpu::DeviceVector</ref>&lt; HYPRE_Int &gt; &gt;</type>
        <definition>LayoutData&lt;Gpu::DeviceVector&lt;HYPRE_Int&gt; &gt; amrex::HypreSolver&lt; MSS &gt;::m_global_id_vec</definition>
        <argsstring></argsstring>
        <name>m_global_id_vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="148" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreSolver_1ab67206477f143731d053df0d28751b86" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; <ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">Gpu::DeviceVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt;</type>
        <definition>LayoutData&lt;Gpu::DeviceVector&lt;int&gt; &gt; amrex::HypreSolver&lt; MSS &gt;::m_cell_offset</definition>
        <argsstring></argsstring>
        <name>m_cell_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="151" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreSolver_1a0da44696050a0f1ee648fad900d497f0" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; HYPRE_Int &gt; &gt;</type>
        <definition>Vector&lt;LayoutData&lt;HYPRE_Int&gt; &gt; amrex::HypreSolver&lt; MSS &gt;::m_nrows_grid</definition>
        <argsstring></argsstring>
        <name>m_nrows_grid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="154" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreSolver_1a413ac1a74ee41e809a9db1d4eaca9402" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; HYPRE_Int &gt; &gt;</type>
        <definition>Vector&lt;LayoutData&lt;HYPRE_Int&gt; &gt; amrex::HypreSolver&lt; MSS &gt;::m_id_offset</definition>
        <argsstring></argsstring>
        <name>m_id_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="155" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreSolver_1a090a812eff2805e0156494ff84bc332d" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; HYPRE_Int &gt;</type>
        <definition>LayoutData&lt;HYPRE_Int&gt; amrex::HypreSolver&lt; MSS &gt;::m_nrows</definition>
        <argsstring></argsstring>
        <name>m_nrows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="156" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreSolver_1aa617021e09275cf95cafa956854a0e76" prot="private" static="no" mutable="no">
        <type>HYPRE_Int</type>
        <definition>HYPRE_Int amrex::HypreSolver&lt; MSS &gt;::m_nrows_proc</definition>
        <argsstring></argsstring>
        <name>m_nrows_proc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="157" column="35" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreSolver_1a3a684b2d3ced4b0194697632ba0f91a8" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classamrex_1_1HypreIJIface" kindref="compound">HypreIJIface</ref> &gt;</type>
        <definition>std::unique_ptr&lt;HypreIJIface&gt; amrex::HypreSolver&lt; MSS &gt;::m_hypre_ij</definition>
        <argsstring></argsstring>
        <name>m_hypre_ij</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="159" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreSolver_1a6b8a8e6608be0522ca4b052414b28bf5" prot="private" static="no" mutable="no">
        <type>HYPRE_IJMatrix</type>
        <definition>HYPRE_IJMatrix amrex::HypreSolver&lt; MSS &gt;::m_A</definition>
        <argsstring></argsstring>
        <name>m_A</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="162" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreSolver_1acf15a119c1435c35c3f63c5e2d38bd3f" prot="private" static="no" mutable="no">
        <type>HYPRE_IJVector</type>
        <definition>HYPRE_IJVector amrex::HypreSolver&lt; MSS &gt;::m_b</definition>
        <argsstring></argsstring>
        <name>m_b</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="163" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreSolver_1ae747e84281f7636b354d847962c0cc4f" prot="private" static="no" mutable="no">
        <type>HYPRE_IJVector</type>
        <definition>HYPRE_IJVector amrex::HypreSolver&lt; MSS &gt;::m_x</definition>
        <argsstring></argsstring>
        <name>m_x</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="164" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="164" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1HypreSolver_1a040c586415a3e08b8d7c329cc6e861f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Marker</type>
          </param>
          <param>
            <type>class Filler</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>amrex::HypreSolver&lt; MSS &gt;::HypreSolver</definition>
        <argsstring>(Vector&lt; IndexType &gt; const &amp;a_index_type, IntVect const &amp;a_nghost, Geometry const &amp;a_geom, BoxArray const &amp;a_grids, DistributionMapping const &amp;a_dmap, Marker &amp;&amp;a_marker, Filler &amp;&amp;a_filler, int a_verbose=0, std::string a_options_namespace=&quot;hypre&quot;)</argsstring>
        <name>HypreSolver</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref> &gt; const &amp;</type>
          <declname>a_index_type</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> const &amp;</type>
          <declname>a_nghost</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>a_geom</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> const &amp;</type>
          <declname>a_grids</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> const &amp;</type>
          <declname>a_dmap</declname>
        </param>
        <param>
          <type>Marker &amp;&amp;</type>
          <declname>a_marker</declname>
        </param>
        <param>
          <type>Filler &amp;&amp;</type>
          <declname>a_filler</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>a_verbose</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>a_options_namespace</declname>
          <defval>&quot;hypre&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a_index_type</parametername>
</parameternamelist>
<parameterdescription>
<para>nodality of the data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">a_nghost</parametername>
</parameternamelist>
<parameterdescription>
<para>number of ghosts cells </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">a_geom</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> of problem domain </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">a_grids</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> of computational grids </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">a_dmap</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">a_marker</parametername>
</parameternamelist>
<parameterdescription>
<para>functor that returns whether the variable n at (i,j,k) in <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> boxno (local index) is valid (i.e., not exactly on Dirichlet boundary). function signature: <programlisting><codeline><highlight class="normal">(int<sp/>boxno,<sp/>int<sp/>i,<sp/>int<sp/>j,<sp/>int<sp/>k,<sp/>int<sp/>n)<sp/>-&gt;<sp/>bool</highlight></codeline>
</programlisting> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">a_filler</parametername>
</parameternamelist>
<parameterdescription>
<para>functor that fills the row in the matrix A for variable n at (i,j,k) in <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> boxno (local index) using the CSR format. function signature: <programlisting><codeline><highlight class="normal">//<sp/>[in<sp/>]<sp/>gid<sp/><sp/><sp/><sp/>gid[n]<sp/>is<sp/>the<sp/>id<sp/>for<sp/>variable<sp/>n<sp/>at<sp/>(i,j,k)</highlight></codeline>
<codeline><highlight class="normal">//<sp/>[out]<sp/>ncols<sp/><sp/>#<sp/>of<sp/>non-zero<sp/>columns<sp/>in<sp/>this<sp/>row.</highlight></codeline>
<codeline><highlight class="normal">//<sp/>[out]<sp/>cols<sp/><sp/><sp/>array<sp/>of<sp/>indices<sp/>of<sp/>columns<sp/>with<sp/>a<sp/>non-zero<sp/>matrix<sp/>element<sp/>in<sp/>this<sp/>row.</highlight></codeline>
<codeline><highlight class="normal">//<sp/>[out]<sp/>mat<sp/><sp/><sp/><sp/>array<sp/>of<sp/>(non-zero)<sp/>matrix<sp/>elements<sp/>in<sp/>this<sp/>row.</highlight></codeline>
<codeline><highlight class="normal">(int<sp/>boxno,<sp/>int<sp/>i,<sp/>int<sp/>j,<sp/>int<sp/>k,<sp/>int<sp/>n,<sp/>Array4&lt;HYPRE_Int<sp/>const&gt;<sp/>const*<sp/>gid,<sp/>HYPRE_Int&amp;<sp/>ncols,<sp/>HYPRE_Int*<sp/>cols,<sp/>HYPRE_Real*<sp/>mat)</highlight></codeline>
</programlisting> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">a_verbose</parametername>
</parameternamelist>
<parameterdescription>
<para>HYPRE verbosity (default 0) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">a_options_namespace</parametername>
</parameternamelist>
<parameterdescription>
<para>namespace to use when parsing runtime input parameters (default &quot;hypre&quot;) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="64" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="169" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreSolver_1a9f1959fa7ca34e1168671353176ee630" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class MF</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; <ref refid="structamrex_1_1IsFabArray" kindref="compound">IsFabArray</ref>&lt; MF &gt;::value &amp;&amp;std::is_same_v&lt; typename MF::value_type, HYPRE_Real &gt;, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::HypreSolver&lt; MSS &gt;::solve</definition>
        <argsstring>(Vector&lt; MF * &gt; const &amp;a_soln, Vector&lt; MF const * &gt; const &amp;a_rhs, HYPRE_Real rel_tol, HYPRE_Real abs_tol, int max_iter)</argsstring>
        <name>solve</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF * &gt; const &amp;</type>
          <declname>a_soln</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF const * &gt; const &amp;</type>
          <declname>a_rhs</declname>
        </param>
        <param>
          <type>HYPRE_Real</type>
          <declname>rel_tol</declname>
        </param>
        <param>
          <type>HYPRE_Real</type>
          <declname>abs_tol</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>max_iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Solve Ax=b</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">a_soln</parametername>
</parameternamelist>
<parameterdescription>
<para>the solution (i.e. x) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">a_rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>the right-hand side (i.e. b) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rel_tol</parametername>
</parameternamelist>
<parameterdescription>
<para>relative convergence tolerance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">abs_tol</parametername>
</parameternamelist>
<parameterdescription>
<para>absolute convergence tolerance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max_iter</parametername>
</parameternamelist>
<parameterdescription>
<para>maximum number of iterations </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="87" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="583" bodyend="602"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreSolver_1a1825063c207895677c85f9dbf121a62e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::HypreSolver&lt; MSS &gt;::getNumIters</definition>
        <argsstring>() const</argsstring>
        <name>getNumIters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="91" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreSolver_1abfa09a2551f499b29aebcba3a9715268" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HYPRE_Real</type>
        <definition>HYPRE_Real amrex::HypreSolver&lt; MSS &gt;::getFinalResidualNorm</definition>
        <argsstring>() const</argsstring>
        <name>getFinalResidualNorm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="93" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreSolver_1a67ef9ca88484d9c5cc326b86431da451" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HYPRE_IJMatrix</type>
        <definition>HYPRE_IJMatrix amrex::HypreSolver&lt; MSS &gt;::getA</definition>
        <argsstring>() const</argsstring>
        <name>getA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="97" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreSolver_1af227165d7eb34848f7ccc5942b432c0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HYPRE_IJVector</type>
        <definition>HYPRE_IJVector amrex::HypreSolver&lt; MSS &gt;::getb</definition>
        <argsstring>() const</argsstring>
        <name>getb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="98" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreSolver_1a610e0b733e190ba21b41303e76fa099f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HYPRE_IJVector</type>
        <definition>HYPRE_IJVector amrex::HypreSolver&lt; MSS &gt;::getx</definition>
        <argsstring>() const</argsstring>
        <name>getx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="99" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreSolver_1a392367fb9a32935314eb968bb2362f2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Marker</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; <ref refid="structamrex_1_1IsCallable" kindref="compound">IsCallable</ref>&lt; Marker, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;::value &gt;</type>
        <definition>std::enable_if_t&lt; IsCallable&lt; Marker, int, int, int, int, int &gt;::value &gt; amrex::HypreSolver&lt; MSS &gt;::fill_local_id</definition>
        <argsstring>(Marker const &amp;marker)</argsstring>
        <name>fill_local_id</name>
        <param>
          <type>Marker const &amp;</type>
          <declname>marker</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="109" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="280" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreSolver_1a42977b56e153d54d2503424197a077ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreSolver&lt; MSS &gt;::fill_global_id</definition>
        <argsstring>()</argsstring>
        <name>fill_global_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="111" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="370" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreSolver_1a6a50362b35729e2f0dc0df5cba4010df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Filler</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; <ref refid="structamrex_1_1IsCallable" kindref="compound">IsCallable</ref>&lt; Filler, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; HYPRE_Int const &gt; const *, HYPRE_Int &amp;, HYPRE_Int *, HYPRE_Real * &gt;::value, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <declname>FOO</declname>
            <defname>FOO</defname>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::HypreSolver&lt; MSS &gt;::fill_matrix</definition>
        <argsstring>(Filler const &amp;filler)</argsstring>
        <name>fill_matrix</name>
        <param>
          <type>Filler const &amp;</type>
          <declname>filler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="118" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="482" bodyend="576"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreSolver_1a674354d0ea227950c1d7507f553e9f04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class MF</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; <ref refid="structamrex_1_1IsFabArray" kindref="compound">IsFabArray</ref>&lt; MF &gt;::value &amp;&amp;std::is_same_v&lt; typename MF::value_type, HYPRE_Real &gt;, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::HypreSolver&lt; MSS &gt;::load_vectors</definition>
        <argsstring>(Vector&lt; MF * &gt; const &amp;a_soln, Vector&lt; MF const * &gt; const &amp;a_rhs)</argsstring>
        <name>load_vectors</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF * &gt; const &amp;</type>
          <declname>a_soln</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF const * &gt; const &amp;</type>
          <declname>a_rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="123" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="609" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreSolver_1a5de713250bbf999484b54230cd5aafef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class MF</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; <ref refid="structamrex_1_1IsFabArray" kindref="compound">IsFabArray</ref>&lt; MF &gt;::value &amp;&amp;std::is_same_v&lt; typename MF::value_type, HYPRE_Real &gt;, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::HypreSolver&lt; MSS &gt;::get_solution</definition>
        <argsstring>(Vector&lt; MF * &gt; const &amp;a_soln)</argsstring>
        <name>get_solution</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF * &gt; const &amp;</type>
          <declname>a_soln</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="129" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="666" bodyend="712"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Solve Ax = b using HYPRE&apos;s generic IJ matrix format where A is a sparse matrix specified using the compressed sparse row (CSR) format. </para>
    </briefdescription>
    <detaileddescription>
<para>An example of using <ref refid="classamrex_1_1HypreSolver" kindref="compound">HypreSolver</ref> to solve Poisson&apos;s equation is located in Tests/LinearSolvers/Hypre </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="57">
        <label>amrex::LayoutData&lt; HYPRE_Int &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="37" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="43">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="22">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>std::map&lt; amrex::FabArrayBase::BDKey, int &gt;</label>
        <childnode refid="25" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>K</label>
      </node>
      <node id="23">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="8">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="8" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>T</label>
      </node>
      <node id="54">
        <label>amrex::Vector&lt; amrex::iMultiFab &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Real</label>
      </node>
      <node id="31">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="13" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="41">
        <label>std::map&lt; std::string, amrex::FabArrayBase::meminfo &gt;</label>
        <childnode refid="42" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="27">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="8" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
      </node>
      <node id="55">
        <label>amrex::Vector&lt; amrex::BoxArray &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="58">
        <label>amrex::Vector&lt; amrex::IndexType &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="38">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="1">
        <label>amrex::HypreSolver&lt; MSS &gt;</label>
        <link refid="classamrex_1_1HypreSolver"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_geom</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_global_id_vec</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>m_dmap</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_nghost</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>m_owner_mask</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>m_cell_offset</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>m_id_offset</edgelabel>
          <edgelabel>m_nrows_grid</edgelabel>
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>m_global_id</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>m_local_id</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>m_options_namespace</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>m_grids</edgelabel>
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>m_hypre_ij</edgelabel>
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>m_nrows</edgelabel>
        </childnode>
        <childnode refid="58" relation="usage">
          <edgelabel>m_index_type</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="18" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="56">
        <label>std::unique_ptr&lt; amrex::HypreIJIface &gt;</label>
      </node>
      <node id="18">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="19" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
      </node>
      <node id="45">
        <label>std::multimap&lt; K, T &gt;</label>
        <childnode refid="13" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="48" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="46">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="37" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="4" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="8" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="50">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="48">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
      </node>
      <node id="32">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="33" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="40">
        <label>std::shared_ptr&lt; amrex::DistributionMapping::Ref &gt;</label>
      </node>
      <node id="3">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="4" relation="usage">
          <edgelabel>dx</edgelabel>
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>amrex::FabArrayBase::ParForInfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1ParForInfo"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_ng</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_boxes</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="33">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="34" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>m_ownership</edgelabel>
        </childnode>
      </node>
      <node id="51">
        <label>amrex::LayoutData&lt; amrex::PODVector&lt; int &gt; &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>amrex::FabArrayBase::meminfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1meminfo"/>
      </node>
      <node id="39">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
        <childnode refid="40" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="26" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>amrex::GpuArray&lt; ParticleReal, AMREX_SPACEDIM &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="35">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="2">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>roundoff_hi</edgelabel>
          <edgelabel>roundoff_lo</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="49">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
      </node>
      <node id="52">
        <label>amrex::Vector&lt; amrex::LayoutData&lt; HYPRE_Int &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>amrex::LayoutData&lt; amrex::PODVector&lt; HYPRE_Int &gt; &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="27" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>std::multimap&lt; amrex::FabArrayBase::BDKey, amrex::FabArrayBase::ParForInfo * &gt;</label>
        <childnode refid="16" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>amrex::Vector&lt; amrex::Box &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="12" relation="usage">
          <edgelabel>m_TheTileArrayCache</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>m_TheParForCache</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>m_mem_usage</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>m_BD_count</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>m_TheCPCache</edgelabel>
          <edgelabel>m_TheCrseFineCache</edgelabel>
          <edgelabel>m_TheFBCache</edgelabel>
          <edgelabel>m_TheFillPatchCache</edgelabel>
          <edgelabel>m_ThePolarBCache</edgelabel>
          <edgelabel>m_TheRB180Cache</edgelabel>
          <edgelabel>m_TheRB90Cache</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>ownership</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>m_region_tag</edgelabel>
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
      </node>
      <node id="53">
        <label>amrex::Vector&lt; amrex::FabArray&lt; amrex::BaseFab&lt; HYPRE_Int &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>std::vector&lt; int &gt;</label>
      </node>
      <node id="37">
        <label>std::string</label>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" line="33" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H" bodystart="34" bodyend="165"/>
    <listofallmembers>
      <member refid="classamrex_1_1HypreSolver_1a42977b56e153d54d2503424197a077ce" prot="public" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>fill_global_id</name></member>
      <member refid="classamrex_1_1HypreSolver_1a392367fb9a32935314eb968bb2362f2d" prot="public" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>fill_local_id</name></member>
      <member refid="classamrex_1_1HypreSolver_1a6a50362b35729e2f0dc0df5cba4010df" prot="public" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>fill_matrix</name></member>
      <member refid="classamrex_1_1HypreSolver_1a5de713250bbf999484b54230cd5aafef" prot="public" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>get_solution</name></member>
      <member refid="classamrex_1_1HypreSolver_1a67ef9ca88484d9c5cc326b86431da451" prot="public" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>getA</name></member>
      <member refid="classamrex_1_1HypreSolver_1af227165d7eb34848f7ccc5942b432c0b" prot="public" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>getb</name></member>
      <member refid="classamrex_1_1HypreSolver_1abfa09a2551f499b29aebcba3a9715268" prot="public" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>getFinalResidualNorm</name></member>
      <member refid="classamrex_1_1HypreSolver_1a1825063c207895677c85f9dbf121a62e" prot="public" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>getNumIters</name></member>
      <member refid="classamrex_1_1HypreSolver_1a610e0b733e190ba21b41303e76fa099f" prot="public" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>getx</name></member>
      <member refid="classamrex_1_1HypreSolver_1a040c586415a3e08b8d7c329cc6e861f5" prot="public" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>HypreSolver</name></member>
      <member refid="classamrex_1_1HypreSolver_1a674354d0ea227950c1d7507f553e9f04" prot="public" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>load_vectors</name></member>
      <member refid="classamrex_1_1HypreSolver_1a6b8a8e6608be0522ca4b052414b28bf5" prot="private" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>m_A</name></member>
      <member refid="classamrex_1_1HypreSolver_1acf15a119c1435c35c3f63c5e2d38bd3f" prot="private" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>m_b</name></member>
      <member refid="classamrex_1_1HypreSolver_1ab67206477f143731d053df0d28751b86" prot="private" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>m_cell_offset</name></member>
      <member refid="classamrex_1_1HypreSolver_1a53343f77d0925c7567465f6d07bfa012" prot="private" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>m_comm</name></member>
      <member refid="classamrex_1_1HypreSolver_1adbc41185b004eb0fbb4db236ee599d8c" prot="private" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>m_dmap</name></member>
      <member refid="classamrex_1_1HypreSolver_1a20ebfa3f1563d8e3f8e1dcea53380a01" prot="private" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>m_geom</name></member>
      <member refid="classamrex_1_1HypreSolver_1ab6a49cdaf1b77ee27cbace82f6051bd8" prot="private" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>m_global_id</name></member>
      <member refid="classamrex_1_1HypreSolver_1a2bb4aceb3d3328636d465c9e548946a2" prot="private" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>m_global_id_vec</name></member>
      <member refid="classamrex_1_1HypreSolver_1ad5f189d2a76fa6190a2c636cd1c41fa1" prot="private" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>m_grids</name></member>
      <member refid="classamrex_1_1HypreSolver_1a3a684b2d3ced4b0194697632ba0f91a8" prot="private" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>m_hypre_ij</name></member>
      <member refid="classamrex_1_1HypreSolver_1a413ac1a74ee41e809a9db1d4eaca9402" prot="private" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>m_id_offset</name></member>
      <member refid="classamrex_1_1HypreSolver_1acf16a10afaa8e55e344ed56680c70c13" prot="private" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>m_index_type</name></member>
      <member refid="classamrex_1_1HypreSolver_1ad8cc6880de72069843e8277129ece3dc" prot="private" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>m_local_id</name></member>
      <member refid="classamrex_1_1HypreSolver_1a0c8e0e716132c46ca1f819aec5f0ffc9" prot="private" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>m_nghost</name></member>
      <member refid="classamrex_1_1HypreSolver_1a090a812eff2805e0156494ff84bc332d" prot="private" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>m_nrows</name></member>
      <member refid="classamrex_1_1HypreSolver_1a0da44696050a0f1ee648fad900d497f0" prot="private" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>m_nrows_grid</name></member>
      <member refid="classamrex_1_1HypreSolver_1aa617021e09275cf95cafa956854a0e76" prot="private" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>m_nrows_proc</name></member>
      <member refid="classamrex_1_1HypreSolver_1a3c89ce27b59a958a85af76b7106d0d47" prot="private" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>m_nvars</name></member>
      <member refid="classamrex_1_1HypreSolver_1a68f95ee1a326d07fe027835c905ece00" prot="private" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>m_options_namespace</name></member>
      <member refid="classamrex_1_1HypreSolver_1ac643c87beeb9db50b0bf6c3584e0e055" prot="private" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>m_owner_mask</name></member>
      <member refid="classamrex_1_1HypreSolver_1ada654e05e95e8e0a94b7176ac293d60f" prot="private" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>m_verbose</name></member>
      <member refid="classamrex_1_1HypreSolver_1ae747e84281f7636b354d847962c0cc4f" prot="private" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>m_x</name></member>
      <member refid="classamrex_1_1HypreSolver_1a9f1959fa7ca34e1168671353176ee630" prot="public" virt="non-virtual"><scope>amrex::HypreSolver</scope><name>solve</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
