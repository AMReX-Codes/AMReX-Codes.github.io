<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4" kind="struct" language="C++" prot="public">
    <compoundname>amrex::DataLayoutPolicyRaw&lt; ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;</compoundname>
    <includes refid="AMReX__ParticleArray_8H" local="no">AMReX_ParticleArray.H</includes>
    <templateparamlist>
      <param>
        <type>template&lt; typename... &gt; class</type>
        <declname>ParticleType</declname>
        <defname>ParticleType</defname>
      </param>
      <param>
        <type>typename...</type>
        <declname>Types</declname>
        <defname>Types</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a4cea01ca1b107d8585be77870f2da12f" prot="public" static="no">
        <type>ParticleType&lt; Types... &gt; *</type>
        <definition>using amrex::DataLayoutPolicyRaw&lt; ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;::raw_type =  ParticleType&lt;Types...&gt;*</definition>
        <argsstring></argsstring>
        <name>raw_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="107" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a913ff82076d8ba44b1368ee651f235b4" prot="public" static="no">
        <type>ParticleType&lt; Types... &gt; &amp;</type>
        <definition>using amrex::DataLayoutPolicyRaw&lt; ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;::value_type =  ParticleType&lt;Types...&gt;&amp;</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="108" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a62d1e4bb09aa9d6a9f20844737fab794" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> static constexpr <ref refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a913ff82076d8ba44b1368ee651f235b4" kindref="member">value_type</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE static constexpr value_type amrex::DataLayoutPolicyRaw&lt; ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;::get</definition>
        <argsstring>(raw_type a_ptr, std::size_t a_index)</argsstring>
        <name>get</name>
        <param>
          <type><ref refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a4cea01ca1b107d8585be77870f2da12f" kindref="member">raw_type</ref></type>
          <declname>a_ptr</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>a_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="111" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="111" bodyend="114"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A non-owning verion of AoS policy for passing to the GPU. </para>    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" line="106" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H" bodystart="105" bodyend="115"/>
    <listofallmembers>
      <member refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a62d1e4bb09aa9d6a9f20844737fab794" prot="public" virt="non-virtual"><scope>amrex::DataLayoutPolicyRaw&lt; ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;</scope><name>get</name></member>
      <member refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a4cea01ca1b107d8585be77870f2da12f" prot="public" virt="non-virtual"><scope>amrex::DataLayoutPolicyRaw&lt; ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;</scope><name>raw_type</name></member>
      <member refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a913ff82076d8ba44b1368ee651f235b4" prot="public" virt="non-virtual"><scope>amrex::DataLayoutPolicyRaw&lt; ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
