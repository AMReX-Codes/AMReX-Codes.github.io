<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1MCMultiGrid" kind="class" language="C++" prot="public">
    <compoundname>amrex::MCMultiGrid</compoundname>
    <includes refid="AMReX__MCMultiGrid_8H" local="no">AMReX_MCMultiGrid.H</includes>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1a2011d3db3f99fa8d2e6251bfae111803" prot="protected" static="yes" mutable="no">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::def_usecg</definition>
        <argsstring></argsstring>
        <name>def_usecg</name>
        <briefdescription>
<para>Default flag, whether to use CG at bottom of MG cycle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="376" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1aee55b67c8974572a540084bddc52157c" prot="protected" static="yes" mutable="no">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::def_nu_0</definition>
        <argsstring></argsstring>
        <name>def_nu_0</name>
        <briefdescription>
<para>Default number of level, pre-, post and bottom smooths. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="386" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1a9153671c5bf8b17dc9eb0c566321c1ed" prot="protected" static="yes" mutable="no">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::def_nu_1</definition>
        <argsstring></argsstring>
        <name>def_nu_1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="386" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1a815dd069cc9480d3c4ed143721b2b5a6" prot="protected" static="yes" mutable="no">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::def_nu_2</definition>
        <argsstring></argsstring>
        <name>def_nu_2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="386" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1acc73cfec1af465a8e6cffb09b3c3e8ec" prot="protected" static="yes" mutable="no">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::def_nu_f</definition>
        <argsstring></argsstring>
        <name>def_nu_f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="386" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1afb3acec37b9c55ce0401d2b28792af0d" prot="protected" static="yes" mutable="no">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::def_nu_b</definition>
        <argsstring></argsstring>
        <name>def_nu_b</name>
        <briefdescription>
<para>Default number of post-cg relax passes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="389" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1aecbbb892e0206b2655a6581c8506d653" prot="protected" static="yes" mutable="no">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::def_maxiter</definition>
        <argsstring></argsstring>
        <name>def_maxiter</name>
        <briefdescription>
<para>Default maximum number of complete MG cycle iterations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="392" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1aba2608b10d91e179377e0d8df52547d7" prot="protected" static="yes" mutable="no">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::def_numiter</definition>
        <argsstring></argsstring>
        <name>def_numiter</name>
        <briefdescription>
<para>Default number of complete MG cycle iterations to perform. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="395" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1ab7e7b4548e5c2bc0a1d7e5c100b00f73" prot="protected" static="yes" mutable="no">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::def_verbose</definition>
        <argsstring></argsstring>
        <name>def_verbose</name>
        <briefdescription>
<para>Default verbosity. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="398" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1a381e86ed8c54c5536f4c6f2b7d789d26" prot="protected" static="yes" mutable="no">
        <type>Real</type>
        <definition>Real amrex::MCMultiGrid::def_rtol_b</definition>
        <argsstring></argsstring>
        <name>def_rtol_b</name>
        <briefdescription>
<para>Default relative, absolute tolerances for cg solve. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="401" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1a5a15395def2e8b4945a98a86f075f452" prot="protected" static="yes" mutable="no">
        <type>Real</type>
        <definition>Real amrex::MCMultiGrid::def_atol_b</definition>
        <argsstring></argsstring>
        <name>def_atol_b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="401" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1a2a7e2bdc2cfab721a94b4ea3dc4fc837" prot="protected" static="yes" mutable="no">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::def_numLevelsMAX</definition>
        <argsstring></argsstring>
        <name>def_numLevelsMAX</name>
        <briefdescription>
<para>Default maximum number of mg levels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="404" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="404" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1a32a4d9a75c4ac61f5da2ba783825262a" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::verbose</definition>
        <argsstring></argsstring>
        <name>verbose</name>
        <briefdescription>
<para>verbosity </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="407" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1a7e3478703f81ebbc9ed2c92a9639c602" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::numlevels</definition>
        <argsstring></argsstring>
        <name>numlevels</name>
        <briefdescription>
<para>Number of MG levels. numlevels-1 is coarsest grid allowed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="410" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1aba047940a613e5e6b88d570169bfa798" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::numcomps</definition>
        <argsstring></argsstring>
        <name>numcomps</name>
        <briefdescription>
<para>Number of components in solution. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="413" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1a3f946b9c99d55a5ed3aeb0cd4f9203e6" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::maxiter</definition>
        <argsstring></argsstring>
        <name>maxiter</name>
        <briefdescription>
<para>Current maximum number of allowed iterations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="416" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1af2a7d49b5a75a81e8b50e4d13932d830" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::numiter</definition>
        <argsstring></argsstring>
        <name>numiter</name>
        <briefdescription>
<para>Current number of iterations to take. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="419" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1a637472a40464962f03243669a9c14873" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::nu_0</definition>
        <argsstring></argsstring>
        <name>nu_0</name>
        <briefdescription>
<para>Current number of level, pre-, post- and bottom smooths. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="422" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1a7ab7adab0f9625e01ddfab309098843a" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::nu_1</definition>
        <argsstring></argsstring>
        <name>nu_1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="422" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1af2efde65521f0b93bf761cc3794505a8" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::nu_2</definition>
        <argsstring></argsstring>
        <name>nu_2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="422" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1a2a5ed108179c69610641e0a888468c07" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::nu_f</definition>
        <argsstring></argsstring>
        <name>nu_f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="422" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1a18934efed1c059a98d9dc168a34f1d4f" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::nu_b</definition>
        <argsstring></argsstring>
        <name>nu_b</name>
        <briefdescription>
<para>Current number of post-cg relax passes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="425" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1a1004cbb8ee4c21c77a2b39a3a0589ca5" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::usecg</definition>
        <argsstring></argsstring>
        <name>usecg</name>
        <briefdescription>
<para>Current flag, whether to use CG at bottom of MG cycle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="428" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1aede7bcce9b3bf7b817cad39acba08689" prot="protected" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::MCMultiGrid::rtol_b</definition>
        <argsstring></argsstring>
        <name>rtol_b</name>
        <briefdescription>
<para>Relative, absolute tolerances. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="431" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1a08cc4bc4061439c49157cb1e09f88b1c" prot="protected" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::MCMultiGrid::atol_b</definition>
        <argsstring></argsstring>
        <name>atol_b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="431" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1a263945b4d04fe1c2d1a37e3db2f9d378" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::numLevelsMAX</definition>
        <argsstring></argsstring>
        <name>numLevelsMAX</name>
        <briefdescription>
<para>Maximum number of mg levels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="434" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1a2e8cc4671e3f0c31c5562ffadd69b95a" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *</type>
        <definition>MultiFab* amrex::MCMultiGrid::initialsolution</definition>
        <argsstring></argsstring>
        <name>initialsolution</name>
        <briefdescription>
<para>Internal temp data to store initial guess of solution. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="437" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1a9560d41448c4b3f3fcacddf3ac79790b" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> * &gt;</type>
        <definition>Vector&lt; MultiFab* &gt; amrex::MCMultiGrid::res</definition>
        <argsstring></argsstring>
        <name>res</name>
        <briefdescription>
<para>Internal temp data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="440" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1aeafb609cea4c36b26bb6a031df8111e4" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> * &gt;</type>
        <definition>Vector&lt; MultiFab* &gt; amrex::MCMultiGrid::rhs</definition>
        <argsstring></argsstring>
        <name>rhs</name>
        <briefdescription>
<para>Internal temp data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="443" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1a4f414b6a014ed477cd2a3203d4c807f6" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> * &gt;</type>
        <definition>Vector&lt; MultiFab* &gt; amrex::MCMultiGrid::cor</definition>
        <argsstring></argsstring>
        <name>cor</name>
        <briefdescription>
<para>Internal temp data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="446" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MCMultiGrid_1a4429ca05cf021bd7ebace5ce69b037d1" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MCLinOp" kindref="compound">MCLinOp</ref> &amp;</type>
        <definition>MCLinOp&amp; amrex::MCMultiGrid::Lp</definition>
        <argsstring></argsstring>
        <name>Lp</name>
        <briefdescription>
<para>Internal reference to linear operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="449" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="449" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a60098bb0f80fbc4656191a495ada015f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MCMultiGrid::MCMultiGrid</definition>
        <argsstring>(MCLinOp &amp;_lp)</argsstring>
        <name>MCMultiGrid</name>
        <param>
          <type><ref refid="classamrex_1_1MCLinOp" kindref="compound">MCLinOp</ref> &amp;</type>
          <declname>_lp</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>&amp;_lp</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="89" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.cpp" bodystart="126" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a63f2a6108ea62706ecea3548cdfacea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>amrex::MCMultiGrid::~MCMultiGrid</definition>
        <argsstring>()</argsstring>
        <name>~MCMultiGrid</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="94" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.cpp" bodystart="186" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a4e816bc394f4f94915656d1f5f2a6321" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void amrex::MCMultiGrid::solve</definition>
        <argsstring>(MultiFab &amp;solution, const MultiFab &amp;_rhs, Real eps_rel=-1.0, Real eps_abs=-1.0, MCBC_Mode bc_mode=MCInhomogeneous_BC)</argsstring>
        <name>solve</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>solution</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>_rhs</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>eps_rel</declname>
          <defval>-1.0</defval>
        </param>
        <param>
          <type>Real</type>
          <declname>eps_abs</declname>
          <defval>-1.0</defval>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7ae" kindref="member">MCBC_Mode</ref></type>
          <declname>bc_mode</declname>
          <defval><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7aea372bb314280acee54f7e683ec43bbc19" kindref="member">MCInhomogeneous_BC</ref></defval>
        </param>
        <briefdescription>
<para>Solve the system to relative err eps_rel, absolute err eps_abs. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>solution</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_rhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eps_rel</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eps_abs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bc_mode</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="105" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.cpp" bodystart="252" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a971fa7009a4bc129fe925a60235413a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1MCLinOp" kindref="compound">MCLinOp</ref> &amp;</type>
        <definition>MCLinOp &amp; amrex::MCMultiGrid::linOp</definition>
        <argsstring>()</argsstring>
        <name>linOp</name>
        <briefdescription>
<para>Return the linear operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="114" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="463" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1adb6683a9629e17c68f88c3658c4a77f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MCMultiGrid::setMaxIter</definition>
        <argsstring>(int _maxiter)</argsstring>
        <name>setMaxIter</name>
        <param>
          <type>int</type>
          <declname>_maxiter</declname>
        </param>
        <briefdescription>
<para>Set the maximum permitted multigrid iterations. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_maxiter</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="121" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="470" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a7fd61981e6042230bc0dfa76fd53f881" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::getMaxIter</definition>
        <argsstring>() const </argsstring>
        <name>getMaxIter</name>
        <briefdescription>
<para>Return the maximum permitted multigrid iterations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="126" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="477" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a77afa98790db3a886a2be8dba62e61ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MCMultiGrid::setNumIter</definition>
        <argsstring>(int _numiter)</argsstring>
        <name>setNumIter</name>
        <param>
          <type>int</type>
          <declname>_numiter</declname>
        </param>
        <briefdescription>
<para>Set the number of multigrid iterations to perform. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_numiter</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="133" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="484" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a24f7dbbb373d7eda8cf19d42263935a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::getNumIter</definition>
        <argsstring>() const </argsstring>
        <name>getNumIter</name>
        <briefdescription>
<para>Return the number of multigrid iterations. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="138" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="491" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a50168c8c5c4c9da16cdcdc22b53c24c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MCMultiGrid::setUseCG</definition>
        <argsstring>(int _usecg)</argsstring>
        <name>setUseCG</name>
        <param>
          <type>int</type>
          <declname>_usecg</declname>
        </param>
        <briefdescription>
<para>Set the flag for whether to use <ref refid="classamrex_1_1CGSolver" kindref="compound">CGSolver</ref> at coarsest level. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_usecg</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="145" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="498" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a5205b3cc77e5b270d3c51681436e2c1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::getUseCG</definition>
        <argsstring>() const </argsstring>
        <name>getUseCG</name>
        <briefdescription>
<para>Return the flag for whether to use <ref refid="classamrex_1_1CGSolver" kindref="compound">CGSolver</ref> at coarsest level. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="150" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="505" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a13220fc140395dfa49642b026b082c81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::getNumLevels</definition>
        <argsstring>(int _numlevels)</argsstring>
        <name>getNumLevels</name>
        <param>
          <type>int</type>
          <declname>_numlevels</declname>
        </param>
        <briefdescription>
<para>Set/return the number of multigrid levels. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_numlevels</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="157" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.cpp" bodystart="392" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a22724fbe189ff34c1d9023f7eb5ced3c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::getNumLevels</definition>
        <argsstring>() const </argsstring>
        <name>getNumLevels</name>
        <briefdescription>
<para>Return the number of multigrid levels. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="162" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="512" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a73425124b488c1d8314343574b505512" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::getNumComponents</definition>
        <argsstring>() const </argsstring>
        <name>getNumComponents</name>
        <briefdescription>
<para>Return the number of components in solution. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="167" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="519" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a1d4cc58deacd9279fb677b9f3ae1d71c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MCMultiGrid::setVerbose</definition>
        <argsstring>(int _verbose)</argsstring>
        <name>setVerbose</name>
        <param>
          <type>int</type>
          <declname>_verbose</declname>
        </param>
        <briefdescription>
<para>Set the verbosity value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_verbose</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="174" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="526" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a5a134e462cfd0d11777ca7114c405337" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::getVerbose</definition>
        <argsstring>()</argsstring>
        <name>getVerbose</name>
        <briefdescription>
<para>Return the verbosity value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="179" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="533" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a6f347e551a3fe0381f3d75bbd4ec4d4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MCMultiGrid::set_preSmooth</definition>
        <argsstring>(int pre_smooth)</argsstring>
        <name>set_preSmooth</name>
        <param>
          <type>int</type>
          <declname>pre_smooth</declname>
        </param>
        <briefdescription>
<para>Set the number of passes of the pre-smoother. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pre_smooth</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="186" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="540" bodyend="543"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a0a80acdda10a6e3ac2375c23ad436401" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MCMultiGrid::set_postSmooth</definition>
        <argsstring>(int post_smooth)</argsstring>
        <name>set_postSmooth</name>
        <param>
          <type>int</type>
          <declname>post_smooth</declname>
        </param>
        <briefdescription>
<para>Set the number of passes of the post-smoother. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>post_smooth</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="193" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="547" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a0e87141cf34254336433563251694839" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MCMultiGrid::set_cntRelax</definition>
        <argsstring>(int cnt_relax)</argsstring>
        <name>set_cntRelax</name>
        <param>
          <type>int</type>
          <declname>cnt_relax</declname>
        </param>
        <briefdescription>
<para>Set the number of passes of the coarse-grid smoother/mg iteration. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cnt_relax</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="200" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="554" bodyend="557"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a412124f97318bf90e100eb9422f5ec23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MCMultiGrid::set_finalSmooth</definition>
        <argsstring>(int final_smooth)</argsstring>
        <name>set_finalSmooth</name>
        <param>
          <type>int</type>
          <declname>final_smooth</declname>
        </param>
        <briefdescription>
<para>Set the number of passes of the bottom mg relaxer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>final_smooth</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="207" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="561" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1ab2cfe79f42d512197e8f28bea30a28d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::preSmooth</definition>
        <argsstring>() const </argsstring>
        <name>preSmooth</name>
        <briefdescription>
<para>Return the number of pre-smooth iterations at the level. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="212" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="568" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1ae800ccb6623bc22f753a7abe4d20b12a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::postSmooth</definition>
        <argsstring>() const </argsstring>
        <name>postSmooth</name>
        <briefdescription>
<para>Return the number of post-smooth iterations at the level. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="217" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="575" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a69ea56675d78fb6d1aa9a4172283a9b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::cntRelax</definition>
        <argsstring>() const </argsstring>
        <name>cntRelax</name>
        <briefdescription>
<para>Return the number of level relaxations (not implemented). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="222" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="582" bodyend="585"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a81b09bdd26d62a23f217b2dd159d5ddc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::finalSmooth</definition>
        <argsstring>() const </argsstring>
        <name>finalSmooth</name>
        <briefdescription>
<para>Return the number of smoothing passes at bottom of MG (if no cg). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="227" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="589" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a7461442cbef6c4e5642e96dc8c11f48b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MCMultiGrid::set_atol_b</definition>
        <argsstring>(Real atol)</argsstring>
        <name>set_atol_b</name>
        <param>
          <type>Real</type>
          <declname>atol</declname>
        </param>
        <briefdescription>
<para>Set the maximum permitted absolute tolerance (&lt;0 bypasses test). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>atol</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="234" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="596" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a1e145707a4a53319b285796186c635ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Real</type>
        <definition>Real amrex::MCMultiGrid::get_atol_b</definition>
        <argsstring>() const </argsstring>
        <name>get_atol_b</name>
        <briefdescription>
<para>Get the maximum permitted absolute tolerance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="239" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="603" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a1b3b0719b8573734afde827bb6a44ff5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MCMultiGrid::set_rtol_b</definition>
        <argsstring>(Real rtol)</argsstring>
        <name>set_rtol_b</name>
        <param>
          <type>Real</type>
          <declname>rtol</declname>
        </param>
        <briefdescription>
<para>Set the maximum permitted relative tolerance (&lt;0 bypasses test). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rtol</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="246" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="610" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a7130cb2dc4d44675d3d4fa809ad628a0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Real</type>
        <definition>Real amrex::MCMultiGrid::get_rtol_b</definition>
        <argsstring>() const </argsstring>
        <name>get_rtol_b</name>
        <briefdescription>
<para>Get the maximum permitted relative tolerance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="251" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="617" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1ae77551a5662e1b81e9ee786e999c164f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MCMultiGrid::set_nu_b</definition>
        <argsstring>(int _nu_b)</argsstring>
        <name>set_nu_b</name>
        <param>
          <type>int</type>
          <declname>_nu_b</declname>
        </param>
        <briefdescription>
<para>Set the number of post-cg relax passes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_nu_b</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="258" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="624" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a993578015393d29131d6e3ffa16a5c8a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::get_nu_b</definition>
        <argsstring>() const </argsstring>
        <name>get_nu_b</name>
        <briefdescription>
<para>Set the number of post-cg relax passes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="263" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="631" bodyend="634"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a51e5ca229e6b162c6f3dcc843cdbf9cb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::solve_</definition>
        <argsstring>(MultiFab &amp;_sol, Real _eps_rel, Real _eps_abs, MCBC_Mode bc_mode, int level)</argsstring>
        <name>solve_</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>_sol</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>_eps_rel</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>_eps_abs</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7ae" kindref="member">MCBC_Mode</ref></type>
          <declname>bc_mode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Solve the linear system to relative and absolute tolerance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_sol</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_eps_rel</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_eps_abs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bc_mode</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="276" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.cpp" bodystart="272" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1ac56bc061ee74ae09390d21dd40a2774c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MCMultiGrid::residualCorrectionForm</definition>
        <argsstring>(MultiFab &amp;newrhs, const MultiFab &amp;oldrhs, MultiFab &amp;initialsolution, const MultiFab &amp;inisol, MCBC_Mode bc_mode, int level)</argsstring>
        <name>residualCorrectionForm</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>newrhs</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>oldrhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>initialsolution</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>inisol</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7ae" kindref="member">MCBC_Mode</ref></type>
          <declname>bc_mode</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Put the system in r-c form. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newrhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldrhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialsolution</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inisol</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bc_mode</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="292" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.cpp" bodystart="235" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1adc8c2d0bfe19ea24cdbfccec5d3a8b65" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MCMultiGrid::prepareForLevel</definition>
        <argsstring>(int level)</argsstring>
        <name>prepareForLevel</name>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Make space, set switches for new solution level. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="304" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.cpp" bodystart="208" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a9fbbe2304aa4c92756ce2add897df951" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MCMultiGrid::numLevels</definition>
        <argsstring>() const </argsstring>
        <name>numLevels</name>
        <briefdescription>
<para>Compute the number of multigrid levels, assuming ratio=2. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="309" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.cpp" bodystart="401" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a81489135d1f27df4d6064c63cb5999ed" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>Real</type>
        <definition>Real amrex::MCMultiGrid::errorEstimate</definition>
        <argsstring>(int level, MCBC_Mode bc_mode, bool local=false)</argsstring>
        <name>errorEstimate</name>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7ae" kindref="member">MCBC_Mode</ref></type>
          <declname>bc_mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>local</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Return scalar estimate of error. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bc_mode</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>local</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="318" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.cpp" bodystart="199" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1afffd34c6fffe43df53b427fa60f0bf5c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MCMultiGrid::average</definition>
        <argsstring>(MultiFab &amp;c, const MultiFab &amp;f)</argsstring>
        <name>average</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Transfer <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> from fine to coarse level. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="328" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.cpp" bodystart="506" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1ab38c4ee6d30c1e348bce944365234426" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MCMultiGrid::interpolate</definition>
        <argsstring>(MultiFab &amp;f, const MultiFab &amp;c)</argsstring>
        <name>interpolate</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Transfer <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> from coarse to fine level. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="337" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.cpp" bodystart="529" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1ae5e797b340bee23c04cff9b1a6b0873f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MCMultiGrid::relax</definition>
        <argsstring>(MultiFab &amp;solL, MultiFab &amp;rhsL, int level, Real eps_rel, Real eps_abs, MCBC_Mode bc_mode)</argsstring>
        <name>relax</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>solL</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>rhsL</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>eps_rel</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>eps_abs</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7ae" kindref="member">MCBC_Mode</ref></type>
          <declname>bc_mode</declname>
        </param>
        <briefdescription>
<para>Perform a MG V-cycle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>solL</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhsL</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eps_rel</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eps_abs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bc_mode</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="350" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.cpp" bodystart="448" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a23dc417720283621c337ee067b68125b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void amrex::MCMultiGrid::coarsestSmooth</definition>
        <argsstring>(MultiFab &amp;solL, MultiFab &amp;rhsL, int level, Real eps_rel, Real eps_abs, MCBC_Mode bc_mode)</argsstring>
        <name>coarsestSmooth</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>solL</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>rhsL</declname>
        </param>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>eps_rel</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>eps_abs</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ac6a345f3c5f30b5d97087d43bbf1c7ae" kindref="member">MCBC_Mode</ref></type>
          <declname>bc_mode</declname>
        </param>
        <briefdescription>
<para>Perform relaxation at bottom of V-cycle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>solL</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhsL</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eps_rel</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eps_abs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bc_mode</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="367" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.cpp" bodystart="481" bodyend="503"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1af75aa17e64cba19f86120d0c1450c7a5" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MCMultiGrid::Initialize</definition>
        <argsstring>()</argsstring>
        <name>Initialize</name>
        <briefdescription>
<para>Set flags, etc. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="381" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.cpp" bodystart="39" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1af1274728ad6d690d266227214a347e93" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MCMultiGrid::Finalize</definition>
        <argsstring>()</argsstring>
        <name>Finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="383" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.cpp" bodystart="94" bodyend="97"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a7ba83b3751a2bc315319cf1fbba14fb0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MCMultiGrid::MCMultiGrid</definition>
        <argsstring>(const MCMultiGrid &amp;)</argsstring>
        <name>MCMultiGrid</name>
        <param>
          <type>const <ref refid="classamrex_1_1MCMultiGrid" kindref="compound">MCMultiGrid</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Disallow copy constructor, assignment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="457" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MCMultiGrid_1a311c47ccb5df10c68c86fa9c2aac46e5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MCMultiGrid" kindref="compound">MCMultiGrid</ref> &amp;</type>
        <definition>MCMultiGrid&amp; amrex::MCMultiGrid::operator=</definition>
        <argsstring>(const MCMultiGrid &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1MCMultiGrid" kindref="compound">MCMultiGrid</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="458" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>/brief A <ref refid="classamrex_1_1MCMultiGrid" kindref="compound">MCMultiGrid</ref> solves the linear equation, L(phi)=rhs, for a <ref refid="classamrex_1_1MCLinOp" kindref="compound">MCLinOp</ref> L and MultiFabs rhs and phi using a V-type cycle of the <ref refid="classamrex_1_1MCMultiGrid" kindref="compound">MCMultiGrid</ref> algorithm</para><para>A <ref refid="classamrex_1_1MCMultiGrid" kindref="compound">MCMultiGrid</ref> object solves the linear equation, L(phi)=rhs for a <ref refid="classamrex_1_1MCLinOp" kindref="compound">MCLinOp</ref> L, and MultiFabs phi and rhs. A <ref refid="classamrex_1_1MCMultiGrid" kindref="compound">MCMultiGrid</ref> is constructed with a fully initialized 2D or 3D <ref refid="classamrex_1_1MCLinOp" kindref="compound">MCLinOp</ref>, and responds to &quot;solve&quot; requests of various signatures, ultimately performing a recursive &quot;relax&quot; operation over a hierachy of grid levels. The <ref refid="classamrex_1_1MCLinOp" kindref="compound">MCLinOp</ref> therefore must employ &quot;levels&quot; of application, as well as be able to provide an implementation of the Gauss-Seidel red-black iterations on all levels. At the coarsest level, the user has the option of applying the GSRB smoother a set number of iterations. Optionally, a Conjugate Gradient solver, <ref refid="classamrex_1_1CGSolver" kindref="compound">CGSolver</ref>, may be used to solve the coarsest system.</para><para>If the user chooses to use the conjugate gradient bottom solve, the absolute and relative tolerances of this solve are independently settable distinct from the tolerances of the mg solve. However, it rarely makes sense to stop cg after a fixed number of iterations, so that capability was omited, wrt the mg options. As a final option, the user may choose to follow the cg solve with a fixed number of relaxation passes (the relaxer within the class <ref refid="classamrex_1_1MCLinOp" kindref="compound">MCLinOp</ref>).</para><para>The solve request (implicitly) includes a flag as to whether the system is to be solved with homogeneous boundary conditions or no. If homogeneous BCs are requested, all boundary information within the <ref refid="classamrex_1_1MCLinOp" kindref="compound">MCLinOp</ref> is used, except that the values of boundary FabSets are zeroed.</para><para>Implementation Note: This algorithm implements solution of equations in a way that requires linearity of the operator. In &quot;residual correction form&quot;, equations are solved only for the &quot;correction&quot; to the initial guess that is required to solve the desired system. In particular, boundary conditions are assumed to be satisfied after a single application of the linear operator (therefore, the correction is homogeneous at the boundary). As a result, after putting the problem in residual correction form, the entire system MG hierarchy has homigeneous boundary conditions (thus avoiding the need to interpolate BC values, and simplifying the logic of the coarse-fine transfer operations). This solver therefore cannot incorporate fully nonlinear systems.</para><para>Default settings: There are a number of options in the multigrid algorithm details. In addition to changing the actual smoothers employed, the user has access to the following parameters (defaults shown in parentheses):</para><para>nu_1(2) Number of passes of the pre-smoother nu_2(2) Number of passes of the post-smoother nu_0(1) Number of passes of the coarse-grid smoother per cycle nu_f(8) Number of passes of the bottom smoother (if not using the conjugate-gradient bottom solve) maxiter(40) Maximum number of full multigrid cycles allowed to solve the system numiter(-1) Number of full multigrid cycles to perform (should be less than maxiter for fixed number of MG cycles; value is ignored if &lt; 0) verbose(0) Verbosity (1-results, 2-progress) usecg(1) Whether to use the conjugate-gradient solver for the coarsest (bottom) solve of the multigrid hierarchy atol_b(-1.0) Absolute error tolerance (&lt;0 =&gt; ignored) for cg rtol_b(.01) Relative error tolerance (&lt;0 =&gt; ignored) for cg nu_b(0) Number of passes of the bottom smoother taken AFTER} the cg bottom solve (value ignored if &lt;= 0) numLevelsMAX(1024) maximum number of mg levels </para>    </detaileddescription>
    <collaborationgraph>
      <node id="4180">
        <label>std::vector&lt; amrex::Vector&lt; amrex::MultiMask &gt;, std::allocator&lt; amrex::Vector&lt; amrex::MultiMask &gt; &gt; &gt;</label>
      </node>
      <node id="4210">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
      </node>
      <node id="4182">
        <label>std::vector&lt; amrex::BoxArray, std::allocator&lt; amrex::BoxArray &gt; &gt;</label>
      </node>
      <node id="4191">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="4192" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="4195">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="4194">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="4194" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="4177">
        <label>amrex::Vector&lt; amrex::BndryRegister &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4178" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4224">
        <label>amrex::LayoutData&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="4190" relation="public-inheritance">
        </childnode>
        <childnode refid="4225" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="4216">
        <label>Real</label>
      </node>
      <node id="4184">
        <label>std::vector&lt; amrex::Geometry, std::allocator&lt; amrex::Geometry &gt; &gt;</label>
      </node>
      <node id="4211">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4212" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4185">
        <label>amrex::BndryData</label>
        <link refid="classamrex_1_1BndryData"/>
        <childnode refid="4186" relation="public-inheritance">
        </childnode>
        <childnode refid="4214" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="4219" relation="usage">
          <edgelabel>bcloc</edgelabel>
        </childnode>
        <childnode refid="4222" relation="usage">
          <edgelabel>masks</edgelabel>
        </childnode>
        <childnode refid="4224" relation="usage">
          <edgelabel>bcond</edgelabel>
        </childnode>
      </node>
      <node id="4205">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
      </node>
      <node id="4196">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4197" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4192">
        <label>string</label>
      </node>
      <node id="4213">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="4194" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="4207">
        <label>std::vector&lt; char *, std::allocator&lt; char * &gt; &gt;</label>
      </node>
      <node id="4223">
        <label>std::vector&lt; amrex::MultiMask, std::allocator&lt; amrex::MultiMask &gt; &gt;</label>
      </node>
      <node id="4181">
        <label>amrex::Vector&lt; amrex::BoxArray &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4182" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4206">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4207" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4226">
        <label>std::vector&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt;, std::allocator&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="4208">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="4222">
        <label>amrex::Vector&lt; amrex::MultiMask &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4223" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4212">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
      </node>
      <node id="4197">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="4178">
        <label>std::vector&lt; amrex::BndryRegister, std::allocator&lt; amrex::BndryRegister &gt; &gt;</label>
      </node>
      <node id="4202">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="4194" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="4203" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="4174">
        <label>amrex::MCLinOp</label>
        <link refid="classamrex_1_1MCLinOp"/>
        <childnode refid="4175" relation="usage">
          <edgelabel>h</edgelabel>
        </childnode>
        <childnode refid="4177" relation="usage">
          <edgelabel>undrrelxr</edgelabel>
          <edgelabel>tangderiv</edgelabel>
        </childnode>
        <childnode refid="4179" relation="usage">
          <edgelabel>maskvals</edgelabel>
        </childnode>
        <childnode refid="4181" relation="usage">
          <edgelabel>gbox</edgelabel>
        </childnode>
        <childnode refid="4183" relation="usage">
          <edgelabel>geomarray</edgelabel>
        </childnode>
        <childnode refid="4185" relation="usage">
          <edgelabel>bgb</edgelabel>
        </childnode>
      </node>
      <node id="4217">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="4216" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="4225">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4226" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4218">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="4194" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="4203" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="4200">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="4201" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="4209">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4210" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4173">
        <label>std::vector&lt; amrex::MultiFab *, std::allocator&lt; amrex::MultiFab * &gt; &gt;</label>
      </node>
      <node id="4215">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="4216" relation="usage">
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
          <edgelabel>dx</edgelabel>
        </childnode>
      </node>
      <node id="4203">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="4201">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="4196" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="4187">
        <label>amrex::FabSet</label>
        <link refid="classamrex_1_1FabSet"/>
        <childnode refid="4188" relation="usage">
          <edgelabel>m_mf</edgelabel>
        </childnode>
      </node>
      <node id="4204">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4205" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4193">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
      </node>
      <node id="4198">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="4199" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="4200" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="4188">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="4189" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4186">
        <label>amrex::BndryRegister</label>
        <link refid="classamrex_1_1BndryRegister"/>
        <childnode refid="4187" relation="usage">
          <edgelabel>bndry</edgelabel>
        </childnode>
        <childnode refid="4202" relation="usage">
          <edgelabel>grids</edgelabel>
        </childnode>
      </node>
      <node id="4214">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="4215" relation="public-inheritance">
        </childnode>
        <childnode refid="4217" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="4218" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="4221">
        <label>std::vector&lt; RealTuple, std::allocator&lt; RealTuple &gt; &gt;</label>
      </node>
      <node id="4219">
        <label>amrex::LayoutData&lt; RealTuple &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="4190" relation="public-inheritance">
        </childnode>
        <childnode refid="4220" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="4220">
        <label>amrex::Vector&lt; RealTuple &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4221" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4183">
        <label>amrex::Vector&lt; amrex::Geometry &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4184" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4189">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="4190" relation="public-inheritance">
        </childnode>
        <childnode refid="4194" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="4196" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="4204" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="4206" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="4208" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="4209" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="4211" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="4213" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="4199">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
      </node>
      <node id="4172">
        <label>amrex::Vector&lt; amrex::MultiFab * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4173" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4190">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="4191" relation="usage">
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
        </childnode>
        <childnode refid="4193" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="4194" relation="usage">
          <edgelabel>n_grow</edgelabel>
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>mfghostiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="4195" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="4196" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="4198" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="4202" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
      </node>
      <node id="4176">
        <label>std::vector&lt; Array&lt; Real, BL_SPACEDIM &gt;, std::allocator&lt; Array&lt; Real, BL_SPACEDIM &gt; &gt; &gt;</label>
      </node>
      <node id="4179">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::MultiMask &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4180" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4171">
        <label>amrex::MCMultiGrid</label>
        <link refid="classamrex_1_1MCMultiGrid"/>
        <childnode refid="4172" relation="usage">
          <edgelabel>cor</edgelabel>
          <edgelabel>rhs</edgelabel>
          <edgelabel>res</edgelabel>
        </childnode>
        <childnode refid="4174" relation="usage">
          <edgelabel>Lp</edgelabel>
        </childnode>
        <childnode refid="4188" relation="usage">
          <edgelabel>initialsolution</edgelabel>
        </childnode>
        <childnode refid="4216" relation="usage">
          <edgelabel>atol_b</edgelabel>
          <edgelabel>rtol_b</edgelabel>
          <edgelabel>def_atol_b</edgelabel>
          <edgelabel>def_rtol_b</edgelabel>
        </childnode>
      </node>
      <node id="4175">
        <label>amrex::Vector&lt; Array&lt; Real, BL_SPACEDIM &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4176" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" line="81" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_TensorMG/AMReX_MCMultiGrid.H" bodystart="80" bodyend="459"/>
    <listofallmembers>
      <member refid="classamrex_1_1MCMultiGrid_1a08cc4bc4061439c49157cb1e09f88b1c" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>atol_b</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1afffd34c6fffe43df53b427fa60f0bf5c" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>average</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a69ea56675d78fb6d1aa9a4172283a9b9" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>cntRelax</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a23dc417720283621c337ee067b68125b" prot="protected" virt="virtual"><scope>amrex::MCMultiGrid</scope><name>coarsestSmooth</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a4f414b6a014ed477cd2a3203d4c807f6" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>cor</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a5a15395def2e8b4945a98a86f075f452" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>def_atol_b</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1aecbbb892e0206b2655a6581c8506d653" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>def_maxiter</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1aee55b67c8974572a540084bddc52157c" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>def_nu_0</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a9153671c5bf8b17dc9eb0c566321c1ed" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>def_nu_1</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a815dd069cc9480d3c4ed143721b2b5a6" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>def_nu_2</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1afb3acec37b9c55ce0401d2b28792af0d" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>def_nu_b</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1acc73cfec1af465a8e6cffb09b3c3e8ec" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>def_nu_f</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1aba2608b10d91e179377e0d8df52547d7" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>def_numiter</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a2a7e2bdc2cfab721a94b4ea3dc4fc837" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>def_numLevelsMAX</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a381e86ed8c54c5536f4c6f2b7d789d26" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>def_rtol_b</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a2011d3db3f99fa8d2e6251bfae111803" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>def_usecg</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1ab7e7b4548e5c2bc0a1d7e5c100b00f73" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>def_verbose</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a81489135d1f27df4d6064c63cb5999ed" prot="protected" virt="virtual"><scope>amrex::MCMultiGrid</scope><name>errorEstimate</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1af1274728ad6d690d266227214a347e93" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>Finalize</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a81b09bdd26d62a23f217b2dd159d5ddc" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>finalSmooth</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a1e145707a4a53319b285796186c635ec" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>get_atol_b</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a993578015393d29131d6e3ffa16a5c8a" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>get_nu_b</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a7130cb2dc4d44675d3d4fa809ad628a0" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>get_rtol_b</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a7fd61981e6042230bc0dfa76fd53f881" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>getMaxIter</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a73425124b488c1d8314343574b505512" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>getNumComponents</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a24f7dbbb373d7eda8cf19d42263935a2" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>getNumIter</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a13220fc140395dfa49642b026b082c81" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>getNumLevels</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a22724fbe189ff34c1d9023f7eb5ced3c" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>getNumLevels</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a5205b3cc77e5b270d3c51681436e2c1c" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>getUseCG</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a5a134e462cfd0d11777ca7114c405337" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>getVerbose</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1af75aa17e64cba19f86120d0c1450c7a5" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a2e8cc4671e3f0c31c5562ffadd69b95a" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>initialsolution</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1ab38c4ee6d30c1e348bce944365234426" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>interpolate</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a971fa7009a4bc129fe925a60235413a2" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>linOp</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a4429ca05cf021bd7ebace5ce69b037d1" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>Lp</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a3f946b9c99d55a5ed3aeb0cd4f9203e6" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>maxiter</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a60098bb0f80fbc4656191a495ada015f" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>MCMultiGrid</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a7ba83b3751a2bc315319cf1fbba14fb0" prot="private" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>MCMultiGrid</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a637472a40464962f03243669a9c14873" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>nu_0</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a7ab7adab0f9625e01ddfab309098843a" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>nu_1</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1af2efde65521f0b93bf761cc3794505a8" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>nu_2</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a18934efed1c059a98d9dc168a34f1d4f" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>nu_b</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a2a5ed108179c69610641e0a888468c07" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>nu_f</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1aba047940a613e5e6b88d570169bfa798" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>numcomps</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1af2a7d49b5a75a81e8b50e4d13932d830" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>numiter</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a7e3478703f81ebbc9ed2c92a9639c602" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>numlevels</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a9fbbe2304aa4c92756ce2add897df951" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>numLevels</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a263945b4d04fe1c2d1a37e3db2f9d378" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>numLevelsMAX</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a311c47ccb5df10c68c86fa9c2aac46e5" prot="private" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>operator=</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1ae800ccb6623bc22f753a7abe4d20b12a" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>postSmooth</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1adc8c2d0bfe19ea24cdbfccec5d3a8b65" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>prepareForLevel</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1ab2cfe79f42d512197e8f28bea30a28d2" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>preSmooth</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1ae5e797b340bee23c04cff9b1a6b0873f" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>relax</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a9560d41448c4b3f3fcacddf3ac79790b" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>res</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1ac56bc061ee74ae09390d21dd40a2774c" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>residualCorrectionForm</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1aeafb609cea4c36b26bb6a031df8111e4" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>rhs</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1aede7bcce9b3bf7b817cad39acba08689" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>rtol_b</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a7461442cbef6c4e5642e96dc8c11f48b" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>set_atol_b</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a0e87141cf34254336433563251694839" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>set_cntRelax</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a412124f97318bf90e100eb9422f5ec23" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>set_finalSmooth</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1ae77551a5662e1b81e9ee786e999c164f" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>set_nu_b</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a0a80acdda10a6e3ac2375c23ad436401" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>set_postSmooth</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a6f347e551a3fe0381f3d75bbd4ec4d4c" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>set_preSmooth</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a1b3b0719b8573734afde827bb6a44ff5" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>set_rtol_b</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1adb6683a9629e17c68f88c3658c4a77f5" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>setMaxIter</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a77afa98790db3a886a2be8dba62e61ca" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>setNumIter</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a50168c8c5c4c9da16cdcdc22b53c24c1" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>setUseCG</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a1d4cc58deacd9279fb677b9f3ae1d71c" prot="public" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>setVerbose</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a4e816bc394f4f94915656d1f5f2a6321" prot="public" virt="virtual"><scope>amrex::MCMultiGrid</scope><name>solve</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a51e5ca229e6b162c6f3dcc843cdbf9cb" prot="protected" virt="virtual"><scope>amrex::MCMultiGrid</scope><name>solve_</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a1004cbb8ee4c21c77a2b39a3a0589ca5" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>usecg</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a32a4d9a75c4ac61f5da2ba783825262a" prot="protected" virt="non-virtual"><scope>amrex::MCMultiGrid</scope><name>verbose</name></member>
      <member refid="classamrex_1_1MCMultiGrid_1a63f2a6108ea62706ecea3548cdfacea1" prot="public" virt="virtual"><scope>amrex::MCMultiGrid</scope><name>~MCMultiGrid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
