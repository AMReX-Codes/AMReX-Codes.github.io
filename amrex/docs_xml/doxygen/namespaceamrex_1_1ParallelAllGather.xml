<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespaceamrex_1_1ParallelAllGather" kind="namespace" language="C++">
    <compoundname>amrex::ParallelAllGather</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex_1_1ParallelAllGather_1aaeea1cff72579eabfe1778d22f0c5b35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ParallelAllGather::AllGather</definition>
        <argsstring>(const T *v, int cnt, T *vs, MPI_Comm comm)</argsstring>
        <name>AllGather</name>
        <param>
          <type>const T *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cnt</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>vs</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelReduce.H" line="100" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelReduce.H" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelAllGather_1a1ea9d029b1a0e862f2cf90ee0679ab65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ParallelAllGather::AllGather</definition>
        <argsstring>(const T &amp;v, T *vs, MPI_Comm comm)</argsstring>
        <name>AllGather</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>vs</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelReduce.H" line="104" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelReduce.H" bodystart="104" bodyend="106"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelReduce.H" line="98" column="1"/>
  </compounddef>
</doxygen>
