<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classamrex_1_1FillPatchIteratorHelper" kind="class" language="C++" prot="public">
    <compoundname>amrex::FillPatchIteratorHelper</compoundname>
    <includes refid="AMReX__AmrLevel_8H" local="no">AMReX_AmrLevel.H</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classamrex_1_1FillPatchIteratorHelper_1a39d92a4048c0af0c7b1737d5c4e0c334" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class FillPatchIterator</definition>
        <argsstring></argsstring>
        <name>FillPatchIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="508" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="508" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1a5ca572ea2e2269cf1173bb0240f3c544" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref> &amp;</type>
        <definition>AmrLevel&amp; amrex::FillPatchIteratorHelper::m_amrlevel</definition>
        <argsstring></argsstring>
        <name>m_amrlevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="543" column="31" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="543" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1a560bc6de77dae8edbb3c9587eb53f03d" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
        <definition>MultiFab&amp; amrex::FillPatchIteratorHelper::m_leveldata</definition>
        <argsstring></argsstring>
        <name>m_leveldata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="544" column="31" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="544" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1aaf087145837f2626f17e9e93b71ff985" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFabCopyDescriptor" kindref="compound">MultiFabCopyDescriptor</ref></type>
        <definition>MultiFabCopyDescriptor amrex::FillPatchIteratorHelper::m_mfcd</definition>
        <argsstring></argsstring>
        <name>m_mfcd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="545" column="32" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="545" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1adaa101ebcbc10df6a2a761ea3fb3e78b" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1a270e267cbd0e472dd8297d46a9c76854" kindref="member">MultiFabId</ref> &gt; &gt;</type>
        <definition>Vector&lt; Vector&lt;MultiFabId&gt; &gt; amrex::FillPatchIteratorHelper::m_mfid</definition>
        <argsstring></argsstring>
        <name>m_mfid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="546" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="546" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1af0e183d350296703e8deaebb9a88f81a" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Interpolater" kindref="compound">Interpolater</ref> *</type>
        <definition>Interpolater* amrex::FillPatchIteratorHelper::m_map</definition>
        <argsstring></argsstring>
        <name>m_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="547" column="31" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="547" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1ae1577679bfb4ab104a875852a9dbecda" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &gt;</type>
        <definition>std::map&lt;int,Box&gt; amrex::FillPatchIteratorHelper::m_ba</definition>
        <argsstring></argsstring>
        <name>m_ba</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="548" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="548" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1ac669cda0914a26ea86c2c118e10791dc" prot="private" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::FillPatchIteratorHelper::m_time</definition>
        <argsstring></argsstring>
        <name>m_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="549" column="32" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="549" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1a86e3e6118853e3c7624e46167f7766f7" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FillPatchIteratorHelper::m_growsize</definition>
        <argsstring></argsstring>
        <name>m_growsize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="550" column="32" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="550" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1aa73689929eae42431f0f210d8bb28fee" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FillPatchIteratorHelper::m_index</definition>
        <argsstring></argsstring>
        <name>m_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="551" column="32" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="551" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1a77d378e6f4445b1b52d50e81d97c85fc" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FillPatchIteratorHelper::m_scomp</definition>
        <argsstring></argsstring>
        <name>m_scomp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="552" column="32" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="552" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1ac4b64e926d1d6763788ee539be3f5d3e" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FillPatchIteratorHelper::m_ncomp</definition>
        <argsstring></argsstring>
        <name>m_ncomp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="553" column="32" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="553" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1a629f8512e45e8f0109a740bfcb7ae412" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::FillPatchIteratorHelper::m_FixUpCorners</definition>
        <argsstring></argsstring>
        <name>m_FixUpCorners</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="554" column="32" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="554" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1a6c671b8216fcac05344ff477ff2eae56" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &gt; &gt; &gt;</type>
        <definition>std::map&lt; int,Vector&lt; Vector&lt;Box&gt; &gt; &gt; amrex::FillPatchIteratorHelper::m_fbox</definition>
        <argsstring></argsstring>
        <name>m_fbox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="556" column="29" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="556" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1a1ed0eb57ec7521b07ea2918df59e5bbd" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &gt; &gt; &gt;</type>
        <definition>std::map&lt; int,Vector&lt; Vector&lt;Box&gt; &gt; &gt; amrex::FillPatchIteratorHelper::m_cbox</definition>
        <argsstring></argsstring>
        <name>m_cbox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="557" column="29" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="557" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1a2df3ae174e52a21bb158cde96f9498a4" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1FillBoxId" kindref="compound">FillBoxId</ref> &gt; &gt; &gt; &gt;</type>
        <definition>std::map&lt; int,Vector&lt; Vector&lt; Vector&lt;FillBoxId&gt; &gt; &gt; &gt; amrex::FillPatchIteratorHelper::m_fbid</definition>
        <argsstring></argsstring>
        <name>m_fbid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="558" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="558" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1FillPatchIteratorHelper_1a10439c4fa30c39a2f12ba939498ab887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FillPatchIteratorHelper::FillPatchIteratorHelper</definition>
        <argsstring>(AmrLevel &amp;amrlevel, MultiFab &amp;leveldata)</argsstring>
        <name>FillPatchIteratorHelper</name>
        <param>
          <type><ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref> &amp;</type>
          <declname>amrlevel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>leveldata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="510" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp" bodystart="658" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIteratorHelper_1a6fd71c4a217879fa148edeec6047387a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FillPatchIteratorHelper::FillPatchIteratorHelper</definition>
        <argsstring>(AmrLevel &amp;amrlevel, MultiFab &amp;leveldata, int boxGrow, Real time, int state_indx, int scomp, int ncomp, InterpBase *mapper)</argsstring>
        <name>FillPatchIteratorHelper</name>
        <param>
          <type><ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref> &amp;</type>
          <declname>amrlevel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>leveldata</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>boxGrow</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>state_indx</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1InterpBase" kindref="compound">InterpBase</ref> *</type>
          <declname>mapper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="513" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp" bodystart="677" bodyend="696"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIteratorHelper_1a00a3d1a0dac25563dbf55a563c24a18f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FillPatchIteratorHelper::Initialize</definition>
        <argsstring>(int boxGrow, Real time, int state_indx, int scomp, int ncomp, InterpBase *mapper)</argsstring>
        <name>Initialize</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>boxGrow</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>state_indx</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1InterpBase" kindref="compound">InterpBase</ref> *</type>
          <declname>mapper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="522" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp" bodystart="732" bodyend="979"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIteratorHelper_1ab0e6743c4dbe5632040213a1c6616510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FillPatchIteratorHelper::~FillPatchIteratorHelper</definition>
        <argsstring>()</argsstring>
        <name>~FillPatchIteratorHelper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="529" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp" bodystart="1508" bodyend="1508"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIteratorHelper_1a9cf2d33e663f0311539a96633ff7560d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FillPatchIteratorHelper::fill</definition>
        <argsstring>(FArrayBox &amp;fab, int dcomp, int idx)</argsstring>
        <name>fill</name>
        <param>
          <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
          <declname>fab</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="531" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp" bodystart="1257" bodyend="1506"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1FillPatchIteratorHelper_1ae4075b85a37079586a0717c6223de190" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FillPatchIteratorHelper::FillPatchIteratorHelper</definition>
        <argsstring>()</argsstring>
        <name>FillPatchIteratorHelper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="537" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIteratorHelper_1aae84913534a102443b326a934fb332fc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FillPatchIteratorHelper::FillPatchIteratorHelper</definition>
        <argsstring>(const FillPatchIteratorHelper &amp;rhs)</argsstring>
        <name>FillPatchIteratorHelper</name>
        <param>
          <type>const <ref refid="classamrex_1_1FillPatchIteratorHelper" kindref="compound">FillPatchIteratorHelper</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="538" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIteratorHelper_1a1dea2e7280c98e94f9efd74d445f884e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1FillPatchIteratorHelper" kindref="compound">FillPatchIteratorHelper</ref> &amp;</type>
        <definition>FillPatchIteratorHelper&amp; amrex::FillPatchIteratorHelper::operator=</definition>
        <argsstring>(const FillPatchIteratorHelper &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1FillPatchIteratorHelper" kindref="compound">FillPatchIteratorHelper</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="539" column="29"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="60">
        <label>amrex::BaseFab&lt; Real &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="61" relation="public-inheritance">
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
        <childnode refid="64" relation="usage">
          <edgelabel>dptr</edgelabel>
        </childnode>
      </node>
      <node id="109">
        <label>amrex::LevelBld</label>
        <link refid="classamrex_1_1LevelBld"/>
      </node>
      <node id="69">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="99">
        <label>std::vector&lt; amrex::BoxArray, std::allocator&lt; amrex::BoxArray &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::FillPatchIteratorHelper</label>
        <link refid="classamrex_1_1FillPatchIteratorHelper"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_mfid</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_fbid</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_leveldata</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>m_ba</edgelabel>
        </childnode>
        <childnode refid="78" relation="usage">
          <edgelabel>m_fbox</edgelabel>
          <edgelabel>m_cbox</edgelabel>
        </childnode>
        <childnode refid="81" relation="usage">
          <edgelabel>m_map</edgelabel>
        </childnode>
        <childnode refid="83" relation="usage">
          <edgelabel>m_amrlevel</edgelabel>
        </childnode>
        <childnode refid="130" relation="usage">
          <edgelabel>m_mfcd</edgelabel>
        </childnode>
        <childnode refid="64" relation="usage">
          <edgelabel>m_time</edgelabel>
        </childnode>
      </node>
      <node id="83">
        <label>amrex::AmrLevel</label>
        <link refid="classamrex_1_1AmrLevel"/>
        <childnode refid="84" relation="usage">
          <edgelabel>derive_lst</edgelabel>
        </childnode>
        <childnode refid="90" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
        <childnode refid="116" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="121" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="123" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
        <childnode refid="125" relation="usage">
          <edgelabel>desc_lst</edgelabel>
        </childnode>
        <childnode refid="128" relation="usage">
          <edgelabel>dmap</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>fine_ratio</edgelabel>
          <edgelabel>crse_ratio</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>m_AreaToTag</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>nodal_grids</edgelabel>
          <edgelabel>grids</edgelabel>
          <edgelabel>m_AreaNotToTag</edgelabel>
          <edgelabel>edge_grids</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>amrex::BoxList</label>
        <link refid="classamrex_1_1BoxList"/>
        <childnode refid="32" relation="usage">
          <edgelabel>m_lbox</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::vector&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::FillBoxId &gt; &gt;, std::allocator&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::FillBoxId &gt; &gt; &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="63">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="50">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="35" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="66">
        <label>std::unique_ptr&lt; amrex::FBData&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="67" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>std::vector&lt; amrex::Box, std::allocator&lt; amrex::Box &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="108">
        <label>std::vector&lt; std::unique_ptr&lt; std::fstream &gt;, std::allocator&lt; std::unique_ptr&lt; std::fstream &gt; &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="84">
        <label>amrex::DeriveList</label>
        <link refid="classamrex_1_1DeriveList"/>
        <childnode refid="85" relation="usage">
          <edgelabel>lst</edgelabel>
        </childnode>
      </node>
      <node id="52">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="26" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="82">
        <label>amrex::InterpBase</label>
        <link refid="classamrex_1_1InterpBase"/>
      </node>
      <node id="23">
        <label>K</label>
      </node>
      <node id="51">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="26">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="26" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>T</label>
      </node>
      <node id="106">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::AmrLevel &gt;, std::allocator&lt; std::unique_ptr&lt; amrex::AmrLevel &gt; &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>amrex::FabArrayBase::CommMetaData</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CommMetaData"/>
        <childnode refid="21" relation="usage">
          <edgelabel>m_RcvTags</edgelabel>
          <edgelabel>m_SndTags</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>m_LocTags</edgelabel>
        </childnode>
      </node>
      <node id="89">
        <label>amrex::DeriveRec::StateRange</label>
        <link refid="structamrex_1_1DeriveRec_1_1StateRange"/>
        <childnode refid="89" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="71">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>amrex::FabFactory&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="105">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::AmrLevel &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="106" relation="public-inheritance">
        </childnode>
      </node>
      <node id="64">
        <label>Real</label>
      </node>
      <node id="101">
        <label>std::vector&lt; amrex::Geometry, std::allocator&lt; amrex::Geometry &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="91">
        <label>amrex::AmrCore</label>
        <link refid="classamrex_1_1AmrCore"/>
        <childnode refid="92" relation="public-inheritance">
        </childnode>
      </node>
      <node id="80">
        <label>std::vector&lt; amrex::Vector&lt; amrex::Box &gt;, std::allocator&lt; amrex::Vector&lt; amrex::Box &gt; &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="133">
        <label>std::vector&lt; FabArrayBase::FabComTag &gt;</label>
        <childnode refid="134" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="127">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::StateDescriptor &gt;, std::allocator&lt; std::unique_ptr&lt; amrex::StateDescriptor &gt; &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="56">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="57" relation="public-inheritance">
        </childnode>
      </node>
      <node id="85">
        <label>std::list&lt; amrex::DeriveRec &gt;</label>
        <childnode refid="86" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="75">
        <label>amrex::MultiArray4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
        <childnode refid="76" relation="usage">
          <edgelabel>hp</edgelabel>
          <edgelabel>dp</edgelabel>
        </childnode>
      </node>
      <node id="115">
        <label>std::list&lt; std::string &gt;</label>
        <childnode refid="87" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="61">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="62" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="26" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="119">
        <label>amrex::GpuArray&lt; float, AMREX_SPACEDIM &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="73">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>amrex::MultiArray4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
        <childnode refid="13" relation="usage">
          <edgelabel>hp</edgelabel>
          <edgelabel>dp</edgelabel>
        </childnode>
      </node>
      <node id="76">
        <label>amrex::Array4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1Array4"/>
        <childnode refid="14" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="96">
        <label>amrex::Vector&lt; amrex::DistributionMapping &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="97" relation="public-inheritance">
        </childnode>
      </node>
      <node id="111">
        <label>std::basic_ofstream&lt; char &gt;</label>
        <childnode refid="112" relation="public-inheritance">
        </childnode>
      </node>
      <node id="102">
        <label>std::multimap&lt; std::pair&lt; int, int &gt;, double &gt;</label>
      </node>
      <node id="22">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="23" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="62">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="63" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="39" relation="public-inheritance">
        </childnode>
      </node>
      <node id="53">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="26" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="90">
        <label>amrex::Amr</label>
        <link refid="classamrex_1_1Amr"/>
        <childnode refid="91" relation="public-inheritance">
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>intersect_lox</edgelabel>
          <edgelabel>intersect_loy</edgelabel>
          <edgelabel>intersect_loz</edgelabel>
          <edgelabel>intersect_hix</edgelabel>
          <edgelabel>intersect_hiy</edgelabel>
          <edgelabel>intersect_hiz</edgelabel>
        </childnode>
        <childnode refid="103" relation="usage">
          <edgelabel>dt_min</edgelabel>
          <edgelabel>dt_level</edgelabel>
        </childnode>
        <childnode refid="105" relation="usage">
          <edgelabel>amr_level</edgelabel>
        </childnode>
        <childnode refid="72" relation="usage">
          <edgelabel>datalogname</edgelabel>
        </childnode>
        <childnode refid="107" relation="usage">
          <edgelabel>datalog</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>n_cycle</edgelabel>
          <edgelabel>level_count</edgelabel>
          <edgelabel>regrid_int</edgelabel>
          <edgelabel>level_steps</edgelabel>
        </childnode>
        <childnode refid="109" relation="usage">
          <edgelabel>levelbld</edgelabel>
        </childnode>
        <childnode refid="87" relation="usage">
          <edgelabel>small_plot_file_root</edgelabel>
          <edgelabel>initial_grids_file</edgelabel>
          <edgelabel>check_file_root</edgelabel>
          <edgelabel>regrid_grids_file</edgelabel>
          <edgelabel>subcycling_mode</edgelabel>
          <edgelabel>plot_file_root</edgelabel>
          <edgelabel>restart_chkfile</edgelabel>
          <edgelabel>probin_file</edgelabel>
          <edgelabel>restart_pltfile</edgelabel>
        </childnode>
        <childnode refid="98" relation="usage">
          <edgelabel>regrid_ba</edgelabel>
          <edgelabel>initial_ba</edgelabel>
        </childnode>
        <childnode refid="110" relation="usage">
          <edgelabel>gridlog</edgelabel>
          <edgelabel>runlog</edgelabel>
          <edgelabel>runlog_terse</edgelabel>
        </childnode>
        <childnode refid="115" relation="usage">
          <edgelabel>state_plot_vars</edgelabel>
          <edgelabel>state_small_plot_vars</edgelabel>
          <edgelabel>derive_small_plot_vars</edgelabel>
          <edgelabel>derive_plot_vars</edgelabel>
        </childnode>
        <childnode refid="64" relation="usage">
          <edgelabel>check_per</edgelabel>
          <edgelabel>start_time</edgelabel>
          <edgelabel>small_plot_per</edgelabel>
          <edgelabel>plot_log_per</edgelabel>
          <edgelabel>cumtime</edgelabel>
          <edgelabel>plot_per</edgelabel>
          <edgelabel>small_plot_log_per</edgelabel>
          <edgelabel>loadbalance_max_fac</edgelabel>
        </childnode>
      </node>
      <node id="55">
        <label>std::vector&lt; char *, std::allocator&lt; char * &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="67">
        <label>amrex::FBData&lt; FArrayBox &gt;</label>
        <link refid="structamrex_1_1FBData"/>
        <childnode refid="17" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>recv_data</edgelabel>
          <edgelabel>send_data</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>recv_stat</edgelabel>
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>send_reqs</edgelabel>
          <edgelabel>recv_reqs</edgelabel>
        </childnode>
        <childnode refid="70" relation="usage">
          <edgelabel>fb</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::FabArrayId &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="130">
        <label>amrex::MultiFabCopyDescriptor</label>
        <link refid="classamrex_1_1MultiFabCopyDescriptor"/>
        <childnode refid="131" relation="public-inheritance">
        </childnode>
      </node>
      <node id="104">
        <label>std::vector&lt; Real, std::allocator&lt; Real &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="48">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="78">
        <label>std::map&lt; int, amrex::Vector&lt; amrex::Vector&lt; amrex::Box &gt; &gt; &gt;</label>
        <childnode refid="79" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="26" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
      </node>
      <node id="98">
        <label>amrex::Vector&lt; amrex::BoxArray &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="99" relation="public-inheritance">
        </childnode>
      </node>
      <node id="70">
        <label>amrex::FabArrayBase::FB</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FB"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>m_ngrow</edgelabel>
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>m_period</edgelabel>
        </childnode>
      </node>
      <node id="79">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::Box &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="80" relation="public-inheritance">
        </childnode>
      </node>
      <node id="54">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="55" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="46" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="110">
        <label>std::ofstream</label>
        <childnode refid="111" relation="public-inheritance">
        </childnode>
      </node>
      <node id="49">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="26" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="74">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="81">
        <label>amrex::Interpolater</label>
        <link refid="classamrex_1_1Interpolater"/>
        <childnode refid="82" relation="public-inheritance">
        </childnode>
      </node>
      <node id="86">
        <label>amrex::DeriveRec</label>
        <link refid="classamrex_1_1DeriveRec"/>
        <childnode refid="72" relation="usage">
          <edgelabel>variable_names</edgelabel>
        </childnode>
        <childnode refid="81" relation="usage">
          <edgelabel>mapper</edgelabel>
        </childnode>
        <childnode refid="87" relation="usage">
          <edgelabel>derive_name</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>bx_map</edgelabel>
        </childnode>
        <childnode refid="89" relation="usage">
          <edgelabel>rng</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>der_type</edgelabel>
        </childnode>
      </node>
      <node id="122">
        <label>amrex::FabFactory&lt; amrex::FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="46">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="47" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
      </node>
      <node id="58">
        <label>std::vector&lt; FArrayBox * &gt;</label>
        <childnode refid="59" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>amrex::FabArrayBase::CPC</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CPC"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>m_srcng</edgelabel>
          <edgelabel>m_dstng</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>m_dstbdk</edgelabel>
          <edgelabel>m_srcbdk</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>m_srcba</edgelabel>
          <edgelabel>m_dstba</edgelabel>
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>m_period</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>amrex::Dim3</label>
        <link refid="structamrex_1_1Dim3"/>
      </node>
      <node id="97">
        <label>std::vector&lt; amrex::DistributionMapping, std::allocator&lt; amrex::DistributionMapping &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="88">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="94">
        <label>amrex::Vector&lt; amrex::IntVect &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="95" relation="public-inheritance">
        </childnode>
      </node>
      <node id="57">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="134">
        <label>amrex::FabArrayBase::FabComTag</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabComTag"/>
        <childnode refid="34" relation="usage">
          <edgelabel>box</edgelabel>
        </childnode>
      </node>
      <node id="107">
        <label>amrex::Vector&lt; std::unique_ptr&lt; std::fstream &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="108" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="42" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="123">
        <label>amrex::Vector&lt; amrex::StateData &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="124" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::FillBoxId &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="118">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="64" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>amrex::Array4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1Array4"/>
        <childnode refid="14" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="132">
        <label>std::vector&lt; amrex::FabArray&lt; FArrayBox &gt; * &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="26" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>std::unique_ptr&lt; amrex::PCData&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="16" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
        <childnode refid="29" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="37" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="129">
        <label>std::shared_ptr&lt; amrex::DistributionMapping::Ref &gt;</label>
        <childnode refid="37" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="68">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="69" relation="public-inheritance">
        </childnode>
      </node>
      <node id="124">
        <label>std::vector&lt; amrex::StateData, std::allocator&lt; amrex::StateData &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="117">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="64" relation="usage">
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
          <edgelabel>dx</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="26" relation="usage">
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::map&lt; int, amrex::Vector&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::FillBoxId &gt; &gt; &gt; &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>std::unique_ptr&lt; MapOfCopyComTagContainers &gt;</label>
        <childnode refid="22" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="135">
        <label>std::vector&lt; FCDMap &gt;</label>
      </node>
      <node id="131">
        <label>amrex::FabArrayCopyDescriptor&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArrayCopyDescriptor"/>
        <childnode refid="132" relation="usage">
          <edgelabel>fabArrays</edgelabel>
        </childnode>
        <childnode refid="133" relation="usage">
          <edgelabel>fabComTagList</edgelabel>
        </childnode>
        <childnode refid="135" relation="usage">
          <edgelabel>fabCopyDescList</edgelabel>
        </childnode>
      </node>
      <node id="112">
        <label>std::basic_ostream&lt; Char &gt;</label>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="113">
        <label>std::basic_ios&lt; Char &gt;</label>
        <childnode refid="114" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="126">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::StateDescriptor &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="127" relation="public-inheritance">
        </childnode>
      </node>
      <node id="77">
        <label>std::map&lt; int, amrex::Box &gt;</label>
        <childnode refid="34" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="38" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>m_ownership</edgelabel>
        </childnode>
      </node>
      <node id="93">
        <label>amrex::AmrInfo</label>
        <link refid="structamrex_1_1AmrInfo"/>
        <childnode refid="26" relation="usage">
          <edgelabel>refine_grid_layout_dims</edgelabel>
        </childnode>
        <childnode refid="94" relation="usage">
          <edgelabel>blocking_factor</edgelabel>
          <edgelabel>n_error_buf</edgelabel>
          <edgelabel>max_grid_size</edgelabel>
          <edgelabel>ref_ratio</edgelabel>
        </childnode>
        <childnode refid="64" relation="usage">
          <edgelabel>grid_eff</edgelabel>
        </childnode>
      </node>
      <node id="72">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="73" relation="public-inheritance">
        </childnode>
      </node>
      <node id="65">
        <label>amrex::FABio</label>
        <link refid="classamrex_1_1FABio"/>
      </node>
      <node id="114">
        <label>std::ios_base</label>
      </node>
      <node id="121">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; amrex::FArrayBox &gt; &gt;</label>
        <childnode refid="122" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="125">
        <label>amrex::DescriptorList</label>
        <link refid="classamrex_1_1DescriptorList"/>
        <childnode refid="126" relation="usage">
          <edgelabel>desc</edgelabel>
        </childnode>
      </node>
      <node id="128">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
        <childnode refid="129" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="28" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="95">
        <label>std::vector&lt; amrex::IntVect, std::allocator&lt; amrex::IntVect &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="40">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="103">
        <label>amrex::Vector&lt; Real &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="104" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="11" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="116">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="117" relation="public-inheritance">
        </childnode>
        <childnode refid="118" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="119" relation="usage">
          <edgelabel>roundoff_hi_f</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
        <childnode refid="120" relation="usage">
          <edgelabel>roundoff_hi_d</edgelabel>
        </childnode>
      </node>
      <node id="43">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
        <childnode refid="44" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="120">
        <label>amrex::GpuArray&lt; double, AMREX_SPACEDIM &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="3">
        <label>std::vector&lt; amrex::Vector&lt; amrex::FabArrayId &gt;, std::allocator&lt; amrex::Vector&lt; amrex::FabArrayId &gt; &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="100">
        <label>amrex::Vector&lt; amrex::Geometry &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="101" relation="public-inheritance">
        </childnode>
      </node>
      <node id="59">
        <label>amrex::FArrayBox</label>
        <link refid="classamrex_1_1FArrayBox"/>
        <childnode refid="60" relation="public-inheritance">
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>fabio</edgelabel>
        </childnode>
        <childnode refid="64" relation="usage">
          <edgelabel>initval</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="10" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="58" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="66" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="61" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="71" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
        <childnode refid="72" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="75" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="92">
        <label>amrex::AmrMesh</label>
        <link refid="classamrex_1_1AmrMesh"/>
        <childnode refid="93" relation="protected-inheritance">
        </childnode>
        <childnode refid="96" relation="usage">
          <edgelabel>dmap</edgelabel>
        </childnode>
        <childnode refid="98" relation="usage">
          <edgelabel>grids</edgelabel>
        </childnode>
        <childnode refid="100" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="29" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>amrex::Vector&lt; amrex::Box &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>amrex::PCData&lt; FArrayBox &gt;</label>
        <link refid="structamrex_1_1PCData"/>
        <childnode refid="17" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>cpc</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>recv_data</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>src</edgelabel>
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>send_reqs</edgelabel>
          <edgelabel>recv_reqs</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>std::vector&lt; std::size_t, std::allocator&lt; std::size_t &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>std::vector&lt; int &gt;</label>
      </node>
      <node id="87">
        <label>std::string</label>
        <childnode refid="88" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>std::unique_ptr&lt; CopyComTagsContainer &gt;</label>
        <childnode refid="25" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="505" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="504" bodyend="559"/>
    <listofallmembers>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a9cf2d33e663f0311539a96633ff7560d" prot="public" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>fill</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a39d92a4048c0af0c7b1737d5c4e0c334" prot="public" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>FillPatchIterator</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a10439c4fa30c39a2f12ba939498ab887" prot="public" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>FillPatchIteratorHelper</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a6fd71c4a217879fa148edeec6047387a" prot="public" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>FillPatchIteratorHelper</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1ae4075b85a37079586a0717c6223de190" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>FillPatchIteratorHelper</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1aae84913534a102443b326a934fb332fc" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>FillPatchIteratorHelper</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a00a3d1a0dac25563dbf55a563c24a18f" prot="public" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a5ca572ea2e2269cf1173bb0240f3c544" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_amrlevel</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1ae1577679bfb4ab104a875852a9dbecda" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_ba</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a1ed0eb57ec7521b07ea2918df59e5bbd" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_cbox</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a2df3ae174e52a21bb158cde96f9498a4" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_fbid</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a6c671b8216fcac05344ff477ff2eae56" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_fbox</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a629f8512e45e8f0109a740bfcb7ae412" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_FixUpCorners</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a86e3e6118853e3c7624e46167f7766f7" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_growsize</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1aa73689929eae42431f0f210d8bb28fee" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_index</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a560bc6de77dae8edbb3c9587eb53f03d" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_leveldata</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1af0e183d350296703e8deaebb9a88f81a" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_map</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1aaf087145837f2626f17e9e93b71ff985" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_mfcd</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1adaa101ebcbc10df6a2a761ea3fb3e78b" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_mfid</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1ac4b64e926d1d6763788ee539be3f5d3e" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_ncomp</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a77d378e6f4445b1b52d50e81d97c85fc" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_scomp</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1ac669cda0914a26ea86c2c118e10791dc" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_time</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a1dea2e7280c98e94f9efd74d445f884e" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>operator=</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1ab0e6743c4dbe5632040213a1c6616510" prot="public" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>~FillPatchIteratorHelper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
