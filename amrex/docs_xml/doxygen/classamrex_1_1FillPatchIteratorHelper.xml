<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1FillPatchIteratorHelper" kind="class" language="C++" prot="public">
    <compoundname>amrex::FillPatchIteratorHelper</compoundname>
    <includes refid="AMReX__AmrLevel_8H" local="no">AMReX_AmrLevel.H</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classamrex_1_1FillPatchIteratorHelper_1a39d92a4048c0af0c7b1737d5c4e0c334" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class FillPatchIterator</definition>
        <argsstring></argsstring>
        <name>FillPatchIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="514" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="514" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1a5ca572ea2e2269cf1173bb0240f3c544" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref> &amp;</type>
        <definition>AmrLevel&amp; amrex::FillPatchIteratorHelper::m_amrlevel</definition>
        <argsstring></argsstring>
        <name>m_amrlevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="549" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="549" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1a560bc6de77dae8edbb3c9587eb53f03d" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
        <definition>MultiFab&amp; amrex::FillPatchIteratorHelper::m_leveldata</definition>
        <argsstring></argsstring>
        <name>m_leveldata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="550" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="550" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1aaf087145837f2626f17e9e93b71ff985" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFabCopyDescriptor" kindref="compound">MultiFabCopyDescriptor</ref></type>
        <definition>MultiFabCopyDescriptor amrex::FillPatchIteratorHelper::m_mfcd</definition>
        <argsstring></argsstring>
        <name>m_mfcd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="551" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="551" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1adaa101ebcbc10df6a2a761ea3fb3e78b" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1a270e267cbd0e472dd8297d46a9c76854" kindref="member">MultiFabId</ref> &gt; &gt;</type>
        <definition>Vector&lt; Vector&lt;MultiFabId&gt; &gt; amrex::FillPatchIteratorHelper::m_mfid</definition>
        <argsstring></argsstring>
        <name>m_mfid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="552" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="552" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1af0e183d350296703e8deaebb9a88f81a" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Interpolater" kindref="compound">Interpolater</ref> *</type>
        <definition>Interpolater* amrex::FillPatchIteratorHelper::m_map</definition>
        <argsstring></argsstring>
        <name>m_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="553" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="553" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1ae1577679bfb4ab104a875852a9dbecda" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &gt;</type>
        <definition>std::map&lt;int,Box&gt; amrex::FillPatchIteratorHelper::m_ba</definition>
        <argsstring></argsstring>
        <name>m_ba</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="554" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="554" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1ac669cda0914a26ea86c2c118e10791dc" prot="private" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::FillPatchIteratorHelper::m_time</definition>
        <argsstring></argsstring>
        <name>m_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="555" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="555" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1a86e3e6118853e3c7624e46167f7766f7" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FillPatchIteratorHelper::m_growsize</definition>
        <argsstring></argsstring>
        <name>m_growsize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="556" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="556" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1aa73689929eae42431f0f210d8bb28fee" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FillPatchIteratorHelper::m_index</definition>
        <argsstring></argsstring>
        <name>m_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="557" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="557" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1a77d378e6f4445b1b52d50e81d97c85fc" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FillPatchIteratorHelper::m_scomp</definition>
        <argsstring></argsstring>
        <name>m_scomp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="558" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="558" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1ac4b64e926d1d6763788ee539be3f5d3e" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FillPatchIteratorHelper::m_ncomp</definition>
        <argsstring></argsstring>
        <name>m_ncomp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="559" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="559" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1a629f8512e45e8f0109a740bfcb7ae412" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::FillPatchIteratorHelper::m_FixUpCorners</definition>
        <argsstring></argsstring>
        <name>m_FixUpCorners</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="560" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="560" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1a6c671b8216fcac05344ff477ff2eae56" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &gt; &gt; &gt;</type>
        <definition>std::map&lt; int,Vector&lt; Vector&lt;Box&gt; &gt; &gt; amrex::FillPatchIteratorHelper::m_fbox</definition>
        <argsstring></argsstring>
        <name>m_fbox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="562" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="562" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1a1ed0eb57ec7521b07ea2918df59e5bbd" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &gt; &gt; &gt;</type>
        <definition>std::map&lt; int,Vector&lt; Vector&lt;Box&gt; &gt; &gt; amrex::FillPatchIteratorHelper::m_cbox</definition>
        <argsstring></argsstring>
        <name>m_cbox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="563" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="563" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIteratorHelper_1a2df3ae174e52a21bb158cde96f9498a4" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1FillBoxId" kindref="compound">FillBoxId</ref> &gt; &gt; &gt; &gt;</type>
        <definition>std::map&lt; int,Vector&lt; Vector&lt; Vector&lt;FillBoxId&gt; &gt; &gt; &gt; amrex::FillPatchIteratorHelper::m_fbid</definition>
        <argsstring></argsstring>
        <name>m_fbid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="564" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="564" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1FillPatchIteratorHelper_1a10439c4fa30c39a2f12ba939498ab887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FillPatchIteratorHelper::FillPatchIteratorHelper</definition>
        <argsstring>(AmrLevel &amp;amrlevel, MultiFab &amp;leveldata)</argsstring>
        <name>FillPatchIteratorHelper</name>
        <param>
          <type><ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref> &amp;</type>
          <declname>amrlevel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>leveldata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="516" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp" bodystart="656" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIteratorHelper_1a89aee65d44395bf8969b6ec3da5bd5d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FillPatchIteratorHelper::FillPatchIteratorHelper</definition>
        <argsstring>(AmrLevel &amp;amrlevel, MultiFab &amp;leveldata, int boxGrow, Real time, int state_indx, int scomp, int ncomp, Interpolater *mapper)</argsstring>
        <name>FillPatchIteratorHelper</name>
        <param>
          <type><ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref> &amp;</type>
          <declname>amrlevel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>leveldata</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>boxGrow</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>state_indx</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Interpolater" kindref="compound">Interpolater</ref> *</type>
          <declname>mapper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="519" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp" bodystart="675" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIteratorHelper_1af634eccf2d0d201220687d5b8bfe50fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FillPatchIteratorHelper::Initialize</definition>
        <argsstring>(int boxGrow, Real time, int state_indx, int scomp, int ncomp, Interpolater *mapper)</argsstring>
        <name>Initialize</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>boxGrow</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>state_indx</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Interpolater" kindref="compound">Interpolater</ref> *</type>
          <declname>mapper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="528" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp" bodystart="730" bodyend="976"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIteratorHelper_1ab0e6743c4dbe5632040213a1c6616510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FillPatchIteratorHelper::~FillPatchIteratorHelper</definition>
        <argsstring>()</argsstring>
        <name>~FillPatchIteratorHelper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="535" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp" bodystart="1505" bodyend="1505"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIteratorHelper_1a9cf2d33e663f0311539a96633ff7560d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FillPatchIteratorHelper::fill</definition>
        <argsstring>(FArrayBox &amp;fab, int dcomp, int idx)</argsstring>
        <name>fill</name>
        <param>
          <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
          <declname>fab</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="537" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp" bodystart="1256" bodyend="1503"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1FillPatchIteratorHelper_1ae4075b85a37079586a0717c6223de190" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FillPatchIteratorHelper::FillPatchIteratorHelper</definition>
        <argsstring>()</argsstring>
        <name>FillPatchIteratorHelper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="543" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIteratorHelper_1aae84913534a102443b326a934fb332fc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FillPatchIteratorHelper::FillPatchIteratorHelper</definition>
        <argsstring>(const FillPatchIteratorHelper &amp;rhs)</argsstring>
        <name>FillPatchIteratorHelper</name>
        <param>
          <type>const <ref refid="classamrex_1_1FillPatchIteratorHelper" kindref="compound">FillPatchIteratorHelper</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="544" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIteratorHelper_1a1dea2e7280c98e94f9efd74d445f884e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1FillPatchIteratorHelper" kindref="compound">FillPatchIteratorHelper</ref> &amp;</type>
        <definition>FillPatchIteratorHelper&amp; amrex::FillPatchIteratorHelper::operator=</definition>
        <argsstring>(const FillPatchIteratorHelper &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1FillPatchIteratorHelper" kindref="compound">FillPatchIteratorHelper</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="545" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1560">
        <label>amrex::LevelBld</label>
        <link refid="classamrex_1_1LevelBld"/>
      </node>
      <node id="1534">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
      </node>
      <node id="1507">
        <label>amrex::FillPatchIteratorHelper</label>
        <link refid="classamrex_1_1FillPatchIteratorHelper"/>
        <childnode refid="1508" relation="usage">
          <edgelabel>m_mfid</edgelabel>
        </childnode>
        <childnode refid="1510" relation="usage">
          <edgelabel>m_leveldata</edgelabel>
        </childnode>
        <childnode refid="1538" relation="usage">
          <edgelabel>m_map</edgelabel>
        </childnode>
        <childnode refid="1539" relation="usage">
          <edgelabel>m_amrlevel</edgelabel>
        </childnode>
        <childnode refid="1572" relation="usage">
          <edgelabel>m_mfcd</edgelabel>
        </childnode>
        <childnode refid="1547" relation="usage">
          <edgelabel>m_time</edgelabel>
        </childnode>
      </node>
      <node id="1513">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="1514" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="1539">
        <label>amrex::AmrLevel</label>
        <link refid="classamrex_1_1AmrLevel"/>
        <childnode refid="1540" relation="usage">
          <edgelabel>derive_lst</edgelabel>
        </childnode>
        <childnode refid="1541" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
        <childnode refid="1562" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="1567" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
        <childnode refid="1569" relation="usage">
          <edgelabel>desc_lst</edgelabel>
        </childnode>
        <childnode refid="1515" relation="usage">
          <edgelabel>dmap</edgelabel>
        </childnode>
        <childnode refid="1516" relation="usage">
          <edgelabel>fine_ratio</edgelabel>
          <edgelabel>crse_ratio</edgelabel>
        </childnode>
        <childnode refid="1565" relation="usage">
          <edgelabel>m_AreaToTag</edgelabel>
        </childnode>
      </node>
      <node id="1517">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="1529">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="1559">
        <label>std::vector&lt; std::unique_ptr&lt; std::fstream &gt;, std::allocator&lt; std::unique_ptr&lt; std::fstream &gt; &gt; &gt;</label>
      </node>
      <node id="1540">
        <label>amrex::DeriveList</label>
        <link refid="classamrex_1_1DeriveList"/>
      </node>
      <node id="1516">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="1516" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="1557">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::AmrLevel &gt;, std::allocator&lt; std::unique_ptr&lt; amrex::AmrLevel &gt; &gt; &gt;</label>
      </node>
      <node id="1556">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::AmrLevel &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1557" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1547">
        <label>Real</label>
      </node>
      <node id="1553">
        <label>std::vector&lt; amrex::Geometry, std::allocator&lt; amrex::Geometry &gt; &gt;</label>
      </node>
      <node id="1542">
        <label>amrex::AmrCore</label>
        <link refid="classamrex_1_1AmrCore"/>
        <childnode refid="1543" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1571">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::StateDescriptor &gt;, std::allocator&lt; std::unique_ptr&lt; amrex::StateDescriptor &gt; &gt; &gt;</label>
      </node>
      <node id="1535">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1536" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1527">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="1528" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="1526">
        <label>std::vector&lt; char *, std::allocator&lt; char *&gt; &gt;</label>
      </node>
      <node id="1531">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
      </node>
      <node id="1550">
        <label>amrex::Vector&lt; amrex::DistributionMapping &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1551" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1528">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="1529" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="1518">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1519" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1514">
        <label>string</label>
      </node>
      <node id="1537">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="1516" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="1541">
        <label>amrex::Amr</label>
        <link refid="classamrex_1_1Amr"/>
        <childnode refid="1542" relation="public-inheritance">
        </childnode>
        <childnode refid="1548" relation="usage">
          <edgelabel>regrid_ba</edgelabel>
          <edgelabel>initial_ba</edgelabel>
        </childnode>
        <childnode refid="1554" relation="usage">
          <edgelabel>dt_min</edgelabel>
          <edgelabel>dt_level</edgelabel>
        </childnode>
        <childnode refid="1556" relation="usage">
          <edgelabel>amr_level</edgelabel>
        </childnode>
        <childnode refid="1530" relation="usage">
          <edgelabel>datalogname</edgelabel>
        </childnode>
        <childnode refid="1558" relation="usage">
          <edgelabel>datalog</edgelabel>
        </childnode>
        <childnode refid="1518" relation="usage">
          <edgelabel>n_cycle</edgelabel>
          <edgelabel>level_count</edgelabel>
          <edgelabel>regrid_int</edgelabel>
          <edgelabel>level_steps</edgelabel>
        </childnode>
        <childnode refid="1560" relation="usage">
          <edgelabel>levelbld</edgelabel>
        </childnode>
        <childnode refid="1514" relation="usage">
          <edgelabel>small_plot_file_root</edgelabel>
          <edgelabel>initial_grids_file</edgelabel>
          <edgelabel>check_file_root</edgelabel>
          <edgelabel>regrid_grids_file</edgelabel>
          <edgelabel>subcycling_mode</edgelabel>
          <edgelabel>plot_file_root</edgelabel>
          <edgelabel>restart_chkfile</edgelabel>
          <edgelabel>probin_file</edgelabel>
          <edgelabel>restart_pltfile</edgelabel>
        </childnode>
        <childnode refid="1561" relation="usage">
          <edgelabel>gridlog</edgelabel>
          <edgelabel>runlog</edgelabel>
          <edgelabel>runlog_terse</edgelabel>
        </childnode>
        <childnode refid="1547" relation="usage">
          <edgelabel>check_per</edgelabel>
          <edgelabel>start_time</edgelabel>
          <edgelabel>small_plot_per</edgelabel>
          <edgelabel>plot_log_per</edgelabel>
          <edgelabel>cumtime</edgelabel>
          <edgelabel>plot_per</edgelabel>
          <edgelabel>small_plot_log_per</edgelabel>
          <edgelabel>loadbalance_max_fac</edgelabel>
        </childnode>
      </node>
      <node id="1508">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::FabArrayId &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1509" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1572">
        <label>amrex::MultiFabCopyDescriptor</label>
        <link refid="classamrex_1_1MultiFabCopyDescriptor"/>
        <childnode refid="1573" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1555">
        <label>std::vector&lt; Real, std::allocator&lt; Real &gt; &gt;</label>
      </node>
      <node id="1532">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="1538">
        <label>amrex::Interpolater</label>
        <link refid="classamrex_1_1Interpolater"/>
      </node>
      <node id="1525">
        <label>amrex::Vector&lt; char *&gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1526" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1551">
        <label>std::vector&lt; amrex::DistributionMapping, std::allocator&lt; amrex::DistributionMapping &gt; &gt;</label>
      </node>
      <node id="1545">
        <label>amrex::Vector&lt; amrex::IntVect &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1546" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1536">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
      </node>
      <node id="1558">
        <label>amrex::Vector&lt; std::unique_ptr&lt; std::fstream &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1559" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1519">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="1548">
        <label>amrex::Vector&lt; BoxArray &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1549" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1567">
        <label>amrex::Vector&lt; amrex::StateData &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1568" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1564">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="1547" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="1565">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="1516" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="1566" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="1561">
        <label>ofstream</label>
      </node>
      <node id="1521">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="1522" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="1533">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1534" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1568">
        <label>std::vector&lt; amrex::StateData, std::allocator&lt; amrex::StateData &gt; &gt;</label>
      </node>
      <node id="1563">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="1547" relation="usage">
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
          <edgelabel>dx</edgelabel>
        </childnode>
      </node>
      <node id="1573">
        <label>amrex::FabArrayCopyDescriptor&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArrayCopyDescriptor"/>
      </node>
      <node id="1566">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="1570">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::StateDescriptor &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1571" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1522">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="1518" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="1544">
        <label>amrex::AmrInfo</label>
        <link refid="structamrex_1_1AmrInfo"/>
        <childnode refid="1545" relation="usage">
          <edgelabel>blocking_factor</edgelabel>
          <edgelabel>n_error_buf</edgelabel>
          <edgelabel>max_grid_size</edgelabel>
          <edgelabel>ref_ratio</edgelabel>
        </childnode>
        <childnode refid="1547" relation="usage">
          <edgelabel>grid_eff</edgelabel>
        </childnode>
      </node>
      <node id="1530">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1531" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1569">
        <label>amrex::DescriptorList</label>
        <link refid="classamrex_1_1DescriptorList"/>
        <childnode refid="1570" relation="usage">
          <edgelabel>desc</edgelabel>
        </childnode>
      </node>
      <node id="1549">
        <label>std::vector&lt; BoxArray, std::allocator&lt; BoxArray &gt; &gt;</label>
      </node>
      <node id="1515">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
      </node>
      <node id="1520">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="1521" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="1546">
        <label>std::vector&lt; amrex::IntVect, std::allocator&lt; amrex::IntVect &gt; &gt;</label>
      </node>
      <node id="1554">
        <label>amrex::Vector&lt; Real &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1555" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1510">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="1511" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1562">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="1563" relation="public-inheritance">
        </childnode>
        <childnode refid="1564" relation="usage">
          <edgelabel>roundoff_domain</edgelabel>
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="1565" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="1509">
        <label>std::vector&lt; amrex::Vector&lt; amrex::FabArrayId &gt;, std::allocator&lt; amrex::Vector&lt; amrex::FabArrayId &gt; &gt; &gt;</label>
      </node>
      <node id="1552">
        <label>amrex::Vector&lt; amrex::Geometry &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1553" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1511">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="1512" relation="public-inheritance">
        </childnode>
        <childnode refid="1523" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
        </childnode>
        <childnode refid="1525" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="1516" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="1527" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="1518" relation="usage">
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="1530" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="1532" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="1533" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="1535" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="1537" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="1523">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1524" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1543">
        <label>amrex::AmrMesh</label>
        <link refid="classamrex_1_1AmrMesh"/>
        <childnode refid="1544" relation="protected-inheritance">
        </childnode>
        <childnode refid="1548" relation="usage">
          <edgelabel>grids</edgelabel>
        </childnode>
        <childnode refid="1550" relation="usage">
          <edgelabel>dmap</edgelabel>
        </childnode>
        <childnode refid="1552" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
      </node>
      <node id="1512">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="1513" relation="usage">
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
        </childnode>
        <childnode refid="1515" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="1516" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>mfghostiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="1517" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="1518" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="1520" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
      </node>
      <node id="1524">
        <label>std::vector&lt; std::size_t, std::allocator&lt; std::size_t &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="511" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="510" bodyend="565"/>
    <listofallmembers>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a9cf2d33e663f0311539a96633ff7560d" prot="public" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>fill</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a39d92a4048c0af0c7b1737d5c4e0c334" prot="public" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>FillPatchIterator</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a10439c4fa30c39a2f12ba939498ab887" prot="public" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>FillPatchIteratorHelper</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a89aee65d44395bf8969b6ec3da5bd5d1" prot="public" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>FillPatchIteratorHelper</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1ae4075b85a37079586a0717c6223de190" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>FillPatchIteratorHelper</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1aae84913534a102443b326a934fb332fc" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>FillPatchIteratorHelper</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1af634eccf2d0d201220687d5b8bfe50fd" prot="public" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a5ca572ea2e2269cf1173bb0240f3c544" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_amrlevel</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1ae1577679bfb4ab104a875852a9dbecda" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_ba</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a1ed0eb57ec7521b07ea2918df59e5bbd" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_cbox</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a2df3ae174e52a21bb158cde96f9498a4" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_fbid</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a6c671b8216fcac05344ff477ff2eae56" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_fbox</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a629f8512e45e8f0109a740bfcb7ae412" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_FixUpCorners</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a86e3e6118853e3c7624e46167f7766f7" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_growsize</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1aa73689929eae42431f0f210d8bb28fee" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_index</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a560bc6de77dae8edbb3c9587eb53f03d" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_leveldata</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1af0e183d350296703e8deaebb9a88f81a" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_map</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1aaf087145837f2626f17e9e93b71ff985" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_mfcd</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1adaa101ebcbc10df6a2a761ea3fb3e78b" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_mfid</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1ac4b64e926d1d6763788ee539be3f5d3e" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_ncomp</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a77d378e6f4445b1b52d50e81d97c85fc" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_scomp</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1ac669cda0914a26ea86c2c118e10791dc" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>m_time</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1a1dea2e7280c98e94f9efd74d445f884e" prot="private" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>operator=</name></member>
      <member refid="classamrex_1_1FillPatchIteratorHelper_1ab0e6743c4dbe5632040213a1c6616510" prot="public" virt="non-virtual"><scope>amrex::FillPatchIteratorHelper</scope><name>~FillPatchIteratorHelper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
