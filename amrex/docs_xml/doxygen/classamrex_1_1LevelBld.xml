<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1LevelBld" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>amrex::LevelBld</compoundname>
    <includes refid="AMReX__LevelBld_8H" local="no">AMReX_LevelBld.H</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1LevelBld_1a11d53f835040bd5752faa947cfd9cdb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual amrex::LevelBld::~LevelBld</definition>
        <argsstring>()=default</argsstring>
        <name>~LevelBld</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" line="26" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LevelBld_1a15187caf83aa0cca8784f3c2c733fd82" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::LevelBld::LevelBld</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>LevelBld</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" line="27" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LevelBld_1aee859f0bc17d637c35c23047d67784aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::LevelBld::LevelBld</definition>
        <argsstring>(LevelBld const &amp;)=default</argsstring>
        <name>LevelBld</name>
        <param>
          <type><ref refid="classamrex_1_1LevelBld" kindref="compound">LevelBld</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" line="28" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LevelBld_1a1d97d19552c4c36cccdd8fea75b8c06c" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::LevelBld::LevelBld</definition>
        <argsstring>(LevelBld &amp;&amp;) noexcept=default</argsstring>
        <name>LevelBld</name>
        <param>
          <type><ref refid="classamrex_1_1LevelBld" kindref="compound">LevelBld</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" line="29" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LevelBld_1a953101169ca6e1d72fafe0eb1f2c8177" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1LevelBld" kindref="compound">LevelBld</ref> &amp;</type>
        <definition>LevelBld&amp; amrex::LevelBld::operator=</definition>
        <argsstring>(LevelBld const &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1LevelBld" kindref="compound">LevelBld</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" line="30" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LevelBld_1a0e249071d2256e6bc3528217f5660f69" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1LevelBld" kindref="compound">LevelBld</ref> &amp;</type>
        <definition>LevelBld&amp; amrex::LevelBld::operator=</definition>
        <argsstring>(LevelBld &amp;&amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1LevelBld" kindref="compound">LevelBld</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" line="31" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LevelBld_1ab7638fd4ea5c9153a4c81797034b6688" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void amrex::LevelBld::variableSetUp</definition>
        <argsstring>()=0</argsstring>
        <name>variableSetUp</name>
        <briefdescription>
<para>Perform any problem-dependent setup such as physical boundary condition and derived quantities. This is a pure virtual function and hence MUST be implemented by derived classes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" line="39" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LevelBld_1af5b8be4ad0e53d191561488d2f1136d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void amrex::LevelBld::variableSetUpForNewCompProcs</definition>
        <argsstring>()</argsstring>
        <name>variableSetUpForNewCompProcs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" line="40" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LevelBld_1a7ba6a4758a8402bc7d91ba7e636d2094" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void amrex::LevelBld::variableCleanUp</definition>
        <argsstring>()=0</argsstring>
        <name>variableCleanUp</name>
        <briefdescription>
<para>Perform any problem-dependent cleanup. This is a pure virtual function and hence MUST be implemented by derived classes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" line="47" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LevelBld_1acea35eef8eb181565155c3d867a0ba02" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref> *</type>
        <definition>virtual AmrLevel* amrex::LevelBld::operator()</definition>
        <argsstring>()=0</argsstring>
        <name>operator()</name>
        <briefdescription>
<para>This is a virtual constructor for types derived from <ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref>. The derived type is initialized with the default constructor. This is a pure virtual function and hence MUST be implemented by derived classes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" line="56" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LevelBld_1a5c3d4f5f5a23c369c5077d56f1e73ff1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref> *</type>
        <definition>virtual AmrLevel* amrex::LevelBld::operator()</definition>
        <argsstring>(Amr &amp;papa, int lev, const Geometry &amp;geom_lev, const BoxArray &amp;ba, const DistributionMapping &amp;dm, Real time)=0</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classamrex_1_1Amr" kindref="compound">Amr</ref> &amp;</type>
          <declname>papa</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom_lev</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dm</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>This is a virtual constructor for types derived from <ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref>. The derived type is initialized with the five specified variables. This is a pure virtual function and hence MUST be implemented by derived classes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>papa</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lev</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>geom_lev</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ba</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dm</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" line="72" column="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Builds problem-specific AmrLevels. </para>
    </briefdescription>
    <detaileddescription>
<para>Abstract base class specifying an interface for building problem-specific AmrLevels. </para>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" line="22" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" bodystart="23" bodyend="78"/>
    <listofallmembers>
      <member refid="classamrex_1_1LevelBld_1a15187caf83aa0cca8784f3c2c733fd82" prot="public" virt="non-virtual"><scope>amrex::LevelBld</scope><name>LevelBld</name></member>
      <member refid="classamrex_1_1LevelBld_1aee859f0bc17d637c35c23047d67784aa" prot="public" virt="non-virtual"><scope>amrex::LevelBld</scope><name>LevelBld</name></member>
      <member refid="classamrex_1_1LevelBld_1a1d97d19552c4c36cccdd8fea75b8c06c" prot="public" virt="non-virtual"><scope>amrex::LevelBld</scope><name>LevelBld</name></member>
      <member refid="classamrex_1_1LevelBld_1acea35eef8eb181565155c3d867a0ba02" prot="public" virt="pure-virtual"><scope>amrex::LevelBld</scope><name>operator()</name></member>
      <member refid="classamrex_1_1LevelBld_1a5c3d4f5f5a23c369c5077d56f1e73ff1" prot="public" virt="pure-virtual"><scope>amrex::LevelBld</scope><name>operator()</name></member>
      <member refid="classamrex_1_1LevelBld_1a953101169ca6e1d72fafe0eb1f2c8177" prot="public" virt="non-virtual"><scope>amrex::LevelBld</scope><name>operator=</name></member>
      <member refid="classamrex_1_1LevelBld_1a0e249071d2256e6bc3528217f5660f69" prot="public" virt="non-virtual"><scope>amrex::LevelBld</scope><name>operator=</name></member>
      <member refid="classamrex_1_1LevelBld_1a7ba6a4758a8402bc7d91ba7e636d2094" prot="public" virt="pure-virtual"><scope>amrex::LevelBld</scope><name>variableCleanUp</name></member>
      <member refid="classamrex_1_1LevelBld_1ab7638fd4ea5c9153a4c81797034b6688" prot="public" virt="pure-virtual"><scope>amrex::LevelBld</scope><name>variableSetUp</name></member>
      <member refid="classamrex_1_1LevelBld_1af5b8be4ad0e53d191561488d2f1136d3" prot="public" virt="virtual"><scope>amrex::LevelBld</scope><name>variableSetUpForNewCompProcs</name></member>
      <member refid="classamrex_1_1LevelBld_1a11d53f835040bd5752faa947cfd9cdb9" prot="public" virt="virtual"><scope>amrex::LevelBld</scope><name>~LevelBld</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
