<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1LevelBld" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>amrex::LevelBld</compoundname>
    <includes refid="AMReX__LevelBld_8H" local="no">AMReX_LevelBld.H</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1LevelBld_1a1a908a0759bb7d6a1607f344b677ea58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual amrex::LevelBld::~LevelBld</definition>
        <argsstring>()</argsstring>
        <name>~LevelBld</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" line="26" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LevelBld_1ab7638fd4ea5c9153a4c81797034b6688" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void amrex::LevelBld::variableSetUp</definition>
        <argsstring>()=0</argsstring>
        <name>variableSetUp</name>
        <briefdescription>
<para>Perform any problem-dependent setup such as physical boundary condition and derived quantities. This is a pure virtual function and hence MUST be implemented by derived classes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LevelBld_1af5b8be4ad0e53d191561488d2f1136d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void amrex::LevelBld::variableSetUpForNewCompProcs</definition>
        <argsstring>()</argsstring>
        <name>variableSetUpForNewCompProcs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" line="35" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LevelBld_1a7ba6a4758a8402bc7d91ba7e636d2094" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void amrex::LevelBld::variableCleanUp</definition>
        <argsstring>()=0</argsstring>
        <name>variableCleanUp</name>
        <briefdescription>
<para>Perform any problem-dependent cleanup. This is a pure virtual function and hence MUST be implemented by derived classes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LevelBld_1acea35eef8eb181565155c3d867a0ba02" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref> *</type>
        <definition>virtual AmrLevel* amrex::LevelBld::operator()</definition>
        <argsstring>()=0</argsstring>
        <name>operator()</name>
        <briefdescription>
<para>This is a virtual constructor for types derived from <ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref>. The derived type is initialized with the default constructor. This is a pure virtual function and hence MUST be implemented by derived classes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1LevelBld_1a5c3d4f5f5a23c369c5077d56f1e73ff1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref> *</type>
        <definition>virtual AmrLevel* amrex::LevelBld::operator()</definition>
        <argsstring>(Amr &amp;papa, int lev, const Geometry &amp;geom_lev, const BoxArray &amp;ba, const DistributionMapping &amp;dm, Real time)=0</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classamrex_1_1Amr" kindref="compound">Amr</ref> &amp;</type>
          <declname>papa</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom_lev</declname>
        </param>
        <param>
          <type>const BoxArray &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dm</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>This is a virtual constructor for types derived from <ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref>. The derived type is initialized with the five specified variables. This is a pure virtual function and hence MUST be implemented by derived classes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>papa</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lev</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>geom_lev</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ba</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dm</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" line="67" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Builds problem-specific AmrLevels. </para>    </briefdescription>
    <detaileddescription>
<para>Abstract base class specifying an interface for building problem-specific AmrLevels. </para>    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" line="23" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H" bodystart="22" bodyend="73"/>
    <listofallmembers>
      <member refid="classamrex_1_1LevelBld_1acea35eef8eb181565155c3d867a0ba02" prot="public" virt="pure-virtual"><scope>amrex::LevelBld</scope><name>operator()</name></member>
      <member refid="classamrex_1_1LevelBld_1a5c3d4f5f5a23c369c5077d56f1e73ff1" prot="public" virt="pure-virtual"><scope>amrex::LevelBld</scope><name>operator()</name></member>
      <member refid="classamrex_1_1LevelBld_1a7ba6a4758a8402bc7d91ba7e636d2094" prot="public" virt="pure-virtual"><scope>amrex::LevelBld</scope><name>variableCleanUp</name></member>
      <member refid="classamrex_1_1LevelBld_1ab7638fd4ea5c9153a4c81797034b6688" prot="public" virt="pure-virtual"><scope>amrex::LevelBld</scope><name>variableSetUp</name></member>
      <member refid="classamrex_1_1LevelBld_1af5b8be4ad0e53d191561488d2f1136d3" prot="public" virt="virtual"><scope>amrex::LevelBld</scope><name>variableSetUpForNewCompProcs</name></member>
      <member refid="classamrex_1_1LevelBld_1a1a908a0759bb7d6a1607f344b677ea58" prot="public" virt="virtual"><scope>amrex::LevelBld</scope><name>~LevelBld</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
