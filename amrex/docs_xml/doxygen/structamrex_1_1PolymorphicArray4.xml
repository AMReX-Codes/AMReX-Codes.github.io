<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1PolymorphicArray4" kind="struct" language="C++" prot="public">
    <compoundname>amrex::PolymorphicArray4</compoundname>
    <basecompoundref refid="structamrex_1_1Array4" prot="public" virt="non-virtual">amrex::Array4&lt; T &gt;</basecompoundref>
    <includes refid="AMReX__Array4_8H" local="no">AMReX_Array4.H</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1PolymorphicArray4_1a14db281b4af9950fa5643cc8e6fdc3d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__host__ __device__</type>
        <definition>__host__ __device__ amrex::PolymorphicArray4&lt; T &gt;::PolymorphicArray4</definition>
        <argsstring>(Array4&lt; T &gt; const &amp;a)</argsstring>
        <name>PolymorphicArray4</name>
        <qualifiedname>amrex::PolymorphicArray4::PolymorphicArray4</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1Array4" kindref="compound">Array4</ref>&lt; T &gt; const &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" line="356" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" bodystart="356" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1PolymorphicArray4_1aecf60a82c9742933f0d7916558624b43" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ T &amp;</type>
        <definition>__host__ __device__ T &amp; amrex::PolymorphicArray4&lt; T &gt;::operator()</definition>
        <argsstring>(int i, int j, int k) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>amrex::PolymorphicArray4::operator()</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" line="360" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" bodystart="360" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1PolymorphicArray4_1ae8c8630aa06bb3561b89c622766ea99b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>T</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; <ref refid="structamrex_1_1HasMultiComp" kindref="compound">amrex::HasMultiComp</ref>&lt; U &gt;::value, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>__host__ __device__ U::reference_type</type>
        <definition>__host__ __device__ U::reference_type amrex::PolymorphicArray4&lt; T &gt;::operator()</definition>
        <argsstring>(int i, int j, int k, int n) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>amrex::PolymorphicArray4::operator()</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" line="367" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" bodystart="367" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1PolymorphicArray4_1a835733e5f0a2fb9ef417cee74d88b32f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>T</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt;!<ref refid="structamrex_1_1HasMultiComp" kindref="compound">amrex::HasMultiComp</ref>&lt; U &gt;::value, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>__host__ __device__ U &amp;</type>
        <definition>__host__ __device__ U &amp; amrex::PolymorphicArray4&lt; T &gt;::operator()</definition>
        <argsstring>(int i, int j, int k, int n) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>amrex::PolymorphicArray4::operator()</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" line="373" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" bodystart="373" bodyend="375"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>amrex::Array4&lt; T &gt;</label>
        <link refid="structamrex_1_1Array4"/>
      </node>
      <node id="1">
        <label>amrex::PolymorphicArray4&lt; T &gt;</label>
        <link refid="structamrex_1_1PolymorphicArray4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>amrex::Array4&lt; T &gt;</label>
        <link refid="structamrex_1_1Array4"/>
        <childnode refid="3" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>amrex::Dim3</label>
        <link refid="structamrex_1_1Dim3"/>
      </node>
      <node id="1">
        <label>amrex::PolymorphicArray4&lt; T &gt;</label>
        <link refid="structamrex_1_1PolymorphicArray4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" line="352" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Array4.H" bodystart="354" bodyend="376"/>
    <listofallmembers>
      <member refid="structamrex_1_1Array4_1a5a625143d2022ec1c53a9330e4cdccf3" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>Array4</name></member>
      <member refid="structamrex_1_1Array4_1a9d5e7fb260eb6907c7feb338fd167370" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>Array4</name></member>
      <member refid="structamrex_1_1Array4_1a4d464dd349cd0bbcdbbfaf1329ddaeb9" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>Array4</name></member>
      <member refid="structamrex_1_1Array4_1a84edc315754294397f374dca9d115e73" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>Array4</name></member>
      <member refid="structamrex_1_1Array4_1ad9c87c00215afb2c9829133af721cf3a" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>Array4</name></member>
      <member refid="structamrex_1_1Array4_1a866f2c12eb3e3d6a26399866f355e088" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>begin</name></member>
      <member refid="structamrex_1_1Array4_1a362a923341ff8a845e4a1a2eef73b61c" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>cellData</name></member>
      <member refid="structamrex_1_1Array4_1a3002e52059e15dd0184172446bb1c4a2" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>contains</name></member>
      <member refid="structamrex_1_1Array4_1a6bfa4a4176676e1a5c69c51c7fa46e01" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>contains</name></member>
      <member refid="structamrex_1_1Array4_1afa456813f60b182958067dab3ff87b1a" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>contains</name></member>
      <member refid="structamrex_1_1Array4_1a30636a80cebef5e779f22ed7728ed494" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>dataPtr</name></member>
      <member refid="structamrex_1_1Array4_1ae3e6ea18e90f4b382a90da961a93d8e9" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>end</name></member>
      <member refid="structamrex_1_1Array4_1ac5874d9946c7fab10b8baccf17852150" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>jstride</name></member>
      <member refid="structamrex_1_1Array4_1a2f847bb967235ec601258fe8726ec83e" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>kstride</name></member>
      <member refid="structamrex_1_1Array4_1a58a49cd7aec26094f9a5dda9ee795cca" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>ncomp</name></member>
      <member refid="structamrex_1_1Array4_1a93d28feba79ff0f0fbd1fd6483e68392" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>nComp</name></member>
      <member refid="structamrex_1_1Array4_1af34de268f8d40135be4374144dd2b34a" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>nstride</name></member>
      <member refid="structamrex_1_1Array4_1a8317a7e67a07cbb3948e7b7c9ce7a4bc" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>operator bool</name></member>
      <member refid="structamrex_1_1PolymorphicArray4_1aecf60a82c9742933f0d7916558624b43" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>operator()</name></member>
      <member refid="structamrex_1_1PolymorphicArray4_1ae8c8630aa06bb3561b89c622766ea99b" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>operator()</name></member>
      <member refid="structamrex_1_1PolymorphicArray4_1a835733e5f0a2fb9ef417cee74d88b32f" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>operator()</name></member>
      <member refid="structamrex_1_1Array4_1afa5823b500e444c12e4df9f91206cbcd" prot="public" virt="non-virtual" ambiguityscope="amrex::Array4::"><scope>amrex::PolymorphicArray4</scope><name>operator()</name></member>
      <member refid="structamrex_1_1Array4_1a027d499c3286a400e6eba8893a302916" prot="public" virt="non-virtual" ambiguityscope="amrex::Array4::"><scope>amrex::PolymorphicArray4</scope><name>operator()</name></member>
      <member refid="structamrex_1_1Array4_1a2c3d63a6d0542c512c626127831c2e9b" prot="public" virt="non-virtual" ambiguityscope="amrex::Array4::"><scope>amrex::PolymorphicArray4</scope><name>operator()</name></member>
      <member refid="structamrex_1_1Array4_1a019596109273e237727cad9ad677ad12" prot="public" virt="non-virtual" ambiguityscope="amrex::Array4::"><scope>amrex::PolymorphicArray4</scope><name>operator()</name></member>
      <member refid="structamrex_1_1Array4_1abecbdc4b33af06f30325783ca02d9510" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>p</name></member>
      <member refid="structamrex_1_1PolymorphicArray4_1a14db281b4af9950fa5643cc8e6fdc3d8" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>PolymorphicArray4</name></member>
      <member refid="structamrex_1_1Array4_1aaaae2059e183c331a12d2c3c3731de99" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>ptr</name></member>
      <member refid="structamrex_1_1Array4_1a3be688ccaac37d2e45d8126b52ab288c" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>ptr</name></member>
      <member refid="structamrex_1_1Array4_1a50c13869de572ef6462171d976c60cc7" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>ptr</name></member>
      <member refid="structamrex_1_1Array4_1a0fc1ece7864456f1db8f8a453929b13e" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>ptr</name></member>
      <member refid="structamrex_1_1Array4_1a57a5a17a2002a5694e257954f9590a77" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>ptr</name></member>
      <member refid="structamrex_1_1Array4_1a502e30c7c72b061f1aed49f1fedede7a" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>ptr</name></member>
      <member refid="structamrex_1_1Array4_1a186c06714414e11899155c2952675b01" prot="public" virt="non-virtual"><scope>amrex::PolymorphicArray4</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
