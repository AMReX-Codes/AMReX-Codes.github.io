<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classamrex_1_1EB2_1_1CylinderIF" kind="class" language="C++" prot="public">
    <compoundname>amrex::EB2::CylinderIF</compoundname>
    <basecompoundref refid="structamrex_1_1GPUable" prot="private" virt="non-virtual">amrex::GPUable</basecompoundref>
    <includes refid="AMReX__EB2__IF__Cylinder_8H" local="no">AMReX_EB2_IF_Cylinder.H</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1CylinderIF_1a7c5b05498e0dbdf86a65e6fc719e12ad" prot="protected" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::EB2::CylinderIF::m_radius</definition>
        <argsstring></argsstring>
        <name>m_radius</name>
        <qualifiedname>amrex::EB2::CylinderIF::m_radius</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="102" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1CylinderIF_1ac76b57e5f88b041a0369fc7a8c5026f7" prot="protected" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::EB2::CylinderIF::m_height</definition>
        <argsstring></argsstring>
        <name>m_height</name>
        <qualifiedname>amrex::EB2::CylinderIF::m_height</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="103" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1CylinderIF_1a7dd72f5ab847bff174c67eff2c1b00e5" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::EB2::CylinderIF::m_direction</definition>
        <argsstring></argsstring>
        <name>m_direction</name>
        <qualifiedname>amrex::EB2::CylinderIF::m_direction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="104" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1CylinderIF_1a5e0afe35657ac28fca148215c31180d9" prot="protected" static="no" mutable="no">
        <type><ref refid="structamrex_1_1XDim3" kindref="compound">XDim3</ref></type>
        <definition>XDim3 amrex::EB2::CylinderIF::m_center</definition>
        <argsstring></argsstring>
        <name>m_center</name>
        <qualifiedname>amrex::EB2::CylinderIF::m_center</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="105" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1CylinderIF_1ab6453352eca518f991c6e74195f3d337" prot="protected" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::EB2::CylinderIF::m_sign</definition>
        <argsstring></argsstring>
        <name>m_sign</name>
        <qualifiedname>amrex::EB2::CylinderIF::m_sign</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="107" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="107" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1CylinderIF_1a7f70d143e2569bc9112f4c5f1efcd83d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::CylinderIF::CylinderIF</definition>
        <argsstring>(Real a_radius, int a_direction, const RealArray &amp;a_center, bool a_inside)</argsstring>
        <name>CylinderIF</name>
        <qualifiedname>amrex::EB2::CylinderIF::CylinderIF</qualifiedname>
        <param>
          <type>Real</type>
          <declname>a_radius</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a_direction</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1aeb06fab72f85728954130adbe25c5397" kindref="member">RealArray</ref> &amp;</type>
          <declname>a_center</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>a_inside</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overloaded constructor for infinite cylinder IF: if the user does not provide a cylinder height, the IF corresponds to a cylinder that spans the whole domain. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="23" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1CylinderIF_1a65cc987a90a62e4c8e29302895bab48c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::CylinderIF::CylinderIF</definition>
        <argsstring>(Real a_radius, Real a_height, int a_direction, const RealArray &amp;a_center, bool a_inside)</argsstring>
        <name>CylinderIF</name>
        <qualifiedname>amrex::EB2::CylinderIF::CylinderIF</qualifiedname>
        <param>
          <type>Real</type>
          <declname>a_radius</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>a_height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a_direction</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1aeb06fab72f85728954130adbe25c5397" kindref="member">RealArray</ref> &amp;</type>
          <declname>a_center</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>a_inside</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overloaded constructor for finite cylinder IF: if the user does specify a cylinder height (length), then the IF corresponds to a cylinder extending only to height/2 from it&apos;s center. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="31" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="31" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1CylinderIF_1aeae1c97dd857c5b1f279b7a61c3742a7" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ Real</type>
        <definition>__host__ __device__ Real amrex::EB2::CylinderIF::operator()</definition>
        <argsstring>(Real x, Real y, Real z) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>amrex::EB2::CylinderIF::operator()</qualifiedname>
        <param>
          <type>Real</type>
          <declname>x</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>y</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="41" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="41" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1CylinderIF_1ab67af2aa5add774d28c95c0c560e0132" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>Real</type>
        <definition>Real amrex::EB2::CylinderIF::operator()</definition>
        <argsstring>(const RealArray &amp;p) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>amrex::EB2::CylinderIF::operator()</qualifiedname>
        <param>
          <type>const <ref refid="namespaceamrex_1aeb06fab72f85728954130adbe25c5397" kindref="member">RealArray</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="95" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="95" bodyend="98"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>amrex::EB2::CylinderIF</label>
        <link refid="classamrex_1_1EB2_1_1CylinderIF"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::GPUable</label>
        <link refid="structamrex_1_1GPUable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>amrex::EB2::CylinderIF</label>
        <link refid="classamrex_1_1EB2_1_1CylinderIF"/>
        <childnode refid="2" relation="private-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_center</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::GPUable</label>
        <link refid="structamrex_1_1GPUable"/>
      </node>
      <node id="3">
        <label>amrex::XDim3</label>
        <link refid="structamrex_1_1XDim3"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" line="14" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H" bodystart="16" bodyend="108"/>
    <listofallmembers>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1a7f70d143e2569bc9112f4c5f1efcd83d" prot="public" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>CylinderIF</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1a65cc987a90a62e4c8e29302895bab48c" prot="public" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>CylinderIF</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1a5e0afe35657ac28fca148215c31180d9" prot="protected" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>m_center</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1a7dd72f5ab847bff174c67eff2c1b00e5" prot="protected" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>m_direction</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1ac76b57e5f88b041a0369fc7a8c5026f7" prot="protected" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>m_height</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1a7c5b05498e0dbdf86a65e6fc719e12ad" prot="protected" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>m_radius</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1ab6453352eca518f991c6e74195f3d337" prot="protected" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>m_sign</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1aeae1c97dd857c5b1f279b7a61c3742a7" prot="public" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>operator()</name></member>
      <member refid="classamrex_1_1EB2_1_1CylinderIF_1ab67af2aa5add774d28c95c0c560e0132" prot="public" virt="non-virtual"><scope>amrex::EB2::CylinderIF</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
