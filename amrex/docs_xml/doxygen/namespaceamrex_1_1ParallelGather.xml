<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespaceamrex_1_1ParallelGather" kind="namespace" language="C++">
    <compoundname>amrex::ParallelGather</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex_1_1ParallelGather_1accad75ceb30d24dd985037a1dddb72fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ParallelGather::Gather</definition>
        <argsstring>(const T *v, int cnt, T *vs, int root, MPI_Comm comm)</argsstring>
        <name>Gather</name>
        <param>
          <type>const T *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cnt</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>vs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelReduce.H" line="111" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelReduce.H" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1ParallelGather_1ac500e0120b76d32a349a73f8ebfd36b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ParallelGather::Gather</definition>
        <argsstring>(const T &amp;v, T *vs, int root, MPI_Comm comm)</argsstring>
        <name>Gather</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>vs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelReduce.H" line="115" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelReduce.H" bodystart="115" bodyend="117"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ParallelReduce.H" line="109" column="1"/>
  </compounddef>
</doxygen>
