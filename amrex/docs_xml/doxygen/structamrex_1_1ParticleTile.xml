<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1ParticleTile" kind="struct" language="C++" prot="public">
    <compoundname>amrex::ParticleTile</compoundname>
    <includes refid="AMReX__ParticleTile_8H" local="no">AMReX_ParticleTile.H</includes>
    <templateparamlist>
      <param>
        <type>typename T_ParticleType</type>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NArrayReal</declname>
        <defname>NArrayReal</defname>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NArrayInt</declname>
        <defname>NArrayInt</defname>
      </param>
      <param>
        <type>template&lt; class &gt; class</type>
        <declname>Allocator</declname>
        <defname>Allocator</defname>
        <defval><ref refid="namespaceamrex_1a179fafc569924202b166896b608cd5c2" kindref="member">DefaultAllocator</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1ab2be35f77e9e2ed231e5406b9f011dc3" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Allocator&lt; T &gt;</type>
        <definition>using amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::AllocatorType =  Allocator&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>AllocatorType</name>
        <qualifiedname>amrex::ParticleTile::AllocatorType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="716" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="716" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1a806d428c54ec86cc7e61edf954105f6f" prot="public" static="no">
        <type>T_ParticleType</type>
        <definition>using amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::ParticleType =  T_ParticleType</definition>
        <argsstring></argsstring>
        <name>ParticleType</name>
        <qualifiedname>amrex::ParticleTile::ParticleType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="718" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="718" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1a043db0d4cd2205027b4308f459496b79" prot="public" static="no">
        <type>typename ParticleType::RealType</type>
        <definition>using amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::RealType =  typename ParticleType::RealType</definition>
        <argsstring></argsstring>
        <name>RealType</name>
        <qualifiedname>amrex::ParticleTile::RealType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="721" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="721" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1acdece46bb48b940977bf9efe198779c4" prot="public" static="no">
        <type><ref refid="structamrex_1_1Particle" kindref="compound">Particle</ref>&lt; <ref refid="structamrex_1_1ParticleTile_1af37f9208b1b9908daad6789415d20f81" kindref="member">NStructReal</ref>+NArrayReal, <ref refid="structamrex_1_1ParticleTile_1a2e52440bc21e01affff077fff37edb44" kindref="member">NStructInt</ref>+NArrayInt &gt;</type>
        <definition>using amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::SuperParticleType =  Particle&lt;NStructReal + NArrayReal, NStructInt + NArrayInt&gt;</definition>
        <argsstring></argsstring>
        <name>SuperParticleType</name>
        <qualifiedname>amrex::ParticleTile::SuperParticleType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="726" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="726" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1aecc824f28d4d4735eb5ca3cb0d763216" prot="public" static="no">
        <type>std::conditional_t&lt; ParticleType::is_soa_particle, <ref refid="structamrex_1_1ThisParticleTileHasNoAoS" kindref="compound">ThisParticleTileHasNoAoS</ref>, <ref refid="classamrex_1_1ArrayOfStructs" kindref="compound">ArrayOfStructs</ref>&lt; <ref refid="structamrex_1_1ParticleTile_1a806d428c54ec86cc7e61edf954105f6f" kindref="member">ParticleType</ref>, Allocator &gt; &gt;</type>
        <definition>using amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::AoS =  std::conditional_t&lt; ParticleType::is_soa_particle, ThisParticleTileHasNoAoS, ArrayOfStructs&lt;ParticleType, Allocator&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>AoS</name>
        <qualifiedname>amrex::ParticleTile::AoS</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="728" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="731" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1a22d017997751335e72bad98b42931cfc" prot="public" static="no">
        <type>std::conditional_t&lt; ParticleType::is_soa_particle, <ref refid="structamrex_1_1StructOfArrays" kindref="compound">StructOfArrays</ref>&lt; NArrayReal, NArrayInt, Allocator, true &gt;, <ref refid="structamrex_1_1StructOfArrays" kindref="compound">StructOfArrays</ref>&lt; NArrayReal, NArrayInt, Allocator, false &gt; &gt;</type>
        <definition>using amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::SoA =  std::conditional_t&lt; ParticleType::is_soa_particle, StructOfArrays&lt;NArrayReal, NArrayInt, Allocator, true&gt;, StructOfArrays&lt;NArrayReal, NArrayInt, Allocator, false&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>SoA</name>
        <qualifiedname>amrex::ParticleTile::SoA</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="734" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="737" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1adf1dfc735a7f9d3508e434da7e87b632" prot="public" static="no">
        <type>typename SoA::RealVector</type>
        <definition>using amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::RealVector =  typename SoA::RealVector</definition>
        <argsstring></argsstring>
        <name>RealVector</name>
        <qualifiedname>amrex::ParticleTile::RealVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="738" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="738" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1ab198bf3467e469c8c1bfa13f1c53799a" prot="public" static="no">
        <type>typename SoA::IntVector</type>
        <definition>using amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::IntVector =  typename SoA::IntVector</definition>
        <argsstring></argsstring>
        <name>IntVector</name>
        <qualifiedname>amrex::ParticleTile::IntVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="739" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="739" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1a00d52f45cf7e8a4b3c30cfb48e7bca78" prot="public" static="no">
        <type>typename ParticleType::StorageParticleType</type>
        <definition>using amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::StorageParticleType =  typename ParticleType::StorageParticleType</definition>
        <argsstring></argsstring>
        <name>StorageParticleType</name>
        <qualifiedname>amrex::ParticleTile::StorageParticleType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="740" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="740" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1a0aeb55b6a15d10428c88a314412914c5" prot="public" static="no">
        <type><ref refid="structamrex_1_1ParticleTileData" kindref="compound">ParticleTileData</ref>&lt; <ref refid="structamrex_1_1ParticleTile_1a00d52f45cf7e8a4b3c30cfb48e7bca78" kindref="member">StorageParticleType</ref>, NArrayReal, NArrayInt &gt;</type>
        <definition>using amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::ParticleTileDataType =  ParticleTileData&lt;StorageParticleType, NArrayReal, NArrayInt&gt;</definition>
        <argsstring></argsstring>
        <name>ParticleTileDataType</name>
        <qualifiedname>amrex::ParticleTile::ParticleTileDataType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="742" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="742" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1a45e1a00c0cf61da02993d8b31b4cb431" prot="public" static="no">
        <type><ref refid="structamrex_1_1ConstParticleTileData" kindref="compound">ConstParticleTileData</ref>&lt; <ref refid="structamrex_1_1ParticleTile_1a00d52f45cf7e8a4b3c30cfb48e7bca78" kindref="member">StorageParticleType</ref>, NArrayReal, NArrayInt &gt;</type>
        <definition>using amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::ConstParticleTileDataType =  ConstParticleTileData&lt;StorageParticleType, NArrayReal, NArrayInt&gt;</definition>
        <argsstring></argsstring>
        <name>ConstParticleTileDataType</name>
        <qualifiedname>amrex::ParticleTile::ConstParticleTileDataType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="743" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="743" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1a7d38648767509798f1fab24a293b49eb" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::NAR</definition>
        <argsstring></argsstring>
        <name>NAR</name>
        <qualifiedname>amrex::ParticleTile::NAR</qualifiedname>
        <initializer>= NArrayReal</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="719" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="719" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1a27974d2d46e3698a69b1997e905072e8" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::NAI</definition>
        <argsstring></argsstring>
        <name>NAI</name>
        <qualifiedname>amrex::ParticleTile::NAI</qualifiedname>
        <initializer>= NArrayInt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="720" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="720" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1af37f9208b1b9908daad6789415d20f81" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::NStructReal</definition>
        <argsstring></argsstring>
        <name>NStructReal</name>
        <qualifiedname>amrex::ParticleTile::NStructReal</qualifiedname>
        <initializer>= ParticleType::NReal</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="723" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="723" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1a2e52440bc21e01affff077fff37edb44" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::NStructInt</definition>
        <argsstring></argsstring>
        <name>NStructInt</name>
        <qualifiedname>amrex::ParticleTile::NStructInt</qualifiedname>
        <initializer>= ParticleType::NInt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="724" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="724" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1a434377380cf9f4dd45362080837b6ec4" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1ParticleTile_1aecc824f28d4d4735eb5ca3cb0d763216" kindref="member">AoS</ref></type>
        <definition>AoS amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::m_aos_tile</definition>
        <argsstring></argsstring>
        <name>m_aos_tile</name>
        <qualifiedname>amrex::ParticleTile::m_aos_tile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1303" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1acfdbf84efe0aae5266a28545a2e45480" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1ParticleTile_1a22d017997751335e72bad98b42931cfc" kindref="member">SoA</ref></type>
        <definition>SoA amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::m_soa_tile</definition>
        <argsstring></argsstring>
        <name>m_soa_tile</name>
        <qualifiedname>amrex::ParticleTile::m_soa_tile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1304" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1ad4a6e09ba4f2ef496ba35c3dac4c19b4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::m_defined</definition>
        <argsstring></argsstring>
        <name>m_defined</name>
        <qualifiedname>amrex::ParticleTile::m_defined</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1306" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1a6e6255a32ada9fcf2655a94d474ece11" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1PODVector" kindref="compound">amrex::PODVector</ref>&lt; ParticleReal *, Allocator&lt; ParticleReal * &gt; &gt;</type>
        <definition>amrex::PODVector&lt;ParticleReal*, Allocator&lt;ParticleReal*&gt; &gt; amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::m_runtime_r_ptrs</definition>
        <argsstring></argsstring>
        <name>m_runtime_r_ptrs</name>
        <qualifiedname>amrex::ParticleTile::m_runtime_r_ptrs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1308" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1ae172244722fde937a7ba5a8a60a5ff99" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1PODVector" kindref="compound">amrex::PODVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *, Allocator&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> * &gt; &gt;</type>
        <definition>amrex::PODVector&lt;int*, Allocator&lt;int*&gt; &gt; amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::m_runtime_i_ptrs</definition>
        <argsstring></argsstring>
        <name>m_runtime_i_ptrs</name>
        <qualifiedname>amrex::ParticleTile::m_runtime_i_ptrs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1309" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1aa1f069375a3a442593c218fc4911de6d" prot="private" static="no" mutable="yes">
        <type><ref refid="classamrex_1_1PODVector" kindref="compound">amrex::PODVector</ref>&lt; const ParticleReal *, Allocator&lt; const ParticleReal * &gt; &gt;</type>
        <definition>amrex::PODVector&lt;const ParticleReal*, Allocator&lt;const ParticleReal*&gt; &gt; amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::m_runtime_r_cptrs</definition>
        <argsstring></argsstring>
        <name>m_runtime_r_cptrs</name>
        <qualifiedname>amrex::ParticleTile::m_runtime_r_cptrs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1311" column="30" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1a168b67cee9983016eb4a811d740523e2" prot="private" static="no" mutable="yes">
        <type><ref refid="classamrex_1_1PODVector" kindref="compound">amrex::PODVector</ref>&lt; const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *, Allocator&lt; const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> * &gt; &gt;</type>
        <definition>amrex::PODVector&lt;const int*, Allocator&lt;const int*&gt; &gt; amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::m_runtime_i_cptrs</definition>
        <argsstring></argsstring>
        <name>m_runtime_i_cptrs</name>
        <qualifiedname>amrex::ParticleTile::m_runtime_i_cptrs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1312" column="29" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1a84686ee6d52c6077a3007ccc355c70bc" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1a337aceb06d1f93486e6593ff058c0a93" kindref="member">amrex::Gpu::HostVector</ref>&lt; ParticleReal * &gt;</type>
        <definition>amrex::Gpu::HostVector&lt;ParticleReal*&gt; amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::m_h_runtime_r_ptrs</definition>
        <argsstring></argsstring>
        <name>m_h_runtime_r_ptrs</name>
        <qualifiedname>amrex::ParticleTile::m_h_runtime_r_ptrs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1314" column="28" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1a3436758dffeaf35f5a789cc3044b4fc2" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1a337aceb06d1f93486e6593ff058c0a93" kindref="member">amrex::Gpu::HostVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> * &gt;</type>
        <definition>amrex::Gpu::HostVector&lt;int*&gt; amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::m_h_runtime_i_ptrs</definition>
        <argsstring></argsstring>
        <name>m_h_runtime_i_ptrs</name>
        <qualifiedname>amrex::ParticleTile::m_h_runtime_i_ptrs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1315" column="28" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1a320930fbc7b1e5ee8788ae1fa458c3da" prot="private" static="no" mutable="yes">
        <type><ref refid="namespaceamrex_1_1Gpu_1a337aceb06d1f93486e6593ff058c0a93" kindref="member">amrex::Gpu::HostVector</ref>&lt; const ParticleReal * &gt;</type>
        <definition>amrex::Gpu::HostVector&lt;const ParticleReal*&gt; amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::m_h_runtime_r_cptrs</definition>
        <argsstring></argsstring>
        <name>m_h_runtime_r_cptrs</name>
        <qualifiedname>amrex::ParticleTile::m_h_runtime_r_cptrs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1317" column="36" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1a9f66d16240dd600998ef45e05274d7c7" prot="private" static="no" mutable="yes">
        <type><ref refid="namespaceamrex_1_1Gpu_1a337aceb06d1f93486e6593ff058c0a93" kindref="member">amrex::Gpu::HostVector</ref>&lt; const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> * &gt;</type>
        <definition>amrex::Gpu::HostVector&lt;const int*&gt; amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::m_h_runtime_i_cptrs</definition>
        <argsstring></argsstring>
        <name>m_h_runtime_i_cptrs</name>
        <qualifiedname>amrex::ParticleTile::m_h_runtime_i_cptrs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1318" column="36" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1318" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a070fcef33e908cba36039a6fdf1d1c53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::ParticleTile</definition>
        <argsstring>()=default</argsstring>
        <name>ParticleTile</name>
        <qualifiedname>amrex::ParticleTile::ParticleTile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="745" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a6c64ca4be4201041261922655c37781e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::~ParticleTile</definition>
        <argsstring>()=default</argsstring>
        <name>~ParticleTile</name>
        <qualifiedname>amrex::ParticleTile::~ParticleTile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="748" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a209d248bf4daf81d95a3e176b6754b45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::ParticleTile</definition>
        <argsstring>(ParticleTile const &amp;)=delete</argsstring>
        <name>ParticleTile</name>
        <qualifiedname>amrex::ParticleTile::ParticleTile</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1ParticleTile" kindref="compound">ParticleTile</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="750" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a28ae7d1aa4c1e8d5a479203a9099835c" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::ParticleTile</definition>
        <argsstring>(ParticleTile &amp;&amp;) noexcept=default</argsstring>
        <name>ParticleTile</name>
        <qualifiedname>amrex::ParticleTile::ParticleTile</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1ParticleTile" kindref="compound">ParticleTile</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="751" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a952bbcd35df0bd3a0f969f8c8132c850" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structamrex_1_1ParticleTile" kindref="compound">ParticleTile</ref> &amp;</type>
        <definition>ParticleTile &amp; amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::operator=</definition>
        <argsstring>(ParticleTile const &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::ParticleTile::operator=</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1ParticleTile" kindref="compound">ParticleTile</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="753" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a207649c83f3dc2af085a3f5600c6cc72" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1ParticleTile" kindref="compound">ParticleTile</ref> &amp;</type>
        <definition>ParticleTile &amp; amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::operator=</definition>
        <argsstring>(ParticleTile &amp;&amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::ParticleTile::operator=</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1ParticleTile" kindref="compound">ParticleTile</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="754" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a2c59bdc55920f1b88aa4a5ac1a877e58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::define</definition>
        <argsstring>(int a_num_runtime_real, int a_num_runtime_int, std::vector&lt; std::string &gt; *soa_rdata_names=nullptr, std::vector&lt; std::string &gt; *soa_idata_names=nullptr)</argsstring>
        <name>define</name>
        <qualifiedname>amrex::ParticleTile::define</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>a_num_runtime_real</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>a_num_runtime_int</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; *</type>
          <declname>soa_rdata_names</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; *</type>
          <declname>soa_idata_names</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="757" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="757" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1af0f0e616393a552d2bde49f930babbae" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type>decltype(auto)</type>
        <definition>decltype(auto) amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::id</definition>
        <argsstring>(int index) &amp;</argsstring>
        <name>id</name>
        <qualifiedname>amrex::ParticleTile::id</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="773" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="773" bodyend="779"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a36f9ab05aec0c6ff6c10e60af0dc01d2" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type>decltype(auto)</type>
        <definition>decltype(auto) amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::id</definition>
        <argsstring>(int index) const &amp;</argsstring>
        <name>id</name>
        <qualifiedname>amrex::ParticleTile::id</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="782" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="782" bodyend="788"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1acd6829f21f92c9aba7864a790b9200df" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type>decltype(auto)</type>
        <definition>decltype(auto) amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::cpu</definition>
        <argsstring>(int index) &amp;</argsstring>
        <name>cpu</name>
        <qualifiedname>amrex::ParticleTile::cpu</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="791" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="791" bodyend="797"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1abddb89433aca18a1eb4c513c44a9c621" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type>decltype(auto)</type>
        <definition>decltype(auto) amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::cpu</definition>
        <argsstring>(int index) const &amp;</argsstring>
        <name>cpu</name>
        <qualifiedname>amrex::ParticleTile::cpu</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="800" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="800" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1aacae5bf79c36f4d866e05e9c5699c02b" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type><ref refid="structamrex_1_1ParticleTile_1a043db0d4cd2205027b4308f459496b79" kindref="member">RealType</ref> &amp;</type>
        <definition>RealType &amp; amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::pos</definition>
        <argsstring>(int index, int position_index) &amp;</argsstring>
        <name>pos</name>
        <qualifiedname>amrex::ParticleTile::pos</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>position_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="809" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="809" bodyend="820"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1acca412a3b97db15ba5e39f02b97d079c" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type><ref refid="structamrex_1_1ParticleTile_1a043db0d4cd2205027b4308f459496b79" kindref="member">RealType</ref></type>
        <definition>RealType amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::pos</definition>
        <argsstring>(int index, int position_index) const &amp;</argsstring>
        <name>pos</name>
        <qualifiedname>amrex::ParticleTile::pos</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>position_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="823" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="823" bodyend="830"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1aa92e6f89cc1ffded2a7e6063eaa359f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1ParticleTile_1aecc824f28d4d4735eb5ca3cb0d763216" kindref="member">AoS</ref> &amp;</type>
        <definition>AoS &amp; amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::GetArrayOfStructs</definition>
        <argsstring>()</argsstring>
        <name>GetArrayOfStructs</name>
        <qualifiedname>amrex::ParticleTile::GetArrayOfStructs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="832" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="832" bodyend="832"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a79cba7c6371b7d37766d6dd434a12ea8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structamrex_1_1ParticleTile_1aecc824f28d4d4735eb5ca3cb0d763216" kindref="member">AoS</ref> &amp;</type>
        <definition>const AoS &amp; amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::GetArrayOfStructs</definition>
        <argsstring>() const</argsstring>
        <name>GetArrayOfStructs</name>
        <qualifiedname>amrex::ParticleTile::GetArrayOfStructs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="833" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="833" bodyend="833"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ad126fbdb6fedc31647863a399b3f75b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1ParticleTile_1a22d017997751335e72bad98b42931cfc" kindref="member">SoA</ref> &amp;</type>
        <definition>SoA &amp; amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::GetStructOfArrays</definition>
        <argsstring>()</argsstring>
        <name>GetStructOfArrays</name>
        <qualifiedname>amrex::ParticleTile::GetStructOfArrays</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="835" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="835" bodyend="835"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a26c67e58849239cce3542c1f0f5bd66e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structamrex_1_1ParticleTile_1a22d017997751335e72bad98b42931cfc" kindref="member">SoA</ref> &amp;</type>
        <definition>const SoA &amp; amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::GetStructOfArrays</definition>
        <argsstring>() const</argsstring>
        <name>GetStructOfArrays</name>
        <qualifiedname>amrex::ParticleTile::GetStructOfArrays</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="836" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="836" bodyend="836"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1abe6aa2080bb4a68eaded92e7e3e6efd6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>amrex::ParticleTile::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="838" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="838" bodyend="838"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a4cb40d2d0fafeeb40b606421015705fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>amrex::ParticleTile::size</qualifiedname>
        <briefdescription>
<para>Returns the total number of particles (real and neighbor) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="844" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="844" bodyend="851"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a80fc21d171f28db059190e234fa36642" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::numParticles</definition>
        <argsstring>() const</argsstring>
        <name>numParticles</name>
        <qualifiedname>amrex::ParticleTile::numParticles</qualifiedname>
        <briefdescription>
<para>Returns the number of real particles (excluding neighbors) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="857" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="857" bodyend="864"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ae905e32844864462ec7a0ddf7a666ee4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::numRealParticles</definition>
        <argsstring>() const</argsstring>
        <name>numRealParticles</name>
        <qualifiedname>amrex::ParticleTile::numRealParticles</qualifiedname>
        <briefdescription>
<para>Returns the number of real particles (excluding neighbors) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="870" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="870" bodyend="877"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a67d9df04de8fa70ac8b9c43325febff3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::numNeighborParticles</definition>
        <argsstring>() const</argsstring>
        <name>numNeighborParticles</name>
        <qualifiedname>amrex::ParticleTile::numNeighborParticles</qualifiedname>
        <briefdescription>
<para>Returns the number of neighbor particles (excluding reals) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="883" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="883" bodyend="890"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a3b487649b8128cc37a6f35f913229d00" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::numTotalParticles</definition>
        <argsstring>() const</argsstring>
        <name>numTotalParticles</name>
        <qualifiedname>amrex::ParticleTile::numTotalParticles</qualifiedname>
        <briefdescription>
<para>Returns the total number of particles, real and neighbor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="896" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="896" bodyend="903"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a3418dd871a28056a9d8aa3ba12a016f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::setNumNeighbors</definition>
        <argsstring>(int num_neighbors)</argsstring>
        <name>setNumNeighbors</name>
        <qualifiedname>amrex::ParticleTile::setNumNeighbors</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>num_neighbors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="905" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="905" bodyend="911"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a0af47b01f2f8e3b42701af71a08ed2be" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::getNumNeighbors</definition>
        <argsstring>() const</argsstring>
        <name>getNumNeighbors</name>
        <qualifiedname>amrex::ParticleTile::getNumNeighbors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="913" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="913" bodyend="921"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1aad932266bb874a93f00fc2920ff69548" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::resize</definition>
        <argsstring>(std::size_t count)</argsstring>
        <name>resize</name>
        <qualifiedname>amrex::ParticleTile::resize</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="923" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="923" bodyend="929"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a1c3596011f3532785e35f93767dac146" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval><ref refid="structamrex_1_1ParticleTile_1a806d428c54ec86cc7e61edf954105f6f" kindref="member">ParticleType</ref></defval>
          </param>
          <param>
            <type>std::enable_if_t&lt;!T::is_soa_particle, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::push_back</definition>
        <argsstring>(const ParticleType &amp;p)</argsstring>
        <name>push_back</name>
        <qualifiedname>amrex::ParticleTile::push_back</qualifiedname>
        <param>
          <type>const <ref refid="structamrex_1_1ParticleTile_1a806d428c54ec86cc7e61edf954105f6f" kindref="member">ParticleType</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add one particle to this tile. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="935" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="935" bodyend="935"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a58ff9d1415aa8e4eee3fd76955d36429" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
            <declname>NR</declname>
            <defname>NR</defname>
            <defval>NArrayReal</defval>
          </param>
          <param>
            <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
            <declname>NI</declname>
            <defname>NI</defname>
            <defval>NArrayInt</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; NR !=0||NI !=0, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <declname>foo</declname>
            <defname>foo</defname>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::push_back</definition>
        <argsstring>(const SuperParticleType &amp;sp)</argsstring>
        <name>push_back</name>
        <qualifiedname>amrex::ParticleTile::push_back</qualifiedname>
        <param>
          <type>const <ref refid="structamrex_1_1ParticleTile_1acdece46bb48b940977bf9efe198779c4" kindref="member">SuperParticleType</ref> &amp;</type>
          <declname>sp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add one particle to this tile. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="942" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="942" bodyend="973"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1af54fdaaae348f3ef6c4f9ec72ed5d7aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::push_back_real</definition>
        <argsstring>(int comp, ParticleReal v)</argsstring>
        <name>push_back_real</name>
        <qualifiedname>amrex::ParticleTile::push_back_real</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>comp</declname>
        </param>
        <param>
          <type>ParticleReal</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a Real value to the struct-of-arrays at index comp. This sets the data for one particle. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="979" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="979" bodyend="981"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a920fbf546aa0d61637897696c29bf54c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::push_back_real</definition>
        <argsstring>(const std::array&lt; ParticleReal, NArrayReal &gt; &amp;v)</argsstring>
        <name>push_back_real</name>
        <qualifiedname>amrex::ParticleTile::push_back_real</qualifiedname>
        <param>
          <type>const std::array&lt; ParticleReal, NArrayReal &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add Real values to the struct-of-arrays, for all comps at once. This sets the data for one particle. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="987" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="987" bodyend="991"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a2ac59039f3803da57f27367c22c71c12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::push_back_real</definition>
        <argsstring>(int comp, const ParticleReal *beg, const ParticleReal *end)</argsstring>
        <name>push_back_real</name>
        <qualifiedname>amrex::ParticleTile::push_back_real</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>comp</declname>
        </param>
        <param>
          <type>const ParticleReal *</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>const ParticleReal *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a range of Real values to the struct-of-arrays for the given comp. This sets the data for several particles at once. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="997" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="997" bodyend="1000"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ab23ddb423d3fb51829919af42de5a48f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::push_back_real</definition>
        <argsstring>(int comp, amrex::Vector&lt; amrex::ParticleReal &gt;::const_iterator beg, amrex::Vector&lt; amrex::ParticleReal &gt;::const_iterator end)</argsstring>
        <name>push_back_real</name>
        <qualifiedname>amrex::ParticleTile::push_back_real</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>comp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">amrex::Vector</ref>&lt; amrex::ParticleReal &gt;::const_iterator</type>
          <declname>beg</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">amrex::Vector</ref>&lt; amrex::ParticleReal &gt;::const_iterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a range of Real values to the struct-of-arrays for the given comp. This sets the data for several particles at once. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1006" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1006" bodyend="1008"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a0273a779aabd06b96f98466ee8553d14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::push_back_real</definition>
        <argsstring>(int comp, amrex::Vector&lt; amrex::ParticleReal &gt; const &amp;vec)</argsstring>
        <name>push_back_real</name>
        <qualifiedname>amrex::ParticleTile::push_back_real</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>comp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">amrex::Vector</ref>&lt; amrex::ParticleReal &gt; const &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a range of Real values to the struct-of-arrays for the given comp. This sets the data for several particles at once. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1014" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1014" bodyend="1016"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ad62dabd419e0030589fc00e5e1880f5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::push_back_real</definition>
        <argsstring>(int comp, std::size_t npar, ParticleReal v)</argsstring>
        <name>push_back_real</name>
        <qualifiedname>amrex::ParticleTile::push_back_real</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>comp</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>npar</declname>
        </param>
        <param>
          <type>ParticleReal</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add npar copies of the Real value v to the struct-of-arrays for the given comp. This sets the data for several particles at once. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1022" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1022" bodyend="1025"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ac46b6f7938c08ba5c71b24c97d8f72a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::push_back_int</definition>
        <argsstring>(int comp, int v)</argsstring>
        <name>push_back_int</name>
        <qualifiedname>amrex::ParticleTile::push_back_int</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add an int value to the struct-of-arrays at index comp. This sets the data for one particle. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1031" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1031" bodyend="1033"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ab1acd5ea97873b2886a1d5b1cca48aab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::push_back_int</definition>
        <argsstring>(const std::array&lt; int, NArrayInt &gt; &amp;v)</argsstring>
        <name>push_back_int</name>
        <qualifiedname>amrex::ParticleTile::push_back_int</qualifiedname>
        <param>
          <type>const std::array&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, NArrayInt &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add int values to the struct-of-arrays, for all comps at once. This sets the data for one particle. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1039" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1039" bodyend="1043"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1adeb45488fb08fe702e74efadfe55d8d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::push_back_int</definition>
        <argsstring>(int comp, const int *beg, const int *end)</argsstring>
        <name>push_back_int</name>
        <qualifiedname>amrex::ParticleTile::push_back_int</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>comp</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a range of int values to the struct-of-arrays for the given comp. This sets the data for several particles at once. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1049" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1049" bodyend="1052"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a8ed93fa556cb0e6d76ab31855179c490" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::push_back_int</definition>
        <argsstring>(int comp, amrex::Vector&lt; int &gt;::const_iterator beg, amrex::Vector&lt; int &gt;::const_iterator end)</argsstring>
        <name>push_back_int</name>
        <qualifiedname>amrex::ParticleTile::push_back_int</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>comp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">amrex::Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;::const_iterator</type>
          <declname>beg</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">amrex::Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;::const_iterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a range of int values to the struct-of-arrays for the given comp. This sets the data for several particles at once. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1058" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1058" bodyend="1060"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a83112560fe0053d36f1d4e2377d82a23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::push_back_int</definition>
        <argsstring>(int comp, amrex::Vector&lt; int &gt; const &amp;vec)</argsstring>
        <name>push_back_int</name>
        <qualifiedname>amrex::ParticleTile::push_back_int</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>comp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">amrex::Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; const &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a range of int values to the struct-of-arrays for the given comp. This sets the data for several particles at once. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1066" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1066" bodyend="1068"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ad303886262e966726980ee5bf9202cfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::push_back_int</definition>
        <argsstring>(int comp, std::size_t npar, int v)</argsstring>
        <name>push_back_int</name>
        <qualifiedname>amrex::ParticleTile::push_back_int</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>comp</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>npar</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add npar copies of the int value v to the struct-of-arrays for the given comp. This sets the data for several particles at once. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1074" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1074" bodyend="1077"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a01a4c2d3cd20e84801f49f31c8305349" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::NumRealComps</definition>
        <argsstring>() const noexcept</argsstring>
        <name>NumRealComps</name>
        <qualifiedname>amrex::ParticleTile::NumRealComps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1079" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1079" bodyend="1079"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a036135b388b4a68fc8fdac9e6c5572f5" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::NumIntComps</definition>
        <argsstring>() const noexcept</argsstring>
        <name>NumIntComps</name>
        <qualifiedname>amrex::ParticleTile::NumIntComps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1081" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1081" bodyend="1081"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a94b4d2e5f90cdfc640740a2dc1b8be4e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::NumRuntimeRealComps</definition>
        <argsstring>() const noexcept</argsstring>
        <name>NumRuntimeRealComps</name>
        <qualifiedname>amrex::ParticleTile::NumRuntimeRealComps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1083" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1083" bodyend="1083"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1abbd0ed100a7511e702da44782d06f360" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::NumRuntimeIntComps</definition>
        <argsstring>() const noexcept</argsstring>
        <name>NumRuntimeIntComps</name>
        <qualifiedname>amrex::ParticleTile::NumRuntimeIntComps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1085" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1085" bodyend="1085"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a7ff65a82757f35dd00d2ce7435be5a71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::shrink_to_fit</definition>
        <argsstring>()</argsstring>
        <name>shrink_to_fit</name>
        <qualifiedname>amrex::ParticleTile::shrink_to_fit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1087" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1087" bodyend="1105"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a3a9ab299dccc5bc6e57018fddb101099" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Long</type>
        <definition>Long amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::capacity</definition>
        <argsstring>() const</argsstring>
        <name>capacity</name>
        <qualifiedname>amrex::ParticleTile::capacity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1107" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1107" bodyend="1127"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a86eb1ec5508c3b90a8c473b7fdb74103" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::swap</definition>
        <argsstring>(ParticleTile&lt; ParticleType, NArrayReal, NArrayInt, Allocator &gt; &amp;other) noexcept</argsstring>
        <name>swap</name>
        <qualifiedname>amrex::ParticleTile::swap</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1ParticleTile" kindref="compound">ParticleTile</ref>&lt; <ref refid="structamrex_1_1ParticleTile_1a806d428c54ec86cc7e61edf954105f6f" kindref="member">ParticleType</ref>, NArrayReal, NArrayInt, Allocator &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1129" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1129" bodyend="1147"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a4f939dec8914785b6fbc7b02f5d0b202" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1ParticleTile_1a0aeb55b6a15d10428c88a314412914c5" kindref="member">ParticleTileDataType</ref></type>
        <definition>ParticleTileDataType amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::getParticleTileData</definition>
        <argsstring>()</argsstring>
        <name>getParticleTileData</name>
        <qualifiedname>amrex::ParticleTile::getParticleTileData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1149" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1149" bodyend="1223"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a7e6f09a853acf5ffd1d4d365ebd60d35" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1ParticleTile_1a45e1a00c0cf61da02993d8b31b4cb431" kindref="member">ConstParticleTileDataType</ref></type>
        <definition>ConstParticleTileDataType amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;::getConstParticleTileData</definition>
        <argsstring>() const</argsstring>
        <name>getConstParticleTileData</name>
        <qualifiedname>amrex::ParticleTile::getConstParticleTileData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="1225" column="31" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="1225" bodyend="1299"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>amrex::ArenaAllocatorBase&lt; T, ArenaWrapper &gt;</label>
        <link refid="structamrex_1_1ArenaAllocatorBase"/>
        <childnode refid="5" relation="usage">
          <edgelabel>m_ar</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>DefaultAllocator&lt; ParticleReal * &gt;</label>
        <link refid="classamrex_1_1ArenaAllocator"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>DefaultAllocator&lt; const ParticleReal * &gt;</label>
        <link refid="classamrex_1_1ArenaAllocator"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>DefaultAllocator&lt; const int * &gt;</label>
        <link refid="classamrex_1_1ArenaAllocator"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>DefaultAllocator&lt; int * &gt;</label>
        <link refid="classamrex_1_1ArenaAllocator"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>amrex::PODVector&lt; ParticleReal * &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::PODVector&lt; ParticleReal *, DefaultAllocator&lt; ParticleReal * &gt; &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>amrex::PODVector&lt; const ParticleReal * &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>amrex::PODVector&lt; const ParticleReal *, DefaultAllocator&lt; const ParticleReal * &gt; &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>amrex::PODVector&lt; const int * &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>amrex::PODVector&lt; const int *, DefaultAllocator&lt; const int * &gt; &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>amrex::PODVector&lt; int * &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>amrex::PODVector&lt; int *, DefaultAllocator&lt; int * &gt; &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>T</label>
      </node>
      <node id="5">
        <label>amrex::ArenaWrapper</label>
        <link refid="structamrex_1_1ArenaWrapper"/>
      </node>
      <node id="1">
        <label>amrex::ParticleTile&lt; T_ParticleType, NArrayReal, NArrayInt, Allocator &gt;</label>
        <link refid="structamrex_1_1ParticleTile"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_runtime_r_ptrs</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_runtime_i_ptrs</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_runtime_r_cptrs</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_runtime_i_cptrs</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_h_runtime_r_ptrs</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>m_h_runtime_i_ptrs</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>m_h_runtime_r_cptrs</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>m_h_runtime_i_cptrs</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>std::allocator&lt; T &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>std::allocator&lt; T &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>std::allocator&lt; T &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>std::allocator&lt; T &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="713" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="714" bodyend="1319"/>
    <listofallmembers>
      <member refid="structamrex_1_1ParticleTile_1ab2be35f77e9e2ed231e5406b9f011dc3" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>AllocatorType</name></member>
      <member refid="structamrex_1_1ParticleTile_1aecc824f28d4d4735eb5ca3cb0d763216" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>AoS</name></member>
      <member refid="structamrex_1_1ParticleTile_1a3a9ab299dccc5bc6e57018fddb101099" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>capacity</name></member>
      <member refid="structamrex_1_1ParticleTile_1a45e1a00c0cf61da02993d8b31b4cb431" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>ConstParticleTileDataType</name></member>
      <member refid="structamrex_1_1ParticleTile_1acd6829f21f92c9aba7864a790b9200df" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>cpu</name></member>
      <member refid="structamrex_1_1ParticleTile_1abddb89433aca18a1eb4c513c44a9c621" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>cpu</name></member>
      <member refid="structamrex_1_1ParticleTile_1a2c59bdc55920f1b88aa4a5ac1a877e58" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>define</name></member>
      <member refid="structamrex_1_1ParticleTile_1abe6aa2080bb4a68eaded92e7e3e6efd6" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>empty</name></member>
      <member refid="structamrex_1_1ParticleTile_1aa92e6f89cc1ffded2a7e6063eaa359f8" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>GetArrayOfStructs</name></member>
      <member refid="structamrex_1_1ParticleTile_1a79cba7c6371b7d37766d6dd434a12ea8" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>GetArrayOfStructs</name></member>
      <member refid="structamrex_1_1ParticleTile_1a7e6f09a853acf5ffd1d4d365ebd60d35" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>getConstParticleTileData</name></member>
      <member refid="structamrex_1_1ParticleTile_1a0af47b01f2f8e3b42701af71a08ed2be" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>getNumNeighbors</name></member>
      <member refid="structamrex_1_1ParticleTile_1a4f939dec8914785b6fbc7b02f5d0b202" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>getParticleTileData</name></member>
      <member refid="structamrex_1_1ParticleTile_1ad126fbdb6fedc31647863a399b3f75b3" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>GetStructOfArrays</name></member>
      <member refid="structamrex_1_1ParticleTile_1a26c67e58849239cce3542c1f0f5bd66e" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>GetStructOfArrays</name></member>
      <member refid="structamrex_1_1ParticleTile_1af0f0e616393a552d2bde49f930babbae" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>id</name></member>
      <member refid="structamrex_1_1ParticleTile_1a36f9ab05aec0c6ff6c10e60af0dc01d2" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>id</name></member>
      <member refid="structamrex_1_1ParticleTile_1ab198bf3467e469c8c1bfa13f1c53799a" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>IntVector</name></member>
      <member refid="structamrex_1_1ParticleTile_1a434377380cf9f4dd45362080837b6ec4" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_aos_tile</name></member>
      <member refid="structamrex_1_1ParticleTile_1ad4a6e09ba4f2ef496ba35c3dac4c19b4" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_defined</name></member>
      <member refid="structamrex_1_1ParticleTile_1a9f66d16240dd600998ef45e05274d7c7" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_h_runtime_i_cptrs</name></member>
      <member refid="structamrex_1_1ParticleTile_1a3436758dffeaf35f5a789cc3044b4fc2" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_h_runtime_i_ptrs</name></member>
      <member refid="structamrex_1_1ParticleTile_1a320930fbc7b1e5ee8788ae1fa458c3da" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_h_runtime_r_cptrs</name></member>
      <member refid="structamrex_1_1ParticleTile_1a84686ee6d52c6077a3007ccc355c70bc" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_h_runtime_r_ptrs</name></member>
      <member refid="structamrex_1_1ParticleTile_1a168b67cee9983016eb4a811d740523e2" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_runtime_i_cptrs</name></member>
      <member refid="structamrex_1_1ParticleTile_1ae172244722fde937a7ba5a8a60a5ff99" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_runtime_i_ptrs</name></member>
      <member refid="structamrex_1_1ParticleTile_1aa1f069375a3a442593c218fc4911de6d" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_runtime_r_cptrs</name></member>
      <member refid="structamrex_1_1ParticleTile_1a6e6255a32ada9fcf2655a94d474ece11" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_runtime_r_ptrs</name></member>
      <member refid="structamrex_1_1ParticleTile_1acfdbf84efe0aae5266a28545a2e45480" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_soa_tile</name></member>
      <member refid="structamrex_1_1ParticleTile_1a27974d2d46e3698a69b1997e905072e8" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>NAI</name></member>
      <member refid="structamrex_1_1ParticleTile_1a7d38648767509798f1fab24a293b49eb" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>NAR</name></member>
      <member refid="structamrex_1_1ParticleTile_1a2e52440bc21e01affff077fff37edb44" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>NStructInt</name></member>
      <member refid="structamrex_1_1ParticleTile_1af37f9208b1b9908daad6789415d20f81" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>NStructReal</name></member>
      <member refid="structamrex_1_1ParticleTile_1a036135b388b4a68fc8fdac9e6c5572f5" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>NumIntComps</name></member>
      <member refid="structamrex_1_1ParticleTile_1a67d9df04de8fa70ac8b9c43325febff3" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>numNeighborParticles</name></member>
      <member refid="structamrex_1_1ParticleTile_1a80fc21d171f28db059190e234fa36642" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>numParticles</name></member>
      <member refid="structamrex_1_1ParticleTile_1a01a4c2d3cd20e84801f49f31c8305349" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>NumRealComps</name></member>
      <member refid="structamrex_1_1ParticleTile_1ae905e32844864462ec7a0ddf7a666ee4" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>numRealParticles</name></member>
      <member refid="structamrex_1_1ParticleTile_1abbd0ed100a7511e702da44782d06f360" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>NumRuntimeIntComps</name></member>
      <member refid="structamrex_1_1ParticleTile_1a94b4d2e5f90cdfc640740a2dc1b8be4e" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>NumRuntimeRealComps</name></member>
      <member refid="structamrex_1_1ParticleTile_1a3b487649b8128cc37a6f35f913229d00" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>numTotalParticles</name></member>
      <member refid="structamrex_1_1ParticleTile_1a952bbcd35df0bd3a0f969f8c8132c850" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>operator=</name></member>
      <member refid="structamrex_1_1ParticleTile_1a207649c83f3dc2af085a3f5600c6cc72" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>operator=</name></member>
      <member refid="structamrex_1_1ParticleTile_1a070fcef33e908cba36039a6fdf1d1c53" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>ParticleTile</name></member>
      <member refid="structamrex_1_1ParticleTile_1a209d248bf4daf81d95a3e176b6754b45" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>ParticleTile</name></member>
      <member refid="structamrex_1_1ParticleTile_1a28ae7d1aa4c1e8d5a479203a9099835c" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>ParticleTile</name></member>
      <member refid="structamrex_1_1ParticleTile_1a0aeb55b6a15d10428c88a314412914c5" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>ParticleTileDataType</name></member>
      <member refid="structamrex_1_1ParticleTile_1a806d428c54ec86cc7e61edf954105f6f" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>ParticleType</name></member>
      <member refid="structamrex_1_1ParticleTile_1aacae5bf79c36f4d866e05e9c5699c02b" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>pos</name></member>
      <member refid="structamrex_1_1ParticleTile_1acca412a3b97db15ba5e39f02b97d079c" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>pos</name></member>
      <member refid="structamrex_1_1ParticleTile_1a1c3596011f3532785e35f93767dac146" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back</name></member>
      <member refid="structamrex_1_1ParticleTile_1a58ff9d1415aa8e4eee3fd76955d36429" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back</name></member>
      <member refid="structamrex_1_1ParticleTile_1ac46b6f7938c08ba5c71b24c97d8f72a5" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_int</name></member>
      <member refid="structamrex_1_1ParticleTile_1ab1acd5ea97873b2886a1d5b1cca48aab" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_int</name></member>
      <member refid="structamrex_1_1ParticleTile_1adeb45488fb08fe702e74efadfe55d8d7" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_int</name></member>
      <member refid="structamrex_1_1ParticleTile_1a8ed93fa556cb0e6d76ab31855179c490" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_int</name></member>
      <member refid="structamrex_1_1ParticleTile_1a83112560fe0053d36f1d4e2377d82a23" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_int</name></member>
      <member refid="structamrex_1_1ParticleTile_1ad303886262e966726980ee5bf9202cfb" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_int</name></member>
      <member refid="structamrex_1_1ParticleTile_1af54fdaaae348f3ef6c4f9ec72ed5d7aa" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_real</name></member>
      <member refid="structamrex_1_1ParticleTile_1a920fbf546aa0d61637897696c29bf54c" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_real</name></member>
      <member refid="structamrex_1_1ParticleTile_1a2ac59039f3803da57f27367c22c71c12" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_real</name></member>
      <member refid="structamrex_1_1ParticleTile_1ab23ddb423d3fb51829919af42de5a48f" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_real</name></member>
      <member refid="structamrex_1_1ParticleTile_1a0273a779aabd06b96f98466ee8553d14" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_real</name></member>
      <member refid="structamrex_1_1ParticleTile_1ad62dabd419e0030589fc00e5e1880f5a" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_real</name></member>
      <member refid="structamrex_1_1ParticleTile_1a043db0d4cd2205027b4308f459496b79" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>RealType</name></member>
      <member refid="structamrex_1_1ParticleTile_1adf1dfc735a7f9d3508e434da7e87b632" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>RealVector</name></member>
      <member refid="structamrex_1_1ParticleTile_1aad932266bb874a93f00fc2920ff69548" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>resize</name></member>
      <member refid="structamrex_1_1ParticleTile_1a3418dd871a28056a9d8aa3ba12a016f6" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>setNumNeighbors</name></member>
      <member refid="structamrex_1_1ParticleTile_1a7ff65a82757f35dd00d2ce7435be5a71" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>shrink_to_fit</name></member>
      <member refid="structamrex_1_1ParticleTile_1a4cb40d2d0fafeeb40b606421015705fa" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>size</name></member>
      <member refid="structamrex_1_1ParticleTile_1a22d017997751335e72bad98b42931cfc" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>SoA</name></member>
      <member refid="structamrex_1_1ParticleTile_1a00d52f45cf7e8a4b3c30cfb48e7bca78" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>StorageParticleType</name></member>
      <member refid="structamrex_1_1ParticleTile_1acdece46bb48b940977bf9efe198779c4" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>SuperParticleType</name></member>
      <member refid="structamrex_1_1ParticleTile_1a86eb1ec5508c3b90a8c473b7fdb74103" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>swap</name></member>
      <member refid="structamrex_1_1ParticleTile_1a6c64ca4be4201041261922655c37781e" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>~ParticleTile</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
