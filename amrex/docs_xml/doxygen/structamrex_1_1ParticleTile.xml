<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structamrex_1_1ParticleTile" kind="struct" language="C++" prot="public">
    <compoundname>amrex::ParticleTile</compoundname>
    <includes refid="AMReX__ParticleTile_8H" local="no">AMReX_ParticleTile.H</includes>
    <templateparamlist>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NStructReal</declname>
        <defname>NStructReal</defname>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NStructInt</declname>
        <defname>NStructInt</defname>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NArrayReal</declname>
        <defname>NArrayReal</defname>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NArrayInt</declname>
        <defname>NArrayInt</defname>
      </param>
      <param>
        <type>template&lt; class &gt; class</type>
        <declname>Allocator</declname>
        <defname>Allocator</defname>
        <defval><ref refid="namespaceamrex_1aa2b9c07eea8f0178a1973357cf04ea62" kindref="member">DefaultAllocator</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1a5483516f2556f3f7b8573562d3c9960d" prot="public" static="no">
        <type><ref refid="structamrex_1_1Particle" kindref="compound">Particle</ref>&lt; NStructReal, NStructInt &gt;</type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::ParticleType =  Particle&lt;NStructReal, NStructInt&gt;</definition>
        <argsstring></argsstring>
        <name>ParticleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="240" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1a85053ba927a183f72d714140f906614e" prot="public" static="no">
        <type><ref refid="structamrex_1_1Particle" kindref="compound">Particle</ref>&lt; NStructReal+NArrayReal, NStructInt+NArrayInt &gt;</type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::SuperParticleType =  Particle&lt;NStructReal + NArrayReal, NStructInt + NArrayInt&gt;</definition>
        <argsstring></argsstring>
        <name>SuperParticleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="244" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1a7eb3695771d4b220b840a1cac81b29ff" prot="public" static="no">
        <type><ref refid="classamrex_1_1ArrayOfStructs" kindref="compound">ArrayOfStructs</ref>&lt; NStructReal, NStructInt, Allocator &gt;</type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::AoS =  ArrayOfStructs&lt;NStructReal, NStructInt, Allocator&gt;</definition>
        <argsstring></argsstring>
        <name>AoS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="246" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1aa25203ed24adf960a987ce5ef7220b44" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ArrayOfStructs_1af66049acde2b283b60693042d0f47a63" kindref="member">AoS::ParticleVector</ref></type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::ParticleVector =  typename AoS::ParticleVector</definition>
        <argsstring></argsstring>
        <name>ParticleVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="247" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1ade1b30ff7538bb2df769629138cad8b9" prot="public" static="no">
        <type><ref refid="structamrex_1_1StructOfArrays" kindref="compound">StructOfArrays</ref>&lt; NArrayReal, NArrayInt, Allocator &gt;</type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::SoA =  StructOfArrays&lt;NArrayReal, NArrayInt, Allocator&gt;</definition>
        <argsstring></argsstring>
        <name>SoA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="249" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1a91dc7ec131347b6fd962980f8323dae1" prot="public" static="no">
        <type>typename <ref refid="structamrex_1_1StructOfArrays_1ab3198bb12bd084d439c9b75f4f76c0ca" kindref="member">SoA::RealVector</ref></type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::RealVector =  typename SoA::RealVector</definition>
        <argsstring></argsstring>
        <name>RealVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="250" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1a2716cfe81286d96640e5bb44d151d9b5" prot="public" static="no">
        <type>typename <ref refid="structamrex_1_1StructOfArrays_1a402275e8f3db925ba4fb6e60e391b333" kindref="member">SoA::IntVector</ref></type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::IntVector =  typename SoA::IntVector</definition>
        <argsstring></argsstring>
        <name>IntVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="251" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1a23fa6ccbaf739013d56b3cd99d230a60" prot="public" static="no">
        <type><ref refid="structamrex_1_1ParticleTileData" kindref="compound">ParticleTileData</ref>&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;</type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::ParticleTileDataType =  ParticleTileData&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;</definition>
        <argsstring></argsstring>
        <name>ParticleTileDataType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="253" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1af2db570b27f95df100aa7239ea025a4c" prot="public" static="no">
        <type><ref refid="structamrex_1_1ConstParticleTileData" kindref="compound">ConstParticleTileData</ref>&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;</type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::ConstParticleTileDataType =  ConstParticleTileData&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;</definition>
        <argsstring></argsstring>
        <name>ConstParticleTileDataType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="254" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="254" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1a3798066d8330b035b0679a18bcf55747" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::NAR</definition>
        <argsstring></argsstring>
        <name>NAR</name>
        <initializer>= NArrayReal</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="241" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1a234f66d81e35ea602712a866f65b82c2" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::NAI</definition>
        <argsstring></argsstring>
        <name>NAI</name>
        <initializer>= NArrayInt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="242" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="242" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1a8f0eac18a93093f25e053d2b69b65296" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1ParticleTile_1a7eb3695771d4b220b840a1cac81b29ff" kindref="member">AoS</ref></type>
        <definition>AoS amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::m_aos_tile</definition>
        <argsstring></argsstring>
        <name>m_aos_tile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="603" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="603" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1a1a6ff23c8a31ec5d6485b55adf176e9e" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1ParticleTile_1ade1b30ff7538bb2df769629138cad8b9" kindref="member">SoA</ref></type>
        <definition>SoA amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::m_soa_tile</definition>
        <argsstring></argsstring>
        <name>m_soa_tile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="604" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="604" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1acddd7cc57b44806b3c83f7b9690c9a58" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::m_defined</definition>
        <argsstring></argsstring>
        <name>m_defined</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="606" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="606" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1a094ecbaf29e3d8786d48786dda4ad8af" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1PODVector" kindref="compound">amrex::PODVector</ref>&lt; ParticleReal *, Allocator&lt; ParticleReal * &gt; &gt;</type>
        <definition>amrex::PODVector&lt;ParticleReal*, Allocator&lt;ParticleReal*&gt; &gt; amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::m_runtime_r_ptrs</definition>
        <argsstring></argsstring>
        <name>m_runtime_r_ptrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="608" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="608" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1ad8c76875f9314245f35d586b4fda19f2" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1PODVector" kindref="compound">amrex::PODVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *, Allocator&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> * &gt; &gt;</type>
        <definition>amrex::PODVector&lt;int*, Allocator&lt;int*&gt; &gt; amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::m_runtime_i_ptrs</definition>
        <argsstring></argsstring>
        <name>m_runtime_i_ptrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="609" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="609" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1a9e1b4ef4d4f1f4525bcead40545085c6" prot="private" static="no" mutable="yes">
        <type><ref refid="classamrex_1_1PODVector" kindref="compound">amrex::PODVector</ref>&lt; const ParticleReal *, Allocator&lt; const ParticleReal * &gt; &gt;</type>
        <definition>amrex::PODVector&lt;const ParticleReal*, Allocator&lt;const ParticleReal*&gt; &gt; amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::m_runtime_r_cptrs</definition>
        <argsstring></argsstring>
        <name>m_runtime_r_cptrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="611" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="611" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1aab1e925a9417621e4a7c5b219176a145" prot="private" static="no" mutable="yes">
        <type><ref refid="classamrex_1_1PODVector" kindref="compound">amrex::PODVector</ref>&lt; const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *, Allocator&lt; const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> * &gt; &gt;</type>
        <definition>amrex::PODVector&lt;const int*, Allocator&lt;const int*&gt; &gt; amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::m_runtime_i_cptrs</definition>
        <argsstring></argsstring>
        <name>m_runtime_i_cptrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="612" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="612" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a4064ea6c328ec75ac8c1a961bd384a29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::ParticleTile</definition>
        <argsstring>()</argsstring>
        <name>ParticleTile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="256" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="256" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a1e83f5e3c25e0173f368ffad4cc2c4be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::define</definition>
        <argsstring>(int a_num_runtime_real, int a_num_runtime_int)</argsstring>
        <name>define</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>a_num_runtime_real</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>a_num_runtime_int</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="260" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="260" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a52cd6c8037edb1070014f00b4bf2dce1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1ParticleTile_1a7eb3695771d4b220b840a1cac81b29ff" kindref="member">AoS</ref> &amp;</type>
        <definition>AoS&amp; amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::GetArrayOfStructs</definition>
        <argsstring>()</argsstring>
        <name>GetArrayOfStructs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="270" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="270" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ac9b86c734da62b380179dd3ef2e70693" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structamrex_1_1ParticleTile_1a7eb3695771d4b220b840a1cac81b29ff" kindref="member">AoS</ref> &amp;</type>
        <definition>const AoS&amp; amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::GetArrayOfStructs</definition>
        <argsstring>() const</argsstring>
        <name>GetArrayOfStructs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="271" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="271" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a6f01478455e0c466802fa9939dbd886e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1ParticleTile_1ade1b30ff7538bb2df769629138cad8b9" kindref="member">SoA</ref> &amp;</type>
        <definition>SoA&amp; amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::GetStructOfArrays</definition>
        <argsstring>()</argsstring>
        <name>GetStructOfArrays</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="273" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="273" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a610da4ef20dc389abc7a8e3899b27f25" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structamrex_1_1ParticleTile_1ade1b30ff7538bb2df769629138cad8b9" kindref="member">SoA</ref> &amp;</type>
        <definition>const SoA&amp; amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::GetStructOfArrays</definition>
        <argsstring>() const</argsstring>
        <name>GetStructOfArrays</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="274" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="274" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ab75e4f108f8fa384c92ebf166364dcb4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="276" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="276" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1af4d312e43c46e2ebd366dc0963fd3896" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns the total number of particles (real and neighbor) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="283" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="283" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a2bb2587e5a871a984e2b70df0cf0d870" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::numParticles</definition>
        <argsstring>() const</argsstring>
        <name>numParticles</name>
        <briefdescription>
<para>Returns the number of real particles (excluding neighbors) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="289" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="289" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1aaad86fa450d536a282fced6fb08f2f5f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::numRealParticles</definition>
        <argsstring>() const</argsstring>
        <name>numRealParticles</name>
        <briefdescription>
<para>Returns the number of real particles (excluding neighbors) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="295" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="295" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a6ee9585203e4a15e176050a56a7b1dbf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::numNeighborParticles</definition>
        <argsstring>() const</argsstring>
        <name>numNeighborParticles</name>
        <briefdescription>
<para>Returns the number of neighbor particles (excluding reals) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="301" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="301" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ad22f5d43f1349d670667abd6134c82a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::numTotalParticles</definition>
        <argsstring>() const</argsstring>
        <name>numTotalParticles</name>
        <briefdescription>
<para>Returns the total number of particles, real and neighbor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="307" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="307" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a53a33bf9b266e526bfaf7dfa0ff2b813" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::setNumNeighbors</definition>
        <argsstring>(int num_neighbors)</argsstring>
        <name>setNumNeighbors</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>num_neighbors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="309" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="309" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a0b5daeed890ad1681d6d5efb263d1d45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::getNumNeighbors</definition>
        <argsstring>()</argsstring>
        <name>getNumNeighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="315" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="315" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a94f3a4f391bfb3dac770717d5a9270b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::resize</definition>
        <argsstring>(std::size_t count)</argsstring>
        <name>resize</name>
        <param>
          <type>std::size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="321" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="321" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a28e1684c3daf3114705c8737fa0b526b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::push_back</definition>
        <argsstring>(const ParticleType &amp;p)</argsstring>
        <name>push_back</name>
        <param>
          <type>const <ref refid="structamrex_1_1ParticleTile_1a5483516f2556f3f7b8573562d3c9960d" kindref="member">ParticleType</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add one particle to this tile. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="330" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="330" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1aaa22f040138b37b71974429c01c46772" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
            <declname>NR</declname>
            <defname>NR</defname>
            <defval>NArrayReal</defval>
          </param>
          <param>
            <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
            <declname>NI</declname>
            <defname>NI</defname>
            <defval>NArrayInt</defval>
          </param>
          <param>
            <type><ref refid="namespaceamrex_1a8690d4c6386d001b328b07257fe628a0" kindref="member">EnableIf_t</ref>&lt; NR !=0||NI !=0, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <declname>foo</declname>
            <defname>foo</defname>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::push_back</definition>
        <argsstring>(const SuperParticleType &amp;sp)</argsstring>
        <name>push_back</name>
        <param>
          <type>const <ref refid="structamrex_1_1ParticleTile_1a85053ba927a183f72d714140f906614e" kindref="member">SuperParticleType</ref> &amp;</type>
          <declname>sp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add one particle to this tile. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="337" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="337" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1abe65fea82c76b01d25b580cb51d010b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::push_back_real</definition>
        <argsstring>(int comp, ParticleReal v)</argsstring>
        <name>push_back_real</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>comp</declname>
        </param>
        <param>
          <type>ParticleReal</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a Real value to the struct-of-arrays at index comp. This sets the data for one particle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="365" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="365" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ac44fade5412c189846d84078b4175e09" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::push_back_real</definition>
        <argsstring>(const std::array&lt; ParticleReal, NArrayReal &gt; &amp;v)</argsstring>
        <name>push_back_real</name>
        <param>
          <type>const std::array&lt; ParticleReal, NArrayReal &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add Real values to the struct-of-arrays, for all comps at once. This sets the data for one particle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="373" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="373" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ad16a71f65f177e64acc2a9a569e2aa4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::push_back_real</definition>
        <argsstring>(int comp, const ParticleReal *beg, const ParticleReal *end)</argsstring>
        <name>push_back_real</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>comp</declname>
        </param>
        <param>
          <type>const ParticleReal *</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>const ParticleReal *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a range of Real values to the struct-of-arrays for the given comp. This sets the data for several particles at once. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="383" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="383" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a1013ca03cb3abee5f186d0d2c36d91ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::push_back_real</definition>
        <argsstring>(int comp, std::size_t npar, ParticleReal v)</argsstring>
        <name>push_back_real</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>comp</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>npar</declname>
        </param>
        <param>
          <type>ParticleReal</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add npar copies of the Real value v to the struct-of-arrays for the given comp. This sets the data for several particles at once. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="392" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="392" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a9e7cea5a0daeb5e0c68ef9ad5553b52a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::push_back_int</definition>
        <argsstring>(int comp, int v)</argsstring>
        <name>push_back_int</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add an int value to the struct-of-arrays at index comp. This sets the data for one particle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="401" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="401" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a84f0480fe10a0695abf74e9f8b397454" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::push_back_int</definition>
        <argsstring>(const std::array&lt; int, NArrayInt &gt; &amp;v)</argsstring>
        <name>push_back_int</name>
        <param>
          <type>const std::array&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, NArrayInt &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add int values to the struct-of-arrays, for all comps at once. This sets the data for one particle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="409" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="409" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a58d94753478e65af1b75a010eec7a1d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::push_back_int</definition>
        <argsstring>(int comp, const int *beg, const int *end)</argsstring>
        <name>push_back_int</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>comp</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a range of int values to the struct-of-arrays for the given comp. This sets the data for several particles at once. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="419" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="419" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a9216fb4aafebb089b04bda28d871e059" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::push_back_int</definition>
        <argsstring>(int comp, std::size_t npar, int v)</argsstring>
        <name>push_back_int</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>comp</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>npar</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add npar copies of the int value v to the struct-of-arrays for the given comp. This sets the data for several particles at once. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="428" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="428" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1af5d8ef589ad837a1592c6abfa2f2dfdc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::NumRealComps</definition>
        <argsstring>() const noexcept</argsstring>
        <name>NumRealComps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="433" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="433" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ae11d1c29beed7de669f820c987d745b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::NumIntComps</definition>
        <argsstring>() const noexcept</argsstring>
        <name>NumIntComps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="435" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="435" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ad475b60507ef0209053f4918daaae582" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::NumRuntimeRealComps</definition>
        <argsstring>() const noexcept</argsstring>
        <name>NumRuntimeRealComps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="437" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="437" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1af963358e57d7687246bc221d43736307" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::NumRuntimeIntComps</definition>
        <argsstring>() const noexcept</argsstring>
        <name>NumRuntimeIntComps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="439" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="439" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a45869795e913fccf95c5e2e4dd7bdb38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::shrink_to_fit</definition>
        <argsstring>()</argsstring>
        <name>shrink_to_fit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="441" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="441" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ac941d888f17e8bbac20d4e97c2de1180" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Long</type>
        <definition>Long amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::capacity</definition>
        <argsstring>() const</argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="457" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="457" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1aeee13b50dd607e21f796914d331234fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::swap</definition>
        <argsstring>(ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt; &amp;other)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="structamrex_1_1ParticleTile" kindref="compound">ParticleTile</ref>&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="475" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="475" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ac2003b52b2e11d272ed2100829a23389" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1ParticleTile_1a23fa6ccbaf739013d56b3cd99d230a60" kindref="member">ParticleTileDataType</ref></type>
        <definition>ParticleTileDataType amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::getParticleTileData</definition>
        <argsstring>()</argsstring>
        <name>getParticleTileData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="491" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="491" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1adb525e5db24040c9692f59ec5984a8bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1ParticleTile_1af2db570b27f95df100aa7239ea025a4c" kindref="member">ConstParticleTileDataType</ref></type>
        <definition>ConstParticleTileDataType amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;::getConstParticleTileData</definition>
        <argsstring>() const</argsstring>
        <name>getConstParticleTileData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="546" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="546" bodyend="599"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4217">
        <label>Allocator&lt; const int * &gt;</label>
      </node>
      <node id="4212">
        <label>amrex::PODVector&lt; ParticleType, Allocator&lt; ParticleType &gt; &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="4213" relation="public-inheritance">
        </childnode>
        <childnode refid="4214" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="4214">
        <label>amrex::Particle&lt; T_NReal, T_NInt &gt;</label>
        <link refid="structamrex_1_1Particle"/>
        <childnode refid="4215" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4219">
        <label>Allocator&lt; ParticleReal * &gt;</label>
      </node>
      <node id="4205">
        <label>amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt, Allocator &gt;</label>
        <link refid="structamrex_1_1ParticleTile"/>
        <childnode refid="4206" relation="usage">
          <edgelabel>m_runtime_r_cptrs</edgelabel>
        </childnode>
        <childnode refid="4208" relation="usage">
          <edgelabel>m_soa_tile</edgelabel>
        </childnode>
        <childnode refid="4209" relation="usage">
          <edgelabel>m_runtime_i_ptrs</edgelabel>
        </childnode>
        <childnode refid="4211" relation="usage">
          <edgelabel>m_aos_tile</edgelabel>
        </childnode>
        <childnode refid="4216" relation="usage">
          <edgelabel>m_runtime_i_cptrs</edgelabel>
        </childnode>
        <childnode refid="4218" relation="usage">
          <edgelabel>m_runtime_r_ptrs</edgelabel>
        </childnode>
      </node>
      <node id="4213">
        <label>Allocator&lt; ParticleType &gt;</label>
      </node>
      <node id="4207">
        <label>Allocator&lt; const ParticleReal * &gt;</label>
      </node>
      <node id="4210">
        <label>Allocator&lt; int *&gt;</label>
      </node>
      <node id="4215">
        <label>amrex::ParticleBase&lt; ParticleReal, T_NReal, T_NInt &gt;</label>
        <link refid="structamrex_1_1ParticleBase"/>
      </node>
      <node id="4216">
        <label>amrex::PODVector&lt; const int *, Allocator&lt; const int *&gt; &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="4217" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4208">
        <label>amrex::StructOfArrays&lt; NArrayReal, NArrayInt, Allocator &gt;</label>
        <link refid="structamrex_1_1StructOfArrays"/>
      </node>
      <node id="4209">
        <label>amrex::PODVector&lt; int *, Allocator&lt; int *&gt; &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="4210" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4206">
        <label>amrex::PODVector&lt; const ParticleReal *, Allocator&lt; const ParticleReal *&gt; &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="4207" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4211">
        <label>amrex::ArrayOfStructs&lt; NStructReal, NStructInt, Allocator &gt;</label>
        <link refid="classamrex_1_1ArrayOfStructs"/>
        <childnode refid="4212" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="4218">
        <label>amrex::PODVector&lt; ParticleReal *, Allocator&lt; ParticleReal *&gt; &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="4219" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" line="239" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="238" bodyend="613"/>
    <listofallmembers>
      <member refid="structamrex_1_1ParticleTile_1a7eb3695771d4b220b840a1cac81b29ff" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>AoS</name></member>
      <member refid="structamrex_1_1ParticleTile_1ac941d888f17e8bbac20d4e97c2de1180" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>capacity</name></member>
      <member refid="structamrex_1_1ParticleTile_1af2db570b27f95df100aa7239ea025a4c" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>ConstParticleTileDataType</name></member>
      <member refid="structamrex_1_1ParticleTile_1a1e83f5e3c25e0173f368ffad4cc2c4be" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>define</name></member>
      <member refid="structamrex_1_1ParticleTile_1ab75e4f108f8fa384c92ebf166364dcb4" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>empty</name></member>
      <member refid="structamrex_1_1ParticleTile_1a52cd6c8037edb1070014f00b4bf2dce1" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>GetArrayOfStructs</name></member>
      <member refid="structamrex_1_1ParticleTile_1ac9b86c734da62b380179dd3ef2e70693" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>GetArrayOfStructs</name></member>
      <member refid="structamrex_1_1ParticleTile_1adb525e5db24040c9692f59ec5984a8bd" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>getConstParticleTileData</name></member>
      <member refid="structamrex_1_1ParticleTile_1a0b5daeed890ad1681d6d5efb263d1d45" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>getNumNeighbors</name></member>
      <member refid="structamrex_1_1ParticleTile_1ac2003b52b2e11d272ed2100829a23389" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>getParticleTileData</name></member>
      <member refid="structamrex_1_1ParticleTile_1a6f01478455e0c466802fa9939dbd886e" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>GetStructOfArrays</name></member>
      <member refid="structamrex_1_1ParticleTile_1a610da4ef20dc389abc7a8e3899b27f25" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>GetStructOfArrays</name></member>
      <member refid="structamrex_1_1ParticleTile_1a2716cfe81286d96640e5bb44d151d9b5" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>IntVector</name></member>
      <member refid="structamrex_1_1ParticleTile_1a8f0eac18a93093f25e053d2b69b65296" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_aos_tile</name></member>
      <member refid="structamrex_1_1ParticleTile_1acddd7cc57b44806b3c83f7b9690c9a58" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_defined</name></member>
      <member refid="structamrex_1_1ParticleTile_1aab1e925a9417621e4a7c5b219176a145" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_runtime_i_cptrs</name></member>
      <member refid="structamrex_1_1ParticleTile_1ad8c76875f9314245f35d586b4fda19f2" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_runtime_i_ptrs</name></member>
      <member refid="structamrex_1_1ParticleTile_1a9e1b4ef4d4f1f4525bcead40545085c6" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_runtime_r_cptrs</name></member>
      <member refid="structamrex_1_1ParticleTile_1a094ecbaf29e3d8786d48786dda4ad8af" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_runtime_r_ptrs</name></member>
      <member refid="structamrex_1_1ParticleTile_1a1a6ff23c8a31ec5d6485b55adf176e9e" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_soa_tile</name></member>
      <member refid="structamrex_1_1ParticleTile_1a234f66d81e35ea602712a866f65b82c2" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>NAI</name></member>
      <member refid="structamrex_1_1ParticleTile_1a3798066d8330b035b0679a18bcf55747" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>NAR</name></member>
      <member refid="structamrex_1_1ParticleTile_1ae11d1c29beed7de669f820c987d745b2" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>NumIntComps</name></member>
      <member refid="structamrex_1_1ParticleTile_1a6ee9585203e4a15e176050a56a7b1dbf" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>numNeighborParticles</name></member>
      <member refid="structamrex_1_1ParticleTile_1a2bb2587e5a871a984e2b70df0cf0d870" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>numParticles</name></member>
      <member refid="structamrex_1_1ParticleTile_1af5d8ef589ad837a1592c6abfa2f2dfdc" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>NumRealComps</name></member>
      <member refid="structamrex_1_1ParticleTile_1aaad86fa450d536a282fced6fb08f2f5f" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>numRealParticles</name></member>
      <member refid="structamrex_1_1ParticleTile_1af963358e57d7687246bc221d43736307" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>NumRuntimeIntComps</name></member>
      <member refid="structamrex_1_1ParticleTile_1ad475b60507ef0209053f4918daaae582" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>NumRuntimeRealComps</name></member>
      <member refid="structamrex_1_1ParticleTile_1ad22f5d43f1349d670667abd6134c82a2" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>numTotalParticles</name></member>
      <member refid="structamrex_1_1ParticleTile_1a4064ea6c328ec75ac8c1a961bd384a29" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>ParticleTile</name></member>
      <member refid="structamrex_1_1ParticleTile_1a23fa6ccbaf739013d56b3cd99d230a60" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>ParticleTileDataType</name></member>
      <member refid="structamrex_1_1ParticleTile_1a5483516f2556f3f7b8573562d3c9960d" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>ParticleType</name></member>
      <member refid="structamrex_1_1ParticleTile_1aa25203ed24adf960a987ce5ef7220b44" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>ParticleVector</name></member>
      <member refid="structamrex_1_1ParticleTile_1a28e1684c3daf3114705c8737fa0b526b" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back</name></member>
      <member refid="structamrex_1_1ParticleTile_1aaa22f040138b37b71974429c01c46772" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back</name></member>
      <member refid="structamrex_1_1ParticleTile_1a9e7cea5a0daeb5e0c68ef9ad5553b52a" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_int</name></member>
      <member refid="structamrex_1_1ParticleTile_1a84f0480fe10a0695abf74e9f8b397454" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_int</name></member>
      <member refid="structamrex_1_1ParticleTile_1a58d94753478e65af1b75a010eec7a1d7" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_int</name></member>
      <member refid="structamrex_1_1ParticleTile_1a9216fb4aafebb089b04bda28d871e059" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_int</name></member>
      <member refid="structamrex_1_1ParticleTile_1abe65fea82c76b01d25b580cb51d010b2" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_real</name></member>
      <member refid="structamrex_1_1ParticleTile_1ac44fade5412c189846d84078b4175e09" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_real</name></member>
      <member refid="structamrex_1_1ParticleTile_1ad16a71f65f177e64acc2a9a569e2aa4f" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_real</name></member>
      <member refid="structamrex_1_1ParticleTile_1a1013ca03cb3abee5f186d0d2c36d91ba" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_real</name></member>
      <member refid="structamrex_1_1ParticleTile_1a91dc7ec131347b6fd962980f8323dae1" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>RealVector</name></member>
      <member refid="structamrex_1_1ParticleTile_1a94f3a4f391bfb3dac770717d5a9270b5" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>resize</name></member>
      <member refid="structamrex_1_1ParticleTile_1a53a33bf9b266e526bfaf7dfa0ff2b813" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>setNumNeighbors</name></member>
      <member refid="structamrex_1_1ParticleTile_1a45869795e913fccf95c5e2e4dd7bdb38" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>shrink_to_fit</name></member>
      <member refid="structamrex_1_1ParticleTile_1af4d312e43c46e2ebd366dc0963fd3896" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>size</name></member>
      <member refid="structamrex_1_1ParticleTile_1ade1b30ff7538bb2df769629138cad8b9" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>SoA</name></member>
      <member refid="structamrex_1_1ParticleTile_1a85053ba927a183f72d714140f906614e" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>SuperParticleType</name></member>
      <member refid="structamrex_1_1ParticleTile_1aeee13b50dd607e21f796914d331234fb" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>swap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
