<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structamrex_1_1ParticleTile" kind="struct" language="C++" prot="public">
    <compoundname>amrex::ParticleTile</compoundname>
    <includes refid="AMReX__ParticleTile_8H" local="no">AMReX_ParticleTile.H</includes>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>NStructReal</declname>
        <defname>NStructReal</defname>
      </param>
      <param>
        <type>int</type>
        <declname>NStructInt</declname>
        <defname>NStructInt</defname>
      </param>
      <param>
        <type>int</type>
        <declname>NArrayReal</declname>
        <defname>NArrayReal</defname>
      </param>
      <param>
        <type>int</type>
        <declname>NArrayInt</declname>
        <defname>NArrayInt</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1ad1c67821792f0858b9cdb5a6a98a1b14" prot="public" static="no">
        <type><ref refid="structamrex_1_1Particle" kindref="compound">Particle</ref>&lt; NStructReal, NStructInt &gt;</type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParticleType =  Particle&lt;NStructReal, NStructInt&gt;</definition>
        <argsstring></argsstring>
        <name>ParticleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="94" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1ab10926418fb9524de6ea3f822892e1d3" prot="public" static="no">
        <type><ref refid="classamrex_1_1ArrayOfStructs" kindref="compound">ArrayOfStructs</ref>&lt; NStructReal, NStructInt &gt;</type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::AoS =  ArrayOfStructs&lt;NStructReal, NStructInt&gt;</definition>
        <argsstring></argsstring>
        <name>AoS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="96" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1a2b2ec393547273e1b25b09dd8a2462de" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ArrayOfStructs_1ae30aa8c493160f31bfda73126c09eed9" kindref="member">AoS::ParticleVector</ref></type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParticleVector =  typename AoS::ParticleVector</definition>
        <argsstring></argsstring>
        <name>ParticleVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="97" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1ae6b0bb596eb811ce93f8ba2ec6b46589" prot="public" static="no">
        <type><ref refid="structamrex_1_1StructOfArrays" kindref="compound">StructOfArrays</ref>&lt; NArrayReal, NArrayInt &gt;</type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::SoA =  StructOfArrays&lt;NArrayReal, NArrayInt&gt;</definition>
        <argsstring></argsstring>
        <name>SoA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="99" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1a1842dcadd4e11fcf017bb29c91491a56" prot="public" static="no">
        <type>typename <ref refid="structamrex_1_1StructOfArrays_1ac78510b872fa9a2af6ffaaaeb9ecebfb" kindref="member">SoA::RealVector</ref></type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::RealVector =  typename SoA::RealVector</definition>
        <argsstring></argsstring>
        <name>RealVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="100" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1aa0ea8933b8870b1e808211a000be6614" prot="public" static="no">
        <type>typename <ref refid="structamrex_1_1StructOfArrays_1a1309b958dfc6b3244609e24544a2b37e" kindref="member">SoA::IntVector</ref></type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::IntVector =  typename SoA::IntVector</definition>
        <argsstring></argsstring>
        <name>IntVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="101" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1a4959983c67b2002a49436a21f96a9bf0" prot="public" static="no">
        <type><ref refid="structamrex_1_1ParticleTileData" kindref="compound">ParticleTileData</ref>&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;</type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParticleTileDataType =  ParticleTileData&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;</definition>
        <argsstring></argsstring>
        <name>ParticleTileDataType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="103" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1a6786be581cdd72d7c4ff85fc370caf37" prot="public" static="no">
        <type><ref refid="structamrex_1_1ConstParticleTileData" kindref="compound">ConstParticleTileData</ref>&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;</type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ConstParticleTileDataType =  ConstParticleTileData&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;</definition>
        <argsstring></argsstring>
        <name>ConstParticleTileDataType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="104" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1af7c73b9664c355ab9415113e1c032c88" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1ParticleTile_1ab10926418fb9524de6ea3f822892e1d3" kindref="member">AoS</ref></type>
        <definition>AoS amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_aos_tile</definition>
        <argsstring></argsstring>
        <name>m_aos_tile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="276" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1a0be60c0c485396843c637a1022f5f260" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1ParticleTile_1ae6b0bb596eb811ce93f8ba2ec6b46589" kindref="member">SoA</ref></type>
        <definition>SoA amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_soa_tile</definition>
        <argsstring></argsstring>
        <name>m_soa_tile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="277" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1afc18f10586bee426a6c8c17e87420e28" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_defined</definition>
        <argsstring></argsstring>
        <name>m_defined</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="279" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="279" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a69d090ad7b759b9e22d1a67259b2df56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParticleTile</definition>
        <argsstring>()</argsstring>
        <name>ParticleTile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="106" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1aae530181f5744e4622012f6128c1c712" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::define</definition>
        <argsstring>(int a_num_runtime_real, int a_num_runtime_int)</argsstring>
        <name>define</name>
        <param>
          <type>int</type>
          <declname>a_num_runtime_real</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a_num_runtime_int</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="110" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="110" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ae7a25ea8a470f799053e431918ee6699" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1ParticleTile_1ab10926418fb9524de6ea3f822892e1d3" kindref="member">AoS</ref> &amp;</type>
        <definition>AoS&amp; amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::GetArrayOfStructs</definition>
        <argsstring>()</argsstring>
        <name>GetArrayOfStructs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="116" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a8d95866b677d5c175717eba9f44922bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structamrex_1_1ParticleTile_1ab10926418fb9524de6ea3f822892e1d3" kindref="member">AoS</ref> &amp;</type>
        <definition>const AoS&amp; amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::GetArrayOfStructs</definition>
        <argsstring>() const </argsstring>
        <name>GetArrayOfStructs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="117" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ab58f152b1c9b0ec6c7e7556ef3273868" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1ParticleTile_1ae6b0bb596eb811ce93f8ba2ec6b46589" kindref="member">SoA</ref> &amp;</type>
        <definition>SoA&amp; amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::GetStructOfArrays</definition>
        <argsstring>()</argsstring>
        <name>GetStructOfArrays</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="119" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a02fe1dcb8e8389f64f916449409e63ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structamrex_1_1ParticleTile_1ae6b0bb596eb811ce93f8ba2ec6b46589" kindref="member">SoA</ref> &amp;</type>
        <definition>const SoA&amp; amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::GetStructOfArrays</definition>
        <argsstring>() const </argsstring>
        <name>GetStructOfArrays</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="120" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ac83e79dd2e2babd95c5938cf89164802" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::empty</definition>
        <argsstring>() const </argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="122" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a1784ab6d8ccaf82cf65799ce336289a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns the total number of particles (real and neighbor) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="129" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a80b9e96e04c429ac908a7772478f3f29" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::numParticles</definition>
        <argsstring>() const </argsstring>
        <name>numParticles</name>
        <briefdescription>
<para>Returns the number of real particles (excluding neighbors) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="135" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1aee3b5ee01b533e4729d0420aa4005cbc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::numRealParticles</definition>
        <argsstring>() const </argsstring>
        <name>numRealParticles</name>
        <briefdescription>
<para>Returns the number of real particles (excluding neighbors) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="141" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a662308d06f08d47942da99598a776615" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::numNeighborParticles</definition>
        <argsstring>() const </argsstring>
        <name>numNeighborParticles</name>
        <briefdescription>
<para>Returns the number of neighbor particles (excluding reals) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="147" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a4b41c54867f5d9ebac044ed58d21410f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::numTotalParticles</definition>
        <argsstring>() const </argsstring>
        <name>numTotalParticles</name>
        <briefdescription>
<para>Returns the total number of particles, real and neighbor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="153" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a50a75be63954c07060b18d5abe885cf8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::setNumNeighbors</definition>
        <argsstring>(int num_neighbors)</argsstring>
        <name>setNumNeighbors</name>
        <param>
          <type>int</type>
          <declname>num_neighbors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="155" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="155" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a5e74996de3d89aa1995de42bf9b9a8da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::getNumNeighbors</definition>
        <argsstring>()</argsstring>
        <name>getNumNeighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="161" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="161" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a01c6271c92fabf63be8ceef8e8bf3ebc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::resize</definition>
        <argsstring>(std::size_t count)</argsstring>
        <name>resize</name>
        <param>
          <type>std::size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="167" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="167" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a8b973bf091c4a1b348c77e3a0bcc9bf6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::push_back</definition>
        <argsstring>(const ParticleType &amp;p)</argsstring>
        <name>push_back</name>
        <param>
          <type>const <ref refid="structamrex_1_1ParticleTile_1ad1c67821792f0858b9cdb5a6a98a1b14" kindref="member">ParticleType</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add one particle to this tile. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="176" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="176" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a796489360bf44d5e6cb7f728aa577c0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::push_back_real</definition>
        <argsstring>(int comp, Real v)</argsstring>
        <name>push_back_real</name>
        <param>
          <type>int</type>
          <declname>comp</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a Real value to the struct-of-arrays at index comp. This sets the data for one particle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="182" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="182" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a03a7e16d333b1f95b6f5f7884a498473" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::push_back_real</definition>
        <argsstring>(const std::array&lt; Real, NArrayReal &gt; &amp;v)</argsstring>
        <name>push_back_real</name>
        <param>
          <type>const std::array&lt; Real, NArrayReal &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add Real values to the struct-of-arrays, for all comps at once. This sets the data for one particle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="190" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="190" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1abf242e0a766f0dd4c734782134a00adc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::push_back_real</definition>
        <argsstring>(int comp, const Real *beg, const Real *end)</argsstring>
        <name>push_back_real</name>
        <param>
          <type>int</type>
          <declname>comp</declname>
        </param>
        <param>
          <type>const Real *</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>const Real *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a range of Real values to the struct-of-arrays for the given comp. This sets the data for several particles at once. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="200" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="200" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1af3367372fba363e641912b4216c87620" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::push_back_real</definition>
        <argsstring>(int comp, std::size_t npar, Real v)</argsstring>
        <name>push_back_real</name>
        <param>
          <type>int</type>
          <declname>comp</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>npar</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add npar copies of the Real value v to the struct-of-arrays for the given comp. This sets the data for several particles at once. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="209" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1aaa93fb5f97848d4083e3072478beef19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::push_back_int</definition>
        <argsstring>(int comp, int v)</argsstring>
        <name>push_back_int</name>
        <param>
          <type>int</type>
          <declname>comp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add an int value to the struct-of-arrays at index comp. This sets the data for one particle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="218" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="218" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a381fade9ed18d842350fbac57bb474ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::push_back_int</definition>
        <argsstring>(const std::array&lt; int, NArrayInt &gt; &amp;v)</argsstring>
        <name>push_back_int</name>
        <param>
          <type>const std::array&lt; int, NArrayInt &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add int values to the struct-of-arrays, for all comps at once. This sets the data for one particle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="226" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="226" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a511592b9a1fec7fbaf7920fd9332e4cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::push_back_int</definition>
        <argsstring>(int comp, const int *beg, const int *end)</argsstring>
        <name>push_back_int</name>
        <param>
          <type>int</type>
          <declname>comp</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a range of int values to the struct-of-arrays for the given comp. This sets the data for several particles at once. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="236" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="236" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a968af2f28750e166c7523aed1329b3cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::push_back_int</definition>
        <argsstring>(int comp, std::size_t npar, int v)</argsstring>
        <name>push_back_int</name>
        <param>
          <type>int</type>
          <declname>comp</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>npar</declname>
        </param>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add npar copies of the int value v to the struct-of-arrays for the given comp. This sets the data for several particles at once. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="245" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="245" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a1c64973a5ecce5677fa7035946277092" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1ParticleTile_1a4959983c67b2002a49436a21f96a9bf0" kindref="member">ParticleTileDataType</ref></type>
        <definition>ParticleTileDataType amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::getParticleTileData</definition>
        <argsstring>()</argsstring>
        <name>getParticleTileData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="250" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="250" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1adce4b30ae3d92fa52f167a3bd59cc003" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1ParticleTile_1a6786be581cdd72d7c4ff85fc370caf37" kindref="member">ConstParticleTileDataType</ref></type>
        <definition>ConstParticleTileDataType amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::getConstParticleTileData</definition>
        <argsstring>() const </argsstring>
        <name>getConstParticleTileData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="262" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="262" bodyend="272"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5750">
        <label>amrex::ArrayOfStructs&lt; NStructReal, NStructInt &gt;</label>
        <link refid="classamrex_1_1ArrayOfStructs"/>
      </node>
      <node id="5749">
        <label>amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;</label>
        <link refid="structamrex_1_1ParticleTile"/>
        <childnode refid="5750" relation="usage">
          <edgelabel>m_aos_tile</edgelabel>
        </childnode>
        <childnode refid="5751" relation="usage">
          <edgelabel>m_soa_tile</edgelabel>
        </childnode>
      </node>
      <node id="5751">
        <label>amrex::StructOfArrays&lt; NArrayReal, NArrayInt &gt;</label>
        <link refid="structamrex_1_1StructOfArrays"/>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="93" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="92" bodyend="280"/>
    <listofallmembers>
      <member refid="structamrex_1_1ParticleTile_1ab10926418fb9524de6ea3f822892e1d3" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>AoS</name></member>
      <member refid="structamrex_1_1ParticleTile_1a6786be581cdd72d7c4ff85fc370caf37" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>ConstParticleTileDataType</name></member>
      <member refid="structamrex_1_1ParticleTile_1aae530181f5744e4622012f6128c1c712" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>define</name></member>
      <member refid="structamrex_1_1ParticleTile_1ac83e79dd2e2babd95c5938cf89164802" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>empty</name></member>
      <member refid="structamrex_1_1ParticleTile_1ae7a25ea8a470f799053e431918ee6699" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>GetArrayOfStructs</name></member>
      <member refid="structamrex_1_1ParticleTile_1a8d95866b677d5c175717eba9f44922bf" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>GetArrayOfStructs</name></member>
      <member refid="structamrex_1_1ParticleTile_1adce4b30ae3d92fa52f167a3bd59cc003" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>getConstParticleTileData</name></member>
      <member refid="structamrex_1_1ParticleTile_1a5e74996de3d89aa1995de42bf9b9a8da" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>getNumNeighbors</name></member>
      <member refid="structamrex_1_1ParticleTile_1a1c64973a5ecce5677fa7035946277092" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>getParticleTileData</name></member>
      <member refid="structamrex_1_1ParticleTile_1ab58f152b1c9b0ec6c7e7556ef3273868" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>GetStructOfArrays</name></member>
      <member refid="structamrex_1_1ParticleTile_1a02fe1dcb8e8389f64f916449409e63ef" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>GetStructOfArrays</name></member>
      <member refid="structamrex_1_1ParticleTile_1aa0ea8933b8870b1e808211a000be6614" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>IntVector</name></member>
      <member refid="structamrex_1_1ParticleTile_1af7c73b9664c355ab9415113e1c032c88" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_aos_tile</name></member>
      <member refid="structamrex_1_1ParticleTile_1afc18f10586bee426a6c8c17e87420e28" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_defined</name></member>
      <member refid="structamrex_1_1ParticleTile_1a0be60c0c485396843c637a1022f5f260" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_soa_tile</name></member>
      <member refid="structamrex_1_1ParticleTile_1a662308d06f08d47942da99598a776615" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>numNeighborParticles</name></member>
      <member refid="structamrex_1_1ParticleTile_1a80b9e96e04c429ac908a7772478f3f29" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>numParticles</name></member>
      <member refid="structamrex_1_1ParticleTile_1aee3b5ee01b533e4729d0420aa4005cbc" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>numRealParticles</name></member>
      <member refid="structamrex_1_1ParticleTile_1a4b41c54867f5d9ebac044ed58d21410f" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>numTotalParticles</name></member>
      <member refid="structamrex_1_1ParticleTile_1a69d090ad7b759b9e22d1a67259b2df56" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>ParticleTile</name></member>
      <member refid="structamrex_1_1ParticleTile_1a4959983c67b2002a49436a21f96a9bf0" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>ParticleTileDataType</name></member>
      <member refid="structamrex_1_1ParticleTile_1ad1c67821792f0858b9cdb5a6a98a1b14" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>ParticleType</name></member>
      <member refid="structamrex_1_1ParticleTile_1a2b2ec393547273e1b25b09dd8a2462de" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>ParticleVector</name></member>
      <member refid="structamrex_1_1ParticleTile_1a8b973bf091c4a1b348c77e3a0bcc9bf6" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back</name></member>
      <member refid="structamrex_1_1ParticleTile_1aaa93fb5f97848d4083e3072478beef19" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_int</name></member>
      <member refid="structamrex_1_1ParticleTile_1a381fade9ed18d842350fbac57bb474ac" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_int</name></member>
      <member refid="structamrex_1_1ParticleTile_1a511592b9a1fec7fbaf7920fd9332e4cc" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_int</name></member>
      <member refid="structamrex_1_1ParticleTile_1a968af2f28750e166c7523aed1329b3cd" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_int</name></member>
      <member refid="structamrex_1_1ParticleTile_1a796489360bf44d5e6cb7f728aa577c0f" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_real</name></member>
      <member refid="structamrex_1_1ParticleTile_1a03a7e16d333b1f95b6f5f7884a498473" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_real</name></member>
      <member refid="structamrex_1_1ParticleTile_1abf242e0a766f0dd4c734782134a00adc" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_real</name></member>
      <member refid="structamrex_1_1ParticleTile_1af3367372fba363e641912b4216c87620" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_real</name></member>
      <member refid="structamrex_1_1ParticleTile_1a1842dcadd4e11fcf017bb29c91491a56" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>RealVector</name></member>
      <member refid="structamrex_1_1ParticleTile_1a01c6271c92fabf63be8ceef8e8bf3ebc" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>resize</name></member>
      <member refid="structamrex_1_1ParticleTile_1a50a75be63954c07060b18d5abe885cf8" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>setNumNeighbors</name></member>
      <member refid="structamrex_1_1ParticleTile_1a1784ab6d8ccaf82cf65799ce336289a9" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>size</name></member>
      <member refid="structamrex_1_1ParticleTile_1ae6b0bb596eb811ce93f8ba2ec6b46589" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>SoA</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
