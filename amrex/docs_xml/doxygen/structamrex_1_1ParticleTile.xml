<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structamrex_1_1ParticleTile" kind="struct" language="C++" prot="public">
    <compoundname>amrex::ParticleTile</compoundname>
    <includes refid="AMReX__ParticleTile_8H" local="no">AMReX_ParticleTile.H</includes>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>NStructReal</declname>
        <defname>NStructReal</defname>
      </param>
      <param>
        <type>int</type>
        <declname>NStructInt</declname>
        <defname>NStructInt</defname>
      </param>
      <param>
        <type>int</type>
        <declname>NArrayReal</declname>
        <defname>NArrayReal</defname>
      </param>
      <param>
        <type>int</type>
        <declname>NArrayInt</declname>
        <defname>NArrayInt</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1ad1c67821792f0858b9cdb5a6a98a1b14" prot="public" static="no">
        <type><ref refid="structamrex_1_1Particle" kindref="compound">Particle</ref>&lt; NStructReal, NStructInt &gt;</type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParticleType =  Particle&lt;NStructReal, NStructInt&gt;</definition>
        <argsstring></argsstring>
        <name>ParticleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="234" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1ab10926418fb9524de6ea3f822892e1d3" prot="public" static="no">
        <type><ref refid="classamrex_1_1ArrayOfStructs" kindref="compound">ArrayOfStructs</ref>&lt; NStructReal, NStructInt &gt;</type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::AoS =  ArrayOfStructs&lt;NStructReal, NStructInt&gt;</definition>
        <argsstring></argsstring>
        <name>AoS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="238" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1a2b2ec393547273e1b25b09dd8a2462de" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ArrayOfStructs_1ae30aa8c493160f31bfda73126c09eed9" kindref="member">AoS::ParticleVector</ref></type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParticleVector =  typename AoS::ParticleVector</definition>
        <argsstring></argsstring>
        <name>ParticleVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="239" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1ae6b0bb596eb811ce93f8ba2ec6b46589" prot="public" static="no">
        <type><ref refid="structamrex_1_1StructOfArrays" kindref="compound">StructOfArrays</ref>&lt; NArrayReal, NArrayInt &gt;</type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::SoA =  StructOfArrays&lt;NArrayReal, NArrayInt&gt;</definition>
        <argsstring></argsstring>
        <name>SoA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="241" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1a1842dcadd4e11fcf017bb29c91491a56" prot="public" static="no">
        <type>typename <ref refid="structamrex_1_1StructOfArrays_1a73f2cf9dad2d339f42d99038cf3daaf5" kindref="member">SoA::RealVector</ref></type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::RealVector =  typename SoA::RealVector</definition>
        <argsstring></argsstring>
        <name>RealVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="242" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1aa0ea8933b8870b1e808211a000be6614" prot="public" static="no">
        <type>typename <ref refid="structamrex_1_1StructOfArrays_1a1309b958dfc6b3244609e24544a2b37e" kindref="member">SoA::IntVector</ref></type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::IntVector =  typename SoA::IntVector</definition>
        <argsstring></argsstring>
        <name>IntVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="243" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1a4959983c67b2002a49436a21f96a9bf0" prot="public" static="no">
        <type><ref refid="structamrex_1_1ParticleTileData" kindref="compound">ParticleTileData</ref>&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;</type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParticleTileDataType =  ParticleTileData&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;</definition>
        <argsstring></argsstring>
        <name>ParticleTileDataType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="245" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ParticleTile_1a6786be581cdd72d7c4ff85fc370caf37" prot="public" static="no">
        <type><ref refid="structamrex_1_1ConstParticleTileData" kindref="compound">ConstParticleTileData</ref>&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;</type>
        <definition>using amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ConstParticleTileDataType =  ConstParticleTileData&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;</definition>
        <argsstring></argsstring>
        <name>ConstParticleTileDataType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="246" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="246" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1ad11271ed18fb20c2bb82bf5393c7278b" prot="public" static="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::NAR</definition>
        <argsstring></argsstring>
        <name>NAR</name>
        <initializer>= NArrayReal</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="235" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1a3de14289ce7efa8dd3427042639d1af4" prot="public" static="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::NAI</definition>
        <argsstring></argsstring>
        <name>NAI</name>
        <initializer>= NArrayInt</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="236" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="236" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1af7c73b9664c355ab9415113e1c032c88" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1ParticleTile_1ab10926418fb9524de6ea3f822892e1d3" kindref="member">AoS</ref></type>
        <definition>AoS amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_aos_tile</definition>
        <argsstring></argsstring>
        <name>m_aos_tile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="462" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1a0be60c0c485396843c637a1022f5f260" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1ParticleTile_1ae6b0bb596eb811ce93f8ba2ec6b46589" kindref="member">SoA</ref></type>
        <definition>SoA amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_soa_tile</definition>
        <argsstring></argsstring>
        <name>m_soa_tile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="463" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1afc18f10586bee426a6c8c17e87420e28" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_defined</definition>
        <argsstring></argsstring>
        <name>m_defined</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="465" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="465" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1a6cbfd503aa61d9bc5493e0463e6cbb48" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; ParticleReal * &gt;</type>
        <definition>Gpu::DeviceVector&lt;ParticleReal*&gt; amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_runtime_r_ptrs</definition>
        <argsstring></argsstring>
        <name>m_runtime_r_ptrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="467" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1aeee5929003d6233fd65632e93e197f00" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; int * &gt;</type>
        <definition>Gpu::DeviceVector&lt;int*&gt; amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_runtime_i_ptrs</definition>
        <argsstring></argsstring>
        <name>m_runtime_i_ptrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="468" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1a311ebbe151be2428c73372672d0b1556" prot="private" static="no" mutable="yes">
        <type><ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; const ParticleReal * &gt;</type>
        <definition>Gpu::DeviceVector&lt;const ParticleReal*&gt; amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_runtime_r_cptrs</definition>
        <argsstring></argsstring>
        <name>m_runtime_r_cptrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="470" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ParticleTile_1a75b7205cff94bd78c7b78fb45f77b433" prot="private" static="no" mutable="yes">
        <type><ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; const int * &gt;</type>
        <definition>Gpu::DeviceVector&lt;const int*&gt; amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_runtime_i_cptrs</definition>
        <argsstring></argsstring>
        <name>m_runtime_i_cptrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="471" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="471" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a69d090ad7b759b9e22d1a67259b2df56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParticleTile</definition>
        <argsstring>()</argsstring>
        <name>ParticleTile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="248" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1aae530181f5744e4622012f6128c1c712" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::define</definition>
        <argsstring>(int a_num_runtime_real, int a_num_runtime_int)</argsstring>
        <name>define</name>
        <param>
          <type>int</type>
          <declname>a_num_runtime_real</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a_num_runtime_int</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="252" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="252" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ae7a25ea8a470f799053e431918ee6699" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1ParticleTile_1ab10926418fb9524de6ea3f822892e1d3" kindref="member">AoS</ref> &amp;</type>
        <definition>AoS&amp; amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::GetArrayOfStructs</definition>
        <argsstring>()</argsstring>
        <name>GetArrayOfStructs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="262" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="262" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a8d95866b677d5c175717eba9f44922bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structamrex_1_1ParticleTile_1ab10926418fb9524de6ea3f822892e1d3" kindref="member">AoS</ref> &amp;</type>
        <definition>const AoS&amp; amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::GetArrayOfStructs</definition>
        <argsstring>() const </argsstring>
        <name>GetArrayOfStructs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="263" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="263" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ab58f152b1c9b0ec6c7e7556ef3273868" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1ParticleTile_1ae6b0bb596eb811ce93f8ba2ec6b46589" kindref="member">SoA</ref> &amp;</type>
        <definition>SoA&amp; amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::GetStructOfArrays</definition>
        <argsstring>()</argsstring>
        <name>GetStructOfArrays</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="265" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="265" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a02fe1dcb8e8389f64f916449409e63ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structamrex_1_1ParticleTile_1ae6b0bb596eb811ce93f8ba2ec6b46589" kindref="member">SoA</ref> &amp;</type>
        <definition>const SoA&amp; amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::GetStructOfArrays</definition>
        <argsstring>() const </argsstring>
        <name>GetStructOfArrays</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="266" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="266" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ac83e79dd2e2babd95c5938cf89164802" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::empty</definition>
        <argsstring>() const </argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="268" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="268" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a1784ab6d8ccaf82cf65799ce336289a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns the total number of particles (real and neighbor) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="275" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="275" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a80b9e96e04c429ac908a7772478f3f29" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::numParticles</definition>
        <argsstring>() const </argsstring>
        <name>numParticles</name>
        <briefdescription>
<para>Returns the number of real particles (excluding neighbors) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="281" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="281" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1aee3b5ee01b533e4729d0420aa4005cbc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::numRealParticles</definition>
        <argsstring>() const </argsstring>
        <name>numRealParticles</name>
        <briefdescription>
<para>Returns the number of real particles (excluding neighbors) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="287" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="287" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a662308d06f08d47942da99598a776615" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::numNeighborParticles</definition>
        <argsstring>() const </argsstring>
        <name>numNeighborParticles</name>
        <briefdescription>
<para>Returns the number of neighbor particles (excluding reals) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="293" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="293" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a4b41c54867f5d9ebac044ed58d21410f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::numTotalParticles</definition>
        <argsstring>() const </argsstring>
        <name>numTotalParticles</name>
        <briefdescription>
<para>Returns the total number of particles, real and neighbor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="299" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="299" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a50a75be63954c07060b18d5abe885cf8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::setNumNeighbors</definition>
        <argsstring>(int num_neighbors)</argsstring>
        <name>setNumNeighbors</name>
        <param>
          <type>int</type>
          <declname>num_neighbors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="301" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="301" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a5e74996de3d89aa1995de42bf9b9a8da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::getNumNeighbors</definition>
        <argsstring>()</argsstring>
        <name>getNumNeighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="307" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="307" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a01c6271c92fabf63be8ceef8e8bf3ebc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::resize</definition>
        <argsstring>(std::size_t count)</argsstring>
        <name>resize</name>
        <param>
          <type>std::size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="313" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="313" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a8b973bf091c4a1b348c77e3a0bcc9bf6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::push_back</definition>
        <argsstring>(const ParticleType &amp;p)</argsstring>
        <name>push_back</name>
        <param>
          <type>const <ref refid="structamrex_1_1ParticleTile_1ad1c67821792f0858b9cdb5a6a98a1b14" kindref="member">ParticleType</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add one particle to this tile. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="322" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="322" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a58debc0d0912f60ae14e5ad86fd132ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::push_back_real</definition>
        <argsstring>(int comp, ParticleReal v)</argsstring>
        <name>push_back_real</name>
        <param>
          <type>int</type>
          <declname>comp</declname>
        </param>
        <param>
          <type>ParticleReal</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a Real value to the struct-of-arrays at index comp. This sets the data for one particle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="328" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="328" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a8ded040a7b241feb3147e7778489df80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::push_back_real</definition>
        <argsstring>(const std::array&lt; ParticleReal, NArrayReal &gt; &amp;v)</argsstring>
        <name>push_back_real</name>
        <param>
          <type>const std::array&lt; ParticleReal, NArrayReal &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add Real values to the struct-of-arrays, for all comps at once. This sets the data for one particle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="336" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="336" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1aa5d289c5e3e44a2d9064bd30a05689ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::push_back_real</definition>
        <argsstring>(int comp, const ParticleReal *beg, const ParticleReal *end)</argsstring>
        <name>push_back_real</name>
        <param>
          <type>int</type>
          <declname>comp</declname>
        </param>
        <param>
          <type>const ParticleReal *</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>const ParticleReal *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a range of Real values to the struct-of-arrays for the given comp. This sets the data for several particles at once. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="346" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="346" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a0b7d1e6ad4eed63b6c3a8e548e2f2752" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::push_back_real</definition>
        <argsstring>(int comp, std::size_t npar, ParticleReal v)</argsstring>
        <name>push_back_real</name>
        <param>
          <type>int</type>
          <declname>comp</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>npar</declname>
        </param>
        <param>
          <type>ParticleReal</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add npar copies of the Real value v to the struct-of-arrays for the given comp. This sets the data for several particles at once. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="355" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="355" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1aaa93fb5f97848d4083e3072478beef19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::push_back_int</definition>
        <argsstring>(int comp, int v)</argsstring>
        <name>push_back_int</name>
        <param>
          <type>int</type>
          <declname>comp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add an int value to the struct-of-arrays at index comp. This sets the data for one particle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="364" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="364" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a381fade9ed18d842350fbac57bb474ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::push_back_int</definition>
        <argsstring>(const std::array&lt; int, NArrayInt &gt; &amp;v)</argsstring>
        <name>push_back_int</name>
        <param>
          <type>const std::array&lt; int, NArrayInt &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add int values to the struct-of-arrays, for all comps at once. This sets the data for one particle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="372" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="372" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a511592b9a1fec7fbaf7920fd9332e4cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::push_back_int</definition>
        <argsstring>(int comp, const int *beg, const int *end)</argsstring>
        <name>push_back_int</name>
        <param>
          <type>int</type>
          <declname>comp</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a range of int values to the struct-of-arrays for the given comp. This sets the data for several particles at once. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="382" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="382" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a968af2f28750e166c7523aed1329b3cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::push_back_int</definition>
        <argsstring>(int comp, std::size_t npar, int v)</argsstring>
        <name>push_back_int</name>
        <param>
          <type>int</type>
          <declname>comp</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>npar</declname>
        </param>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add npar copies of the int value v to the struct-of-arrays for the given comp. This sets the data for several particles at once. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="391" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="391" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a27b9760ce0a7f338efd3d918e874b60e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::NumRealComps</definition>
        <argsstring>() const noexcept</argsstring>
        <name>NumRealComps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="396" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="396" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a3b242114d187337fa4ca77d4a180e1af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::NumIntComps</definition>
        <argsstring>() const noexcept</argsstring>
        <name>NumIntComps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="398" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="398" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1ae6045b2400c7cb077b00434b1b97f781" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::swap</definition>
        <argsstring>(ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt; &amp;other)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="structamrex_1_1ParticleTile" kindref="compound">ParticleTile</ref>&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="400" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="400" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1a1c64973a5ecce5677fa7035946277092" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1ParticleTile_1a4959983c67b2002a49436a21f96a9bf0" kindref="member">ParticleTileDataType</ref></type>
        <definition>ParticleTileDataType amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::getParticleTileData</definition>
        <argsstring>()</argsstring>
        <name>getParticleTileData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="416" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="416" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleTile_1adce4b30ae3d92fa52f167a3bd59cc003" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structamrex_1_1ParticleTile_1a6786be581cdd72d7c4ff85fc370caf37" kindref="member">ConstParticleTileDataType</ref></type>
        <definition>ConstParticleTileDataType amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::getConstParticleTileData</definition>
        <argsstring>() const </argsstring>
        <name>getConstParticleTileData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="438" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="438" bodyend="458"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5933">
        <label>amrex::PODVector&lt; ParticleReal * &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="5934" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5927">
        <label>std::allocator&lt; ParticleType &gt;</label>
      </node>
      <node id="5928">
        <label>amrex::PODVector&lt; const int * &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="5929" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5925">
        <label>amrex::ArrayOfStructs&lt; NStructReal, NStructInt &gt;</label>
        <link refid="classamrex_1_1ArrayOfStructs"/>
        <childnode refid="5926" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="5922">
        <label>amrex::ParticleTile&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;</label>
        <link refid="structamrex_1_1ParticleTile"/>
        <childnode refid="5923" relation="usage">
          <edgelabel>m_runtime_i_ptrs</edgelabel>
        </childnode>
        <childnode refid="5925" relation="usage">
          <edgelabel>m_aos_tile</edgelabel>
        </childnode>
        <childnode refid="5928" relation="usage">
          <edgelabel>m_runtime_i_cptrs</edgelabel>
        </childnode>
        <childnode refid="5930" relation="usage">
          <edgelabel>m_runtime_r_cptrs</edgelabel>
        </childnode>
        <childnode refid="5932" relation="usage">
          <edgelabel>m_soa_tile</edgelabel>
        </childnode>
        <childnode refid="5933" relation="usage">
          <edgelabel>m_runtime_r_ptrs</edgelabel>
        </childnode>
      </node>
      <node id="5932">
        <label>amrex::StructOfArrays&lt; NArrayReal, NArrayInt &gt;</label>
        <link refid="structamrex_1_1StructOfArrays"/>
      </node>
      <node id="5929">
        <label>std::allocator&lt; const int * &gt;</label>
      </node>
      <node id="5923">
        <label>amrex::PODVector&lt; int * &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="5924" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5934">
        <label>std::allocator&lt; ParticleReal * &gt;</label>
      </node>
      <node id="5926">
        <label>amrex::PODVector&lt; ParticleType &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="5927" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5931">
        <label>std::allocator&lt; const ParticleReal * &gt;</label>
      </node>
      <node id="5930">
        <label>amrex::PODVector&lt; const ParticleReal * &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="5931" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5924">
        <label>std::allocator&lt; int * &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" line="233" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleTile.H" bodystart="232" bodyend="472"/>
    <listofallmembers>
      <member refid="structamrex_1_1ParticleTile_1ab10926418fb9524de6ea3f822892e1d3" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>AoS</name></member>
      <member refid="structamrex_1_1ParticleTile_1a6786be581cdd72d7c4ff85fc370caf37" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>ConstParticleTileDataType</name></member>
      <member refid="structamrex_1_1ParticleTile_1aae530181f5744e4622012f6128c1c712" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>define</name></member>
      <member refid="structamrex_1_1ParticleTile_1ac83e79dd2e2babd95c5938cf89164802" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>empty</name></member>
      <member refid="structamrex_1_1ParticleTile_1ae7a25ea8a470f799053e431918ee6699" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>GetArrayOfStructs</name></member>
      <member refid="structamrex_1_1ParticleTile_1a8d95866b677d5c175717eba9f44922bf" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>GetArrayOfStructs</name></member>
      <member refid="structamrex_1_1ParticleTile_1adce4b30ae3d92fa52f167a3bd59cc003" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>getConstParticleTileData</name></member>
      <member refid="structamrex_1_1ParticleTile_1a5e74996de3d89aa1995de42bf9b9a8da" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>getNumNeighbors</name></member>
      <member refid="structamrex_1_1ParticleTile_1a1c64973a5ecce5677fa7035946277092" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>getParticleTileData</name></member>
      <member refid="structamrex_1_1ParticleTile_1ab58f152b1c9b0ec6c7e7556ef3273868" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>GetStructOfArrays</name></member>
      <member refid="structamrex_1_1ParticleTile_1a02fe1dcb8e8389f64f916449409e63ef" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>GetStructOfArrays</name></member>
      <member refid="structamrex_1_1ParticleTile_1aa0ea8933b8870b1e808211a000be6614" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>IntVector</name></member>
      <member refid="structamrex_1_1ParticleTile_1af7c73b9664c355ab9415113e1c032c88" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_aos_tile</name></member>
      <member refid="structamrex_1_1ParticleTile_1afc18f10586bee426a6c8c17e87420e28" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_defined</name></member>
      <member refid="structamrex_1_1ParticleTile_1a75b7205cff94bd78c7b78fb45f77b433" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_runtime_i_cptrs</name></member>
      <member refid="structamrex_1_1ParticleTile_1aeee5929003d6233fd65632e93e197f00" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_runtime_i_ptrs</name></member>
      <member refid="structamrex_1_1ParticleTile_1a311ebbe151be2428c73372672d0b1556" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_runtime_r_cptrs</name></member>
      <member refid="structamrex_1_1ParticleTile_1a6cbfd503aa61d9bc5493e0463e6cbb48" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_runtime_r_ptrs</name></member>
      <member refid="structamrex_1_1ParticleTile_1a0be60c0c485396843c637a1022f5f260" prot="private" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>m_soa_tile</name></member>
      <member refid="structamrex_1_1ParticleTile_1a3de14289ce7efa8dd3427042639d1af4" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>NAI</name></member>
      <member refid="structamrex_1_1ParticleTile_1ad11271ed18fb20c2bb82bf5393c7278b" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>NAR</name></member>
      <member refid="structamrex_1_1ParticleTile_1a3b242114d187337fa4ca77d4a180e1af" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>NumIntComps</name></member>
      <member refid="structamrex_1_1ParticleTile_1a662308d06f08d47942da99598a776615" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>numNeighborParticles</name></member>
      <member refid="structamrex_1_1ParticleTile_1a80b9e96e04c429ac908a7772478f3f29" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>numParticles</name></member>
      <member refid="structamrex_1_1ParticleTile_1a27b9760ce0a7f338efd3d918e874b60e" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>NumRealComps</name></member>
      <member refid="structamrex_1_1ParticleTile_1aee3b5ee01b533e4729d0420aa4005cbc" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>numRealParticles</name></member>
      <member refid="structamrex_1_1ParticleTile_1a4b41c54867f5d9ebac044ed58d21410f" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>numTotalParticles</name></member>
      <member refid="structamrex_1_1ParticleTile_1a69d090ad7b759b9e22d1a67259b2df56" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>ParticleTile</name></member>
      <member refid="structamrex_1_1ParticleTile_1a4959983c67b2002a49436a21f96a9bf0" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>ParticleTileDataType</name></member>
      <member refid="structamrex_1_1ParticleTile_1ad1c67821792f0858b9cdb5a6a98a1b14" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>ParticleType</name></member>
      <member refid="structamrex_1_1ParticleTile_1a2b2ec393547273e1b25b09dd8a2462de" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>ParticleVector</name></member>
      <member refid="structamrex_1_1ParticleTile_1a8b973bf091c4a1b348c77e3a0bcc9bf6" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back</name></member>
      <member refid="structamrex_1_1ParticleTile_1aaa93fb5f97848d4083e3072478beef19" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_int</name></member>
      <member refid="structamrex_1_1ParticleTile_1a381fade9ed18d842350fbac57bb474ac" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_int</name></member>
      <member refid="structamrex_1_1ParticleTile_1a511592b9a1fec7fbaf7920fd9332e4cc" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_int</name></member>
      <member refid="structamrex_1_1ParticleTile_1a968af2f28750e166c7523aed1329b3cd" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_int</name></member>
      <member refid="structamrex_1_1ParticleTile_1a58debc0d0912f60ae14e5ad86fd132ae" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_real</name></member>
      <member refid="structamrex_1_1ParticleTile_1a8ded040a7b241feb3147e7778489df80" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_real</name></member>
      <member refid="structamrex_1_1ParticleTile_1aa5d289c5e3e44a2d9064bd30a05689ce" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_real</name></member>
      <member refid="structamrex_1_1ParticleTile_1a0b7d1e6ad4eed63b6c3a8e548e2f2752" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>push_back_real</name></member>
      <member refid="structamrex_1_1ParticleTile_1a1842dcadd4e11fcf017bb29c91491a56" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>RealVector</name></member>
      <member refid="structamrex_1_1ParticleTile_1a01c6271c92fabf63be8ceef8e8bf3ebc" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>resize</name></member>
      <member refid="structamrex_1_1ParticleTile_1a50a75be63954c07060b18d5abe885cf8" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>setNumNeighbors</name></member>
      <member refid="structamrex_1_1ParticleTile_1a1784ab6d8ccaf82cf65799ce336289a9" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>size</name></member>
      <member refid="structamrex_1_1ParticleTile_1ae6b0bb596eb811ce93f8ba2ec6b46589" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>SoA</name></member>
      <member refid="structamrex_1_1ParticleTile_1ae6045b2400c7cb077b00434b1b97f781" prot="public" virt="non-virtual"><scope>amrex::ParticleTile</scope><name>swap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
