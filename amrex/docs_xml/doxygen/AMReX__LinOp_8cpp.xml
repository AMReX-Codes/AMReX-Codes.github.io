<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__LinOp_8cpp" kind="file" language="C++">
    <compoundname>AMReX_LinOp.cpp</compoundname>
    <includes local="no">cstdlib</includes>
    <includes refid="AMReX__ParmParse_8H" local="no">AMReX_ParmParse.H</includes>
    <includes refid="AMReX__ParallelDescriptor_8H" local="no">AMReX_ParallelDescriptor.H</includes>
    <includes refid="AMReX__LO__BCTYPES_8H" local="no">AMReX_LO_BCTYPES.H</includes>
    <includes refid="AMReX__LO__F_8H" local="no">AMReX_LO_F.H</includes>
    <includes refid="AMReX__LinOp_8H" local="no">AMReX_LinOp.H</includes>
    <incdepgraph>
      <node id="51514">
        <label>list</label>
      </node>
      <node id="51527">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="51525" relation="include">
        </childnode>
        <childnode refid="51528" relation="include">
        </childnode>
        <childnode refid="51529" relation="include">
        </childnode>
        <childnode refid="51519" relation="include">
        </childnode>
      </node>
      <node id="51601">
        <label>iomanip</label>
      </node>
      <node id="51523">
        <label>functional</label>
      </node>
      <node id="51560">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="51522" relation="include">
        </childnode>
        <childnode refid="51561" relation="include">
        </childnode>
        <childnode refid="51562" relation="include">
        </childnode>
        <childnode refid="51563" relation="include">
        </childnode>
        <childnode refid="51551" relation="include">
        </childnode>
        <childnode refid="51564" relation="include">
        </childnode>
        <childnode refid="51540" relation="include">
        </childnode>
        <childnode refid="51529" relation="include">
        </childnode>
      </node>
      <node id="51577">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="51508" relation="include">
        </childnode>
        <childnode refid="51516" relation="include">
        </childnode>
        <childnode refid="51543" relation="include">
        </childnode>
        <childnode refid="51538" relation="include">
        </childnode>
        <childnode refid="51542" relation="include">
        </childnode>
        <childnode refid="51547" relation="include">
        </childnode>
      </node>
      <node id="51549">
        <label>limits</label>
      </node>
      <node id="51507">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LinOp.cpp</label>
        <link refid="AMReX_LinOp.cpp"/>
        <childnode refid="51508" relation="include">
        </childnode>
        <childnode refid="51509" relation="include">
        </childnode>
        <childnode refid="51526" relation="include">
        </childnode>
        <childnode refid="51556" relation="include">
        </childnode>
        <childnode refid="51557" relation="include">
        </childnode>
        <childnode refid="51559" relation="include">
        </childnode>
      </node>
      <node id="51537">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="51511" relation="include">
        </childnode>
        <childnode refid="51538" relation="include">
        </childnode>
      </node>
      <node id="51602">
        <label>AMReX_CudaContainers.H</label>
        <link refid="AMReX__CudaContainers_8H"/>
        <childnode refid="51555" relation="include">
        </childnode>
        <childnode refid="51529" relation="include">
        </childnode>
        <childnode refid="51599" relation="include">
        </childnode>
      </node>
      <node id="51543">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="51512" relation="include">
        </childnode>
        <childnode refid="51544" relation="include">
        </childnode>
        <childnode refid="51546" relation="include">
        </childnode>
        <childnode refid="51519" relation="include">
        </childnode>
        <childnode refid="51547" relation="include">
        </childnode>
        <childnode refid="51551" relation="include">
        </childnode>
        <childnode refid="51552" relation="include">
        </childnode>
        <childnode refid="51542" relation="include">
        </childnode>
        <childnode refid="51540" relation="include">
        </childnode>
        <childnode refid="51553" relation="include">
        </childnode>
        <childnode refid="51529" relation="include">
        </childnode>
        <childnode refid="51518" relation="include">
        </childnode>
        <childnode refid="51541" relation="include">
        </childnode>
      </node>
      <node id="51593">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="51518" relation="include">
        </childnode>
        <childnode refid="51541" relation="include">
        </childnode>
        <childnode refid="51590" relation="include">
        </childnode>
        <childnode refid="51539" relation="include">
        </childnode>
        <childnode refid="51538" relation="include">
        </childnode>
        <childnode refid="51540" relation="include">
        </childnode>
        <childnode refid="51553" relation="include">
        </childnode>
        <childnode refid="51522" relation="include">
        </childnode>
        <childnode refid="51548" relation="include">
        </childnode>
      </node>
      <node id="51566">
        <label>cstdint</label>
      </node>
      <node id="51613">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="51511" relation="include">
        </childnode>
        <childnode refid="51560" relation="include">
        </childnode>
        <childnode refid="51584" relation="include">
        </childnode>
        <childnode refid="51526" relation="include">
        </childnode>
        <childnode refid="51614" relation="include">
        </childnode>
        <childnode refid="51612" relation="include">
        </childnode>
        <childnode refid="51600" relation="include">
        </childnode>
        <childnode refid="51572" relation="include">
        </childnode>
        <childnode refid="51585" relation="include">
        </childnode>
      </node>
      <node id="51584">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="51562" relation="include">
        </childnode>
        <childnode refid="51549" relation="include">
        </childnode>
        <childnode refid="51525" relation="include">
        </childnode>
        <childnode refid="51561" relation="include">
        </childnode>
        <childnode refid="51522" relation="include">
        </childnode>
        <childnode refid="51517" relation="include">
        </childnode>
        <childnode refid="51540" relation="include">
        </childnode>
        <childnode refid="51529" relation="include">
        </childnode>
        <childnode refid="51543" relation="include">
        </childnode>
        <childnode refid="51538" relation="include">
        </childnode>
        <childnode refid="51526" relation="include">
        </childnode>
      </node>
      <node id="51547">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="51512" relation="include">
        </childnode>
        <childnode refid="51508" relation="include">
        </childnode>
        <childnode refid="51548" relation="include">
        </childnode>
        <childnode refid="51549" relation="include">
        </childnode>
        <childnode refid="51550" relation="include">
        </childnode>
        <childnode refid="51530" relation="include">
        </childnode>
        <childnode refid="51519" relation="include">
        </childnode>
        <childnode refid="51542" relation="include">
        </childnode>
        <childnode refid="51540" relation="include">
        </childnode>
        <childnode refid="51529" relation="include">
        </childnode>
        <childnode refid="51545" relation="include">
        </childnode>
        <childnode refid="51516" relation="include">
        </childnode>
        <childnode refid="51539" relation="include">
        </childnode>
        <childnode refid="51518" relation="include">
        </childnode>
      </node>
      <node id="51517">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="51518" relation="include">
        </childnode>
        <childnode refid="51519" relation="include">
        </childnode>
        <childnode refid="51520" relation="include">
        </childnode>
        <childnode refid="51522" relation="include">
        </childnode>
        <childnode refid="51523" relation="include">
        </childnode>
        <childnode refid="51511" relation="include">
        </childnode>
        <childnode refid="51524" relation="include">
        </childnode>
        <childnode refid="51513" relation="include">
        </childnode>
        <childnode refid="51525" relation="include">
        </childnode>
      </node>
      <node id="51578">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="51592">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="51587">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="51579" relation="include">
        </childnode>
        <childnode refid="51511" relation="include">
        </childnode>
      </node>
      <node id="51529">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="51530" relation="include">
        </childnode>
        <childnode refid="51513" relation="include">
        </childnode>
        <childnode refid="51525" relation="include">
        </childnode>
        <childnode refid="51516" relation="include">
        </childnode>
      </node>
      <node id="51600">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="51533" relation="include">
        </childnode>
        <childnode refid="51528" relation="include">
        </childnode>
        <childnode refid="51601" relation="include">
        </childnode>
        <childnode refid="51517" relation="include">
        </childnode>
        <childnode refid="51527" relation="include">
        </childnode>
        <childnode refid="51526" relation="include">
        </childnode>
      </node>
      <node id="51548">
        <label>cmath</label>
      </node>
      <node id="51611">
        <label>cassert</label>
      </node>
      <node id="51521">
        <label>stdexcept</label>
      </node>
      <node id="51555">
        <label>numeric</label>
      </node>
      <node id="51558">
        <label>AMReX_BLFort.H</label>
        <link refid="AMReX__BLFort_8H"/>
        <childnode refid="51546" relation="include">
        </childnode>
        <childnode refid="51538" relation="include">
        </childnode>
        <childnode refid="51542" relation="include">
        </childnode>
      </node>
      <node id="51564">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="51512" relation="include">
        </childnode>
        <childnode refid="51547" relation="include">
        </childnode>
        <childnode refid="51551" relation="include">
        </childnode>
        <childnode refid="51543" relation="include">
        </childnode>
        <childnode refid="51540" relation="include">
        </childnode>
        <childnode refid="51529" relation="include">
        </childnode>
      </node>
      <node id="51568">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="51548" relation="include">
        </childnode>
        <childnode refid="51508" relation="include">
        </childnode>
        <childnode refid="51530" relation="include">
        </childnode>
        <childnode refid="51549" relation="include">
        </childnode>
        <childnode refid="51550" relation="include">
        </childnode>
        <childnode refid="51515" relation="include">
        </childnode>
        <childnode refid="51569" relation="include">
        </childnode>
        <childnode refid="51525" relation="include">
        </childnode>
        <childnode refid="51539" relation="include">
        </childnode>
        <childnode refid="51516" relation="include">
        </childnode>
        <childnode refid="51540" relation="include">
        </childnode>
        <childnode refid="51543" relation="include">
        </childnode>
        <childnode refid="51570" relation="include">
        </childnode>
        <childnode refid="51564" relation="include">
        </childnode>
        <childnode refid="51571" relation="include">
        </childnode>
        <childnode refid="51573" relation="include">
        </childnode>
        <childnode refid="51538" relation="include">
        </childnode>
        <childnode refid="51537" relation="include">
        </childnode>
        <childnode refid="51577" relation="include">
        </childnode>
        <childnode refid="51578" relation="include">
        </childnode>
        <childnode refid="51579" relation="include">
        </childnode>
        <childnode refid="51585" relation="include">
        </childnode>
      </node>
      <node id="51511">
        <label>string</label>
      </node>
      <node id="51599">
        <label>AMReX_CudaAllocators.H</label>
        <link refid="AMReX__CudaAllocators_8H"/>
        <childnode refid="51562" relation="include">
        </childnode>
        <childnode refid="51525" relation="include">
        </childnode>
        <childnode refid="51549" relation="include">
        </childnode>
        <childnode refid="51600" relation="include">
        </childnode>
        <childnode refid="51572" relation="include">
        </childnode>
        <childnode refid="51590" relation="include">
        </childnode>
      </node>
      <node id="51570">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="51543" relation="include">
        </childnode>
      </node>
      <node id="51562">
        <label>map</label>
      </node>
      <node id="51565">
        <label>AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="51566" relation="include">
        </childnode>
        <childnode refid="51516" relation="include">
        </childnode>
        <childnode refid="51567" relation="include">
        </childnode>
        <childnode refid="51605" relation="include">
        </childnode>
        <childnode refid="51618" relation="include">
        </childnode>
        <childnode refid="51612" relation="include">
        </childnode>
      </node>
      <node id="51576">
        <label>unordered_set</label>
      </node>
      <node id="51619">
        <label>AMReX_BndryData.H</label>
        <link refid="AMReX__BndryData_8H"/>
        <childnode refid="51516" relation="include">
        </childnode>
        <childnode refid="51560" relation="include">
        </childnode>
        <childnode refid="51567" relation="include">
        </childnode>
        <childnode refid="51552" relation="include">
        </childnode>
        <childnode refid="51620" relation="include">
        </childnode>
        <childnode refid="51622" relation="include">
        </childnode>
        <childnode refid="51624" relation="include">
        </childnode>
        <childnode refid="51607" relation="include">
        </childnode>
        <childnode refid="51540" relation="include">
        </childnode>
        <childnode refid="51616" relation="include">
        </childnode>
        <childnode refid="51525" relation="include">
        </childnode>
        <childnode refid="51562" relation="include">
        </childnode>
      </node>
      <node id="51617">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
      </node>
      <node id="51616">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="51613" relation="include">
        </childnode>
        <childnode refid="51615" relation="include">
        </childnode>
      </node>
      <node id="51528">
        <label>fstream</label>
      </node>
      <node id="51607">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="51512" relation="include">
        </childnode>
        <childnode refid="51562" relation="include">
        </childnode>
        <childnode refid="51540" relation="include">
        </childnode>
        <childnode refid="51608" relation="include">
        </childnode>
        <childnode refid="51526" relation="include">
        </childnode>
        <childnode refid="51609" relation="include">
        </childnode>
        <childnode refid="51612" relation="include">
        </childnode>
      </node>
      <node id="51615">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="51525" relation="include">
        </childnode>
        <childnode refid="51572" relation="include">
        </childnode>
        <childnode refid="51613" relation="include">
        </childnode>
        <childnode refid="51547" relation="include">
        </childnode>
        <childnode refid="51567" relation="include">
        </childnode>
        <childnode refid="51609" relation="include">
        </childnode>
        <childnode refid="51585" relation="include">
        </childnode>
      </node>
      <node id="51624">
        <label>AMReX_BoundCond.H</label>
        <link refid="AMReX__BoundCond_8H"/>
        <childnode refid="51516" relation="include">
        </childnode>
        <childnode refid="51518" relation="include">
        </childnode>
      </node>
      <node id="51546">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="51538" relation="include">
        </childnode>
      </node>
      <node id="51557">
        <label>AMReX_LO_F.H</label>
        <link refid="AMReX__LO__F_8H"/>
        <childnode refid="51558" relation="include">
        </childnode>
      </node>
      <node id="51609">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="51512" relation="include">
        </childnode>
        <childnode refid="51515" relation="include">
        </childnode>
        <childnode refid="51540" relation="include">
        </childnode>
        <childnode refid="51529" relation="include">
        </childnode>
        <childnode refid="51538" relation="include">
        </childnode>
        <childnode refid="51543" relation="include">
        </childnode>
        <childnode refid="51610" relation="include">
        </childnode>
      </node>
      <node id="51540">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="51515" relation="include">
        </childnode>
        <childnode refid="51525" relation="include">
        </childnode>
        <childnode refid="51532" relation="include">
        </childnode>
        <childnode refid="51511" relation="include">
        </childnode>
        <childnode refid="51522" relation="include">
        </childnode>
        <childnode refid="51533" relation="include">
        </childnode>
        <childnode refid="51524" relation="include">
        </childnode>
        <childnode refid="51517" relation="include">
        </childnode>
        <childnode refid="51518" relation="include">
        </childnode>
        <childnode refid="51541" relation="include">
        </childnode>
        <childnode refid="51516" relation="include">
        </childnode>
        <childnode refid="51542" relation="include">
        </childnode>
        <childnode refid="51538" relation="include">
        </childnode>
      </node>
      <node id="51598">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="51518" relation="include">
        </childnode>
        <childnode refid="51541" relation="include">
        </childnode>
        <childnode refid="51579" relation="include">
        </childnode>
      </node>
      <node id="51542">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="51614">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="51517" relation="include">
        </childnode>
        <childnode refid="51526" relation="include">
        </childnode>
        <childnode refid="51600" relation="include">
        </childnode>
        <childnode refid="51529" relation="include">
        </childnode>
        <childnode refid="51569" relation="include">
        </childnode>
      </node>
      <node id="51539">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="51586">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="51518" relation="include">
        </childnode>
        <childnode refid="51541" relation="include">
        </childnode>
        <childnode refid="51587" relation="include">
        </childnode>
        <childnode refid="51588" relation="include">
        </childnode>
        <childnode refid="51590" relation="include">
        </childnode>
        <childnode refid="51543" relation="include">
        </childnode>
        <childnode refid="51570" relation="include">
        </childnode>
        <childnode refid="51539" relation="include">
        </childnode>
        <childnode refid="51516" relation="include">
        </childnode>
        <childnode refid="51589" relation="include">
        </childnode>
        <childnode refid="51561" relation="include">
        </childnode>
        <childnode refid="51549" relation="include">
        </childnode>
        <childnode refid="51530" relation="include">
        </childnode>
        <childnode refid="51591" relation="include">
        </childnode>
        <childnode refid="51592" relation="include">
        </childnode>
      </node>
      <node id="51581">
        <label>sys/types.h</label>
      </node>
      <node id="51612">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="51547" relation="include">
        </childnode>
        <childnode refid="51543" relation="include">
        </childnode>
        <childnode refid="51513" relation="include">
        </childnode>
      </node>
      <node id="51554">
        <label>typeinfo</label>
      </node>
      <node id="51524">
        <label>cstdio</label>
      </node>
      <node id="51589">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="51569" relation="include">
        </childnode>
        <childnode refid="51539" relation="include">
        </childnode>
      </node>
      <node id="51541">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="51518" relation="include">
        </childnode>
      </node>
      <node id="51621">
        <label>AMReX_FabSet.H</label>
        <link refid="AMReX__FabSet_8H"/>
        <childnode refid="51565" relation="include">
        </childnode>
        <childnode refid="51607" relation="include">
        </childnode>
      </node>
      <node id="51531">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="51510" relation="include">
        </childnode>
        <childnode refid="51511" relation="include">
        </childnode>
        <childnode refid="51532" relation="include">
        </childnode>
        <childnode refid="51533" relation="include">
        </childnode>
        <childnode refid="51524" relation="include">
        </childnode>
        <childnode refid="51508" relation="include">
        </childnode>
        <childnode refid="51534" relation="include">
        </childnode>
        <childnode refid="51535" relation="include">
        </childnode>
        <childnode refid="51536" relation="include">
        </childnode>
      </node>
      <node id="51582">
        <label>unistd.h</label>
      </node>
      <node id="51513">
        <label>vector</label>
      </node>
      <node id="51510">
        <label>stack</label>
      </node>
      <node id="51604">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="51543" relation="include">
        </childnode>
        <childnode refid="51600" relation="include">
        </childnode>
        <childnode refid="51578" relation="include">
        </childnode>
        <childnode refid="51529" relation="include">
        </childnode>
        <childnode refid="51572" relation="include">
        </childnode>
      </node>
      <node id="51516">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="51517" relation="include">
        </childnode>
      </node>
      <node id="51518">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="51532">
        <label>utility</label>
      </node>
      <node id="51515">
        <label>array</label>
      </node>
      <node id="51605">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="51522" relation="include">
        </childnode>
        <childnode refid="51595" relation="include">
        </childnode>
        <childnode refid="51549" relation="include">
        </childnode>
        <childnode refid="51562" relation="include">
        </childnode>
        <childnode refid="51532" relation="include">
        </childnode>
        <childnode refid="51513" relation="include">
        </childnode>
        <childnode refid="51530" relation="include">
        </childnode>
        <childnode refid="51574" relation="include">
        </childnode>
        <childnode refid="51511" relation="include">
        </childnode>
        <childnode refid="51516" relation="include">
        </childnode>
        <childnode refid="51540" relation="include">
        </childnode>
        <childnode refid="51529" relation="include">
        </childnode>
        <childnode refid="51543" relation="include">
        </childnode>
        <childnode refid="51517" relation="include">
        </childnode>
        <childnode refid="51560" relation="include">
        </childnode>
        <childnode refid="51606" relation="include">
        </childnode>
        <childnode refid="51604" relation="include">
        </childnode>
        <childnode refid="51584" relation="include">
        </childnode>
        <childnode refid="51607" relation="include">
        </childnode>
        <childnode refid="51526" relation="include">
        </childnode>
        <childnode refid="51579" relation="include">
        </childnode>
        <childnode refid="51519" relation="include">
        </childnode>
        <childnode refid="51537" relation="include">
        </childnode>
        <childnode refid="51612" relation="include">
        </childnode>
        <childnode refid="51600" relation="include">
        </childnode>
        <childnode refid="51613" relation="include">
        </childnode>
        <childnode refid="51615" relation="include">
        </childnode>
        <childnode refid="51578" relation="include">
        </childnode>
        <childnode refid="51589" relation="include">
        </childnode>
        <childnode refid="51616" relation="include">
        </childnode>
        <childnode refid="51568" relation="include">
        </childnode>
        <childnode refid="51585" relation="include">
        </childnode>
        <childnode refid="51617" relation="include">
        </childnode>
      </node>
      <node id="51567">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="51543" relation="include">
        </childnode>
        <childnode refid="51568" relation="include">
        </childnode>
        <childnode refid="51538" relation="include">
        </childnode>
        <childnode refid="51542" relation="include">
        </childnode>
        <childnode refid="51604" relation="include">
        </childnode>
        <childnode refid="51548" relation="include">
        </childnode>
      </node>
      <node id="51533">
        <label>sstream</label>
      </node>
      <node id="51618">
        <label>AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="51605" relation="include">
        </childnode>
        <childnode refid="51616" relation="include">
        </childnode>
        <childnode refid="51600" relation="include">
        </childnode>
        <childnode refid="51549" relation="include">
        </childnode>
      </node>
      <node id="51520">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="51521" relation="include">
        </childnode>
      </node>
      <node id="51544">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="51530" relation="include">
        </childnode>
        <childnode refid="51518" relation="include">
        </childnode>
        <childnode refid="51539" relation="include">
        </childnode>
        <childnode refid="51545" relation="include">
        </childnode>
      </node>
      <node id="51588">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="51518" relation="include">
        </childnode>
        <childnode refid="51541" relation="include">
        </childnode>
        <childnode refid="51587" relation="include">
        </childnode>
        <childnode refid="51543" relation="include">
        </childnode>
        <childnode refid="51589" relation="include">
        </childnode>
      </node>
      <node id="51526">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="51519" relation="include">
        </childnode>
        <childnode refid="51527" relation="include">
        </childnode>
        <childnode refid="51531" relation="include">
        </childnode>
        <childnode refid="51537" relation="include">
        </childnode>
        <childnode refid="51516" relation="include">
        </childnode>
        <childnode refid="51538" relation="include">
        </childnode>
        <childnode refid="51540" relation="include">
        </childnode>
        <childnode refid="51529" relation="include">
        </childnode>
        <childnode refid="51543" relation="include">
        </childnode>
        <childnode refid="51522" relation="include">
        </childnode>
        <childnode refid="51513" relation="include">
        </childnode>
        <childnode refid="51511" relation="include">
        </childnode>
        <childnode refid="51554" relation="include">
        </childnode>
        <childnode refid="51530" relation="include">
        </childnode>
        <childnode refid="51523" relation="include">
        </childnode>
        <childnode refid="51549" relation="include">
        </childnode>
        <childnode refid="51555" relation="include">
        </childnode>
      </node>
      <node id="51579">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="51508" relation="include">
        </childnode>
        <childnode refid="51522" relation="include">
        </childnode>
        <childnode refid="51511" relation="include">
        </childnode>
        <childnode refid="51562" relation="include">
        </childnode>
        <childnode refid="51580" relation="include">
        </childnode>
        <childnode refid="51569" relation="include">
        </childnode>
        <childnode refid="51581" relation="include">
        </childnode>
        <childnode refid="51582" relation="include">
        </childnode>
        <childnode refid="51583" relation="include">
        </childnode>
        <childnode refid="51516" relation="include">
        </childnode>
        <childnode refid="51538" relation="include">
        </childnode>
        <childnode refid="51540" relation="include">
        </childnode>
        <childnode refid="51529" relation="include">
        </childnode>
        <childnode refid="51543" relation="include">
        </childnode>
        <childnode refid="51560" relation="include">
        </childnode>
        <childnode refid="51584" relation="include">
        </childnode>
        <childnode refid="51526" relation="include">
        </childnode>
      </node>
      <node id="51572">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="51516" relation="include">
        </childnode>
        <childnode refid="51561" relation="include">
        </childnode>
        <childnode refid="51508" relation="include">
        </childnode>
      </node>
      <node id="51552">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="51512" relation="include">
        </childnode>
        <childnode refid="51516" relation="include">
        </childnode>
        <childnode refid="51542" relation="include">
        </childnode>
        <childnode refid="51518" relation="include">
        </childnode>
      </node>
      <node id="51545">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="51522" relation="include">
        </childnode>
        <childnode refid="51538" relation="include">
        </childnode>
        <childnode refid="51540" relation="include">
        </childnode>
      </node>
      <node id="51583">
        <label>sys/wait.h</label>
      </node>
      <node id="51512">
        <label>iosfwd</label>
      </node>
      <node id="51508">
        <label>cstdlib</label>
      </node>
      <node id="51536">
        <label>cfenv</label>
      </node>
      <node id="51522">
        <label>iostream</label>
      </node>
      <node id="51551">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="51512" relation="include">
        </childnode>
        <childnode refid="51519" relation="include">
        </childnode>
        <childnode refid="51547" relation="include">
        </childnode>
        <childnode refid="51542" relation="include">
        </childnode>
      </node>
      <node id="51620">
        <label>AMReX_BndryRegister.H</label>
        <link refid="AMReX__BndryRegister_8H"/>
        <childnode refid="51560" relation="include">
        </childnode>
        <childnode refid="51621" relation="include">
        </childnode>
      </node>
      <node id="51553">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="51547" relation="include">
        </childnode>
      </node>
      <node id="51561">
        <label>cstddef</label>
      </node>
      <node id="51563">
        <label>unordered_map</label>
      </node>
      <node id="51606">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="51512" relation="include">
        </childnode>
        <childnode refid="51551" relation="include">
        </childnode>
        <childnode refid="51543" relation="include">
        </childnode>
        <childnode refid="51547" relation="include">
        </childnode>
        <childnode refid="51564" relation="include">
        </childnode>
      </node>
      <node id="51585">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="51518" relation="include">
        </childnode>
        <childnode refid="51541" relation="include">
        </childnode>
        <childnode refid="51586" relation="include">
        </childnode>
        <childnode refid="51587" relation="include">
        </childnode>
        <childnode refid="51593" relation="include">
        </childnode>
        <childnode refid="51590" relation="include">
        </childnode>
        <childnode refid="51594" relation="include">
        </childnode>
        <childnode refid="51596" relation="include">
        </childnode>
        <childnode refid="51597" relation="include">
        </childnode>
        <childnode refid="51588" relation="include">
        </childnode>
        <childnode refid="51598" relation="include">
        </childnode>
        <childnode refid="51599" relation="include">
        </childnode>
        <childnode refid="51602" relation="include">
        </childnode>
        <childnode refid="51603" relation="include">
        </childnode>
      </node>
      <node id="51550">
        <label>climits</label>
      </node>
      <node id="51603">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="51575">
        <label>mutex</label>
      </node>
      <node id="51580">
        <label>chrono</label>
      </node>
      <node id="51591">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="51535">
        <label>csignal</label>
      </node>
      <node id="51622">
        <label>AMReX_MultiMask.H</label>
        <link refid="AMReX__MultiMask_8H"/>
        <childnode refid="51623" relation="include">
        </childnode>
        <childnode refid="51605" relation="include">
        </childnode>
        <childnode refid="51607" relation="include">
        </childnode>
      </node>
      <node id="51623">
        <label>AMReX_Mask.H</label>
        <link refid="AMReX__Mask_8H"/>
        <childnode refid="51568" relation="include">
        </childnode>
        <childnode refid="51567" relation="include">
        </childnode>
      </node>
      <node id="51573">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="51561" relation="include">
        </childnode>
        <childnode refid="51574" relation="include">
        </childnode>
        <childnode refid="51513" relation="include">
        </childnode>
        <childnode refid="51575" relation="include">
        </childnode>
        <childnode refid="51576" relation="include">
        </childnode>
        <childnode refid="51523" relation="include">
        </childnode>
        <childnode refid="51572" relation="include">
        </childnode>
      </node>
      <node id="51569">
        <label>type_traits</label>
      </node>
      <node id="51574">
        <label>set</label>
      </node>
      <node id="51571">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="51572" relation="include">
        </childnode>
      </node>
      <node id="51519">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="51596">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="51572" relation="include">
        </childnode>
      </node>
      <node id="51509">
        <label>AMReX_ParmParse.H</label>
        <link refid="AMReX__ParmParse_8H"/>
        <childnode refid="51510" relation="include">
        </childnode>
        <childnode refid="51511" relation="include">
        </childnode>
        <childnode refid="51512" relation="include">
        </childnode>
        <childnode refid="51513" relation="include">
        </childnode>
        <childnode refid="51514" relation="include">
        </childnode>
        <childnode refid="51515" relation="include">
        </childnode>
        <childnode refid="51516" relation="include">
        </childnode>
      </node>
      <node id="51530">
        <label>algorithm</label>
      </node>
      <node id="51590">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="51508" relation="include">
        </childnode>
        <childnode refid="51525" relation="include">
        </childnode>
        <childnode refid="51515" relation="include">
        </childnode>
        <childnode refid="51517" relation="include">
        </childnode>
        <childnode refid="51579" relation="include">
        </childnode>
        <childnode refid="51587" relation="include">
        </childnode>
        <childnode refid="51541" relation="include">
        </childnode>
      </node>
      <node id="51556">
        <label>AMReX_LO_BCTYPES.H</label>
        <link refid="AMReX__LO__BCTYPES_8H"/>
      </node>
      <node id="51559">
        <label>AMReX_LinOp.H</label>
        <link refid="AMReX__LinOp_8H"/>
        <childnode refid="51525" relation="include">
        </childnode>
        <childnode refid="51540" relation="include">
        </childnode>
        <childnode refid="51529" relation="include">
        </childnode>
        <childnode refid="51538" relation="include">
        </childnode>
        <childnode refid="51560" relation="include">
        </childnode>
        <childnode refid="51565" relation="include">
        </childnode>
        <childnode refid="51619" relation="include">
        </childnode>
      </node>
      <node id="51534">
        <label>execinfo.h</label>
      </node>
      <node id="51595">
        <label>cstring</label>
      </node>
      <node id="51610">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="51561" relation="include">
        </childnode>
        <childnode refid="51508" relation="include">
        </childnode>
        <childnode refid="51595" relation="include">
        </childnode>
        <childnode refid="51522" relation="include">
        </childnode>
        <childnode refid="51548" relation="include">
        </childnode>
        <childnode refid="51543" relation="include">
        </childnode>
        <childnode refid="51538" relation="include">
        </childnode>
        <childnode refid="51542" relation="include">
        </childnode>
        <childnode refid="51513" relation="include">
        </childnode>
        <childnode refid="51611" relation="include">
        </childnode>
        <childnode refid="51547" relation="include">
        </childnode>
      </node>
      <node id="51608">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="51549" relation="include">
        </childnode>
        <childnode refid="51517" relation="include">
        </childnode>
        <childnode refid="51538" relation="include">
        </childnode>
        <childnode refid="51540" relation="include">
        </childnode>
        <childnode refid="51529" relation="include">
        </childnode>
        <childnode refid="51543" relation="include">
        </childnode>
      </node>
      <node id="51525">
        <label>memory</label>
      </node>
      <node id="51594">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="51561" relation="include">
        </childnode>
        <childnode refid="51595" relation="include">
        </childnode>
        <childnode refid="51508" relation="include">
        </childnode>
        <childnode refid="51525" relation="include">
        </childnode>
        <childnode refid="51572" relation="include">
        </childnode>
        <childnode refid="51589" relation="include">
        </childnode>
        <childnode refid="51590" relation="include">
        </childnode>
      </node>
      <node id="51597">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="51518" relation="include">
        </childnode>
        <childnode refid="51541" relation="include">
        </childnode>
        <childnode refid="51590" relation="include">
        </childnode>
        <childnode refid="51589" relation="include">
        </childnode>
        <childnode refid="51572" relation="include">
        </childnode>
        <childnode refid="51508" relation="include">
        </childnode>
      </node>
      <node id="51538">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="51539" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParmParse_8H" kindref="compound">AMReX_ParmParse.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParallelDescriptor_8H" kindref="compound">AMReX_ParallelDescriptor.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__LO__BCTYPES_8H" kindref="compound">AMReX_LO_BCTYPES.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__LO__F_8H" kindref="compound">AMReX_LO_F.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__LinOp_8H" kindref="compound">AMReX_LinOp.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a4f43e2df85d0db8585e437a05c9c6a81" kindref="member">initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>default<sp/>values<sp/>for<sp/>these<sp/>in<sp/>Initialize()!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1LinOp_1a209d6c6a23f1627c3dd246b737b342a5" kindref="member">LinOp::def_harmavg</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1LinOp_1a4bc7f813757f64c47583b5c110504644" kindref="member">LinOp::def_verbose</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1LinOp_1a46c9e9b959b202156654ab2a806d36b3" kindref="member">LinOp::def_maxorder</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1LinOp_1afbf053df86bb20e076291152600f06ac" kindref="member">LinOp::LinOp_grow</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Important:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LinOp::applyBC<sp/>fills<sp/>LinOp_grow<sp/>ghost<sp/>cells<sp/>with<sp/>data<sp/>expected<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LinOp::apply<sp/>therefore,<sp/>the<sp/>incoming<sp/>MultiFab<sp/>to<sp/>LinOp::applyBC<sp/>better</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>have<sp/>LinOp_grow<sp/>many<sp/>ghost<sp/>allocated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1a089bb8eb0f74b22a7abbd60b3e872c8f" kindref="member">LinOp::Initialize</ref><sp/>()</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1a4f43e2df85d0db8585e437a05c9c6a81" kindref="member">initialized</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>defaults<sp/>here!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>LinOp::def_harmavg<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>LinOp::def_verbose<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>LinOp::def_maxorder<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>LinOp::LinOp_grow<sp/><sp/><sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Must<sp/>be<sp/>consistent<sp/>with<sp/>expectations<sp/>of<sp/>apply/applyBC,<sp/>not<sp/>parm-parsed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>ParmParse<sp/>pp(</highlight><highlight class="stringliteral">&quot;Lp&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;harmavg&quot;</highlight><highlight class="normal">,<sp/><sp/><ref refid="classamrex_1_1LinOp_1a209d6c6a23f1627c3dd246b737b342a5" kindref="member">def_harmavg</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;v&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a4bc7f813757f64c47583b5c110504644" kindref="member">def_verbose</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>pp.query(</highlight><highlight class="stringliteral">&quot;maxorder&quot;</highlight><highlight class="normal">,<sp/><ref refid="classamrex_1_1LinOp_1a46c9e9b959b202156654ab2a806d36b3" kindref="member">def_maxorder</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>()<sp/>&amp;&amp;<sp/><ref refid="classamrex_1_1LinOp_1a4bc7f813757f64c47583b5c110504644" kindref="member">def_verbose</ref>)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Print" kindref="compound">amrex::Print</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;def_harmavg<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/><ref refid="classamrex_1_1LinOp_1a209d6c6a23f1627c3dd246b737b342a5" kindref="member">def_harmavg</ref><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;def_maxorder<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classamrex_1_1LinOp_1a46c9e9b959b202156654ab2a806d36b3" kindref="member">def_maxorder</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aec8ceac1148bd8331f3a51572068f8a0" kindref="member">amrex::ExecOnFinalize</ref>(<ref refid="classamrex_1_1LinOp_1a3e96cce265979ab38b675c22fab24657" kindref="member">LinOp::Finalize</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a4f43e2df85d0db8585e437a05c9c6a81" kindref="member">initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1a3e96cce265979ab38b675c22fab24657" kindref="member">LinOp::Finalize</ref><sp/>()</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1ab6ad6639bc139043d7e905f8d50e942c" kindref="member">LinOp::bndryData</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BndryData&amp;<sp/>bd)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1LinOp_1aaacb98abdbfa3d9377c369fe5cc79b68" kindref="member">gbox</ref>[0]<sp/>==<sp/>bd.boxes());</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="classamrex_1_1LinOp_1aa82bdf791430c2a09b3b436edf9396b5" kindref="member">bgb</ref><sp/>=<sp/>bd;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1a528f7163d138d4c86f826821e751fae5" kindref="member">LinOp::LinOp</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BndryData&amp;<sp/>_bgb,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/>_h)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1aa82bdf791430c2a09b3b436edf9396b5" kindref="member">bgb</ref>(new<sp/>BndryData(_bgb))</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/>_hh[<ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref>];</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hh[i]<sp/>=<sp/>_h;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a123f74bf002cbcc02fcfef0ac794cc57" kindref="member">initConstruct</ref>(_hh);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1a528f7163d138d4c86f826821e751fae5" kindref="member">LinOp::LinOp</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BndryData&amp;<sp/>_bgb,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/><sp/><sp/><sp/><sp/><sp/>_h)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1aa82bdf791430c2a09b3b436edf9396b5" kindref="member">bgb</ref>(new<sp/>BndryData(_bgb))</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a123f74bf002cbcc02fcfef0ac794cc57" kindref="member">initConstruct</ref>(_h);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1a528f7163d138d4c86f826821e751fae5" kindref="member">LinOp::LinOp</ref><sp/>(BndryData*<sp/><sp/>_bgb,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/>_h)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1aa82bdf791430c2a09b3b436edf9396b5" kindref="member">bgb</ref>(_bgb)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a123f74bf002cbcc02fcfef0ac794cc57" kindref="member">initConstruct</ref>(_h);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1a62ce7afd9c1479ee90df81e055e88a1c" kindref="member">LinOp::~LinOp</ref><sp/>()</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1LinOp_1aa82bdf791430c2a09b3b436edf9396b5" kindref="member">bgb</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1a4d4e5333f7d48ad27505ca77110d3e3a" kindref="member">LinOp::clearToLevel</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)<sp/>{}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1a123f74bf002cbcc02fcfef0ac794cc57" kindref="member">LinOp::initConstruct</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real*<sp/>_h)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a089bb8eb0f74b22a7abbd60b3e872c8f" kindref="member">Initialize</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;ll<sp/>reserve()<sp/>space<sp/>to<sp/>cut<sp/>down<sp/>on<sp/>copying<sp/>during<sp/>resize()s.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1aa9588834363609399b2953a1285311fc" kindref="member">h</ref>.reserve(N);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1aaacb98abdbfa3d9377c369fe5cc79b68" kindref="member">gbox</ref>.reserve(N);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a58088c44f9d858885f1125efb3b4222e" kindref="member">undrrelxr</ref>.reserve(N);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1af9de09651d7047e04a70de03facb5398" kindref="member">maskvals</ref>.reserve(N);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a42cf216bf54bd0cb244669a91635dbec" kindref="member">lmaskvals</ref>.reserve(N);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a447bf2c68e5e4fb5b275fefe879fe1e5" kindref="member">geomarray</ref>.reserve(N);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a6b431b3abaa1031a23c3d7972d7dab93" kindref="member">harmavg</ref><sp/>=<sp/><ref refid="classamrex_1_1LinOp_1a209d6c6a23f1627c3dd246b737b342a5" kindref="member">def_harmavg</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a24a48ff7792144be5c69884015388367" kindref="member">verbose</ref><sp/>=<sp/><ref refid="classamrex_1_1LinOp_1a4bc7f813757f64c47583b5c110504644" kindref="member">def_verbose</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1aaacb98abdbfa3d9377c369fe5cc79b68" kindref="member">gbox</ref>.resize(1);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1aaacb98abdbfa3d9377c369fe5cc79b68" kindref="member">gbox</ref>[level]<sp/>=<sp/><ref refid="classamrex_1_1LinOp_1aa82bdf791430c2a09b3b436edf9396b5" kindref="member">bgb</ref>-&gt;<ref refid="classamrex_1_1BndryRegister_1a013d3c766ec5b97ea88fa71f9cc810cb" kindref="member">boxes</ref>();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a447bf2c68e5e4fb5b275fefe879fe1e5" kindref="member">geomarray</ref>.resize(1);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a447bf2c68e5e4fb5b275fefe879fe1e5" kindref="member">geomarray</ref>[level]<sp/>=<sp/><ref refid="classamrex_1_1LinOp_1aa82bdf791430c2a09b3b436edf9396b5" kindref="member">bgb</ref>-&gt;<ref refid="classamrex_1_1BndryData_1a1c808b83c725af10075314a95391e06f" kindref="member">getGeom</ref>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1aa9588834363609399b2953a1285311fc" kindref="member">h</ref>.resize(1);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1aa898f6575bb89bf315bb7a5309ad944f" kindref="member">maxorder</ref><sp/>=<sp/><ref refid="classamrex_1_1LinOp_1a46c9e9b959b202156654ab2a806d36b3" kindref="member">def_maxorder</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1aa9588834363609399b2953a1285311fc" kindref="member">h</ref>[level][i]<sp/>=<sp/>_h[i];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a58088c44f9d858885f1125efb3b4222e" kindref="member">undrrelxr</ref>.resize(1);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a58088c44f9d858885f1125efb3b4222e" kindref="member">undrrelxr</ref>[0].define(<ref refid="classamrex_1_1LinOp_1aaacb98abdbfa3d9377c369fe5cc79b68" kindref="member">gbox</ref>[level],<sp/><ref refid="classamrex_1_1LinOp_1aa82bdf791430c2a09b3b436edf9396b5" kindref="member">bgb</ref>-&gt;<ref refid="classamrex_1_1BndryRegister_1a543c6c7f9abadfda4cb25368007d14f8" kindref="member">DistributionMap</ref>(),<sp/>1,<sp/>0,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1af9de09651d7047e04a70de03facb5398" kindref="member">maskvals</ref>.resize(1);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1af9de09651d7047e04a70de03facb5398" kindref="member">maskvals</ref>[0].resize(2*BL_SPACEDIM);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a42cf216bf54bd0cb244669a91635dbec" kindref="member">lmaskvals</ref>.resize(1);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a42cf216bf54bd0cb244669a91635dbec" kindref="member">lmaskvals</ref>[0].resize(2*BL_SPACEDIM);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(OrientationIter<sp/>oitr;<sp/>oitr;<sp/>++oitr)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Orientation<sp/>face<sp/>=<sp/>oitr();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiMask&amp;<sp/>m<sp/>=<sp/><ref refid="classamrex_1_1LinOp_1aa82bdf791430c2a09b3b436edf9396b5" kindref="member">bgb</ref>-&gt;<ref refid="classamrex_1_1BndryData_1aa9e18873f726b8e44ff7a7569a79a8fe" kindref="member">bndryMasks</ref>(face);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1af9de09651d7047e04a70de03facb5398" kindref="member">maskvals</ref>[0][face].define(m.boxArray(),<sp/>m.DistributionMap(),<sp/>1);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a42cf216bf54bd0cb244669a91635dbec" kindref="member">lmaskvals</ref>[0][face].define(m.boxArray(),<sp/>m.DistributionMap(),<sp/>1);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiMask_1a9d21fed308318e770161ce5f76b4b60f" kindref="member">MultiMask::Copy</ref>(<ref refid="classamrex_1_1LinOp_1af9de09651d7047e04a70de03facb5398" kindref="member">maskvals</ref>[0][face],<sp/>m);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiMask_1a9d21fed308318e770161ce5f76b4b60f" kindref="member">MultiMask::Copy</ref>(<ref refid="classamrex_1_1LinOp_1a42cf216bf54bd0cb244669a91635dbec" kindref="member">lmaskvals</ref>[0][face],<sp/>m);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1ac5b9fd4b970fee2132c2ea0c5db97149" kindref="member">LinOp::apply</ref><sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/>out,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/>in,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1ad5f2fc8009714c47dc63ff6a7a73a5de" kindref="member">LinOp::BC_Mode</ref><sp/>bc_mode,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_comp,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_comp,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_comp,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bndry_comp)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a7bb88ff651d23b6908c7b2bceaa34b0e" kindref="member">applyBC</ref>(in,src_comp,num_comp,level,bc_mode,local,bndry_comp);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Laplacian_1ace5207492179583a920d5967d43d405d" kindref="member">Fapply</ref>(out,dst_comp,in,src_comp,num_comp,level);</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1a7bb88ff651d23b6908c7b2bceaa34b0e" kindref="member">LinOp::applyBC</ref><sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/>inout,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_comp,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_comp,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1ad5f2fc8009714c47dc63ff6a7a73a5de" kindref="member">LinOp::BC_Mode</ref><sp/>bc_mode,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bndry_comp)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;LinOp::applyBC()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>inout<sp/>MultiFab<sp/>needs<sp/>at<sp/>least<sp/>LinOp_grow<sp/>ghost<sp/>cells<sp/>for<sp/>applyBC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(inout.nGrow()<sp/>&gt;=<sp/><ref refid="classamrex_1_1LinOp_1afbf053df86bb20e076291152600f06ac" kindref="member">LinOp_grow</ref>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>coarsened<sp/>boundary<sp/>values,<sp/>cannot<sp/>apply<sp/>inhomog<sp/>at<sp/>lev&gt;0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(level<sp/>&lt;<sp/><ref refid="classamrex_1_1LinOp_1a9d552129ce2624a83a6ba56ead0f4d87" kindref="member">numLevels</ref>());</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(!(level<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>bc_mode<sp/>==<sp/><ref refid="classamrex_1_1LinOp_1ad5f2fc8009714c47dc63ff6a7a73a5dea2789f303c136a93263ed4b63ce83d29a" kindref="member">Inhomogeneous_BC</ref>));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flagden<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>in<sp/>undrrelxr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flagbc<sp/><sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>boundary<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bc_mode<sp/>==<sp/><ref refid="classamrex_1_1LinOp_1ad5f2fc8009714c47dc63ff6a7a73a5deae1724332b6960ec73ce5040947963f78" kindref="member">LinOp::Homogeneous_BC</ref>)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>data<sp/>if<sp/>homogeneous.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flagbc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a63537ed5b853907fc8a3b7adace5a383" kindref="member">prepareForLevel</ref>(level);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cross<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>inout.FillBoundary(src_comp,num_comp,<ref refid="classamrex_1_1LinOp_1a447bf2c68e5e4fb5b275fefe879fe1e5" kindref="member">geomarray</ref>[level].periodicity(),cross);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>boundary<sp/>cells.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OMP<sp/>over<sp/>boxes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>mfi(inout);<sp/>mfi.isValid();<sp/>++mfi)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gn<sp/>=<sp/>mfi.index();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1LinOp_1aaacb98abdbfa3d9377c369fe5cc79b68" kindref="member">gbox</ref>[level][gn]<sp/>==<sp/>inout.box(gn));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(level&lt;<ref refid="classamrex_1_1LinOp_1a58088c44f9d858885f1125efb3b4222e" kindref="member">undrrelxr</ref>.size());</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BndryData_1ab4ed85c429f2c9ba26ce7e046590aee0" kindref="member">BndryData::RealTuple</ref>&amp;<sp/><sp/><sp/><sp/><sp/><sp/>bdl<sp/>=<sp/><ref refid="classamrex_1_1LinOp_1aa82bdf791430c2a09b3b436edf9396b5" kindref="member">bgb</ref>-&gt;<ref refid="classamrex_1_1BndryData_1a8c53fbb7063c71b365d41ef352f4ffb5" kindref="member">bndryLocs</ref>(gn);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;<sp/>Vector&lt;BoundCond&gt;<sp/>&gt;&amp;<sp/>bdc<sp/>=<sp/><ref refid="classamrex_1_1LinOp_1aa82bdf791430c2a09b3b436edf9396b5" kindref="member">bgb</ref>-&gt;<ref refid="classamrex_1_1BndryData_1ab22274b8017f01edf0d5e432240a3308" kindref="member">bndryConds</ref>(gn);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(OrientationIter<sp/>oitr;<sp/>oitr;<sp/>++oitr)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Orientation<sp/>o<sp/>=<sp/>oitr();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FabSet&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/><sp/><sp/>=<sp/><ref refid="classamrex_1_1LinOp_1a58088c44f9d858885f1125efb3b4222e" kindref="member">undrrelxr</ref>[level][o];</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdr<sp/>=<sp/>o;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FabSet&amp;<sp/>fs<sp/><sp/>=<sp/><ref refid="classamrex_1_1LinOp_1aa82bdf791430c2a09b3b436edf9396b5" kindref="member">bgb</ref>-&gt;<ref refid="classamrex_1_1BndryData_1a3ce6d337a83e14d713a998d6b09a27e0" kindref="member">bndryValues</ref>(o);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mask&amp;<sp/><sp/><sp/>m<sp/><sp/><sp/>=<sp/>local<sp/>?<sp/><ref refid="classamrex_1_1LinOp_1a42cf216bf54bd0cb244669a91635dbec" kindref="member">lmaskvals</ref>[level][o][mfi]<sp/>:<sp/><ref refid="classamrex_1_1LinOp_1af9de09651d7047e04a70de03facb5398" kindref="member">maskvals</ref>[level][o][mfi];</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcl<sp/>=<sp/>bdl[o];</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(bdc[o].<ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1ac0bbdd3b8f64770191201e431e16c723" kindref="member">size</ref>()&gt;bndry_comp);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bct<sp/>=<sp/>bdc[o][bndry_comp];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbx<sp/><sp/><sp/>=<sp/>inout.box(gn);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>iofab<sp/>=<sp/>inout[mfi];</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(f.size()&gt;gn);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(fs.size()&gt;gn);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ffab<sp/><sp/>=<sp/>f[mfi];</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>fsfab<sp/>=<sp/>fs[mfi];</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__LO__F_8H_1a2d4139641a6da18a713d5cc6e8c317e1" kindref="member">amrex_lo_applybc</ref>(&amp;flagden,<sp/>&amp;flagbc,<sp/>&amp;<ref refid="classamrex_1_1LinOp_1aa898f6575bb89bf315bb7a5309ad944f" kindref="member">maxorder</ref>,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iofab.dataPtr(src_comp),</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(iofab.loVect()),<sp/>AMREX_ARLIM(iofab.hiVect()),</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cdr,<sp/>&amp;bct,<sp/>&amp;bcl,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fsfab.dataPtr(bndry_comp),<sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(fsfab.loVect()),<sp/>AMREX_ARLIM(fsfab.hiVect()),</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.dataPtr(),</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(m.loVect()),<sp/>AMREX_ARLIM(m.hiVect()),</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ffab.dataPtr(),</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(ffab.loVect()),<sp/>AMREX_ARLIM(ffab.hiVect()),</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbx.loVect(),</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vbx.hiVect(),<sp/>&amp;num_comp,<sp/><ref refid="classamrex_1_1LinOp_1aa9588834363609399b2953a1285311fc" kindref="member">h</ref>[level].data());</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1ab77a2e7e90d65073fccb8a54fd128177" kindref="member">LinOp::residual</ref><sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>residL,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>rhsL,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>solnL,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1ad5f2fc8009714c47dc63ff6a7a73a5de" kindref="member">LinOp::BC_Mode</ref><sp/><sp/>bc_mode,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local)</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;LinOp::residual()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1ac5b9fd4b970fee2132c2ea0c5db97149" kindref="member">apply</ref>(residL,<sp/>solnL,<sp/>level,<sp/>bc_mode,<sp/>local);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiFab_1aa06c264011c21bb5a97070ae7cf250d3" kindref="member">MultiFab::Xpay</ref>(residL,<sp/>-1.0,<sp/>rhsL,<sp/>0,<sp/>0,<sp/>residL.nComp(),<sp/>0);</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1a11f5dfbd38e5b5551dbcec9df469e11d" kindref="member">LinOp::smooth</ref><sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>solnL,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>rhsL,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1ad5f2fc8009714c47dc63ff6a7a73a5de" kindref="member">LinOp::BC_Mode</ref><sp/><sp/>bc_mode)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>redBlackFlag<sp/>=<sp/>0;<sp/>redBlackFlag<sp/>&lt;<sp/>2;<sp/>redBlackFlag++)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a7bb88ff651d23b6908c7b2bceaa34b0e" kindref="member">applyBC</ref>(solnL,<sp/>0,<sp/>1,<sp/>level,<sp/>bc_mode);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Laplacian_1a40c3f0da7cfe04502a9e2e31ef1e85b3" kindref="member">Fsmooth</ref>(solnL,<sp/>rhsL,<sp/>level,<sp/>redBlackFlag);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1a81bae1e07a9908f6b677d1619d5eb4ee" kindref="member">LinOp::jacobi_smooth</ref><sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>solnL,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>rhsL,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1ad5f2fc8009714c47dc63ff6a7a73a5de" kindref="member">LinOp::BC_Mode</ref><sp/><sp/>bc_mode)</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a7bb88ff651d23b6908c7b2bceaa34b0e" kindref="member">applyBC</ref>(solnL,<sp/>0,<sp/>1,<sp/>level,<sp/>bc_mode);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Laplacian_1a430c60bd674648f5dbd3627050e36468" kindref="member">Fsmooth_jacobi</ref>(solnL,<sp/>rhsL,<sp/>level);</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal">Real</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1a187358833ef9bd25a218c2fd0ac499c5" kindref="member">LinOp::norm</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>local)</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac0e2e23df625040ded95611ceae98352" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;LinOp::norm:<sp/>Placeholder<sp/>for<sp/>pure<sp/>virtual<sp/>function&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1a63537ed5b853907fc8a3b7adace5a383" kindref="member">LinOp::prepareForLevel</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;LinOp::prepareForLevel()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a63537ed5b853907fc8a3b7adace5a383" kindref="member">LinOp::prepareForLevel</ref>(level-1);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1LinOp_1aa9588834363609399b2953a1285311fc" kindref="member">h</ref>.<ref refid="classamrex_1_1Vector_1a509fc6837193e6fd97249b0c072c7830" kindref="member">size</ref>()<sp/>&gt;<sp/>level)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>from<sp/>here<sp/>down<sp/>that<sp/>this<sp/>is<sp/>a<sp/>new<sp/>level<sp/>one<sp/>coarser<sp/>than<sp/>existing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1LinOp_1aa9588834363609399b2953a1285311fc" kindref="member">h</ref>.<ref refid="classamrex_1_1Vector_1a509fc6837193e6fd97249b0c072c7830" kindref="member">size</ref>()<sp/>==<sp/>level);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1aa9588834363609399b2953a1285311fc" kindref="member">h</ref>.resize(level+1);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1aa9588834363609399b2953a1285311fc" kindref="member">h</ref>[level][i]<sp/>=<sp/><ref refid="classamrex_1_1LinOp_1aa9588834363609399b2953a1285311fc" kindref="member">h</ref>[level-1][i]*2.0;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a447bf2c68e5e4fb5b275fefe879fe1e5" kindref="member">geomarray</ref>.resize(level+1);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a447bf2c68e5e4fb5b275fefe879fe1e5" kindref="member">geomarray</ref>[level].define(<ref refid="namespaceamrex_1a9fb6c36ab72dfe92709f0ea89baa4824" kindref="member">amrex::coarsen</ref>(<ref refid="classamrex_1_1LinOp_1a447bf2c68e5e4fb5b275fefe879fe1e5" kindref="member">geomarray</ref>[level-1].Domain(),2));</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>box<sp/>to<sp/>the<sp/>new<sp/>coarser<sp/>level<sp/>(assign<sp/>removes<sp/>old<sp/>BoxArray).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1aaacb98abdbfa3d9377c369fe5cc79b68" kindref="member">gbox</ref>.resize(level+1);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1aaacb98abdbfa3d9377c369fe5cc79b68" kindref="member">gbox</ref>[level]<sp/>=<sp/><ref refid="classamrex_1_1LinOp_1aaacb98abdbfa3d9377c369fe5cc79b68" kindref="member">gbox</ref>[level-1];</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1aaacb98abdbfa3d9377c369fe5cc79b68" kindref="member">gbox</ref>[level].coarsen(2);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>BndryRegister<sp/>of<sp/>relax<sp/>values<sp/>to<sp/>the<sp/>new<sp/>coarser<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1LinOp_1a58088c44f9d858885f1125efb3b4222e" kindref="member">undrrelxr</ref>.size()<sp/>==<sp/>level);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a58088c44f9d858885f1125efb3b4222e" kindref="member">undrrelxr</ref>.resize(level+1);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a58088c44f9d858885f1125efb3b4222e" kindref="member">undrrelxr</ref>[level].define(<ref refid="classamrex_1_1LinOp_1aaacb98abdbfa3d9377c369fe5cc79b68" kindref="member">gbox</ref>[level],<sp/><ref refid="classamrex_1_1LinOp_1aa82bdf791430c2a09b3b436edf9396b5" kindref="member">bgb</ref>-&gt;<ref refid="classamrex_1_1BndryRegister_1a543c6c7f9abadfda4cb25368007d14f8" kindref="member">DistributionMap</ref>(),<sp/>1,<sp/>0,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>an<sp/>Array<sp/>of<sp/>Array<sp/>of<sp/>maskvals<sp/>to<sp/>the<sp/>new<sp/>coarser<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>orientation,<sp/>build<sp/>NULL<sp/>masks,<sp/>then<sp/>use<sp/>distributed<sp/>allocation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initial<sp/>masks<sp/>for<sp/>coarse<sp/>levels,<sp/>ignore<sp/>outside_domain<sp/>possibility<sp/>since</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>always<sp/>solve<sp/>homogeneous<sp/>equation<sp/>on<sp/>coarse<sp/>levels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<sp/><ref refid="classamrex_1_1LinOp_1af9de09651d7047e04a70de03facb5398" kindref="member">maskvals</ref>.size()<sp/>==<sp/>level);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(<ref refid="classamrex_1_1LinOp_1a42cf216bf54bd0cb244669a91635dbec" kindref="member">lmaskvals</ref>.size()<sp/>==<sp/>level);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1af9de09651d7047e04a70de03facb5398" kindref="member">maskvals</ref>.resize(level+1);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a42cf216bf54bd0cb244669a91635dbec" kindref="member">lmaskvals</ref>.resize(level+1);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1af9de09651d7047e04a70de03facb5398" kindref="member">maskvals</ref>[level].resize(2*BL_SPACEDIM);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a42cf216bf54bd0cb244669a91635dbec" kindref="member">lmaskvals</ref>[level].resize(2*BL_SPACEDIM);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nGrow<sp/>=<sp/><ref refid="classamrex_1_1LinOp_1a8489bd97fdad9c4de15a5610a38f0652" kindref="member">NumGrow</ref>(level);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(OrientationIter<sp/>fi;<sp/>fi;<sp/>++fi)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Orientation<sp/>face<sp/>=<sp/>fi();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1af9de09651d7047e04a70de03facb5398" kindref="member">maskvals</ref>[level][face].define(<ref refid="classamrex_1_1LinOp_1aaacb98abdbfa3d9377c369fe5cc79b68" kindref="member">gbox</ref>[level],<sp/><ref refid="classamrex_1_1LinOp_1aa82bdf791430c2a09b3b436edf9396b5" kindref="member">bgb</ref>-&gt;<ref refid="classamrex_1_1BndryRegister_1a543c6c7f9abadfda4cb25368007d14f8" kindref="member">DistributionMap</ref>(),<sp/><ref refid="classamrex_1_1LinOp_1a447bf2c68e5e4fb5b275fefe879fe1e5" kindref="member">geomarray</ref>[level],</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face,<sp/>0,<sp/>nGrow,<sp/>0,<sp/>1,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1a42cf216bf54bd0cb244669a91635dbec" kindref="member">lmaskvals</ref>[level][face].define(<ref refid="classamrex_1_1LinOp_1af9de09651d7047e04a70de03facb5398" kindref="member">maskvals</ref>[level][face].<ref refid="classamrex_1_1LinOp_1a5f70912a54c7de221e2d51c4f432a11d" kindref="member">boxArray</ref>(),</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1af9de09651d7047e04a70de03facb5398" kindref="member">maskvals</ref>[level][face].<ref refid="classamrex_1_1LinOp_1aed40103a32e7a986e5b58594031ee887" kindref="member">DistributionMap</ref>(),<sp/>1);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MultiMask_1a9d21fed308318e770161ce5f76b4b60f" kindref="member">MultiMask::Copy</ref>(<ref refid="classamrex_1_1LinOp_1a42cf216bf54bd0cb244669a91635dbec" kindref="member">lmaskvals</ref>[level][face],<sp/><ref refid="classamrex_1_1LinOp_1af9de09651d7047e04a70de03facb5398" kindref="member">maskvals</ref>[level][face]);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1a48100b02251f55f0394e976eca1e8211" kindref="member">LinOp::makeCoefficients</ref><sp/>(MultiFab&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cs,</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;<sp/>fn,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level)</highlight></codeline>
<codeline lineno="368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;LinOp::makeCoefficients()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nc<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>index<sp/>type<sp/>of<sp/>incoming<sp/>MultiFab.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IndexType<sp/>iType(fn.boxArray().ixType());</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IndexType<sp/>cType(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(<ref refid="classamrex_1_1IndexType_1a4bbe4fdc07aa019c3a4a6839cdafcccea287ace89f7ffd266daab1798b3d48aa1" kindref="member">IndexType::CELL</ref>,<sp/><ref refid="classamrex_1_1IndexType_1a4bbe4fdc07aa019c3a4a6839cdafcccea287ace89f7ffd266daab1798b3d48aa1" kindref="member">IndexType::CELL</ref>,<sp/><ref refid="classamrex_1_1IndexType_1a4bbe4fdc07aa019c3a4a6839cdafcccea287ace89f7ffd266daab1798b3d48aa1" kindref="member">IndexType::CELL</ref>));</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IndexType<sp/>xType(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(<ref refid="classamrex_1_1IndexType_1a4bbe4fdc07aa019c3a4a6839cdafcccea410f04417a9413c9d3d862e84300eb05" kindref="member">IndexType::NODE</ref>,<sp/><ref refid="classamrex_1_1IndexType_1a4bbe4fdc07aa019c3a4a6839cdafcccea287ace89f7ffd266daab1798b3d48aa1" kindref="member">IndexType::CELL</ref>,<sp/><ref refid="classamrex_1_1IndexType_1a4bbe4fdc07aa019c3a4a6839cdafcccea287ace89f7ffd266daab1798b3d48aa1" kindref="member">IndexType::CELL</ref>));</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IndexType<sp/>yType(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(<ref refid="classamrex_1_1IndexType_1a4bbe4fdc07aa019c3a4a6839cdafcccea287ace89f7ffd266daab1798b3d48aa1" kindref="member">IndexType::CELL</ref>,<sp/><ref refid="classamrex_1_1IndexType_1a4bbe4fdc07aa019c3a4a6839cdafcccea410f04417a9413c9d3d862e84300eb05" kindref="member">IndexType::NODE</ref>,<sp/><ref refid="classamrex_1_1IndexType_1a4bbe4fdc07aa019c3a4a6839cdafcccea287ace89f7ffd266daab1798b3d48aa1" kindref="member">IndexType::CELL</ref>));</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM<sp/>==<sp/>3)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IndexType<sp/>zType(<ref refid="namespaceamrex_1a8de829410ed15dbc56e4dafc9bc6ea69a68b0c60ae4f5670ee8d0ad5dda84d0fd" kindref="member">AMREX_D_DECL</ref>(<ref refid="classamrex_1_1IndexType_1a4bbe4fdc07aa019c3a4a6839cdafcccea287ace89f7ffd266daab1798b3d48aa1" kindref="member">IndexType::CELL</ref>,<sp/><ref refid="classamrex_1_1IndexType_1a4bbe4fdc07aa019c3a4a6839cdafcccea287ace89f7ffd266daab1798b3d48aa1" kindref="member">IndexType::CELL</ref>,<sp/><ref refid="classamrex_1_1IndexType_1a4bbe4fdc07aa019c3a4a6839cdafcccea410f04417a9413c9d3d862e84300eb05" kindref="member">IndexType::NODE</ref>));</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cdir;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iType<sp/>==<sp/>cType)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdir<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iType<sp/>==<sp/>xType)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdir<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iType<sp/>==<sp/>yType)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdir<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(BL_SPACEDIM<sp/>==<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iType<sp/>==<sp/>zType)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdir<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdir<sp/>=<sp/>-100;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac0e2e23df625040ded95611ceae98352" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;LinOp::makeCoeffients:<sp/>Bad<sp/>index<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>BoxArray<sp/>d(<ref refid="classamrex_1_1LinOp_1aaacb98abdbfa3d9377c369fe5cc79b68" kindref="member">gbox</ref>[level]);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cdir<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d.surroundingNodes(cdir);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>single-component<sp/>solves<sp/>supported<sp/>(verified)<sp/>by<sp/>this<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nComp=1;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nGrow=0;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>cs.define(d,<sp/>fn.DistributionMap(),<sp/>nComp,<sp/>nGrow,<sp/>MFInfo(),<sp/><ref refid="namespaceamrex_1abda821661019fb0a77eb3a9706dc7330" kindref="member">FArrayBoxFactory</ref>());</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tiling<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cdir)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-1:</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>csmfi(cs,tiling);<sp/>csmfi.isValid();<sp/>++csmfi)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>tbx<sp/>=<sp/>csmfi.tilebox();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>csfab<sp/>=<sp/>cs[csmfi];</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>fnfab<sp/>=<sp/>fn[csmfi];</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__LO__F_8H_1aea57c40e27f6fc8b436c05451eb8dfab" kindref="member">amrex_lo_averagecc</ref>(csfab.dataPtr(),<sp/>AMREX_ARLIM(csfab.loVect()),</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(csfab.hiVect()),fnfab.dataPtr(),</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(fnfab.loVect()),AMREX_ARLIM(fnfab.hiVect()),</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbx.loVect(),tbx.hiVect(),<sp/>&amp;nc);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1LinOp_1a6b431b3abaa1031a23c3d7972d7dab93" kindref="member">harmavg</ref>)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>csmfi(cs,tiling);<sp/>csmfi.isValid();<sp/>++csmfi)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>tbx<sp/>=<sp/>csmfi.tilebox();</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>csfab<sp/>=<sp/>cs[csmfi];</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>fnfab<sp/>=<sp/>fn[csmfi];</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__LO__F_8H_1aa570eec2b5126873b1437137e9515878" kindref="member">amrex_lo_harmonic_averageec</ref>(csfab.dataPtr(),</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(csfab.loVect()),</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(csfab.hiVect()),</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fnfab.dataPtr(),</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(fnfab.loVect()),</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(fnfab.hiVect()),</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbx.loVect(),tbx.hiVect(),</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;nc,&amp;cdir);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MFIter<sp/>csmfi(cs,tiling);<sp/>csmfi.isValid();<sp/>++csmfi)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Box&amp;<sp/>tbx<sp/>=<sp/>csmfi.tilebox();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FArrayBox&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>csfab<sp/>=<sp/>cs[csmfi];</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FArrayBox&amp;<sp/>fnfab<sp/>=<sp/>fn[csmfi];</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__LO__F_8H_1a76de74ab49701b4cb362644bb3769a62" kindref="member">amrex_lo_averageec</ref>(csfab.dataPtr(),AMREX_ARLIM(csfab.loVect()),</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(csfab.hiVect()),fnfab.dataPtr(),<sp/></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AMREX_ARLIM(fnfab.loVect()),AMREX_ARLIM(fnfab.hiVect()),</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbx.loVect(),tbx.hiVect(),</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;nc,<sp/>&amp;cdir);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac0e2e23df625040ded95611ceae98352" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;LinOp::<sp/>bad<sp/>coefficient<sp/>coarsening<sp/>direction!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal">std::ostream&amp;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1aef9959d08e92b487aca259f7c96c87d1" kindref="member">operator&lt;&lt; </ref>(std::ostream&amp;<sp/>os,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1LinOp_1a528f7163d138d4c86f826821e751fae5" kindref="member">LinOp</ref>&amp;<sp/><sp/>lp)</highlight></codeline>
<codeline lineno="491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>())</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LinOp&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Grids:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>lp.h.size();<sp/>++level)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>level<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>level<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lp.gbox[level]<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Grid<sp/>Spacing:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>lp.h.size();<sp/>++level)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>level<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>level<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>dx<sp/>=<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=0;<sp/>d<sp/>&lt;<sp/><ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref>;<sp/>++d)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>lp.h[level][d]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Harmonic<sp/>average?<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(lp.harmavg<sp/>==<sp/>1<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;yes&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;no&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Verbosity:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lp.verbose<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Max<sp/>Order:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lp.maxorder<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>())</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Masks:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>lp.h.size();<sp/>++level)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>())</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;level<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>level<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nproc<sp/>=<sp/>0;<sp/>nproc<sp/>&lt;<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1aa191723b5d24ceaf64e9d49f542cfcc2" kindref="member">ParallelDescriptor::NProcs</ref>();<sp/>++nproc)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nproc<sp/>==<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">ParallelDescriptor::MyProc</ref>())</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Processor<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nproc<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(OrientationIter<sp/>oitr;<sp/>oitr;<sp/>++oitr)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Orientation<sp/>face<sp/>=<sp/>oitr();</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(MultiMaskIter<sp/>mmi(lp.maskvals[level][face]);<sp/>mmi.isValid();<sp/>++mmi)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>lp.maskvals[level][face][mmi];</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Geometry&amp;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1a399736dcc956ff8f1fffaa2757028874" kindref="member">LinOp::getGeom</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1LinOp_1a447bf2c68e5e4fb5b275fefe879fe1e5" kindref="member">geomarray</ref>[level];</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>*<sp/></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1a61745f14570d6a595ab67ec1bf283c18" kindref="member">LinOp::getDx</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="554"><highlight class="normal">{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1LinOp_1aa9588834363609399b2953a1285311fc" kindref="member">h</ref>[level].data();</highlight></codeline>
<codeline lineno="556"><highlight class="normal">}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal">Real</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1a5823bb22e92e48ddbc13ceae382d0747" kindref="member">LinOp::get_alpha</ref><sp/>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="560"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aea69993eec3c9ca497cd0e47522b2ec6" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;LinOp::get_alpha&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="565"><highlight class="normal">Real</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1af245a02cfc92f3ddf30d6ace1c1683bb" kindref="member">LinOp::get_beta</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="567"><highlight class="keyword"></highlight><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aea69993eec3c9ca497cd0e47522b2ec6" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;LinOp::get_beta&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1ac8d092273a44066329b73468fe885d2d" kindref="member">LinOp::aCoefficients</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MultiFab<sp/>junk;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aea69993eec3c9ca497cd0e47522b2ec6" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;LinOp::aCoefficients&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>junk;</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MultiFab&amp;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1a7bb1e7f6286ace56305bcb17a2ebd06a" kindref="member">LinOp::bCoefficients</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MultiFab<sp/>junk;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aea69993eec3c9ca497cd0e47522b2ec6" kindref="member">amrex::Abort</ref>(</highlight><highlight class="stringliteral">&quot;LinOp::bCoefficients&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>junk;</highlight></codeline>
<codeline lineno="586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><ref refid="classamrex_1_1LinOp_1a09492904c8111d7108412a034efd4b1e" kindref="member">LinOp::maxOrder</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxorder_)</highlight></codeline>
<codeline lineno="590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a53ebc8b227de416f458800faa44c619e" kindref="member">BL_ASSERT</ref>(maxorder_<sp/>&gt;=<sp/>2);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>maxorder_<sp/>=<sp/>(maxorder_<sp/>&lt;<sp/>2<sp/>?<sp/>2<sp/>:<sp/>maxorder_<sp/>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>omaxorder<sp/>=<sp/><ref refid="classamrex_1_1LinOp_1aa898f6575bb89bf315bb7a5309ad944f" kindref="member">maxorder</ref>;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1LinOp_1aa898f6575bb89bf315bb7a5309ad944f" kindref="member">maxorder</ref><sp/>=<sp/>maxorder_;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>omaxorder;</highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/LinearSolvers/C_CellMG/AMReX_LinOp.cpp"/>
  </compounddef>
</doxygen>
