<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__ParticleReduce_8H" kind="file" language="C++">
    <compoundname>AMReX_ParticleReduce.H</compoundname>
    <includes refid="AMReX__IntVect_8H" local="no">AMReX_IntVect.H</includes>
    <includes refid="AMReX__Box_8H" local="no">AMReX_Box.H</includes>
    <includes refid="AMReX__Gpu_8H" local="no">AMReX_Gpu.H</includes>
    <includes refid="AMReX__Print_8H" local="no">AMReX_Print.H</includes>
    <includes refid="AMReX__GpuUtility_8H" local="no">AMReX_GpuUtility.H</includes>
    <includes refid="AMReX__TypeTraits_8H" local="no">AMReX_TypeTraits.H</includes>
    <includes local="no">limits</includes>
    <includedby refid="AMReX__Particles_8H" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particles.H</includedby>
    <incdepgraph>
      <node id="71833">
        <label>AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="71811" relation="include">
        </childnode>
        <childnode refid="71771" relation="include">
        </childnode>
        <childnode refid="71834" relation="include">
        </childnode>
        <childnode refid="71830" relation="include">
        </childnode>
      </node>
      <node id="71802">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="71754" relation="include">
        </childnode>
        <childnode refid="71803" relation="include">
        </childnode>
        <childnode refid="71771" relation="include">
        </childnode>
        <childnode refid="71750" relation="include">
        </childnode>
      </node>
      <node id="71832">
        <label>iomanip</label>
      </node>
      <node id="71764">
        <label>functional</label>
      </node>
      <node id="71796">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="71757" relation="include">
        </childnode>
        <childnode refid="71797" relation="include">
        </childnode>
        <childnode refid="71789" relation="include">
        </childnode>
        <childnode refid="71798" relation="include">
        </childnode>
        <childnode refid="71782" relation="include">
        </childnode>
        <childnode refid="71799" relation="include">
        </childnode>
        <childnode refid="71752" relation="include">
        </childnode>
        <childnode refid="71771" relation="include">
        </childnode>
      </node>
      <node id="71777">
        <label>limits</label>
      </node>
      <node id="71809">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="71756" relation="include">
        </childnode>
        <childnode refid="71768" relation="include">
        </childnode>
      </node>
      <node id="71779">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="71774" relation="include">
        </childnode>
        <childnode refid="71780" relation="include">
        </childnode>
        <childnode refid="71781" relation="include">
        </childnode>
        <childnode refid="71750" relation="include">
        </childnode>
        <childnode refid="71747" relation="include">
        </childnode>
        <childnode refid="71782" relation="include">
        </childnode>
        <childnode refid="71783" relation="include">
        </childnode>
        <childnode refid="71751" relation="include">
        </childnode>
        <childnode refid="71752" relation="include">
        </childnode>
        <childnode refid="71784" relation="include">
        </childnode>
        <childnode refid="71771" relation="include">
        </childnode>
        <childnode refid="71761" relation="include">
        </childnode>
        <childnode refid="71766" relation="include">
        </childnode>
      </node>
      <node id="71770">
        <label>float.h</label>
      </node>
      <node id="71819">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="71761" relation="include">
        </childnode>
        <childnode refid="71766" relation="include">
        </childnode>
        <childnode refid="71815" relation="include">
        </childnode>
        <childnode refid="71769" relation="include">
        </childnode>
        <childnode refid="71768" relation="include">
        </childnode>
        <childnode refid="71752" relation="include">
        </childnode>
        <childnode refid="71784" relation="include">
        </childnode>
        <childnode refid="71757" relation="include">
        </childnode>
        <childnode refid="71776" relation="include">
        </childnode>
      </node>
      <node id="71800">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="71789" relation="include">
        </childnode>
        <childnode refid="71777" relation="include">
        </childnode>
        <childnode refid="71754" relation="include">
        </childnode>
        <childnode refid="71797" relation="include">
        </childnode>
        <childnode refid="71757" relation="include">
        </childnode>
        <childnode refid="71760" relation="include">
        </childnode>
        <childnode refid="71752" relation="include">
        </childnode>
        <childnode refid="71771" relation="include">
        </childnode>
        <childnode refid="71779" relation="include">
        </childnode>
        <childnode refid="71768" relation="include">
        </childnode>
        <childnode refid="71801" relation="include">
        </childnode>
      </node>
      <node id="71820">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="71761" relation="include">
        </childnode>
      </node>
      <node id="71747">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="71748" relation="include">
        </childnode>
        <childnode refid="71750" relation="include">
        </childnode>
        <childnode refid="71751" relation="include">
        </childnode>
        <childnode refid="71752" relation="include">
        </childnode>
        <childnode refid="71771" relation="include">
        </childnode>
        <childnode refid="71773" relation="include">
        </childnode>
        <childnode refid="71767" relation="include">
        </childnode>
        <childnode refid="71769" relation="include">
        </childnode>
        <childnode refid="71761" relation="include">
        </childnode>
        <childnode refid="71774" relation="include">
        </childnode>
        <childnode refid="71775" relation="include">
        </childnode>
        <childnode refid="71776" relation="include">
        </childnode>
        <childnode refid="71777" relation="include">
        </childnode>
        <childnode refid="71778" relation="include">
        </childnode>
        <childnode refid="71772" relation="include">
        </childnode>
      </node>
      <node id="71760">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="71761" relation="include">
        </childnode>
        <childnode refid="71750" relation="include">
        </childnode>
        <childnode refid="71762" relation="include">
        </childnode>
        <childnode refid="71757" relation="include">
        </childnode>
        <childnode refid="71764" relation="include">
        </childnode>
        <childnode refid="71756" relation="include">
        </childnode>
        <childnode refid="71759" relation="include">
        </childnode>
        <childnode refid="71765" relation="include">
        </childnode>
        <childnode refid="71754" relation="include">
        </childnode>
      </node>
      <node id="71826">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="71787">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="71788" relation="include">
        </childnode>
        <childnode refid="71756" relation="include">
        </childnode>
      </node>
      <node id="71771">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="71772" relation="include">
        </childnode>
        <childnode refid="71765" relation="include">
        </childnode>
        <childnode refid="71754" relation="include">
        </childnode>
        <childnode refid="71767" relation="include">
        </childnode>
      </node>
      <node id="71831">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="71758" relation="include">
        </childnode>
        <childnode refid="71803" relation="include">
        </childnode>
        <childnode refid="71832" relation="include">
        </childnode>
        <childnode refid="71760" relation="include">
        </childnode>
        <childnode refid="71802" relation="include">
        </childnode>
        <childnode refid="71801" relation="include">
        </childnode>
      </node>
      <node id="71776">
        <label>cmath</label>
      </node>
      <node id="71763">
        <label>stdexcept</label>
      </node>
      <node id="71811">
        <label>numeric</label>
      </node>
      <node id="71821">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="71753" relation="include">
        </childnode>
        <childnode refid="71822" relation="include">
        </childnode>
        <childnode refid="71764" relation="include">
        </childnode>
        <childnode refid="71791" relation="include">
        </childnode>
        <childnode refid="71755" relation="include">
        </childnode>
        <childnode refid="71814" relation="include">
        </childnode>
        <childnode refid="71823" relation="include">
        </childnode>
        <childnode refid="71820" relation="include">
        </childnode>
        <childnode refid="71761" relation="include">
        </childnode>
      </node>
      <node id="71799">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="71774" relation="include">
        </childnode>
        <childnode refid="71747" relation="include">
        </childnode>
        <childnode refid="71782" relation="include">
        </childnode>
        <childnode refid="71779" relation="include">
        </childnode>
        <childnode refid="71752" relation="include">
        </childnode>
        <childnode refid="71771" relation="include">
        </childnode>
      </node>
      <node id="71756">
        <label>string</label>
      </node>
      <node id="71824">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="71779" relation="include">
        </childnode>
      </node>
      <node id="71789">
        <label>map</label>
      </node>
      <node id="71746">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleReduce.H</label>
        <link refid="AMReX_ParticleReduce.H"/>
        <childnode refid="71747" relation="include">
        </childnode>
        <childnode refid="71779" relation="include">
        </childnode>
        <childnode refid="71785" relation="include">
        </childnode>
        <childnode refid="71831" relation="include">
        </childnode>
        <childnode refid="71819" relation="include">
        </childnode>
        <childnode refid="71814" relation="include">
        </childnode>
        <childnode refid="71777" relation="include">
        </childnode>
      </node>
      <node id="71812">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="71761" relation="include">
        </childnode>
        <childnode refid="71801" relation="include">
        </childnode>
      </node>
      <node id="71823">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="71755" relation="include">
        </childnode>
      </node>
      <node id="71792">
        <label>cfloat</label>
      </node>
      <node id="71803">
        <label>fstream</label>
      </node>
      <node id="71781">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="71768" relation="include">
        </childnode>
      </node>
      <node id="71752">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="71753" relation="include">
        </childnode>
        <childnode refid="71754" relation="include">
        </childnode>
        <childnode refid="71755" relation="include">
        </childnode>
        <childnode refid="71756" relation="include">
        </childnode>
        <childnode refid="71757" relation="include">
        </childnode>
        <childnode refid="71758" relation="include">
        </childnode>
        <childnode refid="71759" relation="include">
        </childnode>
        <childnode refid="71760" relation="include">
        </childnode>
        <childnode refid="71761" relation="include">
        </childnode>
        <childnode refid="71766" relation="include">
        </childnode>
        <childnode refid="71767" relation="include">
        </childnode>
        <childnode refid="71751" relation="include">
        </childnode>
        <childnode refid="71768" relation="include">
        </childnode>
      </node>
      <node id="71818">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="71761" relation="include">
        </childnode>
        <childnode refid="71766" relation="include">
        </childnode>
        <childnode refid="71819" relation="include">
        </childnode>
        <childnode refid="71820" relation="include">
        </childnode>
      </node>
      <node id="71751">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="71769">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="71830">
        <label>AMReX_GpuAllocators.H</label>
        <link refid="AMReX__GpuAllocators_8H"/>
        <childnode refid="71789" relation="include">
        </childnode>
        <childnode refid="71754" relation="include">
        </childnode>
        <childnode refid="71777" relation="include">
        </childnode>
        <childnode refid="71831" relation="include">
        </childnode>
        <childnode refid="71817" relation="include">
        </childnode>
        <childnode refid="71815" relation="include">
        </childnode>
      </node>
      <node id="71786">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="71761" relation="include">
        </childnode>
        <childnode refid="71766" relation="include">
        </childnode>
        <childnode refid="71787" relation="include">
        </childnode>
        <childnode refid="71813" relation="include">
        </childnode>
        <childnode refid="71815" relation="include">
        </childnode>
        <childnode refid="71816" relation="include">
        </childnode>
        <childnode refid="71818" relation="include">
        </childnode>
        <childnode refid="71821" relation="include">
        </childnode>
        <childnode refid="71779" relation="include">
        </childnode>
        <childnode refid="71824" relation="include">
        </childnode>
        <childnode refid="71769" relation="include">
        </childnode>
        <childnode refid="71767" relation="include">
        </childnode>
        <childnode refid="71814" relation="include">
        </childnode>
        <childnode refid="71797" relation="include">
        </childnode>
        <childnode refid="71777" relation="include">
        </childnode>
        <childnode refid="71772" relation="include">
        </childnode>
        <childnode refid="71755" relation="include">
        </childnode>
        <childnode refid="71825" relation="include">
        </childnode>
        <childnode refid="71826" relation="include">
        </childnode>
      </node>
      <node id="71793">
        <label>sys/types.h</label>
      </node>
      <node id="71810">
        <label>typeinfo</label>
      </node>
      <node id="71759">
        <label>cstdio</label>
      </node>
      <node id="71814">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="71791" relation="include">
        </childnode>
        <childnode refid="71769" relation="include">
        </childnode>
      </node>
      <node id="71766">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="71761" relation="include">
        </childnode>
      </node>
      <node id="71822">
        <label>tuple</label>
      </node>
      <node id="71804">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="71805" relation="include">
        </childnode>
        <childnode refid="71756" relation="include">
        </childnode>
        <childnode refid="71755" relation="include">
        </childnode>
        <childnode refid="71758" relation="include">
        </childnode>
        <childnode refid="71759" relation="include">
        </childnode>
        <childnode refid="71775" relation="include">
        </childnode>
        <childnode refid="71806" relation="include">
        </childnode>
        <childnode refid="71807" relation="include">
        </childnode>
        <childnode refid="71808" relation="include">
        </childnode>
      </node>
      <node id="71794">
        <label>unistd.h</label>
      </node>
      <node id="71805">
        <label>stack</label>
      </node>
      <node id="71765">
        <label>vector</label>
      </node>
      <node id="71767">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="71760" relation="include">
        </childnode>
      </node>
      <node id="71761">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="71755">
        <label>utility</label>
      </node>
      <node id="71753">
        <label>array</label>
      </node>
      <node id="71758">
        <label>sstream</label>
      </node>
      <node id="71762">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="71763" relation="include">
        </childnode>
      </node>
      <node id="71780">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="71772" relation="include">
        </childnode>
        <childnode refid="71761" relation="include">
        </childnode>
        <childnode refid="71769" relation="include">
        </childnode>
        <childnode refid="71773" relation="include">
        </childnode>
      </node>
      <node id="71748">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="71749" relation="include">
        </childnode>
      </node>
      <node id="71813">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="71761" relation="include">
        </childnode>
        <childnode refid="71766" relation="include">
        </childnode>
        <childnode refid="71787" relation="include">
        </childnode>
        <childnode refid="71779" relation="include">
        </childnode>
        <childnode refid="71814" relation="include">
        </childnode>
      </node>
      <node id="71801">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="71750" relation="include">
        </childnode>
        <childnode refid="71802" relation="include">
        </childnode>
        <childnode refid="71804" relation="include">
        </childnode>
        <childnode refid="71809" relation="include">
        </childnode>
        <childnode refid="71767" relation="include">
        </childnode>
        <childnode refid="71768" relation="include">
        </childnode>
        <childnode refid="71752" relation="include">
        </childnode>
        <childnode refid="71771" relation="include">
        </childnode>
        <childnode refid="71779" relation="include">
        </childnode>
        <childnode refid="71757" relation="include">
        </childnode>
        <childnode refid="71765" relation="include">
        </childnode>
        <childnode refid="71756" relation="include">
        </childnode>
        <childnode refid="71810" relation="include">
        </childnode>
        <childnode refid="71772" relation="include">
        </childnode>
        <childnode refid="71764" relation="include">
        </childnode>
        <childnode refid="71777" relation="include">
        </childnode>
        <childnode refid="71811" relation="include">
        </childnode>
      </node>
      <node id="71788">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="71775" relation="include">
        </childnode>
        <childnode refid="71757" relation="include">
        </childnode>
        <childnode refid="71756" relation="include">
        </childnode>
        <childnode refid="71789" relation="include">
        </childnode>
        <childnode refid="71790" relation="include">
        </childnode>
        <childnode refid="71791" relation="include">
        </childnode>
        <childnode refid="71778" relation="include">
        </childnode>
        <childnode refid="71777" relation="include">
        </childnode>
        <childnode refid="71792" relation="include">
        </childnode>
        <childnode refid="71793" relation="include">
        </childnode>
        <childnode refid="71794" relation="include">
        </childnode>
        <childnode refid="71795" relation="include">
        </childnode>
        <childnode refid="71767" relation="include">
        </childnode>
        <childnode refid="71768" relation="include">
        </childnode>
        <childnode refid="71752" relation="include">
        </childnode>
        <childnode refid="71771" relation="include">
        </childnode>
        <childnode refid="71779" relation="include">
        </childnode>
        <childnode refid="71796" relation="include">
        </childnode>
        <childnode refid="71800" relation="include">
        </childnode>
        <childnode refid="71801" relation="include">
        </childnode>
        <childnode refid="71812" relation="include">
        </childnode>
      </node>
      <node id="71817">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="71767" relation="include">
        </childnode>
        <childnode refid="71797" relation="include">
        </childnode>
        <childnode refid="71775" relation="include">
        </childnode>
      </node>
      <node id="71783">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="71774" relation="include">
        </childnode>
        <childnode refid="71767" relation="include">
        </childnode>
        <childnode refid="71751" relation="include">
        </childnode>
        <childnode refid="71761" relation="include">
        </childnode>
      </node>
      <node id="71773">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="71757" relation="include">
        </childnode>
        <childnode refid="71768" relation="include">
        </childnode>
        <childnode refid="71752" relation="include">
        </childnode>
      </node>
      <node id="71795">
        <label>sys/wait.h</label>
      </node>
      <node id="71774">
        <label>iosfwd</label>
      </node>
      <node id="71775">
        <label>cstdlib</label>
      </node>
      <node id="71808">
        <label>cfenv</label>
      </node>
      <node id="71757">
        <label>iostream</label>
      </node>
      <node id="71782">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="71774" relation="include">
        </childnode>
        <childnode refid="71750" relation="include">
        </childnode>
        <childnode refid="71747" relation="include">
        </childnode>
        <childnode refid="71751" relation="include">
        </childnode>
      </node>
      <node id="71784">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="71747" relation="include">
        </childnode>
      </node>
      <node id="71797">
        <label>cstddef</label>
      </node>
      <node id="71798">
        <label>unordered_map</label>
      </node>
      <node id="71834">
        <label>AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="71814" relation="include">
        </childnode>
        <childnode refid="71785" relation="include">
        </childnode>
        <childnode refid="71791" relation="include">
        </childnode>
        <childnode refid="71755" relation="include">
        </childnode>
        <childnode refid="71754" relation="include">
        </childnode>
        <childnode refid="71828" relation="include">
        </childnode>
      </node>
      <node id="71785">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="71761" relation="include">
        </childnode>
        <childnode refid="71766" relation="include">
        </childnode>
        <childnode refid="71786" relation="include">
        </childnode>
        <childnode refid="71787" relation="include">
        </childnode>
        <childnode refid="71819" relation="include">
        </childnode>
        <childnode refid="71815" relation="include">
        </childnode>
        <childnode refid="71827" relation="include">
        </childnode>
        <childnode refid="71829" relation="include">
        </childnode>
        <childnode refid="71816" relation="include">
        </childnode>
        <childnode refid="71813" relation="include">
        </childnode>
        <childnode refid="71818" relation="include">
        </childnode>
        <childnode refid="71830" relation="include">
        </childnode>
        <childnode refid="71833" relation="include">
        </childnode>
        <childnode refid="71835" relation="include">
        </childnode>
      </node>
      <node id="71778">
        <label>climits</label>
      </node>
      <node id="71835">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="71790">
        <label>chrono</label>
      </node>
      <node id="71825">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="71807">
        <label>csignal</label>
      </node>
      <node id="71791">
        <label>type_traits</label>
      </node>
      <node id="71750">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="71829">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="71817" relation="include">
        </childnode>
      </node>
      <node id="71772">
        <label>algorithm</label>
      </node>
      <node id="71815">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="71775" relation="include">
        </childnode>
        <childnode refid="71754" relation="include">
        </childnode>
        <childnode refid="71753" relation="include">
        </childnode>
        <childnode refid="71760" relation="include">
        </childnode>
        <childnode refid="71788" relation="include">
        </childnode>
        <childnode refid="71787" relation="include">
        </childnode>
        <childnode refid="71766" relation="include">
        </childnode>
      </node>
      <node id="71806">
        <label>execinfo.h</label>
      </node>
      <node id="71828">
        <label>cstring</label>
      </node>
      <node id="71754">
        <label>memory</label>
      </node>
      <node id="71827">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="71797" relation="include">
        </childnode>
        <childnode refid="71828" relation="include">
        </childnode>
        <childnode refid="71775" relation="include">
        </childnode>
        <childnode refid="71754" relation="include">
        </childnode>
        <childnode refid="71817" relation="include">
        </childnode>
        <childnode refid="71814" relation="include">
        </childnode>
        <childnode refid="71815" relation="include">
        </childnode>
      </node>
      <node id="71749">
        <label>inttypes.h</label>
      </node>
      <node id="71816">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="71761" relation="include">
        </childnode>
        <childnode refid="71766" relation="include">
        </childnode>
        <childnode refid="71815" relation="include">
        </childnode>
        <childnode refid="71814" relation="include">
        </childnode>
        <childnode refid="71817" relation="include">
        </childnode>
        <childnode refid="71775" relation="include">
        </childnode>
      </node>
      <node id="71768">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="71769" relation="include">
        </childnode>
        <childnode refid="71770" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="71846">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticle_mod_K.H</label>
        <link refid="AMReX__TracerParticle__mod__K_8H"/>
        <childnode refid="71847" relation="include">
        </childnode>
      </node>
      <node id="71840">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.cpp</label>
        <link refid="AMReX__LoadBalanceKD_8cpp"/>
      </node>
      <node id="71842">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_NeighborParticles.H</label>
        <link refid="AMReX__NeighborParticles_8H"/>
      </node>
      <node id="71838">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/AmrCore/AMReX_AmrParticles.H</label>
        <link refid="AMReX__AmrParticles_8H"/>
      </node>
      <node id="71841">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_NeighborList.H</label>
        <link refid="AMReX__NeighborList_8H"/>
      </node>
      <node id="71836">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleReduce.H</label>
        <link refid="AMReX_ParticleReduce.H"/>
        <childnode refid="71837" relation="include">
        </childnode>
      </node>
      <node id="71844">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleLocator.H</label>
        <link refid="AMReX__ParticleLocator_8H"/>
        <childnode refid="71837" relation="include">
        </childnode>
      </node>
      <node id="71843">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particle_mod_K.H</label>
        <link refid="AMReX__Particle__mod__K_8H"/>
        <childnode refid="71837" relation="include">
        </childnode>
      </node>
      <node id="71845">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticles.H</label>
        <link refid="AMReX__TracerParticles_8H"/>
        <childnode refid="71838" relation="include">
        </childnode>
        <childnode refid="71846" relation="include">
        </childnode>
        <childnode refid="71847" relation="include">
        </childnode>
      </node>
      <node id="71839">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_LoadBalanceKD.H</label>
        <link refid="AMReX__LoadBalanceKD_8H"/>
        <childnode refid="71840" relation="include">
        </childnode>
      </node>
      <node id="71837">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_Particles.H</label>
        <link refid="AMReX__Particles_8H"/>
        <childnode refid="71838" relation="include">
        </childnode>
        <childnode refid="71839" relation="include">
        </childnode>
        <childnode refid="71841" relation="include">
        </childnode>
        <childnode refid="71842" relation="include">
        </childnode>
        <childnode refid="71843" relation="include">
        </childnode>
        <childnode refid="71844" relation="include">
        </childnode>
        <childnode refid="71845" relation="include">
        </childnode>
      </node>
      <node id="71847">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_TracerParticles.cpp</label>
        <link refid="AMReX__TracerParticles_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_PARTICLEREDUCE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_PARTICLEREDUCE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__IntVect_8H" kindref="compound">AMReX_IntVect.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Box_8H" kindref="compound">AMReX_Box.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Gpu_8H" kindref="compound">AMReX_Gpu.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Print_8H" kindref="compound">AMReX_Print.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__GpuUtility_8H" kindref="compound">AMReX_GpuUtility.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__TypeTraits_8H" kindref="compound">AMReX_TypeTraits.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="namespaceamrex_1a8f1971a46d37a951bb0ef8b189f8987f" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" kindref="member">ReduceSum</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/>F&amp;&amp;<sp/>f)<sp/>-&gt;<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()))</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" kindref="member">ReduceSum</ref>(pc,<sp/>0,<sp/>pc.finestLevel(),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="namespaceamrex_1a9600b570271756f90a1c8b3c7e05a9a1" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" kindref="member">ReduceSum</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev,<sp/>F&amp;&amp;<sp/>f)<sp/>-&gt;<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()))</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" kindref="member">ReduceSum</ref>(pc,<sp/>lev,<sp/>lev,<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="namespaceamrex_1a234b29ca2ab42dc4b7d3713800d82a4e" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" kindref="member">ReduceSum</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev_max,<sp/>F&amp;&amp;<sp/>f)<sp/>-&gt;<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()))</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::ParConstIterType;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>sm<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpSum&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;value_type&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>lev_min;<sp/>lev<sp/>&lt;=<sp/>lev_max;<sp/>++lev)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>pti(pc,<sp/>lev);<sp/>pti.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++pti)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pti.GetParticleTile();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex__eb__to__vtk_1af2ac1714ba629496c770f2c5d141431c" kindref="member">np</ref><sp/>=<sp/>tile.numParticles();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getConstParticleTileData();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a45695a39d966b9ca3229592cdd03c79a" kindref="member">eval</ref>(<ref refid="namespaceamrex__eb__to__vtk_1af2ac1714ba629496c770f2c5d141431c" kindref="member">np</ref>,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>-&gt;<sp/>ReduceTuple<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{f(ptd.getSuperParticle(i))};});</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a0d0638a86325d2fbf74cde6dcea98b1f" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sm<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>lev_min;<sp/>lev<sp/>&lt;=<sp/>lev_max;<sp/>++lev)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(!system::regtest_reduction)<sp/>reduction(+:sm)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>pti(pc,<sp/>lev);<sp/>pti.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++pti)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pti.GetParticleTile();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex__eb__to__vtk_1af2ac1714ba629496c770f2c5d141431c" kindref="member">np</ref><sp/>=<sp/>tile.numParticles();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getConstParticleTileData();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespaceamrex__eb__to__vtk_1af2ac1714ba629496c770f2c5d141431c" kindref="member">np</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sm<sp/>+=<sp/>f(ptd.getSuperParticle(i));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sm;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="namespaceamrex_1a7ea00de6fd7be3ddb1b4f841295cac21" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" kindref="member">ReduceMax</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/>F&amp;&amp;<sp/>f)<sp/>-&gt;<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()))</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" kindref="member">ReduceMax</ref>(pc,<sp/>0,<sp/>pc.finestLevel(),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="namespaceamrex_1af55bd59d2c594a63ae6bb0136596fb9b" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" kindref="member">ReduceMax</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev,<sp/>F&amp;&amp;<sp/>f)<sp/>-&gt;<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()))</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" kindref="member">ReduceMax</ref>(pc,<sp/>lev,<sp/>lev,<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="namespaceamrex_1aa9bf7aa5f979cd910b5b270070cac8b1" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" kindref="member">ReduceMax</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev_max,<sp/>F&amp;&amp;<sp/>f)<sp/>-&gt;<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()))</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::ParConstIterType;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>value_type<sp/>value_lowest<sp/>=<sp/>std::numeric_limits&lt;value_type&gt;::lowest();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>r<sp/>=<sp/>value_lowest;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpMax&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;value_type&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>lev_min;<sp/>lev<sp/>&lt;=<sp/>lev_max;<sp/>++lev)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>pti(pc,<sp/>lev);<sp/>pti.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++pti)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pti.GetParticleTile();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex__eb__to__vtk_1af2ac1714ba629496c770f2c5d141431c" kindref="member">np</ref><sp/>=<sp/>tile.numParticles();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getConstParticleTileData();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a45695a39d966b9ca3229592cdd03c79a" kindref="member">eval</ref>(<ref refid="namespaceamrex__eb__to__vtk_1af2ac1714ba629496c770f2c5d141431c" kindref="member">np</ref>,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>-&gt;<sp/>ReduceTuple<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{f(ptd.getSuperParticle(i))};});</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a0d0638a86325d2fbf74cde6dcea98b1f" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>lev_min;<sp/>lev<sp/>&lt;=<sp/>lev_max;<sp/>++lev)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(!system::regtest_reduction)<sp/>reduction(max:r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>pti(pc,<sp/>lev);<sp/>pti.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++pti)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pti.GetParticleTile();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex__eb__to__vtk_1af2ac1714ba629496c770f2c5d141431c" kindref="member">np</ref><sp/>=<sp/>tile.numParticles();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getConstParticleTileData();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespaceamrex__eb__to__vtk_1af2ac1714ba629496c770f2c5d141431c" kindref="member">np</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(r,<sp/>f(ptd.getSuperParticle(i)));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="namespaceamrex_1a3aa271dcaabdcc69a172b422fdc60349" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" kindref="member">ReduceMin</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/>F&amp;&amp;<sp/>f)<sp/>-&gt;<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()))</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" kindref="member">ReduceMin</ref>(pc,<sp/>0,<sp/>pc.finestLevel(),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="namespaceamrex_1aab38aa5f542e67c840d6e9c6d30d586a" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" kindref="member">ReduceMin</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev,<sp/>F&amp;&amp;<sp/>f)<sp/>-&gt;<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()))</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" kindref="member">ReduceMin</ref>(pc,<sp/>lev,<sp/>lev,<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="namespaceamrex_1ab8f47432b3e35fe46b1b89def917916e" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" kindref="member">ReduceMin</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev_max,<sp/>F&amp;&amp;<sp/>f)<sp/>-&gt;<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()))</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::ParConstIterType;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>value_type<sp/>value_max<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;value_type&gt;::max</ref>();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>r<sp/>=<sp/>value_max;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpMin&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;value_type&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>lev_min;<sp/>lev<sp/>&lt;=<sp/>lev_max;<sp/>++lev)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>pti(pc,<sp/>lev);<sp/>pti.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++pti)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pti.GetParticleTile();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex__eb__to__vtk_1af2ac1714ba629496c770f2c5d141431c" kindref="member">np</ref><sp/>=<sp/>tile.numParticles();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getConstParticleTileData();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a45695a39d966b9ca3229592cdd03c79a" kindref="member">eval</ref>(<ref refid="namespaceamrex__eb__to__vtk_1af2ac1714ba629496c770f2c5d141431c" kindref="member">np</ref>,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>-&gt;<sp/>ReduceTuple<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{f(ptd.getSuperParticle(i))};});</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a0d0638a86325d2fbf74cde6dcea98b1f" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>lev_min;<sp/>lev<sp/>&lt;=<sp/>lev_max;<sp/>++lev)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(!system::regtest_reduction)<sp/>reduction(min:r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>pti(pc,<sp/>lev);<sp/>pti.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++pti)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pti.GetParticleTile();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex__eb__to__vtk_1af2ac1714ba629496c770f2c5d141431c" kindref="member">np</ref><sp/>=<sp/>tile.numParticles();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getConstParticleTileData();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespaceamrex__eb__to__vtk_1af2ac1714ba629496c770f2c5d141431c" kindref="member">np</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(r,<sp/>f(ptd.getSuperParticle(i)));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="namespaceamrex_1aa175f510a09bbc1252a4e1b8f3ac5250" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a3866c459fc8c798d5a19fa747a3500b5" kindref="member">ReduceLogicalAnd</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3866c459fc8c798d5a19fa747a3500b5" kindref="member">ReduceLogicalAnd</ref>(pc,<sp/>0,<sp/>pc.finestLevel(),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="namespaceamrex_1a2e4d86e52a629511e02bff646ca60b59" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a3866c459fc8c798d5a19fa747a3500b5" kindref="member">ReduceLogicalAnd</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3866c459fc8c798d5a19fa747a3500b5" kindref="member">ReduceLogicalAnd</ref>(pc,<sp/>lev,<sp/>lev,<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="namespaceamrex_1a14d08a69d1ad19e5499277055d469400" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a3866c459fc8c798d5a19fa747a3500b5" kindref="member">ReduceLogicalAnd</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev_max,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::ParConstIterType;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpLogicalAnd&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;int&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>lev_min;<sp/>lev<sp/>&lt;=<sp/>lev_max;<sp/>++lev)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>pti(pc,<sp/>lev);<sp/>pti.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++pti)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pti.GetParticleTile();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex__eb__to__vtk_1af2ac1714ba629496c770f2c5d141431c" kindref="member">np</ref><sp/>=<sp/>tile.numParticles();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getConstParticleTileData();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a45695a39d966b9ca3229592cdd03c79a" kindref="member">eval</ref>(<ref refid="namespaceamrex__eb__to__vtk_1af2ac1714ba629496c770f2c5d141431c" kindref="member">np</ref>,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>-&gt;<sp/>ReduceTuple<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{f(ptd.getSuperParticle(i))};});</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a0d0638a86325d2fbf74cde6dcea98b1f" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>lev_min;<sp/>lev<sp/>&lt;=<sp/>lev_max;<sp/>++lev)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(!system::regtest_reduction)<sp/>reduction(&amp;&amp;:r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>pti(pc,<sp/>lev);<sp/>pti.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++pti)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pti.GetParticleTile();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex__eb__to__vtk_1af2ac1714ba629496c770f2c5d141431c" kindref="member">np</ref><sp/>=<sp/>tile.numParticles();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getConstParticleTileData();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespaceamrex__eb__to__vtk_1af2ac1714ba629496c770f2c5d141431c" kindref="member">np</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>r<sp/>&amp;&amp;<sp/>f(ptd.getSuperParticle(i));</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="namespaceamrex_1a43f13583043013b5751afe1e193cc8b5" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a86ff43c965c29ca6c76704135c773345" kindref="member">ReduceLogicalOr</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="284"><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a86ff43c965c29ca6c76704135c773345" kindref="member">ReduceLogicalOr</ref>(pc,<sp/>0,<sp/>pc.finestLevel(),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="namespaceamrex_1a18f76938d120a4d9891cc99e67cab771" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a86ff43c965c29ca6c76704135c773345" kindref="member">ReduceLogicalOr</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a86ff43c965c29ca6c76704135c773345" kindref="member">ReduceLogicalOr</ref>(pc,<sp/>lev,<sp/>lev,<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="namespaceamrex_1a4045ba476918bce64dc92d94e4cda26d" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a86ff43c965c29ca6c76704135c773345" kindref="member">ReduceLogicalOr</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev_max,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::ParConstIterType;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpLogicalOr&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;int&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>lev_min;<sp/>lev<sp/>&lt;=<sp/>lev_max;<sp/>++lev)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>pti(pc,<sp/>lev);<sp/>pti.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++pti)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pti.GetParticleTile();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex__eb__to__vtk_1af2ac1714ba629496c770f2c5d141431c" kindref="member">np</ref><sp/>=<sp/>tile.numParticles();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getConstParticleTileData();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a45695a39d966b9ca3229592cdd03c79a" kindref="member">eval</ref>(<ref refid="namespaceamrex__eb__to__vtk_1af2ac1714ba629496c770f2c5d141431c" kindref="member">np</ref>,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>-&gt;<sp/>ReduceTuple<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{f(ptd.getSuperParticle(i))};});</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a0d0638a86325d2fbf74cde6dcea98b1f" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>lev_min;<sp/>lev<sp/>&lt;=<sp/>lev_max;<sp/>++lev)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(!system::regtest_reduction)<sp/>reduction(||:r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>pti(pc,<sp/>lev);<sp/>pti.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++pti)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pti.GetParticleTile();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex__eb__to__vtk_1af2ac1714ba629496c770f2c5d141431c" kindref="member">np</ref><sp/>=<sp/>tile.numParticles();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getConstParticleTileData();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespaceamrex__eb__to__vtk_1af2ac1714ba629496c770f2c5d141431c" kindref="member">np</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>r<sp/>||<sp/>f(ptd.getSuperParticle(i));</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_ParticleReduce.H"/>
  </compounddef>
</doxygen>
