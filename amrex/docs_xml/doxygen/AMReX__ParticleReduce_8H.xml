<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="AMReX__ParticleReduce_8H" kind="file" language="C++">
    <compoundname>AMReX_ParticleReduce.H</compoundname>
    <includes local="no">AMReX_Config.H</includes>
    <includes refid="AMReX__IntVect_8H" local="no">AMReX_IntVect.H</includes>
    <includes refid="AMReX__Box_8H" local="no">AMReX_Box.H</includes>
    <includes refid="AMReX__Gpu_8H" local="no">AMReX_Gpu.H</includes>
    <includes refid="AMReX__Print_8H" local="no">AMReX_Print.H</includes>
    <includes refid="AMReX__GpuUtility_8H" local="no">AMReX_GpuUtility.H</includes>
    <includes refid="AMReX__TypeTraits_8H" local="no">AMReX_TypeTraits.H</includes>
    <includes local="no">limits</includes>
    <includedby refid="AMReX__Particles_8H" local="no">/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particles.H</includedby>
    <incdepgraph>
      <node id="80371">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleReduce.H</label>
        <link refid="AMReX__ParticleReduce_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80373" relation="include">
        </childnode>
        <childnode refid="80412" relation="include">
        </childnode>
        <childnode refid="80417" relation="include">
        </childnode>
        <childnode refid="80468" relation="include">
        </childnode>
        <childnode refid="80456" relation="include">
        </childnode>
        <childnode refid="80422" relation="include">
        </childnode>
        <childnode refid="80408" relation="include">
        </childnode>
      </node>
      <node id="80405">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80388" relation="include">
        </childnode>
        <childnode refid="80394" relation="include">
        </childnode>
        <childnode refid="80406" relation="include">
        </childnode>
        <childnode refid="80404" relation="include">
        </childnode>
        <childnode refid="80397" relation="include">
        </childnode>
        <childnode refid="80407" relation="include">
        </childnode>
        <childnode refid="80408" relation="include">
        </childnode>
        <childnode refid="80386" relation="include">
        </childnode>
      </node>
      <node id="80418">
        <label>AMReX_GpuKernelInfo.H</label>
        <link refid="AMReX__GpuKernelInfo_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
      </node>
      <node id="80447">
        <label>AMReX_OpenMP.H</label>
        <link refid="AMReX__OpenMP_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
      </node>
      <node id="80377">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
      </node>
      <node id="80469">
        <label>iomanip</label>
      </node>
      <node id="80400">
        <label>functional</label>
      </node>
      <node id="80408">
        <label>limits</label>
      </node>
      <node id="80437">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80382" relation="include">
        </childnode>
        <childnode refid="80395" relation="include">
        </childnode>
      </node>
      <node id="80414">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80410" relation="include">
        </childnode>
        <childnode refid="80376" relation="include">
        </childnode>
        <childnode refid="80373" relation="include">
        </childnode>
        <childnode refid="80377" relation="include">
        </childnode>
      </node>
      <node id="80455">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80388" relation="include">
        </childnode>
      </node>
      <node id="80428">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80383" relation="include">
        </childnode>
        <childnode refid="80421" relation="include">
        </childnode>
        <childnode refid="80425" relation="include">
        </childnode>
        <childnode refid="80429" relation="include">
        </childnode>
        <childnode refid="80414" relation="include">
        </childnode>
        <childnode refid="80430" relation="include">
        </childnode>
        <childnode refid="80378" relation="include">
        </childnode>
        <childnode refid="80409" relation="include">
        </childnode>
      </node>
      <node id="80471">
        <label>iterator</label>
      </node>
      <node id="80396">
        <label>float.h</label>
      </node>
      <node id="80462">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
      </node>
      <node id="80404">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80387" relation="include">
        </childnode>
      </node>
      <node id="80390">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80391" relation="include">
        </childnode>
      </node>
      <node id="80443">
        <label>cstdint</label>
      </node>
      <node id="80424">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80399" relation="include">
        </childnode>
        <childnode refid="80383" relation="include">
        </childnode>
        <childnode refid="80384" relation="include">
        </childnode>
        <childnode refid="80382" relation="include">
        </childnode>
        <childnode refid="80425" relation="include">
        </childnode>
        <childnode refid="80426" relation="include">
        </childnode>
        <childnode refid="80386" relation="include">
        </childnode>
        <childnode refid="80411" relation="include">
        </childnode>
        <childnode refid="80408" relation="include">
        </childnode>
        <childnode refid="80427" relation="include">
        </childnode>
        <childnode refid="80404" relation="include">
        </childnode>
        <childnode refid="80395" relation="include">
        </childnode>
        <childnode refid="80374" relation="include">
        </childnode>
        <childnode refid="80378" relation="include">
        </childnode>
        <childnode refid="80409" relation="include">
        </childnode>
        <childnode refid="80412" relation="include">
        </childnode>
        <childnode refid="80428" relation="include">
        </childnode>
        <childnode refid="80431" relation="include">
        </childnode>
        <childnode refid="80432" relation="include">
        </childnode>
        <childnode refid="80441" relation="include">
        </childnode>
        <childnode refid="80388" relation="include">
        </childnode>
        <childnode refid="80444" relation="include">
        </childnode>
      </node>
      <node id="80467">
        <label>AMReX_GpuAllocators.H</label>
        <link refid="AMReX__GpuAllocators_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80425" relation="include">
        </childnode>
        <childnode refid="80380" relation="include">
        </childnode>
        <childnode refid="80408" relation="include">
        </childnode>
        <childnode refid="80386" relation="include">
        </childnode>
        <childnode refid="80468" relation="include">
        </childnode>
        <childnode refid="80420" relation="include">
        </childnode>
        <childnode refid="80423" relation="include">
        </childnode>
      </node>
      <node id="80453">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80388" relation="include">
        </childnode>
        <childnode refid="80402" relation="include">
        </childnode>
        <childnode refid="80403" relation="include">
        </childnode>
        <childnode refid="80454" relation="include">
        </childnode>
        <childnode refid="80456" relation="include">
        </childnode>
        <childnode refid="80455" relation="include">
        </childnode>
      </node>
      <node id="80457">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80379" relation="include">
        </childnode>
        <childnode refid="80458" relation="include">
        </childnode>
        <childnode refid="80400" relation="include">
        </childnode>
        <childnode refid="80386" relation="include">
        </childnode>
        <childnode refid="80381" relation="include">
        </childnode>
        <childnode refid="80422" relation="include">
        </childnode>
        <childnode refid="80459" relation="include">
        </childnode>
        <childnode refid="80455" relation="include">
        </childnode>
        <childnode refid="80388" relation="include">
        </childnode>
      </node>
      <node id="80409">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80407" relation="include">
        </childnode>
        <childnode refid="80401" relation="include">
        </childnode>
        <childnode refid="80380" relation="include">
        </childnode>
        <childnode refid="80404" relation="include">
        </childnode>
        <childnode refid="80394" relation="include">
        </childnode>
        <childnode refid="80374" relation="include">
        </childnode>
      </node>
      <node id="80435">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80436" relation="include">
        </childnode>
        <childnode refid="80382" relation="include">
        </childnode>
        <childnode refid="80381" relation="include">
        </childnode>
        <childnode refid="80384" relation="include">
        </childnode>
        <childnode refid="80385" relation="include">
        </childnode>
        <childnode refid="80399" relation="include">
        </childnode>
      </node>
      <node id="80403">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80394" relation="include">
        </childnode>
      </node>
      <node id="80398">
        <label>cmath</label>
      </node>
      <node id="80391">
        <label>cassert</label>
      </node>
      <node id="80395">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80394" relation="include">
        </childnode>
        <childnode refid="80396" relation="include">
        </childnode>
      </node>
      <node id="80393">
        <label>stdexcept</label>
      </node>
      <node id="80376">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
      </node>
      <node id="80439">
        <label>numeric</label>
      </node>
      <node id="80382">
        <label>string</label>
      </node>
      <node id="80423">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80399" relation="include">
        </childnode>
        <childnode refid="80380" relation="include">
        </childnode>
        <childnode refid="80379" relation="include">
        </childnode>
        <childnode refid="80387" relation="include">
        </childnode>
        <childnode refid="80424" relation="include">
        </childnode>
        <childnode refid="80403" relation="include">
        </childnode>
        <childnode refid="80446" relation="include">
        </childnode>
        <childnode refid="80402" relation="include">
        </childnode>
        <childnode refid="80447" relation="include">
        </childnode>
        <childnode refid="80409" relation="include">
        </childnode>
      </node>
      <node id="80425">
        <label>map</label>
      </node>
      <node id="80420">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80404" relation="include">
        </childnode>
        <childnode refid="80421" relation="include">
        </childnode>
        <childnode refid="80399" relation="include">
        </childnode>
      </node>
      <node id="80446">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80424" relation="include">
        </childnode>
        <childnode refid="80382" relation="include">
        </childnode>
      </node>
      <node id="80388">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
      </node>
      <node id="80427">
        <label>cfloat</label>
      </node>
      <node id="80406">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80383" relation="include">
        </childnode>
        <childnode refid="80395" relation="include">
        </childnode>
        <childnode refid="80388" relation="include">
        </childnode>
      </node>
      <node id="80433">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80380" relation="include">
        </childnode>
        <childnode refid="80434" relation="include">
        </childnode>
        <childnode refid="80409" relation="include">
        </childnode>
        <childnode refid="80376" relation="include">
        </childnode>
      </node>
      <node id="80434">
        <label>fstream</label>
      </node>
      <node id="80430">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80410" relation="include">
        </childnode>
        <childnode refid="80373" relation="include">
        </childnode>
        <childnode refid="80414" relation="include">
        </childnode>
        <childnode refid="80412" relation="include">
        </childnode>
        <childnode refid="80378" relation="include">
        </childnode>
        <childnode refid="80409" relation="include">
        </childnode>
      </node>
      <node id="80451">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80388" relation="include">
        </childnode>
        <childnode refid="80402" relation="include">
        </childnode>
        <childnode refid="80446" relation="include">
        </childnode>
        <childnode refid="80412" relation="include">
        </childnode>
        <childnode refid="80422" relation="include">
        </childnode>
      </node>
      <node id="80402">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80388" relation="include">
        </childnode>
        <childnode refid="80403" relation="include">
        </childnode>
      </node>
      <node id="80463">
        <label>AMReX_GpuBuffer.H</label>
        <link refid="AMReX__GpuBuffer_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80420" relation="include">
        </childnode>
        <childnode refid="80422" relation="include">
        </childnode>
        <childnode refid="80423" relation="include">
        </childnode>
        <childnode refid="80449" relation="include">
        </childnode>
        <childnode refid="80399" relation="include">
        </childnode>
        <childnode refid="80464" relation="include">
        </childnode>
        <childnode refid="80380" relation="include">
        </childnode>
      </node>
      <node id="80387">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80388" relation="include">
        </childnode>
        <childnode refid="80389" relation="include">
        </childnode>
        <childnode refid="80390" relation="include">
        </childnode>
        <childnode refid="80376" relation="include">
        </childnode>
        <childnode refid="80392" relation="include">
        </childnode>
        <childnode refid="80394" relation="include">
        </childnode>
        <childnode refid="80374" relation="include">
        </childnode>
        <childnode refid="80395" relation="include">
        </childnode>
        <childnode refid="80397" relation="include">
        </childnode>
        <childnode refid="80383" relation="include">
        </childnode>
        <childnode refid="80400" relation="include">
        </childnode>
        <childnode refid="80382" relation="include">
        </childnode>
        <childnode refid="80385" relation="include">
        </childnode>
        <childnode refid="80401" relation="include">
        </childnode>
        <childnode refid="80380" relation="include">
        </childnode>
      </node>
      <node id="80441">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80387" relation="include">
        </childnode>
        <childnode refid="80388" relation="include">
        </childnode>
        <childnode refid="80432" relation="include">
        </childnode>
        <childnode refid="80442" relation="include">
        </childnode>
        <childnode refid="80408" relation="include">
        </childnode>
        <childnode refid="80443" relation="include">
        </childnode>
      </node>
      <node id="80394">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
      </node>
      <node id="80442">
        <label>AMReX_RandomEngine.H</label>
        <link refid="AMReX__RandomEngine_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80388" relation="include">
        </childnode>
        <childnode refid="80394" relation="include">
        </childnode>
      </node>
      <node id="80445">
        <label>sys/types.h</label>
      </node>
      <node id="80465">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80421" relation="include">
        </childnode>
        <childnode refid="80449" relation="include">
        </childnode>
        <childnode refid="80399" relation="include">
        </childnode>
        <childnode refid="80380" relation="include">
        </childnode>
        <childnode refid="80420" relation="include">
        </childnode>
        <childnode refid="80422" relation="include">
        </childnode>
        <childnode refid="80423" relation="include">
        </childnode>
      </node>
      <node id="80438">
        <label>typeinfo</label>
      </node>
      <node id="80389">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80385" relation="include">
        </childnode>
      </node>
      <node id="80372">
        <label>AMReX_Config.H</label>
      </node>
      <node id="80385">
        <label>cstdio</label>
      </node>
      <node id="80458">
        <label>tuple</label>
      </node>
      <node id="80431">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80425" relation="include">
        </childnode>
        <childnode refid="80408" relation="include">
        </childnode>
        <childnode refid="80380" relation="include">
        </childnode>
        <childnode refid="80421" relation="include">
        </childnode>
        <childnode refid="80383" relation="include">
        </childnode>
        <childnode refid="80387" relation="include">
        </childnode>
        <childnode refid="80378" relation="include">
        </childnode>
        <childnode refid="80409" relation="include">
        </childnode>
        <childnode refid="80412" relation="include">
        </childnode>
        <childnode refid="80395" relation="include">
        </childnode>
        <childnode refid="80432" relation="include">
        </childnode>
      </node>
      <node id="80416">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80378" relation="include">
        </childnode>
        <childnode refid="80373" relation="include">
        </childnode>
        <childnode refid="80389" relation="include">
        </childnode>
      </node>
      <node id="80432">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80376" relation="include">
        </childnode>
        <childnode refid="80433" relation="include">
        </childnode>
        <childnode refid="80435" relation="include">
        </childnode>
        <childnode refid="80437" relation="include">
        </childnode>
        <childnode refid="80404" relation="include">
        </childnode>
        <childnode refid="80374" relation="include">
        </childnode>
        <childnode refid="80395" relation="include">
        </childnode>
        <childnode refid="80378" relation="include">
        </childnode>
        <childnode refid="80409" relation="include">
        </childnode>
        <childnode refid="80412" relation="include">
        </childnode>
        <childnode refid="80383" relation="include">
        </childnode>
        <childnode refid="80401" relation="include">
        </childnode>
        <childnode refid="80382" relation="include">
        </childnode>
        <childnode refid="80438" relation="include">
        </childnode>
        <childnode refid="80407" relation="include">
        </childnode>
        <childnode refid="80400" relation="include">
        </childnode>
        <childnode refid="80408" relation="include">
        </childnode>
        <childnode refid="80439" relation="include">
        </childnode>
        <childnode refid="80440" relation="include">
        </childnode>
      </node>
      <node id="80415">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80410" relation="include">
        </childnode>
        <childnode refid="80404" relation="include">
        </childnode>
        <childnode refid="80377" relation="include">
        </childnode>
        <childnode refid="80388" relation="include">
        </childnode>
      </node>
      <node id="80448">
        <label>AMReX_GpuLaunchGlobal.H</label>
        <link refid="AMReX__GpuLaunchGlobal_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80388" relation="include">
        </childnode>
      </node>
      <node id="80436">
        <label>stack</label>
      </node>
      <node id="80401">
        <label>vector</label>
      </node>
      <node id="80460">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80412" relation="include">
        </childnode>
      </node>
      <node id="80473">
        <label>AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80417" relation="include">
        </childnode>
        <childnode refid="80420" relation="include">
        </childnode>
        <childnode refid="80443" relation="include">
        </childnode>
        <childnode refid="80386" relation="include">
        </childnode>
      </node>
      <node id="80381">
        <label>utility</label>
      </node>
      <node id="80412">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80410" relation="include">
        </childnode>
        <childnode refid="80405" relation="include">
        </childnode>
        <childnode refid="80413" relation="include">
        </childnode>
        <childnode refid="80376" relation="include">
        </childnode>
        <childnode refid="80373" relation="include">
        </childnode>
        <childnode refid="80414" relation="include">
        </childnode>
        <childnode refid="80415" relation="include">
        </childnode>
        <childnode refid="80377" relation="include">
        </childnode>
        <childnode refid="80378" relation="include">
        </childnode>
        <childnode refid="80416" relation="include">
        </childnode>
        <childnode refid="80409" relation="include">
        </childnode>
        <childnode refid="80388" relation="include">
        </childnode>
        <childnode refid="80402" relation="include">
        </childnode>
      </node>
      <node id="80379">
        <label>array</label>
      </node>
      <node id="80466">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80420" relation="include">
        </childnode>
      </node>
      <node id="80384">
        <label>sstream</label>
      </node>
      <node id="80470">
        <label>AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80439" relation="include">
        </childnode>
        <childnode refid="80471" relation="include">
        </childnode>
        <childnode refid="80409" relation="include">
        </childnode>
        <childnode refid="80472" relation="include">
        </childnode>
        <childnode refid="80467" relation="include">
        </childnode>
        <childnode refid="80473" relation="include">
        </childnode>
        <childnode refid="80386" relation="include">
        </childnode>
      </node>
      <node id="80374">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80375" relation="include">
        </childnode>
      </node>
      <node id="80450">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80388" relation="include">
        </childnode>
        <childnode refid="80418" relation="include">
        </childnode>
        <childnode refid="80402" relation="include">
        </childnode>
        <childnode refid="80403" relation="include">
        </childnode>
        <childnode refid="80446" relation="include">
        </childnode>
        <childnode refid="80451" relation="include">
        </childnode>
        <childnode refid="80423" relation="include">
        </childnode>
        <childnode refid="80452" relation="include">
        </childnode>
        <childnode refid="80453" relation="include">
        </childnode>
        <childnode refid="80419" relation="include">
        </childnode>
        <childnode refid="80457" relation="include">
        </childnode>
        <childnode refid="80412" relation="include">
        </childnode>
        <childnode refid="80460" relation="include">
        </childnode>
        <childnode refid="80394" relation="include">
        </childnode>
        <childnode refid="80404" relation="include">
        </childnode>
        <childnode refid="80422" relation="include">
        </childnode>
        <childnode refid="80448" relation="include">
        </childnode>
        <childnode refid="80442" relation="include">
        </childnode>
        <childnode refid="80405" relation="include">
        </childnode>
        <childnode refid="80421" relation="include">
        </childnode>
        <childnode refid="80408" relation="include">
        </childnode>
        <childnode refid="80407" relation="include">
        </childnode>
        <childnode refid="80381" relation="include">
        </childnode>
        <childnode refid="80461" relation="include">
        </childnode>
        <childnode refid="80462" relation="include">
        </childnode>
      </node>
      <node id="80461">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
      </node>
      <node id="80454">
        <label>AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80388" relation="include">
        </childnode>
        <childnode refid="80455" relation="include">
        </childnode>
      </node>
      <node id="80410">
        <label>iosfwd</label>
      </node>
      <node id="80399">
        <label>cstdlib</label>
      </node>
      <node id="80459">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80381" relation="include">
        </childnode>
      </node>
      <node id="80383">
        <label>iostream</label>
      </node>
      <node id="80378">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80379" relation="include">
        </childnode>
        <childnode refid="80380" relation="include">
        </childnode>
        <childnode refid="80381" relation="include">
        </childnode>
        <childnode refid="80382" relation="include">
        </childnode>
        <childnode refid="80383" relation="include">
        </childnode>
        <childnode refid="80384" relation="include">
        </childnode>
        <childnode refid="80385" relation="include">
        </childnode>
        <childnode refid="80386" relation="include">
        </childnode>
        <childnode refid="80387" relation="include">
        </childnode>
        <childnode refid="80388" relation="include">
        </childnode>
        <childnode refid="80402" relation="include">
        </childnode>
        <childnode refid="80404" relation="include">
        </childnode>
        <childnode refid="80377" relation="include">
        </childnode>
        <childnode refid="80395" relation="include">
        </childnode>
        <childnode refid="80405" relation="include">
        </childnode>
        <childnode refid="80406" relation="include">
        </childnode>
      </node>
      <node id="80421">
        <label>cstddef</label>
      </node>
      <node id="80456">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80388" relation="include">
        </childnode>
        <childnode refid="80403" relation="include">
        </childnode>
        <childnode refid="80402" relation="include">
        </childnode>
        <childnode refid="80423" relation="include">
        </childnode>
        <childnode refid="80394" relation="include">
        </childnode>
        <childnode refid="80395" relation="include">
        </childnode>
        <childnode refid="80374" relation="include">
        </childnode>
        <childnode refid="80378" relation="include">
        </childnode>
        <childnode refid="80416" relation="include">
        </childnode>
        <childnode refid="80383" relation="include">
        </childnode>
        <childnode refid="80398" relation="include">
        </childnode>
        <childnode refid="80449" relation="include">
        </childnode>
      </node>
      <node id="80429">
        <label>unordered_map</label>
      </node>
      <node id="80411">
        <label>climits</label>
      </node>
      <node id="80373">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80374" relation="include">
        </childnode>
        <childnode refid="80376" relation="include">
        </childnode>
        <childnode refid="80377" relation="include">
        </childnode>
        <childnode refid="80378" relation="include">
        </childnode>
        <childnode refid="80409" relation="include">
        </childnode>
        <childnode refid="80406" relation="include">
        </childnode>
        <childnode refid="80404" relation="include">
        </childnode>
        <childnode refid="80394" relation="include">
        </childnode>
        <childnode refid="80388" relation="include">
        </childnode>
        <childnode refid="80397" relation="include">
        </childnode>
        <childnode refid="80410" relation="include">
        </childnode>
        <childnode refid="80399" relation="include">
        </childnode>
        <childnode refid="80398" relation="include">
        </childnode>
        <childnode refid="80408" relation="include">
        </childnode>
        <childnode refid="80411" relation="include">
        </childnode>
        <childnode refid="80407" relation="include">
        </childnode>
      </node>
      <node id="80472">
        <label>AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80422" relation="include">
        </childnode>
        <childnode refid="80417" relation="include">
        </childnode>
        <childnode refid="80467" relation="include">
        </childnode>
        <childnode refid="80470" relation="include">
        </childnode>
        <childnode refid="80423" relation="include">
        </childnode>
        <childnode refid="80386" relation="include">
        </childnode>
        <childnode refid="80381" relation="include">
        </childnode>
        <childnode refid="80380" relation="include">
        </childnode>
        <childnode refid="80449" relation="include">
        </childnode>
      </node>
      <node id="80426">
        <label>chrono</label>
      </node>
      <node id="80440">
        <label>csignal</label>
      </node>
      <node id="80419">
        <label>AMReX_GpuFuse.H</label>
        <link refid="AMReX__GpuFuse_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80420" relation="include">
        </childnode>
        <childnode refid="80409" relation="include">
        </childnode>
        <childnode refid="80412" relation="include">
        </childnode>
        <childnode refid="80422" relation="include">
        </childnode>
        <childnode refid="80423" relation="include">
        </childnode>
        <childnode refid="80448" relation="include">
        </childnode>
        <childnode refid="80449" relation="include">
        </childnode>
        <childnode refid="80380" relation="include">
        </childnode>
      </node>
      <node id="80397">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80388" relation="include">
        </childnode>
        <childnode refid="80394" relation="include">
        </childnode>
        <childnode refid="80398" relation="include">
        </childnode>
        <childnode refid="80399" relation="include">
        </childnode>
      </node>
      <node id="80417">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80388" relation="include">
        </childnode>
        <childnode refid="80418" relation="include">
        </childnode>
        <childnode refid="80389" relation="include">
        </childnode>
        <childnode refid="80390" relation="include">
        </childnode>
        <childnode refid="80403" relation="include">
        </childnode>
        <childnode refid="80402" relation="include">
        </childnode>
        <childnode refid="80419" relation="include">
        </childnode>
        <childnode refid="80450" relation="include">
        </childnode>
        <childnode refid="80446" relation="include">
        </childnode>
        <childnode refid="80454" relation="include">
        </childnode>
        <childnode refid="80456" relation="include">
        </childnode>
        <childnode refid="80423" relation="include">
        </childnode>
        <childnode refid="80463" relation="include">
        </childnode>
        <childnode refid="80465" relation="include">
        </childnode>
        <childnode refid="80466" relation="include">
        </childnode>
        <childnode refid="80452" relation="include">
        </childnode>
        <childnode refid="80451" relation="include">
        </childnode>
        <childnode refid="80453" relation="include">
        </childnode>
        <childnode refid="80467" relation="include">
        </childnode>
        <childnode refid="80470" relation="include">
        </childnode>
        <childnode refid="80474" relation="include">
        </childnode>
      </node>
      <node id="80452">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80388" relation="include">
        </childnode>
        <childnode refid="80402" relation="include">
        </childnode>
        <childnode refid="80423" relation="include">
        </childnode>
        <childnode refid="80422" relation="include">
        </childnode>
        <childnode refid="80420" relation="include">
        </childnode>
        <childnode refid="80399" relation="include">
        </childnode>
      </node>
      <node id="80413">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80395" relation="include">
        </childnode>
      </node>
      <node id="80392">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80393" relation="include">
        </childnode>
      </node>
      <node id="80386">
        <label>type_traits</label>
      </node>
      <node id="80407">
        <label>algorithm</label>
      </node>
      <node id="80444">
        <label>AMReX_FileSystem.H</label>
        <link refid="AMReX__FileSystem_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80382" relation="include">
        </childnode>
        <childnode refid="80445" relation="include">
        </childnode>
      </node>
      <node id="80449">
        <label>cstring</label>
      </node>
      <node id="80474">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
      </node>
      <node id="80380">
        <label>memory</label>
      </node>
      <node id="80464">
        <label>initializer_list</label>
      </node>
      <node id="80375">
        <label>inttypes.h</label>
      </node>
      <node id="80422">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80386" relation="include">
        </childnode>
        <childnode refid="80394" relation="include">
        </childnode>
      </node>
      <node id="80468">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="80372" relation="include">
        </childnode>
        <childnode refid="80384" relation="include">
        </childnode>
        <childnode refid="80434" relation="include">
        </childnode>
        <childnode refid="80469" relation="include">
        </childnode>
        <childnode refid="80381" relation="include">
        </childnode>
        <childnode refid="80387" relation="include">
        </childnode>
        <childnode refid="80433" relation="include">
        </childnode>
        <childnode refid="80432" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="80475">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleReduce.H</label>
        <link refid="AMReX__ParticleReduce_8H"/>
        <childnode refid="80476" relation="include">
        </childnode>
      </node>
      <node id="80477">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParticles.H</label>
        <link refid="AMReX__AmrParticles_8H"/>
      </node>
      <node id="80482">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticle_mod_K.H</label>
        <link refid="AMReX__TracerParticle__mod__K_8H"/>
        <childnode refid="80483" relation="include">
        </childnode>
      </node>
      <node id="80478">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborList.H</label>
        <link refid="AMReX__NeighborList_8H"/>
        <childnode refid="80479" relation="include">
        </childnode>
      </node>
      <node id="80480">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle_mod_K.H</label>
        <link refid="AMReX__Particle__mod__K_8H"/>
        <childnode refid="80476" relation="include">
        </childnode>
      </node>
      <node id="80483">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticles.cpp</label>
        <link refid="AMReX__TracerParticles_8cpp"/>
      </node>
      <node id="80481">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticles.H</label>
        <link refid="AMReX__TracerParticles_8H"/>
        <childnode refid="80477" relation="include">
        </childnode>
        <childnode refid="80482" relation="include">
        </childnode>
        <childnode refid="80483" relation="include">
        </childnode>
      </node>
      <node id="80484">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_WriteBinaryParticleData.H</label>
        <link refid="AMReX__WriteBinaryParticleData_8H"/>
        <childnode refid="80485" relation="include">
        </childnode>
      </node>
      <node id="80476">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particles.H</label>
        <link refid="AMReX__Particles_8H"/>
        <childnode refid="80477" relation="include">
        </childnode>
        <childnode refid="80478" relation="include">
        </childnode>
        <childnode refid="80479" relation="include">
        </childnode>
        <childnode refid="80480" relation="include">
        </childnode>
        <childnode refid="80481" relation="include">
        </childnode>
        <childnode refid="80484" relation="include">
        </childnode>
      </node>
      <node id="80485">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleIO.H</label>
        <link refid="AMReX__ParticleIO_8H"/>
        <childnode refid="80476" relation="include">
        </childnode>
      </node>
      <node id="80479">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H</label>
        <link refid="AMReX__NeighborParticles_8H"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_PARTICLEREDUCE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_PARTICLEREDUCE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_Config.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__IntVect_8H" kindref="compound">AMReX_IntVect.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Box_8H" kindref="compound">AMReX_Box.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Gpu_8H" kindref="compound">AMReX_Gpu.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Print_8H" kindref="compound">AMReX_Print.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__GpuUtility_8H" kindref="compound">AMReX_GpuUtility.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__TypeTraits_8H" kindref="compound">AMReX_TypeTraits.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/><ref refid="namespaceamrex_1a403cfbd1297211846d8daf45b3d0b440" kindref="member">foo</ref><sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="namespaceamrex_1a8f1971a46d37a951bb0ef8b189f8987f" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" kindref="member">ReduceSum</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/>F&amp;&amp;<sp/>f)<sp/>-&gt;<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()))</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" kindref="member">ReduceSum</ref>(pc,<sp/>0,<sp/>pc.finestLevel(),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="namespaceamrex_1a9600b570271756f90a1c8b3c7e05a9a1" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" kindref="member">ReduceSum</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev,<sp/>F&amp;&amp;<sp/>f)<sp/>-&gt;<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()))</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" kindref="member">ReduceSum</ref>(pc,<sp/>lev,<sp/>lev,<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="namespaceamrex_1a234b29ca2ab42dc4b7d3713800d82a4e" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1aee63624c66220385d3ab86b7f68ae1c4" kindref="member">ReduceSum</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev_max,<sp/>F&amp;&amp;<sp/>f)<sp/>-&gt;<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()))</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::ParConstIterType;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>sm<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpSum&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;value_type&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>lev_min;<sp/>lev<sp/>&lt;=<sp/>lev_max;<sp/>++lev)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>pti(pc,<sp/>lev);<sp/>pti.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++pti)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pti.GetParticleTile();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>np<sp/>=<sp/>tile.numParticles();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getConstParticleTileData();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref>(np,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>-&gt;<sp/>ReduceTuple<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{f(ptd.getSuperParticle(i))};});</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a944bfb881e9bfb88dd7061bac0df76a4" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sm<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>lev_min;<sp/>lev<sp/>&lt;=<sp/>lev_max;<sp/>++lev)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_OMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(!system::regtest_reduction)<sp/>reduction(+:sm)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>pti(pc,<sp/>lev);<sp/>pti.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++pti)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pti.GetParticleTile();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>np<sp/>=<sp/>tile.numParticles();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getConstParticleTileData();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>np;<sp/>++i)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sm<sp/>+=<sp/>f(ptd.getSuperParticle(i));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sm;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="namespaceamrex_1a7ea00de6fd7be3ddb1b4f841295cac21" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" kindref="member">ReduceMax</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/>F&amp;&amp;<sp/>f)<sp/>-&gt;<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()))</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" kindref="member">ReduceMax</ref>(pc,<sp/>0,<sp/>pc.finestLevel(),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="namespaceamrex_1af55bd59d2c594a63ae6bb0136596fb9b" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" kindref="member">ReduceMax</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev,<sp/>F&amp;&amp;<sp/>f)<sp/>-&gt;<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()))</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" kindref="member">ReduceMax</ref>(pc,<sp/>lev,<sp/>lev,<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="namespaceamrex_1aa9bf7aa5f979cd910b5b270070cac8b1" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a157fdc4ac63d7f4d21a5df4b4151eb28" kindref="member">ReduceMax</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev_max,<sp/>F&amp;&amp;<sp/>f)<sp/>-&gt;<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()))</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::ParConstIterType;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>value_type<sp/>value_lowest<sp/>=<sp/>std::numeric_limits&lt;value_type&gt;::lowest();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>r<sp/>=<sp/>value_lowest;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpMax&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;value_type&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>lev_min;<sp/>lev<sp/>&lt;=<sp/>lev_max;<sp/>++lev)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>pti(pc,<sp/>lev);<sp/>pti.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++pti)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pti.GetParticleTile();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>np<sp/>=<sp/>tile.numParticles();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getConstParticleTileData();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref>(np,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>-&gt;<sp/>ReduceTuple<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{f(ptd.getSuperParticle(i))};});</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a944bfb881e9bfb88dd7061bac0df76a4" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>lev_min;<sp/>lev<sp/>&lt;=<sp/>lev_max;<sp/>++lev)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_OMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(!system::regtest_reduction)<sp/>reduction(max:r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>pti(pc,<sp/>lev);<sp/>pti.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++pti)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pti.GetParticleTile();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>np<sp/>=<sp/>tile.numParticles();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getConstParticleTileData();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>np;<sp/>++i)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::max</ref>(r,<sp/>f(ptd.getSuperParticle(i)));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="namespaceamrex_1a3aa271dcaabdcc69a172b422fdc60349" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" kindref="member">ReduceMin</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/>F&amp;&amp;<sp/>f)<sp/>-&gt;<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()))</highlight></codeline>
<codeline lineno="285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" kindref="member">ReduceMin</ref>(pc,<sp/>0,<sp/>pc.finestLevel(),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="namespaceamrex_1aab38aa5f542e67c840d6e9c6d30d586a" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" kindref="member">ReduceMin</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev,<sp/>F&amp;&amp;<sp/>f)<sp/>-&gt;<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()))</highlight></codeline>
<codeline lineno="311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" kindref="member">ReduceMin</ref>(pc,<sp/>lev,<sp/>lev,<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="namespaceamrex_1ab8f47432b3e35fe46b1b89def917916e" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a94a27ca9a492d6d0f17996924e1b1745" kindref="member">ReduceMin</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev_max,<sp/>F&amp;&amp;<sp/>f)<sp/>-&gt;<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()))</highlight></codeline>
<codeline lineno="338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/>decltype(f(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::SuperParticleType()));</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::ParConstIterType;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>value_type<sp/>value_max<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;value_type&gt;::max</ref>();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>r<sp/>=<sp/>value_max;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpMin&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;value_type&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>lev_min;<sp/>lev<sp/>&lt;=<sp/>lev_max;<sp/>++lev)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>pti(pc,<sp/>lev);<sp/>pti.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++pti)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pti.GetParticleTile();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>np<sp/>=<sp/>tile.numParticles();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getConstParticleTileData();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref>(np,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>-&gt;<sp/>ReduceTuple<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{f(ptd.getSuperParticle(i))};});</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a944bfb881e9bfb88dd7061bac0df76a4" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>lev_min;<sp/>lev<sp/>&lt;=<sp/>lev_max;<sp/>++lev)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_OMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(!system::regtest_reduction)<sp/>reduction(min:r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>pti(pc,<sp/>lev);<sp/>pti.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++pti)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pti.GetParticleTile();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>np<sp/>=<sp/>tile.numParticles();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getConstParticleTileData();</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>np;<sp/>++i)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da39de58104accdcd761fe01946da9a4a0" kindref="member">std::min</ref>(r,<sp/>f(ptd.getSuperParticle(i)));</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="namespaceamrex_1aa175f510a09bbc1252a4e1b8f3ac5250" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a3866c459fc8c798d5a19fa747a3500b5" kindref="member">ReduceLogicalAnd</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="409"><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3866c459fc8c798d5a19fa747a3500b5" kindref="member">ReduceLogicalAnd</ref>(pc,<sp/>0,<sp/>pc.finestLevel(),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="namespaceamrex_1a2e4d86e52a629511e02bff646ca60b59" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a3866c459fc8c798d5a19fa747a3500b5" kindref="member">ReduceLogicalAnd</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a3866c459fc8c798d5a19fa747a3500b5" kindref="member">ReduceLogicalAnd</ref>(pc,<sp/>lev,<sp/>lev,<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="namespaceamrex_1a14d08a69d1ad19e5499277055d469400" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a3866c459fc8c798d5a19fa747a3500b5" kindref="member">ReduceLogicalAnd</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev_max,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::ParConstIterType;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpLogicalAnd&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;int&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>lev_min;<sp/>lev<sp/>&lt;=<sp/>lev_max;<sp/>++lev)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>pti(pc,<sp/>lev);<sp/>pti.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++pti)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pti.GetParticleTile();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>np<sp/>=<sp/>tile.numParticles();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getConstParticleTileData();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref>(np,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>-&gt;<sp/>ReduceTuple<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{f(ptd.getSuperParticle(i))};});</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a944bfb881e9bfb88dd7061bac0df76a4" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>lev_min;<sp/>lev<sp/>&lt;=<sp/>lev_max;<sp/>++lev)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_OMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(!system::regtest_reduction)<sp/>reduction(&amp;&amp;:r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>pti(pc,<sp/>lev);<sp/>pti.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++pti)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pti.GetParticleTile();</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>np<sp/>=<sp/>tile.numParticles();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getConstParticleTileData();</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>np;<sp/>++i)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>r<sp/>&amp;&amp;<sp/>f(ptd.getSuperParticle(i));</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530" refid="namespaceamrex_1a43f13583043013b5751afe1e193cc8b5" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a86ff43c965c29ca6c76704135c773345" kindref="member">ReduceLogicalOr</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a86ff43c965c29ca6c76704135c773345" kindref="member">ReduceLogicalOr</ref>(pc,<sp/>0,<sp/>pc.finestLevel(),<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556" refid="namespaceamrex_1a18f76938d120a4d9891cc99e67cab771" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a86ff43c965c29ca6c76704135c773345" kindref="member">ReduceLogicalOr</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a86ff43c965c29ca6c76704135c773345" kindref="member">ReduceLogicalOr</ref>(pc,<sp/>lev,<sp/>lev,<sp/>std::forward&lt;F&gt;(f));</highlight></codeline>
<codeline lineno="559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal">template<sp/>&lt;class<sp/>PC,<sp/>class<sp/>F,<sp/>EnableIf_t&lt;IsParticleContainer&lt;PC&gt;::value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583" refid="namespaceamrex_1a4045ba476918bce64dc92d94e4cda26d" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1a86ff43c965c29ca6c76704135c773345" kindref="member">ReduceLogicalOr</ref><sp/>(PC<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>pc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev_max,<sp/>F&amp;&amp;<sp/>f)</highlight></codeline>
<codeline lineno="584"><highlight class="normal">{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PC::ParConstIterType;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1Gpu_1a75701478316a5d131da8097cd795118f" kindref="member">Gpu::inLaunchRegion</ref>())</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceOps" kindref="compound">ReduceOps&lt;ReduceOpLogicalOr&gt;</ref><sp/>reduce_op;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ReduceData" kindref="compound">ReduceData&lt;int&gt;</ref><sp/>reduce_data(reduce_op);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ReduceTuple<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>decltype(reduce_data)::Type;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>lev_min;<sp/>lev<sp/>&lt;=<sp/>lev_max;<sp/>++lev)</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>pti(pc,<sp/>lev);<sp/>pti.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++pti)</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pti.GetParticleTile();</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>np<sp/>=<sp/>tile.numParticles();</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getConstParticleTileData();</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reduce_op.<ref refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" kindref="member">eval</ref>(np,<sp/>reduce_data,</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=]<sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>-&gt;<sp/>ReduceTuple<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{f(ptd.getSuperParticle(i))};});</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceTuple<sp/>hv<sp/>=<sp/>reduce_data.<ref refid="classamrex_1_1ReduceData_1a944bfb881e9bfb88dd7061bac0df76a4" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>amrex::get&lt;0&gt;(hv);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lev<sp/>=<sp/>lev_min;<sp/>lev<sp/>&lt;=<sp/>lev_max;<sp/>++lev)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_OMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>if<sp/>(!system::regtest_reduction)<sp/>reduction(||:r)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref><sp/>pti(pc,<sp/>lev);<sp/>pti.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++pti)</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tile<sp/>=<sp/>pti.GetParticleTile();</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>np<sp/>=<sp/>tile.numParticles();</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ptd<sp/>=<sp/>tile.getConstParticleTileData();</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>np;<sp/>++i)</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>r<sp/>||<sp/>f(ptd.getSuperParticle(i));</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="631"><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleReduce.H"/>
  </compounddef>
</doxygen>
