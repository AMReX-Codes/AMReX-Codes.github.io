<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classamrex_1_1EBDataCollection" kind="class" language="C++" prot="public">
    <compoundname>amrex::EBDataCollection</compoundname>
    <includes refid="AMReX__EBDataCollection_8H" local="no">AMReX_EBDataCollection.H</includes>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classamrex_1_1EBDataCollection_1add1cd92ef1acf80b7731a873ba626923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class EBFArrayBoxFactory</definition>
        <argsstring></argsstring>
        <name>EBFArrayBoxFactory</name>
        <qualifiedname>amrex::EBDataCollection::EBFArrayBoxFactory</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1EBFArrayBoxFactory" kindref="compound">EBFArrayBoxFactory</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="23" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="23" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1a8c1e66f34abde299d2379f0261cfcb53" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; int &gt;</type>
        <definition>Vector&lt;int&gt; amrex::EBDataCollection::m_ngrow</definition>
        <argsstring></argsstring>
        <name>m_ngrow</name>
        <qualifiedname>amrex::EBDataCollection::m_ngrow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="53" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1a9d7fc23809662b01ce10290962d272e8" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a7de82761ed632e5ee0b9f912c856aebc" kindref="member">EBSupport</ref></type>
        <definition>EBSupport amrex::EBDataCollection::m_support</definition>
        <argsstring></argsstring>
        <name>m_support</name>
        <qualifiedname>amrex::EBDataCollection::m_support</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="54" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1a4e9d5ca2618309d4445ac8fa75fafc1f" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::EBDataCollection::m_geom</definition>
        <argsstring></argsstring>
        <name>m_geom</name>
        <qualifiedname>amrex::EBDataCollection::m_geom</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="55" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1a3f3aed898f6ec10c9f141be194499cac" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &gt; *</type>
        <definition>FabArray&lt;EBCellFlagFab&gt;* amrex::EBDataCollection::m_cellflags</definition>
        <argsstring></argsstring>
        <name>m_cellflags</name>
        <qualifiedname>amrex::EBDataCollection::m_cellflags</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="60" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1ab3e6789efd39bd7d39bd01cf97c85b07" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *</type>
        <definition>MultiFab* amrex::EBDataCollection::m_levelset</definition>
        <argsstring></argsstring>
        <name>m_levelset</name>
        <qualifiedname>amrex::EBDataCollection::m_levelset</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="61" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1ab87f9babcf2b30b23ea7a36ee621538e" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *</type>
        <definition>MultiFab* amrex::EBDataCollection::m_volfrac</definition>
        <argsstring></argsstring>
        <name>m_volfrac</name>
        <qualifiedname>amrex::EBDataCollection::m_volfrac</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="64" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1af218d8cf84d1ad47414a36663b2c1b36" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *</type>
        <definition>MultiCutFab* amrex::EBDataCollection::m_centroid</definition>
        <argsstring></argsstring>
        <name>m_centroid</name>
        <qualifiedname>amrex::EBDataCollection::m_centroid</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="65" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1a8a3dfc8b1b1cf5d19c7538d630a4b44b" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *</type>
        <definition>MultiCutFab* amrex::EBDataCollection::m_bndrycent</definition>
        <argsstring></argsstring>
        <name>m_bndrycent</name>
        <qualifiedname>amrex::EBDataCollection::m_bndrycent</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="68" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1a8d677f5c06ce1520cd23addf9d22d5ef" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *</type>
        <definition>MultiCutFab* amrex::EBDataCollection::m_bndryarea</definition>
        <argsstring></argsstring>
        <name>m_bndryarea</name>
        <qualifiedname>amrex::EBDataCollection::m_bndryarea</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="69" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1a586018b239d0fd75d2a920b4e7d8fa40" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *</type>
        <definition>MultiCutFab* amrex::EBDataCollection::m_bndrynorm</definition>
        <argsstring></argsstring>
        <name>m_bndrynorm</name>
        <qualifiedname>amrex::EBDataCollection::m_bndrynorm</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="70" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1a036bbb0e7b0d7ee88c33978716dec8f9" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *, 3 &gt;</type>
        <definition>Array&lt;MultiCutFab*,3&gt; amrex::EBDataCollection::m_areafrac</definition>
        <argsstring></argsstring>
        <name>m_areafrac</name>
        <qualifiedname>amrex::EBDataCollection::m_areafrac</qualifiedname>
        <initializer>{{ nullptr , nullptr , nullptr }}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="71" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1a8ae044a5a36f5193689e860e3d403f23" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *, 3 &gt;</type>
        <definition>Array&lt;MultiCutFab*,3&gt; amrex::EBDataCollection::m_facecent</definition>
        <argsstring></argsstring>
        <name>m_facecent</name>
        <qualifiedname>amrex::EBDataCollection::m_facecent</qualifiedname>
        <initializer>{{ nullptr , nullptr , nullptr }}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="72" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1a8f84274dfda311f0e685de8889fe4140" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *, 3 &gt;</type>
        <definition>Array&lt;MultiCutFab*,3&gt; amrex::EBDataCollection::m_edgecent</definition>
        <argsstring></argsstring>
        <name>m_edgecent</name>
        <qualifiedname>amrex::EBDataCollection::m_edgecent</qualifiedname>
        <initializer>{{ nullptr , nullptr , nullptr }}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="73" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EBDataCollection_1a319997acfc8739b7d32879751198026b" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> *</type>
        <definition>iMultiFab* amrex::EBDataCollection::m_cutcellmask</definition>
        <argsstring></argsstring>
        <name>m_cutcellmask</name>
        <qualifiedname>amrex::EBDataCollection::m_cutcellmask</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="76" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="76" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1a279c06d895ec6ef61086ec173d57281d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EBDataCollection::EBDataCollection</definition>
        <argsstring>(const EB2::Level &amp;a_level, const Geometry &amp;a_geom, const BoxArray &amp;a_ba, const DistributionMapping &amp;a_dm, Vector&lt; int &gt; a_ngrow, EBSupport a_support)</argsstring>
        <name>EBDataCollection</name>
        <qualifiedname>amrex::EBDataCollection::EBDataCollection</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1EB2_1_1Level" kindref="compound">EB2::Level</ref> &amp;</type>
          <declname>a_level</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>a_geom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>a_ba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>a_dm</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; int &gt;</type>
          <declname>a_ngrow</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a7de82761ed632e5ee0b9f912c856aebc" kindref="member">EBSupport</ref></type>
          <declname>a_support</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="25" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="12" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1ac0a68c8f5a6914b596f4c47f43d2f6aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EBDataCollection::~EBDataCollection</definition>
        <argsstring>()</argsstring>
        <name>~EBDataCollection</name>
        <qualifiedname>amrex::EBDataCollection::~EBDataCollection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="29" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="237" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1ac8cfe908c7bcdc5b940444e767ceb37b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EBDataCollection::EBDataCollection</definition>
        <argsstring>(const EBDataCollection &amp;)=delete</argsstring>
        <name>EBDataCollection</name>
        <qualifiedname>amrex::EBDataCollection::EBDataCollection</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1EBDataCollection" kindref="compound">EBDataCollection</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="31" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1a37fa70dac3bcfbd63a096961c0a97899" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EBDataCollection::EBDataCollection</definition>
        <argsstring>(EBDataCollection &amp;&amp;)=delete</argsstring>
        <name>EBDataCollection</name>
        <qualifiedname>amrex::EBDataCollection::EBDataCollection</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1EBDataCollection" kindref="compound">EBDataCollection</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="32" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1a4d50e87a1efb6d1e64b661afa053c99b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EBDataCollection" kindref="compound">EBDataCollection</ref> &amp;</type>
        <definition>EBDataCollection &amp; amrex::EBDataCollection::operator=</definition>
        <argsstring>(const EBDataCollection &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::EBDataCollection::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1EBDataCollection" kindref="compound">EBDataCollection</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="33" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1a9f87d7b55521ca94cf041b854bd3be94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EBDataCollection" kindref="compound">EBDataCollection</ref> &amp;</type>
        <definition>EBDataCollection &amp; amrex::EBDataCollection::operator=</definition>
        <argsstring>(EBDataCollection &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::EBDataCollection::operator=</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1EBDataCollection" kindref="compound">EBDataCollection</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="34" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1acce2adceaba115a5c56167ec8cf3eb79" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1EBCellFlagFab" kindref="compound">EBCellFlagFab</ref> &gt; &amp;</type>
        <definition>const FabArray&lt; EBCellFlagFab &gt; &amp; amrex::EBDataCollection::getMultiEBCellFlagFab</definition>
        <argsstring>() const</argsstring>
        <name>getMultiEBCellFlagFab</name>
        <qualifiedname>amrex::EBDataCollection::getMultiEBCellFlagFab</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="36" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="255" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1a778401df04db53fd5851aab6bcf1f76b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
        <definition>const MultiFab &amp; amrex::EBDataCollection::getLevelSet</definition>
        <argsstring>() const</argsstring>
        <name>getLevelSet</name>
        <qualifiedname>amrex::EBDataCollection::getLevelSet</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="37" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="262" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1a9cfca800c4df32f884205e7b0cfa5b4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
        <definition>const MultiFab &amp; amrex::EBDataCollection::getVolFrac</definition>
        <argsstring>() const</argsstring>
        <name>getVolFrac</name>
        <qualifiedname>amrex::EBDataCollection::getVolFrac</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="38" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="269" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1a1607508139d564d5f6293d6c68f4a953" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
        <definition>const MultiCutFab &amp; amrex::EBDataCollection::getCentroid</definition>
        <argsstring>() const</argsstring>
        <name>getCentroid</name>
        <qualifiedname>amrex::EBDataCollection::getCentroid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="39" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="276" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1a79f870b65936034e5471d628fbd6d9fb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
        <definition>const MultiCutFab &amp; amrex::EBDataCollection::getBndryCent</definition>
        <argsstring>() const</argsstring>
        <name>getBndryCent</name>
        <qualifiedname>amrex::EBDataCollection::getBndryCent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="40" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="283" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1a8f2facb9d8f388bd34a905d3249dec3f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
        <definition>const MultiCutFab &amp; amrex::EBDataCollection::getBndryArea</definition>
        <argsstring>() const</argsstring>
        <name>getBndryArea</name>
        <qualifiedname>amrex::EBDataCollection::getBndryArea</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="41" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="290" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1ad138261bbea936bf83d44dcca15df02c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> &amp;</type>
        <definition>const MultiCutFab &amp; amrex::EBDataCollection::getBndryNormal</definition>
        <argsstring>() const</argsstring>
        <name>getBndryNormal</name>
        <qualifiedname>amrex::EBDataCollection::getBndryNormal</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="42" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="318" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1a8a4fd08dd0d8e89f5c0b925d363db480" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; const <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *, 3 &gt;</type>
        <definition>Array&lt; const MultiCutFab *, 3 &gt; amrex::EBDataCollection::getAreaFrac</definition>
        <argsstring>() const</argsstring>
        <name>getAreaFrac</name>
        <qualifiedname>amrex::EBDataCollection::getAreaFrac</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="43" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="297" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1a68bb82c690793fb0e1f72eb1b7ef137a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; const <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *, 3 &gt;</type>
        <definition>Array&lt; const MultiCutFab *, 3 &gt; amrex::EBDataCollection::getFaceCent</definition>
        <argsstring>() const</argsstring>
        <name>getFaceCent</name>
        <qualifiedname>amrex::EBDataCollection::getFaceCent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="44" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="304" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1a18fa630931ad847127e7417e66136183" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; const <ref refid="classamrex_1_1MultiCutFab" kindref="compound">MultiCutFab</ref> *, 3 &gt;</type>
        <definition>Array&lt; const MultiCutFab *, 3 &gt; amrex::EBDataCollection::getEdgeCent</definition>
        <argsstring>() const</argsstring>
        <name>getEdgeCent</name>
        <qualifiedname>amrex::EBDataCollection::getEdgeCent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="45" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="311" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1a9cac1024f42f36d74533776ad058b392" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> *</type>
        <definition>const iMultiFab * amrex::EBDataCollection::getCutCellMask</definition>
        <argsstring>() const</argsstring>
        <name>getCutCellMask</name>
        <qualifiedname>amrex::EBDataCollection::getCutCellMask</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="46" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="325" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EBDataCollection_1a49ed9d07cf0f8fc92b793d52190ad6f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::EBDataCollection::extendDataOutsideDomain</definition>
        <argsstring>(IntVect const &amp;level_ng)</argsstring>
        <name>extendDataOutsideDomain</name>
        <qualifiedname>amrex::EBDataCollection::extendDataOutsideDomain</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1a95101764f5ec64cd1dd6e55614702cdb" kindref="member">IntVect</ref> const &amp;</type>
          <declname>level_ng</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="49" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp" bodystart="87" bodyend="235"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="75">
        <label>amrex::Array4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1Array4"/>
        <childnode refid="76" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="78">
        <label>amrex::Array4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1Array4"/>
        <childnode refid="76" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="85">
        <label>amrex::Array4CopyTag&lt; value_type &gt;</label>
        <link refid="structamrex_1_1Array4CopyTag"/>
        <childnode refid="75" relation="usage">
          <edgelabel>dfab</edgelabel>
        </childnode>
        <childnode refid="78" relation="usage">
          <edgelabel>sfab</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>dbox</edgelabel>
        </childnode>
        <childnode refid="76" relation="usage">
          <edgelabel>offset</edgelabel>
        </childnode>
      </node>
      <node id="69">
        <label>amrex::BaseFab&lt; EBCellFlag &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="57" relation="public-inheritance">
        </childnode>
        <childnode refid="70" relation="usage">
          <edgelabel>dptr</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="120">
        <label>amrex::BaseFab&lt; Real &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="57" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="144">
        <label>amrex::BaseFab&lt; int &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="57" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::BoxND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1BoxND"/>
      </node>
      <node id="89">
        <label>amrex::CommRecvBufTag&lt; value_type &gt;</label>
        <link refid="structamrex_1_1CommRecvBufTag"/>
        <childnode refid="75" relation="usage">
          <edgelabel>dfab</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>bx</edgelabel>
        </childnode>
      </node>
      <node id="93">
        <label>amrex::CommSendBufTag&lt; value_type &gt;</label>
        <link refid="structamrex_1_1CommSendBufTag"/>
        <childnode refid="78" relation="usage">
          <edgelabel>sfab</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>bx</edgelabel>
        </childnode>
      </node>
      <node id="123">
        <label>amrex::FBData&lt; FArrayBox &gt;</label>
        <link refid="structamrex_1_1FBData"/>
        <childnode refid="96" relation="usage">
          <edgelabel>fb</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>recv_data</edgelabel>
          <edgelabel>send_data</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
        <childnode refid="108" relation="usage">
          <edgelabel>recv_stat</edgelabel>
        </childnode>
      </node>
      <node id="148">
        <label>amrex::FBData&lt; IArrayBox &gt;</label>
        <link refid="structamrex_1_1FBData"/>
        <childnode refid="96" relation="usage">
          <edgelabel>fb</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>recv_data</edgelabel>
          <edgelabel>send_data</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
        <childnode refid="108" relation="usage">
          <edgelabel>recv_stat</edgelabel>
        </childnode>
      </node>
      <node id="134">
        <label>amrex::FBData&lt; amrex::CutFab &gt;</label>
        <link refid="structamrex_1_1FBData"/>
        <childnode refid="96" relation="usage">
          <edgelabel>fb</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>recv_data</edgelabel>
          <edgelabel>send_data</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
        <childnode refid="108" relation="usage">
          <edgelabel>recv_stat</edgelabel>
        </childnode>
      </node>
      <node id="95">
        <label>amrex::FBData&lt; amrex::EBCellFlagFab &gt;</label>
        <link refid="structamrex_1_1FBData"/>
        <childnode refid="96" relation="usage">
          <edgelabel>fb</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>recv_data</edgelabel>
          <edgelabel>send_data</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
        <childnode refid="108" relation="usage">
          <edgelabel>recv_stat</edgelabel>
        </childnode>
      </node>
      <node id="115">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="116" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>m_single_chunk_arena</edgelabel>
        </childnode>
        <childnode refid="118" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="79" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="81" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>m_fb_local_copy_handler</edgelabel>
        </childnode>
        <childnode refid="86" relation="usage">
          <edgelabel>m_recv_copy_handler</edgelabel>
        </childnode>
        <childnode refid="90" relation="usage">
          <edgelabel>m_send_copy_handler</edgelabel>
        </childnode>
        <childnode refid="122" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="124" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="126" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
      </node>
      <node id="139">
        <label>amrex::FabArray&lt; IArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="140" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>m_single_chunk_arena</edgelabel>
        </childnode>
        <childnode refid="142" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="79" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="81" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>m_fb_local_copy_handler</edgelabel>
        </childnode>
        <childnode refid="86" relation="usage">
          <edgelabel>m_recv_copy_handler</edgelabel>
        </childnode>
        <childnode refid="90" relation="usage">
          <edgelabel>m_send_copy_handler</edgelabel>
        </childnode>
        <childnode refid="147" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="149" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="151" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
      </node>
      <node id="128">
        <label>amrex::FabArray&lt; amrex::CutFab &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="129" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>m_single_chunk_arena</edgelabel>
        </childnode>
        <childnode refid="131" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="79" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="81" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>m_fb_local_copy_handler</edgelabel>
        </childnode>
        <childnode refid="86" relation="usage">
          <edgelabel>m_recv_copy_handler</edgelabel>
        </childnode>
        <childnode refid="90" relation="usage">
          <edgelabel>m_send_copy_handler</edgelabel>
        </childnode>
        <childnode refid="133" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="135" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="137" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>amrex::FabArray&lt; amrex::EBCellFlagFab &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>m_single_chunk_arena</edgelabel>
        </childnode>
        <childnode refid="67" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="79" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="81" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>m_fb_local_copy_handler</edgelabel>
        </childnode>
        <childnode refid="86" relation="usage">
          <edgelabel>m_recv_copy_handler</edgelabel>
        </childnode>
        <childnode refid="90" relation="usage">
          <edgelabel>m_send_copy_handler</edgelabel>
        </childnode>
        <childnode refid="94" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="110" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="113" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
      </node>
      <node id="117">
        <label>amrex::FabFactory&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="141">
        <label>amrex::FabFactory&lt; IArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="130">
        <label>amrex::FabFactory&lt; amrex::CutFab &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="56">
        <label>amrex::FabFactory&lt; amrex::EBCellFlagFab &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="8">
        <label>amrex::GpuArray&lt; ParticleReal, 3 &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="26">
        <label>amrex::IndexTypeND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1IndexTypeND"/>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>amrex::IntVectND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="14">
        <label>K</label>
      </node>
      <node id="74">
        <label>amrex::MultiArray4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
        <childnode refid="75" relation="usage">
          <edgelabel>dp</edgelabel>
          <edgelabel>hp</edgelabel>
        </childnode>
      </node>
      <node id="77">
        <label>amrex::MultiArray4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
        <childnode refid="78" relation="usage">
          <edgelabel>dp</edgelabel>
          <edgelabel>hp</edgelabel>
        </childnode>
      </node>
      <node id="125">
        <label>amrex::PCData&lt; FArrayBox &gt;</label>
        <link refid="structamrex_1_1PCData"/>
        <childnode refid="112" relation="usage">
          <edgelabel>cpc</edgelabel>
        </childnode>
        <childnode refid="115" relation="usage">
          <edgelabel>src</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>recv_data</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
      </node>
      <node id="150">
        <label>amrex::PCData&lt; IArrayBox &gt;</label>
        <link refid="structamrex_1_1PCData"/>
        <childnode refid="112" relation="usage">
          <edgelabel>cpc</edgelabel>
        </childnode>
        <childnode refid="139" relation="usage">
          <edgelabel>src</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>recv_data</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
      </node>
      <node id="136">
        <label>amrex::PCData&lt; amrex::CutFab &gt;</label>
        <link refid="structamrex_1_1PCData"/>
        <childnode refid="112" relation="usage">
          <edgelabel>cpc</edgelabel>
        </childnode>
        <childnode refid="128" relation="usage">
          <edgelabel>src</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>recv_data</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
      </node>
      <node id="111">
        <label>amrex::PCData&lt; amrex::EBCellFlagFab &gt;</label>
        <link refid="structamrex_1_1PCData"/>
        <childnode refid="112" relation="usage">
          <edgelabel>cpc</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>src</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>recv_data</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>T</label>
      </node>
      <node id="84">
        <label>amrex::TagVector&lt; amrex::Array4CopyTag&lt; value_type &gt; &gt;</label>
        <link refid="structamrex_1_1TagVector"/>
        <childnode refid="85" relation="usage">
          <edgelabel>d_tags</edgelabel>
        </childnode>
      </node>
      <node id="88">
        <label>amrex::TagVector&lt; amrex::CommRecvBufTag&lt; value_type &gt; &gt;</label>
        <link refid="structamrex_1_1TagVector"/>
        <childnode refid="89" relation="usage">
          <edgelabel>d_tags</edgelabel>
        </childnode>
      </node>
      <node id="92">
        <label>amrex::TagVector&lt; amrex::CommSendBufTag&lt; value_type &gt; &gt;</label>
        <link refid="structamrex_1_1TagVector"/>
        <childnode refid="93" relation="usage">
          <edgelabel>d_tags</edgelabel>
        </childnode>
      </node>
      <node id="106">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="107" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>amrex::Vector&lt; amrex::BoxND &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="36" relation="public-inheritance">
        </childnode>
      </node>
      <node id="108">
        <label>amrex::Vector&lt; amrex::mpidatatypes::MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="109" relation="public-inheritance">
        </childnode>
      </node>
      <node id="102">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="103" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="104">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="105" relation="public-inheritance">
        </childnode>
      </node>
      <node id="79">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="80" relation="public-inheritance">
        </childnode>
      </node>
      <node id="58">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="59" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>m_profiler</edgelabel>
        </childnode>
      </node>
      <node id="60">
        <label>amrex::Arena::ArenaProfiler</label>
        <link refid="structamrex_1_1Arena_1_1ArenaProfiler"/>
        <childnode refid="61" relation="usage">
          <edgelabel>m_arena_profiler_mutex</edgelabel>
        </childnode>
        <childnode refid="62" relation="usage">
          <edgelabel>m_profiling_stats</edgelabel>
        </childnode>
        <childnode refid="64" relation="usage">
          <edgelabel>m_currently_allocated</edgelabel>
        </childnode>
      </node>
      <node id="59">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="34">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="35" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="32" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="29" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="26" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="26" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="22">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="23" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="24" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="22" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
      </node>
      <node id="46">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="34" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="51">
        <label>amrex::BoxIndexerND&lt; dim &gt;</label>
        <link refid="structamrex_1_1BoxIndexerND"/>
        <childnode refid="52" relation="usage">
          <edgelabel>fdm</edgelabel>
        </childnode>
      </node>
      <node id="40">
        <label>amrex::BoxList</label>
        <link refid="classamrex_1_1BoxList"/>
        <childnode refid="35" relation="usage">
          <edgelabel>m_lbox</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="72">
        <label>amrex::BoxND&lt; dim &gt;</label>
        <link refid="classamrex_1_1BoxND"/>
      </node>
      <node id="27">
        <label>amrex::CellIndexEnum</label>
        <link refid="structamrex_1_1CellIndexEnum"/>
      </node>
      <node id="6">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
      </node>
      <node id="132">
        <label>amrex::CutFab</label>
        <link refid="classamrex_1_1CutFab"/>
        <childnode refid="119" relation="public-inheritance">
        </childnode>
      </node>
      <node id="57">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="58" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="76">
        <label>amrex::Dim3</label>
        <link refid="structamrex_1_1Dim3"/>
      </node>
      <node id="41">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
        <childnode refid="42" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
      </node>
      <node id="43">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>m_ownership</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="43" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="70">
        <label>amrex::EBCellFlag</label>
        <link refid="classamrex_1_1EBCellFlag"/>
      </node>
      <node id="68">
        <label>amrex::EBCellFlagFab</label>
        <link refid="classamrex_1_1EBCellFlagFab"/>
        <childnode refid="69" relation="public-inheritance">
        </childnode>
        <childnode refid="71" relation="usage">
          <edgelabel>m_typemap</edgelabel>
        </childnode>
      </node>
      <node id="73">
        <label>amrex::EBCellFlagFab::NumCells</label>
        <link refid="structamrex_1_1EBCellFlagFab_1_1NumCells"/>
      </node>
      <node id="1">
        <label>amrex::EBDataCollection</label>
        <link refid="classamrex_1_1EBDataCollection"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_ngrow</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_geom</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_cellflags</edgelabel>
        </childnode>
        <childnode refid="114" relation="usage">
          <edgelabel>m_levelset</edgelabel>
          <edgelabel>m_volfrac</edgelabel>
        </childnode>
        <childnode refid="127" relation="usage">
          <edgelabel>m_bndryarea</edgelabel>
          <edgelabel>m_bndrycent</edgelabel>
          <edgelabel>m_bndrynorm</edgelabel>
          <edgelabel>m_centroid</edgelabel>
        </childnode>
        <childnode refid="138" relation="usage">
          <edgelabel>m_cutcellmask</edgelabel>
        </childnode>
      </node>
      <node id="121">
        <label>amrex::FABio</label>
        <link refid="classamrex_1_1FABio"/>
      </node>
      <node id="119">
        <label>amrex::FArrayBox</label>
        <link refid="classamrex_1_1FArrayBox"/>
        <childnode refid="120" relation="public-inheritance">
        </childnode>
        <childnode refid="121" relation="usage">
          <edgelabel>fabio</edgelabel>
        </childnode>
      </node>
      <node id="81">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="11">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="12" relation="usage">
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>m_TheCPCache</edgelabel>
          <edgelabel>m_TheCrseFineCache</edgelabel>
          <edgelabel>m_TheFBCache</edgelabel>
          <edgelabel>m_TheFillPatchCache</edgelabel>
          <edgelabel>m_ThePolarBCache</edgelabel>
          <edgelabel>m_TheRB180Cache</edgelabel>
          <edgelabel>m_TheRB90Cache</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>m_mem_usage</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>m_region_tag</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>ownership</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>m_TheTileArrayCache</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>m_TheParForCache</edgelabel>
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>m_BD_count</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
      </node>
      <node id="45">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="46" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="112">
        <label>amrex::FabArrayBase::CPC</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CPC"/>
        <childnode refid="97" relation="public-inheritance">
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>m_dstbdk</edgelabel>
          <edgelabel>m_srcbdk</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>m_dstng</edgelabel>
          <edgelabel>m_offset</edgelabel>
          <edgelabel>m_srcng</edgelabel>
        </childnode>
        <childnode refid="101" relation="usage">
          <edgelabel>m_period</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>m_dstba</edgelabel>
          <edgelabel>m_srcba</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="16" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="97">
        <label>amrex::FabArrayBase::CommMetaData</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CommMetaData"/>
        <childnode refid="98" relation="usage">
          <edgelabel>m_LocTags</edgelabel>
        </childnode>
        <childnode refid="100" relation="usage">
          <edgelabel>m_RcvTags</edgelabel>
          <edgelabel>m_SndTags</edgelabel>
        </childnode>
      </node>
      <node id="96">
        <label>amrex::FabArrayBase::FB</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FB"/>
        <childnode refid="97" relation="public-inheritance">
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_ngrow</edgelabel>
          <edgelabel>m_sb_snghost</edgelabel>
        </childnode>
        <childnode refid="101" relation="usage">
          <edgelabel>m_period</edgelabel>
        </childnode>
      </node>
      <node id="54">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="50">
        <label>amrex::FabArrayBase::ParForInfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1ParForInfo"/>
        <childnode refid="22" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>m_ng</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>m_boxes</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>amrex::FabArrayBase::meminfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1meminfo"/>
      </node>
      <node id="5">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>roundoff_hi</edgelabel>
          <edgelabel>roundoff_lo</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="143">
        <label>amrex::IArrayBox</label>
        <link refid="classamrex_1_1IArrayBox"/>
        <childnode refid="144" relation="public-inheritance">
        </childnode>
        <childnode refid="145" relation="usage">
          <edgelabel>ifabio</edgelabel>
        </childnode>
      </node>
      <node id="146">
        <label>amrex::IFABio</label>
        <link refid="classamrex_1_1IFABio"/>
      </node>
      <node id="12">
        <label>amrex::IntVectND&lt; dim &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="52">
        <label>amrex::Math::FastDivmodU64</label>
        <link refid="structamrex_1_1Math_1_1FastDivmodU64"/>
      </node>
      <node id="63">
        <label>amrex::MemStat</label>
        <link refid="structamrex_1_1MemStat"/>
      </node>
      <node id="127">
        <label>amrex::MultiCutFab</label>
        <link refid="classamrex_1_1MultiCutFab"/>
        <childnode refid="128" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_cellflags</edgelabel>
        </childnode>
      </node>
      <node id="114">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="115" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="101">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="29" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
      </node>
      <node id="66">
        <label>amrex::detail::SingleChunkArena</label>
        <link refid="classamrex_1_1detail_1_1SingleChunkArena"/>
        <childnode refid="58" relation="public-inheritance">
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
      </node>
      <node id="138">
        <label>amrex::iMultiFab</label>
        <link refid="classamrex_1_1iMultiFab"/>
        <childnode refid="139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="86">
        <label>std::map&lt; RecvSendCopyHandlerKey, std::unique_ptr&lt; amrex::TagVector&lt; amrex::CommRecvBufTag&lt; value_type &gt; &gt; &gt; &gt;</label>
        <childnode refid="87" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="90">
        <label>std::map&lt; RecvSendCopyHandlerKey, std::unique_ptr&lt; amrex::TagVector&lt; amrex::CommSendBufTag&lt; value_type &gt; &gt; &gt; &gt;</label>
        <childnode refid="91" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="71">
        <label>std::map&lt; amrex::BoxND, amrex::EBCellFlagFab::NumCells &gt;</label>
        <childnode refid="72" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="73" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="53">
        <label>std::map&lt; amrex::FabArrayBase::BDKey, int &gt;</label>
        <childnode refid="45" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>std::map&lt; std::string, amrex::FabArrayBase::meminfo &gt;</label>
        <childnode refid="16" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="62">
        <label>std::map&lt; std::string, amrex::MemStat &gt;</label>
        <childnode refid="16" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="82">
        <label>std::map&lt; std::uint64_t, std::unique_ptr&lt; amrex::TagVector&lt; amrex::Array4CopyTag&lt; value_type &gt; &gt; &gt; &gt;</label>
        <childnode refid="83" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="49">
        <label>std::multimap&lt; amrex::FabArrayBase::BDKey, amrex::FabArrayBase::ParForInfo * &gt;</label>
        <childnode refid="45" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
        <childnode refid="34" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
        <childnode refid="40" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>std::shared_ptr&lt; amrex::DistributionMapping::Ref &gt;</label>
        <childnode refid="43" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="48">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>std::multimap&lt; K, T &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="61">
        <label>std::mutex</label>
      </node>
      <node id="16">
        <label>std::string</label>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="99">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="107">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="109">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="103">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="105">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="80">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="98">
        <label>std::unique_ptr&lt; CopyComTagsContainer &gt;</label>
        <childnode refid="99" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="100">
        <label>std::unique_ptr&lt; MapOfCopyComTagContainers &gt;</label>
        <childnode refid="48" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="122">
        <label>std::unique_ptr&lt; amrex::FBData&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="123" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="147">
        <label>std::unique_ptr&lt; amrex::FBData&lt; IArrayBox &gt; &gt;</label>
        <childnode refid="148" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="133">
        <label>std::unique_ptr&lt; amrex::FBData&lt; amrex::CutFab &gt; &gt;</label>
        <childnode refid="134" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="94">
        <label>std::unique_ptr&lt; amrex::FBData&lt; amrex::EBCellFlagFab &gt; &gt;</label>
        <childnode refid="95" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="126">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="115" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="151">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; IArrayBox &gt; &gt;</label>
        <childnode refid="139" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="137">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; amrex::CutFab &gt; &gt;</label>
        <childnode refid="128" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="113">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; amrex::EBCellFlagFab &gt; &gt;</label>
        <childnode refid="10" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="116">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="117" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="140">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; IArrayBox &gt; &gt;</label>
        <childnode refid="141" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="129">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; amrex::CutFab &gt; &gt;</label>
        <childnode refid="130" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="55">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; amrex::EBCellFlagFab &gt; &gt;</label>
        <childnode refid="56" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="145">
        <label>std::unique_ptr&lt; amrex::IFABio &gt;</label>
        <childnode refid="146" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="124">
        <label>std::unique_ptr&lt; amrex::PCData&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="125" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="149">
        <label>std::unique_ptr&lt; amrex::PCData&lt; IArrayBox &gt; &gt;</label>
        <childnode refid="150" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="135">
        <label>std::unique_ptr&lt; amrex::PCData&lt; amrex::CutFab &gt; &gt;</label>
        <childnode refid="136" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="110">
        <label>std::unique_ptr&lt; amrex::PCData&lt; amrex::EBCellFlagFab &gt; &gt;</label>
        <childnode refid="111" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="83">
        <label>std::unique_ptr&lt; amrex::TagVector&lt; amrex::Array4CopyTag&lt; value_type &gt; &gt; &gt;</label>
        <childnode refid="84" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="87">
        <label>std::unique_ptr&lt; amrex::TagVector&lt; amrex::CommRecvBufTag&lt; value_type &gt; &gt; &gt;</label>
        <childnode refid="88" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="91">
        <label>std::unique_ptr&lt; amrex::TagVector&lt; amrex::CommSendBufTag&lt; value_type &gt; &gt; &gt;</label>
        <childnode refid="92" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="65">
        <label>std::unique_ptr&lt; amrex::detail::SingleChunkArena &gt;</label>
        <childnode refid="66" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="12" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="64">
        <label>std::unordered_map&lt; void *, std::pair&lt; amrex::MemStat *, std::size_t &gt; &gt;</label>
      </node>
      <node id="118">
        <label>std::vector&lt; FArrayBox * &gt;</label>
        <childnode refid="119" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="142">
        <label>std::vector&lt; IArrayBox * &gt;</label>
        <childnode refid="143" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="131">
        <label>std::vector&lt; amrex::CutFab * &gt;</label>
        <childnode refid="132" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="67">
        <label>std::vector&lt; amrex::EBCellFlagFab * &gt;</label>
        <childnode refid="68" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="38">
        <label>std::vector&lt; int &gt;</label>
      </node>
      <node id="20">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="16" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" line="19" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H" bodystart="20" bodyend="77"/>
    <listofallmembers>
      <member refid="classamrex_1_1EBDataCollection_1a279c06d895ec6ef61086ec173d57281d" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>EBDataCollection</name></member>
      <member refid="classamrex_1_1EBDataCollection_1ac8cfe908c7bcdc5b940444e767ceb37b" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>EBDataCollection</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a37fa70dac3bcfbd63a096961c0a97899" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>EBDataCollection</name></member>
      <member refid="classamrex_1_1EBDataCollection_1add1cd92ef1acf80b7731a873ba626923" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>EBFArrayBoxFactory</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a49ed9d07cf0f8fc92b793d52190ad6f4" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>extendDataOutsideDomain</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a8a4fd08dd0d8e89f5c0b925d363db480" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>getAreaFrac</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a8f2facb9d8f388bd34a905d3249dec3f" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>getBndryArea</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a79f870b65936034e5471d628fbd6d9fb" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>getBndryCent</name></member>
      <member refid="classamrex_1_1EBDataCollection_1ad138261bbea936bf83d44dcca15df02c" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>getBndryNormal</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a1607508139d564d5f6293d6c68f4a953" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>getCentroid</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a9cac1024f42f36d74533776ad058b392" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>getCutCellMask</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a18fa630931ad847127e7417e66136183" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>getEdgeCent</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a68bb82c690793fb0e1f72eb1b7ef137a" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>getFaceCent</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a778401df04db53fd5851aab6bcf1f76b" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>getLevelSet</name></member>
      <member refid="classamrex_1_1EBDataCollection_1acce2adceaba115a5c56167ec8cf3eb79" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>getMultiEBCellFlagFab</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a9cfca800c4df32f884205e7b0cfa5b4f" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>getVolFrac</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a036bbb0e7b0d7ee88c33978716dec8f9" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_areafrac</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a8d677f5c06ce1520cd23addf9d22d5ef" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_bndryarea</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a8a3dfc8b1b1cf5d19c7538d630a4b44b" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_bndrycent</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a586018b239d0fd75d2a920b4e7d8fa40" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_bndrynorm</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a3f3aed898f6ec10c9f141be194499cac" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_cellflags</name></member>
      <member refid="classamrex_1_1EBDataCollection_1af218d8cf84d1ad47414a36663b2c1b36" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_centroid</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a319997acfc8739b7d32879751198026b" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_cutcellmask</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a8f84274dfda311f0e685de8889fe4140" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_edgecent</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a8ae044a5a36f5193689e860e3d403f23" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_facecent</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a4e9d5ca2618309d4445ac8fa75fafc1f" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_geom</name></member>
      <member refid="classamrex_1_1EBDataCollection_1ab3e6789efd39bd7d39bd01cf97c85b07" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_levelset</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a8c1e66f34abde299d2379f0261cfcb53" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_ngrow</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a9d7fc23809662b01ce10290962d272e8" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_support</name></member>
      <member refid="classamrex_1_1EBDataCollection_1ab87f9babcf2b30b23ea7a36ee621538e" prot="private" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>m_volfrac</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a4d50e87a1efb6d1e64b661afa053c99b" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EBDataCollection_1a9f87d7b55521ca94cf041b854bd3be94" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EBDataCollection_1ac0a68c8f5a6914b596f4c47f43d2f6aa" prot="public" virt="non-virtual"><scope>amrex::EBDataCollection</scope><name>~EBDataCollection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
