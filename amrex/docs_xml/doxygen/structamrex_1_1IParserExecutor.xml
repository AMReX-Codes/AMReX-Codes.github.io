<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structamrex_1_1IParserExecutor" kind="struct" language="C++" prot="public">
    <compoundname>amrex::IParserExecutor</compoundname>
    <includes refid="AMReX__IParser_8H" local="no">AMReX_IParser.H</includes>
    <templateparamlist>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1IParserExecutor_1aebb2811410391a0199dce35e55edcafa" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* amrex::IParserExecutor&lt; N &gt;::m_host_executor</definition>
        <argsstring></argsstring>
        <name>m_host_executor</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_IParser.H" line="51" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_IParser.H" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1IParserExecutor_1a47e58b2ffa31fa7664608518e4887c5e" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* amrex::IParserExecutor&lt; N &gt;::m_device_executor</definition>
        <argsstring></argsstring>
        <name>m_device_executor</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_IParser.H" line="53" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_IParser.H" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1IParserExecutor_1adb9b5a32bd60f0e12c25dea36a515b7a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
            <declname>M</declname>
            <defname>M</defname>
            <defval>N</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; M==0, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> long long</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE long long amrex::IParserExecutor&lt; N &gt;::operator()</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator()</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_IParser.H" line="21" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_IParser.H" bodystart="21" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1IParserExecutor_1af52158bd45ec9f15cff8cbfa9806b449" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> std::enable_if_t&lt; sizeof...(Ts)==N &amp;&amp;std::conjunction_v&lt; std::is_integral&lt; Ts &gt;... &gt;, long long &gt;</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE std::enable_if_t&lt;sizeof...(Ts) == N &amp;&amp; std::conjunction_v&lt;std::is_integral&lt;Ts&gt;...&gt;, long long&gt; amrex::IParserExecutor&lt; N &gt;::operator()</definition>
        <argsstring>(Ts... var) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>Ts...</type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_IParser.H" line="31" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_IParser.H" bodystart="31" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1IParserExecutor_1a4c3267155e90c9b58523f0b562d4ae96" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> long long</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE long long amrex::IParserExecutor&lt; N &gt;::operator()</definition>
        <argsstring>(GpuArray&lt; long long, N &gt; const &amp;var) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; long long, N &gt; const &amp;</type>
          <declname>var</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_IParser.H" line="39" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_IParser.H" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1IParserExecutor_1aa9a4f3b1d1294b2d9ee3c11690ca4c08" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::IParserExecutor&lt; N &gt;::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_IParser.H" line="46" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_IParser.H" bodystart="46" bodyend="49"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_IParser.H" line="17" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_IParser.H" bodystart="18" bodyend="55"/>
    <listofallmembers>
      <member refid="structamrex_1_1IParserExecutor_1a47e58b2ffa31fa7664608518e4887c5e" prot="public" virt="non-virtual"><scope>amrex::IParserExecutor</scope><name>m_device_executor</name></member>
      <member refid="structamrex_1_1IParserExecutor_1aebb2811410391a0199dce35e55edcafa" prot="public" virt="non-virtual"><scope>amrex::IParserExecutor</scope><name>m_host_executor</name></member>
      <member refid="structamrex_1_1IParserExecutor_1aa9a4f3b1d1294b2d9ee3c11690ca4c08" prot="public" virt="non-virtual"><scope>amrex::IParserExecutor</scope><name>operator bool</name></member>
      <member refid="structamrex_1_1IParserExecutor_1adb9b5a32bd60f0e12c25dea36a515b7a" prot="public" virt="non-virtual"><scope>amrex::IParserExecutor</scope><name>operator()</name></member>
      <member refid="structamrex_1_1IParserExecutor_1af52158bd45ec9f15cff8cbfa9806b449" prot="public" virt="non-virtual"><scope>amrex::IParserExecutor</scope><name>operator()</name></member>
      <member refid="structamrex_1_1IParserExecutor_1a4c3267155e90c9b58523f0b562d4ae96" prot="public" virt="non-virtual"><scope>amrex::IParserExecutor</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
