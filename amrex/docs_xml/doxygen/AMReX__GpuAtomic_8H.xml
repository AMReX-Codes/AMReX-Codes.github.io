<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="AMReX__GpuAtomic_8H" kind="file" language="C++">
    <compoundname>AMReX_GpuAtomic.H</compoundname>
    <includes local="no">AMReX_Config.H</includes>
    <includes refid="AMReX__GpuQualifiers_8H" local="no">AMReX_GpuQualifiers.H</includes>
    <includes refid="AMReX__Functional_8H" local="no">AMReX_Functional.H</includes>
    <includes refid="AMReX__INT_8H" local="no">AMReX_INT.H</includes>
    <includes local="no">utility</includes>
    <includedby refid="AMReX__Gpu_8H" local="no">/home/runner/work/amrex/amrex/Src/Base/AMReX_Gpu.H</includedby>
    <includedby refid="AMReX__GpuReduce_8H" local="no">/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuReduce.H</includedby>
    <incdepgraph>
      <node id="4">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>limits.h</label>
      </node>
      <node id="2">
        <label>AMReX_Config.H</label>
      </node>
      <node id="8">
        <label>utility</label>
      </node>
      <node id="5">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="361">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Complement.H</label>
        <link refid="AMReX__EB2__IF__Complement_8H"/>
        <childnode refid="358" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCurlCurl.H</label>
        <link refid="AMReX__MLCurlCurl_8H"/>
        <childnode refid="88" relation="include">
        </childnode>
      </node>
      <node id="341">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_CArena.cpp</label>
        <link refid="AMReX__CArena_8cpp"/>
      </node>
      <node id="3">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_extrapolater_K.H</label>
        <link refid="AMReX__extrapolater__K_8H"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="242">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MFIter.cpp</label>
        <link refid="AMReX__MFIter_8cpp"/>
      </node>
      <node id="231">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleReduce.H</label>
        <link refid="AMReX__ParticleReduce_8H"/>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFluxRegister.cpp</label>
        <link refid="AMReX__EBFluxRegister_8cpp"/>
      </node>
      <node id="216">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_CommProfStats.H</label>
        <link refid="AMReX__CommProfStats_8H"/>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
      </node>
      <node id="189">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_MultiGFab.H</label>
        <link refid="AMReX__EB2__MultiGFab_8H"/>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
      </node>
      <node id="383">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleInterpolators.H</label>
        <link refid="AMReX__ParticleInterpolators_8H"/>
      </node>
      <node id="31">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BaseFab.cpp</label>
        <link refid="AMReX__BaseFab_8cpp"/>
      </node>
      <node id="372">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Scale.H</label>
        <link refid="AMReX__EB2__IF__Scale_8H"/>
        <childnode refid="358" relation="include">
        </childnode>
      </node>
      <node id="207">
        <label>/home/runner/work/amrex/amrex/Src/Extern/Conduit/AMReX_Conduit_Blueprint.H</label>
        <link refid="AMReX__Conduit__Blueprint_8H"/>
        <childnode refid="208" relation="include">
        </childnode>
      </node>
      <node id="151">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Geometry.cpp</label>
        <link refid="AMReX__Geometry_8cpp"/>
      </node>
      <node id="296">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_Slopes_3D_K.H</label>
        <link refid="AMReX__EB__Slopes__3D__K_8H"/>
      </node>
      <node id="179">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H</label>
        <link refid="AMReX__Hypre_8H"/>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
      </node>
      <node id="299">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMultiFabUtil_C.H</label>
        <link refid="AMReX__EBMultiFabUtil__C_8H"/>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="194">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.cpp</label>
        <link refid="AMReX__EBFArrayBox_8cpp"/>
      </node>
      <node id="376">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Translation.H</label>
        <link refid="AMReX__EB2__IF__Translation_8H"/>
        <childnode refid="358" relation="include">
        </childnode>
      </node>
      <node id="351">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParIter.H</label>
        <link refid="AMReX__ParIter_8H"/>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="76">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.cpp</label>
        <link refid="AMReX__MLTensorOp_8cpp"/>
      </node>
      <node id="287">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_nd_C.H</label>
        <link refid="AMReX__MultiFabUtil__nd__C_8H"/>
        <childnode refid="284" relation="include">
        </childnode>
      </node>
      <node id="271">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_1D_C.H</label>
        <link refid="AMReX__FilCC__1D__C_8H"/>
        <childnode refid="272" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_iMultiFab.cpp</label>
        <link refid="AMReX__iMultiFab_8cpp"/>
      </node>
      <node id="255">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="256" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="264" relation="include">
        </childnode>
        <childnode refid="265" relation="include">
        </childnode>
        <childnode refid="267" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="269" relation="include">
        </childnode>
        <childnode refid="270" relation="include">
        </childnode>
        <childnode refid="271" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="280" relation="include">
        </childnode>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="283" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
        <childnode refid="286" relation="include">
        </childnode>
        <childnode refid="287" relation="include">
        </childnode>
        <childnode refid="246" relation="include">
        </childnode>
        <childnode refid="251" relation="include">
        </childnode>
        <childnode refid="288" relation="include">
        </childnode>
        <childnode refid="290" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="305" relation="include">
        </childnode>
        <childnode refid="306" relation="include">
        </childnode>
        <childnode refid="307" relation="include">
        </childnode>
        <childnode refid="313" relation="include">
        </childnode>
        <childnode refid="314" relation="include">
        </childnode>
        <childnode refid="315" relation="include">
        </childnode>
        <childnode refid="316" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="317" relation="include">
        </childnode>
        <childnode refid="320" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="252">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_MultiMask.H</label>
        <link refid="AMReX__MultiMask_8H"/>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
      </node>
      <node id="188">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H</label>
        <link refid="AMReX__algoim__K_8H"/>
        <childnode refid="117" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.cpp</label>
        <link refid="AMReX__NVector__MultiFab_8cpp"/>
      </node>
      <node id="142">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Extrapolater.H</label>
        <link refid="AMReX__Extrapolater_8H"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="237">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleLocator.H</label>
        <link refid="AMReX__ParticleLocator_8H"/>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="190">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_MultiGFab.cpp</label>
        <link refid="AMReX__EB2__MultiGFab_8cpp"/>
      </node>
      <node id="70">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H</label>
        <link refid="AMReX__MLCellLinOp_8H"/>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="165">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileUtil.H</label>
        <link refid="AMReX__PlotFileUtil_8H"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
      </node>
      <node id="211">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLProfStats.cpp</label>
        <link refid="AMReX__BLProfStats_8cpp"/>
      </node>
      <node id="357">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Base.H</label>
        <link refid="AMReX__EB2__IF__Base_8H"/>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="358" relation="include">
        </childnode>
        <childnode refid="359" relation="include">
        </childnode>
        <childnode refid="360" relation="include">
        </childnode>
        <childnode refid="361" relation="include">
        </childnode>
        <childnode refid="362" relation="include">
        </childnode>
        <childnode refid="363" relation="include">
        </childnode>
        <childnode refid="364" relation="include">
        </childnode>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="366" relation="include">
        </childnode>
        <childnode refid="367" relation="include">
        </childnode>
        <childnode refid="368" relation="include">
        </childnode>
        <childnode refid="369" relation="include">
        </childnode>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="371" relation="include">
        </childnode>
        <childnode refid="372" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
        <childnode refid="374" relation="include">
        </childnode>
        <childnode refid="375" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
        <childnode refid="377" relation="include">
        </childnode>
      </node>
      <node id="220">
        <label>/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Poisson.H</label>
        <link refid="AMReX__FFT__Poisson_8H"/>
      </node>
      <node id="60">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_NVector_MultiFab.H</label>
        <link refid="AMReX__NVector__MultiFab_8H"/>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="342">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="343" relation="include">
        </childnode>
        <childnode refid="344" relation="include">
        </childnode>
        <childnode refid="352" relation="include">
        </childnode>
      </node>
      <node id="371">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Rotation.H</label>
        <link refid="AMReX__EB2__IF__Rotation_8H"/>
        <childnode refid="358" relation="include">
        </childnode>
      </node>
      <node id="197">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.cpp</label>
        <link refid="AMReX__MultiCutFab_8cpp"/>
      </node>
      <node id="253">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_MultiCutFab.H</label>
        <link refid="AMReX__MultiCutFab_8H"/>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="365">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Extrusion.H</label>
        <link refid="AMReX__EB2__IF__Extrusion_8H"/>
        <childnode refid="358" relation="include">
        </childnode>
      </node>
      <node id="209">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreIJIface.H</label>
        <link refid="AMReX__HypreIJIface_8H"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
      </node>
      <node id="375">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Torus.H</label>
        <link refid="AMReX__EB2__IF__Torus_8H"/>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="358" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.H</label>
        <link refid="AMReX__ErrorList_8H"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level_chkpt_file.H</label>
        <link refid="AMReX__EB2__Level__chkpt__file_8H"/>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="288">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_Mask.H</label>
        <link refid="AMReX__Mask_8H"/>
        <childnode refid="289" relation="include">
        </childnode>
        <childnode refid="252" relation="include">
        </childnode>
      </node>
      <node id="202">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.H</label>
        <link refid="AMReX__BLWritePlotFile_8H"/>
        <childnode refid="203" relation="include">
        </childnode>
      </node>
      <node id="245">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MPMD.cpp</label>
        <link refid="AMReX__MPMD_8cpp"/>
      </node>
      <node id="118">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.cpp</label>
        <link refid="AMReX__EB2_8cpp"/>
      </node>
      <node id="145">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_MFInterpolater.cpp</label>
        <link refid="AMReX__MFInterpolater_8cpp"/>
      </node>
      <node id="173">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.H</label>
        <link refid="AMReX__FluxRegister_8H"/>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="363">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Difference.H</label>
        <link refid="AMReX__EB2__IF__Difference_8H"/>
        <childnode refid="358" relation="include">
        </childnode>
      </node>
      <node id="254">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.cpp</label>
        <link refid="AMReX__BoxArray_8cpp"/>
      </node>
      <node id="198">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_WriteEBSurface.H</label>
        <link refid="AMReX__WriteEBSurface_8H"/>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="141">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Derive.cpp</label>
        <link refid="AMReX__Derive_8cpp"/>
      </node>
      <node id="214">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_CommProfStats.cpp</label>
        <link refid="AMReX__CommProfStats_8cpp"/>
      </node>
      <node id="258">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxReg_2D_C.H</label>
        <link refid="AMReX__FluxReg__2D__C_8H"/>
      </node>
      <node id="286">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_3D_C.H</label>
        <link refid="AMReX__MultiFabUtil__3D__C_8H"/>
      </node>
      <node id="84">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H</label>
        <link refid="AMReX__MLCGSolver_8H"/>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="384">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="385" relation="include">
        </childnode>
      </node>
      <node id="348">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_InSituUtils.H</label>
        <link refid="AMReX__InSituUtils_8H"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="349" relation="include">
        </childnode>
        <childnode refid="350" relation="include">
        </childnode>
      </node>
      <node id="264">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_CoordSys.cpp</label>
        <link refid="AMReX__CoordSys_8cpp"/>
      </node>
      <node id="282">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilND_C.cpp</label>
        <link refid="AMReX__FilND__C_8cpp"/>
      </node>
      <node id="232">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTransformation.H</label>
        <link refid="AMReX__ParticleTransformation_8H"/>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="227">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.cpp</label>
        <link refid="AMReX__ParticleCommunication_8cpp"/>
      </node>
      <node id="268">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_COORDSYS_3D_C.H</label>
        <link refid="AMReX__COORDSYS__3D__C_8H"/>
      </node>
      <node id="123">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_utils.H</label>
        <link refid="AMReX__EB__utils_8H"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.cpp</label>
        <link refid="AMReX__EdgeFluxRegister_8cpp"/>
      </node>
      <node id="56">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMultiFabUtil.cpp</label>
        <link refid="AMReX__EBMultiFabUtil_8cpp"/>
      </node>
      <node id="367">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Lathe.H</label>
        <link refid="AMReX__EB2__IF__Lathe_8H"/>
        <childnode refid="358" relation="include">
        </childnode>
      </node>
      <node id="184">
        <label>/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.H</label>
        <link refid="AMReX__PETSc_8H"/>
        <childnode refid="185" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreSolver.H</label>
        <link refid="AMReX__HypreSolver_8H"/>
      </node>
      <node id="12">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Amr.H</label>
        <link refid="AMReX__Amr_8H"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="186">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_K.H</label>
        <link refid="AMReX__MLTensor__K_8H"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="166">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileUtil.cpp</label>
        <link refid="AMReX__PlotFileUtil_8cpp"/>
      </node>
      <node id="279">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilFC_2D_C.H</label>
        <link refid="AMReX__FilFC__2D__C_8H"/>
      </node>
      <node id="311">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_2D_K.H</label>
        <link refid="AMReX__MLTensor__2D__K_8H"/>
      </node>
      <node id="153">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H</label>
        <link refid="AMReX__FEIntegrator_8H"/>
        <childnode refid="154" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_ErrorList.cpp</label>
        <link refid="AMReX__ErrorList_8cpp"/>
      </node>
      <node id="137">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
      </node>
      <node id="205">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_WritePlotFile.H</label>
        <link refid="AMReX__WritePlotFile_8H"/>
        <childnode refid="206" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IndexSpace_STL.cpp</label>
        <link refid="AMReX__EB2__IndexSpace__STL_8cpp"/>
      </node>
      <node id="185">
        <label>/home/runner/work/amrex/amrex/Src/Extern/PETSc/AMReX_PETSc.cpp</label>
        <link refid="AMReX__PETSc_8cpp"/>
      </node>
      <node id="356">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_DenseBins.H</label>
        <link refid="AMReX__DenseBins_8H"/>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="302">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Habec_K.H</label>
        <link refid="AMReX__Habec__K_8H"/>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
      </node>
      <node id="284">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_C.H</label>
        <link refid="AMReX__MultiFabUtil__C_8H"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="143">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateData.H</label>
        <link refid="AMReX__StateData_8H"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="294">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFArrayBox.H</label>
        <link refid="AMReX__EBFArrayBox_8H"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="301">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_XYPlotDataList.cpp</label>
        <link refid="AMReX__XYPlotDataList_8cpp"/>
      </node>
      <node id="244">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BLBackTrace.cpp</label>
        <link refid="AMReX__BLBackTrace_8cpp"/>
      </node>
      <node id="71">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.H</label>
        <link refid="AMReX__MLCellABecLap_8H"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.cpp</label>
        <link refid="AMReX__TagBox_8cpp"/>
      </node>
      <node id="261">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interp_C.H</label>
        <link refid="AMReX__Interp__C_8H"/>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
      </node>
      <node id="182">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap2.H</label>
        <link refid="AMReX__HypreABecLap2_8H"/>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatchUtil.cpp</label>
        <link refid="AMReX__FillPatchUtil_8cpp"/>
      </node>
      <node id="158">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp</label>
        <link refid="AMReX__AmrData_8cpp"/>
      </node>
      <node id="43">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFab.cpp</label>
        <link refid="AMReX__MultiFab_8cpp"/>
      </node>
      <node id="148">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.cpp</label>
        <link refid="AMReX__DistributionMapping_8cpp"/>
      </node>
      <node id="249">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBCImpl.H</label>
        <link refid="AMReX__NonLocalBCImpl_8H"/>
        <childnode refid="246" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLaplacian.H</label>
        <link refid="AMReX__MLNodeTensorLaplacian_8H"/>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="240" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BCUtil.H</label>
        <link refid="AMReX__BCUtil_8H"/>
        <childnode refid="147" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp</label>
        <link refid="AMReX__EBDataCollection_8cpp"/>
      </node>
      <node id="381">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_BinIterator.H</label>
        <link refid="AMReX__BinIterator_8H"/>
        <childnode refid="356" relation="include">
        </childnode>
        <childnode refid="382" relation="include">
        </childnode>
      </node>
      <node id="221">
        <label>/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_OpenBCSolver.H</label>
        <link refid="AMReX__FFT__OpenBCSolver_8H"/>
        <childnode refid="219" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian_hypre.cpp</label>
        <link refid="AMReX__MLNodeLaplacian__hypre_8cpp"/>
      </node>
      <node id="94">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.H</label>
        <link refid="AMReX__MLNodeLaplacian_8H"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="394">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_TagParallelFor.H</label>
        <link refid="AMReX__TagParallelFor_8H"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="364">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Ellipsoid.H</label>
        <link refid="AMReX__EB2__IF__Ellipsoid_8H"/>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="358" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBNodeFDLaplacian.H</label>
        <link refid="AMReX__MLEBNodeFDLaplacian_8H"/>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.H</label>
        <link refid="AMReX__MLTensorOp_8H"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="324">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister_1D_K.H</label>
        <link refid="AMReX__YAFluxRegister__1D__K_8H"/>
        <childnode refid="325" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshInSituBridge.cpp</label>
        <link refid="AMReX__AmrMeshInSituBridge_8cpp"/>
      </node>
      <node id="289">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_Mask.cpp</label>
        <link refid="AMReX__Mask_8cpp"/>
      </node>
      <node id="78">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.H</label>
        <link refid="AMReX__MLEBABecLap_8H"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="281">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilND_C.H</label>
        <link refid="AMReX__FilND__C_8H"/>
        <childnode refid="282" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLap_K.H</label>
        <link refid="AMReX__MLNodeTensorLap__K_8H"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParticles.H</label>
        <link refid="AMReX__AmrParticles_8H"/>
      </node>
      <node id="196">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMultiFabUtil.H</label>
        <link refid="AMReX__EBMultiFabUtil_8H"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="235">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticleHDF5.H</label>
        <link refid="AMReX__ParticleHDF5_8H"/>
      </node>
      <node id="66">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.H</label>
        <link refid="AMReX__MLPoisson_8H"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="156">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MFCopyDescriptor.H</label>
        <link refid="AMReX__MFCopyDescriptor_8H"/>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
      </node>
      <node id="360">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Box.H</label>
        <link refid="AMReX__EB2__IF__Box_8H"/>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="358" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_RedistributionApply.cpp</label>
        <link refid="AMReX__EB__RedistributionApply_8cpp"/>
      </node>
      <node id="67">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/OpenBC/AMReX_OpenBC.H</label>
        <link refid="AMReX__OpenBC_8H"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_RKIntegrator.H</label>
        <link refid="AMReX__RKIntegrator_8H"/>
        <childnode refid="154" relation="include">
        </childnode>
      </node>
      <node id="358">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF.H</label>
        <link refid="AMReX__EB2__IF_8H"/>
      </node>
      <node id="74">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap_F.cpp</label>
        <link refid="AMReX__MLEBABecLap__F_8cpp"/>
      </node>
      <node id="298">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFluxRegister_C.H</label>
        <link refid="AMReX__EBFluxRegister__C_8H"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_FluxRedistribute.cpp</label>
        <link refid="AMReX__EB__FluxRedistribute_8cpp"/>
      </node>
      <node id="263">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interp_3D_C.H</label>
        <link refid="AMReX__Interp__3D__C_8H"/>
      </node>
      <node id="191">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.H</label>
        <link refid="AMReX__EB__chkpt__file_8H"/>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.cpp</label>
        <link refid="AMReX__InterpFaceRegister_8cpp"/>
      </node>
      <node id="14">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp</label>
        <link refid="AMReX__AmrLevel_8cpp"/>
      </node>
      <node id="272">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_C.H</label>
        <link refid="AMReX__FilCC__C_8H"/>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
      </node>
      <node id="169">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreIJIface.cpp</label>
        <link refid="AMReX__HypreIJIface_8cpp"/>
      </node>
      <node id="63">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_SundialsIntegrator.H</label>
        <link refid="AMReX__SundialsIntegrator_8H"/>
      </node>
      <node id="228">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleUtil.H</label>
        <link refid="AMReX__ParticleUtil_8H"/>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.cpp</label>
        <link refid="AMReX__MLEBTensorOp_8cpp"/>
      </node>
      <node id="37">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H</label>
        <link refid="AMReX__FillPatcher_8H"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.cpp</label>
        <link refid="AMReX__MLMG_8cpp"/>
      </node>
      <node id="59">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp</label>
        <link refid="AMReX__HypreNodeLap_8cpp"/>
      </node>
      <node id="379">
        <label>/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_Helper.H</label>
        <link refid="AMReX__FFT__Helper_8H"/>
        <childnode refid="380" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
      </node>
      <node id="256">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxReg_1D_C.H</label>
        <link refid="AMReX__FluxReg__1D__C_8H"/>
        <childnode refid="257" relation="include">
        </childnode>
      </node>
      <node id="285">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_2D_C.H</label>
        <link refid="AMReX__MultiFabUtil__2D__C_8H"/>
      </node>
      <node id="144">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateData.cpp</label>
        <link refid="AMReX__StateData_8cpp"/>
      </node>
      <node id="349">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_InSituUtils.cpp</label>
        <link refid="AMReX__InSituUtils_8cpp"/>
      </node>
      <node id="317">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H</label>
        <link refid="AMReX__Particle_8H"/>
        <childnode refid="318" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="319" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.H</label>
        <link refid="AMReX__AmrDataAdaptor_8H"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="219">
        <label>/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT.H</label>
        <link refid="AMReX__FFT_8H"/>
        <childnode refid="220" relation="include">
        </childnode>
      </node>
      <node id="323">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Slopes_K.H</label>
        <link refid="AMReX__Slopes__K_8H"/>
        <childnode refid="295" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_StateRedistribute.cpp</label>
        <link refid="AMReX__EB__StateRedistribute_8cpp"/>
      </node>
      <node id="129">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level_STL.H</label>
        <link refid="AMReX__EB2__Level__STL_8H"/>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticle_mod_K.H</label>
        <link refid="AMReX__TracerParticle__mod__K_8H"/>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="274">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_2D_C.H</label>
        <link refid="AMReX__FilCC__2D__C_8H"/>
      </node>
      <node id="267">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_COORDSYS_2D_C.H</label>
        <link refid="AMReX__COORDSYS__2D__C_8H"/>
      </node>
      <node id="45">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil.cpp</label>
        <link refid="AMReX__MultiFabUtil_8cpp"/>
      </node>
      <node id="251">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMF.H</label>
        <link refid="AMReX__VisMF_8H"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="244" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="240" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="250">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_RungeKutta.H</label>
        <link refid="AMReX__RungeKutta_8H"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="304">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLALap_K.H</label>
        <link refid="AMReX__MLALap__K_8H"/>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="373">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Sphere.H</label>
        <link refid="AMReX__EB2__IF__Sphere_8H"/>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="358" relation="include">
        </childnode>
      </node>
      <node id="280">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilFC_3D_C.H</label>
        <link refid="AMReX__FilFC__3D__C_8H"/>
      </node>
      <node id="312">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensor_3D_K.H</label>
        <link refid="AMReX__MLTensor__3D__K_8H"/>
      </node>
      <node id="164">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileDataImpl.cpp</label>
        <link refid="AMReX__PlotFileDataImpl_8cpp"/>
      </node>
      <node id="121">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IndexSpace_STL.H</label>
        <link refid="AMReX__EB2__IndexSpace__STL_8H"/>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="273">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_C.cpp</label>
        <link refid="AMReX__FilCC__C_8cpp"/>
      </node>
      <node id="108">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborList.H</label>
        <link refid="AMReX__NeighborList_8H"/>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="195">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMFInterpolater.cpp</label>
        <link refid="AMReX__EBMFInterpolater_8cpp"/>
      </node>
      <node id="62">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_Sundials.H</label>
        <link refid="AMReX__Sundials_8H"/>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Amr.cpp</label>
        <link refid="AMReX__Amr_8cpp"/>
      </node>
      <node id="86">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H</label>
        <link refid="AMReX__GMRES__MLMG_8H"/>
      </node>
      <node id="305">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap_K.H</label>
        <link refid="AMReX__MLCellABecLap__K_8H"/>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBAmrUtil.H</label>
        <link refid="AMReX__EBAmrUtil_8H"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="246">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.H</label>
        <link refid="AMReX__NonLocalBC_8H"/>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
      </node>
      <node id="303">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLap_K.H</label>
        <link refid="AMReX__MLABecLap__K_8H"/>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H</label>
        <link refid="AMReX__LevelBld_8H"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrMesh.cpp</label>
        <link refid="AMReX__AmrMesh_8cpp"/>
      </node>
      <node id="277">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilFC_C.H</label>
        <link refid="AMReX__FilFC__C_8H"/>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreMLABecLap.cpp</label>
        <link refid="AMReX__HypreMLABecLap_8cpp"/>
      </node>
      <node id="133">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.cpp</label>
        <link refid="AMReX__Hypre_8cpp"/>
      </node>
      <node id="85">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H</label>
        <link refid="AMReX__MLMG_8H"/>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="290">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_C.H</label>
        <link refid="AMReX__EB2__C_8H"/>
        <childnode refid="291" relation="include">
        </childnode>
        <childnode refid="292" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/OpenBC/AMReX_OpenBC.cpp</label>
        <link refid="AMReX__OpenBC_8cpp"/>
      </node>
      <node id="352">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MFParallelFor.H</label>
        <link refid="AMReX__MFParallelFor_8H"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="132">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.H</label>
        <link refid="AMReX__HypreABecLap3_8H"/>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
      </node>
      <node id="210">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLProfStats.H</label>
        <link refid="AMReX__BLProfStats_8H"/>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatchUtil.H</label>
        <link refid="AMReX__FillPatchUtil_8H"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="262">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.cpp</label>
        <link refid="AMReX__Interpolater_8cpp"/>
      </node>
      <node id="11">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrCore.H</label>
        <link refid="AMReX__AmrCore_8H"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="387">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MemPool.H</label>
        <link refid="AMReX__MemPool_8H"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="270" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="389" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
      </node>
      <node id="345">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="334" relation="include">
        </childnode>
      </node>
      <node id="222">
        <label>/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2X.H</label>
        <link refid="AMReX__FFT__R2X_8H"/>
        <childnode refid="219" relation="include">
        </childnode>
      </node>
      <node id="160">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateDescriptor.H</label>
        <link refid="AMReX__StateDescriptor_8H"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian_sten.cpp</label>
        <link refid="AMReX__MLNodeLaplacian__sten_8cpp"/>
      </node>
      <node id="171">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_FabSet.H</label>
        <link refid="AMReX__FabSet_8H"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Arena.cpp</label>
        <link refid="AMReX__Arena_8cpp"/>
      </node>
      <node id="98">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian_misc.cpp</label>
        <link refid="AMReX__MLNodeLaplacian__misc_8cpp"/>
      </node>
      <node id="224">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleBufferMap.H</label>
        <link refid="AMReX__ParticleBufferMap_8H"/>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxRegister.cpp</label>
        <link refid="AMReX__FluxRegister_8cpp"/>
      </node>
      <node id="320">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle_mod_K.H</label>
        <link refid="AMReX__Particle__mod__K_8H"/>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrMesh.H</label>
        <link refid="AMReX__AmrMesh_8H"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="112">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_EdgeFluxRegister.H</label>
        <link refid="AMReX__EdgeFluxRegister_8H"/>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_Redistribution.H</label>
        <link refid="AMReX__EB__Redistribution_8H"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.H</label>
        <link refid="AMReX__MLALaplacian_8H"/>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.H</label>
        <link refid="AMReX__MLEBTensorOp_8H"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="306">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_K.H</label>
        <link refid="AMReX__MLEBTensor__K_8H"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp_grad.cpp</label>
        <link refid="AMReX__MLTensorOp__grad_8cpp"/>
      </node>
      <node id="204">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_ProfParserBatch.cpp</label>
        <link refid="AMReX__ProfParserBatch_8cpp"/>
      </node>
      <node id="111">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticles.cpp</label>
        <link refid="AMReX__TracerParticles_8cpp"/>
      </node>
      <node id="101">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.cpp</label>
        <link refid="AMReX__MLNodeLinOp_8cpp"/>
      </node>
      <node id="161">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateDescriptor.cpp</label>
        <link refid="AMReX__StateDescriptor_8cpp"/>
      </node>
      <node id="117">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.cpp</label>
        <link refid="AMReX__algoim_8cpp"/>
      </node>
      <node id="138">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AuxBoundaryData.H</label>
        <link refid="AMReX__AuxBoundaryData_8H"/>
        <childnode refid="139" relation="include">
        </childnode>
      </node>
      <node id="167">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_chkpt_file.cpp</label>
        <link refid="AMReX__EB__chkpt__file_8cpp"/>
      </node>
      <node id="278">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilFC_C.cpp</label>
        <link refid="AMReX__FilFC__C_8cpp"/>
      </node>
      <node id="248">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_NonLocalBC.cpp</label>
        <link refid="AMReX__NonLocalBC_8cpp"/>
      </node>
      <node id="241">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FACopyDescriptor.H</label>
        <link refid="AMReX__FACopyDescriptor_8H"/>
        <childnode refid="156" relation="include">
        </childnode>
      </node>
      <node id="344">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="341" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="343" relation="include">
        </childnode>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="345" relation="include">
        </childnode>
        <childnode refid="347" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="348" relation="include">
        </childnode>
        <childnode refid="351" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.cpp</label>
        <link refid="AMReX__MLNodeLaplacian_8cpp"/>
      </node>
      <node id="208">
        <label>/home/runner/work/amrex/amrex/Src/Extern/Conduit/AMReX_Conduit_Blueprint.cpp</label>
        <link refid="AMReX__Conduit__Blueprint_8cpp"/>
      </node>
      <node id="168">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_PlotFileUtilHDF5.cpp</label>
        <link refid="AMReX__PlotFileUtilHDF5_8cpp"/>
      </node>
      <node id="233">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleUtil.cpp</label>
        <link refid="AMReX__ParticleUtil_8cpp"/>
      </node>
      <node id="93">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeABecLaplacian.cpp</label>
        <link refid="AMReX__MLNodeABecLaplacian_8cpp"/>
      </node>
      <node id="355">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="353" relation="include">
        </childnode>
        <childnode refid="356" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_PlotFileUtilHDF5.H</label>
        <link refid="AMReX__PlotFileUtilHDF5_8H"/>
      </node>
      <node id="50">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_Redistribution.cpp</label>
        <link refid="AMReX__EB__Redistribution_8cpp"/>
      </node>
      <node id="353">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Partition.H</label>
        <link refid="AMReX__Partition_8H"/>
      </node>
      <node id="206">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_WritePlotFile.cpp</label>
        <link refid="AMReX__WritePlotFile_8cpp"/>
      </node>
      <node id="275">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilCC_3D_C.H</label>
        <link refid="AMReX__FilCC__3D__C_8H"/>
      </node>
      <node id="347">
        <label>/home/runner/work/amrex/amrex/Src/Extern/Bittree/AMReX_Bittree.cpp</label>
        <link refid="AMReX__Bittree_8cpp"/>
      </node>
      <node id="217">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_RegionsProfStats.H</label>
        <link refid="AMReX__RegionsProfStats_8H"/>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
      </node>
      <node id="307">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp_K.H</label>
        <link refid="AMReX__MLLinOp__K_8H"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="308" relation="include">
        </childnode>
        <childnode refid="311" relation="include">
        </childnode>
        <childnode refid="312" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_StateRedistUtils.cpp</label>
        <link refid="AMReX__EB__StateRedistUtils_8cpp"/>
      </node>
      <node id="391">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="318" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
        <childnode refid="392" relation="include">
        </childnode>
      </node>
      <node id="333">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap_3D_K.H</label>
        <link refid="AMReX__MLEBABecLap__3D__K_8H"/>
        <childnode refid="308" relation="include">
        </childnode>
      </node>
      <node id="385">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="387" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
      </node>
      <node id="213">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLProfUtilities.H</label>
        <link refid="AMReX__BLProfUtilities_8H"/>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
      </node>
      <node id="174">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_BndryData.H</label>
        <link refid="AMReX__BndryData_8H"/>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AuxBoundaryData.cpp</label>
        <link refid="AMReX__AuxBoundaryData_8cpp"/>
      </node>
      <node id="73">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.cpp</label>
        <link refid="AMReX__MLEBABecLap_8cpp"/>
      </node>
      <node id="370">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Polynomial.H</label>
        <link refid="AMReX__EB2__IF__Polynomial_8H"/>
        <childnode refid="358" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBAmrUtil.cpp</label>
        <link refid="AMReX__EBAmrUtil_8cpp"/>
      </node>
      <node id="309">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_2D_K.H</label>
        <link refid="AMReX__MLEBTensor__2D__K_8H"/>
      </node>
      <node id="178">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_MultiMask.cpp</label>
        <link refid="AMReX__MultiMask_8cpp"/>
      </node>
      <node id="81">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp_bc.cpp</label>
        <link refid="AMReX__MLEBTensorOp__bc_8cpp"/>
      </node>
      <node id="318">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H</label>
        <link refid="AMReX__ArrayOfStructs_8H"/>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="319" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="384" relation="include">
        </childnode>
      </node>
      <node id="336">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFabFactory.H</label>
        <link refid="AMReX__EBFabFactory_8H"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp</label>
        <link refid="AMReX__AmrDataAdaptor_8cpp"/>
      </node>
      <node id="377">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Union.H</label>
        <link refid="AMReX__EB2__IF__Union_8H"/>
        <childnode refid="358" relation="include">
        </childnode>
      </node>
      <node id="343">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
      </node>
      <node id="316">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson_K.H</label>
        <link refid="AMReX__MLPoisson__K_8H"/>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="266">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_COORDSYS_C.H</label>
        <link refid="AMReX__COORDSYS__C_8H"/>
        <childnode refid="264" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
      </node>
      <node id="269">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabConv.cpp</label>
        <link refid="AMReX__FabConv_8cpp"/>
      </node>
      <node id="223">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParGDB.H</label>
        <link refid="AMReX__ParGDB_8H"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
      </node>
      <node id="366">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Intersection.H</label>
        <link refid="AMReX__EB2__IF__Intersection_8H"/>
        <childnode refid="358" relation="include">
        </childnode>
      </node>
      <node id="283">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil_1D_C.H</label>
        <link refid="AMReX__MultiFabUtil__1D__C_8H"/>
        <childnode refid="284" relation="include">
        </childnode>
      </node>
      <node id="180">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.H</label>
        <link refid="AMReX__HypreABecLap_8H"/>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
      </node>
      <node id="339">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BlockMutex.H</label>
        <link refid="AMReX__BlockMutex_8H"/>
        <childnode refid="340" relation="include">
        </childnode>
      </node>
      <node id="335">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.H</label>
        <link refid="AMReX__EBDataCollection_8H"/>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="336" relation="include">
        </childnode>
      </node>
      <node id="192">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_STL_utils.H</label>
        <link refid="AMReX__EB__STL__utils_8H"/>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
      </node>
      <node id="380">
        <label>/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT.cpp</label>
        <link refid="AMReX__FFT_8cpp"/>
      </node>
      <node id="230">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleMesh.H</label>
        <link refid="AMReX__ParticleMesh_8H"/>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParGDB.H</label>
        <link refid="AMReX__AmrParGDB_8H"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCurlCurl.cpp</label>
        <link refid="AMReX__MLCurlCurl_8cpp"/>
      </node>
      <node id="328">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_GeometryShop.H</label>
        <link refid="AMReX__EB2__GeometryShop_8H"/>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_iMultiFab.H</label>
        <link refid="AMReX__iMultiFab_8H"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
      </node>
      <node id="199">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H</label>
        <link refid="AMReX__AmrData_8H"/>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
      </node>
      <node id="368">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Parser.H</label>
        <link refid="AMReX__EB2__IF__Parser_8H"/>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="358" relation="include">
        </childnode>
      </node>
      <node id="313">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG_K.H</label>
        <link refid="AMReX__MLMG__K_8H"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
        <childnode refid="321" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="323" relation="include">
        </childnode>
        <childnode refid="288" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
        <childnode refid="326" relation="include">
        </childnode>
        <childnode refid="327" relation="include">
        </childnode>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="329" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian_eb.cpp</label>
        <link refid="AMReX__MLNodeLaplacian__eb_8cpp"/>
      </node>
      <node id="359">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_AllRegular.H</label>
        <link refid="AMReX__EB2__IF__AllRegular_8H"/>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="358" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
      </node>
      <node id="265">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_COORDSYS_1D_C.H</label>
        <link refid="AMReX__COORDSYS__1D__C_8H"/>
        <childnode refid="266" relation="include">
        </childnode>
      </node>
      <node id="332">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_LeastSquares_3D_K.H</label>
        <link refid="AMReX__EB__LeastSquares__3D__K_8H"/>
        <childnode refid="333" relation="include">
        </childnode>
      </node>
      <node id="321">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_IArrayBox.H</label>
        <link refid="AMReX__IArrayBox_8H"/>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="322" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="283" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
        <childnode refid="286" relation="include">
        </childnode>
        <childnode refid="287" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
      </node>
      <node id="327">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister_3D_K.H</label>
        <link refid="AMReX__YAFluxRegister__3D__K_8H"/>
      </node>
      <node id="212">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLProfUtilities.cpp</label>
        <link refid="AMReX__BLProfUtilities_8cpp"/>
      </node>
      <node id="116">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H</label>
        <link refid="AMReX__EB2_8H"/>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="293">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_ND_C.cpp</label>
        <link refid="AMReX__EB2__ND__C_8cpp"/>
      </node>
      <node id="4">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Extrapolater.cpp</label>
        <link refid="AMReX__Extrapolater_8cpp"/>
      </node>
      <node id="325">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister_K.H</label>
        <link refid="AMReX__YAFluxRegister__K_8H"/>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX.cpp</label>
        <link refid="AMReX_8cpp"/>
      </node>
      <node id="150">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_ForkJoin.cpp</label>
        <link refid="AMReX__ForkJoin_8cpp"/>
      </node>
      <node id="18">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrInSituBridge.cpp</label>
        <link refid="AMReX__AmrInSituBridge_8cpp"/>
      </node>
      <node id="109">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticles.H</label>
        <link refid="AMReX__TracerParticles_8H"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBNodeFDLaplacian.cpp</label>
        <link refid="AMReX__MLEBNodeFDLaplacian_8cpp"/>
      </node>
      <node id="354">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Random.cpp</label>
        <link refid="AMReX__Random_8cpp"/>
      </node>
      <node id="69">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/OpenBC/AMReX_OpenBC_K.H</label>
        <link refid="AMReX__OpenBC__K_8H"/>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="247">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.cpp</label>
        <link refid="AMReX__FabArrayBase_8cpp"/>
      </node>
      <node id="215">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_RegionsProfStats.cpp</label>
        <link refid="AMReX__RegionsProfStats_8cpp"/>
      </node>
      <node id="300">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_XYPlotDataList.H</label>
        <link refid="AMReX__XYPlotDataList_8H"/>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="301" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFabFactory.cpp</label>
        <link refid="AMReX__EBFabFactory_8cpp"/>
      </node>
      <node id="378">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_SUNMemory.cpp</label>
        <link refid="AMReX__SUNMemory_8cpp"/>
      </node>
      <node id="72">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.H</label>
        <link refid="AMReX__MLABecLaplacian_8H"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.cpp</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8cpp"/>
      </node>
      <node id="100">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian_sync.cpp</label>
        <link refid="AMReX__MLNodeLaplacian__sync_8cpp"/>
      </node>
      <node id="238">
        <label>/home/runner/work/amrex/amrex/Src/SDC/AMReX_SDCstruct.H</label>
        <link refid="AMReX__SDCstruct_8H"/>
        <childnode refid="239" relation="include">
        </childnode>
      </node>
      <node id="382">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_SparseBins.H</label>
        <link refid="AMReX__SparseBins_8H"/>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="334">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.cpp</label>
        <link refid="AMReX__EBCellFlag_8cpp"/>
      </node>
      <node id="175">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_InterpBndryData.H</label>
        <link refid="AMReX__InterpBndryData_8H"/>
        <childnode refid="176" relation="include">
        </childnode>
      </node>
      <node id="260">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interp_1D_C.H</label>
        <link refid="AMReX__Interp__1D__C_8H"/>
        <childnode refid="261" relation="include">
        </childnode>
      </node>
      <node id="340">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BlockMutex.cpp</label>
        <link refid="AMReX__BlockMutex_8cpp"/>
      </node>
      <node id="239">
        <label>/home/runner/work/amrex/amrex/Src/SDC/AMReX_SDCstruct.cpp</label>
        <link refid="AMReX__SDCstruct_8cpp"/>
      </node>
      <node id="315">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp_K.H</label>
        <link refid="AMReX__MLNodeLinOp__K_8H"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="314" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="240">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMF.cpp</label>
        <link refid="AMReX__VisMF_8cpp"/>
      </node>
      <node id="390">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="391" relation="include">
        </childnode>
        <childnode refid="393" relation="include">
        </childnode>
      </node>
      <node id="201">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_DataServices.cpp</label>
        <link refid="AMReX__DataServices_8cpp"/>
      </node>
      <node id="386">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuDevice.cpp</label>
        <link refid="AMReX__GpuDevice_8cpp"/>
      </node>
      <node id="126">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_WriteEBSurface.cpp</label>
        <link refid="AMReX__WriteEBSurface_8cpp"/>
      </node>
      <node id="322">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_IArrayBox.cpp</label>
        <link refid="AMReX__IArrayBox_8cpp"/>
      </node>
      <node id="291">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_2D_C.cpp</label>
        <link refid="AMReX__EB2__2D__C_8cpp"/>
      </node>
      <node id="134">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.cpp</label>
        <link refid="AMReX__HypreABecLap3_8cpp"/>
      </node>
      <node id="295">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_Slopes_2D_K.H</label>
        <link refid="AMReX__EB__Slopes__2D__K_8H"/>
      </node>
      <node id="338">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBToPVD.cpp</label>
        <link refid="AMReX__EBToPVD_8cpp"/>
      </node>
      <node id="136">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleContainerBase.cpp</label>
        <link refid="AMReX__ParticleContainerBase_8cpp"/>
      </node>
      <node id="162">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.cpp</label>
        <link refid="AMReX__PhysBCFunct_8cpp"/>
      </node>
      <node id="292">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_3D_C.cpp</label>
        <link refid="AMReX__EB2__3D__C_8cpp"/>
      </node>
      <node id="257">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxReg_C.H</label>
        <link refid="AMReX__FluxReg__C_8H"/>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="159">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H</label>
        <link refid="AMReX__PhysBCFunct_8H"/>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp</label>
        <link refid="AMReX__EB2__Level_8cpp"/>
      </node>
      <node id="149">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_ForkJoin.H</label>
        <link refid="AMReX__ForkJoin_8H"/>
        <childnode refid="150" relation="include">
        </childnode>
      </node>
      <node id="172">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_BndryRegister.H</label>
        <link refid="AMReX__BndryRegister_8H"/>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="388">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MemPool.cpp</label>
        <link refid="AMReX__MemPool_8cpp"/>
      </node>
      <node id="319">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H</label>
        <link refid="AMReX__ParticleTile_8H"/>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
      </node>
      <node id="218">
        <label>/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H</label>
        <link refid="AMReX__FFT__R2C_8H"/>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
      </node>
      <node id="393">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PODVector.cpp</label>
        <link refid="AMReX__PODVector_8cpp"/>
      </node>
      <node id="83">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H</label>
        <link refid="AMReX__MLLinOp_8H"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="234">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_WriteBinaryParticleData.H</label>
        <link refid="AMReX__WriteBinaryParticleData_8H"/>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_TagBox.H</label>
        <link refid="AMReX__TagBox_8H"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="243">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MPMD.H</label>
        <link refid="AMReX__MPMD_8H"/>
        <childnode refid="244" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
      </node>
      <node id="297">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBInterpolater.cpp</label>
        <link refid="AMReX__EBInterpolater_8cpp"/>
      </node>
      <node id="163">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileDataImpl.H</label>
        <link refid="AMReX__PlotFileDataImpl_8H"/>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level_STL.cpp</label>
        <link refid="AMReX__EB2__Level__STL_8cpp"/>
      </node>
      <node id="2">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="339" relation="include">
        </childnode>
        <childnode refid="341" relation="include">
        </childnode>
        <childnode refid="265" relation="include">
        </childnode>
        <childnode refid="267" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="342" relation="include">
        </childnode>
        <childnode refid="283" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
        <childnode refid="286" relation="include">
        </childnode>
        <childnode refid="287" relation="include">
        </childnode>
        <childnode refid="353" relation="include">
        </childnode>
        <childnode refid="354" relation="include">
        </childnode>
        <childnode refid="345" relation="include">
        </childnode>
        <childnode refid="355" relation="include">
        </childnode>
        <childnode refid="357" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="379" relation="include">
        </childnode>
        <childnode refid="381" relation="include">
        </childnode>
        <childnode refid="356" relation="include">
        </childnode>
        <childnode refid="351" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="382" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="226">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleCommunication.H</label>
        <link refid="AMReX__ParticleCommunication_8H"/>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFluxRegister.H</label>
        <link refid="AMReX__EBFluxRegister_8H"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H</label>
        <link refid="AMReX__EB2__Level_8H"/>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshDataAdaptor.H</label>
        <link refid="AMReX__AmrMeshDataAdaptor_8H"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="392">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_StructOfArrays.H</label>
        <link refid="AMReX__StructOfArrays_8H"/>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="319" relation="include">
        </childnode>
      </node>
      <node id="187">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.H</label>
        <link refid="AMReX__algoim_8H"/>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
      <node id="177">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreMLABecLap.H</label>
        <link refid="AMReX__HypreMLABecLap_8H"/>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="276">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FilFC_1D_C.H</label>
        <link refid="AMReX__FilFC__1D__C_8H"/>
        <childnode refid="277" relation="include">
        </childnode>
      </node>
      <node id="183">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap2.cpp</label>
        <link refid="AMReX__HypreABecLap2_8cpp"/>
      </node>
      <node id="331">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap_2D_K.H</label>
        <link refid="AMReX__MLEBABecLap__2D__K_8H"/>
      </node>
      <node id="113">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister.H</label>
        <link refid="AMReX__YAFluxRegister_8H"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="369">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Plane.H</label>
        <link refid="AMReX__EB2__IF__Plane_8H"/>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="358" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IndexSpace_chkpt_file.cpp</label>
        <link refid="AMReX__EB2__IndexSpace__chkpt__file_8cpp"/>
      </node>
      <node id="107">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particles.H</label>
        <link refid="AMReX__Particles_8H"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="181">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap.cpp</label>
        <link refid="AMReX__HypreABecLap_8cpp"/>
      </node>
      <node id="91">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBNodeFDLap_K.H</label>
        <link refid="AMReX__MLEBNodeFDLap__K_8H"/>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="346">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_ParReduce.H</label>
        <link refid="AMReX__ParReduce_8H"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="310">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensor_3D_K.H</label>
        <link refid="AMReX__MLEBTensor__3D__K_8H"/>
      </node>
      <node id="152">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_IntegratorBase.H</label>
        <link refid="AMReX__IntegratorBase_8H"/>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLaplacian.cpp</label>
        <link refid="AMReX__MLNodeTensorLaplacian_8cpp"/>
      </node>
      <node id="203">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.cpp</label>
        <link refid="AMReX__BLWritePlotFile_8cpp"/>
      </node>
      <node id="89">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.H</label>
        <link refid="AMReX__MLNodeLinOp_8H"/>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IndexSpace_chkpt_file.H</label>
        <link refid="AMReX__EB2__IndexSpace__chkpt__file_8H"/>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="374">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Spline.H</label>
        <link refid="AMReX__EB2__IF__Spline_8H"/>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="358" relation="include">
        </childnode>
      </node>
      <node id="389">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.cpp</label>
        <link refid="AMReX__PArena_8cpp"/>
      </node>
      <node id="33">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="241" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="243" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="246" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
        <childnode refid="251" relation="include">
        </childnode>
        <childnode refid="252" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
      </node>
      <node id="157">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MFCopyDescriptor.cpp</label>
        <link refid="AMReX__MFCopyDescriptor_8cpp"/>
      </node>
      <node id="147">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BCUtil.cpp</label>
        <link refid="AMReX__BCUtil_8cpp"/>
      </node>
      <node id="13">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H</label>
        <link refid="AMReX__AmrLevel_8H"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="140">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Derive.H</label>
        <link refid="AMReX__Derive_8H"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H</label>
        <link refid="AMReX__HypreNodeLap_8H"/>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="154">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_TimeIntegrator.H</label>
        <link refid="AMReX__TimeIntegrator_8H"/>
      </node>
      <node id="314">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLap_K.H</label>
        <link refid="AMReX__MLNodeLap__K_8H"/>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="350">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_ParticleDataAdaptorI.H</label>
        <link refid="AMReX__ParticleDataAdaptorI_8H"/>
      </node>
      <node id="236">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleIO.H</label>
        <link refid="AMReX__ParticleIO_8H"/>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeABecLaplacian.H</label>
        <link refid="AMReX__MLNodeABecLaplacian_8H"/>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="259">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FluxReg_3D_C.H</label>
        <link refid="AMReX__FluxReg__3D__C_8H"/>
      </node>
      <node id="32">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BaseFabUtility.H</label>
        <link refid="AMReX__BaseFabUtility_8H"/>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MultiFabUtil.H</label>
        <link refid="AMReX__MultiFabUtil_8H"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_utils.cpp</label>
        <link refid="AMReX__EB__utils_8cpp"/>
      </node>
      <node id="52">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_StateRedistItracker.cpp</label>
        <link refid="AMReX__EB__StateRedistItracker_8cpp"/>
      </node>
      <node id="270">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FArrayBox.cpp</label>
        <link refid="AMReX__FArrayBox_8cpp"/>
      </node>
      <node id="47">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level_chkpt_file.cpp</label>
        <link refid="AMReX__EB2__Level__chkpt__file_8cpp"/>
      </node>
      <node id="19">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrCore.cpp</label>
        <link refid="AMReX__AmrCore_8cpp"/>
      </node>
      <node id="308">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap_K.H</label>
        <link refid="AMReX__MLEBABecLap__K_8H"/>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="309" relation="include">
        </childnode>
        <childnode refid="310" relation="include">
        </childnode>
      </node>
      <node id="229">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleContainerBase.H</label>
        <link refid="AMReX__ParticleContainerBase_8H"/>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="330">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_LeastSquares_2D_K.H</label>
        <link refid="AMReX__EB__LeastSquares__2D__K_8H"/>
        <childnode refid="331" relation="include">
        </childnode>
      </node>
      <node id="362">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Cylinder.H</label>
        <link refid="AMReX__EB2__IF__Cylinder_8H"/>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="358" relation="include">
        </childnode>
      </node>
      <node id="337">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBToPVD.H</label>
        <link refid="AMReX__EBToPVD_8H"/>
        <childnode refid="338" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="329">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBCellFlag.H</label>
        <link refid="AMReX__EBCellFlag_8H"/>
        <childnode refid="290" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="330" relation="include">
        </childnode>
        <childnode refid="332" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="334" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="337" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="308" relation="include">
        </childnode>
      </node>
      <node id="193">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_STL_utils.cpp</label>
        <link refid="AMReX__EB__STL__utils_8cpp"/>
      </node>
      <node id="326">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_YAFluxRegister_2D_K.H</label>
        <link refid="AMReX__YAFluxRegister__2D__K_8H"/>
      </node>
      <node id="40">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H</label>
        <link refid="AMReX__InterpFaceRegister_8H"/>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="200">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_DataServices.H</label>
        <link refid="AMReX__DataServices_8H"/>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
      </node>
      <node id="225">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleBufferMap.cpp</label>
        <link refid="AMReX__ParticleBufferMap_8cpp"/>
      </node>
      <node id="176">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMGBndry.H</label>
        <link refid="AMReX__MLMGBndry_8H"/>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H</label>
        <link refid="AMReX__NeighborParticles_8H"/>
      </node>
      <node id="106">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleContainer.H</label>
        <link refid="AMReX__ParticleContainer_8H"/>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structamrex_1_1Gpu_1_1AtomicAdd" prot="public">amrex::Gpu::AtomicAdd</innerclass>
    <innerclass refid="structamrex_1_1Gpu_1_1AtomicMin" prot="public">amrex::Gpu::AtomicMin</innerclass>
    <innerclass refid="structamrex_1_1Gpu_1_1AtomicMax" prot="public">amrex::Gpu::AtomicMax</innerclass>
    <innerclass refid="structamrex_1_1Gpu_1_1AtomicLogicalAnd" prot="public">amrex::Gpu::AtomicLogicalAnd</innerclass>
    <innerclass refid="structamrex_1_1Gpu_1_1AtomicLogicalOr" prot="public">amrex::Gpu::AtomicLogicalOr</innerclass>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1Gpu">amrex::Gpu</innernamespace>
    <innernamespace refid="namespaceamrex_1_1Gpu_1_1Atomic">amrex::Gpu::Atomic</innernamespace>
    <innernamespace refid="namespaceamrex_1_1Gpu_1_1Atomic_1_1detail">amrex::Gpu::Atomic::detail</innernamespace>
    <innernamespace refid="namespaceamrex_1_1HostDevice">amrex::HostDevice</innernamespace>
    <innernamespace refid="namespaceamrex_1_1HostDevice_1_1Atomic">amrex::HostDevice::Atomic</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_GPU_ATOMIC_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_GPU_ATOMIC_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_Config.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__GpuQualifiers_8H" kindref="compound">AMReX_GpuQualifiers.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Functional_8H" kindref="compound">AMReX_Functional.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__INT_8H" kindref="compound">AMReX_INT.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="namespaceamrex_1_1Gpu_1_1Atomic" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Gpu::Atomic<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>Add,<sp/>Min<sp/>and<sp/>Max,<sp/>we<sp/>support<sp/>int,<sp/>unsigned<sp/>int,<sp/>long,<sp/>unsigned<sp/>long<sp/>long,<sp/>float<sp/>and<sp/>double.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>Multiply<sp/>and<sp/>Divide,<sp/>we<sp/>support<sp/>generic<sp/>types<sp/>provided<sp/>they<sp/>are<sp/>the<sp/>same<sp/>size<sp/>as<sp/>int<sp/>or<sp/>unsigned<sp/>long<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>have<sp/>*=<sp/>and<sp/>/=<sp/>operators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>LogicalOr<sp/>and<sp/>LogicalAnd,<sp/>the<sp/>data<sp/>type<sp/>is<sp/>int.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>Exch<sp/>and<sp/>CAS,<sp/>the<sp/>data<sp/>type<sp/>is<sp/>generic.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>these<sp/>functions<sp/>are<sp/>non-atomic<sp/>in<sp/>host<sp/>code!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>one<sp/>needs<sp/>them<sp/>to<sp/>be<sp/>atomic<sp/>in<sp/>host<sp/>code,<sp/>use<sp/>HostDevice::Atomic::*.<sp/><sp/>Currently<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>HostDevice::Atomic::Add<sp/>is<sp/>supported.<sp/><sp/>We<sp/>could<sp/>certainly<sp/>add<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="namespaceamrex_1_1Gpu_1_1Atomic_1_1detail" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_SYCL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>R<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1_1detail_1a2819a77a9810eefb910390f23d2a698f" kindref="member">atomic_op</ref><sp/>(R*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>address,<sp/>R<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>val,<sp/><ref refid="namespaceamrex_1a1e470da9cdaa55f3e887edb813385d20a800618943025315f869e4e1f09471012" kindref="member">F</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1SundialsUserFun_1a7c64e1c30110b537ab4c7acbc9a3900a" kindref="member">f</ref>)<sp/>noexcept</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__SYCL_DEVICE_ONLY__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mo<sp/>=<sp/>sycl::memory_order::relaxed;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ms<sp/>=<sp/>sycl::memory_scope::device;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>as<sp/>=<sp/>sycl::access::address_space::global_space;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(R)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(I),<sp/></highlight><highlight class="stringliteral">&quot;sizeof<sp/>R<sp/>!=<sp/>sizeof<sp/>I&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>add_as_I<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">I*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(address);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sycl::atomic_ref&lt;I,mo,ms,as&gt;<sp/>a{*add_as_I};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>old_I<sp/>=<sp/>a.load(),<sp/>new_I;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>new_R<sp/>=<sp/><ref refid="namespaceamrex_1_1SundialsUserFun_1a7c64e1c30110b537ab4c7acbc9a3900a" kindref="member">f</ref>(*(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">R<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;old_I)),<sp/>val);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_I<sp/>=<sp/>*(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">I<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;new_R));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<sp/>a.compare_exchange_strong(old_I,<sp/>new_I));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">R<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;old_I));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/>old<sp/>=<sp/>*address;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*address<sp/>=<sp/><ref refid="namespaceamrex_1_1SundialsUserFun_1a7c64e1c30110b537ab4c7acbc9a3900a" kindref="member">f</ref>(*address,<sp/>val);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Op,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Cond&gt;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1_1detail_1a3b1604f8c0fb00d92059f55290de9efd" kindref="member">atomic_op_if</ref><sp/>(R*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>address,<sp/>R<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>val,<sp/>Op&amp;&amp;<sp/>op,<sp/>Cond&amp;&amp;<sp/>cond)<sp/>noexcept</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__SYCL_DEVICE_ONLY__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mo<sp/>=<sp/>sycl::memory_order::relaxed;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ms<sp/>=<sp/>sycl::memory_scope::device;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>as<sp/>=<sp/>sycl::access::address_space::global_space;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(R)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(I),<sp/></highlight><highlight class="stringliteral">&quot;sizeof<sp/>R<sp/>!=<sp/>sizeof<sp/>I&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>add_as_I<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">I*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(address);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sycl::atomic_ref&lt;I,mo,ms,as&gt;<sp/>a{*add_as_I};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>old_I<sp/>=<sp/>a.load(),<sp/>new_I;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test_success;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>op(*(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">R<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;old_I)),<sp/>val);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_I<sp/>=<sp/>*(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">I<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;tmp));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_success<sp/>=<sp/>cond(tmp);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(test_success<sp/>&amp;&amp;<sp/>!<sp/>a.compare_exchange_strong(old_I,<sp/>new_I));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>test_success;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/>old<sp/>=<sp/>*address;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>op(*(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">R<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;old)),<sp/>val);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cond(tmp))<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*address<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(AMREX_USE_CUDA)<sp/>||<sp/>defined(AMREX_USE_HIP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="87" refid="namespaceamrex_1_1Gpu_1_1Atomic_1_1detail_1a2819a77a9810eefb910390f23d2a698f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>R<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1_1detail_1a2819a77a9810eefb910390f23d2a698f" kindref="member">atomic_op</ref><sp/>(R*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>address,<sp/>R<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>val,<sp/>F<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1SundialsUserFun_1a7c64e1c30110b537ab4c7acbc9a3900a" kindref="member">f</ref>)<sp/>noexcept</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(R)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(I),<sp/></highlight><highlight class="stringliteral">&quot;sizeof<sp/>R<sp/>!=<sp/>sizeof<sp/>I&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>add_as_I<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">I*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(address);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>old_I<sp/>=<sp/>*add_as_I,<sp/>assumed_I;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assumed_I<sp/>=<sp/>old_I;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>new_R<sp/>=<sp/><ref refid="namespaceamrex_1_1SundialsUserFun_1a7c64e1c30110b537ab4c7acbc9a3900a" kindref="member">f</ref>(*(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">R<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;assumed_I)),<sp/>val);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_I<sp/>=<sp/>atomicCAS(add_as_I,<sp/>assumed_I,<sp/>*(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">I<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;new_R)));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(assumed_I<sp/>!=<sp/>old_I);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">R<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;old_I));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Op,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Cond&gt;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="102" refid="namespaceamrex_1_1Gpu_1_1Atomic_1_1detail_1a3b1604f8c0fb00d92059f55290de9efd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1_1detail_1a3b1604f8c0fb00d92059f55290de9efd" kindref="member">atomic_op_if</ref><sp/>(R*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>address,<sp/>R<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>val,<sp/>Op&amp;&amp;<sp/>op,<sp/>Cond&amp;&amp;<sp/>cond)<sp/>noexcept</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(R)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(I),<sp/></highlight><highlight class="stringliteral">&quot;sizeof<sp/>R<sp/>!=<sp/>sizeof<sp/>I&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>add_as_I<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">I*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(address);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>old_I<sp/>=<sp/>*add_as_I,<sp/>assumed_I;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>test_success;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assumed_I<sp/>=<sp/>old_I;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>new_R<sp/>=<sp/>op(*(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">R<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;assumed_I)),<sp/>val);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_success<sp/>=<sp/>cond(new_R);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_success)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_I<sp/>=<sp/>atomicCAS(add_as_I,<sp/>assumed_I,<sp/>*(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">I<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;new_R)));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(test_success<sp/>&amp;&amp;<sp/>assumed_I<sp/>!=<sp/>old_I);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>test_success;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="comment">//<sp/><sp/>Add</highlight></codeline>
<codeline lineno="126"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_SYCL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>sycl::access::address_space<sp/>AS<sp/>=<sp/>sycl::access::address_space::global_space&gt;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="135" refid="namespaceamrex_1_1Gpu_1_1Atomic_1aa2cd0bf29a9ed71679b41a3e54765d39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1aa2cd0bf29a9ed71679b41a3e54765d39" kindref="member">Add_device</ref><sp/>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__SYCL_DEVICE_ONLY__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mo<sp/>=<sp/>sycl::memory_order::relaxed;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ms<sp/>=<sp/>sycl::memory_scope::device;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sycl::atomic_ref&lt;T,mo,ms,AS&gt;<sp/>a{*<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.fetch_add(value);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a2240a2bbfffe9904f04e11e37d5d3cc5" kindref="member">AMREX_IF_ON_DEVICE</ref>((<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atomicAdd(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/>value);<sp/>))</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a3db6d2559ac1bb79c7f2a6dfe25917c8" kindref="member">AMREX_IF_ON_HOST</ref>((</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T();<sp/></highlight><highlight class="comment">//<sp/>should<sp/>never<sp/>get<sp/>here,<sp/>but<sp/>have<sp/>to<sp/>return<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_HIP)<sp/>&amp;&amp;<sp/>defined(__gfx90a__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>https://github.com/ROCm-Developer-Tools/hipamd/blob/rocm-4.5.x/include/hip/amd_detail/amd_hip_unsafe_atomics.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1aa2cd0bf29a9ed71679b41a3e54765d39" kindref="member">Add_device</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unsafeAtomicAdd(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1aa2cd0bf29a9ed71679b41a3e54765d39" kindref="member">Add_device</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unsafeAtomicAdd(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_CUDA)<sp/>||<sp/>defined(AMREX_USE_HIP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#atomicadd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>https://rocmdocs.amd.com/en/latest/Programming_Guides/Kernel_language.html?#atomic-functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CUDA<sp/>and<sp/>HIP<sp/>support<sp/>int,<sp/>unsigned<sp/>int,<sp/>and<sp/>unsigned<sp/>long<sp/>long.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="173" refid="namespaceamrex_1_1Gpu_1_1Atomic_1a629c38eebdf637b06b26049acae626c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1aa2cd0bf29a9ed71679b41a3e54765d39" kindref="member">Add_device</ref><sp/>(Long*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/>Long<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::atomic_op&lt;Long,<sp/>unsigned<sp/>long<sp/>long&gt;(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/>value,<sp/><ref refid="structamrex_1_1Plus" kindref="compound">amrex::Plus&lt;Long&gt;</ref>());</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_CUDA)<sp/>&amp;&amp;<sp/>defined(__CUDA_ARCH__)<sp/>&amp;&amp;<sp/>(__CUDA_ARCH__<sp/>&lt;<sp/>600)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1aa2cd0bf29a9ed71679b41a3e54765d39" kindref="member">Add_device</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::atomic_op&lt;double,<sp/>unsigned<sp/>long<sp/>long&gt;(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/>value,<sp/><ref refid="structamrex_1_1Plus" kindref="compound">amrex::Plus&lt;double&gt;</ref>());</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_SYCL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>sycl::access::address_space<sp/>AS<sp/>=<sp/>sycl::access::address_space::global_space&gt;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="198" refid="namespaceamrex_1_1Gpu_1_1Atomic_1a428330a4e7622c16d943003ad97e54a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a428330a4e7622c16d943003ad97e54a0" kindref="member">Add</ref><sp/>(T*<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/>T<sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_SYCL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a2240a2bbfffe9904f04e11e37d5d3cc5" kindref="member">AMREX_IF_ON_DEVICE</ref>((</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Add_device&lt;T,AS&gt;(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/>value);))</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a2240a2bbfffe9904f04e11e37d5d3cc5" kindref="member">AMREX_IF_ON_DEVICE</ref>((</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1aa2cd0bf29a9ed71679b41a3e54765d39" kindref="member">Add_device</ref>(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/>value);))</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a3db6d2559ac1bb79c7f2a6dfe25917c8" kindref="member">AMREX_IF_ON_HOST</ref>((</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>old<sp/>=<sp/>*<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref><sp/>+=<sp/>value;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="comment">//<sp/><sp/>If</highlight></codeline>
<codeline lineno="215"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_CUDA)<sp/>||<sp/>defined(AMREX_USE_HIP)<sp/>||<sp/>defined(AMREX_USE_SYCL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Op,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Cond,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::enable_if_t&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="220" refid="namespaceamrex_1_1Gpu_1_1Atomic_1a36a87ab5fbe799714dcc825134aa6027" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a36a87ab5fbe799714dcc825134aa6027" kindref="member">If_device</ref><sp/>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value,<sp/>Op&amp;&amp;<sp/>op,<sp/>Cond&amp;&amp;<sp/>cond)<sp/>noexcept</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::atomic_op_if&lt;T,<sp/>unsigned<sp/>int&gt;(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/>value,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;Op&gt;(op),<sp/>std::forward&lt;Cond&gt;(cond));</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Op,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Cond,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::enable_if_t&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>foo<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a36a87ab5fbe799714dcc825134aa6027" kindref="member">If_device</ref><sp/>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value,<sp/>Op&amp;&amp;<sp/>op,<sp/>Cond&amp;&amp;<sp/>cond)<sp/>noexcept</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::atomic_op_if&lt;T,<sp/>unsigned<sp/>long<sp/>long&gt;(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/>value,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;Op&gt;(op),<sp/>std::forward&lt;Cond&gt;(cond));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Op,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Cond&gt;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="254" refid="namespaceamrex_1_1Gpu_1_1Atomic_1ac8138a7c3dfae65f72813c07b8e5e856" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1ac8138a7c3dfae65f72813c07b8e5e856" kindref="member">If</ref><sp/>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>add,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value,<sp/>Op&amp;&amp;<sp/>op,<sp/>Cond&amp;&amp;<sp/>cond)<sp/>noexcept</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a2240a2bbfffe9904f04e11e37d5d3cc5" kindref="member">AMREX_IF_ON_DEVICE</ref>((</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a36a87ab5fbe799714dcc825134aa6027" kindref="member">If_device</ref>(add,<sp/>value,<sp/>std::forward&lt;Op&gt;(op),<sp/>std::forward&lt;Cond&gt;(cond));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a3db6d2559ac1bb79c7f2a6dfe25917c8" kindref="member">AMREX_IF_ON_HOST</ref>((</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>old<sp/>=<sp/>*add;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>std::forward&lt;Op&gt;(op)(old,<sp/>value);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::forward&lt;Cond&gt;(cond)(tmp))<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*add<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="comment">//<sp/><sp/>AddNoRet</highlight></codeline>
<codeline lineno="274"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_SYCL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/>sycl::access::address_space<sp/>AS<sp/>=<sp/>sycl::access::address_space::global_space&gt;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="281" refid="namespaceamrex_1_1Gpu_1_1Atomic_1ab69d18587a5c75ca3ce1f48708e865b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1ab69d18587a5c75ca3ce1f48708e865b1" kindref="member">AddNoRet</ref><sp/>(T*<sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/>T<sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__SYCL_DEVICE_ONLY__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Add_device&lt;T,AS&gt;(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a2240a2bbfffe9904f04e11e37d5d3cc5" kindref="member">AMREX_IF_ON_DEVICE</ref>((<ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1aa2cd0bf29a9ed71679b41a3e54765d39" kindref="member">Add_device</ref>(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/>value);))</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a3db6d2559ac1bb79c7f2a6dfe25917c8" kindref="member">AMREX_IF_ON_HOST</ref>((*<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref><sp/>+=<sp/>value;))</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_HIP)<sp/>&amp;&amp;<sp/>defined(HIP_VERSION_MAJOR)<sp/>&amp;&amp;<sp/>(HIP_VERSION_MAJOR<sp/>&lt;<sp/>5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1ab69d18587a5c75ca3ce1f48708e865b1" kindref="member">AddNoRet</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wdeprecated-declarations&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a2240a2bbfffe9904f04e11e37d5d3cc5" kindref="member">AMREX_IF_ON_DEVICE</ref>((atomicAddNoRet(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/>value);))</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a3db6d2559ac1bb79c7f2a6dfe25917c8" kindref="member">AMREX_IF_ON_HOST</ref>((*<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref><sp/>+=<sp/>value;))</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="comment">//<sp/><sp/>Min</highlight></codeline>
<codeline lineno="306"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="311" refid="namespaceamrex_1_1Gpu_1_1Atomic_1ad60dc3c4771055fc434211d284769767" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1ad60dc3c4771055fc434211d284769767" kindref="member">Min_device</ref><sp/>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>m,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__SYCL_DEVICE_ONLY__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mo<sp/>=<sp/>sycl::memory_order::relaxed;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ms<sp/>=<sp/>sycl::memory_scope::device;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>as<sp/>=<sp/>sycl::access::address_space::global_space;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sycl::atomic_ref&lt;T,mo,ms,as&gt;<sp/>a{*m};</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.fetch_min(value);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a2240a2bbfffe9904f04e11e37d5d3cc5" kindref="member">AMREX_IF_ON_DEVICE</ref>((<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atomicMin(m,<sp/>value);<sp/>))</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a3db6d2559ac1bb79c7f2a6dfe25917c8" kindref="member">AMREX_IF_ON_HOST</ref>((</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(m,value);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T();<sp/></highlight><highlight class="comment">//<sp/>should<sp/>never<sp/>get<sp/>here,<sp/>but<sp/>have<sp/>to<sp/>return<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="329" refid="namespaceamrex_1_1Gpu_1_1Atomic_1aa1ce598721adb1e2dcc9986951186d0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1ad60dc3c4771055fc434211d284769767" kindref="member">Min_device</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>m,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::atomic_op&lt;float,int&gt;(m,value,<ref refid="structamrex_1_1Minimum" kindref="compound">amrex::Minimum&lt;float&gt;</ref>());</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="335" refid="namespaceamrex_1_1Gpu_1_1Atomic_1a53c8ca8f4c92a40ec4eee06b385f6ef7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1ad60dc3c4771055fc434211d284769767" kindref="member">Min_device</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>m,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::atomic_op&lt;double,<sp/>unsigned<sp/>long<sp/>long<sp/>int&gt;(m,value,<ref refid="structamrex_1_1Minimum" kindref="compound">amrex::Minimum&lt;double&gt;</ref>());</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_CUDA)<sp/>||<sp/>defined(AMREX_USE_HIP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="343" refid="namespaceamrex_1_1Gpu_1_1Atomic_1a1ca14857c9072d782f6e4a98592ba2b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1ad60dc3c4771055fc434211d284769767" kindref="member">Min_device</ref><sp/>(Long*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>m,<sp/>Long<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::atomic_op&lt;Long,<sp/>unsigned<sp/>long<sp/>long<sp/>int&gt;(m,value,<ref refid="structamrex_1_1Minimum" kindref="compound">amrex::Minimum&lt;Long&gt;</ref>());</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="354" refid="namespaceamrex_1_1Gpu_1_1Atomic_1a775473b1fa3e7d661e3ac6cde59b6018" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a775473b1fa3e7d661e3ac6cde59b6018" kindref="member">Min</ref><sp/>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>m,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a2240a2bbfffe9904f04e11e37d5d3cc5" kindref="member">AMREX_IF_ON_DEVICE</ref>((</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1ad60dc3c4771055fc434211d284769767" kindref="member">Min_device</ref>(m,<sp/>value);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a3db6d2559ac1bb79c7f2a6dfe25917c8" kindref="member">AMREX_IF_ON_HOST</ref>((</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>old<sp/>=<sp/>*m;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*m<sp/>=<sp/>(*m)<sp/>&lt;<sp/>value<sp/>?<sp/>(*m)<sp/>:<sp/>value;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="comment">//<sp/><sp/>Max</highlight></codeline>
<codeline lineno="369"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="374" refid="namespaceamrex_1_1Gpu_1_1Atomic_1addcea6e4721751a5f9eb8b8889c24061" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1addcea6e4721751a5f9eb8b8889c24061" kindref="member">Max_device</ref><sp/>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>m,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__SYCL_DEVICE_ONLY__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mo<sp/>=<sp/>sycl::memory_order::relaxed;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ms<sp/>=<sp/>sycl::memory_scope::device;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>as<sp/>=<sp/>sycl::access::address_space::global_space;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sycl::atomic_ref&lt;T,mo,ms,as&gt;<sp/>a{*m};</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.fetch_max(value);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a2240a2bbfffe9904f04e11e37d5d3cc5" kindref="member">AMREX_IF_ON_DEVICE</ref>((<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atomicMax(m,<sp/>value);<sp/>))</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a3db6d2559ac1bb79c7f2a6dfe25917c8" kindref="member">AMREX_IF_ON_HOST</ref>((</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a95b1159ba3a5494abd49dc9b3d34eacf" kindref="member">amrex::ignore_unused</ref>(m,value);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T();<sp/></highlight><highlight class="comment">//<sp/>should<sp/>never<sp/>get<sp/>here,<sp/>but<sp/>have<sp/>to<sp/>return<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="392" refid="namespaceamrex_1_1Gpu_1_1Atomic_1a97d664f2938116a8c47acd140dfb9547" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1addcea6e4721751a5f9eb8b8889c24061" kindref="member">Max_device</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>m,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::atomic_op&lt;float,int&gt;(m,value,<ref refid="structamrex_1_1Maximum" kindref="compound">amrex::Maximum&lt;float&gt;</ref>());</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="398" refid="namespaceamrex_1_1Gpu_1_1Atomic_1a76e8971f5869a60aac1462e720fead2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1addcea6e4721751a5f9eb8b8889c24061" kindref="member">Max_device</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>m,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::atomic_op&lt;double,<sp/>unsigned<sp/>long<sp/>long<sp/>int&gt;(m,value,<ref refid="structamrex_1_1Maximum" kindref="compound">amrex::Maximum&lt;double&gt;</ref>());</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AMREX_USE_CUDA)<sp/>||<sp/>defined(AMREX_USE_HIP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="406" refid="namespaceamrex_1_1Gpu_1_1Atomic_1a5c122d7c55e6fa6cf6ab6a45a4cf87e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1addcea6e4721751a5f9eb8b8889c24061" kindref="member">Max_device</ref><sp/>(Long*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>m,<sp/>Long<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::atomic_op&lt;Long,<sp/>unsigned<sp/>long<sp/>long<sp/>int&gt;(m,value,<ref refid="structamrex_1_1Maximum" kindref="compound">amrex::Maximum&lt;Long&gt;</ref>());</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="417" refid="namespaceamrex_1_1Gpu_1_1Atomic_1a4a6e235c6fc2013e52d7f1b59bc71bb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a4a6e235c6fc2013e52d7f1b59bc71bb0" kindref="member">Max</ref><sp/>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>m,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a2240a2bbfffe9904f04e11e37d5d3cc5" kindref="member">AMREX_IF_ON_DEVICE</ref>((</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1addcea6e4721751a5f9eb8b8889c24061" kindref="member">Max_device</ref>(m,<sp/>value);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a3db6d2559ac1bb79c7f2a6dfe25917c8" kindref="member">AMREX_IF_ON_HOST</ref>((</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>old<sp/>=<sp/>*m;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*m<sp/>=<sp/>(*m)<sp/>&gt;<sp/>value<sp/>?<sp/>(*m)<sp/>:<sp/>value;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="comment">//<sp/><sp/>LogicalOr</highlight></codeline>
<codeline lineno="432"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="434" refid="namespaceamrex_1_1Gpu_1_1Atomic_1a53a66f5fe06e3b8839cb0f79f0d0ea3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a53a66f5fe06e3b8839cb0f79f0d0ea3d" kindref="member">LogicalOr</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__SYCL_DEVICE_ONLY__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mo<sp/>=<sp/>sycl::memory_order::relaxed;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ms<sp/>=<sp/>sycl::memory_scope::device;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>as<sp/>=<sp/>sycl::access::address_space::global_space;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sycl::atomic_ref&lt;int,mo,ms,as&gt;<sp/>a{*m};</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.fetch_or(value);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a2240a2bbfffe9904f04e11e37d5d3cc5" kindref="member">AMREX_IF_ON_DEVICE</ref>((</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atomicOr(m,<sp/>value);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a3db6d2559ac1bb79c7f2a6dfe25917c8" kindref="member">AMREX_IF_ON_HOST</ref>((</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>old<sp/>=<sp/>*m;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*m<sp/>=<sp/>(*m)<sp/>||<sp/>value;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="comment">//<sp/><sp/>LogicalAnd</highlight></codeline>
<codeline lineno="457"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="459" refid="namespaceamrex_1_1Gpu_1_1Atomic_1a766ff7e5ed9d78fb3a0d5eaffec9c2ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a766ff7e5ed9d78fb3a0d5eaffec9c2ea" kindref="member">LogicalAnd</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__SYCL_DEVICE_ONLY__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mo<sp/>=<sp/>sycl::memory_order::relaxed;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ms<sp/>=<sp/>sycl::memory_scope::device;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>as<sp/>=<sp/>sycl::access::address_space::global_space;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sycl::atomic_ref&lt;int,mo,ms,as&gt;<sp/>a{*m};</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.fetch_and(value<sp/>?<sp/>~0x0<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a2240a2bbfffe9904f04e11e37d5d3cc5" kindref="member">AMREX_IF_ON_DEVICE</ref>((</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atomicAnd(m,<sp/>value<sp/>?<sp/>~0x0<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a3db6d2559ac1bb79c7f2a6dfe25917c8" kindref="member">AMREX_IF_ON_HOST</ref>((</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>old<sp/>=<sp/>*m;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*m<sp/>=<sp/>(*m)<sp/>&amp;&amp;<sp/>value;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="comment">//<sp/><sp/>Exch</highlight></codeline>
<codeline lineno="482"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="485" refid="namespaceamrex_1_1Gpu_1_1Atomic_1a170f55f8b9bd412d07a2ab2e825a4ee8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a170f55f8b9bd412d07a2ab2e825a4ee8" kindref="member">Exch</ref><sp/>(T*<sp/>address,<sp/>T<sp/>val)<sp/>noexcept</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__SYCL_DEVICE_ONLY__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mo<sp/>=<sp/>sycl::memory_order::relaxed;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ms<sp/>=<sp/>sycl::memory_scope::device;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>as<sp/>=<sp/>sycl::access::address_space::global_space;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sycl::atomic_ref&lt;T,mo,ms,as&gt;<sp/>a{*address};</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.exchange(val);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a2240a2bbfffe9904f04e11e37d5d3cc5" kindref="member">AMREX_IF_ON_DEVICE</ref>((</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atomicExch(address,<sp/>val);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a3db6d2559ac1bb79c7f2a6dfe25917c8" kindref="member">AMREX_IF_ON_HOST</ref>((</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>old<sp/>=<sp/>*address;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*address<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="comment">//<sp/><sp/>CAS</highlight></codeline>
<codeline lineno="508"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="511" refid="namespaceamrex_1_1Gpu_1_1Atomic_1a3794cd96c4a2f4b00db9cc1e5d66af87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a3794cd96c4a2f4b00db9cc1e5d66af87" kindref="member">CAS</ref><sp/>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>address,<sp/>T<sp/>compare,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>val)<sp/>noexcept</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cannot<sp/>be<sp/>T<sp/>const<sp/>compare<sp/>because<sp/>of<sp/>compare_exchange_strong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__SYCL_DEVICE_ONLY__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mo<sp/>=<sp/>sycl::memory_order::relaxed;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ms<sp/>=<sp/>sycl::memory_scope::device;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>as<sp/>=<sp/>sycl::access::address_space::global_space;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sycl::atomic_ref&lt;T,mo,ms,as&gt;<sp/>a{*address};</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a.compare_exchange_strong(compare,<sp/>val);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compare;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a2240a2bbfffe9904f04e11e37d5d3cc5" kindref="member">AMREX_IF_ON_DEVICE</ref>((</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atomicCAS(address,<sp/>compare,<sp/>val);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a3db6d2559ac1bb79c7f2a6dfe25917c8" kindref="member">AMREX_IF_ON_HOST</ref>((</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>old<sp/>=<sp/>*address;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*address<sp/>=<sp/>(old<sp/>==<sp/>compare<sp/>?<sp/>val<sp/>:<sp/>old);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="comment">//<sp/><sp/>Multiply</highlight></codeline>
<codeline lineno="535"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::enable_if_t&lt;sizeof(T)<sp/>==<sp/>sizeof(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="540" refid="namespaceamrex_1_1Gpu_1_1Atomic_1afe7501c4ae1afec6af85f031a949dbc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1afe7501c4ae1afec6af85f031a949dbc3" kindref="member">Multiply_device</ref><sp/>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>prod,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::atomic_op&lt;T,<sp/>int&gt;(prod,value,<ref refid="structamrex_1_1Multiplies" kindref="compound">amrex::Multiplies&lt;T&gt;</ref>());</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::enable_if_t&lt;sizeof(T)<sp/>==<sp/>sizeof(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1afe7501c4ae1afec6af85f031a949dbc3" kindref="member">Multiply_device</ref><sp/>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>prod,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::atomic_op&lt;T,<sp/>unsigned<sp/>long<sp/>long&gt;(prod,value,<ref refid="structamrex_1_1Multiplies" kindref="compound">amrex::Multiplies&lt;T&gt;</ref>());</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="556" refid="namespaceamrex_1_1Gpu_1_1Atomic_1a57da8c33bc706892e873bca4ff05f7ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a57da8c33bc706892e873bca4ff05f7ab" kindref="member">Multiply</ref><sp/>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>prod,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a2240a2bbfffe9904f04e11e37d5d3cc5" kindref="member">AMREX_IF_ON_DEVICE</ref>((</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1afe7501c4ae1afec6af85f031a949dbc3" kindref="member">Multiply_device</ref>(prod,<sp/>value);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a3db6d2559ac1bb79c7f2a6dfe25917c8" kindref="member">AMREX_IF_ON_HOST</ref>((</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>old<sp/>=<sp/>*prod;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*prod<sp/>*=<sp/>value;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="comment">//<sp/><sp/>Divide</highlight></codeline>
<codeline lineno="571"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::enable_if_t&lt;sizeof(T)<sp/>==<sp/>sizeof(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="576" refid="namespaceamrex_1_1Gpu_1_1Atomic_1a6bd8e274f3c060b8f34e508ca531f527" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a6bd8e274f3c060b8f34e508ca531f527" kindref="member">Divide_device</ref><sp/>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quot,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::atomic_op&lt;T,<sp/>int&gt;(quot,value,<ref refid="structamrex_1_1Divides" kindref="compound">amrex::Divides&lt;T&gt;</ref>());</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>std::enable_if_t&lt;sizeof(T)<sp/>==<sp/>sizeof(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a6bd8e274f3c060b8f34e508ca531f527" kindref="member">Divide_device</ref><sp/>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quot,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::atomic_op&lt;T,<sp/>unsigned<sp/>long<sp/>long&gt;(quot,value,<ref refid="structamrex_1_1Divides" kindref="compound">amrex::Divides&lt;T&gt;</ref>());</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="592" refid="namespaceamrex_1_1Gpu_1_1Atomic_1a95225444c8b981eefd0e44bf763dfe19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a95225444c8b981eefd0e44bf763dfe19" kindref="member">Divide</ref><sp/>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>quot,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a2240a2bbfffe9904f04e11e37d5d3cc5" kindref="member">AMREX_IF_ON_DEVICE</ref>((</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a6bd8e274f3c060b8f34e508ca531f527" kindref="member">Divide_device</ref>(quot,<sp/>value);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a3db6d2559ac1bb79c7f2a6dfe25917c8" kindref="member">AMREX_IF_ON_HOST</ref>((</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>old<sp/>=<sp/>*quot;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*quot<sp/>/=<sp/>value;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605" refid="namespaceamrex_1_1HostDevice" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">HostDevice::Atomic<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="609" refid="namespaceamrex_1_1HostDevice_1_1Atomic_1ab28f06907144755716b87f5fd5319a67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1HostDevice_1_1Atomic_1ab28f06907144755716b87f5fd5319a67" kindref="member">Add_Host</ref><sp/>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_OMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>atomic<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref><sp/>+=<sp/>value;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="619" refid="namespaceamrex_1_1HostDevice_1_1Atomic_1a6336b6721a9f233f3bc0eb0cacba47c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1HostDevice_1_1Atomic_1a6336b6721a9f233f3bc0eb0cacba47c0" kindref="member">Add</ref><sp/>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value)<sp/>noexcept</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a2240a2bbfffe9904f04e11e37d5d3cc5" kindref="member">AMREX_IF_ON_DEVICE</ref>((<ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1ab69d18587a5c75ca3ce1f48708e865b1" kindref="member">Gpu::Atomic::AddNoRet</ref>(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,value);))</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a3db6d2559ac1bb79c7f2a6dfe25917c8" kindref="member">AMREX_IF_ON_HOST</ref>((<ref refid="namespaceamrex_1_1HostDevice_1_1Atomic_1ab28f06907144755716b87f5fd5319a67" kindref="member">Add_Host</ref>(<ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569dadb62579be9a4f3141fb640a655f49f52" kindref="member">sum</ref>,value);))</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="comment">//<sp/>functors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2a3432ca64f06615abf07ab44c10cada38" kindref="member">Gpu</ref><sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="631" refid="structamrex_1_1Gpu_1_1AtomicAdd" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1Gpu_1_1AtomicAdd" kindref="compound">AtomicAdd</ref></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="633" refid="structamrex_1_1Gpu_1_1AtomicAdd_1af25b1aed5bb341d32acee92134d70fc1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Gpu_1_1AtomicAdd_1af25b1aed5bb341d32acee92134d70fc1" kindref="member">operator() </ref>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dest,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>source)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1ab69d18587a5c75ca3ce1f48708e865b1" kindref="member">Gpu::Atomic::AddNoRet</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="639" refid="structamrex_1_1Gpu_1_1AtomicMin" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1Gpu_1_1AtomicMin" kindref="compound">AtomicMin</ref></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="641" refid="structamrex_1_1Gpu_1_1AtomicMin_1a57fa34f46bd220567f9aa55376e8dd01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Gpu_1_1AtomicMin_1a57fa34f46bd220567f9aa55376e8dd01" kindref="member">operator() </ref>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dest,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>source)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a775473b1fa3e7d661e3ac6cde59b6018" kindref="member">Gpu::Atomic::Min</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="647" refid="structamrex_1_1Gpu_1_1AtomicMax" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1Gpu_1_1AtomicMax" kindref="compound">AtomicMax</ref></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="649" refid="structamrex_1_1Gpu_1_1AtomicMax_1a3652266a0f587ab6652566b40ce86a2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Gpu_1_1AtomicMax_1a3652266a0f587ab6652566b40ce86a2f" kindref="member">operator() </ref>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dest,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>source)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a4a6e235c6fc2013e52d7f1b59bc71bb0" kindref="member">Gpu::Atomic::Max</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="655" refid="structamrex_1_1Gpu_1_1AtomicLogicalAnd" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1Gpu_1_1AtomicLogicalAnd" kindref="compound">AtomicLogicalAnd</ref></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="657" refid="structamrex_1_1Gpu_1_1AtomicLogicalAnd_1a40fb56ba67334eaa96d9384c9c0bee7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Gpu_1_1AtomicLogicalAnd_1a40fb56ba67334eaa96d9384c9c0bee7c" kindref="member">operator() </ref>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dest,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>source)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a766ff7e5ed9d78fb3a0d5eaffec9c2ea" kindref="member">Gpu::Atomic::LogicalAnd</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="663" refid="structamrex_1_1Gpu_1_1AtomicLogicalOr" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1Gpu_1_1AtomicLogicalOr" kindref="compound">AtomicLogicalOr</ref></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="665" refid="structamrex_1_1Gpu_1_1AtomicLogicalOr_1ac07d5f44c06a1cc91aaadf6182504ffc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1Gpu_1_1AtomicLogicalOr_1ac07d5f44c06a1cc91aaadf6182504ffc" kindref="member">operator() </ref>(T*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>dest,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>source)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1_1Atomic_1a53a66f5fe06e3b8839cb0f79f0d0ea3d" kindref="member">Gpu::Atomic::LogicalOr</ref>(dest,<sp/>source);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAtomic.H"/>
  </compounddef>
</doxygen>
