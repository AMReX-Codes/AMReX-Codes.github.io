<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classamrex_1_1MLMGT" kind="class" language="C++" prot="public">
    <compoundname>amrex::MLMGT</compoundname>
    <includes refid="AMReX__MLMG_8H" local="no">AMReX_MLMG.H</includes>
    <innerclass refid="classamrex_1_1MLMGT_1_1error" prot="public">amrex::MLMGT::error</innerclass>
    <templateparamlist>
      <param>
        <type>typename MF</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="classamrex_1_1MLMGT_1a96d1fcb72314606739f67225750197b9" prot="public" static="no" strong="yes">
        <type>int</type>
        <name>CFStrategy</name>
        <qualifiedname>amrex::MLMGT::CFStrategy</qualifiedname>
        <enumvalue id="classamrex_1_1MLMGT_1a96d1fcb72314606739f67225750197b9a334c4a4c42fdb79d7ebc3e73b517e6f8" prot="public">
          <name>none</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classamrex_1_1MLMGT_1a96d1fcb72314606739f67225750197b9abddf1f772a4b8a67379933a3664a17c2" prot="public">
          <name>ghostnodes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="37" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1MLMGT_1a12ae4c265af099934e18adc0ba18f99f" prot="public" static="no">
        <type>MF</type>
        <definition>using amrex::MLMGT&lt; MF &gt;::MFType =  MF</definition>
        <argsstring></argsstring>
        <name>MFType</name>
        <qualifiedname>amrex::MLMGT::MFType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="29" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1MLMGT_1ac98bb20aa53afac0cac33e9788913474" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1MLLinOpT" kindref="compound">MLLinOpT</ref>&lt; MF &gt;::FAB</type>
        <definition>using amrex::MLMGT&lt; MF &gt;::FAB =  typename MLLinOpT&lt;MF&gt;::FAB</definition>
        <argsstring></argsstring>
        <name>FAB</name>
        <qualifiedname>amrex::MLMGT::FAB</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="30" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1MLLinOpT" kindref="compound">MLLinOpT</ref>&lt; MF &gt;::RT</type>
        <definition>using amrex::MLMGT&lt; MF &gt;::RT =  typename MLLinOpT&lt;MF&gt;::RT</definition>
        <argsstring></argsstring>
        <name>RT</name>
        <qualifiedname>amrex::MLMGT::RT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="31" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1MLMGT_1ab0aa1d27d42faff94c85af0b3a9a3b39" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1MLLinOpT" kindref="compound">MLLinOpT</ref>&lt; MF &gt;::BCMode</type>
        <definition>using amrex::MLMGT&lt; MF &gt;::BCMode =  typename MLLinOpT&lt;MF&gt;::BCMode</definition>
        <argsstring></argsstring>
        <name>BCMode</name>
        <qualifiedname>amrex::MLMGT::BCMode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="33" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1MLLinOpT" kindref="compound">MLLinOpT</ref>&lt; MF &gt;::Location</type>
        <definition>using amrex::MLMGT&lt; MF &gt;::Location =  typename MLLinOpT&lt;MF&gt;::Location</definition>
        <argsstring></argsstring>
        <name>Location</name>
        <qualifiedname>amrex::MLMGT::Location</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="34" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1MLMGT_1a970cecc8fdf04c68cd458e27d20b1708" prot="public" static="no">
        <type><ref refid="namespaceamrex_1a9303c93b47b7839de8ce552cb7cb21c4" kindref="member">amrex::BottomSolver</ref></type>
        <definition>using amrex::MLMGT&lt; MF &gt;::BottomSolver =  amrex::BottomSolver</definition>
        <argsstring></argsstring>
        <name>BottomSolver</name>
        <qualifiedname>amrex::MLMGT::BottomSolver</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="36" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="36" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-type">
      <memberdef kind="enum" id="classamrex_1_1MLMGT_1ac3f33b5865628fb4fbb9e39b278358fd" prot="private" static="no" strong="no">
        <type></type>
        <name>timer_types</name>
        <qualifiedname>amrex::MLMGT::timer_types</qualifiedname>
        <enumvalue id="classamrex_1_1MLMGT_1ac3f33b5865628fb4fbb9e39b278358fdafe6893b283399428e6511e5ce0780e7c" prot="private">
          <name>solve_time</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classamrex_1_1MLMGT_1ac3f33b5865628fb4fbb9e39b278358fdaf269540ff581645f82a93c665a8a7b2b" prot="private">
          <name>iter_time</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classamrex_1_1MLMGT_1ac3f33b5865628fb4fbb9e39b278358fda4c32e616cb27e5785c48749118234b63" prot="private">
          <name>bottom_time</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classamrex_1_1MLMGT_1ac3f33b5865628fb4fbb9e39b278358fda24039153a091a3526d8f692a1ae67709" prot="private">
          <name>ntimers</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="345" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="345" bodyend="345"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classamrex_1_1MLMGT_1a7d74bb864e0e5e676d689302876b3da3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class MLCGSolverT</definition>
        <argsstring></argsstring>
        <name>MLCGSolverT</name>
        <qualifiedname>amrex::MLMGT::MLCGSolverT</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MLCGSolverT" kindref="compound">MLCGSolverT</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="26" column="30" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classamrex_1_1MLMGT_1a2b2614ccc7faa12ee28a1428f5cd03d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class GMRESMLMGT</definition>
        <argsstring></argsstring>
        <name>GMRESMLMGT</name>
        <qualifiedname>amrex::MLMGT::GMRESMLMGT</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT" kindref="compound">GMRESMLMGT</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="27" column="30" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="27" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a2f6e60e2724e1ecdb0d7b8b238d02cd9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::MLMGT&lt; MF &gt;::precond_mode</definition>
        <argsstring></argsstring>
        <name>precond_mode</name>
        <qualifiedname>amrex::MLMGT::precond_mode</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="255" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1aa5a72eccc4e6ab6e6b2ac7dcfdd2ce7f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::MLMGT&lt; MF &gt;::throw_exception</definition>
        <argsstring></argsstring>
        <name>throw_exception</name>
        <qualifiedname>amrex::MLMGT::throw_exception</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="256" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1abc5cadb87add794dca040e5cebff0fe2" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MLMGT&lt; MF &gt;::verbose</definition>
        <argsstring></argsstring>
        <name>verbose</name>
        <qualifiedname>amrex::MLMGT::verbose</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="257" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a8667c250440fcb20ee43b4d9ee2b2108" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MLMGT&lt; MF &gt;::max_iters</definition>
        <argsstring></argsstring>
        <name>max_iters</name>
        <qualifiedname>amrex::MLMGT::max_iters</qualifiedname>
        <initializer>= 200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="259" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a8862750ef456314cfb8dc970b37444af" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MLMGT&lt; MF &gt;::do_fixed_number_of_iters</definition>
        <argsstring></argsstring>
        <name>do_fixed_number_of_iters</name>
        <qualifiedname>amrex::MLMGT::do_fixed_number_of_iters</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="260" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1ae0f861e431eac6f2a71511900db05d03" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MLMGT&lt; MF &gt;::max_precond_iters</definition>
        <argsstring></argsstring>
        <name>max_precond_iters</name>
        <qualifiedname>amrex::MLMGT::max_precond_iters</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="261" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a58dfdb82f14a306e71cf3897acaa6f92" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MLMGT&lt; MF &gt;::nu1</definition>
        <argsstring></argsstring>
        <name>nu1</name>
        <qualifiedname>amrex::MLMGT::nu1</qualifiedname>
        <initializer>= 2</initializer>
        <briefdescription>
<para>pre </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="263" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1adf6e938df981049c8e34ee53d3c21d05" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MLMGT&lt; MF &gt;::nu2</definition>
        <argsstring></argsstring>
        <name>nu2</name>
        <qualifiedname>amrex::MLMGT::nu2</qualifiedname>
        <initializer>= 2</initializer>
        <briefdescription>
<para>post </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="264" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a535eff64ede17a0c410f80f26de70a3d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MLMGT&lt; MF &gt;::nuf</definition>
        <argsstring></argsstring>
        <name>nuf</name>
        <qualifiedname>amrex::MLMGT::nuf</qualifiedname>
        <initializer>= 8</initializer>
        <briefdescription>
<para>when smoother is used as bottom solver </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="265" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a7caf8d1d49732307624d42da5ac3cb83" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MLMGT&lt; MF &gt;::nub</definition>
        <argsstring></argsstring>
        <name>nub</name>
        <qualifiedname>amrex::MLMGT::nub</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>additional smoothing after bottom cg solver </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="266" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a7322aabb50f001b012c53ab44f18925b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MLMGT&lt; MF &gt;::max_fmg_iters</definition>
        <argsstring></argsstring>
        <name>max_fmg_iters</name>
        <qualifiedname>amrex::MLMGT::max_fmg_iters</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="268" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a6413a66e0cb6393a0cf6530375797fb1" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a9303c93b47b7839de8ce552cb7cb21c4" kindref="member">BottomSolver</ref></type>
        <definition>BottomSolver amrex::MLMGT&lt; MF &gt;::bottom_solver</definition>
        <argsstring></argsstring>
        <name>bottom_solver</name>
        <qualifiedname>amrex::MLMGT::bottom_solver</qualifiedname>
        <initializer>= <ref refid="namespaceamrex_1a9303c93b47b7839de8ce552cb7cb21c4a7a1920d61156abc05a60135aefe8bc67" kindref="member">BottomSolver::Default</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="270" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1ac73351c2c2371e9849ff1be7d033a657" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLMGT_1a96d1fcb72314606739f67225750197b9" kindref="member">CFStrategy</ref></type>
        <definition>CFStrategy amrex::MLMGT&lt; MF &gt;::cf_strategy</definition>
        <argsstring></argsstring>
        <name>cf_strategy</name>
        <qualifiedname>amrex::MLMGT::cf_strategy</qualifiedname>
        <initializer>= <ref refid="classamrex_1_1MLMGT_1a96d1fcb72314606739f67225750197b9a334c4a4c42fdb79d7ebc3e73b517e6f8" kindref="member">CFStrategy::none</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="271" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a14fa88e22141330833bda28beaef068c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MLMGT&lt; MF &gt;::bottom_verbose</definition>
        <argsstring></argsstring>
        <name>bottom_verbose</name>
        <qualifiedname>amrex::MLMGT::bottom_verbose</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="272" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1aa25c4bc7039d79991c9347812e392042" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MLMGT&lt; MF &gt;::bottom_maxiter</definition>
        <argsstring></argsstring>
        <name>bottom_maxiter</name>
        <qualifiedname>amrex::MLMGT::bottom_maxiter</qualifiedname>
        <initializer>= 200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="273" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1aa8cd739b09d30ecf7e853c350fd2abd1" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
        <definition>RT amrex::MLMGT&lt; MF &gt;::bottom_reltol</definition>
        <argsstring></argsstring>
        <name>bottom_reltol</name>
        <qualifiedname>amrex::MLMGT::bottom_reltol</qualifiedname>
        <initializer>= std::is_same&lt;<ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref>,double&gt;() ? <ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref>(1.e-4) : <ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref>(1.e-3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="274" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1ad3062efc6b4f6fb5bca0d154082251bc" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
        <definition>RT amrex::MLMGT&lt; MF &gt;::bottom_abstol</definition>
        <argsstring></argsstring>
        <name>bottom_abstol</name>
        <qualifiedname>amrex::MLMGT::bottom_abstol</qualifiedname>
        <initializer>= <ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref>(-1.0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="275" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a2ead5fab19529a9b2792efa7227b039d" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad6568bc5df052e827cc522b2c19fd663" kindref="member">MLMGNormType</ref></type>
        <definition>MLMGNormType amrex::MLMGT&lt; MF &gt;::norm_type</definition>
        <argsstring></argsstring>
        <name>norm_type</name>
        <qualifiedname>amrex::MLMGT::norm_type</qualifiedname>
        <initializer>= <ref refid="namespaceamrex_1ad6568bc5df052e827cc522b2c19fd663a7b8dc4fb0fb55fc8eb69ff080c45ed7e" kindref="member">MLMGNormType::greater</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="277" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a2e4658b153dbf32716f539161d0b879e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MLMGT&lt; MF &gt;::final_fill_bc</definition>
        <argsstring></argsstring>
        <name>final_fill_bc</name>
        <qualifiedname>amrex::MLMGT::final_fill_bc</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="279" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a667e1a5701d1f0c19a5950f0aa44080f" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLLinOpT" kindref="compound">MLLinOpT</ref>&lt; MF &gt; &amp;</type>
        <definition>MLLinOpT&lt;MF&gt;&amp; amrex::MLMGT&lt; MF &gt;::linop</definition>
        <argsstring></argsstring>
        <name>linop</name>
        <qualifiedname>amrex::MLMGT::linop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="281" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a67a474e9e00d6fe9f40b4d67f28a355c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MLMGT&lt; MF &gt;::ncomp</definition>
        <argsstring></argsstring>
        <name>ncomp</name>
        <qualifiedname>amrex::MLMGT::ncomp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="282" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a7bde0570493aad3733687a04abf4520e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MLMGT&lt; MF &gt;::namrlevs</definition>
        <argsstring></argsstring>
        <name>namrlevs</name>
        <qualifiedname>amrex::MLMGT::namrlevs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="283" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a8dcbe08a11647df4d03789590bdc1de0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MLMGT&lt; MF &gt;::finest_amr_lev</definition>
        <argsstring></argsstring>
        <name>finest_amr_lev</name>
        <qualifiedname>amrex::MLMGT::finest_amr_lev</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="284" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a1443859ff59e201d7bbdf0cc0971251d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::MLMGT&lt; MF &gt;::linop_prepared</definition>
        <argsstring></argsstring>
        <name>linop_prepared</name>
        <qualifiedname>amrex::MLMGT::linop_prepared</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="286" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a2b20154bea5f4c9076bc6d50529a44b2" prot="private" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::MLMGT&lt; MF &gt;::solve_called</definition>
        <argsstring></argsstring>
        <name>solve_called</name>
        <qualifiedname>amrex::MLMGT::solve_called</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="287" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a262150be12f270d4328ceff545f0afd6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MLMGT&lt; MF &gt;::do_nsolve</definition>
        <argsstring></argsstring>
        <name>do_nsolve</name>
        <qualifiedname>amrex::MLMGT::do_nsolve</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>N Solve. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="290" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1ab7616bcecdedc6719ce8bd7d85b44f64" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::MLMGT&lt; MF &gt;::nsolve_grid_size</definition>
        <argsstring></argsstring>
        <name>nsolve_grid_size</name>
        <qualifiedname>amrex::MLMGT::nsolve_grid_size</qualifiedname>
        <initializer>= 16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="291" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1af44095217d5bbcda0aac7c890c7711f5" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classamrex_1_1MLLinOpT" kindref="compound">MLLinOpT</ref>&lt; MF &gt; &gt;</type>
        <definition>std::unique_ptr&lt;MLLinOpT&lt;MF&gt; &gt; amrex::MLMGT&lt; MF &gt;::ns_linop</definition>
        <argsstring></argsstring>
        <name>ns_linop</name>
        <qualifiedname>amrex::MLMGT::ns_linop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="292" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a9c8ed13672004a913f805ebe0f444073" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classamrex_1_1MLMGT" kindref="compound">MLMGT</ref>&lt; MF &gt; &gt;</type>
        <definition>std::unique_ptr&lt;MLMGT&lt;MF&gt; &gt; amrex::MLMGT&lt; MF &gt;::ns_mlmg</definition>
        <argsstring></argsstring>
        <name>ns_mlmg</name>
        <qualifiedname>amrex::MLMGT::ns_mlmg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="293" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a35c1adc57fbe1db211aac6fae5f5517b" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; MF &gt;</type>
        <definition>std::unique_ptr&lt;MF&gt; amrex::MLMGT&lt; MF &gt;::ns_sol</definition>
        <argsstring></argsstring>
        <name>ns_sol</name>
        <qualifiedname>amrex::MLMGT::ns_sol</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="294" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1ac05ab8b48ded9d649049e4520b00625b" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; MF &gt;</type>
        <definition>std::unique_ptr&lt;MF&gt; amrex::MLMGT&lt; MF &gt;::ns_rhs</definition>
        <argsstring></argsstring>
        <name>ns_rhs</name>
        <qualifiedname>amrex::MLMGT::ns_rhs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="295" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a378e9b27b218cd52236bd6cefc3109ee" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string amrex::MLMGT&lt; MF &gt;::print_ident</definition>
        <argsstring></argsstring>
        <name>print_ident</name>
        <qualifiedname>amrex::MLMGT::print_ident</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="297" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a54b6729d05391f8020912eb72a6db6b2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::MLMGT&lt; MF &gt;::do_no_sync_gpu</definition>
        <argsstring></argsstring>
        <name>do_no_sync_gpu</name>
        <qualifiedname>amrex::MLMGT::do_no_sync_gpu</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="299" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1ab6f5f94d1d7ce12cb556b0cab630f5af" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF &gt;</type>
        <definition>Vector&lt;MF&gt; amrex::MLMGT&lt; MF &gt;::sol</definition>
        <argsstring></argsstring>
        <name>sol</name>
        <qualifiedname>amrex::MLMGT::sol</qualifiedname>
        <briefdescription>
<para><ref refid="classamrex_1_1Hypre" kindref="compound">Hypre</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>PETSc</para>
<para>To avoid confusion, terms like sol, cor, rhs, res, ... etc. are in the frame of the original equation, not the correction form Might be alias to argument a_sol </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="329" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a4e3f5047925ba3d77f1c7284011ebc91" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF &gt;</type>
        <definition>Vector&lt;MF&gt; amrex::MLMGT&lt; MF &gt;::rhs</definition>
        <argsstring></argsstring>
        <name>rhs</name>
        <qualifiedname>amrex::MLMGT::rhs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy of original rhs L(sol) = rhs </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="330" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1acb90259a394dcc6252806b5a533ec9fc" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; int &gt;</type>
        <definition>Vector&lt;int&gt; amrex::MLMGT&lt; MF &gt;::sol_is_alias</definition>
        <argsstring></argsstring>
        <name>sol_is_alias</name>
        <qualifiedname>amrex::MLMGT::sol_is_alias</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="333" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="333" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1aa9aa3ad9d9090afb4ab278c9c8c2287f" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF &gt; &gt;</type>
        <definition>Vector&lt;Vector&lt;MF&gt; &gt; amrex::MLMGT&lt; MF &gt;::res</definition>
        <argsstring></argsstring>
        <name>res</name>
        <qualifiedname>amrex::MLMGT::res</qualifiedname>
        <briefdescription>
<para>First <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>: <ref refid="classamrex_1_1Amr" kindref="compound">Amr</ref> levels. 0 is the coarest level Second <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>: MG levels. 0 is the finest level. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="339" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a1fd0a5173e6ff6c961c080b26f7755ac" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF &gt; &gt;</type>
        <definition>Vector&lt;Vector&lt;MF&gt; &gt; amrex::MLMGT&lt; MF &gt;::cor</definition>
        <argsstring></argsstring>
        <name>cor</name>
        <qualifiedname>amrex::MLMGT::cor</qualifiedname>
        <briefdescription>
<para>= rhs - L(sol) </para>
        </briefdescription>
        <detaileddescription>
<para>L(cor) = res </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="340" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a3b1cfa8f63985ace0f94e581ea709366" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF &gt; &gt;</type>
        <definition>Vector&lt;Vector&lt;MF&gt; &gt; amrex::MLMGT&lt; MF &gt;::cor_hold</definition>
        <argsstring></argsstring>
        <name>cor_hold</name>
        <qualifiedname>amrex::MLMGT::cor_hold</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="341" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a1236e0879a5fe5bf4f2ec5669cee7d59" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF &gt; &gt;</type>
        <definition>Vector&lt;Vector&lt;MF&gt; &gt; amrex::MLMGT&lt; MF &gt;::rescor</definition>
        <argsstring></argsstring>
        <name>rescor</name>
        <qualifiedname>amrex::MLMGT::rescor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>= res - L(cor) Residual of the correction form </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="342" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1adb7400b1c29d0f33ed67e2a81702ed8a" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; double &gt;</type>
        <definition>Vector&lt;double&gt; amrex::MLMGT&lt; MF &gt;::timer</definition>
        <argsstring></argsstring>
        <name>timer</name>
        <qualifiedname>amrex::MLMGT::timer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="346" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a94b67005dca34f78005f42da6f7b3f04" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
        <definition>RT amrex::MLMGT&lt; MF &gt;::m_rhsnorm0</definition>
        <argsstring></argsstring>
        <name>m_rhsnorm0</name>
        <qualifiedname>amrex::MLMGT::m_rhsnorm0</qualifiedname>
        <initializer>= <ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref>(-1.0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="348" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1af6339494ac0686d76870dfad3febbea1" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
        <definition>RT amrex::MLMGT&lt; MF &gt;::m_init_resnorm0</definition>
        <argsstring></argsstring>
        <name>m_init_resnorm0</name>
        <qualifiedname>amrex::MLMGT::m_init_resnorm0</qualifiedname>
        <initializer>= <ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref>(-1.0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="349" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a4c8f06d157691aac2a25008ab4d7726f" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
        <definition>RT amrex::MLMGT&lt; MF &gt;::m_final_resnorm0</definition>
        <argsstring></argsstring>
        <name>m_final_resnorm0</name>
        <qualifiedname>amrex::MLMGT::m_final_resnorm0</qualifiedname>
        <initializer>= <ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref>(-1.0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="350" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1ad44bb368a47f6e10513f541a1047d18c" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; int &gt;</type>
        <definition>Vector&lt;int&gt; amrex::MLMGT&lt; MF &gt;::m_niters_cg</definition>
        <argsstring></argsstring>
        <name>m_niters_cg</name>
        <qualifiedname>amrex::MLMGT::m_niters_cg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="351" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a5d0dc2ebd750fd37b790b56fe2339d15" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref> &gt;</type>
        <definition>Vector&lt;RT&gt; amrex::MLMGT&lt; MF &gt;::m_iter_fine_resnorm0</definition>
        <argsstring></argsstring>
        <name>m_iter_fine_resnorm0</name>
        <qualifiedname>amrex::MLMGT::m_iter_fine_resnorm0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="352" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="352" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1MLMGT_1abc418dda3f523d9f0ce2ad15871dc48b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MLMGT&lt; MF &gt;::MLMGT</definition>
        <argsstring>(MLLinOpT&lt; MF &gt; &amp;a_lp)</argsstring>
        <name>MLMGT</name>
        <qualifiedname>amrex::MLMGT::MLMGT</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MLLinOpT" kindref="compound">MLLinOpT</ref>&lt; MF &gt; &amp;</type>
          <declname>a_lp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="39" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="361" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a33d9c9f2a6560267a6b9b78232702b92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MLMGT&lt; MF &gt;::~MLMGT</definition>
        <argsstring>()</argsstring>
        <name>~MLMGT</name>
        <qualifiedname>amrex::MLMGT::~MLMGT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="40" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1ad45721019c8bf7a76442471a174e55d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MLMGT&lt; MF &gt;::MLMGT</definition>
        <argsstring>(MLMGT&lt; MF &gt; const &amp;)=delete</argsstring>
        <name>MLMGT</name>
        <qualifiedname>amrex::MLMGT::MLMGT</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MLMGT" kindref="compound">MLMGT</ref>&lt; MF &gt; const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="42" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a0a2acaa575273f909062d401f4ea8c2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MLMGT&lt; MF &gt;::MLMGT</definition>
        <argsstring>(MLMGT&lt; MF &gt; &amp;&amp;)=delete</argsstring>
        <name>MLMGT</name>
        <qualifiedname>amrex::MLMGT::MLMGT</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MLMGT" kindref="compound">MLMGT</ref>&lt; MF &gt; &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="43" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1ab607afcaf29c3b047c948fc960347263" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLMGT" kindref="compound">MLMGT</ref>&lt; MF &gt; &amp;</type>
        <definition>MLMGT&lt; MF &gt; &amp; amrex::MLMGT&lt; MF &gt;::operator=</definition>
        <argsstring>(MLMGT&lt; MF &gt; const &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::MLMGT::operator=</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MLMGT" kindref="compound">MLMGT</ref>&lt; MF &gt; const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="44" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1acdee41bf8a36fd8778dece165297d602" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLMGT" kindref="compound">MLMGT</ref>&lt; MF &gt; &amp;</type>
        <definition>MLMGT&lt; MF &gt; &amp; amrex::MLMGT&lt; MF &gt;::operator=</definition>
        <argsstring>(MLMGT&lt; MF &gt; &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::MLMGT::operator=</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MLMGT" kindref="compound">MLMGT</ref>&lt; MF &gt; &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="45" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1afa3e2aa5b90524633ea96626119fe9ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
        <definition>RT amrex::MLMGT&lt; MF &gt;::solve</definition>
        <argsstring>(const Vector&lt; AMF * &gt; &amp;a_sol, const Vector&lt; AMF const * &gt; &amp;a_rhs, RT a_tol_rel, RT a_tol_abs, const char *checkpoint_file=nullptr)</argsstring>
        <name>solve</name>
        <qualifiedname>amrex::MLMGT::solve</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; AMF * &gt; &amp;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; AMF const * &gt; &amp;</type>
          <declname>a_rhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
          <declname>a_tol_rel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
          <declname>a_tol_abs</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>checkpoint_file</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="49" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1aa1b2f0a4a7b72759d11799a3a9d49390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
        <definition>RT amrex::MLMGT&lt; MF &gt;::solve</definition>
        <argsstring>(std::initializer_list&lt; AMF * &gt; a_sol, std::initializer_list&lt; AMF const * &gt; a_rhs, RT a_tol_rel, RT a_tol_abs, const char *checkpoint_file=nullptr)</argsstring>
        <name>solve</name>
        <qualifiedname>amrex::MLMGT::solve</qualifiedname>
        <param>
          <type>std::initializer_list&lt; AMF * &gt;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type>std::initializer_list&lt; AMF const * &gt;</type>
          <declname>a_rhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
          <declname>a_tol_rel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
          <declname>a_tol_abs</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>checkpoint_file</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="53" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a6b05f94f28f81d3fbaf8b88e105ff5ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
        <definition>auto amrex::MLMGT&lt; MF &gt;::precond</definition>
        <argsstring>(Vector&lt; MF * &gt; const &amp;a_sol, Vector&lt; MF const * &gt; const &amp;a_rhs, RT a_tol_rel, RT a_tol_abs)</argsstring>
        <name>precond</name>
        <qualifiedname>amrex::MLMGT::precond</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF * &gt; const &amp;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF const * &gt; const &amp;</type>
          <declname>a_rhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
          <declname>a_tol_rel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
          <declname>a_tol_abs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="57" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="611" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a2b926e1ead33b4de0b4ec53d22d135ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::getGradSolution</definition>
        <argsstring>(const Vector&lt; Array&lt; AMF *, 3 &gt; &gt; &amp;a_grad_sol, Location a_loc=Location::FaceCenter)</argsstring>
        <name>getGradSolution</name>
        <qualifiedname>amrex::MLMGT::getGradSolution</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; AMF *, 3 &gt; &gt; &amp;</type>
          <declname>a_grad_sol</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" kindref="member">Location</ref></type>
          <declname>a_loc</declname>
          <defval>Location::FaceCenter</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="61" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="640" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a9be0af00a2af3201615498edec830c12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::getGradSolution</definition>
        <argsstring>(std::initializer_list&lt; Array&lt; AMF *, 3 &gt; &gt; a_grad_sol, Location a_loc=Location::FaceCenter)</argsstring>
        <name>getGradSolution</name>
        <qualifiedname>amrex::MLMGT::getGradSolution</qualifiedname>
        <param>
          <type>std::initializer_list&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; AMF *, 3 &gt; &gt;</type>
          <declname>a_grad_sol</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" kindref="member">Location</ref></type>
          <declname>a_loc</declname>
          <defval>Location::FaceCenter</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="65" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="663" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a4ec161dc63b34027d1ae6ac808a25693" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::getFluxes</definition>
        <argsstring>(const Vector&lt; Array&lt; AMF *, 3 &gt; &gt; &amp;a_flux, Location a_loc=Location::FaceCenter)</argsstring>
        <name>getFluxes</name>
        <qualifiedname>amrex::MLMGT::getFluxes</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; AMF *, 3 &gt; &gt; &amp;</type>
          <declname>a_flux</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" kindref="member">Location</ref></type>
          <declname>a_loc</declname>
          <defval>Location::FaceCenter</defval>
        </param>
        <briefdescription>
<para>For <computeroutput>(alpha * a - beta * (del dot b grad)) phi = rhs</computeroutput>, flux means <computeroutput>-b grad phi</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="72" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="671" bodyend="697"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1ad89a6f9e1220fae983b3b7e1895a15b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::getFluxes</definition>
        <argsstring>(std::initializer_list&lt; Array&lt; AMF *, 3 &gt; &gt; a_flux, Location a_loc=Location::FaceCenter)</argsstring>
        <name>getFluxes</name>
        <qualifiedname>amrex::MLMGT::getFluxes</qualifiedname>
        <param>
          <type>std::initializer_list&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; AMF *, 3 &gt; &gt;</type>
          <declname>a_flux</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" kindref="member">Location</ref></type>
          <declname>a_loc</declname>
          <defval>Location::FaceCenter</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="76" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="702" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a48794b93ceab4d2b2bec45f7cef09a49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::getFluxes</definition>
        <argsstring>(const Vector&lt; Array&lt; AMF *, 3 &gt; &gt; &amp;a_flux, const Vector&lt; AMF * &gt; &amp;a_sol, Location a_loc=Location::FaceCenter)</argsstring>
        <name>getFluxes</name>
        <qualifiedname>amrex::MLMGT::getFluxes</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; AMF *, 3 &gt; &gt; &amp;</type>
          <declname>a_flux</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; AMF * &gt; &amp;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" kindref="member">Location</ref></type>
          <declname>a_loc</declname>
          <defval>Location::FaceCenter</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="80" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="711" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a711bf15b6d1b9c7424cdf2abf71bd3c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::getFluxes</definition>
        <argsstring>(std::initializer_list&lt; Array&lt; AMF *, 3 &gt; &gt; a_flux, std::initializer_list&lt; AMF * &gt; a_sol, Location a_loc=Location::FaceCenter)</argsstring>
        <name>getFluxes</name>
        <qualifiedname>amrex::MLMGT::getFluxes</qualifiedname>
        <param>
          <type>std::initializer_list&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; AMF *, 3 &gt; &gt;</type>
          <declname>a_flux</declname>
        </param>
        <param>
          <type>std::initializer_list&lt; AMF * &gt;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" kindref="member">Location</ref></type>
          <declname>a_loc</declname>
          <defval>Location::FaceCenter</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="85" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="743" bodyend="748"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a1cbdf2732ca933bb86971cfcc8afde7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::getFluxes</definition>
        <argsstring>(const Vector&lt; AMF * &gt; &amp;a_flux, Location a_loc=Location::CellCenter)</argsstring>
        <name>getFluxes</name>
        <qualifiedname>amrex::MLMGT::getFluxes</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; AMF * &gt; &amp;</type>
          <declname>a_flux</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" kindref="member">Location</ref></type>
          <declname>a_loc</declname>
          <defval>Location::CellCenter</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="90" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="753" bodyend="769"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1ac2c1ddd3a1e83b1574a4336c89b3eff1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::getFluxes</definition>
        <argsstring>(std::initializer_list&lt; AMF * &gt; a_flux, Location a_loc=Location::CellCenter)</argsstring>
        <name>getFluxes</name>
        <qualifiedname>amrex::MLMGT::getFluxes</qualifiedname>
        <param>
          <type>std::initializer_list&lt; AMF * &gt;</type>
          <declname>a_flux</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" kindref="member">Location</ref></type>
          <declname>a_loc</declname>
          <defval>Location::CellCenter</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="94" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="774" bodyend="777"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1aad3f73457b5e489d333b8c5506ae629c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::getFluxes</definition>
        <argsstring>(const Vector&lt; AMF * &gt; &amp;a_flux, const Vector&lt; AMF * &gt; &amp;a_sol, Location a_loc=Location::CellCenter)</argsstring>
        <name>getFluxes</name>
        <qualifiedname>amrex::MLMGT::getFluxes</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; AMF * &gt; &amp;</type>
          <declname>a_flux</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; AMF * &gt; &amp;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" kindref="member">Location</ref></type>
          <declname>a_loc</declname>
          <defval>Location::CellCenter</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="98" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="782" bodyend="835"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1afbd2eac545d410ca5268cdbbad6332aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::getFluxes</definition>
        <argsstring>(std::initializer_list&lt; AMF * &gt; a_flux, std::initializer_list&lt; AMF * &gt; a_sol, Location a_loc=Location::CellCenter)</argsstring>
        <name>getFluxes</name>
        <qualifiedname>amrex::MLMGT::getFluxes</qualifiedname>
        <param>
          <type>std::initializer_list&lt; AMF * &gt;</type>
          <declname>a_flux</declname>
        </param>
        <param>
          <type>std::initializer_list&lt; AMF * &gt;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" kindref="member">Location</ref></type>
          <declname>a_loc</declname>
          <defval>Location::CellCenter</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="103" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="840" bodyend="845"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a9fc34296525a11800ab50257d4b5ecca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::compResidual</definition>
        <argsstring>(const Vector&lt; MF * &gt; &amp;a_res, const Vector&lt; MF * &gt; &amp;a_sol, const Vector&lt; MF const * &gt; &amp;a_rhs)</argsstring>
        <name>compResidual</name>
        <qualifiedname>amrex::MLMGT::compResidual</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF * &gt; &amp;</type>
          <declname>a_res</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF * &gt; &amp;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF const * &gt; &amp;</type>
          <declname>a_rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="107" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="876" bodyend="940"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a296e53b3033bf0ada803331e72243f84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::getEBFluxes</definition>
        <argsstring>(const Vector&lt; MF * &gt; &amp;a_eb_flux)</argsstring>
        <name>getEBFluxes</name>
        <qualifiedname>amrex::MLMGT::getEBFluxes</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF * &gt; &amp;</type>
          <declname>a_eb_flux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="112" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="850" bodyend="858"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a29ae7755072aa0b44374ac81482fdd6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::getEBFluxes</definition>
        <argsstring>(const Vector&lt; MF * &gt; &amp;a_eb_flux, const Vector&lt; MF * &gt; &amp;a_sol)</argsstring>
        <name>getEBFluxes</name>
        <qualifiedname>amrex::MLMGT::getEBFluxes</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF * &gt; &amp;</type>
          <declname>a_eb_flux</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF * &gt; &amp;</type>
          <declname>a_sol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="113" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="862" bodyend="871"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a4cd706acd1fbd898473f0a25bcc9e157" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::apply</definition>
        <argsstring>(const Vector&lt; MF * &gt; &amp;out, const Vector&lt; MF * &gt; &amp;in)</argsstring>
        <name>apply</name>
        <qualifiedname>amrex::MLMGT::apply</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF * &gt; &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF * &gt; &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para><computeroutput>out = L(in)</computeroutput>. Note that, if no actual solve is needed, one could turn off multigrid coarsening by constructing a MLLinOp object with an appropriate <ref refid="structamrex_1_1LPInfo" kindref="compound">LPInfo</ref> object (e.g., with LPInfo().setMaxCoarseningLevel(0)). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="121" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="944" bodyend="1016"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a42784c4f6f84efd9e8526472998b25e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::applyPrecond</definition>
        <argsstring>(const Vector&lt; MF * &gt; &amp;out, const Vector&lt; MF * &gt; &amp;in)</argsstring>
        <name>applyPrecond</name>
        <qualifiedname>amrex::MLMGT::applyPrecond</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF * &gt; &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF * &gt; &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>out = L(in) as a preconditioner </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="124" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1020" bodyend="1027"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1af7617800f54785a8c0564220da314386" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MLMGT&lt; MF &gt;::getVerbose</definition>
        <argsstring>() const</argsstring>
        <name>getVerbose</name>
        <qualifiedname>amrex::MLMGT::getVerbose</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="126" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a31bc2e0c4407c7e736cc80557f75f18c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MLMGT&lt; MF &gt;::getBottomVerbose</definition>
        <argsstring>() const</argsstring>
        <name>getBottomVerbose</name>
        <qualifiedname>amrex::MLMGT::getBottomVerbose</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="127" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a83122317b7e191ddd89f7681abe2c367" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::incPrintIdentation</definition>
        <argsstring>()</argsstring>
        <name>incPrintIdentation</name>
        <qualifiedname>amrex::MLMGT::incPrintIdentation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="129" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="2079" bodyend="2082"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a895ca1d5e3a1270a40173753f3d99718" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::decPrintIdentation</definition>
        <argsstring>()</argsstring>
        <name>decPrintIdentation</name>
        <qualifiedname>amrex::MLMGT::decPrintIdentation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="130" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="2086" bodyend="2093"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a891052eaf3fafd326e6509c4bb1996bf" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setThrowException</definition>
        <argsstring>(bool t) noexcept</argsstring>
        <name>setThrowException</name>
        <qualifiedname>amrex::MLMGT::setThrowException</qualifiedname>
        <param>
          <type>bool</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="132" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a583837639457c1be71a4293604fb461d" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setVerbose</definition>
        <argsstring>(int v) noexcept</argsstring>
        <name>setVerbose</name>
        <qualifiedname>amrex::MLMGT::setVerbose</qualifiedname>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="133" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1afee26760c3b6fd120a20bead9d849ce4" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setMaxIter</definition>
        <argsstring>(int n) noexcept</argsstring>
        <name>setMaxIter</name>
        <qualifiedname>amrex::MLMGT::setMaxIter</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="134" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a034852dcdb062a30ca616eb0363d202b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setMaxFmgIter</definition>
        <argsstring>(int n) noexcept</argsstring>
        <name>setMaxFmgIter</name>
        <qualifiedname>amrex::MLMGT::setMaxFmgIter</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="135" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a8d32d7e502abfe65f355e792f0fed5b7" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setFixedIter</definition>
        <argsstring>(int nit) noexcept</argsstring>
        <name>setFixedIter</name>
        <qualifiedname>amrex::MLMGT::setFixedIter</qualifiedname>
        <param>
          <type>int</type>
          <declname>nit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="136" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a9597732c3e19517dbe1decde03b52d3e" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setPrecondIter</definition>
        <argsstring>(int nit) noexcept</argsstring>
        <name>setPrecondIter</name>
        <qualifiedname>amrex::MLMGT::setPrecondIter</qualifiedname>
        <param>
          <type>int</type>
          <declname>nit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="137" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a198deef7be3c836a4e4262aeeb0d70ac" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setPreSmooth</definition>
        <argsstring>(int n) noexcept</argsstring>
        <name>setPreSmooth</name>
        <qualifiedname>amrex::MLMGT::setPreSmooth</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="139" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a6207d80df231723fb69683f66f5ce6d0" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setPostSmooth</definition>
        <argsstring>(int n) noexcept</argsstring>
        <name>setPostSmooth</name>
        <qualifiedname>amrex::MLMGT::setPostSmooth</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="140" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1af409e46e36a83708948f57964d56e788" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setFinalSmooth</definition>
        <argsstring>(int n) noexcept</argsstring>
        <name>setFinalSmooth</name>
        <qualifiedname>amrex::MLMGT::setFinalSmooth</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="141" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a2c1e8d8df826c5071a81e63e3aae54b4" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setBottomSmooth</definition>
        <argsstring>(int n) noexcept</argsstring>
        <name>setBottomSmooth</name>
        <qualifiedname>amrex::MLMGT::setBottomSmooth</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="142" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a781f8fc6334607f15d2ae45c1faeec50" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setBottomSolver</definition>
        <argsstring>(BottomSolver s) noexcept</argsstring>
        <name>setBottomSolver</name>
        <qualifiedname>amrex::MLMGT::setBottomSolver</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1a9303c93b47b7839de8ce552cb7cb21c4" kindref="member">BottomSolver</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="144" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a142897bafabd557f6c5494f66f35a11d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1a9303c93b47b7839de8ce552cb7cb21c4" kindref="member">BottomSolver</ref></type>
        <definition>BottomSolver amrex::MLMGT&lt; MF &gt;::getBottomSolver</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getBottomSolver</name>
        <qualifiedname>amrex::MLMGT::getBottomSolver</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="145" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a42792f43ae4cc1ee24acf959aa647958" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setCFStrategy</definition>
        <argsstring>(CFStrategy a_cf_strategy) noexcept</argsstring>
        <name>setCFStrategy</name>
        <qualifiedname>amrex::MLMGT::setCFStrategy</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a96d1fcb72314606739f67225750197b9" kindref="member">CFStrategy</ref></type>
          <declname>a_cf_strategy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="146" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a002d46a5b24423762455f90086333f4b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setBottomVerbose</definition>
        <argsstring>(int v) noexcept</argsstring>
        <name>setBottomVerbose</name>
        <qualifiedname>amrex::MLMGT::setBottomVerbose</qualifiedname>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="147" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1afc23f31b4eca82ba3272587a8a9998ed" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setBottomMaxIter</definition>
        <argsstring>(int n) noexcept</argsstring>
        <name>setBottomMaxIter</name>
        <qualifiedname>amrex::MLMGT::setBottomMaxIter</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="148" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1af18713081439d6261cb03153792cc0e8" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setBottomTolerance</definition>
        <argsstring>(RT t) noexcept</argsstring>
        <name>setBottomTolerance</name>
        <qualifiedname>amrex::MLMGT::setBottomTolerance</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="149" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a1de7f802d64a3237a66a9b4a1f24dfe2" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setBottomToleranceAbs</definition>
        <argsstring>(RT t) noexcept</argsstring>
        <name>setBottomToleranceAbs</name>
        <qualifiedname>amrex::MLMGT::setBottomToleranceAbs</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="150" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1acd32f871b18d6c9ae4437992ed20bd58" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
        <definition>RT amrex::MLMGT&lt; MF &gt;::getBottomToleranceAbs</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getBottomToleranceAbs</name>
        <qualifiedname>amrex::MLMGT::getBottomToleranceAbs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="151" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a9e64f7c34ec5abddc37f653b110a3230" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setAlwaysUseBNorm</definition>
        <argsstring>(int flag) noexcept</argsstring>
        <name>setAlwaysUseBNorm</name>
        <qualifiedname>amrex::MLMGT::setAlwaysUseBNorm</qualifiedname>
        <param>
          <type>int</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="154" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="370" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1ab189347dcd894dd1b9c117795cc3d673" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setConvergenceNormType</definition>
        <argsstring>(MLMGNormType norm) noexcept</argsstring>
        <name>setConvergenceNormType</name>
        <qualifiedname>amrex::MLMGT::setConvergenceNormType</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad6568bc5df052e827cc522b2c19fd663" kindref="member">MLMGNormType</ref></type>
          <declname>norm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="156" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1aaf653324d55081effa4617316f6fed7f" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setFinalFillBC</definition>
        <argsstring>(int flag) noexcept</argsstring>
        <name>setFinalFillBC</name>
        <qualifiedname>amrex::MLMGT::setFinalFillBC</qualifiedname>
        <param>
          <type>int</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="158" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1ad2c6df179eb4acd5061de72341881c63" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MLMGT&lt; MF &gt;::numAMRLevels</definition>
        <argsstring>() const noexcept</argsstring>
        <name>numAMRLevels</name>
        <qualifiedname>amrex::MLMGT::numAMRLevels</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="160" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a309402aeb490c7011bbdc724dfb20e98" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setNSolve</definition>
        <argsstring>(int flag) noexcept</argsstring>
        <name>setNSolve</name>
        <qualifiedname>amrex::MLMGT::setNSolve</qualifiedname>
        <param>
          <type>int</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="162" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a52db13d6134d518279dce357d082ed35" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setNSolveGridSize</definition>
        <argsstring>(int s) noexcept</argsstring>
        <name>setNSolveGridSize</name>
        <qualifiedname>amrex::MLMGT::setNSolveGridSize</qualifiedname>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="163" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="163" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a087ba1aceb4d78b45c30aa9d4630f501" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setNoGpuSync</definition>
        <argsstring>(bool do_not_sync) noexcept</argsstring>
        <name>setNoGpuSync</name>
        <qualifiedname>amrex::MLMGT::setNoGpuSync</qualifiedname>
        <param>
          <type>bool</type>
          <declname>do_not_sync</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="165" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a000e69affa33aed71511df8fa232aae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::prepareForFluxes</definition>
        <argsstring>(Vector&lt; MF const * &gt; const &amp;a_sol)</argsstring>
        <name>prepareForFluxes</name>
        <qualifiedname>amrex::MLMGT::prepareForFluxes</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF const * &gt; const &amp;</type>
          <declname>a_sol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="190" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="629" bodyend="635"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a99e382a66a897864e0c3b4dffe9e1cd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::prepareForSolve</definition>
        <argsstring>(Vector&lt; AMF * &gt; const &amp;a_sol, Vector&lt; AMF const * &gt; const &amp;a_rhs)</argsstring>
        <name>prepareForSolve</name>
        <qualifiedname>amrex::MLMGT::prepareForSolve</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; AMF * &gt; const &amp;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; AMF const * &gt; const &amp;</type>
          <declname>a_rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="193" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1032" bodyend="1214"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a69cb002038ef5460b92042d6921396b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::prepareForNSolve</definition>
        <argsstring>()</argsstring>
        <name>prepareForNSolve</name>
        <qualifiedname>amrex::MLMGT::prepareForNSolve</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="195" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1238" bodyend="1266"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a929a91b1f9969e79f186bb7a1a073f69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::prepareLinOp</definition>
        <argsstring>()</argsstring>
        <name>prepareLinOp</name>
        <qualifiedname>amrex::MLMGT::prepareLinOp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="197" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1218" bodyend="1226"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a7c3f95863bb66653095ba56ef61c3168" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::preparePrecond</definition>
        <argsstring>()</argsstring>
        <name>preparePrecond</name>
        <qualifiedname>amrex::MLMGT::preparePrecond</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="199" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1230" bodyend="1234"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1afe44c08a7965ecfe62b862e3d37ac7a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::oneIter</definition>
        <argsstring>(int iter)</argsstring>
        <name>oneIter</name>
        <qualifiedname>amrex::MLMGT::oneIter</qualifiedname>
        <param>
          <type>int</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="201" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1271" bodyend="1336"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1aa16032dd96f94f55d248e8aa34195f9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::miniCycle</definition>
        <argsstring>(int amrlev)</argsstring>
        <name>miniCycle</name>
        <qualifiedname>amrex::MLMGT::miniCycle</qualifiedname>
        <param>
          <type>int</type>
          <declname>amrlev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="203" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1340" bodyend="1345"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a66029bb749136c53cc6fabe82b6b2783" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::mgVcycle</definition>
        <argsstring>(int amrlev, int mglev)</argsstring>
        <name>mgVcycle</name>
        <qualifiedname>amrex::MLMGT::mgVcycle</qualifiedname>
        <param>
          <type>int</type>
          <declname>amrlev</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mglev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="205" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1351" bodyend="1450"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1adac59879a785f3b492262e29249a66ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::mgFcycle</definition>
        <argsstring>()</argsstring>
        <name>mgFcycle</name>
        <qualifiedname>amrex::MLMGT::mgFcycle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="206" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1457" bodyend="1502"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1ae5c3ce847717bf6243a9b7c70a1258a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::bottomSolve</definition>
        <argsstring>()</argsstring>
        <name>bottomSolve</name>
        <qualifiedname>amrex::MLMGT::bottomSolve</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="208" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1509" bodyend="1519"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a46bbc0ba9d09d6eaab3ee0cc47d4d0bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::NSolve</definition>
        <argsstring>(MLMGT&lt; MF &gt; &amp;a_solver, MF &amp;a_sol, MF &amp;a_rhs)</argsstring>
        <name>NSolve</name>
        <qualifiedname>amrex::MLMGT::NSolve</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MLMGT" kindref="compound">MLMGT</ref>&lt; MF &gt; &amp;</type>
          <declname>a_solver</declname>
        </param>
        <param>
          <type>MF &amp;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type>MF &amp;</type>
          <declname>a_rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="209" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1523" bodyend="1543"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a10dcbb8156201d800233f72c62831001" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::actualBottomSolve</definition>
        <argsstring>()</argsstring>
        <name>actualBottomSolve</name>
        <qualifiedname>amrex::MLMGT::actualBottomSolve</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="210" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1547" bodyend="1650"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a5b7fb7f96050d46f476ccc62a589cfa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::computeMLResidual</definition>
        <argsstring>(int amrlevmax)</argsstring>
        <name>computeMLResidual</name>
        <qualifiedname>amrex::MLMGT::computeMLResidual</qualifiedname>
        <param>
          <type>int</type>
          <declname>amrlevmax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="212" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1675" bodyend="1688"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1abcccae42defac8377364437d16cd915a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::computeResidual</definition>
        <argsstring>(int alev)</argsstring>
        <name>computeResidual</name>
        <qualifiedname>amrex::MLMGT::computeResidual</qualifiedname>
        <param>
          <type>int</type>
          <declname>alev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="213" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1693" bodyend="1698"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1ab428d998d9cc1bd88f4a9d1a2917525a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::computeResWithCrseSolFineCor</definition>
        <argsstring>(int calev, int falev)</argsstring>
        <name>computeResWithCrseSolFineCor</name>
        <qualifiedname>amrex::MLMGT::computeResWithCrseSolFineCor</qualifiedname>
        <param>
          <type>int</type>
          <declname>calev</declname>
        </param>
        <param>
          <type>int</type>
          <declname>falev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="214" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1703" bodyend="1731"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a45414e6ff0b751fb85a18c382cf259ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::computeResWithCrseCorFineCor</definition>
        <argsstring>(int falev)</argsstring>
        <name>computeResWithCrseCorFineCor</name>
        <qualifiedname>amrex::MLMGT::computeResWithCrseCorFineCor</qualifiedname>
        <param>
          <type>int</type>
          <declname>falev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="215" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1736" bodyend="1755"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a295166a3e3f2f9ec07aeffbb4a8a68ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::interpCorrection</definition>
        <argsstring>(int alev)</argsstring>
        <name>interpCorrection</name>
        <qualifiedname>amrex::MLMGT::interpCorrection</qualifiedname>
        <param>
          <type>int</type>
          <declname>alev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="216" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1760" bodyend="1788"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a13d1cb95e97a44a16843f44421cc86c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::interpCorrection</definition>
        <argsstring>(int alev, int mglev)</argsstring>
        <name>interpCorrection</name>
        <qualifiedname>amrex::MLMGT::interpCorrection</qualifiedname>
        <param>
          <type>int</type>
          <declname>alev</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mglev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="217" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1795" bodyend="1802"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1af61728546d90caca97bb2137611eacd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::addInterpCorrection</definition>
        <argsstring>(int alev, int mglev)</argsstring>
        <name>addInterpCorrection</name>
        <qualifiedname>amrex::MLMGT::addInterpCorrection</qualifiedname>
        <param>
          <type>int</type>
          <declname>alev</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mglev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="218" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1807" bodyend="1829"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a3d8b571d00886e320a12ceae0ff29b4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::computeResOfCorrection</definition>
        <argsstring>(int amrlev, int mglev)</argsstring>
        <name>computeResOfCorrection</name>
        <qualifiedname>amrex::MLMGT::computeResOfCorrection</qualifiedname>
        <param>
          <type>int</type>
          <declname>amrlev</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mglev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="220" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1837" bodyend="1844"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1adec5922c106684ff36cd96378f8c26fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
        <definition>auto amrex::MLMGT&lt; MF &gt;::ResNormInf</definition>
        <argsstring>(int alev, bool local=false)</argsstring>
        <name>ResNormInf</name>
        <qualifiedname>amrex::MLMGT::ResNormInf</qualifiedname>
        <param>
          <type>int</type>
          <declname>alev</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>local</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="222" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1849" bodyend="1853"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a0368b810b665e00fdb1490f57eb331e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
        <definition>auto amrex::MLMGT&lt; MF &gt;::MLResNormInf</definition>
        <argsstring>(int alevmax, bool local=false)</argsstring>
        <name>MLResNormInf</name>
        <qualifiedname>amrex::MLMGT::MLResNormInf</qualifiedname>
        <param>
          <type>int</type>
          <declname>alevmax</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>local</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="223" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1858" bodyend="1868"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a07d1120af993f9d9c95c3ab9d8ae7fb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
        <definition>auto amrex::MLMGT&lt; MF &gt;::MLRhsNormInf</definition>
        <argsstring>(bool local=false)</argsstring>
        <name>MLRhsNormInf</name>
        <qualifiedname>amrex::MLMGT::MLRhsNormInf</qualifiedname>
        <param>
          <type>bool</type>
          <declname>local</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="224" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1873" bodyend="1883"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a74aa5d200cbee55ce7f454618d2d1789" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::makeSolvable</definition>
        <argsstring>()</argsstring>
        <name>makeSolvable</name>
        <qualifiedname>amrex::MLMGT::makeSolvable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="226" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1887" bodyend="1899"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a6dc8cde9b0768dd1f82dbc0a658e76f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::makeSolvable</definition>
        <argsstring>(int amrlev, int mglev, MF &amp;mf)</argsstring>
        <name>makeSolvable</name>
        <qualifiedname>amrex::MLMGT::makeSolvable</qualifiedname>
        <param>
          <type>int</type>
          <declname>amrlev</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mglev</declname>
        </param>
        <param>
          <type>MF &amp;</type>
          <declname>mf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="227" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1903" bodyend="1914"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a9b38691fee0244ab9dbdfa1878db8a86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MLMGT&lt; MF &gt;::bottomSolveWithCG</definition>
        <argsstring>(MF &amp;x, const MF &amp;b, typename MLCGSolverT&lt; MF &gt;::Type type)</argsstring>
        <name>bottomSolveWithCG</name>
        <qualifiedname>amrex::MLMGT::bottomSolveWithCG</qualifiedname>
        <param>
          <type>MF &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const MF &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>typename <ref refid="classamrex_1_1MLCGSolverT" kindref="compound">MLCGSolverT</ref>&lt; MF &gt;::Type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="239" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1654" bodyend="1670"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1adcbc9d3987820fcf8769b0aa62eb96b7" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
        <definition>RT amrex::MLMGT&lt; MF &gt;::getInitRHS</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getInitRHS</name>
        <qualifiedname>amrex::MLMGT::getInitRHS</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="241" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="241" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a612f7c8a01b41fa882b5fb1f579c4a6c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
        <definition>RT amrex::MLMGT&lt; MF &gt;::getInitResidual</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getInitResidual</name>
        <qualifiedname>amrex::MLMGT::getInitResidual</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="243" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="243" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a2182dcd20e03f121861e68056f9e4022" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
        <definition>RT amrex::MLMGT&lt; MF &gt;::getFinalResidual</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getFinalResidual</name>
        <qualifiedname>amrex::MLMGT::getFinalResidual</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="245" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="245" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a926ceb16bf58ce1540a77bb7fd9de611" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref> &gt; const &amp;</type>
        <definition>Vector&lt; RT &gt; const  &amp; amrex::MLMGT&lt; MF &gt;::getResidualHistory</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getResidualHistory</name>
        <qualifiedname>amrex::MLMGT::getResidualHistory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="247" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="247" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a61fe6fb0ec89735cd73871cfb53a25b9" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MLMGT&lt; MF &gt;::getNumIters</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getNumIters</name>
        <qualifiedname>amrex::MLMGT::getNumIters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="248" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="248" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1adf5bd6df2827e91ba1a35eae24b18c59" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; int &gt; const &amp;</type>
        <definition>Vector&lt; int &gt; const  &amp; amrex::MLMGT&lt; MF &gt;::getNumCGIters</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getNumCGIters</name>
        <qualifiedname>amrex::MLMGT::getNumCGIters</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="249" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="249" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1ac03ea0f6a0c0f5906ae89f8957257d6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLLinOpT" kindref="compound">MLLinOpT</ref>&lt; MF &gt; &amp;</type>
        <definition>MLLinOpT&lt; MF &gt; &amp; amrex::MLMGT&lt; MF &gt;::getLinOp</definition>
        <argsstring>()</argsstring>
        <name>getLinOp</name>
        <qualifiedname>amrex::MLMGT::getLinOp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="251" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="251" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1acbdb042ef433f3067ffd57ec67f64612" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto amrex::MLMGT&lt; MF &gt;::solve</definition>
        <argsstring>(std::initializer_list&lt; AMF * &gt; a_sol, std::initializer_list&lt; AMF const * &gt; a_rhs, RT a_tol_rel, RT a_tol_abs, const char *checkpoint_file) -&gt; RT</argsstring>
        <name>solve</name>
        <qualifiedname>amrex::MLMGT::solve</qualifiedname>
        <param>
          <type>std::initializer_list&lt; AMF * &gt;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type>std::initializer_list&lt; AMF const * &gt;</type>
          <declname>a_rhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
          <declname>a_tol_rel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
          <declname>a_tol_abs</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>checkpoint_file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="382" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="382" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a6736230495796a2feeaa3aae95dd7abb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto amrex::MLMGT&lt; MF &gt;::solve</definition>
        <argsstring>(const Vector&lt; AMF * &gt; &amp;a_sol, const Vector&lt; AMF const * &gt; &amp;a_rhs, RT a_tol_rel, RT a_tol_abs, const char *checkpoint_file) -&gt; RT</argsstring>
        <name>solve</name>
        <qualifiedname>amrex::MLMGT::solve</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; AMF * &gt; &amp;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; AMF const * &gt; &amp;</type>
          <declname>a_rhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
          <declname>a_tol_rel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
          <declname>a_tol_abs</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>checkpoint_file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="394" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="394" bodyend="607"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a17d56a0f530866c212972918e49a9aff" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::checkPoint</definition>
        <argsstring>(const Vector&lt; MultiFab * &gt; &amp;a_sol, const Vector&lt; MultiFab const * &gt; &amp;a_rhs, RT a_tol_rel, RT a_tol_abs, const char *a_file_name) const</argsstring>
        <name>checkPoint</name>
        <qualifiedname>amrex::MLMGT::checkPoint</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> * &gt; &amp;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> const * &gt; &amp;</type>
          <declname>a_rhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
          <declname>a_tol_rel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">RT</ref></type>
          <declname>a_tol_abs</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>a_file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="354" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="2020" bodyend="2075"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="9">
        <label>T</label>
      </node>
      <node id="7">
        <label>amrex::Vector&lt; MF &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>amrex::Vector&lt; RT &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>amrex::Vector&lt; amrex::Vector&lt; MF &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>amrex::Vector&lt; double &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>amrex::MLMGT&lt; MF &gt;</label>
        <link refid="classamrex_1_1MLMGT"/>
        <childnode refid="2" relation="usage">
          <edgelabel>ns_linop</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>ns_mlmg</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>ns_rhs</edgelabel>
          <edgelabel>ns_sol</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>print_ident</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>rhs</edgelabel>
          <edgelabel>sol</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_niters_cg</edgelabel>
          <edgelabel>sol_is_alias</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>cor</edgelabel>
          <edgelabel>cor_hold</edgelabel>
          <edgelabel>res</edgelabel>
          <edgelabel>rescor</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>timer</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>m_iter_fine_resnorm0</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="5">
        <label>std::string</label>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::unique_ptr&lt; MF &gt;</label>
      </node>
      <node id="2">
        <label>std::unique_ptr&lt; amrex::MLLinOpT&lt; MF &gt; &gt;</label>
      </node>
      <node id="3">
        <label>std::unique_ptr&lt; amrex::MLMGT&lt; MF &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="15" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="16" bodyend="358"/>
    <listofallmembers>
      <member refid="classamrex_1_1MLMGT_1a10dcbb8156201d800233f72c62831001" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>actualBottomSolve</name></member>
      <member refid="classamrex_1_1MLMGT_1af61728546d90caca97bb2137611eacd7" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>addInterpCorrection</name></member>
      <member refid="classamrex_1_1MLMGT_1a4cd706acd1fbd898473f0a25bcc9e157" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>apply</name></member>
      <member refid="classamrex_1_1MLMGT_1a42784c4f6f84efd9e8526472998b25e6" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>applyPrecond</name></member>
      <member refid="classamrex_1_1MLMGT_1ab0aa1d27d42faff94c85af0b3a9a3b39" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>BCMode</name></member>
      <member refid="classamrex_1_1MLMGT_1ad3062efc6b4f6fb5bca0d154082251bc" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>bottom_abstol</name></member>
      <member refid="classamrex_1_1MLMGT_1aa25c4bc7039d79991c9347812e392042" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>bottom_maxiter</name></member>
      <member refid="classamrex_1_1MLMGT_1aa8cd739b09d30ecf7e853c350fd2abd1" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>bottom_reltol</name></member>
      <member refid="classamrex_1_1MLMGT_1a6413a66e0cb6393a0cf6530375797fb1" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>bottom_solver</name></member>
      <member refid="classamrex_1_1MLMGT_1ac3f33b5865628fb4fbb9e39b278358fda4c32e616cb27e5785c48749118234b63" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>bottom_time</name></member>
      <member refid="classamrex_1_1MLMGT_1a14fa88e22141330833bda28beaef068c" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>bottom_verbose</name></member>
      <member refid="classamrex_1_1MLMGT_1ae5c3ce847717bf6243a9b7c70a1258a6" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>bottomSolve</name></member>
      <member refid="classamrex_1_1MLMGT_1a970cecc8fdf04c68cd458e27d20b1708" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>BottomSolver</name></member>
      <member refid="classamrex_1_1MLMGT_1a9b38691fee0244ab9dbdfa1878db8a86" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>bottomSolveWithCG</name></member>
      <member refid="classamrex_1_1MLMGT_1ac73351c2c2371e9849ff1be7d033a657" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>cf_strategy</name></member>
      <member refid="classamrex_1_1MLMGT_1a96d1fcb72314606739f67225750197b9" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>CFStrategy</name></member>
      <member refid="classamrex_1_1MLMGT_1a17d56a0f530866c212972918e49a9aff" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>checkPoint</name></member>
      <member refid="classamrex_1_1MLMGT_1a9fc34296525a11800ab50257d4b5ecca" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>compResidual</name></member>
      <member refid="classamrex_1_1MLMGT_1a5b7fb7f96050d46f476ccc62a589cfa3" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>computeMLResidual</name></member>
      <member refid="classamrex_1_1MLMGT_1abcccae42defac8377364437d16cd915a" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>computeResidual</name></member>
      <member refid="classamrex_1_1MLMGT_1a3d8b571d00886e320a12ceae0ff29b4a" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>computeResOfCorrection</name></member>
      <member refid="classamrex_1_1MLMGT_1a45414e6ff0b751fb85a18c382cf259ab" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>computeResWithCrseCorFineCor</name></member>
      <member refid="classamrex_1_1MLMGT_1ab428d998d9cc1bd88f4a9d1a2917525a" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>computeResWithCrseSolFineCor</name></member>
      <member refid="classamrex_1_1MLMGT_1a1fd0a5173e6ff6c961c080b26f7755ac" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>cor</name></member>
      <member refid="classamrex_1_1MLMGT_1a3b1cfa8f63985ace0f94e581ea709366" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>cor_hold</name></member>
      <member refid="classamrex_1_1MLMGT_1a895ca1d5e3a1270a40173753f3d99718" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>decPrintIdentation</name></member>
      <member refid="classamrex_1_1MLMGT_1a8862750ef456314cfb8dc970b37444af" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>do_fixed_number_of_iters</name></member>
      <member refid="classamrex_1_1MLMGT_1a54b6729d05391f8020912eb72a6db6b2" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>do_no_sync_gpu</name></member>
      <member refid="classamrex_1_1MLMGT_1a262150be12f270d4328ceff545f0afd6" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>do_nsolve</name></member>
      <member refid="classamrex_1_1MLMGT_1ac98bb20aa53afac0cac33e9788913474" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>FAB</name></member>
      <member refid="classamrex_1_1MLMGT_1a2e4658b153dbf32716f539161d0b879e" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>final_fill_bc</name></member>
      <member refid="classamrex_1_1MLMGT_1a8dcbe08a11647df4d03789590bdc1de0" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>finest_amr_lev</name></member>
      <member refid="classamrex_1_1MLMGT_1a142897bafabd557f6c5494f66f35a11d" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getBottomSolver</name></member>
      <member refid="classamrex_1_1MLMGT_1acd32f871b18d6c9ae4437992ed20bd58" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getBottomToleranceAbs</name></member>
      <member refid="classamrex_1_1MLMGT_1a31bc2e0c4407c7e736cc80557f75f18c" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getBottomVerbose</name></member>
      <member refid="classamrex_1_1MLMGT_1a296e53b3033bf0ada803331e72243f84" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getEBFluxes</name></member>
      <member refid="classamrex_1_1MLMGT_1a29ae7755072aa0b44374ac81482fdd6c" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getEBFluxes</name></member>
      <member refid="classamrex_1_1MLMGT_1a2182dcd20e03f121861e68056f9e4022" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getFinalResidual</name></member>
      <member refid="classamrex_1_1MLMGT_1a4ec161dc63b34027d1ae6ac808a25693" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getFluxes</name></member>
      <member refid="classamrex_1_1MLMGT_1ad89a6f9e1220fae983b3b7e1895a15b0" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getFluxes</name></member>
      <member refid="classamrex_1_1MLMGT_1a48794b93ceab4d2b2bec45f7cef09a49" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getFluxes</name></member>
      <member refid="classamrex_1_1MLMGT_1a711bf15b6d1b9c7424cdf2abf71bd3c8" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getFluxes</name></member>
      <member refid="classamrex_1_1MLMGT_1a1cbdf2732ca933bb86971cfcc8afde7c" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getFluxes</name></member>
      <member refid="classamrex_1_1MLMGT_1ac2c1ddd3a1e83b1574a4336c89b3eff1" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getFluxes</name></member>
      <member refid="classamrex_1_1MLMGT_1aad3f73457b5e489d333b8c5506ae629c" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getFluxes</name></member>
      <member refid="classamrex_1_1MLMGT_1afbd2eac545d410ca5268cdbbad6332aa" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getFluxes</name></member>
      <member refid="classamrex_1_1MLMGT_1a2b926e1ead33b4de0b4ec53d22d135ee" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getGradSolution</name></member>
      <member refid="classamrex_1_1MLMGT_1a9be0af00a2af3201615498edec830c12" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getGradSolution</name></member>
      <member refid="classamrex_1_1MLMGT_1a612f7c8a01b41fa882b5fb1f579c4a6c" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getInitResidual</name></member>
      <member refid="classamrex_1_1MLMGT_1adcbc9d3987820fcf8769b0aa62eb96b7" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getInitRHS</name></member>
      <member refid="classamrex_1_1MLMGT_1ac03ea0f6a0c0f5906ae89f8957257d6b" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getLinOp</name></member>
      <member refid="classamrex_1_1MLMGT_1adf5bd6df2827e91ba1a35eae24b18c59" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getNumCGIters</name></member>
      <member refid="classamrex_1_1MLMGT_1a61fe6fb0ec89735cd73871cfb53a25b9" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getNumIters</name></member>
      <member refid="classamrex_1_1MLMGT_1a926ceb16bf58ce1540a77bb7fd9de611" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getResidualHistory</name></member>
      <member refid="classamrex_1_1MLMGT_1af7617800f54785a8c0564220da314386" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getVerbose</name></member>
      <member refid="classamrex_1_1MLMGT_1a2b2614ccc7faa12ee28a1428f5cd03d0" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>GMRESMLMGT</name></member>
      <member refid="classamrex_1_1MLMGT_1a83122317b7e191ddd89f7681abe2c367" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>incPrintIdentation</name></member>
      <member refid="classamrex_1_1MLMGT_1a295166a3e3f2f9ec07aeffbb4a8a68ed" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>interpCorrection</name></member>
      <member refid="classamrex_1_1MLMGT_1a13d1cb95e97a44a16843f44421cc86c5" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>interpCorrection</name></member>
      <member refid="classamrex_1_1MLMGT_1ac3f33b5865628fb4fbb9e39b278358fdaf269540ff581645f82a93c665a8a7b2b" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>iter_time</name></member>
      <member refid="classamrex_1_1MLMGT_1a667e1a5701d1f0c19a5950f0aa44080f" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>linop</name></member>
      <member refid="classamrex_1_1MLMGT_1a1443859ff59e201d7bbdf0cc0971251d" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>linop_prepared</name></member>
      <member refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>Location</name></member>
      <member refid="classamrex_1_1MLMGT_1a4c8f06d157691aac2a25008ab4d7726f" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>m_final_resnorm0</name></member>
      <member refid="classamrex_1_1MLMGT_1af6339494ac0686d76870dfad3febbea1" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>m_init_resnorm0</name></member>
      <member refid="classamrex_1_1MLMGT_1a5d0dc2ebd750fd37b790b56fe2339d15" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>m_iter_fine_resnorm0</name></member>
      <member refid="classamrex_1_1MLMGT_1ad44bb368a47f6e10513f541a1047d18c" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>m_niters_cg</name></member>
      <member refid="classamrex_1_1MLMGT_1a94b67005dca34f78005f42da6f7b3f04" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>m_rhsnorm0</name></member>
      <member refid="classamrex_1_1MLMGT_1a74aa5d200cbee55ce7f454618d2d1789" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>makeSolvable</name></member>
      <member refid="classamrex_1_1MLMGT_1a6dc8cde9b0768dd1f82dbc0a658e76f4" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>makeSolvable</name></member>
      <member refid="classamrex_1_1MLMGT_1a7322aabb50f001b012c53ab44f18925b" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>max_fmg_iters</name></member>
      <member refid="classamrex_1_1MLMGT_1a8667c250440fcb20ee43b4d9ee2b2108" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>max_iters</name></member>
      <member refid="classamrex_1_1MLMGT_1ae0f861e431eac6f2a71511900db05d03" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>max_precond_iters</name></member>
      <member refid="classamrex_1_1MLMGT_1a12ae4c265af099934e18adc0ba18f99f" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>MFType</name></member>
      <member refid="classamrex_1_1MLMGT_1adac59879a785f3b492262e29249a66ae" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>mgFcycle</name></member>
      <member refid="classamrex_1_1MLMGT_1a66029bb749136c53cc6fabe82b6b2783" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>mgVcycle</name></member>
      <member refid="classamrex_1_1MLMGT_1aa16032dd96f94f55d248e8aa34195f9c" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>miniCycle</name></member>
      <member refid="classamrex_1_1MLMGT_1a7d74bb864e0e5e676d689302876b3da3" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>MLCGSolverT</name></member>
      <member refid="classamrex_1_1MLMGT_1abc418dda3f523d9f0ce2ad15871dc48b" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>MLMGT</name></member>
      <member refid="classamrex_1_1MLMGT_1ad45721019c8bf7a76442471a174e55d6" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>MLMGT</name></member>
      <member refid="classamrex_1_1MLMGT_1a0a2acaa575273f909062d401f4ea8c2e" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>MLMGT</name></member>
      <member refid="classamrex_1_1MLMGT_1a0368b810b665e00fdb1490f57eb331e0" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>MLResNormInf</name></member>
      <member refid="classamrex_1_1MLMGT_1a07d1120af993f9d9c95c3ab9d8ae7fb2" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>MLRhsNormInf</name></member>
      <member refid="classamrex_1_1MLMGT_1a7bde0570493aad3733687a04abf4520e" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>namrlevs</name></member>
      <member refid="classamrex_1_1MLMGT_1a67a474e9e00d6fe9f40b4d67f28a355c" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>ncomp</name></member>
      <member refid="classamrex_1_1MLMGT_1a2ead5fab19529a9b2792efa7227b039d" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>norm_type</name></member>
      <member refid="classamrex_1_1MLMGT_1af44095217d5bbcda0aac7c890c7711f5" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>ns_linop</name></member>
      <member refid="classamrex_1_1MLMGT_1a9c8ed13672004a913f805ebe0f444073" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>ns_mlmg</name></member>
      <member refid="classamrex_1_1MLMGT_1ac05ab8b48ded9d649049e4520b00625b" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>ns_rhs</name></member>
      <member refid="classamrex_1_1MLMGT_1a35c1adc57fbe1db211aac6fae5f5517b" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>ns_sol</name></member>
      <member refid="classamrex_1_1MLMGT_1a46bbc0ba9d09d6eaab3ee0cc47d4d0bb" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>NSolve</name></member>
      <member refid="classamrex_1_1MLMGT_1ab7616bcecdedc6719ce8bd7d85b44f64" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>nsolve_grid_size</name></member>
      <member refid="classamrex_1_1MLMGT_1ac3f33b5865628fb4fbb9e39b278358fda24039153a091a3526d8f692a1ae67709" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>ntimers</name></member>
      <member refid="classamrex_1_1MLMGT_1a58dfdb82f14a306e71cf3897acaa6f92" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>nu1</name></member>
      <member refid="classamrex_1_1MLMGT_1adf6e938df981049c8e34ee53d3c21d05" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>nu2</name></member>
      <member refid="classamrex_1_1MLMGT_1a7caf8d1d49732307624d42da5ac3cb83" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>nub</name></member>
      <member refid="classamrex_1_1MLMGT_1a535eff64ede17a0c410f80f26de70a3d" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>nuf</name></member>
      <member refid="classamrex_1_1MLMGT_1ad2c6df179eb4acd5061de72341881c63" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>numAMRLevels</name></member>
      <member refid="classamrex_1_1MLMGT_1afe44c08a7965ecfe62b862e3d37ac7a0" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>oneIter</name></member>
      <member refid="classamrex_1_1MLMGT_1ab607afcaf29c3b047c948fc960347263" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>operator=</name></member>
      <member refid="classamrex_1_1MLMGT_1acdee41bf8a36fd8778dece165297d602" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>operator=</name></member>
      <member refid="classamrex_1_1MLMGT_1a6b05f94f28f81d3fbaf8b88e105ff5ec" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>precond</name></member>
      <member refid="classamrex_1_1MLMGT_1a2f6e60e2724e1ecdb0d7b8b238d02cd9" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>precond_mode</name></member>
      <member refid="classamrex_1_1MLMGT_1a000e69affa33aed71511df8fa232aae2" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>prepareForFluxes</name></member>
      <member refid="classamrex_1_1MLMGT_1a69cb002038ef5460b92042d6921396b1" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>prepareForNSolve</name></member>
      <member refid="classamrex_1_1MLMGT_1a99e382a66a897864e0c3b4dffe9e1cd9" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>prepareForSolve</name></member>
      <member refid="classamrex_1_1MLMGT_1a929a91b1f9969e79f186bb7a1a073f69" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>prepareLinOp</name></member>
      <member refid="classamrex_1_1MLMGT_1a7c3f95863bb66653095ba56ef61c3168" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>preparePrecond</name></member>
      <member refid="classamrex_1_1MLMGT_1a378e9b27b218cd52236bd6cefc3109ee" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>print_ident</name></member>
      <member refid="classamrex_1_1MLMGT_1aa9aa3ad9d9090afb4ab278c9c8c2287f" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>res</name></member>
      <member refid="classamrex_1_1MLMGT_1a1236e0879a5fe5bf4f2ec5669cee7d59" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>rescor</name></member>
      <member refid="classamrex_1_1MLMGT_1adec5922c106684ff36cd96378f8c26fa" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>ResNormInf</name></member>
      <member refid="classamrex_1_1MLMGT_1a4e3f5047925ba3d77f1c7284011ebc91" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>rhs</name></member>
      <member refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>RT</name></member>
      <member refid="classamrex_1_1MLMGT_1a9e64f7c34ec5abddc37f653b110a3230" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setAlwaysUseBNorm</name></member>
      <member refid="classamrex_1_1MLMGT_1afc23f31b4eca82ba3272587a8a9998ed" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setBottomMaxIter</name></member>
      <member refid="classamrex_1_1MLMGT_1a2c1e8d8df826c5071a81e63e3aae54b4" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setBottomSmooth</name></member>
      <member refid="classamrex_1_1MLMGT_1a781f8fc6334607f15d2ae45c1faeec50" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setBottomSolver</name></member>
      <member refid="classamrex_1_1MLMGT_1af18713081439d6261cb03153792cc0e8" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setBottomTolerance</name></member>
      <member refid="classamrex_1_1MLMGT_1a1de7f802d64a3237a66a9b4a1f24dfe2" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setBottomToleranceAbs</name></member>
      <member refid="classamrex_1_1MLMGT_1a002d46a5b24423762455f90086333f4b" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setBottomVerbose</name></member>
      <member refid="classamrex_1_1MLMGT_1a42792f43ae4cc1ee24acf959aa647958" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setCFStrategy</name></member>
      <member refid="classamrex_1_1MLMGT_1ab189347dcd894dd1b9c117795cc3d673" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setConvergenceNormType</name></member>
      <member refid="classamrex_1_1MLMGT_1aaf653324d55081effa4617316f6fed7f" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setFinalFillBC</name></member>
      <member refid="classamrex_1_1MLMGT_1af409e46e36a83708948f57964d56e788" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setFinalSmooth</name></member>
      <member refid="classamrex_1_1MLMGT_1a8d32d7e502abfe65f355e792f0fed5b7" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setFixedIter</name></member>
      <member refid="classamrex_1_1MLMGT_1a034852dcdb062a30ca616eb0363d202b" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setMaxFmgIter</name></member>
      <member refid="classamrex_1_1MLMGT_1afee26760c3b6fd120a20bead9d849ce4" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setMaxIter</name></member>
      <member refid="classamrex_1_1MLMGT_1a087ba1aceb4d78b45c30aa9d4630f501" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setNoGpuSync</name></member>
      <member refid="classamrex_1_1MLMGT_1a309402aeb490c7011bbdc724dfb20e98" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setNSolve</name></member>
      <member refid="classamrex_1_1MLMGT_1a52db13d6134d518279dce357d082ed35" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setNSolveGridSize</name></member>
      <member refid="classamrex_1_1MLMGT_1a6207d80df231723fb69683f66f5ce6d0" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setPostSmooth</name></member>
      <member refid="classamrex_1_1MLMGT_1a9597732c3e19517dbe1decde03b52d3e" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setPrecondIter</name></member>
      <member refid="classamrex_1_1MLMGT_1a198deef7be3c836a4e4262aeeb0d70ac" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setPreSmooth</name></member>
      <member refid="classamrex_1_1MLMGT_1a891052eaf3fafd326e6509c4bb1996bf" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setThrowException</name></member>
      <member refid="classamrex_1_1MLMGT_1a583837639457c1be71a4293604fb461d" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setVerbose</name></member>
      <member refid="classamrex_1_1MLMGT_1ab6f5f94d1d7ce12cb556b0cab630f5af" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>sol</name></member>
      <member refid="classamrex_1_1MLMGT_1acb90259a394dcc6252806b5a533ec9fc" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>sol_is_alias</name></member>
      <member refid="classamrex_1_1MLMGT_1afa3e2aa5b90524633ea96626119fe9ab" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>solve</name></member>
      <member refid="classamrex_1_1MLMGT_1aa1b2f0a4a7b72759d11799a3a9d49390" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>solve</name></member>
      <member refid="classamrex_1_1MLMGT_1acbdb042ef433f3067ffd57ec67f64612" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>solve</name></member>
      <member refid="classamrex_1_1MLMGT_1a6736230495796a2feeaa3aae95dd7abb" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>solve</name></member>
      <member refid="classamrex_1_1MLMGT_1a2b20154bea5f4c9076bc6d50529a44b2" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>solve_called</name></member>
      <member refid="classamrex_1_1MLMGT_1ac3f33b5865628fb4fbb9e39b278358fdafe6893b283399428e6511e5ce0780e7c" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>solve_time</name></member>
      <member refid="classamrex_1_1MLMGT_1aa5a72eccc4e6ab6e6b2ac7dcfdd2ce7f" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>throw_exception</name></member>
      <member refid="classamrex_1_1MLMGT_1adb7400b1c29d0f33ed67e2a81702ed8a" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>timer</name></member>
      <member refid="classamrex_1_1MLMGT_1ac3f33b5865628fb4fbb9e39b278358fd" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>timer_types</name></member>
      <member refid="classamrex_1_1MLMGT_1abc5cadb87add794dca040e5cebff0fe2" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>verbose</name></member>
      <member refid="classamrex_1_1MLMGT_1a33d9c9f2a6560267a6b9b78232702b92" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>~MLMGT</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
