<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1MLMGT" kind="class" language="C++" prot="public">
    <compoundname>amrex::MLMGT</compoundname>
    <includes refid="AMReX__MLMG_8H" local="no">AMReX_MLMG.H</includes>
    <templateparamlist>
      <param>
        <type>typename MF</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classamrex_1_1MLMGT_1a96d1fcb72314606739f67225750197b9" prot="public" static="no" strong="yes">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <name>CFStrategy</name>
        <enumvalue id="classamrex_1_1MLMGT_1a96d1fcb72314606739f67225750197b9a334c4a4c42fdb79d7ebc3e73b517e6f8" prot="public">
          <name>none</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classamrex_1_1MLMGT_1a96d1fcb72314606739f67225750197b9abddf1f772a4b8a67379933a3664a17c2" prot="public">
          <name>ghostnodes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="24" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1MLMGT_1ab107b2d2cb0c6a491b20f55a0c820848" prot="public" static="no">
        <type>typename MF::fab_type</type>
        <definition>using amrex::MLMGT&lt; MF &gt;::FAB =  typename MF::fab_type</definition>
        <argsstring></argsstring>
        <name>FAB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="17" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" prot="public" static="no">
        <type>typename MF::value_type</type>
        <definition>using amrex::MLMGT&lt; MF &gt;::RT =  typename MF::value_type</definition>
        <argsstring></argsstring>
        <name>RT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="18" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1MLMGT_1ab0aa1d27d42faff94c85af0b3a9a3b39" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1MLLinOpT" kindref="compound">MLLinOpT</ref>&lt; MF &gt;::<ref refid="classamrex_1_1MLMGT_1ab0aa1d27d42faff94c85af0b3a9a3b39" kindref="member">BCMode</ref></type>
        <definition>using amrex::MLMGT&lt; MF &gt;::BCMode =  typename MLLinOpT&lt;MF&gt;::BCMode</definition>
        <argsstring></argsstring>
        <name>BCMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="20" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1MLLinOpT" kindref="compound">MLLinOpT</ref>&lt; MF &gt;::<ref refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" kindref="member">Location</ref></type>
        <definition>using amrex::MLMGT&lt; MF &gt;::Location =  typename MLLinOpT&lt;MF&gt;::Location</definition>
        <argsstring></argsstring>
        <name>Location</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="21" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1MLMGT_1a970cecc8fdf04c68cd458e27d20b1708" prot="public" static="no">
        <type><ref refid="namespaceamrex_1a9303c93b47b7839de8ce552cb7cb21c4" kindref="member">amrex::BottomSolver</ref></type>
        <definition>using amrex::MLMGT&lt; MF &gt;::BottomSolver =  amrex::BottomSolver</definition>
        <argsstring></argsstring>
        <name>BottomSolver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="23" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classamrex_1_1MLMGT_1ac3f33b5865628fb4fbb9e39b278358fd" prot="private" static="no" strong="no">
        <type></type>
        <name>timer_types</name>
        <enumvalue id="classamrex_1_1MLMGT_1ac3f33b5865628fb4fbb9e39b278358fdafe6893b283399428e6511e5ce0780e7c" prot="private">
          <name>solve_time</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classamrex_1_1MLMGT_1ac3f33b5865628fb4fbb9e39b278358fdaf269540ff581645f82a93c665a8a7b2b" prot="private">
          <name>iter_time</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classamrex_1_1MLMGT_1ac3f33b5865628fb4fbb9e39b278358fda4c32e616cb27e5785c48749118234b63" prot="private">
          <name>bottom_time</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classamrex_1_1MLMGT_1ac3f33b5865628fb4fbb9e39b278358fda24039153a091a3526d8f692a1ae67709" prot="private">
          <name>ntimers</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="289" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="289" bodyend="289"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classamrex_1_1MLMGT_1a7d74bb864e0e5e676d689302876b3da3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class MLCGSolverT</definition>
        <argsstring></argsstring>
        <name>MLCGSolverT</name>
        <param>
          <type><ref refid="classamrex_1_1MLCGSolverT" kindref="compound">MLCGSolverT</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="15" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1abc5cadb87add794dca040e5cebff0fe2" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLMGT&lt; MF &gt;::verbose</definition>
        <argsstring></argsstring>
        <name>verbose</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="207" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a8667c250440fcb20ee43b4d9ee2b2108" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLMGT&lt; MF &gt;::max_iters</definition>
        <argsstring></argsstring>
        <name>max_iters</name>
        <initializer>= 200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="208" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a8862750ef456314cfb8dc970b37444af" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLMGT&lt; MF &gt;::do_fixed_number_of_iters</definition>
        <argsstring></argsstring>
        <name>do_fixed_number_of_iters</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="209" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a58dfdb82f14a306e71cf3897acaa6f92" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLMGT&lt; MF &gt;::nu1</definition>
        <argsstring></argsstring>
        <name>nu1</name>
        <initializer>= 2</initializer>
        <briefdescription>
<para>pre </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="211" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1adf6e938df981049c8e34ee53d3c21d05" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLMGT&lt; MF &gt;::nu2</definition>
        <argsstring></argsstring>
        <name>nu2</name>
        <initializer>= 2</initializer>
        <briefdescription>
<para>post </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="212" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a535eff64ede17a0c410f80f26de70a3d" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLMGT&lt; MF &gt;::nuf</definition>
        <argsstring></argsstring>
        <name>nuf</name>
        <initializer>= 8</initializer>
        <briefdescription>
<para>when smoother is used as bottom solver </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="213" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a7caf8d1d49732307624d42da5ac3cb83" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLMGT&lt; MF &gt;::nub</definition>
        <argsstring></argsstring>
        <name>nub</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>additional smoothing after bottom cg solver </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="214" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a7322aabb50f001b012c53ab44f18925b" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLMGT&lt; MF &gt;::max_fmg_iters</definition>
        <argsstring></argsstring>
        <name>max_fmg_iters</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="216" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a6413a66e0cb6393a0cf6530375797fb1" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a9303c93b47b7839de8ce552cb7cb21c4" kindref="member">BottomSolver</ref></type>
        <definition>BottomSolver amrex::MLMGT&lt; MF &gt;::bottom_solver</definition>
        <argsstring></argsstring>
        <name>bottom_solver</name>
        <initializer>= <ref refid="namespaceamrex_1a9303c93b47b7839de8ce552cb7cb21c4a7a1920d61156abc05a60135aefe8bc67" kindref="member">BottomSolver::Default</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="218" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1ac73351c2c2371e9849ff1be7d033a657" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLMGT_1a96d1fcb72314606739f67225750197b9" kindref="member">CFStrategy</ref></type>
        <definition>CFStrategy amrex::MLMGT&lt; MF &gt;::cf_strategy</definition>
        <argsstring></argsstring>
        <name>cf_strategy</name>
        <initializer>= <ref refid="classamrex_1_1MLMGT_1a96d1fcb72314606739f67225750197b9a334c4a4c42fdb79d7ebc3e73b517e6f8" kindref="member">CFStrategy::none</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="219" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a14fa88e22141330833bda28beaef068c" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLMGT&lt; MF &gt;::bottom_verbose</definition>
        <argsstring></argsstring>
        <name>bottom_verbose</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="220" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1aa25c4bc7039d79991c9347812e392042" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLMGT&lt; MF &gt;::bottom_maxiter</definition>
        <argsstring></argsstring>
        <name>bottom_maxiter</name>
        <initializer>= 200</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="221" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1aa8cd739b09d30ecf7e853c350fd2abd1" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
        <definition>RT amrex::MLMGT&lt; MF &gt;::bottom_reltol</definition>
        <argsstring></argsstring>
        <name>bottom_reltol</name>
        <initializer>= std::is_same&lt;<ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref>,double&gt;() ? <ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref>(1.e-4) : <ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref>(1.e-3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="222" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1ad3062efc6b4f6fb5bca0d154082251bc" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
        <definition>RT amrex::MLMGT&lt; MF &gt;::bottom_abstol</definition>
        <argsstring></argsstring>
        <name>bottom_abstol</name>
        <initializer>= <ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref>(-1.0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="223" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a70c37d5b04706685f45cb22ded40c8d7" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLMGT&lt; MF &gt;::always_use_bnorm</definition>
        <argsstring></argsstring>
        <name>always_use_bnorm</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="225" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a2e4658b153dbf32716f539161d0b879e" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLMGT&lt; MF &gt;::final_fill_bc</definition>
        <argsstring></argsstring>
        <name>final_fill_bc</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="227" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a667e1a5701d1f0c19a5950f0aa44080f" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLLinOpT" kindref="compound">MLLinOpT</ref>&lt; MF &gt; &amp;</type>
        <definition>MLLinOpT&lt;MF&gt;&amp; amrex::MLMGT&lt; MF &gt;::linop</definition>
        <argsstring></argsstring>
        <name>linop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="229" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a67a474e9e00d6fe9f40b4d67f28a355c" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLMGT&lt; MF &gt;::ncomp</definition>
        <argsstring></argsstring>
        <name>ncomp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="230" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a7bde0570493aad3733687a04abf4520e" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLMGT&lt; MF &gt;::namrlevs</definition>
        <argsstring></argsstring>
        <name>namrlevs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="231" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a8dcbe08a11647df4d03789590bdc1de0" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLMGT&lt; MF &gt;::finest_amr_lev</definition>
        <argsstring></argsstring>
        <name>finest_amr_lev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="232" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a1443859ff59e201d7bbdf0cc0971251d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::MLMGT&lt; MF &gt;::linop_prepared</definition>
        <argsstring></argsstring>
        <name>linop_prepared</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="234" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a2b20154bea5f4c9076bc6d50529a44b2" prot="private" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::MLMGT&lt; MF &gt;::solve_called</definition>
        <argsstring></argsstring>
        <name>solve_called</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="235" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a262150be12f270d4328ceff545f0afd6" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLMGT&lt; MF &gt;::do_nsolve</definition>
        <argsstring></argsstring>
        <name>do_nsolve</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>N Solve. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="238" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1ab7616bcecdedc6719ce8bd7d85b44f64" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLMGT&lt; MF &gt;::nsolve_grid_size</definition>
        <argsstring></argsstring>
        <name>nsolve_grid_size</name>
        <initializer>= 16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="239" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1af44095217d5bbcda0aac7c890c7711f5" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classamrex_1_1MLLinOpT" kindref="compound">MLLinOpT</ref>&lt; MF &gt; &gt;</type>
        <definition>std::unique_ptr&lt;MLLinOpT&lt;MF&gt; &gt; amrex::MLMGT&lt; MF &gt;::ns_linop</definition>
        <argsstring></argsstring>
        <name>ns_linop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="240" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a9c8ed13672004a913f805ebe0f444073" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classamrex_1_1MLMGT" kindref="compound">MLMGT</ref>&lt; MF &gt; &gt;</type>
        <definition>std::unique_ptr&lt;MLMGT&lt;MF&gt; &gt; amrex::MLMGT&lt; MF &gt;::ns_mlmg</definition>
        <argsstring></argsstring>
        <name>ns_mlmg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="241" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a35c1adc57fbe1db211aac6fae5f5517b" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; MF &gt;</type>
        <definition>std::unique_ptr&lt;MF&gt; amrex::MLMGT&lt; MF &gt;::ns_sol</definition>
        <argsstring></argsstring>
        <name>ns_sol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="242" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1ac05ab8b48ded9d649049e4520b00625b" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; MF &gt;</type>
        <definition>std::unique_ptr&lt;MF&gt; amrex::MLMGT&lt; MF &gt;::ns_rhs</definition>
        <argsstring></argsstring>
        <name>ns_rhs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="243" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1ab6f5f94d1d7ce12cb556b0cab630f5af" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF &gt;</type>
        <definition>Vector&lt;MF&gt; amrex::MLMGT&lt; MF &gt;::sol</definition>
        <argsstring></argsstring>
        <name>sol</name>
        <briefdescription>
<para><ref refid="classamrex_1_1Hypre" kindref="compound">Hypre</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>PETSc</para>
<para>To avoid confusion, terms like sol, cor, rhs, res, ... etc. are in the frame of the original equation, not the correction form Might be alias to argument a_sol </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="273" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a4e3f5047925ba3d77f1c7284011ebc91" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF &gt;</type>
        <definition>Vector&lt;MF&gt; amrex::MLMGT&lt; MF &gt;::rhs</definition>
        <argsstring></argsstring>
        <name>rhs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy of original rhs L(sol) = rhs </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="274" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1acb90259a394dcc6252806b5a533ec9fc" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::MLMGT&lt; MF &gt;::sol_is_alias</definition>
        <argsstring></argsstring>
        <name>sol_is_alias</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="277" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1aa9aa3ad9d9090afb4ab278c9c8c2287f" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF &gt; &gt;</type>
        <definition>Vector&lt;Vector&lt;MF&gt; &gt; amrex::MLMGT&lt; MF &gt;::res</definition>
        <argsstring></argsstring>
        <name>res</name>
        <briefdescription>
<para>First <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>: <ref refid="classamrex_1_1Amr" kindref="compound">Amr</ref> levels. 0 is the coarest level Second <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>: MG levels. 0 is the finest level. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="283" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a1fd0a5173e6ff6c961c080b26f7755ac" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF &gt; &gt;</type>
        <definition>Vector&lt;Vector&lt;MF&gt; &gt; amrex::MLMGT&lt; MF &gt;::cor</definition>
        <argsstring></argsstring>
        <name>cor</name>
        <briefdescription>
<para>= rhs - L(sol) </para>
        </briefdescription>
        <detaileddescription>
<para>L(cor) = res </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="284" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a3b1cfa8f63985ace0f94e581ea709366" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF &gt; &gt;</type>
        <definition>Vector&lt;Vector&lt;MF&gt; &gt; amrex::MLMGT&lt; MF &gt;::cor_hold</definition>
        <argsstring></argsstring>
        <name>cor_hold</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="285" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a1236e0879a5fe5bf4f2ec5669cee7d59" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF &gt; &gt;</type>
        <definition>Vector&lt;Vector&lt;MF&gt; &gt; amrex::MLMGT&lt; MF &gt;::rescor</definition>
        <argsstring></argsstring>
        <name>rescor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>= res - L(cor) Residual of the correction form </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="286" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1adb7400b1c29d0f33ed67e2a81702ed8a" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; double &gt;</type>
        <definition>Vector&lt;double&gt; amrex::MLMGT&lt; MF &gt;::timer</definition>
        <argsstring></argsstring>
        <name>timer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="290" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a94b67005dca34f78005f42da6f7b3f04" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
        <definition>RT amrex::MLMGT&lt; MF &gt;::m_rhsnorm0</definition>
        <argsstring></argsstring>
        <name>m_rhsnorm0</name>
        <initializer>= <ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref>(-1.0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="292" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1af6339494ac0686d76870dfad3febbea1" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
        <definition>RT amrex::MLMGT&lt; MF &gt;::m_init_resnorm0</definition>
        <argsstring></argsstring>
        <name>m_init_resnorm0</name>
        <initializer>= <ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref>(-1.0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="293" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a4c8f06d157691aac2a25008ab4d7726f" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
        <definition>RT amrex::MLMGT&lt; MF &gt;::m_final_resnorm0</definition>
        <argsstring></argsstring>
        <name>m_final_resnorm0</name>
        <initializer>= <ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref>(-1.0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="294" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1ad44bb368a47f6e10513f541a1047d18c" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::MLMGT&lt; MF &gt;::m_niters_cg</definition>
        <argsstring></argsstring>
        <name>m_niters_cg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="295" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1MLMGT_1a5d0dc2ebd750fd37b790b56fe2339d15" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref> &gt;</type>
        <definition>Vector&lt;RT&gt; amrex::MLMGT&lt; MF &gt;::m_iter_fine_resnorm0</definition>
        <argsstring></argsstring>
        <name>m_iter_fine_resnorm0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="296" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="296" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1MLMGT_1abc418dda3f523d9f0ce2ad15871dc48b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MLMGT&lt; MF &gt;::MLMGT</definition>
        <argsstring>(MLLinOpT&lt; MF &gt; &amp;a_lp)</argsstring>
        <name>MLMGT</name>
        <param>
          <type><ref refid="classamrex_1_1MLLinOpT" kindref="compound">MLLinOpT</ref>&lt; MF &gt; &amp;</type>
          <declname>a_lp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="26" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="305" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a33d9c9f2a6560267a6b9b78232702b92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MLMGT&lt; MF &gt;::~MLMGT</definition>
        <argsstring>()</argsstring>
        <name>~MLMGT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="27" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="310" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1afa3e2aa5b90524633ea96626119fe9ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
        <definition>RT amrex::MLMGT&lt; MF &gt;::solve</definition>
        <argsstring>(const Vector&lt; AMF * &gt; &amp;a_sol, const Vector&lt; AMF const * &gt; &amp;a_rhs, RT a_tol_rel, RT a_tol_abs, const char *checkpoint_file=nullptr)</argsstring>
        <name>solve</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; AMF * &gt; &amp;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; AMF const * &gt; &amp;</type>
          <declname>a_rhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
          <declname>a_tol_rel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
          <declname>a_tol_abs</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>checkpoint_file</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="31" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1aa1b2f0a4a7b72759d11799a3a9d49390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
        <definition>RT amrex::MLMGT&lt; MF &gt;::solve</definition>
        <argsstring>(std::initializer_list&lt; AMF * &gt; a_sol, std::initializer_list&lt; AMF const * &gt; a_rhs, RT a_tol_rel, RT a_tol_abs, const char *checkpoint_file=nullptr)</argsstring>
        <name>solve</name>
        <param>
          <type>std::initializer_list&lt; AMF * &gt;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type>std::initializer_list&lt; AMF const * &gt;</type>
          <declname>a_rhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
          <declname>a_tol_rel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
          <declname>a_tol_abs</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>checkpoint_file</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="35" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a9184fd07b228cf04426d35dc27563711" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::getGradSolution</definition>
        <argsstring>(const Vector&lt; Array&lt; AMF *, AMREX_SPACEDIM &gt; &gt; &amp;a_grad_sol, Location a_loc=Location::FaceCenter)</argsstring>
        <name>getGradSolution</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; AMF *, AMREX_SPACEDIM &gt; &gt; &amp;</type>
          <declname>a_grad_sol</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" kindref="member">Location</ref></type>
          <declname>a_loc</declname>
          <defval>Location::FaceCenter</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="40" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="507" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a0c8c8fa9cab0b1b68c896ae1de53f5dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::getGradSolution</definition>
        <argsstring>(std::initializer_list&lt; Array&lt; AMF *, AMREX_SPACEDIM &gt;&gt; a_grad_sol, Location a_loc=Location::FaceCenter)</argsstring>
        <name>getGradSolution</name>
        <param>
          <type>std::initializer_list&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; AMF *, AMREX_SPACEDIM &gt;&gt;</type>
          <declname>a_grad_sol</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" kindref="member">Location</ref></type>
          <declname>a_loc</declname>
          <defval>Location::FaceCenter</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="44" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="530" bodyend="533"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1ae9426156a59e3e4fa7f4024eedfb3c22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::getFluxes</definition>
        <argsstring>(const Vector&lt; Array&lt; AMF *, AMREX_SPACEDIM &gt; &gt; &amp;a_flux, Location a_loc=Location::FaceCenter)</argsstring>
        <name>getFluxes</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; AMF *, AMREX_SPACEDIM &gt; &gt; &amp;</type>
          <declname>a_flux</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" kindref="member">Location</ref></type>
          <declname>a_loc</declname>
          <defval>Location::FaceCenter</defval>
        </param>
        <briefdescription>
<para>For <computeroutput>(alpha * a - beta * (del dot b grad)) phi = rhs</computeroutput>, flux means <computeroutput>-b grad phi</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="51" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="538" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a8bc15ad867108c7cf4002f71b7696126" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::getFluxes</definition>
        <argsstring>(std::initializer_list&lt; Array&lt; AMF *, AMREX_SPACEDIM &gt;&gt; a_flux, Location a_loc=Location::FaceCenter)</argsstring>
        <name>getFluxes</name>
        <param>
          <type>std::initializer_list&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; AMF *, AMREX_SPACEDIM &gt;&gt;</type>
          <declname>a_flux</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" kindref="member">Location</ref></type>
          <declname>a_loc</declname>
          <defval>Location::FaceCenter</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="55" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="569" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1aac5654b0e7eab6ce359301600c1f6c7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::getFluxes</definition>
        <argsstring>(const Vector&lt; Array&lt; AMF *, AMREX_SPACEDIM &gt; &gt; &amp;a_flux, const Vector&lt; AMF * &gt; &amp;a_sol, Location a_loc=Location::FaceCenter)</argsstring>
        <name>getFluxes</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; AMF *, AMREX_SPACEDIM &gt; &gt; &amp;</type>
          <declname>a_flux</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; AMF * &gt; &amp;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" kindref="member">Location</ref></type>
          <declname>a_loc</declname>
          <defval>Location::FaceCenter</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="59" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="578" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a5b5de3748ba2426c88f636fff2cd03a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::getFluxes</definition>
        <argsstring>(std::initializer_list&lt; Array&lt; AMF *, AMREX_SPACEDIM &gt;&gt; a_flux, std::initializer_list&lt; AMF * &gt; a_sol, Location a_loc=Location::FaceCenter)</argsstring>
        <name>getFluxes</name>
        <param>
          <type>std::initializer_list&lt; <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; AMF *, AMREX_SPACEDIM &gt;&gt;</type>
          <declname>a_flux</declname>
        </param>
        <param>
          <type>std::initializer_list&lt; AMF * &gt;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" kindref="member">Location</ref></type>
          <declname>a_loc</declname>
          <defval>Location::FaceCenter</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="64" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="610" bodyend="615"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a1cbdf2732ca933bb86971cfcc8afde7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::getFluxes</definition>
        <argsstring>(const Vector&lt; AMF * &gt; &amp;a_flux, Location a_loc=Location::CellCenter)</argsstring>
        <name>getFluxes</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; AMF * &gt; &amp;</type>
          <declname>a_flux</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" kindref="member">Location</ref></type>
          <declname>a_loc</declname>
          <defval>Location::CellCenter</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="69" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="620" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1ac2c1ddd3a1e83b1574a4336c89b3eff1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::getFluxes</definition>
        <argsstring>(std::initializer_list&lt; AMF * &gt; a_flux, Location a_loc=Location::CellCenter)</argsstring>
        <name>getFluxes</name>
        <param>
          <type>std::initializer_list&lt; AMF * &gt;</type>
          <declname>a_flux</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" kindref="member">Location</ref></type>
          <declname>a_loc</declname>
          <defval>Location::CellCenter</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="73" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="641" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1aad3f73457b5e489d333b8c5506ae629c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::getFluxes</definition>
        <argsstring>(const Vector&lt; AMF * &gt; &amp;a_flux, const Vector&lt; AMF * &gt; &amp;a_sol, Location a_loc=Location::CellCenter)</argsstring>
        <name>getFluxes</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; AMF * &gt; &amp;</type>
          <declname>a_flux</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; AMF * &gt; &amp;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" kindref="member">Location</ref></type>
          <declname>a_loc</declname>
          <defval>Location::CellCenter</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="77" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="649" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1afbd2eac545d410ca5268cdbbad6332aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::getFluxes</definition>
        <argsstring>(std::initializer_list&lt; AMF * &gt; a_flux, std::initializer_list&lt; AMF * &gt; a_sol, Location a_loc=Location::CellCenter)</argsstring>
        <name>getFluxes</name>
        <param>
          <type>std::initializer_list&lt; AMF * &gt;</type>
          <declname>a_flux</declname>
        </param>
        <param>
          <type>std::initializer_list&lt; AMF * &gt;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" kindref="member">Location</ref></type>
          <declname>a_loc</declname>
          <defval>Location::CellCenter</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="82" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="707" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a9fc34296525a11800ab50257d4b5ecca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::compResidual</definition>
        <argsstring>(const Vector&lt; MF * &gt; &amp;a_res, const Vector&lt; MF * &gt; &amp;a_sol, const Vector&lt; MF const * &gt; &amp;a_rhs)</argsstring>
        <name>compResidual</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF * &gt; &amp;</type>
          <declname>a_res</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF * &gt; &amp;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF const * &gt; &amp;</type>
          <declname>a_rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="86" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="743" bodyend="812"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a4cd706acd1fbd898473f0a25bcc9e157" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::apply</definition>
        <argsstring>(const Vector&lt; MF * &gt; &amp;out, const Vector&lt; MF * &gt; &amp;in)</argsstring>
        <name>apply</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF * &gt; &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF * &gt; &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para><computeroutput>out = L(in)</computeroutput>. Note that, if no actual solve is needed, one could turn off multigrid coarsening by constructing a MLLinOp object with an appropriate <ref refid="structamrex_1_1LPInfo" kindref="compound">LPInfo</ref> object (e.g., with LPInfo().setMaxCoarseningLevel(0)). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="100" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="816" bodyend="895"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a583837639457c1be71a4293604fb461d" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setVerbose</definition>
        <argsstring>(int v) noexcept</argsstring>
        <name>setVerbose</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="102" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1afee26760c3b6fd120a20bead9d849ce4" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setMaxIter</definition>
        <argsstring>(int n) noexcept</argsstring>
        <name>setMaxIter</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="103" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a034852dcdb062a30ca616eb0363d202b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setMaxFmgIter</definition>
        <argsstring>(int n) noexcept</argsstring>
        <name>setMaxFmgIter</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="104" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a8d32d7e502abfe65f355e792f0fed5b7" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setFixedIter</definition>
        <argsstring>(int nit) noexcept</argsstring>
        <name>setFixedIter</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="105" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a198deef7be3c836a4e4262aeeb0d70ac" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setPreSmooth</definition>
        <argsstring>(int n) noexcept</argsstring>
        <name>setPreSmooth</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="107" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a6207d80df231723fb69683f66f5ce6d0" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setPostSmooth</definition>
        <argsstring>(int n) noexcept</argsstring>
        <name>setPostSmooth</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="108" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1af409e46e36a83708948f57964d56e788" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setFinalSmooth</definition>
        <argsstring>(int n) noexcept</argsstring>
        <name>setFinalSmooth</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="109" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a2c1e8d8df826c5071a81e63e3aae54b4" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setBottomSmooth</definition>
        <argsstring>(int n) noexcept</argsstring>
        <name>setBottomSmooth</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="110" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a781f8fc6334607f15d2ae45c1faeec50" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setBottomSolver</definition>
        <argsstring>(BottomSolver s) noexcept</argsstring>
        <name>setBottomSolver</name>
        <param>
          <type><ref refid="namespaceamrex_1a9303c93b47b7839de8ce552cb7cb21c4" kindref="member">BottomSolver</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="112" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a42792f43ae4cc1ee24acf959aa647958" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setCFStrategy</definition>
        <argsstring>(CFStrategy a_cf_strategy) noexcept</argsstring>
        <name>setCFStrategy</name>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a96d1fcb72314606739f67225750197b9" kindref="member">CFStrategy</ref></type>
          <declname>a_cf_strategy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="113" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a002d46a5b24423762455f90086333f4b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setBottomVerbose</definition>
        <argsstring>(int v) noexcept</argsstring>
        <name>setBottomVerbose</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="114" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1afc23f31b4eca82ba3272587a8a9998ed" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setBottomMaxIter</definition>
        <argsstring>(int n) noexcept</argsstring>
        <name>setBottomMaxIter</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="115" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1af18713081439d6261cb03153792cc0e8" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setBottomTolerance</definition>
        <argsstring>(RT t) noexcept</argsstring>
        <name>setBottomTolerance</name>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="116" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a1de7f802d64a3237a66a9b4a1f24dfe2" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setBottomToleranceAbs</definition>
        <argsstring>(RT t) noexcept</argsstring>
        <name>setBottomToleranceAbs</name>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="117" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a903f258c1b87542f0b214e3d90e220af" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
        <definition>RT amrex::MLMGT&lt; MF &gt;::getBottomToleranceAbs</definition>
        <argsstring>() noexcept</argsstring>
        <name>getBottomToleranceAbs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="118" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a9e64f7c34ec5abddc37f653b110a3230" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setAlwaysUseBNorm</definition>
        <argsstring>(int flag) noexcept</argsstring>
        <name>setAlwaysUseBNorm</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="120" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1aaf653324d55081effa4617316f6fed7f" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setFinalFillBC</definition>
        <argsstring>(int flag) noexcept</argsstring>
        <name>setFinalFillBC</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="122" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1ad2c6df179eb4acd5061de72341881c63" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLMGT&lt; MF &gt;::numAMRLevels</definition>
        <argsstring>() const noexcept</argsstring>
        <name>numAMRLevels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="124" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a309402aeb490c7011bbdc724dfb20e98" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setNSolve</definition>
        <argsstring>(int flag) noexcept</argsstring>
        <name>setNSolve</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="126" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a52db13d6134d518279dce357d082ed35" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::setNSolveGridSize</definition>
        <argsstring>(int s) noexcept</argsstring>
        <name>setNSolveGridSize</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="127" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a99e382a66a897864e0c3b4dffe9e1cd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::prepareForSolve</definition>
        <argsstring>(Vector&lt; AMF * &gt; const &amp;a_sol, Vector&lt; AMF const * &gt; const &amp;a_rhs)</argsstring>
        <name>prepareForSolve</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; AMF * &gt; const &amp;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; AMF const * &gt; const &amp;</type>
          <declname>a_rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="153" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="900" bodyend="1080"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a69cb002038ef5460b92042d6921396b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::prepareForNSolve</definition>
        <argsstring>()</argsstring>
        <name>prepareForNSolve</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="155" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1084" bodyend="1110"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1afe44c08a7965ecfe62b862e3d37ac7a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::oneIter</definition>
        <argsstring>(int iter)</argsstring>
        <name>oneIter</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="157" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1115" bodyend="1180"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a04e2008deaa2db7a923723f93efa778f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::miniCycle</definition>
        <argsstring>(int alev)</argsstring>
        <name>miniCycle</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>alev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="159" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1184" bodyend="1189"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a66029bb749136c53cc6fabe82b6b2783" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::mgVcycle</definition>
        <argsstring>(int amrlev, int mglev)</argsstring>
        <name>mgVcycle</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>amrlev</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>mglev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="161" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1195" bodyend="1302"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1adac59879a785f3b492262e29249a66ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::mgFcycle</definition>
        <argsstring>()</argsstring>
        <name>mgFcycle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="162" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1309" bodyend="1344"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1ae5c3ce847717bf6243a9b7c70a1258a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::bottomSolve</definition>
        <argsstring>()</argsstring>
        <name>bottomSolve</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="164" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1351" bodyend="1361"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a46bbc0ba9d09d6eaab3ee0cc47d4d0bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::NSolve</definition>
        <argsstring>(MLMGT&lt; MF &gt; &amp;a_solver, MF &amp;a_sol, MF &amp;a_rhs)</argsstring>
        <name>NSolve</name>
        <param>
          <type><ref refid="classamrex_1_1MLMGT" kindref="compound">MLMGT</ref>&lt; MF &gt; &amp;</type>
          <declname>a_solver</declname>
        </param>
        <param>
          <type>MF &amp;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type>MF &amp;</type>
          <declname>a_rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="165" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1365" bodyend="1385"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a10dcbb8156201d800233f72c62831001" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::actualBottomSolve</definition>
        <argsstring>()</argsstring>
        <name>actualBottomSolve</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="166" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1389" bodyend="1482"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a5b7fb7f96050d46f476ccc62a589cfa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::computeMLResidual</definition>
        <argsstring>(int amrlevmax)</argsstring>
        <name>computeMLResidual</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>amrlevmax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="168" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1505" bodyend="1518"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1abcccae42defac8377364437d16cd915a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::computeResidual</definition>
        <argsstring>(int alev)</argsstring>
        <name>computeResidual</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>alev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="169" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1523" bodyend="1528"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a70e3d7e337fb1804c64bb91a2676a362" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::computeResWithCrseSolFineCor</definition>
        <argsstring>(int crse_amr_lev, int fine_amr_lev)</argsstring>
        <name>computeResWithCrseSolFineCor</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>crse_amr_lev</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>fine_amr_lev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="170" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1533" bodyend="1559"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a0110638a54bd8603b174157ced65d9a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::computeResWithCrseCorFineCor</definition>
        <argsstring>(int fine_amr_lev)</argsstring>
        <name>computeResWithCrseCorFineCor</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>fine_amr_lev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="171" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1564" bodyend="1581"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a295166a3e3f2f9ec07aeffbb4a8a68ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::interpCorrection</definition>
        <argsstring>(int alev)</argsstring>
        <name>interpCorrection</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>alev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="172" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1586" bodyend="1612"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a13d1cb95e97a44a16843f44421cc86c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::interpCorrection</definition>
        <argsstring>(int alev, int mglev)</argsstring>
        <name>interpCorrection</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>alev</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>mglev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="173" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1619" bodyend="1626"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1af61728546d90caca97bb2137611eacd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::addInterpCorrection</definition>
        <argsstring>(int alev, int mglev)</argsstring>
        <name>addInterpCorrection</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>alev</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>mglev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="174" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1631" bodyend="1653"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a3d8b571d00886e320a12ceae0ff29b4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::computeResOfCorrection</definition>
        <argsstring>(int amrlev, int mglev)</argsstring>
        <name>computeResOfCorrection</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>amrlev</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>mglev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="176" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1661" bodyend="1668"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a5389c558be52bbfc412c31e91b5c6ff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
        <definition>auto amrex::MLMGT&lt; MF &gt;::ResNormInf</definition>
        <argsstring>(int amrlev, bool local=false)</argsstring>
        <name>ResNormInf</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>amrlev</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>local</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="178" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1673" bodyend="1677"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a0368b810b665e00fdb1490f57eb331e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
        <definition>auto amrex::MLMGT&lt; MF &gt;::MLResNormInf</definition>
        <argsstring>(int alevmax, bool local=false)</argsstring>
        <name>MLResNormInf</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>alevmax</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>local</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="179" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1682" bodyend="1692"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a07d1120af993f9d9c95c3ab9d8ae7fb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
        <definition>auto amrex::MLMGT&lt; MF &gt;::MLRhsNormInf</definition>
        <argsstring>(bool local=false)</argsstring>
        <name>MLRhsNormInf</name>
        <param>
          <type>bool</type>
          <declname>local</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="180" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1697" bodyend="1707"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a74aa5d200cbee55ce7f454618d2d1789" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::makeSolvable</definition>
        <argsstring>()</argsstring>
        <name>makeSolvable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="182" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1711" bodyend="1723"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a6dc8cde9b0768dd1f82dbc0a658e76f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::makeSolvable</definition>
        <argsstring>(int amrlev, int mglev, MF &amp;mf)</argsstring>
        <name>makeSolvable</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>amrlev</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>mglev</declname>
        </param>
        <param>
          <type>MF &amp;</type>
          <declname>mf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="183" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1727" bodyend="1738"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a9b38691fee0244ab9dbdfa1878db8a86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLMGT&lt; MF &gt;::bottomSolveWithCG</definition>
        <argsstring>(MF &amp;x, const MF &amp;b, typename MLCGSolverT&lt; MF &gt;::Type type)</argsstring>
        <name>bottomSolveWithCG</name>
        <param>
          <type>MF &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const MF &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>typename <ref refid="classamrex_1_1MLCGSolverT" kindref="compound">MLCGSolverT</ref>&lt; MF &gt;::Type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="193" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1486" bodyend="1500"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1adcbc9d3987820fcf8769b0aa62eb96b7" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
        <definition>RT amrex::MLMGT&lt; MF &gt;::getInitRHS</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getInitRHS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="195" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="195" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a612f7c8a01b41fa882b5fb1f579c4a6c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
        <definition>RT amrex::MLMGT&lt; MF &gt;::getInitResidual</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getInitResidual</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="197" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="197" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a2182dcd20e03f121861e68056f9e4022" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
        <definition>RT amrex::MLMGT&lt; MF &gt;::getFinalResidual</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getFinalResidual</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="199" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="199" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a6083fa5fed480a49fde5c03c325f84ee" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref> &gt; const  &amp;</type>
        <definition>Vector&lt;RT&gt; const&amp; amrex::MLMGT&lt; MF &gt;::getResidualHistory</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getResidualHistory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="201" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="201" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a61fe6fb0ec89735cd73871cfb53a25b9" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::MLMGT&lt; MF &gt;::getNumIters</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getNumIters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="202" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="202" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a99cb7db62a7f9ea8f30cd18904bdbfef" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; const  &amp;</type>
        <definition>Vector&lt;int&gt; const&amp; amrex::MLMGT&lt; MF &gt;::getNumCGIters</definition>
        <argsstring>() const noexcept</argsstring>
        <name>getNumCGIters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="203" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="203" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1acbdb042ef433f3067ffd57ec67f64612" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto amrex::MLMGT&lt; MF &gt;::solve</definition>
        <argsstring>(std::initializer_list&lt; AMF * &gt; a_sol, std::initializer_list&lt; AMF const * &gt; a_rhs, RT a_tol_rel, RT a_tol_abs, const char *checkpoint_file) -&gt; RT</argsstring>
        <name>solve</name>
        <param>
          <type>std::initializer_list&lt; AMF * &gt;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type>std::initializer_list&lt; AMF const * &gt;</type>
          <declname>a_rhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
          <declname>a_tol_rel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
          <declname>a_tol_abs</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>checkpoint_file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="315" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="315" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a6736230495796a2feeaa3aae95dd7abb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename AMF</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto amrex::MLMGT&lt; MF &gt;::solve</definition>
        <argsstring>(const Vector&lt; AMF * &gt; &amp;a_sol, const Vector&lt; AMF const * &gt; &amp;a_rhs, RT a_tol_rel, RT a_tol_abs, const char *checkpoint_file) -&gt; RT</argsstring>
        <name>solve</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; AMF * &gt; &amp;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; AMF const * &gt; &amp;</type>
          <declname>a_rhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
          <declname>a_tol_rel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
          <declname>a_tol_abs</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>checkpoint_file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="327" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="327" bodyend="502"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1MLMGT_1a17d56a0f530866c212972918e49a9aff" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MLMGT&lt; MF &gt;::checkPoint</definition>
        <argsstring>(const Vector&lt; MultiFab * &gt; &amp;a_sol, const Vector&lt; MultiFab const * &gt; &amp;a_rhs, RT a_tol_rel, RT a_tol_abs, const char *a_file_name) const</argsstring>
        <name>checkPoint</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> * &gt; &amp;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> const * &gt; &amp;</type>
          <declname>a_rhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
          <declname>a_tol_rel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" kindref="member">RT</ref></type>
          <declname>a_tol_abs</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>a_file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="298" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="1840" bodyend="1893"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="10">
        <label>amrex::Vector&lt; double &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::unique_ptr&lt; amrex::MLMGT&lt; MF &gt; &gt;</label>
      </node>
      <node id="6">
        <label>T</label>
      </node>
      <node id="5">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>amrex::Vector&lt; MF &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>std::unique_ptr&lt; MF &gt;</label>
      </node>
      <node id="7">
        <label>amrex::Vector&lt; amrex::Vector&lt; MF &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>amrex::Vector&lt; RT &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>amrex::MLMGT&lt; MF &gt;</label>
        <link refid="classamrex_1_1MLMGT"/>
        <childnode refid="2" relation="usage">
          <edgelabel>ns_mlmg</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>ns_linop</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_iter_fine_resnorm0</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>cor</edgelabel>
          <edgelabel>cor_hold</edgelabel>
          <edgelabel>res</edgelabel>
          <edgelabel>rescor</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>ns_rhs</edgelabel>
          <edgelabel>ns_sol</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_niters_cg</edgelabel>
          <edgelabel>sol_is_alias</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>timer</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>rhs</edgelabel>
          <edgelabel>sol</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::unique_ptr&lt; amrex::MLLinOpT&lt; MF &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" line="11" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H" bodystart="12" bodyend="302"/>
    <listofallmembers>
      <member refid="classamrex_1_1MLMGT_1a10dcbb8156201d800233f72c62831001" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>actualBottomSolve</name></member>
      <member refid="classamrex_1_1MLMGT_1af61728546d90caca97bb2137611eacd7" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>addInterpCorrection</name></member>
      <member refid="classamrex_1_1MLMGT_1a70c37d5b04706685f45cb22ded40c8d7" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>always_use_bnorm</name></member>
      <member refid="classamrex_1_1MLMGT_1a4cd706acd1fbd898473f0a25bcc9e157" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>apply</name></member>
      <member refid="classamrex_1_1MLMGT_1ab0aa1d27d42faff94c85af0b3a9a3b39" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>BCMode</name></member>
      <member refid="classamrex_1_1MLMGT_1ad3062efc6b4f6fb5bca0d154082251bc" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>bottom_abstol</name></member>
      <member refid="classamrex_1_1MLMGT_1aa25c4bc7039d79991c9347812e392042" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>bottom_maxiter</name></member>
      <member refid="classamrex_1_1MLMGT_1aa8cd739b09d30ecf7e853c350fd2abd1" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>bottom_reltol</name></member>
      <member refid="classamrex_1_1MLMGT_1a6413a66e0cb6393a0cf6530375797fb1" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>bottom_solver</name></member>
      <member refid="classamrex_1_1MLMGT_1ac3f33b5865628fb4fbb9e39b278358fda4c32e616cb27e5785c48749118234b63" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>bottom_time</name></member>
      <member refid="classamrex_1_1MLMGT_1a14fa88e22141330833bda28beaef068c" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>bottom_verbose</name></member>
      <member refid="classamrex_1_1MLMGT_1ae5c3ce847717bf6243a9b7c70a1258a6" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>bottomSolve</name></member>
      <member refid="classamrex_1_1MLMGT_1a970cecc8fdf04c68cd458e27d20b1708" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>BottomSolver</name></member>
      <member refid="classamrex_1_1MLMGT_1a9b38691fee0244ab9dbdfa1878db8a86" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>bottomSolveWithCG</name></member>
      <member refid="classamrex_1_1MLMGT_1ac73351c2c2371e9849ff1be7d033a657" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>cf_strategy</name></member>
      <member refid="classamrex_1_1MLMGT_1a96d1fcb72314606739f67225750197b9" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>CFStrategy</name></member>
      <member refid="classamrex_1_1MLMGT_1a17d56a0f530866c212972918e49a9aff" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>checkPoint</name></member>
      <member refid="classamrex_1_1MLMGT_1a9fc34296525a11800ab50257d4b5ecca" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>compResidual</name></member>
      <member refid="classamrex_1_1MLMGT_1a5b7fb7f96050d46f476ccc62a589cfa3" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>computeMLResidual</name></member>
      <member refid="classamrex_1_1MLMGT_1abcccae42defac8377364437d16cd915a" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>computeResidual</name></member>
      <member refid="classamrex_1_1MLMGT_1a3d8b571d00886e320a12ceae0ff29b4a" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>computeResOfCorrection</name></member>
      <member refid="classamrex_1_1MLMGT_1a0110638a54bd8603b174157ced65d9a1" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>computeResWithCrseCorFineCor</name></member>
      <member refid="classamrex_1_1MLMGT_1a70e3d7e337fb1804c64bb91a2676a362" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>computeResWithCrseSolFineCor</name></member>
      <member refid="classamrex_1_1MLMGT_1a1fd0a5173e6ff6c961c080b26f7755ac" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>cor</name></member>
      <member refid="classamrex_1_1MLMGT_1a3b1cfa8f63985ace0f94e581ea709366" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>cor_hold</name></member>
      <member refid="classamrex_1_1MLMGT_1a8862750ef456314cfb8dc970b37444af" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>do_fixed_number_of_iters</name></member>
      <member refid="classamrex_1_1MLMGT_1a262150be12f270d4328ceff545f0afd6" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>do_nsolve</name></member>
      <member refid="classamrex_1_1MLMGT_1ab107b2d2cb0c6a491b20f55a0c820848" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>FAB</name></member>
      <member refid="classamrex_1_1MLMGT_1a2e4658b153dbf32716f539161d0b879e" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>final_fill_bc</name></member>
      <member refid="classamrex_1_1MLMGT_1a8dcbe08a11647df4d03789590bdc1de0" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>finest_amr_lev</name></member>
      <member refid="classamrex_1_1MLMGT_1a903f258c1b87542f0b214e3d90e220af" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getBottomToleranceAbs</name></member>
      <member refid="classamrex_1_1MLMGT_1a2182dcd20e03f121861e68056f9e4022" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getFinalResidual</name></member>
      <member refid="classamrex_1_1MLMGT_1ae9426156a59e3e4fa7f4024eedfb3c22" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getFluxes</name></member>
      <member refid="classamrex_1_1MLMGT_1a8bc15ad867108c7cf4002f71b7696126" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getFluxes</name></member>
      <member refid="classamrex_1_1MLMGT_1aac5654b0e7eab6ce359301600c1f6c7e" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getFluxes</name></member>
      <member refid="classamrex_1_1MLMGT_1a5b5de3748ba2426c88f636fff2cd03a2" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getFluxes</name></member>
      <member refid="classamrex_1_1MLMGT_1a1cbdf2732ca933bb86971cfcc8afde7c" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getFluxes</name></member>
      <member refid="classamrex_1_1MLMGT_1ac2c1ddd3a1e83b1574a4336c89b3eff1" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getFluxes</name></member>
      <member refid="classamrex_1_1MLMGT_1aad3f73457b5e489d333b8c5506ae629c" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getFluxes</name></member>
      <member refid="classamrex_1_1MLMGT_1afbd2eac545d410ca5268cdbbad6332aa" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getFluxes</name></member>
      <member refid="classamrex_1_1MLMGT_1a9184fd07b228cf04426d35dc27563711" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getGradSolution</name></member>
      <member refid="classamrex_1_1MLMGT_1a0c8c8fa9cab0b1b68c896ae1de53f5dd" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getGradSolution</name></member>
      <member refid="classamrex_1_1MLMGT_1a612f7c8a01b41fa882b5fb1f579c4a6c" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getInitResidual</name></member>
      <member refid="classamrex_1_1MLMGT_1adcbc9d3987820fcf8769b0aa62eb96b7" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getInitRHS</name></member>
      <member refid="classamrex_1_1MLMGT_1a99cb7db62a7f9ea8f30cd18904bdbfef" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getNumCGIters</name></member>
      <member refid="classamrex_1_1MLMGT_1a61fe6fb0ec89735cd73871cfb53a25b9" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getNumIters</name></member>
      <member refid="classamrex_1_1MLMGT_1a6083fa5fed480a49fde5c03c325f84ee" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>getResidualHistory</name></member>
      <member refid="classamrex_1_1MLMGT_1a295166a3e3f2f9ec07aeffbb4a8a68ed" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>interpCorrection</name></member>
      <member refid="classamrex_1_1MLMGT_1a13d1cb95e97a44a16843f44421cc86c5" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>interpCorrection</name></member>
      <member refid="classamrex_1_1MLMGT_1ac3f33b5865628fb4fbb9e39b278358fdaf269540ff581645f82a93c665a8a7b2b" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>iter_time</name></member>
      <member refid="classamrex_1_1MLMGT_1a667e1a5701d1f0c19a5950f0aa44080f" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>linop</name></member>
      <member refid="classamrex_1_1MLMGT_1a1443859ff59e201d7bbdf0cc0971251d" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>linop_prepared</name></member>
      <member refid="classamrex_1_1MLMGT_1a4adf824fc2842cb7a07dcc0395627629" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>Location</name></member>
      <member refid="classamrex_1_1MLMGT_1a4c8f06d157691aac2a25008ab4d7726f" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>m_final_resnorm0</name></member>
      <member refid="classamrex_1_1MLMGT_1af6339494ac0686d76870dfad3febbea1" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>m_init_resnorm0</name></member>
      <member refid="classamrex_1_1MLMGT_1a5d0dc2ebd750fd37b790b56fe2339d15" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>m_iter_fine_resnorm0</name></member>
      <member refid="classamrex_1_1MLMGT_1ad44bb368a47f6e10513f541a1047d18c" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>m_niters_cg</name></member>
      <member refid="classamrex_1_1MLMGT_1a94b67005dca34f78005f42da6f7b3f04" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>m_rhsnorm0</name></member>
      <member refid="classamrex_1_1MLMGT_1a74aa5d200cbee55ce7f454618d2d1789" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>makeSolvable</name></member>
      <member refid="classamrex_1_1MLMGT_1a6dc8cde9b0768dd1f82dbc0a658e76f4" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>makeSolvable</name></member>
      <member refid="classamrex_1_1MLMGT_1a7322aabb50f001b012c53ab44f18925b" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>max_fmg_iters</name></member>
      <member refid="classamrex_1_1MLMGT_1a8667c250440fcb20ee43b4d9ee2b2108" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>max_iters</name></member>
      <member refid="classamrex_1_1MLMGT_1adac59879a785f3b492262e29249a66ae" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>mgFcycle</name></member>
      <member refid="classamrex_1_1MLMGT_1a66029bb749136c53cc6fabe82b6b2783" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>mgVcycle</name></member>
      <member refid="classamrex_1_1MLMGT_1a04e2008deaa2db7a923723f93efa778f" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>miniCycle</name></member>
      <member refid="classamrex_1_1MLMGT_1a7d74bb864e0e5e676d689302876b3da3" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>MLCGSolverT</name></member>
      <member refid="classamrex_1_1MLMGT_1abc418dda3f523d9f0ce2ad15871dc48b" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>MLMGT</name></member>
      <member refid="classamrex_1_1MLMGT_1a0368b810b665e00fdb1490f57eb331e0" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>MLResNormInf</name></member>
      <member refid="classamrex_1_1MLMGT_1a07d1120af993f9d9c95c3ab9d8ae7fb2" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>MLRhsNormInf</name></member>
      <member refid="classamrex_1_1MLMGT_1a7bde0570493aad3733687a04abf4520e" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>namrlevs</name></member>
      <member refid="classamrex_1_1MLMGT_1a67a474e9e00d6fe9f40b4d67f28a355c" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>ncomp</name></member>
      <member refid="classamrex_1_1MLMGT_1af44095217d5bbcda0aac7c890c7711f5" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>ns_linop</name></member>
      <member refid="classamrex_1_1MLMGT_1a9c8ed13672004a913f805ebe0f444073" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>ns_mlmg</name></member>
      <member refid="classamrex_1_1MLMGT_1ac05ab8b48ded9d649049e4520b00625b" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>ns_rhs</name></member>
      <member refid="classamrex_1_1MLMGT_1a35c1adc57fbe1db211aac6fae5f5517b" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>ns_sol</name></member>
      <member refid="classamrex_1_1MLMGT_1a46bbc0ba9d09d6eaab3ee0cc47d4d0bb" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>NSolve</name></member>
      <member refid="classamrex_1_1MLMGT_1ab7616bcecdedc6719ce8bd7d85b44f64" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>nsolve_grid_size</name></member>
      <member refid="classamrex_1_1MLMGT_1ac3f33b5865628fb4fbb9e39b278358fda24039153a091a3526d8f692a1ae67709" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>ntimers</name></member>
      <member refid="classamrex_1_1MLMGT_1a58dfdb82f14a306e71cf3897acaa6f92" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>nu1</name></member>
      <member refid="classamrex_1_1MLMGT_1adf6e938df981049c8e34ee53d3c21d05" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>nu2</name></member>
      <member refid="classamrex_1_1MLMGT_1a7caf8d1d49732307624d42da5ac3cb83" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>nub</name></member>
      <member refid="classamrex_1_1MLMGT_1a535eff64ede17a0c410f80f26de70a3d" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>nuf</name></member>
      <member refid="classamrex_1_1MLMGT_1ad2c6df179eb4acd5061de72341881c63" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>numAMRLevels</name></member>
      <member refid="classamrex_1_1MLMGT_1afe44c08a7965ecfe62b862e3d37ac7a0" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>oneIter</name></member>
      <member refid="classamrex_1_1MLMGT_1a69cb002038ef5460b92042d6921396b1" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>prepareForNSolve</name></member>
      <member refid="classamrex_1_1MLMGT_1a99e382a66a897864e0c3b4dffe9e1cd9" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>prepareForSolve</name></member>
      <member refid="classamrex_1_1MLMGT_1aa9aa3ad9d9090afb4ab278c9c8c2287f" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>res</name></member>
      <member refid="classamrex_1_1MLMGT_1a1236e0879a5fe5bf4f2ec5669cee7d59" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>rescor</name></member>
      <member refid="classamrex_1_1MLMGT_1a5389c558be52bbfc412c31e91b5c6ff3" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>ResNormInf</name></member>
      <member refid="classamrex_1_1MLMGT_1a4e3f5047925ba3d77f1c7284011ebc91" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>rhs</name></member>
      <member refid="classamrex_1_1MLMGT_1a6f2787379b378f8c52186302cf7825c5" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>RT</name></member>
      <member refid="classamrex_1_1MLMGT_1a9e64f7c34ec5abddc37f653b110a3230" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setAlwaysUseBNorm</name></member>
      <member refid="classamrex_1_1MLMGT_1afc23f31b4eca82ba3272587a8a9998ed" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setBottomMaxIter</name></member>
      <member refid="classamrex_1_1MLMGT_1a2c1e8d8df826c5071a81e63e3aae54b4" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setBottomSmooth</name></member>
      <member refid="classamrex_1_1MLMGT_1a781f8fc6334607f15d2ae45c1faeec50" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setBottomSolver</name></member>
      <member refid="classamrex_1_1MLMGT_1af18713081439d6261cb03153792cc0e8" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setBottomTolerance</name></member>
      <member refid="classamrex_1_1MLMGT_1a1de7f802d64a3237a66a9b4a1f24dfe2" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setBottomToleranceAbs</name></member>
      <member refid="classamrex_1_1MLMGT_1a002d46a5b24423762455f90086333f4b" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setBottomVerbose</name></member>
      <member refid="classamrex_1_1MLMGT_1a42792f43ae4cc1ee24acf959aa647958" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setCFStrategy</name></member>
      <member refid="classamrex_1_1MLMGT_1aaf653324d55081effa4617316f6fed7f" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setFinalFillBC</name></member>
      <member refid="classamrex_1_1MLMGT_1af409e46e36a83708948f57964d56e788" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setFinalSmooth</name></member>
      <member refid="classamrex_1_1MLMGT_1a8d32d7e502abfe65f355e792f0fed5b7" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setFixedIter</name></member>
      <member refid="classamrex_1_1MLMGT_1a034852dcdb062a30ca616eb0363d202b" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setMaxFmgIter</name></member>
      <member refid="classamrex_1_1MLMGT_1afee26760c3b6fd120a20bead9d849ce4" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setMaxIter</name></member>
      <member refid="classamrex_1_1MLMGT_1a309402aeb490c7011bbdc724dfb20e98" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setNSolve</name></member>
      <member refid="classamrex_1_1MLMGT_1a52db13d6134d518279dce357d082ed35" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setNSolveGridSize</name></member>
      <member refid="classamrex_1_1MLMGT_1a6207d80df231723fb69683f66f5ce6d0" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setPostSmooth</name></member>
      <member refid="classamrex_1_1MLMGT_1a198deef7be3c836a4e4262aeeb0d70ac" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setPreSmooth</name></member>
      <member refid="classamrex_1_1MLMGT_1a583837639457c1be71a4293604fb461d" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>setVerbose</name></member>
      <member refid="classamrex_1_1MLMGT_1ab6f5f94d1d7ce12cb556b0cab630f5af" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>sol</name></member>
      <member refid="classamrex_1_1MLMGT_1acb90259a394dcc6252806b5a533ec9fc" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>sol_is_alias</name></member>
      <member refid="classamrex_1_1MLMGT_1afa3e2aa5b90524633ea96626119fe9ab" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>solve</name></member>
      <member refid="classamrex_1_1MLMGT_1aa1b2f0a4a7b72759d11799a3a9d49390" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>solve</name></member>
      <member refid="classamrex_1_1MLMGT_1acbdb042ef433f3067ffd57ec67f64612" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>solve</name></member>
      <member refid="classamrex_1_1MLMGT_1a6736230495796a2feeaa3aae95dd7abb" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>solve</name></member>
      <member refid="classamrex_1_1MLMGT_1a2b20154bea5f4c9076bc6d50529a44b2" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>solve_called</name></member>
      <member refid="classamrex_1_1MLMGT_1ac3f33b5865628fb4fbb9e39b278358fdafe6893b283399428e6511e5ce0780e7c" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>solve_time</name></member>
      <member refid="classamrex_1_1MLMGT_1adb7400b1c29d0f33ed67e2a81702ed8a" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>timer</name></member>
      <member refid="classamrex_1_1MLMGT_1ac3f33b5865628fb4fbb9e39b278358fd" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>timer_types</name></member>
      <member refid="classamrex_1_1MLMGT_1abc5cadb87add794dca040e5cebff0fe2" prot="private" virt="non-virtual"><scope>amrex::MLMGT</scope><name>verbose</name></member>
      <member refid="classamrex_1_1MLMGT_1a33d9c9f2a6560267a6b9b78232702b92" prot="public" virt="non-virtual"><scope>amrex::MLMGT</scope><name>~MLMGT</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
