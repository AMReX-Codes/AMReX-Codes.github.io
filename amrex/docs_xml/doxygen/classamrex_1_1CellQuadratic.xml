<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classamrex_1_1CellQuadratic" kind="class" language="C++" prot="public">
    <compoundname>amrex::CellQuadratic</compoundname>
    <basecompoundref refid="classamrex_1_1Interpolater" prot="public" virt="non-virtual">amrex::Interpolater</basecompoundref>
    <includes refid="AMReX__Interpolater_8H" local="no">AMReX_Interpolater.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1CellQuadratic_1ab63f2d5d208fee7b85d2d3eab0675a77" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::CellQuadratic::do_limited_slope</definition>
        <argsstring></argsstring>
        <name>do_limited_slope</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.H" line="487" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.H" bodystart="487" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1CellQuadratic_1a13c8d17fb4c835f4a95cae71966deac9" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::CellQuadratic::CellQuadratic</definition>
        <argsstring>(bool limit=true)</argsstring>
        <name>CellQuadratic</name>
        <param>
          <type>bool</type>
          <declname>limit</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>The constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.H" line="433" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.cpp" bodystart="550" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1CellQuadratic_1af55d6d25ca0615b8ce54143452749b9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>amrex::CellQuadratic::~CellQuadratic</definition>
        <argsstring>() override</argsstring>
        <name>~CellQuadratic</name>
        <briefdescription>
<para>The destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.H" line="438" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.cpp" bodystart="555" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1CellQuadratic_1ac42aae63c74e1e3dbacbde8f2f0d8a0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref></type>
        <definition>Box amrex::CellQuadratic::CoarseBox</definition>
        <argsstring>(const Box &amp;fine, int ratio) override</argsstring>
        <name>CoarseBox</name>
        <reimplements refid="classamrex_1_1InterpBase_1a7120153e965f22098f7cd888274f5c6b">CoarseBox</reimplements>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>fine</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ratio</declname>
        </param>
        <briefdescription>
<para>Returns coarsened box given fine box and refinement ratio. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fine</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ratio</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.H" line="446" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.cpp" bodystart="567" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1CellQuadratic_1a29356c571502616f35a19405ce0ab31d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref></type>
        <definition>Box amrex::CellQuadratic::CoarseBox</definition>
        <argsstring>(const Box &amp;fine, const IntVect &amp;ratio) override</argsstring>
        <name>CoarseBox</name>
        <reimplements refid="classamrex_1_1InterpBase_1a684e90cd5708cc5746e653c6decc75d1">CoarseBox</reimplements>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>fine</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>ratio</declname>
        </param>
        <briefdescription>
<para>Returns coarsened box given fine box and refinement ratio. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fine</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ratio</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.H" line="454" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.cpp" bodystart="558" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1CellQuadratic_1ad51a75df078f2fec70d1a07a1023fd66" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void amrex::CellQuadratic::interp</definition>
        <argsstring>(const FArrayBox &amp;crse, int crse_comp, FArrayBox &amp;fine, int fine_comp, int ncomp, const Box &amp;fine_region, const IntVect &amp;ratio, const Geometry &amp;crse_geom, const Geometry &amp;fine_geom, Vector&lt; BCRec &gt; const &amp;bcr, int actual_comp, int actual_state, RunOn gpu_or_cpu) override</argsstring>
        <name>interp</name>
        <reimplements refid="classamrex_1_1Interpolater_1ab7e7a9cccec912ca707efd4fe1653da1">interp</reimplements>
        <param>
          <type>const <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
          <declname>crse</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>crse_comp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
          <declname>fine</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>fine_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>fine_region</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>ratio</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>crse_geom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>fine_geom</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &gt; const &amp;</type>
          <declname>bcr</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>actual_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>actual_state</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a33bef6ea796972dbf046ba79277795d2" kindref="member">RunOn</ref></type>
          <declname>gpu_or_cpu</declname>
        </param>
        <briefdescription>
<para>Coarse to fine interpolation in space. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>crse</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>crse_comp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fine</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fine_comp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ncomp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fine_region</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ratio</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>crse_geom</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fine_geom</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bcr</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>actual_comp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>actual_state</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.H" line="472" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.cpp" bodystart="576" bodyend="684"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Quadratic interpolation on cell centered data. </para>
    </briefdescription>
    <detaileddescription>
<para>Quadratic interpolation on cell centered data. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>amrex::InterpBase</label>
        <link refid="classamrex_1_1InterpBase"/>
      </node>
      <node id="1">
        <label>amrex::CellQuadratic</label>
        <link refid="classamrex_1_1CellQuadratic"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::Interpolater</label>
        <link refid="classamrex_1_1Interpolater"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>amrex::InterpBase</label>
        <link refid="classamrex_1_1InterpBase"/>
      </node>
      <node id="1">
        <label>amrex::CellQuadratic</label>
        <link refid="classamrex_1_1CellQuadratic"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::Interpolater</label>
        <link refid="classamrex_1_1Interpolater"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.H" line="425" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_Interpolater.H" bodystart="422" bodyend="488"/>
    <listofallmembers>
      <member refid="classamrex_1_1InterpBase_1ab2961b67ebd3fabbf32afe103267ad59" prot="public" virt="non-virtual"><scope>amrex::CellQuadratic</scope><name>BoxCoarsener</name></member>
      <member refid="classamrex_1_1CellQuadratic_1a13c8d17fb4c835f4a95cae71966deac9" prot="public" virt="non-virtual"><scope>amrex::CellQuadratic</scope><name>CellQuadratic</name></member>
      <member refid="classamrex_1_1CellQuadratic_1ac42aae63c74e1e3dbacbde8f2f0d8a0a" prot="public" virt="virtual"><scope>amrex::CellQuadratic</scope><name>CoarseBox</name></member>
      <member refid="classamrex_1_1CellQuadratic_1a29356c571502616f35a19405ce0ab31d" prot="public" virt="virtual"><scope>amrex::CellQuadratic</scope><name>CoarseBox</name></member>
      <member refid="classamrex_1_1CellQuadratic_1ab63f2d5d208fee7b85d2d3eab0675a77" prot="private" virt="non-virtual"><scope>amrex::CellQuadratic</scope><name>do_limited_slope</name></member>
      <member refid="classamrex_1_1InterpBase_1ad9523dae9903f59fc43bb7df17e2250e" prot="public" virt="non-virtual"><scope>amrex::CellQuadratic</scope><name>GetBCArray</name></member>
      <member refid="classamrex_1_1CellQuadratic_1ad51a75df078f2fec70d1a07a1023fd66" prot="public" virt="virtual"><scope>amrex::CellQuadratic</scope><name>interp</name></member>
      <member refid="classamrex_1_1Interpolater_1a64945546d03cdf4823ac3689509b59f4" prot="public" virt="virtual"><scope>amrex::CellQuadratic</scope><name>interp_arr</name></member>
      <member refid="classamrex_1_1Interpolater_1aee5ce439fa4bbc2dd6f8d40708715485" prot="public" virt="virtual"><scope>amrex::CellQuadratic</scope><name>interp_face</name></member>
      <member refid="classamrex_1_1Interpolater_1aee6fb8b99ca4282e5f9e9122b9b37cf1" prot="public" virt="virtual"><scope>amrex::CellQuadratic</scope><name>protect</name></member>
      <member refid="classamrex_1_1CellQuadratic_1af55d6d25ca0615b8ce54143452749b9a" prot="public" virt="virtual"><scope>amrex::CellQuadratic</scope><name>~CellQuadratic</name></member>
      <member refid="classamrex_1_1InterpBase_1a73cb181d9364c6005abfcfdb54037291" prot="public" virt="virtual"><scope>amrex::CellQuadratic</scope><name>~InterpBase</name></member>
      <member refid="classamrex_1_1Interpolater_1a48000082339f7edb658f96bc4e558eca" prot="public" virt="virtual"><scope>amrex::CellQuadratic</scope><name>~Interpolater</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
