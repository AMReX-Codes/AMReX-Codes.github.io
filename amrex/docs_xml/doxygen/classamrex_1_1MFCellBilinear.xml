<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classamrex_1_1MFCellBilinear" kind="class" language="C++" prot="public" final="yes">
    <compoundname>amrex::MFCellBilinear</compoundname>
    <basecompoundref refid="classamrex_1_1MFInterpolater" prot="public" virt="non-virtual">amrex::MFInterpolater</basecompoundref>
    <includes refid="AMReX__MFInterpolater_8H" local="no">AMReX_MFInterpolater.H</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1MFCellBilinear_1a8fa87be4e8a6aa1c243a44efbdfafb50" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual amrex::MFCellBilinear::~MFCellBilinear</definition>
        <argsstring>()=default</argsstring>
        <name>~MFCellBilinear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_MFInterpolater.H" line="80" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MFCellBilinear_1a46a32a44b4f600e8d7b0e8158b261a52" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref></type>
        <definition>Box amrex::MFCellBilinear::CoarseBox</definition>
        <argsstring>(Box const &amp;fine, int ratio)</argsstring>
        <name>CoarseBox</name>
        <reimplements refid="classamrex_1_1InterpBase_1a7120153e965f22098f7cd888274f5c6b">CoarseBox</reimplements>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>fine</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ratio</declname>
        </param>
        <briefdescription>
<para>Returns coarsened box given fine box and refinement ratio. This is a pure virtual function and hence MUST be implemented by derived classes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fine</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ratio</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_MFInterpolater.H" line="82" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_MFInterpolater.cpp" bodystart="319" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MFCellBilinear_1acf8b59c368759689bc86678c7cc358fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref></type>
        <definition>Box amrex::MFCellBilinear::CoarseBox</definition>
        <argsstring>(Box const &amp;fine, IntVect const &amp;ratio)</argsstring>
        <name>CoarseBox</name>
        <reimplements refid="classamrex_1_1InterpBase_1a684e90cd5708cc5746e653c6decc75d1">CoarseBox</reimplements>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>fine</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> const &amp;</type>
          <declname>ratio</declname>
        </param>
        <briefdescription>
<para>Returns coarsened box given fine box and refinement ratio. This is a pure virtual function and hence MUST be implemented by derived classes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fine</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ratio</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_MFInterpolater.H" line="83" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_MFInterpolater.cpp" bodystart="298" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MFCellBilinear_1a73a4cee6d8761bbd2529f3846b4f5431" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void amrex::MFCellBilinear::interp</definition>
        <argsstring>(MultiFab const &amp;crsemf, int ccomp, MultiFab &amp;finemf, int fcomp, int ncomp, IntVect const &amp;ng, Geometry const &amp;cgeom, Geometry const &amp;fgeom, Box const &amp;dest_domain, IntVect const &amp;ratio, Vector&lt; BCRec &gt; const &amp;bcs, int bcscomp)</argsstring>
        <name>interp</name>
        <reimplements refid="classamrex_1_1MFInterpolater_1ad58787e5d20224e834a55b1d566f7672">interp</reimplements>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> const &amp;</type>
          <declname>crsemf</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ccomp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>finemf</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>fcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> const &amp;</type>
          <declname>ng</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>cgeom</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>fgeom</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>dest_domain</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> const &amp;</type>
          <declname>ratio</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &gt; const &amp;</type>
          <declname>bcs</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>bcscomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_MFInterpolater.H" line="85" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_MFInterpolater.cpp" bodystart="325" bodyend="359"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>[Bi|Tri]linear interpolation on cell centered data. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>amrex::InterpBase</label>
        <link refid="classamrex_1_1InterpBase"/>
      </node>
      <node id="2">
        <label>amrex::MFInterpolater</label>
        <link refid="classamrex_1_1MFInterpolater"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>amrex::MFCellBilinear</label>
        <link refid="classamrex_1_1MFCellBilinear"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>amrex::InterpBase</label>
        <link refid="classamrex_1_1InterpBase"/>
      </node>
      <node id="2">
        <label>amrex::MFInterpolater</label>
        <link refid="classamrex_1_1MFInterpolater"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>amrex::MFCellBilinear</label>
        <link refid="classamrex_1_1MFCellBilinear"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_MFInterpolater.H" line="78" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_MFInterpolater.H" bodystart="76" bodyend="89"/>
    <listofallmembers>
      <member refid="classamrex_1_1InterpBase_1ab2961b67ebd3fabbf32afe103267ad59" prot="public" virt="non-virtual"><scope>amrex::MFCellBilinear</scope><name>BoxCoarsener</name></member>
      <member refid="classamrex_1_1MFCellBilinear_1a46a32a44b4f600e8d7b0e8158b261a52" prot="public" virt="virtual"><scope>amrex::MFCellBilinear</scope><name>CoarseBox</name></member>
      <member refid="classamrex_1_1MFCellBilinear_1acf8b59c368759689bc86678c7cc358fc" prot="public" virt="virtual"><scope>amrex::MFCellBilinear</scope><name>CoarseBox</name></member>
      <member refid="classamrex_1_1InterpBase_1ad9523dae9903f59fc43bb7df17e2250e" prot="public" virt="non-virtual"><scope>amrex::MFCellBilinear</scope><name>GetBCArray</name></member>
      <member refid="classamrex_1_1MFCellBilinear_1a73a4cee6d8761bbd2529f3846b4f5431" prot="public" virt="virtual"><scope>amrex::MFCellBilinear</scope><name>interp</name></member>
      <member refid="classamrex_1_1InterpBase_1a73cb181d9364c6005abfcfdb54037291" prot="public" virt="virtual"><scope>amrex::MFCellBilinear</scope><name>~InterpBase</name></member>
      <member refid="classamrex_1_1MFCellBilinear_1a8fa87be4e8a6aa1c243a44efbdfafb50" prot="public" virt="virtual"><scope>amrex::MFCellBilinear</scope><name>~MFCellBilinear</name></member>
      <member refid="classamrex_1_1MFInterpolater_1afd25250d30fb2d1d605bdb7b6b0e1a4e" prot="public" virt="virtual"><scope>amrex::MFCellBilinear</scope><name>~MFInterpolater</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
