<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classamrex_1_1PArena" kind="class" language="C++" prot="public">
    <compoundname>amrex::PArena</compoundname>
    <basecompoundref refid="classamrex_1_1Arena" prot="public" virt="non-virtual">amrex::Arena</basecompoundref>
    <includes refid="AMReX__PArena_8H" local="no">AMReX_PArena.H</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1PArena_1a271766f44068cade7f1f36dd670da387" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::PArena::PArena</definition>
        <argsstring>(Long release_threshold)</argsstring>
        <name>PArena</name>
        <param>
          <type>Long</type>
          <declname>release_threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.H" line="24" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.cpp" bodystart="12" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PArena_1acf949e7231cf57c1c2ca3c9c7163030c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::PArena::PArena</definition>
        <argsstring>(const PArena &amp;rhs)=delete</argsstring>
        <name>PArena</name>
        <param>
          <type>const <ref refid="classamrex_1_1PArena" kindref="compound">PArena</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.H" line="25" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PArena_1a6fe163ca93657b9af53a856a50e3587c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1PArena" kindref="compound">PArena</ref> &amp;</type>
        <definition>PArena&amp; amrex::PArena::operator=</definition>
        <argsstring>(const PArena &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1PArena" kindref="compound">PArena</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.H" line="26" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PArena_1a4e359272e4b895952156d7f75c15f157" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>amrex::PArena::~PArena</definition>
        <argsstring>() override</argsstring>
        <name>~PArena</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.H" line="27" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.cpp" bodystart="25" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PArena_1ae6c5243a8d81444f3bc082ef76af855c" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void *</type>
        <definition>void * amrex::PArena::alloc</definition>
        <argsstring>(std::size_t nbytes) override final</argsstring>
        <name>alloc</name>
        <reimplements refid="classamrex_1_1Arena_1a46ce2cd5cfc039cec64548b031fbde2e">alloc</reimplements>
        <param>
          <type>std::size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate a dynamic memory arena <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sz</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the memory request </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the allocated memory </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.H" line="29" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.cpp" bodystart="34" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PArena_1aefccf86e5fc2532fcb60f3f85be9b07a" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void amrex::PArena::free</definition>
        <argsstring>(void *p) override final</argsstring>
        <name>free</name>
        <reimplements refid="classamrex_1_1Arena_1a0c7e0730574c98febb6ddca2712cb515">free</reimplements>
        <param>
          <type>void *</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>A pure virtual function for deleting the arena pointed to by pt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.H" line="30" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.cpp" bodystart="65" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PArena_1a9592867fba4422ccf6ab8d201c762da6" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool amrex::PArena::isDeviceAccessible</definition>
        <argsstring>() const override final</argsstring>
        <name>isDeviceAccessible</name>
        <reimplements refid="classamrex_1_1Arena_1afa7c9e223346f671eb055b3ce8580e56">isDeviceAccessible</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.H" line="32" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.cpp" bodystart="96" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PArena_1a67ad0453e4900871dd98642143cf7e1d" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool amrex::PArena::isHostAccessible</definition>
        <argsstring>() const override final</argsstring>
        <name>isHostAccessible</name>
        <reimplements refid="classamrex_1_1Arena_1a40d897685d407918d2d6143b5301a525">isHostAccessible</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.H" line="33" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.cpp" bodystart="113" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PArena_1a94166157bc045ebc6781c2f033edba01" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool amrex::PArena::isManaged</definition>
        <argsstring>() const override final</argsstring>
        <name>isManaged</name>
        <reimplements refid="classamrex_1_1Arena_1a7119489f4464f902d907f6dfe9716909">isManaged</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.H" line="35" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.cpp" bodystart="130" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PArena_1acc4daaba21bd8f98f4da5600820923d6" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool amrex::PArena::isDevice</definition>
        <argsstring>() const override final</argsstring>
        <name>isDevice</name>
        <reimplements refid="classamrex_1_1Arena_1aa45555e396ee74158b0c6f3331ce5536">isDevice</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.H" line="36" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.cpp" bodystart="147" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PArena_1ad80388d71d970222ebe3979545ca0739" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool amrex::PArena::isPinned</definition>
        <argsstring>() const override final</argsstring>
        <name>isPinned</name>
        <reimplements refid="classamrex_1_1Arena_1a336e271c5a07296e4c2866d194111784">isPinned</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.H" line="37" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.cpp" bodystart="164" bodyend="178"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This arena uses CUDA stream-ordered memory allocator if available. If not, use <ref refid="namespaceamrex_1ae3d1414946b992f39ca41f135f12a0d1" kindref="member">The_Arena()</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
      </node>
      <node id="1">
        <label>amrex::PArena</label>
        <link refid="classamrex_1_1PArena"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="2">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="3" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::PArena</label>
        <link refid="classamrex_1_1PArena"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.H" line="22" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PArena.H" bodystart="19" bodyend="44"/>
    <listofallmembers>
      <member refid="classamrex_1_1Arena_1a253c417e0bd2863509c75d6250468a4e" prot="public" virt="non-virtual"><scope>amrex::PArena</scope><name>align</name></member>
      <member refid="classamrex_1_1Arena_1a4b2f3b31e81e52426aef615cb2aaa7b7" prot="public" virt="non-virtual"><scope>amrex::PArena</scope><name>align_size</name></member>
      <member refid="classamrex_1_1PArena_1ae6c5243a8d81444f3bc082ef76af855c" prot="public" virt="virtual"><scope>amrex::PArena</scope><name>alloc</name></member>
      <member refid="classamrex_1_1Arena_1afc721e195430f79b2d1b287c490ef0fb" prot="protected" virt="non-virtual"><scope>amrex::PArena</scope><name>allocate_system</name></member>
      <member refid="classamrex_1_1Arena_1aeb2158ba443c9b23ba0d12bcf38a66e1" prot="protected" virt="non-virtual"><scope>amrex::PArena</scope><name>arena_info</name></member>
      <member refid="classamrex_1_1Arena_1a1af72a36a13904de0715917915db1f6b" prot="public" virt="non-virtual"><scope>amrex::PArena</scope><name>arenaInfo</name></member>
      <member refid="classamrex_1_1Arena_1ac07ba8cda253cddee3cab1168ac65694" prot="protected" virt="non-virtual"><scope>amrex::PArena</scope><name>deallocate_system</name></member>
      <member refid="classamrex_1_1Arena_1a06dd6197d2081d7dd4c1bed308edd387" prot="public" virt="non-virtual"><scope>amrex::PArena</scope><name>Finalize</name></member>
      <member refid="classamrex_1_1PArena_1aefccf86e5fc2532fcb60f3f85be9b07a" prot="public" virt="virtual"><scope>amrex::PArena</scope><name>free</name></member>
      <member refid="classamrex_1_1Arena_1ae58dbb9ab6bb4e8d980b384b0d8804e5" prot="public" virt="virtual"><scope>amrex::PArena</scope><name>freeUnused</name></member>
      <member refid="classamrex_1_1Arena_1a881f97d5676c4784f52d6f4c702da696" prot="protected" virt="virtual"><scope>amrex::PArena</scope><name>freeUnused_protected</name></member>
      <member refid="classamrex_1_1Arena_1a9f40990a545f4d280e905117fc6a0786" prot="public" virt="non-virtual"><scope>amrex::PArena</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1PArena_1acc4daaba21bd8f98f4da5600820923d6" prot="public" virt="virtual"><scope>amrex::PArena</scope><name>isDevice</name></member>
      <member refid="classamrex_1_1PArena_1a9592867fba4422ccf6ab8d201c762da6" prot="public" virt="virtual"><scope>amrex::PArena</scope><name>isDeviceAccessible</name></member>
      <member refid="classamrex_1_1PArena_1a67ad0453e4900871dd98642143cf7e1d" prot="public" virt="virtual"><scope>amrex::PArena</scope><name>isHostAccessible</name></member>
      <member refid="classamrex_1_1PArena_1a94166157bc045ebc6781c2f033edba01" prot="public" virt="virtual"><scope>amrex::PArena</scope><name>isManaged</name></member>
      <member refid="classamrex_1_1PArena_1ad80388d71d970222ebe3979545ca0739" prot="public" virt="virtual"><scope>amrex::PArena</scope><name>isPinned</name></member>
      <member refid="classamrex_1_1PArena_1a6fe163ca93657b9af53a856a50e3587c" prot="public" virt="non-virtual"><scope>amrex::PArena</scope><name>operator=</name></member>
      <member refid="classamrex_1_1PArena_1a271766f44068cade7f1f36dd670da387" prot="public" virt="non-virtual"><scope>amrex::PArena</scope><name>PArena</name></member>
      <member refid="classamrex_1_1PArena_1acf949e7231cf57c1c2ca3c9c7163030c" prot="public" virt="non-virtual"><scope>amrex::PArena</scope><name>PArena</name></member>
      <member refid="classamrex_1_1Arena_1a506a68384da30629323d0839f13812c2" prot="public" virt="non-virtual"><scope>amrex::PArena</scope><name>PrintUsage</name></member>
      <member refid="classamrex_1_1Arena_1a515142557e6b630fbad746e3c33776e5" prot="public" virt="virtual"><scope>amrex::PArena</scope><name>~Arena</name></member>
      <member refid="classamrex_1_1PArena_1a4e359272e4b895952156d7f75c15f157" prot="public" virt="virtual"><scope>amrex::PArena</scope><name>~PArena</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
