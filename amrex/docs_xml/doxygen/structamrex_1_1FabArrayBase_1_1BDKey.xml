<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1FabArrayBase_1_1BDKey" kind="struct" language="C++" prot="public">
    <compoundname>amrex::FabArrayBase::BDKey</compoundname>
    <includes refid="AMReX__FabArrayBase_8H" local="no">AMReX_FabArrayBase.H</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structamrex_1_1FabArrayBase_1_1BDKey_1a72b32342670aa4c490e3362b75943633" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1BoxArray_1_1RefID" kindref="compound">BoxArray::RefID</ref></type>
        <definition>BoxArray::RefID amrex::FabArrayBase::BDKey::m_ba_id</definition>
        <argsstring></argsstring>
        <name>m_ba_id</name>
        <qualifiedname>amrex::FabArrayBase::BDKey::m_ba_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="246" column="36" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FabArrayBase_1_1BDKey_1ad4cad04286d0ad719cfe6125b146932e" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1DistributionMapping_1_1RefID" kindref="compound">DistributionMapping::RefID</ref></type>
        <definition>DistributionMapping::RefID amrex::FabArrayBase::BDKey::m_dm_id</definition>
        <argsstring></argsstring>
        <name>m_dm_id</name>
        <qualifiedname>amrex::FabArrayBase::BDKey::m_dm_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="247" column="36" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="247" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1BDKey_1acfc41f7fbe994eb11b68448dff90f9e8" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::FabArrayBase::BDKey::BDKey</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>BDKey</name>
        <qualifiedname>amrex::FabArrayBase::BDKey::BDKey</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="231" column="9"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1BDKey_1a2bbbd3ee02d682c985d8f2dfb744bf10" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::FabArrayBase::BDKey::BDKey</definition>
        <argsstring>(const BoxArray::RefID &amp;baid, const DistributionMapping::RefID &amp;dmid) noexcept</argsstring>
        <name>BDKey</name>
        <qualifiedname>amrex::FabArrayBase::BDKey::BDKey</qualifiedname>
        <param>
          <type>const <ref refid="structamrex_1_1BoxArray_1_1RefID" kindref="compound">BoxArray::RefID</ref> &amp;</type>
          <declname>baid</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1DistributionMapping_1_1RefID" kindref="compound">DistributionMapping::RefID</ref> &amp;</type>
          <declname>dmid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="232" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="232" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1BDKey_1ab36d9acc122e0741d84185b67e7e7493" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::FabArrayBase::BDKey::operator&lt;</definition>
        <argsstring>(const BDKey &amp;rhs) const noexcept</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>amrex::FabArrayBase::BDKey::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="structamrex_1_1FabArrayBase_1_1BDKey" kindref="compound">BDKey</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="234" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="234" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1BDKey_1a8525a0bfb72343d71c8730cce94b7e72" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::FabArrayBase::BDKey::operator==</definition>
        <argsstring>(const BDKey &amp;rhs) const noexcept</argsstring>
        <name>operator==</name>
        <qualifiedname>amrex::FabArrayBase::BDKey::operator==</qualifiedname>
        <param>
          <type>const <ref refid="structamrex_1_1FabArrayBase_1_1BDKey" kindref="compound">BDKey</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="238" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="238" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1BDKey_1acdae3eee27022bd69a6c207d800e497e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::FabArrayBase::BDKey::operator!=</definition>
        <argsstring>(const BDKey &amp;rhs) const noexcept</argsstring>
        <name>operator!=</name>
        <qualifiedname>amrex::FabArrayBase::BDKey::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="structamrex_1_1FabArrayBase_1_1BDKey" kindref="compound">BDKey</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="241" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="241" bodyend="243"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="structamrex_1_1FabArrayBase_1_1BDKey_1add62de8cc9f63000057ea4c330660149" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const BDKey &amp;id)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>amrex::FabArrayBase::BDKey::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1FabArrayBase_1_1BDKey" kindref="compound">BDKey</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="244" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.cpp" bodystart="2532" bodyend="2536"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Key for unique combination of <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> and <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> Note both <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> and <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> are reference counted. Objects with the same references have the same key. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="7">
        <label>amrex::BoxND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1BoxND"/>
      </node>
      <node id="8">
        <label>amrex::IntVectND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="6">
        <label>T</label>
      </node>
      <node id="4">
        <label>amrex::Vector&lt; amrex::BoxND &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="3" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="14" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>m_ownership</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="13" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>amrex::IntVectND&lt; dim &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="5">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="10" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="11">
        <label>std::vector&lt; int &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="230" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="230" bodyend="248"/>
    <listofallmembers>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1acfc41f7fbe994eb11b68448dff90f9e8" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>BDKey</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1a2bbbd3ee02d682c985d8f2dfb744bf10" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>BDKey</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1a72b32342670aa4c490e3362b75943633" prot="private" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>m_ba_id</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1ad4cad04286d0ad719cfe6125b146932e" prot="private" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>m_dm_id</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1acdae3eee27022bd69a6c207d800e497e" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>operator!=</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1ab36d9acc122e0741d84185b67e7e7493" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>operator&lt;</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1add62de8cc9f63000057ea4c330660149" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>operator&lt;&lt;</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1a8525a0bfb72343d71c8730cce94b7e72" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
