<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structamrex_1_1FabArrayBase_1_1BDKey" kind="struct" language="C++" prot="public">
    <compoundname>amrex::FabArrayBase::BDKey</compoundname>
    <includes refid="AMReX__FabArrayBase_8H" local="no">AMReX_FabArrayBase.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structamrex_1_1FabArrayBase_1_1BDKey_1a72b32342670aa4c490e3362b75943633" prot="private" static="no" mutable="no">
        <type>BoxArray::RefID</type>
        <definition>BoxArray::RefID amrex::FabArrayBase::BDKey::m_ba_id</definition>
        <argsstring></argsstring>
        <name>m_ba_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="235" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FabArrayBase_1_1BDKey_1ad4cad04286d0ad719cfe6125b146932e" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1DistributionMapping_1_1RefID" kindref="compound">DistributionMapping::RefID</ref></type>
        <definition>DistributionMapping::RefID amrex::FabArrayBase::BDKey::m_dm_id</definition>
        <argsstring></argsstring>
        <name>m_dm_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="236" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="236" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1BDKey_1acfc41f7fbe994eb11b68448dff90f9e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FabArrayBase::BDKey::BDKey</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>BDKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1BDKey_1a2bbbd3ee02d682c985d8f2dfb744bf10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::FabArrayBase::BDKey::BDKey</definition>
        <argsstring>(const BoxArray::RefID &amp;baid, const DistributionMapping::RefID &amp;dmid) noexcept</argsstring>
        <name>BDKey</name>
        <param>
          <type>const BoxArray::RefID &amp;</type>
          <declname>baid</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1DistributionMapping_1_1RefID" kindref="compound">DistributionMapping::RefID</ref> &amp;</type>
          <declname>dmid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="221" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="221" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1BDKey_1ab36d9acc122e0741d84185b67e7e7493" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::FabArrayBase::BDKey::operator&lt;</definition>
        <argsstring>(const BDKey &amp;rhs) const noexcept</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="structamrex_1_1FabArrayBase_1_1BDKey" kindref="compound">BDKey</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="223" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="223" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1BDKey_1a8525a0bfb72343d71c8730cce94b7e72" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::FabArrayBase::BDKey::operator==</definition>
        <argsstring>(const BDKey &amp;rhs) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structamrex_1_1FabArrayBase_1_1BDKey" kindref="compound">BDKey</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="227" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="227" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1FabArrayBase_1_1BDKey_1acdae3eee27022bd69a6c207d800e497e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::FabArrayBase::BDKey::operator!=</definition>
        <argsstring>(const BDKey &amp;rhs) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structamrex_1_1FabArrayBase_1_1BDKey" kindref="compound">BDKey</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="230" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="230" bodyend="232"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structamrex_1_1FabArrayBase_1_1BDKey_1ada86bd7c60ca814be4123736e1cfb658" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const BDKey &amp;id)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1FabArrayBase_1_1BDKey" kindref="compound">BDKey</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="233" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Key for unique combination of BoxArray and <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> Note both BoxArray and <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> are reference counted. Objects with the same references have the same key. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="527">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="528" relation="public-inheritance">
        </childnode>
      </node>
      <node id="528">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="525">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="526" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="526">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="527" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="524">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="525" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" line="219" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.H" bodystart="219" bodyend="237"/>
    <listofallmembers>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1acfc41f7fbe994eb11b68448dff90f9e8" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>BDKey</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1a2bbbd3ee02d682c985d8f2dfb744bf10" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>BDKey</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1a72b32342670aa4c490e3362b75943633" prot="private" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>m_ba_id</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1ad4cad04286d0ad719cfe6125b146932e" prot="private" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>m_dm_id</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1acdae3eee27022bd69a6c207d800e497e" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>operator!=</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1ab36d9acc122e0741d84185b67e7e7493" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>operator&lt;</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1ada86bd7c60ca814be4123736e1cfb658" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>operator&lt;&lt;</name></member>
      <member refid="structamrex_1_1FabArrayBase_1_1BDKey_1a8525a0bfb72343d71c8730cce94b7e72" prot="public" virt="non-virtual"><scope>amrex::FabArrayBase::BDKey</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
