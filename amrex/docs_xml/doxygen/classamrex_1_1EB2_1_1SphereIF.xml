<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classamrex_1_1EB2_1_1SphereIF" kind="class" language="C++" prot="public">
    <compoundname>amrex::EB2::SphereIF</compoundname>
    <basecompoundref refid="structamrex_1_1GPUable" prot="public" virt="non-virtual">amrex::GPUable</basecompoundref>
    <includes refid="AMReX__EB2__IF__Sphere_8H" local="no">AMReX_EB2_IF_Sphere.H</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1SphereIF_1a3de3a558f56392c6c36976d0a8f21813" prot="protected" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::EB2::SphereIF::m_radius</definition>
        <argsstring></argsstring>
        <name>m_radius</name>
        <qualifiedname>amrex::EB2::SphereIF::m_radius</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Sphere.H" line="38" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Sphere.H" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1SphereIF_1a43d80b03741314b72b14c9be08206eed" prot="protected" static="no" mutable="no">
        <type><ref refid="structamrex_1_1XDim3" kindref="compound">XDim3</ref></type>
        <definition>XDim3 amrex::EB2::SphereIF::m_center</definition>
        <argsstring></argsstring>
        <name>m_center</name>
        <qualifiedname>amrex::EB2::SphereIF::m_center</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Sphere.H" line="39" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Sphere.H" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1SphereIF_1a729f1a7c0e893a62bde14d9ce2aac7e5" prot="protected" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::EB2::SphereIF::m_sign</definition>
        <argsstring></argsstring>
        <name>m_sign</name>
        <qualifiedname>amrex::EB2::SphereIF::m_sign</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Sphere.H" line="41" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Sphere.H" bodystart="41" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1SphereIF_1a638528a2c99f2f26bd56c03a9b8fec21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::SphereIF::SphereIF</definition>
        <argsstring>(Real a_radius, const RealArray &amp;a_center, bool a_inside)</argsstring>
        <name>SphereIF</name>
        <qualifiedname>amrex::EB2::SphereIF::SphereIF</qualifiedname>
        <param>
          <type>Real</type>
          <declname>a_radius</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1aeb06fab72f85728954130adbe25c5397" kindref="member">RealArray</ref> &amp;</type>
          <declname>a_center</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>a_inside</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Sphere.H" line="18" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Sphere.H" bodystart="18" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1SphereIF_1a399f4e4a7eba8399705792f42f2ba9b5" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>__host__ __device__ Real</type>
        <definition>__host__ __device__ Real amrex::EB2::SphereIF::operator()</definition>
        <argsstring>(Real x, Real y, Real z) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>amrex::EB2::SphereIF::operator()</qualifiedname>
        <param>
          <type>Real</type>
          <declname>x</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>y</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Sphere.H" line="25" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Sphere.H" bodystart="25" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1SphereIF_1a5e743f7fb6209bbcc44381ac15588528" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>Real</type>
        <definition>Real amrex::EB2::SphereIF::operator()</definition>
        <argsstring>(const RealArray &amp;p) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>amrex::EB2::SphereIF::operator()</qualifiedname>
        <param>
          <type>const <ref refid="namespaceamrex_1aeb06fab72f85728954130adbe25c5397" kindref="member">RealArray</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Sphere.H" line="32" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Sphere.H" bodystart="32" bodyend="34"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>amrex::EB2::SphereIF</label>
        <link refid="classamrex_1_1EB2_1_1SphereIF"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::GPUable</label>
        <link refid="structamrex_1_1GPUable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>amrex::EB2::SphereIF</label>
        <link refid="classamrex_1_1EB2_1_1SphereIF"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_center</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::GPUable</label>
        <link refid="structamrex_1_1GPUable"/>
      </node>
      <node id="3">
        <label>amrex::XDim3</label>
        <link refid="structamrex_1_1XDim3"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Sphere.H" line="12" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Sphere.H" bodystart="14" bodyend="42"/>
    <listofallmembers>
      <member refid="classamrex_1_1EB2_1_1SphereIF_1a43d80b03741314b72b14c9be08206eed" prot="protected" virt="non-virtual"><scope>amrex::EB2::SphereIF</scope><name>m_center</name></member>
      <member refid="classamrex_1_1EB2_1_1SphereIF_1a3de3a558f56392c6c36976d0a8f21813" prot="protected" virt="non-virtual"><scope>amrex::EB2::SphereIF</scope><name>m_radius</name></member>
      <member refid="classamrex_1_1EB2_1_1SphereIF_1a729f1a7c0e893a62bde14d9ce2aac7e5" prot="protected" virt="non-virtual"><scope>amrex::EB2::SphereIF</scope><name>m_sign</name></member>
      <member refid="classamrex_1_1EB2_1_1SphereIF_1a399f4e4a7eba8399705792f42f2ba9b5" prot="public" virt="non-virtual"><scope>amrex::EB2::SphereIF</scope><name>operator()</name></member>
      <member refid="classamrex_1_1EB2_1_1SphereIF_1a5e743f7fb6209bbcc44381ac15588528" prot="public" virt="non-virtual"><scope>amrex::EB2::SphereIF</scope><name>operator()</name></member>
      <member refid="classamrex_1_1EB2_1_1SphereIF_1a638528a2c99f2f26bd56c03a9b8fec21" prot="public" virt="non-virtual"><scope>amrex::EB2::SphereIF</scope><name>SphereIF</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
