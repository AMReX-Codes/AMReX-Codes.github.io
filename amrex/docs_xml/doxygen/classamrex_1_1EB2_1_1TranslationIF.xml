<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1EB2_1_1TranslationIF" kind="class" language="C++" prot="public">
    <compoundname>amrex::EB2::TranslationIF</compoundname>
    <includes refid="AMReX__EB2__IF__Translation_8H" local="no">AMReX_EB2_IF_Translation.H</includes>
    <templateparamlist>
      <param>
        <type>class F</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1TranslationIF_1a00d2c22c6ba65bc4fdf65e95bd081799" prot="protected" static="no" mutable="no">
        <type>F</type>
        <definition>F amrex::EB2::TranslationIF&lt; F &gt;::m_f</definition>
        <argsstring></argsstring>
        <name>m_f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Translation.H" line="51" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Translation.H" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1TranslationIF_1aa65411b79204065ebd07950c94c0cb34" prot="protected" static="no" mutable="no">
        <type><ref refid="structamrex_1_1XDim3" kindref="compound">XDim3</ref></type>
        <definition>XDim3 amrex::EB2::TranslationIF&lt; F &gt;::m_offset</definition>
        <argsstring></argsstring>
        <name>m_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Translation.H" line="52" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Translation.H" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1TranslationIF_1ae88b1a6532af7b1ff43fa915a792d69f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::TranslationIF&lt; F &gt;::TranslationIF</definition>
        <argsstring>(F &amp;&amp;a_f, const RealArray &amp;a_offset)</argsstring>
        <name>TranslationIF</name>
        <param>
          <type>F &amp;&amp;</type>
          <declname>a_f</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref> &amp;</type>
          <declname>a_offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Translation.H" line="18" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Translation.H" bodystart="18" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1TranslationIF_1af79c95e057a5bfd6e427225ad605f3fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::TranslationIF&lt; F &gt;::TranslationIF</definition>
        <argsstring>(F const &amp;a_f, const RealArray &amp;a_offset)</argsstring>
        <name>TranslationIF</name>
        <param>
          <type>F const &amp;</type>
          <declname>a_f</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref> &amp;</type>
          <declname>a_offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Translation.H" line="22" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Translation.H" bodystart="22" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1TranslationIF_1a6b6f78cd6ae1e97586bc20093c3a7983" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::TranslationIF&lt; F &gt;::TranslationIF</definition>
        <argsstring>(const TranslationIF &amp;rhs)=default</argsstring>
        <name>TranslationIF</name>
        <param>
          <type>const <ref refid="classamrex_1_1EB2_1_1TranslationIF" kindref="compound">TranslationIF</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Translation.H" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1TranslationIF_1a3e7df757c85fe330b5edb7769ea72da9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::TranslationIF&lt; F &gt;::TranslationIF</definition>
        <argsstring>(TranslationIF &amp;&amp;rhs)=default</argsstring>
        <name>TranslationIF</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1TranslationIF" kindref="compound">TranslationIF</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Translation.H" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1TranslationIF_1ad6d2fc6373147e8ccc6b0807e3989ed5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1TranslationIF" kindref="compound">TranslationIF</ref> &amp;</type>
        <definition>TranslationIF&amp; amrex::EB2::TranslationIF&lt; F &gt;::operator=</definition>
        <argsstring>(const TranslationIF &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1EB2_1_1TranslationIF" kindref="compound">TranslationIF</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Translation.H" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1TranslationIF_1a60f1fc920223b1d1e42533e58d1ea62b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1TranslationIF" kindref="compound">TranslationIF</ref> &amp;</type>
        <definition>TranslationIF&amp; amrex::EB2::TranslationIF&lt; F &gt;::operator=</definition>
        <argsstring>(TranslationIF &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1TranslationIF" kindref="compound">TranslationIF</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Translation.H" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1TranslationIF_1a7fd15d74b4e540bd29e7eca133b78354" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Real</type>
        <definition>Real amrex::EB2::TranslationIF&lt; F &gt;::operator()</definition>
        <argsstring>(const RealArray &amp;p) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Translation.H" line="33" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Translation.H" bodystart="33" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1TranslationIF_1a5e944ef6c2a7af72086a20fc8068a54a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>F</defval>
          </param>
          <param>
            <type>class</type>
            <defval>typename std::enable_if&lt;<ref refid="structamrex_1_1EB2_1_1IsGPUable" kindref="compound">IsGPUable</ref>&lt;U&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> Real</type>
        <definition>AMREX_GPU_HOST_DEVICE Real amrex::EB2::TranslationIF&lt; F &gt;::operator()</definition>
        <argsstring>(AMREX_D_DECL(Real x, Real y, Real z)) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>AMREX_D_DECL(Real x, Real y, Real z)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Translation.H" line="42" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Translation.H" bodystart="42" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="6100">
        <label>Real</label>
      </node>
      <node id="6098">
        <label>amrex::EB2::TranslationIF&lt; F &gt;</label>
        <link refid="classamrex_1_1EB2_1_1TranslationIF"/>
        <childnode refid="6099" relation="usage">
          <edgelabel>m_offset</edgelabel>
        </childnode>
      </node>
      <node id="6099">
        <label>amrex::XDim3</label>
        <link refid="structamrex_1_1XDim3"/>
        <childnode refid="6100" relation="usage">
          <edgelabel>x</edgelabel>
          <edgelabel>y</edgelabel>
          <edgelabel>z</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Translation.H" line="15" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_EB2_IF_Translation.H" bodystart="14" bodyend="53"/>
    <listofallmembers>
      <member refid="classamrex_1_1EB2_1_1TranslationIF_1a00d2c22c6ba65bc4fdf65e95bd081799" prot="protected" virt="non-virtual"><scope>amrex::EB2::TranslationIF</scope><name>m_f</name></member>
      <member refid="classamrex_1_1EB2_1_1TranslationIF_1aa65411b79204065ebd07950c94c0cb34" prot="protected" virt="non-virtual"><scope>amrex::EB2::TranslationIF</scope><name>m_offset</name></member>
      <member refid="classamrex_1_1EB2_1_1TranslationIF_1a7fd15d74b4e540bd29e7eca133b78354" prot="public" virt="non-virtual"><scope>amrex::EB2::TranslationIF</scope><name>operator()</name></member>
      <member refid="classamrex_1_1EB2_1_1TranslationIF_1a5e944ef6c2a7af72086a20fc8068a54a" prot="public" virt="non-virtual"><scope>amrex::EB2::TranslationIF</scope><name>operator()</name></member>
      <member refid="classamrex_1_1EB2_1_1TranslationIF_1ad6d2fc6373147e8ccc6b0807e3989ed5" prot="public" virt="non-virtual"><scope>amrex::EB2::TranslationIF</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1TranslationIF_1a60f1fc920223b1d1e42533e58d1ea62b" prot="public" virt="non-virtual"><scope>amrex::EB2::TranslationIF</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1TranslationIF_1ae88b1a6532af7b1ff43fa915a792d69f" prot="public" virt="non-virtual"><scope>amrex::EB2::TranslationIF</scope><name>TranslationIF</name></member>
      <member refid="classamrex_1_1EB2_1_1TranslationIF_1af79c95e057a5bfd6e427225ad605f3fd" prot="public" virt="non-virtual"><scope>amrex::EB2::TranslationIF</scope><name>TranslationIF</name></member>
      <member refid="classamrex_1_1EB2_1_1TranslationIF_1a6b6f78cd6ae1e97586bc20093c3a7983" prot="public" virt="non-virtual"><scope>amrex::EB2::TranslationIF</scope><name>TranslationIF</name></member>
      <member refid="classamrex_1_1EB2_1_1TranslationIF_1a3e7df757c85fe330b5edb7769ea72da9" prot="public" virt="non-virtual"><scope>amrex::EB2::TranslationIF</scope><name>TranslationIF</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
