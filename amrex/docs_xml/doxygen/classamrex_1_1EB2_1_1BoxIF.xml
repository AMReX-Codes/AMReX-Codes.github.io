<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1EB2_1_1BoxIF" kind="class" language="C++" prot="public">
    <compoundname>amrex::EB2::BoxIF</compoundname>
    <basecompoundref refid="structamrex_1_1GPUable" prot="private" virt="non-virtual">amrex::GPUable</basecompoundref>
    <includes refid="AMReX__EB2__IF__Box_8H" local="no">AMReX_EB2_IF_Box.H</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1BoxIF_1a22bbb9f61e5ec1f1e7086880b73e2c39" prot="protected" static="no" mutable="no">
        <type><ref refid="structamrex_1_1XDim3" kindref="compound">XDim3</ref></type>
        <definition>XDim3 amrex::EB2::BoxIF::m_lo</definition>
        <argsstring></argsstring>
        <name>m_lo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Box.H" line="53" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Box.H" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1BoxIF_1a13836ae745cdf1ef18c14cc11e386afd" prot="protected" static="no" mutable="no">
        <type><ref refid="structamrex_1_1XDim3" kindref="compound">XDim3</ref></type>
        <definition>XDim3 amrex::EB2::BoxIF::m_hi</definition>
        <argsstring></argsstring>
        <name>m_hi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Box.H" line="54" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Box.H" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1EB2_1_1BoxIF_1a84095f8c7b235812724ab2d33c8d9130" prot="protected" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::EB2::BoxIF::m_sign</definition>
        <argsstring></argsstring>
        <name>m_sign</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Box.H" line="56" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Box.H" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1EB2_1_1BoxIF_1aa0f2ca11875600cbda14790fff29af9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::BoxIF::BoxIF</definition>
        <argsstring>(const RealArray &amp;a_lo, const RealArray &amp;a_hi, bool a_inside)</argsstring>
        <name>BoxIF</name>
        <param>
          <type>const <ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref> &amp;</type>
          <declname>a_lo</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref> &amp;</type>
          <declname>a_hi</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>a_inside</declname>
        </param>
        <briefdescription>
<para>inside: is the fluid inside the box? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Box.H" line="21" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Box.H" bodystart="21" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1BoxIF_1a6c14c8dcc7891cad84090d91bf781158" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::BoxIF::BoxIF</definition>
        <argsstring>(const BoxIF &amp;rhs) noexcept=default</argsstring>
        <name>BoxIF</name>
        <param>
          <type>const <ref refid="classamrex_1_1EB2_1_1BoxIF" kindref="compound">BoxIF</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Box.H" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1BoxIF_1adc7e20755a1c325a0250db7aa687742d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::EB2::BoxIF::BoxIF</definition>
        <argsstring>(BoxIF &amp;&amp;rhs) noexcept=default</argsstring>
        <name>BoxIF</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1BoxIF" kindref="compound">BoxIF</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Box.H" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1BoxIF_1a18e83b3403884afdd28e389235427917" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1BoxIF" kindref="compound">BoxIF</ref> &amp;</type>
        <definition>BoxIF&amp; amrex::EB2::BoxIF::operator=</definition>
        <argsstring>(const BoxIF &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1EB2_1_1BoxIF" kindref="compound">BoxIF</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Box.H" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1BoxIF_1a1b6692cc97dd6bccc694ddcb3ab8830d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1EB2_1_1BoxIF" kindref="compound">BoxIF</ref> &amp;</type>
        <definition>BoxIF&amp; amrex::EB2::BoxIF::operator=</definition>
        <argsstring>(BoxIF &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1BoxIF" kindref="compound">BoxIF</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Box.H" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1BoxIF_1ac9a51d8b51c8b2d730b289ea6f3600b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> Real</type>
        <definition>AMREX_GPU_HOST_DEVICE Real amrex::EB2::BoxIF::operator()</definition>
        <argsstring>(AMREX_D_DECL(Real x, Real y, Real z)) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>AMREX_D_DECL(Real x, Real y, Real z)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Box.H" line="33" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Box.H" bodystart="33" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1EB2_1_1BoxIF_1a3b02a8674dd81501122d702f0048cfe1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Real</type>
        <definition>Real amrex::EB2::BoxIF::operator()</definition>
        <argsstring>(const RealArray &amp;p) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="namespaceamrex_1a9de48c04056551924746c42f9eda3c8f" kindref="member">RealArray</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Box.H" line="46" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Box.H" bodystart="46" bodyend="49"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="698">
        <label>amrex::EB2::BoxIF</label>
        <link refid="classamrex_1_1EB2_1_1BoxIF"/>
        <childnode refid="699" relation="private-inheritance">
        </childnode>
      </node>
      <node id="699">
        <label>amrex::GPUable</label>
        <link refid="structamrex_1_1GPUable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="703">
        <label>Real</label>
      </node>
      <node id="702">
        <label>amrex::XDim3</label>
        <link refid="structamrex_1_1XDim3"/>
        <childnode refid="703" relation="usage">
          <edgelabel>x</edgelabel>
          <edgelabel>y</edgelabel>
          <edgelabel>z</edgelabel>
        </childnode>
      </node>
      <node id="700">
        <label>amrex::EB2::BoxIF</label>
        <link refid="classamrex_1_1EB2_1_1BoxIF"/>
        <childnode refid="701" relation="private-inheritance">
        </childnode>
        <childnode refid="702" relation="usage">
          <edgelabel>m_hi</edgelabel>
          <edgelabel>m_lo</edgelabel>
        </childnode>
        <childnode refid="703" relation="usage">
          <edgelabel>m_sign</edgelabel>
        </childnode>
      </node>
      <node id="701">
        <label>amrex::GPUable</label>
        <link refid="structamrex_1_1GPUable"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Box.H" line="17" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Box.H" bodystart="15" bodyend="57"/>
    <listofallmembers>
      <member refid="classamrex_1_1EB2_1_1BoxIF_1aa0f2ca11875600cbda14790fff29af9f" prot="public" virt="non-virtual"><scope>amrex::EB2::BoxIF</scope><name>BoxIF</name></member>
      <member refid="classamrex_1_1EB2_1_1BoxIF_1a6c14c8dcc7891cad84090d91bf781158" prot="public" virt="non-virtual"><scope>amrex::EB2::BoxIF</scope><name>BoxIF</name></member>
      <member refid="classamrex_1_1EB2_1_1BoxIF_1adc7e20755a1c325a0250db7aa687742d" prot="public" virt="non-virtual"><scope>amrex::EB2::BoxIF</scope><name>BoxIF</name></member>
      <member refid="classamrex_1_1EB2_1_1BoxIF_1a13836ae745cdf1ef18c14cc11e386afd" prot="protected" virt="non-virtual"><scope>amrex::EB2::BoxIF</scope><name>m_hi</name></member>
      <member refid="classamrex_1_1EB2_1_1BoxIF_1a22bbb9f61e5ec1f1e7086880b73e2c39" prot="protected" virt="non-virtual"><scope>amrex::EB2::BoxIF</scope><name>m_lo</name></member>
      <member refid="classamrex_1_1EB2_1_1BoxIF_1a84095f8c7b235812724ab2d33c8d9130" prot="protected" virt="non-virtual"><scope>amrex::EB2::BoxIF</scope><name>m_sign</name></member>
      <member refid="classamrex_1_1EB2_1_1BoxIF_1ac9a51d8b51c8b2d730b289ea6f3600b7" prot="public" virt="non-virtual"><scope>amrex::EB2::BoxIF</scope><name>operator()</name></member>
      <member refid="classamrex_1_1EB2_1_1BoxIF_1a3b02a8674dd81501122d702f0048cfe1" prot="public" virt="non-virtual"><scope>amrex::EB2::BoxIF</scope><name>operator()</name></member>
      <member refid="classamrex_1_1EB2_1_1BoxIF_1a18e83b3403884afdd28e389235427917" prot="public" virt="non-virtual"><scope>amrex::EB2::BoxIF</scope><name>operator=</name></member>
      <member refid="classamrex_1_1EB2_1_1BoxIF_1a1b6692cc97dd6bccc694ddcb3ab8830d" prot="public" virt="non-virtual"><scope>amrex::EB2::BoxIF</scope><name>operator=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
