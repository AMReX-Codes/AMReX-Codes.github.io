<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__MemPool_8H" kind="file" language="C++">
    <compoundname>AMReX_MemPool.H</compoundname>
    <includes refid="AMReX__REAL_8H" local="no">AMReX_REAL.H</includes>
    <includedby refid="AMReX_8cpp" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX.cpp</includedby>
    <includedby refid="AMReX__FArrayBox_8cpp" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FArrayBox.cpp</includedby>
    <includedby refid="AMReX__MemPool_8cpp" local="no">/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MemPool.cpp</includedby>
    <incdepgraph>
      <node id="27789">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MemPool.H</label>
        <link refid="AMReX_MemPool.H"/>
        <childnode refid="27790" relation="include">
        </childnode>
      </node>
      <node id="27791">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="27790">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="27791" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="27792">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MemPool.H</label>
        <link refid="AMReX_MemPool.H"/>
        <childnode refid="27793" relation="include">
        </childnode>
        <childnode refid="27794" relation="include">
        </childnode>
        <childnode refid="27795" relation="include">
        </childnode>
      </node>
      <node id="27795">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MemPool.cpp</label>
        <link refid="AMReX__MemPool_8cpp"/>
      </node>
      <node id="27794">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_FArrayBox.cpp</label>
        <link refid="AMReX__FArrayBox_8cpp"/>
      </node>
      <node id="27793">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX.cpp</label>
        <link refid="AMReX_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="AMReX__MemPool_8H_1a0c81aff9a077e415a6dba72b2b8b8e6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex_mempool_init</definition>
        <argsstring>()</argsstring>
        <name>amrex_mempool_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MemPool.H" line="7" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MemPool.cpp" bodystart="42" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__MemPool_8H_1a4dd49892147e767c1b44ffb5be366739" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex_mempool_finalize</definition>
        <argsstring>()</argsstring>
        <name>amrex_mempool_finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MemPool.H" line="8" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MemPool.cpp" bodystart="93" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__MemPool_8H_1a8da0fbd10f09ba39873bef20e13909b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* amrex_mempool_alloc</definition>
        <argsstring>(size_t n)</argsstring>
        <name>amrex_mempool_alloc</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MemPool.H" line="9" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MemPool.cpp" bodystart="99" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__MemPool_8H_1a02550f5d3498f47d6ef88f13340bb20b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex_mempool_free</definition>
        <argsstring>(void *p)</argsstring>
        <name>amrex_mempool_free</name>
        <param>
          <type>void *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MemPool.H" line="10" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MemPool.cpp" bodystart="117" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__MemPool_8H_1a29cdf545f17f50c622ecaf176189d29f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex_mempool_get_stats</definition>
        <argsstring>(int &amp;mp_min, int &amp;mp_max, int &amp;mp_tot)</argsstring>
        <name>amrex_mempool_get_stats</name>
        <param>
          <type>int &amp;</type>
          <declname>mp_min</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>mp_max</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>mp_tot</declname>
        </param>
        <briefdescription>
<para>min, max &amp; tot in MB </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MemPool.H" line="11" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MemPool.cpp" bodystart="136" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__MemPool_8H_1ac8b9eea3aaf3546e2d72f716c622b339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex_real_array_init</definition>
        <argsstring>(amrex_real *p, size_t nelems)</argsstring>
        <name>amrex_real_array_init</name>
        <param>
          <type><ref refid="AMReX__REAL_8H_1a9c34e09baf6d4d1b12637402203f9e9e" kindref="member">amrex_real</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nelems</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MemPool.H" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="AMReX__MemPool_8H_1a2018ca53f2071477df0913e3f5e1c5e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex_array_init_snan</definition>
        <argsstring>(amrex_real *p, size_t nelems)</argsstring>
        <name>amrex_array_init_snan</name>
        <param>
          <type><ref refid="AMReX__REAL_8H_1a9c34e09baf6d4d1b12637402203f9e9e" kindref="member">amrex_real</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nelems</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MemPool.H" line="13" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>BL_MEMPOOL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BL_MEMPOOL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__REAL_8H" kindref="compound">AMReX_REAL.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="AMReX__MemPool_8H_1a0c81aff9a077e415a6dba72b2b8b8e6a" kindref="member">amrex_mempool_init</ref><sp/>();</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="AMReX__MemPool_8H_1a4dd49892147e767c1b44ffb5be366739" kindref="member">amrex_mempool_finalize</ref><sp/>();</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="AMReX__MemPool_8H_1a8da0fbd10f09ba39873bef20e13909b9" kindref="member">amrex_mempool_alloc</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="AMReX__MemPool_8H_1a02550f5d3498f47d6ef88f13340bb20b" kindref="member">amrex_mempool_free</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="AMReX__MemPool_8H_1a29cdf545f17f50c622ecaf176189d29f" kindref="member">amrex_mempool_get_stats</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>mp_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>mp_max,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>mp_tot);<sp/><sp/></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="AMReX__MemPool_8H_1ac8b9eea3aaf3546e2d72f716c622b339" kindref="member">amrex_real_array_init</ref><sp/>(<ref refid="AMReX__REAL_8H_1a9c34e09baf6d4d1b12637402203f9e9e" kindref="member">amrex_real</ref>*<sp/>p,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nelems);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="AMReX__MemPool_8H_1a2018ca53f2071477df0913e3f5e1c5e8" kindref="member">amrex_array_init_snan</ref><sp/>(<ref refid="AMReX__REAL_8H_1a9c34e09baf6d4d1b12637402203f9e9e" kindref="member">amrex_real</ref>*<sp/>p,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nelems);</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_MemPool.H"/>
  </compounddef>
</doxygen>
