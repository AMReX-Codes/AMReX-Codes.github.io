<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1FillPatcher" kind="class" language="C++" prot="public">
    <compoundname>amrex::FillPatcher</compoundname>
    <includes refid="AMReX__FillPatcher_8H" local="no">AMReX_FillPatcher.H</includes>
    <templateparamlist>
      <param>
        <type>class MF</type>
        <defval><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1FillPatcher_1a28f56421d7e9e3da3f3c69396316c3ba" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref></type>
        <definition>BoxArray amrex::FillPatcher&lt; MF &gt;::m_fba</definition>
        <argsstring></argsstring>
        <name>m_fba</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="200" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatcher_1a5775b10f198c89e397a7e2a46b2179e4" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref></type>
        <definition>BoxArray amrex::FillPatcher&lt; MF &gt;::m_cba</definition>
        <argsstring></argsstring>
        <name>m_cba</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="201" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatcher_1ad106fffa846cdb025aee4f0f8e43c582" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref></type>
        <definition>DistributionMapping amrex::FillPatcher&lt; MF &gt;::m_fdm</definition>
        <argsstring></argsstring>
        <name>m_fdm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="202" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatcher_1a24b14c5172528271b48b0bd0bd1244fb" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref></type>
        <definition>DistributionMapping amrex::FillPatcher&lt; MF &gt;::m_cdm</definition>
        <argsstring></argsstring>
        <name>m_cdm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="203" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatcher_1a1c66886bf7f6b6444729cb8a783a900d" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::FillPatcher&lt; MF &gt;::m_fgeom</definition>
        <argsstring></argsstring>
        <name>m_fgeom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="204" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatcher_1a02e5ea36fb6bd2df914062d9e2317629" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::FillPatcher&lt; MF &gt;::m_cgeom</definition>
        <argsstring></argsstring>
        <name>m_cgeom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="205" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatcher_1a5c4673c519e93d3cb903313647fce320" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></type>
        <definition>IntVect amrex::FillPatcher&lt; MF &gt;::m_nghost</definition>
        <argsstring></argsstring>
        <name>m_nghost</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="206" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatcher_1a81344a3343158d0e1d9e14938e171ba9" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FillPatcher&lt; MF &gt;::m_ncomp</definition>
        <argsstring></argsstring>
        <name>m_ncomp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="207" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatcher_1a28281a3e9ad213ff779ae2b7978c8fff" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1InterpBase" kindref="compound">InterpBase</ref> *</type>
        <definition>InterpBase* amrex::FillPatcher&lt; MF &gt;::m_interp</definition>
        <argsstring></argsstring>
        <name>m_interp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="208" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatcher_1a8c7a1666b20fe8bfad0377ce4fa278d8" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1EB2_1_1IndexSpace" kindref="compound">EB2::IndexSpace</ref> const  *</type>
        <definition>EB2::IndexSpace const* amrex::FillPatcher&lt; MF &gt;::m_eb_index_space</definition>
        <argsstring></argsstring>
        <name>m_eb_index_space</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="209" column="27" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatcher_1ab2eadd469cce946d670a7de5a16e4f79" prot="private" static="no" mutable="no">
        <type>MF</type>
        <definition>MF amrex::FillPatcher&lt; MF &gt;::m_sfine</definition>
        <argsstring></argsstring>
        <name>m_sfine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="210" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatcher_1a97a8d3b8adf15cc4121246a77d7d23e0" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></type>
        <definition>IntVect amrex::FillPatcher&lt; MF &gt;::m_ratio</definition>
        <argsstring></argsstring>
        <name>m_ratio</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="211" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatcher_1a19e35173a3232a3505a3c4c3b30e86e5" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::pair&lt; Real, std::unique_ptr&lt; MF &gt; &gt; &gt;</type>
        <definition>Vector&lt;std::pair&lt;Real,std::unique_ptr&lt;MF&gt; &gt; &gt; amrex::FillPatcher&lt; MF &gt;::m_cf_crse_data</definition>
        <argsstring></argsstring>
        <name>m_cf_crse_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="212" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatcher_1a44f373925ff45d0ff777315114039e5b" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; MF &gt;</type>
        <definition>std::unique_ptr&lt;MF&gt; amrex::FillPatcher&lt; MF &gt;::m_cf_crse_data_tmp</definition>
        <argsstring></argsstring>
        <name>m_cf_crse_data_tmp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="213" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatcher_1a43df40e0e8dbd2de56018b5180aeabe2" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; MF &gt;</type>
        <definition>std::unique_ptr&lt;MF&gt; amrex::FillPatcher&lt; MF &gt;::m_cf_fine_data</definition>
        <argsstring></argsstring>
        <name>m_cf_fine_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="214" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatcher_1aeef4e08d1768a02cae4c25c4c5cfd1d5" prot="private" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::FillPatcher&lt; MF &gt;::m_dt_coarse</definition>
        <argsstring></argsstring>
        <name>m_dt_coarse</name>
        <initializer>= std::numeric_limits&lt;Real&gt;::lowest()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="215" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="215" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1FillPatcher_1af190f9e264e08dd6fec696c4ff84c53b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FillPatcher&lt; MF &gt;::FillPatcher</definition>
        <argsstring>(BoxArray const &amp;fba, DistributionMapping const &amp;fdm, Geometry const &amp;fgeom, BoxArray const &amp;cba, DistributionMapping const &amp;cdm, Geometry const &amp;cgeom, IntVect const &amp;nghost, int ncomp, InterpBase *interp, EB2::IndexSpace const *eb_index_space=nullptr)</argsstring>
        <name>FillPatcher</name>
        <param>
          <type><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> const &amp;</type>
          <declname>fba</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> const &amp;</type>
          <declname>fdm</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>fgeom</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> const &amp;</type>
          <declname>cba</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> const &amp;</type>
          <declname>cdm</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>cgeom</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> const &amp;</type>
          <declname>nghost</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1InterpBase" kindref="compound">InterpBase</ref> *</type>
          <declname>interp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1EB2_1_1IndexSpace" kindref="compound">EB2::IndexSpace</ref> const *</type>
          <declname>eb_index_space</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Constructor of <ref refid="classamrex_1_1FillPatcher" kindref="compound">FillPatcher</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fba</parametername>
</parameternamelist>
<parameterdescription>
<para>fine level <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fdm</parametername>
</parameternamelist>
<parameterdescription>
<para>fine level <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fgeom</parametername>
</parameternamelist>
<parameterdescription>
<para>fine level <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cba</parametername>
</parameternamelist>
<parameterdescription>
<para>coarse level <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cdm</parametername>
</parameternamelist>
<parameterdescription>
<para>coarse level <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cgeom</parametername>
</parameternamelist>
<parameterdescription>
<para>coarse level <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nghost</parametername>
</parameternamelist>
<parameterdescription>
<para>max number of ghost cells to be filled at coarse/fine boundary </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ncomp</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of components </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interp</parametername>
</parameternamelist>
<parameterdescription>
<para>for spatial interpolation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eb_index_space</parametername>
</parameternamelist>
<parameterdescription>
<para>optional argument for specifying EB IndexSpace </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="90" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="221" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatcher_1ad1b6281e67325dc9e99fedc7b08e0b14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename BC</type>
          </param>
          <param>
            <type>typename PreInterpHook</type>
            <defval><ref refid="structamrex_1_1NullInterpHook" kindref="compound">NullInterpHook</ref>&lt;MF&gt;</defval>
          </param>
          <param>
            <type>typename PostInterpHook</type>
            <defval><ref refid="structamrex_1_1NullInterpHook" kindref="compound">NullInterpHook</ref>&lt;MF&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::FillPatcher&lt; MF &gt;::fill</definition>
        <argsstring>(MF &amp;mf, IntVect const &amp;nghost, Real time, Vector&lt; MF * &gt; const &amp;crse_data, Vector&lt; Real &gt; const &amp;crse_time, Vector&lt; MF * &gt; const &amp;fine_data, Vector&lt; Real &gt; const &amp;fine_time, int scomp, int dcomp, int ncomp, BC &amp;cbc, int cbccomp, BC &amp;fbc, int fbccomp, Vector&lt; BCRec &gt; const &amp;bcs, int bcscomp, PreInterpHook const &amp;pre_interp={}, PostInterpHook const &amp;post_interp={})</argsstring>
        <name>fill</name>
        <param>
          <type>MF &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> const &amp;</type>
          <declname>nghost</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF * &gt; const &amp;</type>
          <declname>crse_data</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt; const &amp;</type>
          <declname>crse_time</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF * &gt; const &amp;</type>
          <declname>fine_data</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt; const &amp;</type>
          <declname>fine_time</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type>BC &amp;</type>
          <declname>cbc</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>cbccomp</declname>
        </param>
        <param>
          <type>BC &amp;</type>
          <declname>fbc</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>fbccomp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &gt; const &amp;</type>
          <declname>bcs</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>bcscomp</declname>
        </param>
        <param>
          <type>PreInterpHook const &amp;</type>
          <declname>pre_interp</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>PostInterpHook const &amp;</type>
          <declname>post_interp</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Function to fill data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mf</parametername>
</parameternamelist>
<parameterdescription>
<para>destination MultiFab/FabArray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nghost</parametername>
</parameternamelist>
<parameterdescription>
<para>number of ghost cells to fill. This must be &lt;= what&apos;s provided to the constructor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>time associated with the destination </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>crse_data</parametername>
</parameternamelist>
<parameterdescription>
<para>coarse level data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>crse_time</parametername>
</parameternamelist>
<parameterdescription>
<para>time associated with the coarse data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fine_data</parametername>
</parameternamelist>
<parameterdescription>
<para>fine level data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fine_time</parametername>
</parameternamelist>
<parameterdescription>
<para>time associated with the fine data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scomp</parametername>
</parameternamelist>
<parameterdescription>
<para>starting component of the source </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dcomp</parametername>
</parameternamelist>
<parameterdescription>
<para>starting component of the destination </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ncomp</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of components to fill </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cbc</parametername>
</parameternamelist>
<parameterdescription>
<para>for filling coarse level physical BC </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cbccomp</parametername>
</parameternamelist>
<parameterdescription>
<para>starting component of the coarse level BC functor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fbc</parametername>
</parameternamelist>
<parameterdescription>
<para>for filling fine level physical BC </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fbccomp</parametername>
</parameternamelist>
<parameterdescription>
<para>starting component of the fine level BC functor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bcs</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> specifying physical boundary types \parame bcscomp starting component of the <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pre_interp</parametername>
</parameternamelist>
<parameterdescription>
<para>optional pre-interpolation hook for modifying the coarse data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>post_interp</parametername>
</parameternamelist>
<parameterdescription>
<para>optional post-interpolation hook for modifying the fine data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="127" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="252" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatcher_1ab5b77e740f3c652055c218e494c0168c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename BC</type>
          </param>
          <param>
            <type>typename PreInterpHook</type>
            <defval><ref refid="structamrex_1_1NullInterpHook" kindref="compound">NullInterpHook</ref>&lt;MF&gt;</defval>
          </param>
          <param>
            <type>typename PostInterpHook</type>
            <defval><ref refid="structamrex_1_1NullInterpHook" kindref="compound">NullInterpHook</ref>&lt;MF&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::FillPatcher&lt; MF &gt;::fillCoarseFineBoundary</definition>
        <argsstring>(MF &amp;mf, IntVect const &amp;nghost, Real time, Vector&lt; MF * &gt; const &amp;crse_data, Vector&lt; Real &gt; const &amp;crse_time, int scomp, int dcomp, int ncomp, BC &amp;cbc, int cbccomp, Vector&lt; BCRec &gt; const &amp;bcs, int bcscomp, PreInterpHook const &amp;pre_interp={}, PostInterpHook const &amp;post_interp={})</argsstring>
        <name>fillCoarseFineBoundary</name>
        <param>
          <type>MF &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> const &amp;</type>
          <declname>nghost</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF * &gt; const &amp;</type>
          <declname>crse_data</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Real &gt; const &amp;</type>
          <declname>crse_time</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type>BC &amp;</type>
          <declname>cbc</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>cbccomp</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &gt; const &amp;</type>
          <declname>bcs</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>bcscomp</declname>
        </param>
        <param>
          <type>PreInterpHook const &amp;</type>
          <declname>pre_interp</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>PostInterpHook const &amp;</type>
          <declname>post_interp</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Function to fill data at coarse/fine boundary only. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mf</parametername>
</parameternamelist>
<parameterdescription>
<para>destination MultiFab/FabArray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nghost</parametername>
</parameternamelist>
<parameterdescription>
<para>number of ghost cells to fill. This must be &lt;= what&apos;s provided to the constructor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>time associated with the destination </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>crse_data</parametername>
</parameternamelist>
<parameterdescription>
<para>coarse level data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>crse_time</parametername>
</parameternamelist>
<parameterdescription>
<para>time associated with the coarse data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scomp</parametername>
</parameternamelist>
<parameterdescription>
<para>starting component of the source </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dcomp</parametername>
</parameternamelist>
<parameterdescription>
<para>starting component of the destination </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ncomp</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of components to fill </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cbc</parametername>
</parameternamelist>
<parameterdescription>
<para>for filling coarse level physical BC </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cbccomp</parametername>
</parameternamelist>
<parameterdescription>
<para>starting component of the coarse level BC functor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bcs</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> specifying physical boundary types </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bcscomp</parametername>
</parameternamelist>
<parameterdescription>
<para>starting component of the <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pre_interp</parametername>
</parameternamelist>
<parameterdescription>
<para>optional pre-interpolation hook for modifying the coarse data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>post_interp</parametername>
</parameternamelist>
<parameterdescription>
<para>optional post-interpolation hook for modifying the fine data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="158" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="286" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatcher_1ad059e9960589afeff57d54307acd2dca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>order</declname>
            <defname>order</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::FillPatcher&lt; MF &gt;::storeRKCoarseData</definition>
        <argsstring>(Real time, Real dt, MF const &amp;S_old, Array&lt; MF, order &gt; const &amp;RK_k)</argsstring>
        <name>storeRKCoarseData</name>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>MF const &amp;</type>
          <declname>S_old</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; MF, order &gt; const &amp;</type>
          <declname>RK_k</declname>
        </param>
        <briefdescription>
<para>Store coarse AMR level data for RK3 and RK4. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>order</parametername>
</parameternamelist>
<parameterdescription>
<para>RK order. Must be 3 or 4. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>time at the beginning of the step </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>time step </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>S_old</parametername>
</parameternamelist>
<parameterdescription>
<para>data at time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RK_k</parametername>
</parameternamelist>
<parameterdescription>
<para>right-hand side at RK stages </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="177" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="397" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatcher_1aa756e7fa531116007159b132f0312577" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename BC</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::FillPatcher&lt; MF &gt;::fillRK</definition>
        <argsstring>(int stage, int iteration, int ncycle, MF &amp;mf, Real time, BC &amp;cbc, BC &amp;fbc, Vector&lt; BCRec &gt; const &amp;bcs)</argsstring>
        <name>fillRK</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>stage</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>iteration</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncycle</declname>
        </param>
        <param>
          <type>MF &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type>BC &amp;</type>
          <declname>cbc</declname>
        </param>
        <param>
          <type>BC &amp;</type>
          <declname>fbc</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &gt; const &amp;</type>
          <declname>bcs</declname>
        </param>
        <briefdescription>
<para>Fill ghost cells of fine AMR level for RK3 and RK4. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stage</parametername>
</parameternamelist>
<parameterdescription>
<para>RK stage number starting from 1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iteration</parametername>
</parameternamelist>
<parameterdescription>
<para>iteration number on fine level during a coarse time step. For an AMR simulation with subcycling and a refinement ratio of 2, the number is either 1 or 2, denoting the first and second substep, respectively. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ncycle</parametername>
</parameternamelist>
<parameterdescription>
<para>number of subcyling steps. It&apos;s usually 2 or 4. Without subcycling, this will be 1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cbc</parametername>
</parameternamelist>
<parameterdescription>
<para>filling physical boundary on coarse level </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fbc</parametername>
</parameternamelist>
<parameterdescription>
<para>filling physical boundary on fine level </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bcs</parametername>
</parameternamelist>
<parameterdescription>
<para>physical BC types </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="195" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="417" bodyend="581"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1FillPatcher_1ad5c0afcb0f98eda5ed211fa3e232d6ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structamrex_1_1FabArrayBase_1_1FPinfo" kindref="compound">FabArrayBase::FPinfo</ref> const  &amp;</type>
        <definition>FabArrayBase::FPinfo const  &amp; amrex::FillPatcher&lt; MF &gt;::getFPinfo</definition>
        <argsstring>()</argsstring>
        <name>getFPinfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="217" column="32" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="276" bodyend="281"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classamrex_1_1FillPatcher" kindref="compound">FillPatcher</ref> is for filling a fine level MultiFab/FabArray. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is not as general as the FillPatchTwoLevels functions. It fills the fine ghost cells not overlapping any fine level valid cells with interpolation of the coarse data. Then it fills the fine ghost cells overlapping fine level valid cells with the fine level data. If the valid cells of the destination need to be filled, it will be done as well. Finally, it will fill the physical bounbary using the user provided functor. The <computeroutput>fill</computeroutput> member function can be used to do the operations just described. Alternatively, one can also use the <computeroutput>fillCoarseFineBounary</computeroutput> to fill the ghost cells at the coarse/fine boundary only. Then one can manually call FillBoundary to fill the other ghost cells, and use the physical BC functor to handle the physical boundeary.</para>
<para>The communication of the coarse data needed for spatial interpolation is optimized at the cost of being error-prone. One must follow the following guidelines.</para>
<para>(1) This class is for filling data during time stepping, not during regrid. The fine level data passed as input must have the same <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> and <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> as the destination. It&apos;s OK they are the same <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>. For <ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref> based codes, <ref refid="classamrex_1_1AmrLevel_1af7dbabf3cd9767f5e38dc96157986618" kindref="member">AmrLevel::FillPatcherFill</ref> wil try to use <ref refid="classamrex_1_1FillPatcher" kindref="compound">FillPatcher</ref> if it can, and <ref refid="classamrex_1_1AmrLevel_1a55c1a2d0040ba28bf022fb293113a5f2" kindref="member">AmrLevel::FillPatch</ref> will use the fillpatch functions.</para>
<para>(2) When to build? It is recommended that one uses <computeroutput>std::unique_ptr</computeroutput> to store the <ref refid="classamrex_1_1FillPatcher" kindref="compound">FillPatcher</ref> object, and build it only when it is needed and it&apos;s a nullptr. For <ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref> based codes, the <ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref> class will build it for you as needed when you call the <ref refid="classamrex_1_1AmrLevel_1af7dbabf3cd9767f5e38dc96157986618" kindref="member">AmrLevel::FillPatcherFill</ref> function.</para>
<para>(3) When to destroy? Usually, we do time steppig on a coarse level first. Then we recursively do time stepping on fine levels. After the finer level finishes, we do reflux and averge the fine data down to the coarse level. After that we should destroy the <ref refid="classamrex_1_1FillPatcher" kindref="compound">FillPatcher</ref> object associated with these two levels, because the coarse data stored in the object has become outdated. For <ref refid="classamrex_1_1AmrCore" kindref="compound">AmrCore</ref> based codes, you could use Tests/Amr/Advection_AmrCore as an example. For <ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref> based codes, you should do this in the post_timestep virtual function (see Tests/Amr/Advection_AmrLevel for an example).</para>
<para>(4) The source MultiFabs/FabArrays (i.e., the crse_data and fine_data arguments of the fill function) need to have exactly the same number of components as the ncomp argument of the constructor, even though it&apos;s allowed to fill only some of the components with the fill function.</para>
<para>(5) This only works for cell-centered and nodal data.</para>
<para>This class also provides support for <ref refid="namespaceamrex_1_1RungeKutta_1a8375e990286224b1183ba166695978e1" kindref="member">RungeKutta::RK3</ref> and <ref refid="namespaceamrex_1_1RungeKutta_1af07c90c5bce95ed34b87a09e4d45f7b2" kindref="member">RungeKutta::RK4</ref>. The storeRKCoarseData function can be used to store coarse AMR level data that are needed for filling fine level data&apos;s ghost cells in this class. The <computeroutput>fillRK</computeroutput> function can be used to fill ghost cells for fine AMR levels. This operation at the coarse/fine boundary is non-trivial for RK orders higher than 2. Note that it is expected that time stepping on the coarse level is perform before any fine level time stepping, and it&apos;s the user&apos;s reponsibility to properly create and destroy this object. See <ref refid="classamrex_1_1AmrLevel_1a95aea02fe7abbf3d1e5cd58ee5ff7d41" kindref="member">AmrLevel::RK</ref> for an example of using the <ref refid="namespaceamrex_1_1RungeKutta" kindref="compound">RungeKutta</ref> functions and <ref refid="classamrex_1_1FillPatcher" kindref="compound">FillPatcher</ref> together. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="60">
        <label>amrex::BaseFab&lt; Real &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="61" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="44" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="48">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="63">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="30">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="65">
        <label>std::unique_ptr&lt; amrex::FBData&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="11">
        <label>amrex::EB2::IndexSpace</label>
        <link refid="classamrex_1_1EB2_1_1IndexSpace"/>
        <childnode refid="12" relation="usage">
          <edgelabel>m_instance</edgelabel>
        </childnode>
      </node>
      <node id="49">
        <label>std::map&lt; amrex::FabArrayBase::BDKey, int &gt;</label>
        <childnode refid="33" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="71">
        <label>amrex::InterpBase</label>
        <link refid="classamrex_1_1InterpBase"/>
      </node>
      <node id="22">
        <label>K</label>
      </node>
      <node id="31">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="8">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="8" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>T</label>
      </node>
      <node id="66">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="4">
        <label>Real</label>
      </node>
      <node id="13">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="69">
        <label>amrex::MultiArray4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
      </node>
      <node id="61">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="62" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>amrex::GpuArray&lt; float, AMREX_SPACEDIM &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="56">
        <label>amrex::MultiArray4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
      </node>
      <node id="21">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="22" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="62">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="63" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="46">
        <label>std::map&lt; std::string, amrex::FabArrayBase::meminfo &gt;</label>
        <childnode refid="47" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="35">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="8" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
      </node>
      <node id="45">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="25">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="26" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="68">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="26">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="27" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
      </node>
      <node id="58">
        <label>std::vector&lt; FArrayBox * &gt;</label>
        <childnode refid="59" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="50">
        <label>std::multimap&lt; K, T &gt;</label>
        <childnode refid="22" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="52">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="53" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>amrex::Vector&lt; std::pair&lt; Real, std::unique_ptr&lt; MultiFab &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="51">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="44" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::FillPatcher&lt; MF &gt;</label>
        <link refid="classamrex_1_1FillPatcher"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_cgeom</edgelabel>
          <edgelabel>m_fgeom</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_eb_index_space</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>m_cf_crse_data</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>m_cdm</edgelabel>
          <edgelabel>m_fdm</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_nghost</edgelabel>
          <edgelabel>m_ratio</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>m_sfine</edgelabel>
        </childnode>
        <childnode refid="70" relation="usage">
          <edgelabel>m_cf_crse_data_tmp</edgelabel>
          <edgelabel>m_cf_fine_data</edgelabel>
        </childnode>
        <childnode refid="71" relation="usage">
          <edgelabel>m_interp</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_dt_coarse</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>m_cba</edgelabel>
          <edgelabel>m_fba</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="4" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="70">
        <label>std::unique_ptr&lt; MultiFab &gt;</label>
      </node>
      <node id="12">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::EB2::IndexSpace &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="8" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="57">
        <label>std::unique_ptr&lt; amrex::PCData&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="53">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
      </node>
      <node id="39">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="40" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>std::shared_ptr&lt; amrex::DistributionMapping::Ref &gt;</label>
      </node>
      <node id="3">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="4" relation="usage">
          <edgelabel>dx</edgelabel>
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>amrex::FabArrayBase::ParForInfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1ParForInfo"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_ng</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_boxes</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="40">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="41" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>m_ownership</edgelabel>
        </childnode>
      </node>
      <node id="67">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="64">
        <label>amrex::FABio</label>
        <link refid="classamrex_1_1FABio"/>
      </node>
      <node id="47">
        <label>amrex::FabArrayBase::meminfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1meminfo"/>
      </node>
      <node id="16">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
        <childnode refid="17" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="34" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="55">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; FArrayBox &gt; &gt;</label>
      </node>
      <node id="18">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>roundoff_hi_f</edgelabel>
          <edgelabel>roundoff_lo_f</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>roundoff_hi_d</edgelabel>
          <edgelabel>roundoff_lo_d</edgelabel>
        </childnode>
      </node>
      <node id="54">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
      </node>
      <node id="10">
        <label>amrex::GpuArray&lt; double, AMREX_SPACEDIM &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="59">
        <label>amrex::FArrayBox</label>
        <link refid="classamrex_1_1FArrayBox"/>
        <childnode refid="60" relation="public-inheritance">
        </childnode>
        <childnode refid="64" relation="usage">
          <edgelabel>fabio</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>initval</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="58" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="61" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="66" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
        <childnode refid="67" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="69" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="35" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>std::multimap&lt; amrex::FabArrayBase::BDKey, amrex::FabArrayBase::ParForInfo * &gt;</label>
        <childnode refid="24" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>amrex::Vector&lt; amrex::Box &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="21" relation="usage">
          <edgelabel>m_TheTileArrayCache</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>m_TheParForCache</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>m_mem_usage</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>m_BD_count</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>m_TheCPCache</edgelabel>
          <edgelabel>m_TheCrseFineCache</edgelabel>
          <edgelabel>m_TheFBCache</edgelabel>
          <edgelabel>m_TheFillPatchCache</edgelabel>
          <edgelabel>m_ThePolarBCache</edgelabel>
          <edgelabel>m_TheRB180Cache</edgelabel>
          <edgelabel>m_TheRB90Cache</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>ownership</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>m_region_tag</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>std::vector&lt; int &gt;</label>
      </node>
      <node id="44">
        <label>std::string</label>
        <childnode refid="45" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" line="72" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_FillPatcher.H" bodystart="73" bodyend="218"/>
    <listofallmembers>
      <member refid="classamrex_1_1FillPatcher_1ad1b6281e67325dc9e99fedc7b08e0b14" prot="public" virt="non-virtual"><scope>amrex::FillPatcher</scope><name>fill</name></member>
      <member refid="classamrex_1_1FillPatcher_1ab5b77e740f3c652055c218e494c0168c" prot="public" virt="non-virtual"><scope>amrex::FillPatcher</scope><name>fillCoarseFineBoundary</name></member>
      <member refid="classamrex_1_1FillPatcher_1af190f9e264e08dd6fec696c4ff84c53b" prot="public" virt="non-virtual"><scope>amrex::FillPatcher</scope><name>FillPatcher</name></member>
      <member refid="classamrex_1_1FillPatcher_1aa756e7fa531116007159b132f0312577" prot="public" virt="non-virtual"><scope>amrex::FillPatcher</scope><name>fillRK</name></member>
      <member refid="classamrex_1_1FillPatcher_1ad5c0afcb0f98eda5ed211fa3e232d6ad" prot="private" virt="non-virtual"><scope>amrex::FillPatcher</scope><name>getFPinfo</name></member>
      <member refid="classamrex_1_1FillPatcher_1a5775b10f198c89e397a7e2a46b2179e4" prot="private" virt="non-virtual"><scope>amrex::FillPatcher</scope><name>m_cba</name></member>
      <member refid="classamrex_1_1FillPatcher_1a24b14c5172528271b48b0bd0bd1244fb" prot="private" virt="non-virtual"><scope>amrex::FillPatcher</scope><name>m_cdm</name></member>
      <member refid="classamrex_1_1FillPatcher_1a19e35173a3232a3505a3c4c3b30e86e5" prot="private" virt="non-virtual"><scope>amrex::FillPatcher</scope><name>m_cf_crse_data</name></member>
      <member refid="classamrex_1_1FillPatcher_1a44f373925ff45d0ff777315114039e5b" prot="private" virt="non-virtual"><scope>amrex::FillPatcher</scope><name>m_cf_crse_data_tmp</name></member>
      <member refid="classamrex_1_1FillPatcher_1a43df40e0e8dbd2de56018b5180aeabe2" prot="private" virt="non-virtual"><scope>amrex::FillPatcher</scope><name>m_cf_fine_data</name></member>
      <member refid="classamrex_1_1FillPatcher_1a02e5ea36fb6bd2df914062d9e2317629" prot="private" virt="non-virtual"><scope>amrex::FillPatcher</scope><name>m_cgeom</name></member>
      <member refid="classamrex_1_1FillPatcher_1aeef4e08d1768a02cae4c25c4c5cfd1d5" prot="private" virt="non-virtual"><scope>amrex::FillPatcher</scope><name>m_dt_coarse</name></member>
      <member refid="classamrex_1_1FillPatcher_1a8c7a1666b20fe8bfad0377ce4fa278d8" prot="private" virt="non-virtual"><scope>amrex::FillPatcher</scope><name>m_eb_index_space</name></member>
      <member refid="classamrex_1_1FillPatcher_1a28f56421d7e9e3da3f3c69396316c3ba" prot="private" virt="non-virtual"><scope>amrex::FillPatcher</scope><name>m_fba</name></member>
      <member refid="classamrex_1_1FillPatcher_1ad106fffa846cdb025aee4f0f8e43c582" prot="private" virt="non-virtual"><scope>amrex::FillPatcher</scope><name>m_fdm</name></member>
      <member refid="classamrex_1_1FillPatcher_1a1c66886bf7f6b6444729cb8a783a900d" prot="private" virt="non-virtual"><scope>amrex::FillPatcher</scope><name>m_fgeom</name></member>
      <member refid="classamrex_1_1FillPatcher_1a28281a3e9ad213ff779ae2b7978c8fff" prot="private" virt="non-virtual"><scope>amrex::FillPatcher</scope><name>m_interp</name></member>
      <member refid="classamrex_1_1FillPatcher_1a81344a3343158d0e1d9e14938e171ba9" prot="private" virt="non-virtual"><scope>amrex::FillPatcher</scope><name>m_ncomp</name></member>
      <member refid="classamrex_1_1FillPatcher_1a5c4673c519e93d3cb903313647fce320" prot="private" virt="non-virtual"><scope>amrex::FillPatcher</scope><name>m_nghost</name></member>
      <member refid="classamrex_1_1FillPatcher_1a97a8d3b8adf15cc4121246a77d7d23e0" prot="private" virt="non-virtual"><scope>amrex::FillPatcher</scope><name>m_ratio</name></member>
      <member refid="classamrex_1_1FillPatcher_1ab2eadd469cce946d670a7de5a16e4f79" prot="private" virt="non-virtual"><scope>amrex::FillPatcher</scope><name>m_sfine</name></member>
      <member refid="classamrex_1_1FillPatcher_1ad059e9960589afeff57d54307acd2dca" prot="public" virt="non-virtual"><scope>amrex::FillPatcher</scope><name>storeRKCoarseData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
