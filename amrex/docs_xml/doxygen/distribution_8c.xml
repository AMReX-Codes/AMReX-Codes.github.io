<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="distribution_8c" kind="file" language="C++">
    <compoundname>distribution.c</compoundname>
    <includes local="no">assert.h</includes>
    <includes local="no">mpi.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdint.h</includes>
    <includes refid="distribution__c_8h" local="yes">distribution_c.h</includes>
    <incdepgraph>
      <node id="50730">
        <label>stdbool.h</label>
      </node>
      <node id="50728">
        <label>assert.h</label>
      </node>
      <node id="50734">
        <label>stdint.h</label>
      </node>
      <node id="50733">
        <label>stdlib.h</label>
      </node>
      <node id="50736">
        <label>complex-type.h</label>
        <link refid="complex-type_8h"/>
        <childnode refid="50737" relation="include">
        </childnode>
        <childnode refid="50738" relation="include">
        </childnode>
      </node>
      <node id="50731">
        <label>stddef.h</label>
      </node>
      <node id="50735">
        <label>distribution_c.h</label>
        <link refid="distribution__c_8h"/>
        <childnode refid="50729" relation="include">
        </childnode>
        <childnode refid="50736" relation="include">
        </childnode>
      </node>
      <node id="50737">
        <label>complex.h</label>
      </node>
      <node id="50738">
        <label>math.h</label>
      </node>
      <node id="50729">
        <label>mpi.h</label>
      </node>
      <node id="50727">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c</label>
        <link refid="distribution.c"/>
        <childnode refid="50728" relation="include">
        </childnode>
        <childnode refid="50729" relation="include">
        </childnode>
        <childnode refid="50730" relation="include">
        </childnode>
        <childnode refid="50731" relation="include">
        </childnode>
        <childnode refid="50732" relation="include">
        </childnode>
        <childnode refid="50733" relation="include">
        </childnode>
        <childnode refid="50734" relation="include">
        </childnode>
        <childnode refid="50735" relation="include">
        </childnode>
      </node>
      <node id="50732">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="distribution_8c_1acf625a919ad096563f5d50a5f2b0cf8b" prot="public" static="no">
        <name>USE_SLAB_WORKAROUND</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="66" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="distribution_8c_1a4b0f3914f3a5d4e3126ae2331c245c69" prot="public" static="no">
        <name>DEBUG_CONDITION</name>
        <initializer>false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="77" column="9" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06c" prot="public" static="no">
        <name>@4</name>
        <enumvalue id="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06cadb2db6e983734128c679d2d6f9660d0a" prot="public">
          <name>REDISTRIBUTE_1_TO_3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06ca5f1e479eb94259389275a715271d0e26" prot="public">
          <name>REDISTRIBUTE_3_TO_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06ca93d616dcfe604bebc3850ec51b2f5d15" prot="public">
          <name>REDISTRIBUTE_2_TO_3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06cabbf46de6625103b22139e067e3d181fb" prot="public">
          <name>REDISTRIBUTE_3_TO_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="69" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="69" bodyend="74"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="distribution_8c_1aaed7bb4d93b34151fd86f295349cea4e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>static char* separator</definition>
        <argsstring>(int i, int n)</argsstring>
        <name>separator</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="80" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="distribution_8c_1ae4c86ea9f91153635f20d44b9de912aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Coord_cube</definition>
        <argsstring>(int myrank, int coord[], distribution_t *d)</argsstring>
        <name>Coord_cube</name>
        <param>
          <type>int</type>
          <declname>myrank</declname>
        </param>
        <param>
          <type>int</type>
          <declname>coord</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="structdistribution__t" kindref="compound">distribution_t</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="88" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="88" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="distribution_8c_1ad1ea5389446cfca9012818d81599d81d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Rank_cube</definition>
        <argsstring>(int *myrank, int coord[], distribution_t *d)</argsstring>
        <name>Rank_cube</name>
        <param>
          <type>int *</type>
          <declname>myrank</declname>
        </param>
        <param>
          <type>int</type>
          <declname>coord</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="structdistribution__t" kindref="compound">distribution_t</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="98" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="98" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="distribution_8c_1af311497240c534b99258fcc520c8eebe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Coord_x_pencils</definition>
        <argsstring>(int myrank, int coord[], distribution_t *d)</argsstring>
        <name>Coord_x_pencils</name>
        <param>
          <type>int</type>
          <declname>myrank</declname>
        </param>
        <param>
          <type>int</type>
          <declname>coord</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="structdistribution__t" kindref="compound">distribution_t</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="115" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="115" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="distribution_8c_1a01529a1209fac1485d38c87e23f7597e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Rank_x_pencils</definition>
        <argsstring>(int *myrank, int coord[], distribution_t *d)</argsstring>
        <name>Rank_x_pencils</name>
        <param>
          <type>int *</type>
          <declname>myrank</declname>
        </param>
        <param>
          <type>int</type>
          <declname>coord</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="structdistribution__t" kindref="compound">distribution_t</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="148" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="148" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="distribution_8c_1a91efcce74607bca8ccb2bf86ede7ddd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Coord_y_pencils</definition>
        <argsstring>(int myrank, int coord[], distribution_t *d)</argsstring>
        <name>Coord_y_pencils</name>
        <param>
          <type>int</type>
          <declname>myrank</declname>
        </param>
        <param>
          <type>int</type>
          <declname>coord</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="structdistribution__t" kindref="compound">distribution_t</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="169" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="169" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="distribution_8c_1aabd6606f208962a20790f9df1ae05d04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Rank_y_pencils</definition>
        <argsstring>(int *myrank, int coord[], distribution_t *d)</argsstring>
        <name>Rank_y_pencils</name>
        <param>
          <type>int *</type>
          <declname>myrank</declname>
        </param>
        <param>
          <type>int</type>
          <declname>coord</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="structdistribution__t" kindref="compound">distribution_t</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="187" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="187" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="distribution_8c_1ac25ab9e92db14985944a5f51218db6ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Coord_z_pencils</definition>
        <argsstring>(int myrank, int coord[], distribution_t *d)</argsstring>
        <name>Coord_z_pencils</name>
        <param>
          <type>int</type>
          <declname>myrank</declname>
        </param>
        <param>
          <type>int</type>
          <declname>coord</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="structdistribution__t" kindref="compound">distribution_t</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="204" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="204" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="distribution_8c_1adbaeef387d26c7edcbd5e9a13d6d1fec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Rank_z_pencils</definition>
        <argsstring>(int *myrank, int coord[], distribution_t *d)</argsstring>
        <name>Rank_z_pencils</name>
        <param>
          <type>int *</type>
          <declname>myrank</declname>
        </param>
        <param>
          <type>int</type>
          <declname>coord</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="structdistribution__t" kindref="compound">distribution_t</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="222" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="222" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="distribution_8c_1aded4467e42dceba52684818433848ae8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void distribution_init</definition>
        <argsstring>(MPI_Comm comm, const int n[], const int Ndims[], distribution_t *d, const int *rmap, bool debug)</argsstring>
        <name>distribution_init</name>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>n</declname>
          <array>[]</array>
        </param>
        <param>
          <type>const int</type>
          <declname>Ndims</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="structdistribution__t" kindref="compound">distribution_t</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>rmap</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="246" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="246" bodyend="984"/>
      </memberdef>
      <memberdef kind="function" id="distribution_8c_1aef1f38cbc79ab4714fac1b0e24ec8de6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Custom3D_Dims_create</definition>
        <argsstring>(const int Ndims[], int nproc, int ndims, int dims[])</argsstring>
        <name>Custom3D_Dims_create</name>
        <param>
          <type>const int</type>
          <declname>Ndims</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>nproc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ndims</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dims</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="988" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="988" bodyend="1001"/>
      </memberdef>
      <memberdef kind="function" id="distribution_8c_1afb8f9207619beb1a7f574954c83ea890" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void distribution_init_explicit</definition>
        <argsstring>(MPI_Comm comm, const int n[], int nproc_1d[], int nproc_2d_x[], int nproc_2d_y[], int nproc_2d_z[], int nproc_3d[], distribution_t *d, bool debug)</argsstring>
        <name>distribution_init_explicit</name>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>n</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>nproc_1d</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>nproc_2d_x</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>nproc_2d_y</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>nproc_2d_z</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>nproc_3d</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="structdistribution__t" kindref="compound">distribution_t</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="1005" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="1005" bodyend="1211"/>
      </memberdef>
      <memberdef kind="function" id="distribution_8c_1a6afadfd1cd0901bb32ca9647d46adc7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void distribution_fini</definition>
        <argsstring>(distribution_t *d)</argsstring>
        <name>distribution_fini</name>
        <param>
          <type><ref refid="structdistribution__t" kindref="compound">distribution_t</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="1220" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="1220" bodyend="1231"/>
      </memberdef>
      <memberdef kind="function" id="distribution_8c_1a5ede063a09c002a54cdd4cb80fe57bd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void distribution_assert_commensurate</definition>
        <argsstring>(distribution_t *d)</argsstring>
        <name>distribution_assert_commensurate</name>
        <param>
          <type><ref refid="structdistribution__t" kindref="compound">distribution_t</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="1240" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="1240" bodyend="1252"/>
      </memberdef>
      <memberdef kind="function" id="distribution_8c_1ac4ff94eb3995e0014a284a415919bec1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void redistribute</definition>
        <argsstring>(const complex_t *, complex_t *, distribution_t *, int)</argsstring>
        <name>redistribute</name>
        <param>
          <type>const <ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref> *</type>
          <defname>a</defname>
        </param>
        <param>
          <type><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref> *</type>
          <defname>b</defname>
        </param>
        <param>
          <type><ref refid="structdistribution__t" kindref="compound">distribution_t</ref> *</type>
          <defname>d</defname>
        </param>
        <param>
          <type>int</type>
          <defname>direction</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="1256" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="1306" bodyend="1390"/>
      </memberdef>
      <memberdef kind="function" id="distribution_8c_1a43da13e337f377862ca04fb68cdccc69" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void redistribute_2_and_3</definition>
        <argsstring>(const complex_t *, complex_t *, distribution_t *, int, int)</argsstring>
        <name>redistribute_2_and_3</name>
        <param>
          <type>const <ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref> *</type>
          <defname>a</defname>
        </param>
        <param>
          <type><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref> *</type>
          <defname>b</defname>
        </param>
        <param>
          <type><ref refid="structdistribution__t" kindref="compound">distribution_t</ref> *</type>
          <defname>d</defname>
        </param>
        <param>
          <type>int</type>
          <defname>direction</defname>
        </param>
        <param>
          <type>int</type>
          <defname>z_dim</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="1257" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="1524" bodyend="2016"/>
      </memberdef>
      <memberdef kind="function" id="distribution_8c_1a68991e16df33bb936768bd1faa71c978" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void redistribute_slab</definition>
        <argsstring>(const complex_t *, complex_t *, distribution_t *, int)</argsstring>
        <name>redistribute_slab</name>
        <param>
          <type>const <ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref> *</type>
          <defname>a</defname>
        </param>
        <param>
          <type><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref> *</type>
          <defname>b</defname>
        </param>
        <param>
          <type><ref refid="structdistribution__t" kindref="compound">distribution_t</ref> *</type>
          <defname>d</defname>
        </param>
        <param>
          <type>int</type>
          <defname>direction</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="1258" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="1403" bodyend="1484"/>
      </memberdef>
      <memberdef kind="function" id="distribution_8c_1ab84f0b88c1e1d9f52466cade6c98ef79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void distribution_1_to_3</definition>
        <argsstring>(const complex_t *a, complex_t *b, distribution_t *d)</argsstring>
        <name>distribution_1_to_3</name>
        <param>
          <type>const <ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="structdistribution__t" kindref="compound">distribution_t</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="1267" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="1267" bodyend="1276"/>
      </memberdef>
      <memberdef kind="function" id="distribution_8c_1a220191ac4f250be755f3ed2968a501cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void distribution_3_to_1</definition>
        <argsstring>(const complex_t *a, complex_t *b, distribution_t *d)</argsstring>
        <name>distribution_3_to_1</name>
        <param>
          <type>const <ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="structdistribution__t" kindref="compound">distribution_t</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="1285" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="1285" bodyend="1294"/>
      </memberdef>
      <memberdef kind="function" id="distribution_8c_1afc28f1bd3535d90cb0c2fbe9693adf32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void distribution_2_to_3</definition>
        <argsstring>(const complex_t *a, complex_t *b, distribution_t *d, int z_dim)</argsstring>
        <name>distribution_2_to_3</name>
        <param>
          <type>const <ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="structdistribution__t" kindref="compound">distribution_t</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>z_dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="1493" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="1493" bodyend="1498"/>
      </memberdef>
      <memberdef kind="function" id="distribution_8c_1a7be0b4a332b149ab3d298bf0d1c86add" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void distribution_3_to_2</definition>
        <argsstring>(const complex_t *a, complex_t *b, distribution_t *d, int z_dim)</argsstring>
        <name>distribution_3_to_2</name>
        <param>
          <type>const <ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="structdistribution__t" kindref="compound">distribution_t</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>int</type>
          <declname>z_dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" line="1507" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c" bodystart="1507" bodyend="1512"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2017,<sp/>UChicago<sp/>Argonne,<sp/>LLC</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>All<sp/>Rights<sp/>Reserved</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hardware/Hybrid<sp/>Cosmology<sp/>Code<sp/>(HACC),<sp/>Version<sp/>1.0</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Salman<sp/>Habib,<sp/>Adrian<sp/>Pope,<sp/>Hal<sp/>Finkel,<sp/>Nicholas<sp/>Frontiere,<sp/>Katrin<sp/>Heitmann,</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Vitali<sp/>Morozov,<sp/>Jeffrey<sp/>Emberson,<sp/>Thomas<sp/>Uram,<sp/>Esteban<sp/>Rangel</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Argonne<sp/>National<sp/>Laboratory)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>David<sp/>Daniel,<sp/>Patricia<sp/>Fasel,<sp/>Chung-Hsing<sp/>Hsu,<sp/>Zarija<sp/>Lukic,<sp/>James<sp/>Ahrens</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Los<sp/>Alamos<sp/>National<sp/>Laboratory)</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>George<sp/>Zagaris</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Kitware)</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OPEN<sp/>SOURCE<sp/>LICENSE</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/><sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/>Software<sp/>changes,</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>modifications,<sp/>or<sp/>derivative<sp/>works,<sp/>should<sp/>be<sp/>noted<sp/>with<sp/>comments<sp/>and</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>author<sp/>and<sp/>organization’s<sp/>name.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/><sp/>3.<sp/>Neither<sp/>the<sp/>names<sp/>of<sp/>UChicago<sp/>Argonne,<sp/>LLC<sp/>or<sp/>the<sp/>Department<sp/>of<sp/>Energy</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>permission.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/>4.<sp/>The<sp/>software<sp/>and<sp/>the<sp/>end-user<sp/>documentation<sp/>included<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>redistribution,<sp/>if<sp/>any,<sp/>must<sp/>include<sp/>the<sp/>following<sp/>acknowledgment:</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&quot;This<sp/>product<sp/>includes<sp/>software<sp/>produced<sp/>by<sp/>UChicago<sp/>Argonne,<sp/>LLC<sp/>under</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Contract<sp/>No.<sp/>DE-AC02-06CH11357<sp/>with<sp/>the<sp/>Department<sp/>of<sp/>Energy.&quot;</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DISCLAIMER</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>SUPPLIED<sp/>&quot;AS<sp/>IS&quot;<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND.<sp/>NEITHER<sp/>THE</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>UNITED<sp/>STATES<sp/>GOVERNMENT,<sp/>NOR<sp/>THE<sp/>UNITED<sp/>STATES<sp/>DEPARTMENT<sp/>OF<sp/>ENERGY,<sp/>NOR<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>UCHICAGO<sp/>ARGONNE,<sp/>LLC,<sp/>NOR<sp/>ANY<sp/>OF<sp/>THEIR<sp/>EMPLOYEES,<sp/>MAKES<sp/>ANY<sp/>WARRANTY,<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>OR<sp/>ASSUMES<sp/>ANY<sp/>LEGAL<sp/>LIABILITY<sp/>OR<sp/>RESPONSIBILITY<sp/>FOR<sp/>THE</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>ACCURARY,<sp/>COMPLETENESS,<sp/>OR<sp/>USEFULNESS<sp/>OF<sp/>ANY<sp/>INFORMATION,<sp/>DATA,<sp/>APPARATUS,</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>PRODUCT,<sp/>OR<sp/>PROCESS<sp/>DISCLOSED,<sp/>OR<sp/>REPRESENTS<sp/>THAT<sp/>ITS<sp/>USE<sp/>WOULD<sp/>NOT<sp/>INFRINGE</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>PRIVATELY<sp/>OWNED<sp/>RIGHTS.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>*****************************************************************************</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mpi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="distribution__c_8h" kindref="compound">distribution_c.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_SLAB_WORKAROUND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USE_SLAB_WORKAROUND<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06cadb2db6e983734128c679d2d6f9660d0a" kindref="member">REDISTRIBUTE_1_TO_3</ref>,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06ca5f1e479eb94259389275a715271d0e26" kindref="member">REDISTRIBUTE_3_TO_1</ref>,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06ca93d616dcfe604bebc3850ec51b2f5d15" kindref="member">REDISTRIBUTE_2_TO_3</ref>,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06cabbf46de6625103b22139e067e3d181fb" kindref="member">REDISTRIBUTE_3_TO_2</ref></highlight></codeline>
<codeline lineno="74"><highlight class="normal">};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>DEBUG_CONDITION<sp/>(self<sp/>==<sp/>0<sp/>||<sp/>self<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEBUG_CONDITION<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>comma<sp/>or<sp/>period<sp/>depending<sp/>on<sp/>position<sp/>in<sp/>a<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="distribution_8c_1aaed7bb4d93b34151fd86f295349cea4e" kindref="member">separator</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i<sp/>==<sp/>(n<sp/>-<sp/>1)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//Go<sp/>from<sp/>rank<sp/>of<sp/>processor<sp/>to<sp/>its<sp/>cartesian<sp/>coords,<sp/>and<sp/>vica<sp/>versa.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//Assumes<sp/>the<sp/>ranks<sp/>increment<sp/>in<sp/>the<sp/>z<sp/>dimension<sp/>then<sp/>y<sp/>then<sp/>x.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1ae4c86ea9f91153635f20d44b9de912aa" kindref="member">Coord_cube</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>myrank,<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coord[],<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdistribution__t" kindref="compound">distribution_t</ref><sp/>*d)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>coord[0]=myrank/(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]*d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>coord[1]=(myrank%(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]*d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]))/(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>coord[2]=(myrank%(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]*d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]))%(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1ad1ea5389446cfca9012818d81599d81d" kindref="member">Rank_cube</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>myrank,<sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coord[],<sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdistribution__t" kindref="compound">distribution_t</ref><sp/>*d)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>*myrank<sp/>=<sp/>coord[2]<sp/>+<sp/>(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2])*(coord[1]<sp/>+<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]*coord[0]);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/>The<sp/>subsequent<sp/>member<sp/>functions<sp/>are<sp/>used<sp/>to<sp/>look<sp/>up<sp/>and<sp/>ranks<sp/>of<sp/>x,y,<sp/>and<sp/>z<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/>pencils<sp/>from<sp/>their<sp/>coordinates,<sp/>and<sp/>vica<sp/>versa.</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/>The<sp/>ordering<sp/>of<sp/>the<sp/>ranks<sp/>is<sp/>such<sp/>that<sp/>pencils<sp/>will<sp/>be<sp/>going<sp/>through<sp/>cubes<sp/></highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/>with<sp/>the<sp/>same<sp/>rank<sp/>sequencially.<sp/>(since<sp/>the<sp/>cubes<sp/>ranks<sp/>are<sp/>already<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/>determined<sp/>and<sp/>can<sp/>not<sp/>be<sp/>changed,<sp/>these<sp/>routines<sp/>figure<sp/>out<sp/>which<sp/>ranks<sp/></highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/>the<sp/>pencils<sp/>should<sp/>be<sp/>assigned<sp/>so<sp/>that<sp/>there<sp/>is<sp/>no<sp/>communication<sp/>hangs.)</highlight></codeline>
<codeline lineno="114"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1af311497240c534b99258fcc520c8eebe" kindref="member">Coord_x_pencils</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>myrank,<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coord[],<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdistribution__t" kindref="compound">distribution_t</ref><sp/>*d)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>asserts<sp/>only<sp/>one<sp/>processor<sp/>in<sp/>x_direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>assert(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//since<sp/>x_pencils<sp/>only<sp/>have<sp/>one<sp/>processor<sp/>in<sp/>the<sp/>x_direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>coord[0]=0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_pen_in_cube_col=d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]/d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_pen_in_cube_row=d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]/d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_cubes=(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]*d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/>the<sp/>x_pencil<sp/>ranks<sp/>increment<sp/>in<sp/>each<sp/>cube<sp/>sequencially,<sp/>after<sp/>reaching<sp/>the<sp/></highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/>last<sp/>cube<sp/>the<sp/>second<sp/>slot<sp/>in<sp/>the<sp/>first<sp/>cube<sp/>is<sp/>the<sp/>next<sp/>rank,<sp/>and<sp/>then<sp/>the<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/>process<sp/>repeats.<sp/>num_repeats,<sp/>is<sp/>the<sp/>number<sp/>of<sp/>times<sp/>this<sp/>repetition<sp/>had<sp/>to<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/>have<sp/>occured<sp/>to<sp/>increment<sp/>to<sp/>the<sp/>current<sp/>rank.</highlight></codeline>
<codeline lineno="132"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_repeats=myrank/(num_cubes);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//now<sp/>subtract<sp/>the<sp/>difference<sp/>of<sp/>how<sp/>many<sp/>repetitions,<sp/>to<sp/>find<sp/>the<sp/>lowest<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//rank<sp/>in<sp/>the<sp/>cube<sp/>it<sp/>resides.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>low_rank=myrank-num_repeats*num_cubes;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//find<sp/>the<sp/>y<sp/>and<sp/>z<sp/>coords<sp/>of<sp/>the<sp/>low_rank,<sp/>then<sp/>adjust<sp/>coords<sp/>for<sp/>ranks<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//that<sp/>repeated<sp/>around<sp/>the<sp/>cube.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>coord[1]<sp/>=<sp/>(low_rank/d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2])*num_pen_in_cube_col<sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/>num_repeats%num_pen_in_cube_col;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>coord[2]<sp/>=<sp/>(low_rank%d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2])*num_pen_in_cube_row<sp/>+<sp/>num_repeats/num_pen_in_cube_col;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1a01529a1209fac1485d38c87e23f7597e" kindref="member">Rank_x_pencils</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>myrank,<sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coord[],<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdistribution__t" kindref="compound">distribution_t</ref><sp/>*d)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_pen_in_cube_col=d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]/d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_pen_in_cube_row=d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]/d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(num_pen_in_cube_col<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;num_cube_col%d<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]/d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(num_pen_in_cube_row<sp/>==0)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;num_cube_row%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>assert(num_pen_in_cube_col<sp/>!=0<sp/>&amp;&amp;<sp/>num_pen_in_cube_row<sp/>!=0);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alpha<sp/>=<sp/>coord[1]%num_pen_in_cube_col;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_cubes<sp/>=<sp/>(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]*d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>beta<sp/>=<sp/>coord[2]%num_pen_in_cube_row;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>*myrank<sp/>=<sp/>(alpha*num_cubes)<sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/>((coord[1]/num_pen_in_cube_col)*d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2])<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/>(beta*(num_cubes)*num_pen_in_cube_col)<sp/>+<sp/>coord[2]/num_pen_in_cube_row;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1a91efcce74607bca8ccb2bf86ede7ddd5" kindref="member">Coord_y_pencils</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>myrank,<sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coord[],<sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdistribution__t" kindref="compound">distribution_t</ref><sp/>*d)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>asserts<sp/>only<sp/>one<sp/>processor<sp/>in<sp/>y_direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>assert(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//since<sp/>y_pencils<sp/>only<sp/>have<sp/>one<sp/>processor<sp/>in<sp/>the<sp/>y_direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>coord[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_pen_in_cube_row<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]/d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alpha<sp/>=<sp/>myrank%(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>coord[0]<sp/>=<sp/>myrank/d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>coord[2]<sp/>=<sp/>(alpha/d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2])<sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/>(alpha%d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2])*num_pen_in_cube_row;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1aabd6606f208962a20790f9df1ae05d04" kindref="member">Rank_y_pencils</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>myrank,<sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coord[],<sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdistribution__t" kindref="compound">distribution_t</ref><sp/>*d)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_pen_in_cube_col<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]/d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_pen_in_cube_row<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]/d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//WHY<sp/>ARE<sp/>THESE<sp/>COMMENTED<sp/>OUT?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if(num_pen_in_cube_col<sp/>==0)fprintf(stderr,&quot;num_cube_col%d<sp/>&quot;,<sp/>d-&gt;process_topology_2_y.nproc[1]/d-&gt;process_topology_3.nproc[1]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if(num_pen_in_cube_row<sp/>==0)fprintf(stderr,&quot;num_cube_row%d<sp/>&quot;,<sp/>d-&gt;process_topology_3.nproc[2]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>assert(num_pen_in_cube_col<sp/>!=0<sp/>&amp;&amp;<sp/>num_pen_in_cube_row<sp/>!=0);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>beta<sp/>=<sp/>coord[2]%num_pen_in_cube_row;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>*myrank<sp/>=<sp/>coord[0]*d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]<sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/>beta*d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]<sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/>coord[2]/num_pen_in_cube_row;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1ac25ab9e92db14985944a5f51218db6ab" kindref="member">Coord_z_pencils</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>myrank,<sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coord[],<sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdistribution__t" kindref="compound">distribution_t</ref><sp/>*d)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>asserts<sp/>only<sp/>one<sp/>processor<sp/>in<sp/>z_direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>assert(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//since<sp/>z_pencils<sp/>only<sp/>have<sp/>one<sp/>processor<sp/>in<sp/>the<sp/>z_direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>coord[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_pen_in_cube_col<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]/d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_pen_in_cube_row<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]/d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_pen_in_cube<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alpha<sp/>=<sp/>myrank/(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]*num_pen_in_cube_row);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>coord[0]<sp/>=<sp/>alpha*num_pen_in_cube_row<sp/>+<sp/>(myrank%num_pen_in_cube)/num_pen_in_cube_col;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>coord[1]<sp/>=<sp/>((myrank%(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]*num_pen_in_cube_row))/num_pen_in_cube)*num_pen_in_cube_col<sp/>+<sp/>myrank%num_pen_in_cube_col;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1adbaeef387d26c7edcbd5e9a13d6d1fec" kindref="member">Rank_z_pencils</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>myrank,<sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coord[],<sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdistribution__t" kindref="compound">distribution_t</ref><sp/>*d)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_pen_in_cube_col<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]/d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_pen_in_cube_row<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]/d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_pen_in_cube<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(num_pen_in_cube_col<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;num_cube_col%d<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]/d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(num_pen_in_cube_row<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;num_cube_row%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>assert(num_pen_in_cube_col<sp/>!=0<sp/>&amp;&amp;<sp/>num_pen_in_cube_row<sp/>!=0);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alpha<sp/>=<sp/>coord[1]%num_pen_in_cube_col;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>beta<sp/>=<sp/>coord[0]%num_pen_in_cube_row;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>*myrank<sp/>=<sp/>alpha<sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/>((coord[1]/num_pen_in_cube_col)*num_pen_in_cube)<sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/>(beta*num_pen_in_cube_col)<sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>+<sp/>(coord[0]/num_pen_in_cube_row)*d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]*num_pen_in_cube_row;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">//<sp/>create<sp/>1-,<sp/>2-<sp/>and<sp/>3-d<sp/>cartesian<sp/>data<sp/>distributions<sp/>comm<sp/>MPI<sp/>Communicator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1aded4467e42dceba52684818433848ae8" kindref="member">distribution_init</ref>(<ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref><sp/>comm,<sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n[],<sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ndims[],<sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdistribution__t" kindref="compound">distribution_t</ref><sp/>*d,<sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>rmap,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug)</highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/>As<sp/>of<sp/>09/06/2011<sp/>The<sp/>MPI<sp/>function<sp/>MPI_Dims_create<sp/>is<sp/>used<sp/>to<sp/>come<sp/>up<sp/>with<sp/></highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/>the<sp/>most<sp/>evenly<sp/>distributed<sp/>number<sp/>of<sp/>processors<sp/>for<sp/>the<sp/>3d<sp/>distribution.<sp/></highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/>Since<sp/>this<sp/>can<sp/>actually<sp/>vary<sp/>between<sp/>machines,<sp/>we<sp/>should<sp/>later<sp/>write<sp/>our<sp/>own</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/>prime<sp/>factorization<sp/>function<sp/>that<sp/>does<sp/>that<sp/>for<sp/>us.<sp/>For<sp/>the<sp/>2d<sp/>distribution<sp/></highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/>pencils,<sp/>Dims_create<sp/>is<sp/>also<sp/>used,<sp/>but<sp/>the<sp/>code<sp/>then<sp/>checks<sp/>if<sp/>the<sp/>pencils<sp/></highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/>it<sp/>outputs<sp/>fits<sp/>inside<sp/>the<sp/>3d<sp/>cuboids<sp/>that<sp/>were<sp/>created.<sp/>If<sp/>it<sp/>does<sp/>not,<sp/>it<sp/></highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/>tries<sp/>swapping<sp/>the<sp/>dimensions<sp/>of<sp/>the<sp/>pencils,<sp/>and<sp/>if<sp/>they<sp/>still<sp/>do<sp/>not<sp/>fit,<sp/></highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/>it<sp/>takes<sp/>the<sp/>3d<sp/>cubes<sp/>dimensions<sp/>of<sp/>processors<sp/>(np1,np2,np3)<sp/>and<sp/>(for<sp/></highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/>Z-pencils<sp/>for<sp/>example)<sp/>makes<sp/>pencils<sp/>of<sp/>the<sp/>form<sp/>(np1*np3,np2,1),<sp/>or<sp/></highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/>(np1,np2*np3,1)<sp/>which<sp/>fit<sp/>inside<sp/>the<sp/>cubes.<sp/>However,<sp/>even<sp/>then,<sp/>it<sp/>is<sp/>not<sp/></highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/>ensured<sp/>that<sp/>this<sp/>will<sp/>work<sp/>since<sp/>for<sp/>example,<sp/>if<sp/>np1*np3<sp/>is<sp/>bigger<sp/>then<sp/></highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/>the<sp/>number<sp/>of<sp/>points<sp/>in<sp/>one<sp/>dimension<sp/>(Ng)<sp/>then<sp/>there<sp/>are<sp/>not<sp/>enough<sp/>points<sp/></highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/><sp/><sp/>for<sp/>each<sp/>processor<sp/>to<sp/>have<sp/>at<sp/>least<sp/>one<sp/>point<sp/>in<sp/>that<sp/>dimension.<sp/>So<sp/>the<sp/>code</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/>checks<sp/>this<sp/>and<sp/>asserts<sp/>three<sp/>variables<sp/>check_x_dims<sp/>check_y_dims,<sp/>and<sp/></highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/>check_z_dims,<sp/>which<sp/>will<sp/>assert<sp/>if<sp/>these<sp/>kinda<sp/>errors<sp/>happen<sp/>(as<sp/>well<sp/>as<sp/></highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/>checking<sp/>errors<sp/>coming<sp/>from<sp/>picking<sp/>the<sp/>total<sp/>number<sp/>of<sp/>processors<sp/>and<sp/>Ng<sp/></highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/><sp/>in<sp/>a<sp/>way<sp/>where<sp/>the<sp/>cubes<sp/>will<sp/>not<sp/>fit<sp/>for<sp/>any<sp/>orientation<sp/>(like<sp/>100<sp/>procs<sp/></highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/>and<sp/>Ng=101!)).<sp/>Curretly<sp/>the<sp/>fix<sp/>to<sp/>these<sp/>errors<sp/>is<sp/>to<sp/>pick<sp/>better<sp/>values<sp/></highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/>for<sp/>Ng<sp/>and<sp/>the<sp/>total<sp/>number<sp/>of<sp/>processors<sp/>that<sp/>work,<sp/>however<sp/>when<sp/>we<sp/>do<sp/></highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/>have<sp/>our<sp/>own<sp/>prime<sp/>factorization<sp/>method,<sp/>then<sp/>that<sp/>method<sp/>could<sp/>also<sp/>make<sp/></highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/>pencils<sp/>that<sp/>fit<sp/>inside<sp/>the<sp/>proper<sp/>distribution<sp/>(and<sp/>we<sp/>would<sp/>not<sp/>need<sp/>so<sp/></highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/>many<sp/>checks).<sp/>In<sp/>the<sp/>mean<sp/>time,<sp/>to<sp/>pick<sp/>these<sp/>&quot;better&quot;<sp/>values<sp/>for<sp/>Ng,<sp/>the<sp/></highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/>user<sp/>should<sp/>pick<sp/>values<sp/>such<sp/>that:<sp/>Ng<sp/>%<sp/>np1,<sp/>Ng<sp/>%<sp/>np2,<sp/>and<sp/>Ng<sp/>%<sp/>np3<sp/>all<sp/></highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/>equal<sp/>zero,<sp/>and<sp/>that<sp/>np1*np2,<sp/>np2*np3,<sp/>and<sp/>np3*np1<sp/>are<sp/>all<sp/>less<sp/>then<sp/>Ng.</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/>(in<sp/>other<sp/>words,<sp/>the<sp/>cubes<sp/>created<sp/>fit<sp/>inside<sp/>the<sp/>number<sp/>of<sp/>grid<sp/>points,<sp/></highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/>and<sp/>the<sp/>number<sp/>of<sp/>pencils<sp/>created<sp/>is<sp/>not<sp/>more<sp/>then<sp/>the<sp/>number<sp/>of<sp/>points<sp/></highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/>in<sp/>a<sp/>dimension<sp/>(Ng)).</highlight></codeline>
<codeline lineno="281"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a82ebfa634d9c07052140242ec82559e5" kindref="member">parent</ref><sp/>=<sp/>comm;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nproc;</highlight><highlight class="comment">//num_processors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//rank</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndim<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>period[3];</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>MPI_Comm_rank(comm,<sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>MPI_Comm_size(comm,<sp/>&amp;nproc);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>rankmap[grid]<sp/>--&gt;<sp/>rank<sp/>map<sp/>(converts<sp/>grids<sp/>to<sp/>ranks)<sp/>from<sp/>the<sp/>input<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(if<sp/>none<sp/>is<sp/>provided<sp/>then<sp/>we<sp/>assume<sp/>the<sp/>trivial<sp/>map<sp/>{0,<sp/>1,<sp/>...,<sp/>nproc}).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a65f303dfbdd0d1dbe148507bb0a48386" kindref="member">rankmap</ref><sp/><sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)*nproc);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rmap)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;nproc;<sp/>i++)<sp/>d-&gt;<ref refid="structdistribution__t_1a65f303dfbdd0d1dbe148507bb0a48386" kindref="member">rankmap</ref>[i]<sp/>=<sp/>rmap[i];</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;nproc;<sp/>i++)<sp/>d-&gt;<ref refid="structdistribution__t_1a65f303dfbdd0d1dbe148507bb0a48386" kindref="member">rankmap</ref>[i]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>inverse<sp/>gridmap[rank]<sp/>--&gt;<sp/>grid<sp/>map<sp/>(converts<sp/>ranks<sp/>to<sp/>grids)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1aadae10ad5bacae5bceadd4eea37b12c6" kindref="member">gridmap</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)*nproc);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;nproc;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;nproc;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>==<sp/>d-&gt;<ref refid="structdistribution__t_1a65f303dfbdd0d1dbe148507bb0a48386" kindref="member">rankmap</ref>[j])<sp/>{<sp/>d-&gt;<ref refid="structdistribution__t_1aadae10ad5bacae5bceadd4eea37b12c6" kindref="member">gridmap</ref>[i]<sp/>=<sp/>j;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Map<sp/>this<sp/>rank<sp/>to<sp/>the<sp/>correct<sp/>grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1aadae10ad5bacae5bceadd4eea37b12c6" kindref="member">gridmap</ref>[</highlight><highlight class="keyword">self</highlight><highlight class="normal">];<sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Initializing<sp/>redistribution<sp/>using<sp/>a<sp/>%s<sp/>layout<sp/>on<sp/>%d<sp/>ranks.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="311"><highlight class="normal">#ifdef<sp/><ref refid="distribution__c_8h_1af9b3b05b3ffa6bbf7ca05cb71e02d000" kindref="member">PENCIL</ref></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;pencil&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;slab&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,nproc);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a8bdbbba2982ae871ad4c0f389ca78959" kindref="member">debug</ref><sp/>=<sp/>debug;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ad0fc01a1d38109451e446decb6cf91c5" kindref="member">n</ref>[i]<sp/>=<sp/>n[i];</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>process<sp/>grid<sp/>with<sp/>1d<sp/>decomposition<sp/>(SLABs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>distribute<sp/>outer<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>distribute<sp/>outer<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>period[0]<sp/>=<sp/>period[1]<sp/>=<sp/>period[2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//process_topology_1.nproc<sp/>is<sp/>filled<sp/>with<sp/>number<sp/>of<sp/>processors<sp/>in<sp/>each<sp/>dim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>MPI_Dims_create(nproc,<sp/>ndim,<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>);<sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;distribution<sp/>1D:<sp/>[%d:%d:%d]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;<ref refid="structdistribution__t_1a8bdbbba2982ae871ad4c0f389ca78959" kindref="member">debug</ref><sp/>&amp;&amp;<sp/>0<sp/>==<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Process<sp/>grids:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>1d:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ndim;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d%s&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[i],<sp/></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="distribution_8c_1aaed7bb4d93b34151fd86f295349cea4e" kindref="member">separator</ref>(i,<sp/>ndim));</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//creates<sp/>the<sp/>new<sp/>communicator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>MPI_Cart_create(comm,<sp/>ndim,<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>,<sp/>period,<sp/>0,<sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//gets<sp/>.self<sp/>(is<sp/>coordinate)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>MPI_Cart_get(d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>,<sp/>ndim,<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>,<sp/></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1ad76559fb8c453075eeb9fa02032160b3" kindref="member">period</ref>,<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//calculates<sp/>the<sp/>local<sp/>dimensions<sp/>(number<sp/>of<sp/>points<sp/>in<sp/>each<sp/>dimension)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]<sp/>=<sp/>n[0]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>=<sp/>n[1]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>=<sp/>n[2]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>process<sp/>grid<sp/>with<sp/>3d<sp/>decomposition<sp/>(CUBE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>period[0]<sp/>=<sp/>period[1]<sp/>=<sp/>period[2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><ref refid="distribution_8c_1aef1f38cbc79ab4714fac1b0e24ec8de6" kindref="member">Custom3D_Dims_create</ref>(Ndims,<sp/>nproc,<sp/>ndim,<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;distribution<sp/>3D:<sp/>[%d:%d:%d]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;<ref refid="structdistribution__t_1a8bdbbba2982ae871ad4c0f389ca78959" kindref="member">debug</ref><sp/>&amp;&amp;<sp/>0<sp/>==<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>3d:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ndim;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d%s&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[i],<sp/></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="distribution_8c_1aaed7bb4d93b34151fd86f295349cea4e" kindref="member">separator</ref>(i,<sp/>ndim));</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>MPI_Cart_create(comm,<sp/>ndim,<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>,<sp/>period,<sp/>0,<sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//finds<sp/>cartesian<sp/>coordinate<sp/>of<sp/>this<sp/>current<sp/>rank</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><ref refid="distribution_8c_1ae4c86ea9f91153635f20d44b9de912aa" kindref="member">Coord_cube</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>,d);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(debug){</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/><sp/>this<sp/>debug<sp/>statment<sp/>checks<sp/>to<sp/>see<sp/>if<sp/>the<sp/>way<sp/>coordinates<sp/>found<sp/>by<sp/></highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/>calculation<sp/>matchs<sp/>MPI&apos;s<sp/>coord<sp/>system<sp/>(MPI<sp/>might<sp/>differ<sp/>between<sp/>machines<sp/></highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/><sp/>so<sp/>this<sp/>is<sp/>why<sp/>the<sp/>code<sp/>calculates<sp/>the<sp/>coord<sp/>system<sp/>itself,<sp/>however<sp/>with<sp/></highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/><sp/>debug<sp/>on,<sp/>can<sp/>check<sp/>if<sp/>it<sp/>matches<sp/>MPI(even<sp/>tho<sp/>it<sp/>is<sp/>not<sp/>enforced<sp/>to<sp/>match<sp/></highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/><sp/>it.)).</highlight></codeline>
<codeline lineno="398"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prev_coord[3];</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_coord[0]=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[0];</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_coord[1]=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[1];</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_coord[2]=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[2];</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Cart_get(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>,<sp/>ndim,<sp/></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>,<sp/></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1ad76559fb8c453075eeb9fa02032160b3" kindref="member">period</ref>,<sp/></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(prev_coord[i]<sp/>!=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[i])</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>assert(n[0]%d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>assert(n[0]%d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>assert(n[0]%d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//set<sp/>local<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]<sp/>=<sp/>n[0]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>=<sp/>n[1]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>=<sp/>n[2]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>process<sp/>grid<sp/>with<sp/>2d<sp/>decomposition<sp/>(z_PENCILs<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>distribute<sp/>outer<sp/>dimension<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>period[0]<sp/>=<sp/>period[1]<sp/>=<sp/>period[2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>MPI_Dims_create(nproc,<sp/>ndim,<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]<sp/>=<sp/>n[0]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>=<sp/>n[1]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>=<sp/>n[2]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//variable<sp/>used<sp/>to<sp/>ensure<sp/>that<sp/>pencils<sp/>created<sp/>fit<sp/>inside<sp/>the<sp/>cuboids,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>not<sp/>the<sp/>code<sp/>will<sp/>assert<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check_z_dims=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]<sp/>!=<sp/>0<sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>!=<sp/>0<sp/></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="comment">//<sp/>protects<sp/>from<sp/>dividing<sp/>by<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>check_z_dims<sp/>=<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1])<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==0<sp/>&amp;&amp;<sp/>debug<sp/>&amp;&amp;<sp/>!check_z_dims)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;Need<sp/>to<sp/>fix<sp/>Z<sp/>PENCILS<sp/>z_procs(%d,%d,%d)<sp/>3d.ns(%d,%d,%d)<sp/>2d_z.ns(%d,%d,%d)....<sp/>\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2],</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0],</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1],</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2],</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0],</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1],</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//try<sp/>swaping<sp/>pencil<sp/>dimensions<sp/>if<sp/>current<sp/>setup<sp/>pencil<sp/>dimensions<sp/>dont<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fit<sp/>inside<sp/>the<sp/>cubes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(check_z_dims)<sp/></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0])<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==0<sp/>&amp;&amp;<sp/>debug)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;Swaping<sp/>Z<sp/>pencils<sp/>in<sp/>initialization<sp/><sp/>(%d,%d,%d)....<sp/>\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp=d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]<sp/>=<sp/>n[0]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>=<sp/>n[1]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>=<sp/>n[2]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check_z_dims<sp/>=<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1])<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>check_z_dims=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>that<sp/>did<sp/>not<sp/>work,<sp/>make<sp/>a<sp/>pencil<sp/>that<sp/>does<sp/>if<sp/>inside<sp/>the<sp/>3d<sp/>cuboids<sp/>by<sp/></highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/><sp/><sp/><sp/>taking<sp/>the<sp/>cuboids<sp/>dimensions<sp/>(np1,np2,np3)<sp/>and<sp/>making<sp/>pencils<sp/></highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/><sp/><sp/><sp/>(np1,np2*np3,1),<sp/>or<sp/>(np1*np3,np2,1)<sp/>on<sp/>the<sp/>most<sp/>evenly<sp/>distributed<sp/></highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/><sp/><sp/><sp/>dimensions</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!check_z_dims){</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==0<sp/>&amp;&amp;<sp/>debug)</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;MAKING<sp/>Z<sp/>PENCILS<sp/>FIT<sp/>zprocs(%d,%d,%d)<sp/>z.ns(%d,%d,%d)....<sp/>\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2],</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0],</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1],</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]=1;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]&gt;d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1])</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]*d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0])<sp/>!=<sp/>0)<sp/></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>||<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1])<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]*d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]*d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0])<sp/>!=<sp/>0)<sp/></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>||<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1])<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]*d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]<sp/>=<sp/>n[0]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>=<sp/>n[1]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>=<sp/>n[2]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==0<sp/>&amp;&amp;<sp/>debug)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;MAKING<sp/>Z<sp/>PENCILS<sp/>FIT<sp/>AFTER<sp/>zprocs(%d,%d,%d)<sp/>z.ns(%d,%d,%d)...\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2],</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0],</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1],</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]<sp/>!=<sp/>0<sp/></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>!=<sp/>0<sp/></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>protects<sp/>from<sp/>dividing<sp/>by<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check_z_dims=((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1])<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check_z_dims=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;<ref refid="structdistribution__t_1a8bdbbba2982ae871ad4c0f389ca78959" kindref="member">debug</ref><sp/>&amp;&amp;<sp/>0<sp/>==<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>2d_z:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ndim;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d%s&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[i],<sp/></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="distribution_8c_1aaed7bb4d93b34151fd86f295349cea4e" kindref="member">separator</ref>(i,<sp/>ndim));</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!check_z_dims<sp/>&amp;&amp;<sp/>debug<sp/>&amp;&amp;<sp/>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==0)){</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>outfile;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>outfile=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;error.data&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(outfile,</highlight><highlight class="stringliteral">&quot;Z<sp/>DIMS<sp/>FAILS:(%d,%d,%d)<sp/>(%d,%d,%d)<sp/>\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2],<sp/></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>assert(check_z_dims);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/><sp/>if<sp/>this<sp/>happends,<sp/>it<sp/>is<sp/>because<sp/>the<sp/>dimensions<sp/>were<sp/>chosen<sp/>incorrectly.<sp/></highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/><sp/>Either<sp/>to<sp/>many<sp/>processors<sp/>for<sp/>the<sp/>number<sp/>of<sp/>points<sp/>in<sp/>one<sp/>dimenison<sp/>(could<sp/></highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/><sp/>not<sp/>do<sp/>at<sp/>least<sp/>1<sp/>point<sp/>per<sp/>processor),<sp/>or<sp/>the<sp/>methods<sp/>above<sp/>could<sp/></highlight></codeline>
<codeline lineno="569"><highlight class="comment"><sp/><sp/>not<sp/>make<sp/>a<sp/>distribution<sp/>of<sp/>pencils<sp/>that<sp/>fit<sp/>in<sp/>the<sp/>cubiods,<sp/>which<sp/>would<sp/></highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/><sp/>happen<sp/>if<sp/>the<sp/>user<sp/>gave<sp/>numbers<sp/>that<sp/>wouldent<sp/>work<sp/>(we<sp/>require<sp/>the<sp/>number<sp/></highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/><sp/>of<sp/>processors<sp/>in<sp/>each<sp/>dimension<sp/>of<sp/>the<sp/>cuboid<sp/>must<sp/>be<sp/>modulo<sp/>the<sp/>number<sp/>of<sp/></highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/><sp/>points<sp/>in<sp/>that<sp/>dimension,<sp/>otherwise,<sp/>this<sp/>error<sp/>will<sp/>happen).</highlight></codeline>
<codeline lineno="573"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>MPI_Cart_create(comm,<sp/></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ndim,<sp/></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>,<sp/></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period,<sp/></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//find<sp/>the<sp/>cartesian<sp/>coord<sp/>of<sp/>the<sp/>current<sp/>rank<sp/>(for<sp/>the<sp/>z_pencil)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><ref refid="distribution_8c_1ac25ab9e92db14985944a5f51218db6ab" kindref="member">Coord_z_pencils</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>,d);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;distribution<sp/>2z:<sp/>[%d:%d:%d]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>process<sp/>grid<sp/>with<sp/>2d<sp/>decomposition<sp/>(x_PENCILs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>distribute<sp/>outer<sp/>dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>period[0]<sp/>=<sp/>period[1]<sp/>=<sp/>period[2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>MPI_Dims_create(nproc,<sp/>ndim,<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]<sp/>=<sp/>n[0]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>=<sp/>n[1]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>=<sp/>n[2]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//variable<sp/>used<sp/>to<sp/>ensure<sp/>that<sp/>pencils<sp/>created<sp/>fit<sp/>inside<sp/>the<sp/>cuboids,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>not<sp/>the<sp/>code<sp/>will<sp/>assert<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check_x_dims<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]<sp/>!=<sp/>0<sp/></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>!=<sp/>0<sp/></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="comment">//<sp/>protects<sp/>from<sp/>dividing<sp/>by<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>check_x_dims<sp/>=<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1])<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==0<sp/>&amp;&amp;<sp/>debug<sp/>&amp;&amp;<sp/>!check_x_dims)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;Need<sp/>to<sp/>fix<sp/>X<sp/>PENCILS<sp/>x_procs(%d,%d,%d)<sp/>3d.ns(%d,%d,%d)<sp/>2d_x.ns(%d,%d,%d)...\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2],</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0],</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1],</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2],</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0],</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1],</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//try<sp/>swaping<sp/>pencil<sp/>dimensions<sp/>if<sp/>current<sp/>setup<sp/>does<sp/>not<sp/>have<sp/>pencils<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//that<sp/>fit<sp/>inside<sp/>cubes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(check_x_dims)<sp/></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2])<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==0<sp/>&amp;&amp;<sp/>debug)</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;Swaping<sp/>X<sp/>pencils<sp/>in<sp/>initialization<sp/>....<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]<sp/>=<sp/>n[0]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>=<sp/>n[1]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>=<sp/>n[2]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check_x_dims<sp/>=<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1])<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>check_x_dims=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>that<sp/>did<sp/>not<sp/>work,<sp/>make<sp/>a<sp/>pencil<sp/>that<sp/>does<sp/>by<sp/>taking<sp/>the<sp/>cuboid<sp/></highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/><sp/><sp/><sp/>(np1,np2,np3)<sp/>and<sp/>making<sp/>pencils<sp/>of<sp/>the<sp/>form<sp/>(1,np2*np1,np3)<sp/>or<sp/></highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/><sp/><sp/><sp/>(1,np2*np1,np3)<sp/>depending<sp/>on<sp/>the<sp/>most<sp/>even<sp/>distribution<sp/>it<sp/>can.</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!check_x_dims){</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==0<sp/>&amp;&amp;<sp/>debug)</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;MAKING<sp/>X<sp/>PENCILS<sp/>FIT<sp/>xprocs(%d,%d,%d)<sp/>x.ns(%d,%d,%d)...\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2],</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0],</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1],</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]<sp/>&gt;<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1])</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]*d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2])<sp/>!=<sp/>0)<sp/></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>||<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0])<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]*d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]*d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2])<sp/>!=<sp/>0)<sp/></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>||<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0])<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]*d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]<sp/>=<sp/>n[0]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>=<sp/>n[1]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>=<sp/>n[2]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==0<sp/>&amp;&amp;<sp/>debug)</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;MAKING<sp/>X<sp/>PENCILS<sp/>FIT<sp/>AFTER<sp/>xprocs(%d,%d,%d)<sp/>x.ns(%d,%d,%d)...\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2],</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0],</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1],</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]<sp/>!=<sp/>0<sp/></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>!=<sp/>0<sp/></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>protects<sp/>from<sp/>dividing<sp/>by<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check_x_dims<sp/>=<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1])<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check_x_dims=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;<ref refid="structdistribution__t_1a8bdbbba2982ae871ad4c0f389ca78959" kindref="member">debug</ref><sp/>&amp;&amp;<sp/>0<sp/>==<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>2d_x:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ndim;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d%s&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[i],<sp/></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="distribution_8c_1aaed7bb4d93b34151fd86f295349cea4e" kindref="member">separator</ref>(i,<sp/>ndim));</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!check_x_dims<sp/>&amp;&amp;<sp/>debug<sp/>&amp;&amp;<sp/>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==0)){</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>outfile;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>outfile=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;error.data&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(outfile,</highlight><highlight class="stringliteral">&quot;X<sp/>DIMS<sp/>FAILS:(%d,%d,%d)<sp/>(%d,%d,%d)<sp/>\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2],<sp/></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/>assert(check_x_dims);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="732"><highlight class="comment"><sp/><sp/>if<sp/>this<sp/>happends,<sp/>it<sp/>is<sp/>because<sp/>the<sp/>dimensions<sp/>were<sp/>chosen<sp/>incorrectly.<sp/></highlight></codeline>
<codeline lineno="733"><highlight class="comment"><sp/><sp/>Either<sp/>to<sp/>many<sp/>processors<sp/>for<sp/>the<sp/>number<sp/>of<sp/>points<sp/>in<sp/>one<sp/>dimenison<sp/>(could<sp/></highlight></codeline>
<codeline lineno="734"><highlight class="comment"><sp/><sp/>not<sp/>do<sp/>at<sp/>least<sp/>1<sp/>point<sp/>per<sp/>processor),<sp/>or<sp/>the<sp/>methods<sp/>above<sp/>could<sp/>not<sp/>make<sp/></highlight></codeline>
<codeline lineno="735"><highlight class="comment"><sp/><sp/>a<sp/>distribution<sp/>of<sp/>pencils<sp/>that<sp/>fit<sp/>in<sp/>the<sp/>cubiods,<sp/>which<sp/>would<sp/>happen<sp/>if<sp/>the<sp/></highlight></codeline>
<codeline lineno="736"><highlight class="comment"><sp/><sp/>user<sp/>gave<sp/>numbers<sp/>that<sp/>wouldent<sp/>work<sp/>(we<sp/>require<sp/>the<sp/>number<sp/>of<sp/>processors<sp/>in<sp/></highlight></codeline>
<codeline lineno="737"><highlight class="comment"><sp/><sp/>each<sp/>dimension<sp/>of<sp/>the<sp/>cuboid<sp/>must<sp/>be<sp/>modulo<sp/>the<sp/>number<sp/>of<sp/>points<sp/>in<sp/>that<sp/></highlight></codeline>
<codeline lineno="738"><highlight class="comment"><sp/><sp/>dimension,<sp/>otherwise,<sp/>this<sp/>error<sp/>will<sp/>happen).</highlight></codeline>
<codeline lineno="739"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>MPI_Cart_create(comm,<sp/></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ndim,<sp/></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>,<sp/></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period,<sp/></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><ref refid="distribution_8c_1af311497240c534b99258fcc520c8eebe" kindref="member">Coord_x_pencils</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>,<sp/>d);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;distribution<sp/>2x:<sp/>[%d:%d:%d]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>process<sp/>grid<sp/>with<sp/>2d<sp/>decomposition<sp/>(y_PENCILs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>distribute<sp/>outer<sp/>dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>period[0]<sp/>=<sp/>period[1]<sp/>=<sp/>period[2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>MPI_Dims_create(nproc,<sp/>ndim,<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]<sp/>=<sp/>n[0]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>=<sp/>n[1]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>=<sp/>n[2]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//variable<sp/>used<sp/>to<sp/>ensure<sp/>that<sp/>pencils<sp/>created<sp/>fit<sp/>inside<sp/>the<sp/>cuboids,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>not<sp/>the<sp/>code<sp/>will<sp/>assert<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check_y_dims=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]<sp/>!=<sp/>0<sp/></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>!=<sp/>0<sp/></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="comment">//<sp/>protects<sp/>from<sp/>dividing<sp/>by<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>check_y_dims<sp/>=<sp/>(((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0])<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==0<sp/>&amp;&amp;<sp/>debug<sp/>&amp;&amp;<sp/>!check_y_dims)</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;Need<sp/>to<sp/>fix<sp/>Y<sp/>PENCILS<sp/>y_procs(%d,%d,%d)<sp/>3d.ns(%d,%d,%d)<sp/>2d_y.ns(%d,%d,%d)...\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2],</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0],</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1],</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2],</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0],</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1],</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//try<sp/>swaping<sp/>pencil<sp/>dimensions<sp/>if<sp/>the<sp/>current<sp/>dimension<sp/>of<sp/>the<sp/>pencils<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//does<sp/>not<sp/>fit<sp/>inside<sp/>the<sp/>cubes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(check_y_dims)<sp/></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2])<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==0<sp/>&amp;&amp;<sp/>debug)</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;Swaping<sp/>Y<sp/>pencils<sp/>in<sp/>initialization<sp/>....<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]<sp/>=<sp/>n[0]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>=<sp/>n[1]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>=<sp/>n[2]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check_y_dims<sp/>=<sp/>(((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0])<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>check_y_dims<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="815"><highlight class="comment"><sp/><sp/>if<sp/>that<sp/>did<sp/>not<sp/>work,<sp/>make<sp/>a<sp/>pencil<sp/>that<sp/>does<sp/>by<sp/>taking<sp/>the<sp/>cuboid<sp/></highlight></codeline>
<codeline lineno="816"><highlight class="comment"><sp/><sp/>(np1,np2,np3)<sp/>and<sp/>making<sp/>pencils<sp/>of<sp/>the<sp/>form<sp/>(np1,1,np3*np2)<sp/>or<sp/></highlight></codeline>
<codeline lineno="817"><highlight class="comment"><sp/><sp/>(np1*np2,1,np3)<sp/>depending<sp/>on<sp/>the<sp/>most<sp/>even<sp/>distribution<sp/>it<sp/>can.</highlight></codeline>
<codeline lineno="818"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!check_y_dims){</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==0<sp/>&amp;&amp;<sp/>debug)</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;MAKING<sp/>Y<sp/>PENCILS<sp/>FIT<sp/>yprocs(%d,%d,%d)<sp/>y.ns(%d,%d,%d)...\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2],</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0],</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1],</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]=1;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]<sp/>&gt;<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0])</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]*d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2])<sp/>!=<sp/>0)<sp/></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>||<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0])<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]*d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]*d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2])<sp/>!=<sp/>0)<sp/></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>||<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0])<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]*d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]<sp/>=<sp/>n[0]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>=<sp/>n[1]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>=<sp/>n[2]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==0<sp/>&amp;&amp;<sp/>debug)</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;MAKING<sp/>Y<sp/>PENCILS<sp/>FIT<sp/>AFTER<sp/>yprocs(%d,%d,%d)<sp/>y.ns(%d,%d,%d)...\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2],</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0],</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1],</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>!=<sp/>0<sp/></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="comment">//<sp/>protects<sp/>from<sp/>dividing<sp/>by<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check_y_dims<sp/>=<sp/>(((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2])<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0])<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>check_y_dims=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;<ref refid="structdistribution__t_1a8bdbbba2982ae871ad4c0f389ca78959" kindref="member">debug</ref><sp/>&amp;&amp;<sp/>0<sp/>==<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>2d_y:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ndim;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d%s&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[i],<sp/></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="distribution_8c_1aaed7bb4d93b34151fd86f295349cea4e" kindref="member">separator</ref>(i,<sp/>ndim));</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!check_y_dims<sp/>&amp;&amp;<sp/>debug<sp/>&amp;&amp;<sp/>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==0)){</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>outfile;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>outfile<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;error.data&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(outfile,</highlight><highlight class="stringliteral">&quot;Y<sp/>DIMS<sp/>FAILS:(%d,%d,%d)<sp/>(%d,%d,%d)<sp/>\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2],<sp/></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>assert(check_y_dims);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="896"><highlight class="comment"><sp/><sp/>if<sp/>this<sp/>happends,<sp/>it<sp/>is<sp/>because<sp/>the<sp/>dimensions<sp/>were<sp/>chosen<sp/>incorrectly.<sp/></highlight></codeline>
<codeline lineno="897"><highlight class="comment"><sp/><sp/>Either<sp/>to<sp/>many<sp/>processors<sp/>for<sp/>the<sp/>number<sp/>of<sp/>points<sp/>in<sp/>one<sp/>dimenison<sp/>(could<sp/></highlight></codeline>
<codeline lineno="898"><highlight class="comment"><sp/><sp/>not<sp/>do<sp/>at<sp/>least<sp/>1<sp/>point<sp/>per<sp/>processor),<sp/>or<sp/>the<sp/>methods<sp/>above<sp/>could<sp/></highlight></codeline>
<codeline lineno="899"><highlight class="comment"><sp/><sp/>not<sp/>make<sp/>a<sp/>distribution<sp/>of<sp/>pencils<sp/>that<sp/>fit<sp/>in<sp/>the<sp/>cubiods,<sp/>which<sp/>would<sp/></highlight></codeline>
<codeline lineno="900"><highlight class="comment"><sp/><sp/>happen<sp/>if<sp/>the<sp/>user<sp/>gave<sp/>numbers<sp/>that<sp/>wouldent<sp/>work<sp/>(we<sp/>require<sp/>the<sp/>number<sp/>of<sp/></highlight></codeline>
<codeline lineno="901"><highlight class="comment"><sp/><sp/>processors<sp/>in<sp/>each<sp/>dimension<sp/>of<sp/>the<sp/>cuboid<sp/>must<sp/>be<sp/>modulo<sp/>the<sp/>number<sp/>of<sp/></highlight></codeline>
<codeline lineno="902"><highlight class="comment"><sp/><sp/>points<sp/>in<sp/>that<sp/>dimension,<sp/>otherwise,<sp/>this<sp/>error<sp/>will<sp/>happen).</highlight></codeline>
<codeline lineno="903"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>MPI_Cart_create(comm,<sp/></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ndim,<sp/></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>,<sp/></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period,<sp/></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//find<sp/>the<sp/>cartesian<sp/>coord<sp/>of<sp/>the<sp/>current<sp/>rank<sp/>(for<sp/>the<sp/>y_pencil)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><ref refid="distribution_8c_1a91efcce74607bca8ccb2bf86ede7ddd5" kindref="member">Coord_y_pencils</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>,d);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;distribution<sp/>2y:<sp/>[%d:%d:%d]\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;<ref refid="structdistribution__t_1a8bdbbba2982ae871ad4c0f389ca78959" kindref="member">debug</ref>)<sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>myrank_cube;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="distribution_8c_1ad1ea5389446cfca9012818d81599d81d" kindref="member">Rank_cube</ref>(&amp;myrank_cube,d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>,d);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>myrank_x;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="distribution_8c_1a01529a1209fac1485d38c87e23f7597e" kindref="member">Rank_x_pencils</ref>(&amp;myrank_x,d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>,d);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>myrank_y;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="distribution_8c_1aabd6606f208962a20790f9df1ae05d04" kindref="member">Rank_y_pencils</ref>(&amp;myrank_y,d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>,d);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>myrank_z;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="distribution_8c_1adbaeef387d26c7edcbd5e9a13d6d1fec" kindref="member">Rank_z_pencils</ref>(&amp;myrank_z,d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>,d);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(myrank_z<sp/>!=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>myrank_y<sp/>!=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>myrank_x<sp/>!=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>myrank_cube<sp/>!=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>abort();<sp/></highlight><highlight class="comment">//means<sp/>ranks<sp/>were<sp/>calculated<sp/>wrong.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Process<sp/>map:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>nproc;<sp/>++p)<sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Barrier(comm);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%d:<sp/>1d<sp/>=<sp/>(%d,<sp/>%d,<sp/>%d),<sp/>2d_x<sp/>=<sp/>(%d,<sp/>%d,<sp/>%d)<sp/>rank<sp/>is=<sp/>%d,2d_y<sp/>=<sp/>(%d,<sp/>%d,<sp/>%d)<sp/>rank<sp/>is=<sp/>%d,2d_z<sp/>=<sp/>(%d,<sp/>%d,<sp/>%d)<sp/>rank<sp/>is=<sp/>%d,<sp/>3d<sp/>=<sp/>(%d,<sp/>%d,<sp/>%d).<sp/>rank<sp/>is=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[0],<sp/></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[1],<sp/></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[2],</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[0],<sp/></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[1],<sp/></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[2],</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>myrank_x,</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[0],<sp/></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[1],<sp/></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[2],</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>myrank_y,</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[0],<sp/></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[1],<sp/></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[2],</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>myrank_z,</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[0],<sp/></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[1],<sp/></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[2],</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>myrank_cube);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//allocate<sp/>size<sp/>of<sp/>buffers<sp/>used<sp/>to<sp/>hold<sp/>pencil<sp/>chunks<sp/>of<sp/>data<sp/>in<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//distribution<sp/>routines<sp/>for<sp/>3d<sp/>to<sp/>1d<sp/>and<sp/>vica<sp/>versa.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buff_z_chunk<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]*d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]*d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2];</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buff_y_chunk<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]*d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]*d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1];</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buff_x_chunk<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]*d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]*d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0];</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buff_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buff_z_chunk<sp/>&gt;<sp/>buff_y_chunk){</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>buff_size=buff_z_chunk;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>buff_size=buff_y_chunk;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buff_x_chunk<sp/>&gt;<sp/>buff_size)</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>buff_size<sp/>=<sp/>buff_x_chunk;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a957bdfca24a116d7bb5f7bcbde3a93fa" kindref="member">d2_chunk</ref>=(<ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref>)*buff_size);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a971ee0fe2ddf42e0669273a5ebda1512" kindref="member">d3_chunk</ref>=(<ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*)<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref>)*buff_size);</highlight></codeline>
<codeline lineno="984"><highlight class="normal">}</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>MPI_Dims_create<sp/>to<sp/>create<sp/>a<sp/>3D<sp/>decomposition,<sp/>or<sp/>use<sp/>a<sp/>user-provided<sp/>decomposition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>it<sp/>is<sp/>appropriate<sp/>(it<sp/>has<sp/>the<sp/>required<sp/>number<sp/>of<sp/>processors)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1aef1f38cbc79ab4714fac1b0e24ec8de6" kindref="member">Custom3D_Dims_create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Ndims[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nproc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndims,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dims[])</highlight></codeline>
<codeline lineno="989"><highlight class="normal">{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>check<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;ndims;<sp/>i++)<sp/>check<sp/>*=<sp/>Ndims[i];</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(check<sp/>==<sp/>nproc)<sp/>{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;ndims;<sp/>i++)<sp/>dims[i]<sp/>=<sp/>Ndims[i];</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Dims_create(nproc,<sp/>ndims,<sp/>dims);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight><highlight class="comment">//<sp/>create<sp/>1-,<sp/>2-<sp/>and<sp/>3-d<sp/>cartesian<sp/>data<sp/>distributions<sp/>with<sp/>explicitly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="comment">//<sp/>provided<sp/>dimension<sp/>lists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1afb8f9207619beb1a7f574954c83ea890" kindref="member">distribution_init_explicit</ref>(<ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref><sp/>comm,<sp/></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n[],<sp/></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nproc_1d[],</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nproc_2d_x[],</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nproc_2d_y[],</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nproc_2d_z[],</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nproc_3d[],</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdistribution__t" kindref="compound">distribution_t</ref><sp/>*d,<sp/></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug)</highlight></codeline>
<codeline lineno="1014"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a82ebfa634d9c07052140242ec82559e5" kindref="member">parent</ref><sp/>=<sp/>comm;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nproc;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ndim<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>period[3];</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/>MPI_Comm_rank(comm,<sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/>MPI_Comm_size(comm,<sp/>&amp;nproc);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>printf(</highlight><highlight class="stringliteral">&quot;Initializing<sp/>redistribution<sp/>using<sp/>a<sp/>%s<sp/>layout<sp/>on<sp/>%d<sp/>ranks.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1026"><highlight class="normal">#ifdef<sp/><ref refid="distribution__c_8h_1af9b3b05b3ffa6bbf7ca05cb71e02d000" kindref="member">PENCIL</ref></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;pencil&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal">#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;slab&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,nproc);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a8bdbbba2982ae871ad4c0f389ca78959" kindref="member">debug</ref><sp/>=<sp/>debug;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ad0fc01a1d38109451e446decb6cf91c5" kindref="member">n</ref>[i]<sp/>=<sp/>n[i];</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>supplied<sp/>dimension<sp/>lists<sp/>are<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/>assert(nproc_1d[0]<sp/>==<sp/>nproc);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/>assert(nproc_1d[1]<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/>assert(nproc_1d[2]<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/>assert(nproc_2d_x[1]<sp/>*<sp/>nproc_2d_x[2]<sp/>==<sp/>nproc);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/>assert(nproc_2d_x[0]<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/>assert(nproc_2d_y[0]<sp/>*<sp/>nproc_2d_y[2]<sp/>==<sp/>nproc);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/>assert(nproc_2d_y[1]<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/>assert(nproc_2d_z[0]<sp/>*<sp/>nproc_2d_z[1]<sp/>==<sp/>nproc);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/>assert(nproc_2d_z[2]<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/>assert(nproc_3d[0]<sp/>*<sp/>nproc_3d[1]<sp/>*<sp/>nproc_3d[2]==<sp/>nproc);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>process<sp/>grid<sp/>with<sp/>1d<sp/>decomposition<sp/>(SLABs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/>period[0]<sp/>=<sp/>period[1]<sp/>=<sp/>period[2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/>MPI_Cart_create(comm,<sp/>ndim,<sp/>nproc_1d,<sp/>period,<sp/>0,<sp/>&amp;d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/>MPI_Cart_get(d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>,<sp/>ndim,<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>,<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1ad76559fb8c453075eeb9fa02032160b3" kindref="member">period</ref>,<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]<sp/>=<sp/>n[0]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>=<sp/>n[1]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>=<sp/>n[2]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;<ref refid="structdistribution__t_1a8bdbbba2982ae871ad4c0f389ca78959" kindref="member">debug</ref><sp/>&amp;&amp;<sp/>0<sp/>==<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Process<sp/>grids:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>1d:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ndim;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d%s&quot;</highlight><highlight class="normal">,<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[i],<sp/><ref refid="distribution_8c_1aaed7bb4d93b34151fd86f295349cea4e" kindref="member">separator</ref>(i,<sp/>ndim));</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>process<sp/>grid<sp/>with<sp/>3d<sp/>decomposition<sp/>(CUBE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/>period[0]<sp/>=<sp/>period[1]<sp/>=<sp/>period[2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/>MPI_Cart_create(comm,<sp/>ndim,<sp/>nproc_3d,<sp/>period,<sp/>0,<sp/>&amp;d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><ref refid="distribution_8c_1ae4c86ea9f91153635f20d44b9de912aa" kindref="member">Coord_cube</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>,d);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;<ref refid="structdistribution__t_1a8bdbbba2982ae871ad4c0f389ca78959" kindref="member">debug</ref><sp/>&amp;&amp;<sp/>0<sp/>==<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>3d:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ndim;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d%s&quot;</highlight><highlight class="normal">,<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[i],<sp/><ref refid="distribution_8c_1aaed7bb4d93b34151fd86f295349cea4e" kindref="member">separator</ref>(i,<sp/>ndim));</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(debug){</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prev_coord[3];</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_coord[0]=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[0];</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_coord[1]=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[1];</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_coord[2]=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[2];</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Cart_get(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>,<sp/>ndim,<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>,<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1ad76559fb8c453075eeb9fa02032160b3" kindref="member">period</ref>,<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++){</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(prev_coord[i]<sp/>!=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[i])abort();</highlight><highlight class="comment">//Cube<sp/>coordinates<sp/>calculated<sp/>wrong!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]<sp/>=<sp/>n[0]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>=<sp/>n[1]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>=<sp/>n[2]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>process<sp/>grid<sp/>with<sp/>2d_x<sp/>decomposition<sp/>(X<sp/>dim<sp/>Pencils)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/>period[0]<sp/>=<sp/>period[1]<sp/>=<sp/>period[2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>MPI_Cart_create(comm,<sp/>ndim,<sp/>nproc_2d_x,<sp/>period,<sp/>0,<sp/>&amp;d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]=nproc_2d_x[0];</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]=nproc_2d_x[1];</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]=nproc_2d_x[2];</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]<sp/>=<sp/>n[0]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>=<sp/>n[1]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>=<sp/>n[2]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check_x_dims=((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2])<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1])<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2])<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0])<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!check_x_dims<sp/>&amp;&amp;<sp/>debug<sp/>&amp;&amp;<sp/>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==0)){</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>outfile;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>outfile=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;error.data&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(outfile,</highlight><highlight class="stringliteral">&quot;X<sp/>DIMS<sp/>FAILS:(%d,%d,%d)<sp/>(%d,%d,%d)<sp/>\n&quot;</highlight><highlight class="normal">,d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2],<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/>assert(check_x_dims);</highlight><highlight class="comment">//if<sp/>this<sp/>happends,<sp/>it<sp/>is<sp/>because<sp/>the<sp/>dimensions<sp/>were<sp/>chosen<sp/>incorrectly.<sp/>Either<sp/>to<sp/>many<sp/>processors<sp/>for<sp/>the<sp/>number<sp/>of<sp/>points<sp/>in<sp/>one<sp/>dimenison<sp/>(could<sp/>not<sp/>do<sp/>at<sp/>least<sp/>1<sp/>point<sp/>per<sp/>processor),<sp/>or<sp/>the<sp/>methods<sp/>above<sp/>could<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//not<sp/>make<sp/>a<sp/>distribution<sp/>of<sp/>pencils<sp/>that<sp/>fit<sp/>in<sp/>the<sp/>cubiods,<sp/>which<sp/>would<sp/>happen<sp/>if<sp/>the<sp/>user<sp/>gave<sp/>numbers<sp/>that<sp/>wouldent<sp/>work<sp/>(we<sp/>require<sp/>the<sp/>number<sp/>of<sp/>processors<sp/>in<sp/>each<sp/>dimension<sp/>of<sp/>the<sp/>cuboid<sp/>must<sp/>be<sp/>modulo<sp/>the<sp/>number<sp/>of<sp/>points<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//in<sp/>that<sp/>dimension,<sp/>otherwise,<sp/>this<sp/>error<sp/>will<sp/>happen).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><ref refid="distribution_8c_1af311497240c534b99258fcc520c8eebe" kindref="member">Coord_x_pencils</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>,d);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;<ref refid="structdistribution__t_1a8bdbbba2982ae871ad4c0f389ca78959" kindref="member">debug</ref><sp/>&amp;&amp;<sp/>0<sp/>==<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>2d_x:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ndim;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d%s&quot;</highlight><highlight class="normal">,<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[i],<sp/><ref refid="distribution_8c_1aaed7bb4d93b34151fd86f295349cea4e" kindref="member">separator</ref>(i,<sp/>ndim));</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>process<sp/>grid<sp/>with<sp/>2d_y<sp/>decomposition<sp/>(Y<sp/>dim<sp/>Pencils)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/>period[0]<sp/>=<sp/>period[1]<sp/>=<sp/>period[2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/>MPI_Cart_create(comm,<sp/>ndim,<sp/>nproc_2d_y,<sp/>period,<sp/>0,<sp/>&amp;d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]=nproc_2d_y[0];</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]=nproc_2d_y[1];</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]=nproc_2d_y[2];</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]<sp/>=<sp/>n[0]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>=<sp/>n[1]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>=<sp/>n[2]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check_y_dims=(((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2])<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0])<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2])<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0])<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!check_y_dims<sp/>&amp;&amp;<sp/>debug<sp/>&amp;&amp;<sp/>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==0)){</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>outfile;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>outfile=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;error.data&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(outfile,</highlight><highlight class="stringliteral">&quot;Y<sp/>DIMS<sp/>FAILS:(%d,%d,%d)<sp/>(%d,%d,%d)<sp/>\n&quot;</highlight><highlight class="normal">,d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2],<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/>assert(check_y_dims);</highlight><highlight class="comment">//if<sp/>this<sp/>happends,<sp/>it<sp/>is<sp/>because<sp/>the<sp/>dimensions<sp/>were<sp/>chosen<sp/>incorrectly.<sp/>Either<sp/>to<sp/>many<sp/>processors<sp/>for<sp/>the<sp/>number<sp/>of<sp/>points<sp/>in<sp/>one<sp/>dimenison<sp/>(could<sp/>not<sp/>do<sp/>at<sp/>least<sp/>1<sp/>point<sp/>per<sp/>processor),<sp/>or<sp/>the<sp/>methods<sp/>above<sp/>could<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//not<sp/>make<sp/>a<sp/>distribution<sp/>of<sp/>pencils<sp/>that<sp/>fit<sp/>in<sp/>the<sp/>cubiods,<sp/>which<sp/>would<sp/>happen<sp/>if<sp/>the<sp/>user<sp/>gave<sp/>numbers<sp/>that<sp/>wouldent<sp/>work<sp/>(we<sp/>require<sp/>the<sp/>number<sp/>of<sp/>processors<sp/>in<sp/>each<sp/>dimension<sp/>of<sp/>the<sp/>cuboid<sp/>must<sp/>be<sp/>modulo<sp/>the<sp/>number<sp/>of<sp/>points<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//in<sp/>that<sp/>dimension,<sp/>otherwise,<sp/>this<sp/>error<sp/>will<sp/>happen).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><ref refid="distribution_8c_1a91efcce74607bca8ccb2bf86ede7ddd5" kindref="member">Coord_y_pencils</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>,d);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;<ref refid="structdistribution__t_1a8bdbbba2982ae871ad4c0f389ca78959" kindref="member">debug</ref><sp/>&amp;&amp;<sp/>0<sp/>==<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>2d_y:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ndim;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d%s&quot;</highlight><highlight class="normal">,<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[i],<sp/><ref refid="distribution_8c_1aaed7bb4d93b34151fd86f295349cea4e" kindref="member">separator</ref>(i,<sp/>ndim));</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>process<sp/>grid<sp/>with<sp/>2d_z<sp/>decomposition<sp/>(Z<sp/>dim<sp/>pencils)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/>period[0]<sp/>=<sp/>period[1]<sp/>=<sp/>period[2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/>MPI_Cart_create(comm,<sp/>ndim,<sp/>nproc_2d_z,<sp/>period,<sp/>0,<sp/>&amp;d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]=nproc_2d_z[0];</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1]=nproc_2d_z[1];</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]=nproc_2d_z[2];</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]<sp/>=<sp/>n[0]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0];</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>=<sp/>n[1]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1];</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>=<sp/>n[2]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2];</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check_z_dims=((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0])<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>((d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1])<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1])<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0])<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(n[0]<sp/>%<sp/>(d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1])<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!check_z_dims<sp/>&amp;&amp;<sp/>debug<sp/>&amp;&amp;<sp/>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==0)){</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>outfile;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>outfile=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;error.data&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(outfile,</highlight><highlight class="stringliteral">&quot;Z<sp/>DIMS<sp/>FAILS:(%d,%d,%d)<sp/>(%d,%d,%d)<sp/>\n&quot;</highlight><highlight class="normal">,d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2],<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0],d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[1],d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[2]);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/>assert(check_z_dims);</highlight><highlight class="comment">//if<sp/>this<sp/>happends,<sp/>it<sp/>is<sp/>because<sp/>the<sp/>dimensions<sp/>were<sp/>chosen<sp/>incorrectly.<sp/>Either<sp/>to<sp/>many<sp/>processors<sp/>for<sp/>the<sp/>number<sp/>of<sp/>points<sp/>in<sp/>one<sp/>dimenison<sp/>(could<sp/>not<sp/>do<sp/>at<sp/>least<sp/>1<sp/>point<sp/>per<sp/>processor),<sp/>or<sp/>the<sp/>methods<sp/>above<sp/>could<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//not<sp/>make<sp/>a<sp/>distribution<sp/>of<sp/>pencils<sp/>that<sp/>fit<sp/>in<sp/>the<sp/>cubiods,<sp/>which<sp/>would<sp/>happen<sp/>if<sp/>the<sp/>user<sp/>gave<sp/>numbers<sp/>that<sp/>wouldent<sp/>work<sp/>(we<sp/>require<sp/>the<sp/>number<sp/>of<sp/>processors<sp/>in<sp/>each<sp/>dimension<sp/>of<sp/>the<sp/>cuboid<sp/>must<sp/>be<sp/>modulo<sp/>the<sp/>number<sp/>of<sp/>points<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//in<sp/>that<sp/>dimension,<sp/>otherwise,<sp/>this<sp/>error<sp/>will<sp/>happen).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><ref refid="distribution_8c_1ac25ab9e92db14985944a5f51218db6ab" kindref="member">Coord_z_pencils</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>,d);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;<ref refid="structdistribution__t_1a8bdbbba2982ae871ad4c0f389ca78959" kindref="member">debug</ref><sp/>&amp;&amp;<sp/>0<sp/>==<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>2d_z:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ndim;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d%s&quot;</highlight><highlight class="normal">,<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[i],<sp/><ref refid="distribution_8c_1aaed7bb4d93b34151fd86f295349cea4e" kindref="member">separator</ref>(i,<sp/>ndim));</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//assert<sp/>that<sp/>all<sp/>pencils<sp/>fit<sp/>in<sp/>the<sp/>cuboid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;<ref refid="structdistribution__t_1a8bdbbba2982ae871ad4c0f389ca78959" kindref="member">debug</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>myrank_cube;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="distribution_8c_1ad1ea5389446cfca9012818d81599d81d" kindref="member">Rank_cube</ref>(&amp;myrank_cube,d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>,d);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>myrank_z;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="distribution_8c_1adbaeef387d26c7edcbd5e9a13d6d1fec" kindref="member">Rank_z_pencils</ref>(&amp;myrank_z,d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>,d);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>myrank_y;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="distribution_8c_1aabd6606f208962a20790f9df1ae05d04" kindref="member">Rank_y_pencils</ref>(&amp;myrank_y,d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>,d);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>myrank_x;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="distribution_8c_1a01529a1209fac1485d38c87e23f7597e" kindref="member">Rank_x_pencils</ref>(&amp;myrank_x,d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>,d);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(myrank_z<sp/>!=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>||<sp/>myrank_y<sp/>!=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>||<sp/>myrank_x<sp/>!=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>||<sp/>myrank_cube<sp/>!=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)abort();<sp/></highlight><highlight class="comment">//means<sp/>ranks<sp/>were<sp/>calculated<sp/>wrong.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Process<sp/>map:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>nproc;<sp/>++p)<sp/>{</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Barrier(comm);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%d:<sp/>1d<sp/>=<sp/>(%d,<sp/>%d,<sp/>%d),<sp/>2d_x<sp/>=<sp/>(%d,<sp/>%d,<sp/>%d)<sp/>rank<sp/>(%d),<sp/>2d_y<sp/>=<sp/>(%d,<sp/>%d,<sp/>%d)<sp/>rank<sp/>(%d),<sp/>2d_z<sp/>=<sp/>(%d,<sp/>%d,<sp/>%d)<sp/>rank<sp/>(%d),<sp/>3d<sp/>=<sp/>(%d,<sp/>%d,<sp/>%d)<sp/>rank<sp/>(%d).\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[0],<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[1],<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[2],</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[0],<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[1],<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[2],myrank_x,</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[0],<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[1],<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[2],myrank_y,</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[0],<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[1],<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[2],myrank_z,</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[0],<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[1],<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[2],myrank_cube);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="comment">//<sp/>clean<sp/>up<sp/>the<sp/>data<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>d<sp/><sp/><sp/><sp/>distribution<sp/>descriptor</highlight></codeline>
<codeline lineno="1220"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1a6afadfd1cd0901bb32ca9647d46adc7f" kindref="member">distribution_fini</ref>(<ref refid="structdistribution__t" kindref="compound">distribution_t</ref><sp/>*d)</highlight></codeline>
<codeline lineno="1221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/>MPI_Comm_free(&amp;d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/>MPI_Comm_free(&amp;d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/>MPI_Comm_free(&amp;d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>);</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/>MPI_Comm_free(&amp;d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/>MPI_Comm_free(&amp;d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/>free(d-&gt;<ref refid="structdistribution__t_1a957bdfca24a116d7bb5f7bcbde3a93fa" kindref="member">d2_chunk</ref>);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/>free(d-&gt;<ref refid="structdistribution__t_1a971ee0fe2ddf42e0669273a5ebda1512" kindref="member">d3_chunk</ref>);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/>free(d-&gt;<ref refid="structdistribution__t_1aadae10ad5bacae5bceadd4eea37b12c6" kindref="member">gridmap</ref>);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/>free(d-&gt;<ref refid="structdistribution__t_1a65f303dfbdd0d1dbe148507bb0a48386" kindref="member">rankmap</ref>);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="comment">//<sp/>check<sp/>that<sp/>the<sp/>dimensions,<sp/>n,<sp/>of<sp/>an<sp/>array<sp/>are<sp/>commensurate<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight><highlight class="comment">//<sp/>process<sp/>grids<sp/>of<sp/>this<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>n<sp/><sp/><sp/><sp/>(global)<sp/>grid<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>d<sp/><sp/><sp/><sp/>distribution<sp/>descriptor</highlight></codeline>
<codeline lineno="1240"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1a5ede063a09c002a54cdd4cb80fe57bd2" kindref="member">distribution_assert_commensurate</ref>(<ref refid="structdistribution__t" kindref="compound">distribution_t</ref><sp/>*d)</highlight></codeline>
<codeline lineno="1241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(PENCIL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(0<sp/>==<sp/>(d-&gt;<ref refid="structdistribution__t_1ad0fc01a1d38109451e446decb6cf91c5" kindref="member">n</ref>[i]<sp/>%<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[i]));</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(0<sp/>==<sp/>(d-&gt;<ref refid="structdistribution__t_1ad0fc01a1d38109451e446decb6cf91c5" kindref="member">n</ref>[i]<sp/>%<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[i]));</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(0<sp/>==<sp/>(d-&gt;<ref refid="structdistribution__t_1ad0fc01a1d38109451e446decb6cf91c5" kindref="member">n</ref>[i]<sp/>%<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[i]));</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(0<sp/>==<sp/>(d-&gt;<ref refid="structdistribution__t_1ad0fc01a1d38109451e446decb6cf91c5" kindref="member">n</ref>[i]<sp/>%<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[i]));</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(0<sp/>==<sp/>(d-&gt;<ref refid="structdistribution__t_1ad0fc01a1d38109451e446decb6cf91c5" kindref="member">n</ref>[i]<sp/>%<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[i]));</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight><highlight class="comment">//<sp/>forward<sp/>declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1ac4ff94eb3995e0014a284a415919bec1" kindref="member">redistribute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*,<sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*,<sp/><ref refid="structdistribution__t" kindref="compound">distribution_t</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1a43da13e337f377862ca04fb68cdccc69" kindref="member">redistribute_2_and_3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*,<sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*,<sp/><ref refid="structdistribution__t" kindref="compound">distribution_t</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1a68991e16df33bb936768bd1faa71c978" kindref="member">redistribute_slab</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*,<sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*,<sp/><ref refid="structdistribution__t" kindref="compound">distribution_t</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="comment">//<sp/>redistribute<sp/>a<sp/>1-d<sp/>to<sp/>a<sp/>3-d<sp/>data<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>a<sp/><sp/><sp/><sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>b<sp/><sp/><sp/><sp/>ouput</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>d<sp/><sp/><sp/><sp/>distribution<sp/>descriptor</highlight></codeline>
<codeline lineno="1267"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1ab84f0b88c1e1d9f52466cade6c98ef79" kindref="member">distribution_1_to_3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*a,</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*b,</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdistribution__t" kindref="compound">distribution_t</ref><sp/>*d)</highlight></codeline>
<codeline lineno="1270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="distribution_8c_1acf625a919ad096563f5d50a5f2b0cf8b" kindref="member">USE_SLAB_WORKAROUND</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="distribution_8c_1a68991e16df33bb936768bd1faa71c978" kindref="member">redistribute_slab</ref>(a,<sp/>b,<sp/>d,<sp/><ref refid="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06cadb2db6e983734128c679d2d6f9660d0a" kindref="member">REDISTRIBUTE_1_TO_3</ref>);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="distribution_8c_1ac4ff94eb3995e0014a284a415919bec1" kindref="member">redistribute</ref>(a,<sp/>b,<sp/>d,<sp/><ref refid="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06cadb2db6e983734128c679d2d6f9660d0a" kindref="member">REDISTRIBUTE_1_TO_3</ref>);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="comment">//<sp/>redistribute<sp/>a<sp/>3-d<sp/>to<sp/>a<sp/>1-d<sp/>data<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>a<sp/><sp/><sp/><sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>b<sp/><sp/><sp/><sp/>ouput</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>d<sp/><sp/><sp/><sp/>distribution<sp/>descriptor</highlight></codeline>
<codeline lineno="1285"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1a220191ac4f250be755f3ed2968a501cd" kindref="member">distribution_3_to_1</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*a,</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*b,</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdistribution__t" kindref="compound">distribution_t</ref><sp/>*d)</highlight></codeline>
<codeline lineno="1288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="distribution_8c_1acf625a919ad096563f5d50a5f2b0cf8b" kindref="member">USE_SLAB_WORKAROUND</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="distribution_8c_1a68991e16df33bb936768bd1faa71c978" kindref="member">redistribute_slab</ref>(a,<sp/>b,<sp/>d,<sp/><ref refid="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06ca5f1e479eb94259389275a715271d0e26" kindref="member">REDISTRIBUTE_3_TO_1</ref>);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="distribution_8c_1ac4ff94eb3995e0014a284a415919bec1" kindref="member">redistribute</ref>(a,<sp/>b,<sp/>d,<sp/><ref refid="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06ca5f1e479eb94259389275a715271d0e26" kindref="member">REDISTRIBUTE_3_TO_1</ref>);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="comment">//<sp/>redistribute<sp/>between<sp/>1-<sp/>and<sp/>3-d<sp/>distributions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>a<sp/><sp/><sp/><sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>b<sp/><sp/><sp/><sp/>ouput</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>d<sp/><sp/><sp/><sp/>distribution<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>dir<sp/><sp/>direction<sp/>of<sp/>redistribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>actually<sp/>does<sp/>the<sp/>work.</highlight></codeline>
<codeline lineno="1306"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1ac4ff94eb3995e0014a284a415919bec1" kindref="member">redistribute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*a,</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*b,</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdistribution__t" kindref="compound">distribution_t</ref><sp/>*d,</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>direction)</highlight></codeline>
<codeline lineno="1310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remaining_dim[3];</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref><sp/>subgrid_cart;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subgrid_self;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subgrid_nproc;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>exchange<sp/>data<sp/>with<sp/>processes<sp/>in<sp/>a<sp/>2-d<sp/>slab<sp/>of<sp/>3-d<sp/>subdomains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/>remaining_dim[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/>remaining_dim[1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/>remaining_dim[2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/>MPI_Cart_sub(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>,<sp/>remaining_dim,<sp/>&amp;subgrid_cart);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/>MPI_Comm_rank(subgrid_cart,<sp/>&amp;subgrid_self);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/>MPI_Comm_size(subgrid_cart,<sp/>&amp;subgrid_nproc);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>subgrid_nproc;<sp/>++p)<sp/>{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d1_peer<sp/>=<sp/>(subgrid_self<sp/>+<sp/>p)<sp/>%<sp/>subgrid_nproc;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d3_peer<sp/>=<sp/>(subgrid_self<sp/>-<sp/>p<sp/>+<sp/>subgrid_nproc)<sp/>%<sp/>subgrid_nproc;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coord[2];</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizes[3];</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subsizes[3];</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>starts[3];</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__ccse-mpi_8H_1affc17fe964f9f670fb06e09d6134b4ff" kindref="member">MPI_Datatype</ref><sp/>d1_type;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__ccse-mpi_8H_1affc17fe964f9f670fb06e09d6134b4ff" kindref="member">MPI_Datatype</ref><sp/>d3_type;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Cart_coords(subgrid_cart,<sp/>d1_peer,<sp/>2,<sp/>coord);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0)<sp/>{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Comm_rank(<ref refid="AMReX__ccse-mpi_8H_1ac57c1fc8484fb9b5c8359a559851107b" kindref="member">MPI_COMM_WORLD</ref>,<sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d:<sp/>d1_peer,<sp/>d1_coord,<sp/>d3_peer<sp/>=<sp/>%d,<sp/>(%d,<sp/>%d),<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>d1_peer,<sp/>coord[0],<sp/>coord[1],<sp/>d3_peer);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>dataypes<sp/>representing<sp/>a<sp/>subarray<sp/>in<sp/>the<sp/>1-<sp/>and<sp/>3-d<sp/>distributions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>sizes[0]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0];</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>sizes[1]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1];</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>sizes[2]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2];</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>subsizes[0]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0];</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/>subsizes[1]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1];</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/>subsizes[2]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2];</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/>starts[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>starts[1]<sp/>=<sp/>coord[0]<sp/>*<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1];</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>starts[2]<sp/>=<sp/>coord[1]<sp/>*<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2];</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Type_create_subarray(3,<sp/>sizes,<sp/>subsizes,<sp/>starts,<sp/>MPI_ORDER_C,<sp/>MPI_DOUBLE_COMPLEX,<sp/>&amp;d1_type);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Type_commit(&amp;d1_type);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/>sizes[0]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0];</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/>sizes[1]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1];</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>sizes[2]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2];</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>subsizes[0]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0];</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>subsizes[1]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1];</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>subsizes[2]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2];</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/>starts[0]<sp/>=<sp/>d3_peer<sp/>*<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0];</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/>starts[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/>starts[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Type_create_subarray(3,<sp/>sizes,<sp/>subsizes,<sp/>starts,<sp/>MPI_ORDER_C,<sp/>MPI_DOUBLE_COMPLEX,<sp/>&amp;d3_type);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Type_commit(&amp;d3_type);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exchange<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/><ref refid="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06ca5f1e479eb94259389275a715271d0e26" kindref="member">REDISTRIBUTE_3_TO_1</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Sendrecv((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>a,<sp/>1,<sp/>d3_type,<sp/>d3_peer,<sp/>0,</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>b,<sp/>1,<sp/>d1_type,<sp/>d1_peer,<sp/>0,</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subgrid_cart,<sp/>MPI_STATUS_IGNORE);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/><ref refid="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06cadb2db6e983734128c679d2d6f9660d0a" kindref="member">REDISTRIBUTE_1_TO_3</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Sendrecv((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>a,<sp/>1,<sp/>d1_type,<sp/>d1_peer,<sp/>0,</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>b,<sp/>1,<sp/>d3_type,<sp/>d3_peer,<sp/>0,</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subgrid_cart,<sp/>MPI_STATUS_IGNORE);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>datatypes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Type_free(&amp;d1_type);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Type_free(&amp;d3_type);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/>MPI_Comm_free(&amp;subgrid_cart);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="comment">//<sp/>redistribute<sp/>between<sp/>1-<sp/>and<sp/>3-d<sp/>distributions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>a<sp/><sp/><sp/><sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>b<sp/><sp/><sp/><sp/>ouput</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>d<sp/><sp/><sp/><sp/>distribution<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>dir<sp/><sp/>direction<sp/>of<sp/>redistribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>actually<sp/>does<sp/>the<sp/>work,<sp/>using<sp/>slabs<sp/>of<sp/>subarrays<sp/>to<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight><highlight class="comment">//<sp/>around<sp/>an<sp/>issue<sp/>in<sp/>Open<sp/>MPI<sp/>with<sp/>large<sp/>non-contiguous<sp/>datatypes.</highlight></codeline>
<codeline lineno="1403"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1a68991e16df33bb936768bd1faa71c978" kindref="member">redistribute_slab</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*a,</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*b,</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdistribution__t" kindref="compound">distribution_t</ref><sp/>*d,</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>direction)</highlight></codeline>
<codeline lineno="1407"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remaining_dim[3];</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref><sp/>subgrid_cart;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subgrid_self;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subgrid_nproc;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/>ptrdiff_t<sp/>d1_slice<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>*<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref>);</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/>ptrdiff_t<sp/>d3_slice<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>*<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref>);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>exchange<sp/>data<sp/>with<sp/>processes<sp/>in<sp/>a<sp/>2-d<sp/>slab<sp/>of<sp/>3-d<sp/>subdomains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/>remaining_dim[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/>remaining_dim[1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/>remaining_dim[2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/>MPI_Cart_sub(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>,<sp/>remaining_dim,<sp/>&amp;subgrid_cart);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/>MPI_Comm_rank(subgrid_cart,<sp/>&amp;subgrid_self);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/>MPI_Comm_size(subgrid_cart,<sp/>&amp;subgrid_nproc);</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>subgrid_nproc;<sp/>++p)<sp/>{</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coord[2];</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d1_peer<sp/>=<sp/>(subgrid_self<sp/>+<sp/>p)<sp/>%<sp/>subgrid_nproc;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d3_peer<sp/>=<sp/>(subgrid_self<sp/>-<sp/>p<sp/>+<sp/>subgrid_nproc)<sp/>%<sp/>subgrid_nproc;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Cart_coords(subgrid_cart,<sp/>d1_peer,<sp/>2,<sp/>coord);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0)<sp/>{</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Comm_rank(<ref refid="AMReX__ccse-mpi_8H_1ac57c1fc8484fb9b5c8359a559851107b" kindref="member">MPI_COMM_WORLD</ref>,<sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d:<sp/>d1_peer,<sp/>d1_coord,<sp/>d3_peer<sp/>=<sp/>%d,<sp/>(%d,<sp/>%d),<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>d1_peer,<sp/>coord[0],<sp/>coord[1],<sp/>d3_peer);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slice<sp/>=<sp/>0;<sp/>slice<sp/>&lt;<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0];<sp/>++slice)<sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizes[2];</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subsizes[2];</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>starts[2];</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__ccse-mpi_8H_1affc17fe964f9f670fb06e09d6134b4ff" kindref="member">MPI_Datatype</ref><sp/>d1_type;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__ccse-mpi_8H_1affc17fe964f9f670fb06e09d6134b4ff" kindref="member">MPI_Datatype</ref><sp/>d3_type;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptrdiff_t<sp/>d1_offset<sp/>=<sp/>slice<sp/>*<sp/>d1_slice;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptrdiff_t<sp/>d3_offset<sp/>=<sp/>(slice<sp/>+<sp/>d3_peer<sp/>*<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0])<sp/>*<sp/>d3_slice;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>subarray<sp/>dataypes<sp/>representing<sp/>the<sp/>slice<sp/>subarray<sp/>in<sp/>the<sp/>1-<sp/>and<sp/>3-d<sp/>distributions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sizes[0]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1];</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sizes[1]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2];</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subsizes[0]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1];</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subsizes[1]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2];</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>starts[0]<sp/>=<sp/>coord[0]<sp/>*<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1];</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>starts[1]<sp/>=<sp/>coord[1]<sp/>*<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2];</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Type_create_subarray(2,<sp/>sizes,<sp/>subsizes,<sp/>starts,<sp/>MPI_ORDER_C,<sp/>MPI_DOUBLE_COMPLEX,<sp/>&amp;d1_type);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Type_commit(&amp;d1_type);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Type_contiguous(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]<sp/>*<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2],</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_DOUBLE_COMPLEX,</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;d3_type);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Type_commit(&amp;d3_type);</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exchange<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/><ref refid="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06ca5f1e479eb94259389275a715271d0e26" kindref="member">REDISTRIBUTE_3_TO_1</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Sendrecv((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>a<sp/>+<sp/>d3_offset,<sp/>1,<sp/>d3_type,<sp/>d3_peer,<sp/>0,</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>b<sp/>+<sp/>d1_offset,<sp/>1,<sp/>d1_type,<sp/>d1_peer,<sp/>0,</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subgrid_cart,<sp/>MPI_STATUS_IGNORE);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/><ref refid="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06cadb2db6e983734128c679d2d6f9660d0a" kindref="member">REDISTRIBUTE_1_TO_3</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Sendrecv((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>a<sp/>+<sp/>d1_offset,<sp/>1,<sp/>d1_type,<sp/>d1_peer,<sp/>0,</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>b<sp/>+<sp/>d3_offset,<sp/>1,<sp/>d3_type,<sp/>d3_peer,<sp/>0,</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subgrid_cart,<sp/>MPI_STATUS_IGNORE);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>datatypes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Type_free(&amp;d1_type);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Type_free(&amp;d3_type);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/>MPI_Comm_free(&amp;subgrid_cart);</highlight></codeline>
<codeline lineno="1484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="comment">//<sp/>redistribute<sp/>a<sp/>2-d<sp/>to<sp/>a<sp/>3-d<sp/>data<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>a<sp/><sp/><sp/><sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>b<sp/><sp/><sp/><sp/>ouput</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>d<sp/><sp/><sp/><sp/>distribution<sp/>descriptor</highlight></codeline>
<codeline lineno="1493"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1afc28f1bd3535d90cb0c2fbe9693adf32" kindref="member">distribution_2_to_3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*a,</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*b,</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdistribution__t" kindref="compound">distribution_t</ref><sp/>*d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z_dim)</highlight></codeline>
<codeline lineno="1496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><ref refid="distribution_8c_1a43da13e337f377862ca04fb68cdccc69" kindref="member">redistribute_2_and_3</ref>(a,<sp/>b,<sp/>d,<sp/><ref refid="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06ca93d616dcfe604bebc3850ec51b2f5d15" kindref="member">REDISTRIBUTE_2_TO_3</ref>,<sp/>z_dim);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="comment">//<sp/>redistribute<sp/>a<sp/>3-d<sp/>to<sp/>a<sp/>2-d<sp/>data<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>a<sp/><sp/><sp/><sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>b<sp/><sp/><sp/><sp/>ouput</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>d<sp/><sp/><sp/><sp/>distribution<sp/>descriptor</highlight></codeline>
<codeline lineno="1507"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1a7be0b4a332b149ab3d298bf0d1c86add" kindref="member">distribution_3_to_2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*a,</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*b,</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdistribution__t" kindref="compound">distribution_t</ref><sp/>*d,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z_dim)</highlight></codeline>
<codeline lineno="1510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><ref refid="distribution_8c_1a43da13e337f377862ca04fb68cdccc69" kindref="member">redistribute_2_and_3</ref>(a,<sp/>b,<sp/>d,<sp/><ref refid="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06cabbf46de6625103b22139e067e3d181fb" kindref="member">REDISTRIBUTE_3_TO_2</ref>,<sp/>z_dim);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="comment">//<sp/>redistribute<sp/>between<sp/>2-<sp/>and<sp/>3-d<sp/>distributions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>a<sp/><sp/><sp/><sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>b<sp/><sp/><sp/><sp/>ouput</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>d<sp/><sp/><sp/><sp/>distribution<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>dir<sp/><sp/>direction<sp/>of<sp/>redistribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>actually<sp/>does<sp/>the<sp/>work.</highlight></codeline>
<codeline lineno="1524"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="distribution_8c_1a43da13e337f377862ca04fb68cdccc69" kindref="member">redistribute_2_and_3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*a,</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="complex-type_8h_1a1275c0d3f53bdea128eba884da7fb08b" kindref="member">complex_t</ref><sp/>*b,</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdistribution__t" kindref="compound">distribution_t</ref><sp/>*d,</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>direction,</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z_dim)</highlight></codeline>
<codeline lineno="1529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[0];</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>npeers;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>me=0;</highlight><highlight class="comment">//determines<sp/>which<sp/>processor<sp/>to<sp/>print</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>print_me=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//prints<sp/>info<sp/>on<sp/>proccessor<sp/>whose<sp/>rank<sp/>=<sp/>me.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>print_mess=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight><highlight class="comment">//prints<sp/>communication<sp/>sends<sp/>and<sp/>recieves<sp/>without<sp/>actually<sp/>doing<sp/>the<sp/>comms(intended<sp/>to<sp/>debug<sp/>comm<sp/>hangs).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>print_result=</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*true*/</highlight><highlight class="normal">;</highlight><highlight class="comment">//prints<sp/>a<sp/>line<sp/>in<sp/>a<sp/>file<sp/>called<sp/>&quot;passed.data&quot;<sp/>which<sp/>happends<sp/>if<sp/>the<sp/>code<sp/>runs<sp/>completly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/>assert(z_dim==0||z_dim==1||z_dim==2);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_dim=0,y_dim=0;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//x_dim,<sp/>y_dim<sp/>and<sp/>z_dim<sp/>are<sp/>the<sp/>dimensions<sp/>of<sp/>the<sp/>x,y,z<sp/>axis<sp/>of<sp/>the<sp/>pencil<sp/>with<sp/>respect<sp/>to<sp/>the<sp/>original<sp/>axis(where<sp/>index<sp/>2<sp/>is<sp/>into<sp/>the<sp/>grid,<sp/>1<sp/>is<sp/>vertical<sp/>translation<sp/>and<sp/>0<sp/>is<sp/>horizontal).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(z_dim){</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>x_dim=1;<sp/>y_dim=2;<sp/></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me)<sp/>&amp;&amp;<sp/>print_me)fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;DOING<sp/>X<sp/>PENCILS!...\n&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>x_dim=2;<sp/>y_dim=0;</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me<sp/>&amp;&amp;<sp/>print_me))fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;DOING<sp/>Y<sp/>PENCILS!...\n&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>x_dim=0;<sp/>y_dim=1;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me<sp/>&amp;&amp;<sp/>print_me))fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;DOING<sp/>Z<sp/>PENCILS!...\n&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>assert(</highlight><highlight class="stringliteral">&quot;incorrect<sp/>inputed<sp/>dimension&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>assuming<sp/>dimensions<sp/>are<sp/>all<sp/>commensurate,<sp/>then<sp/>the<sp/>number<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>peers<sp/>to<sp/>exchange<sp/>with<sp/>is<sp/>the<sp/>number<sp/>of<sp/>processes<sp/>in<sp/>the<sp/>z_dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>direction<sp/>in<sp/>the<sp/>3d<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/>npeers<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[z_dim];<sp/></highlight><highlight class="comment">//picked<sp/>last<sp/>direction<sp/>(lets<sp/>say<sp/>into<sp/>the<sp/>grid)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>book-keeping<sp/>for<sp/>the<sp/>processor<sp/>translation<sp/>in<sp/>the<sp/>x-y<sp/>plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p1max<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><ref refid="AMReX__ccse-mpi_8H_1a240e9d13a157e03c75e42306b13cd8d8" kindref="member">MPI_Request</ref><sp/>req1=<ref refid="AMReX__ccse-mpi_8H_1a1f063a918d9598b982feec3690d69bec" kindref="member">MPI_REQUEST_NULL</ref>;</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><ref refid="AMReX__ccse-mpi_8H_1a240e9d13a157e03c75e42306b13cd8d8" kindref="member">MPI_Request</ref><sp/>req2=<ref refid="AMReX__ccse-mpi_8H_1a1f063a918d9598b982feec3690d69bec" kindref="member">MPI_REQUEST_NULL</ref>;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pencil_sizes[3];</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cube_sizes[3];</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subsizes[3];</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/>cube_sizes[x_dim]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[x_dim];</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/>cube_sizes[y_dim]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[y_dim];<sp/></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/>cube_sizes[z_dim]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[z_dim];</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//set<sp/>varibles<sp/>used<sp/>to<sp/>calculate<sp/>the<sp/>subarrays<sp/>of<sp/>each<sp/>pencil<sp/>and<sp/>cube.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(z_dim){</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1max<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[x_dim]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[x_dim]<sp/>-<sp/>1;<sp/></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//find<sp/>out<sp/>the<sp/>size<sp/>of<sp/>the<sp/>chunk<sp/>you<sp/>need<sp/>to<sp/>use<sp/>(stored<sp/>in<sp/>subsizes),<sp/>and<sp/>set<sp/>sizes<sp/>to<sp/>the<sp/>local<sp/>size<sp/>of<sp/>the<sp/>pencil.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>x<sp/>and<sp/>y<sp/>dimensions<sp/>of<sp/>the<sp/>subchunck<sp/>will<sp/>be<sp/>the<sp/>dimensions<sp/>of<sp/>the<sp/>pencil<sp/>(since<sp/>the<sp/>code<sp/>asserts<sp/>at<sp/>the<sp/>beginning<sp/>that<sp/>all<sp/>pencils<sp/>fit<sp/>inside<sp/>the<sp/>3d<sp/>cuboid.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>z<sp/>dimension<sp/>will<sp/>be<sp/>the<sp/>dimension<sp/>of<sp/>the<sp/>cuboid,<sp/>since<sp/>this<sp/>will<sp/>always<sp/>be<sp/>&lt;=<sp/>to<sp/>the<sp/>z_dim<sp/>of<sp/>the<sp/>pencil.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pencil_sizes[x_dim]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[x_dim];</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pencil_sizes[y_dim]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[y_dim];<sp/><sp/></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pencil_sizes[z_dim]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[z_dim];<sp/></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subsizes[x_dim]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[x_dim];</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subsizes[y_dim]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[y_dim];<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1max<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[x_dim]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[x_dim]<sp/>-<sp/>1;<sp/></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pencil_sizes[x_dim]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[x_dim];</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pencil_sizes[y_dim]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[y_dim];<sp/><sp/></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pencil_sizes[z_dim]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[z_dim];<sp/></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subsizes[x_dim]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[x_dim];</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subsizes[y_dim]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[y_dim];<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1max<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[y_dim]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[y_dim]<sp/>-<sp/>1;<sp/></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pencil_sizes[x_dim]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[x_dim];</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pencil_sizes[y_dim]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[y_dim];<sp/><sp/></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pencil_sizes[z_dim]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[z_dim];<sp/></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subsizes[x_dim]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[x_dim];</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subsizes[y_dim]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[y_dim];<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/>subsizes[z_dim]<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[z_dim];</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chunk_size=subsizes[0]*subsizes[1]*subsizes[2];</highlight><highlight class="comment">//size<sp/>of<sp/>data<sp/>chunks<sp/>that<sp/>will<sp/>be<sp/>communicated<sp/>between<sp/>pencil<sp/>and<sp/>cube<sp/>distributions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//set<sp/>variables<sp/>that<sp/>will<sp/>be<sp/>used<sp/>to<sp/>find<sp/>pencils<sp/>chunks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pencil_dims[3]={0,0,0};</highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>entire<sp/>pencil<sp/>in<sp/>its<sp/>local<sp/>coord<sp/>system<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_sizes[3]={0,0,0};<sp/></highlight><highlight class="comment">//size<sp/>of<sp/>chunck<sp/>in<sp/>its<sp/>local<sp/>coord<sp/>system.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(z_dim==2){</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/>local_sizes[0]=subsizes[0];</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/>local_sizes[1]=subsizes[1];</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/>local_sizes[2]=subsizes[2];</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/>pencil_dims[0]=d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0];</highlight><highlight class="comment">//pencil<sp/>dims<sp/>in<sp/>grid<sp/>coord<sp/>system<sp/>(where<sp/>index<sp/>2<sp/>is<sp/>the<sp/>z<sp/>direction).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/>pencil_dims[1]=d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1];</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/>pencil_dims[2]=d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2];</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(z_dim==1){</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/>local_sizes[0]=subsizes[0];</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/>local_sizes[1]=subsizes[2];</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/>local_sizes[2]=subsizes[1];</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/>pencil_dims[0]=d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0];</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/>pencil_dims[1]=d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2];</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/>pencil_dims[2]=d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1];</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(z_dim==0){</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/>local_sizes[0]=subsizes[2];</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/>local_sizes[1]=subsizes[1];</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/>local_sizes[2]=subsizes[0];</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/>pencil_dims[0]=d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2];</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/>pencil_dims[1]=d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1];</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/>pencil_dims[2]=d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0];</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me)<sp/>&amp;&amp;<sp/>print_me)fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d,<sp/>%d,<sp/>%d,<sp/>%d<sp/>Dimensions!...\n&quot;</highlight><highlight class="normal">,<sp/>x_dim,y_dim,z_dim,<sp/>p1max);</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>communicate<sp/>with<sp/>our<sp/>peers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>npeers;<sp/>++p)<sp/>{</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me)<sp/>&amp;&amp;<sp/>print_me)fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d,<sp/>%d,<sp/>%d<sp/>Made<sp/>it<sp/>beg-for!...\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,p,<sp/>npeers);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d2_coord[3];</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d2_peer;</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d2_peer_coord[3];</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d3_coord[3];</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d3_peer;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d3_peer_coord[3];</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recv_peer;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>send_peer;</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d2_array_start[3];</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d3_array_start[3];</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//turn<sp/>the<sp/>processor<sp/>coordinate<sp/>into<sp/>one<sp/>specified<sp/>by<sp/>the<sp/>number<sp/>of<sp/>data<sp/>points<sp/>in<sp/>each<sp/>dimension.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(z_dim){</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>d2_coord[i]<sp/><sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[i]<sp/>*<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[i];<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>d2_coord[i]<sp/><sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[i]<sp/>*<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[i];<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>d2_coord[i]<sp/><sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[i]<sp/>*<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[i];<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//over<sp/>every<sp/>iteration<sp/>of<sp/>the<sp/>loop,<sp/>transverse<sp/>down<sp/>the<sp/>pencil<sp/>(since<sp/>it<sp/>will<sp/>be<sp/>divided<sp/>in<sp/>chunks<sp/>whose<sp/>coordinates<sp/>will<sp/>only<sp/>differ<sp/>in<sp/>the<sp/>z_dimension.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/>d2_coord[z_dim]<sp/>+=<sp/>p<sp/>*<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[z_dim];<sp/></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me)<sp/>&amp;&amp;<sp/>print_me)fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d,<sp/>%d,<sp/>%d<sp/>Coord!...\n&quot;</highlight><highlight class="normal">,<sp/>d2_coord[0],d2_coord[1],d2_coord[2]);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//d2_array_start<sp/>is<sp/>the<sp/>starting<sp/>index<sp/>of<sp/>the<sp/>chunk<sp/>in<sp/>the<sp/>pencils<sp/>local<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/>d2_array_start[0]<sp/>=<sp/>d2_coord[x_dim]<sp/>%<sp/>pencil_sizes[x_dim];<sp/></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/>d2_array_start[1]<sp/>=<sp/>d2_coord[y_dim]<sp/>%<sp/>pencil_sizes[y_dim];<sp/></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/>d2_array_start[2]<sp/>=<sp/>d2_coord[z_dim]<sp/>%<sp/>pencil_sizes[z_dim];<sp/></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="distribution_8c_1a4b0f3914f3a5d4e3126ae2331c245c69" kindref="member">DEBUG_CONDITION</ref><sp/>||<sp/>((</highlight><highlight class="keyword">self</highlight><highlight class="normal">==<sp/>me)<sp/>&amp;&amp;<sp/>print_me))<sp/>{</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%d:<sp/>pencil_sizes=(%d,%d,%d),<sp/>cube_sizes=(%d,%d,%d),<sp/>subsizes=(%d,%d,%d),d2_coord=(%d,%d,%d),<sp/>d2_array_start=(%d,%d,%d)<sp/>\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pencil_sizes[0],<sp/>pencil_sizes[1],<sp/>pencil_sizes[2],</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube_sizes[0],<sp/>cube_sizes[1],<sp/>cube_sizes[2],</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subsizes[0],<sp/>subsizes[1],<sp/>subsizes[2],</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2_coord[0],<sp/>d2_coord[1],<sp/>d2_coord[2],</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2_array_start[0],d2_array_start[1],d2_array_start[2]);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>making<sp/>cuboids<sp/>from<sp/>pencils,<sp/>right<sp/>here<sp/>we<sp/>need<sp/>to<sp/>fill<sp/>the<sp/>d2_chunk<sp/>array<sp/>with<sp/>the<sp/>data<sp/>that<sp/>later<sp/>needs<sp/>to<sp/>be<sp/>sent<sp/>to<sp/>a<sp/>cuboid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>array<sp/>is<sp/>a<sp/>chunk<sp/>of<sp/>the<sp/>pencil<sp/>and<sp/>is<sp/>why<sp/>we<sp/>needed<sp/>to<sp/>calculate<sp/>the<sp/>starting<sp/>index<sp/>for<sp/>the<sp/>array<sp/>in<sp/>the<sp/>local<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(direction<sp/>==<sp/><ref refid="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06ca93d616dcfe604bebc3850ec51b2f5d15" kindref="member">REDISTRIBUTE_2_TO_3</ref>){<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>ch_indx=0;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dims_size=pencil_dims[0]*pencil_dims[1]*pencil_dims[2];</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i0=d2_array_start[0];i0&lt;d2_array_start[0]+local_sizes[0];i0++){</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i1=d2_array_start[1];i1&lt;d2_array_start[1]+local_sizes[1];i1++){</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2=d2_array_start[2];i2&lt;d2_array_start[2]+local_sizes[2];i2++){</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>local_indx=pencil_dims[2]*(pencil_dims[1]*i0+i1)<sp/>+<sp/>i2;</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(local_indx<sp/>&lt;<sp/>dims_size);</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ch_indx<sp/>&lt;chunk_size<sp/>&amp;&amp;<sp/>ch_indx<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>local_indx&gt;=0<sp/>&amp;&amp;<sp/>local_indx<sp/>&lt;<sp/>dims_size);</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a957bdfca24a116d7bb5f7bcbde3a93fa" kindref="member">d2_chunk</ref>[ch_indx]=a[local_indx];</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch_indx++;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me)<sp/>&amp;&amp;<sp/>print_me)fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d,<sp/>%d,<sp/>%d,<sp/>pencil_dims!...\n&quot;</highlight><highlight class="normal">,<sp/>pencil_dims[0],pencil_dims[1],pencil_dims[2]);</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>what<sp/>peer<sp/>in<sp/>the<sp/>3d<sp/>distribution<sp/>owns<sp/>this<sp/>subarray?<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d3_peer_coord[i]<sp/>=<sp/>d2_coord[i]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[i];</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me)<sp/>&amp;&amp;<sp/>print_me)fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d,<sp/>%d,<sp/>%d<sp/>Cube<sp/>that<sp/>hits<sp/>pencil<sp/>coord!...\n&quot;</highlight><highlight class="normal">,d3_peer_coord[0],d3_peer_coord[1],d3_peer_coord[2]);</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//find<sp/>the<sp/>rank<sp/>of<sp/>this<sp/>peer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(z_dim){</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>MPI_Cart_rank(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>,<sp/>d3_peer_coord,<sp/>&amp;d3_peer);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>MPI_Cart_rank(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>,<sp/>d3_peer_coord,<sp/>&amp;d3_peer);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>MPI_Cart_rank(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>,<sp/>d3_peer_coord,<sp/>&amp;d3_peer);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me)<sp/>&amp;&amp;<sp/>print_me)fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d,<sp/>%d,<sp/>Made<sp/>it<sp/>half<sp/>way!...\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,p);</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me)<sp/>&amp;&amp;<sp/>print_me)fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d,<sp/>%d,<sp/>PEER!...\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,d3_peer);</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//By<sp/>here<sp/>in<sp/>the<sp/>for<sp/>loop,<sp/>we<sp/>have<sp/>broken<sp/>the<sp/>pencil<sp/>into<sp/>a<sp/>chunk<sp/>and<sp/>found<sp/>which<sp/>cuboid<sp/>it<sp/>resides;<sp/>over<sp/>every<sp/>iteration,<sp/>the<sp/>for-loop<sp/>will<sp/>break<sp/>up<sp/>the<sp/>pencil<sp/>in<sp/>the<sp/>z_dimension.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//From<sp/>here<sp/>on<sp/>we<sp/>do<sp/>the<sp/>opposite.<sp/>We<sp/>divide<sp/>the<sp/>cuboid<sp/>into<sp/>chunks<sp/>(that<sp/>are<sp/>the<sp/>same<sp/>size<sp/>as<sp/>the<sp/>ones<sp/>in<sp/>the<sp/>pencil),<sp/>and<sp/>determine<sp/>which<sp/>pencils<sp/>own<sp/>these<sp/>chunks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>what<sp/>is<sp/>the<sp/>coordinate<sp/>of<sp/>my<sp/>pth<sp/>subarray<sp/>in<sp/>the<sp/>3d<sp/>distribution?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(z_dim){</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>d3_coord[i]<sp/><sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[i]<sp/>*<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[i];<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>d3_coord[i]<sp/><sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[i]<sp/>*<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[i];<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>d3_coord[i]<sp/><sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a17cda1536be174c164b9d442fcf354af" kindref="member">self</ref>[i]<sp/>*<sp/>d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[i];<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>unlike<sp/>above,<sp/>we<sp/>dont<sp/>need<sp/>to<sp/>iterate<sp/>in<sp/>the<sp/>z_dim,<sp/>because<sp/>for<sp/>each<sp/>processor<sp/>its<sp/>subarrays<sp/>inward<sp/>dimension<sp/>is<sp/>already<sp/>set<sp/>by<sp/>the<sp/>cubes<sp/>z_dim.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Instead,<sp/>each<sp/>iteration<sp/>of<sp/>the<sp/>for-loop<sp/>will<sp/>look<sp/>at<sp/>different<sp/>subarrays<sp/>whose<sp/>locations<sp/>in<sp/>the<sp/>cuboid<sp/>differ<sp/>by<sp/>local<sp/>x<sp/>and<sp/>y<sp/>coords.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(z_dim){</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//p1<sp/>is<sp/>a<sp/>place<sp/>holder<sp/>for<sp/>the<sp/>first<sp/>translation<sp/>.<sp/>The<sp/>outside<sp/>for-loop<sp/>will<sp/>increment<sp/>the<sp/>coord<sp/>in<sp/>that<sp/>direction,<sp/>say<sp/>x_dim,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>keep<sp/>doing<sp/>so<sp/>until<sp/>all<sp/>of<sp/>the<sp/>chunks<sp/>in<sp/>that<sp/>dimension<sp/>are<sp/>calculated.<sp/>Then<sp/>it<sp/>will<sp/>increment<sp/>p0<sp/>in<sp/>the<sp/>other<sp/>dimension<sp/>(in<sp/>this<sp/>example<sp/>the<sp/>y)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>repeat<sp/>until<sp/>all<sp/>of<sp/>the<sp/>subchunks<sp/>in<sp/>the<sp/>x<sp/>and<sp/>y<sp/>dimensions<sp/>are<sp/>calculated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//are<sp/>found.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Note:<sp/>p0<sp/>and<sp/>p1<sp/>will<sp/>increment<sp/>different<sp/>dimensions<sp/>depending<sp/>of<sp/>whether<sp/>it<sp/>is<sp/>using<sp/>the<sp/>x<sp/>y<sp/>or<sp/>z<sp/>pencils,<sp/>this<sp/>is<sp/>because<sp/>the<sp/>set<sp/>up<sp/>of<sp/>the<sp/>coordinate<sp/>system<sp/>for<sp/>each<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pencil<sp/>is<sp/>different<sp/>and<sp/>to<sp/>ensure<sp/>that<sp/>no<sp/>communications<sp/>hang<sp/>up<sp/>later,<sp/>the<sp/>directions<sp/>coded<sp/>below<sp/>are<sp/>unique<sp/>for<sp/>each<sp/>type<sp/>of<sp/>pencil.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/>d3_coord[y_dim]<sp/>+=<sp/>p0<sp/>*<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[y_dim];<sp/></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/>d3_coord[x_dim]<sp/>+=<sp/>p1<sp/>*<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[x_dim];<sp/></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/>d3_coord[y_dim]<sp/>+=<sp/>p0<sp/>*<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[y_dim];<sp/></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/>d3_coord[x_dim]<sp/>+=<sp/>p1<sp/>*<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[x_dim];<sp/></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/>d3_coord[x_dim]<sp/>+=<sp/>p0<sp/>*<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[x_dim];<sp/></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/>d3_coord[y_dim]<sp/>+=<sp/>p1<sp/>*<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[y_dim];<sp/></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p1<sp/>==<sp/>p1max)<sp/>{</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p0++;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p1++;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>dataype<sp/>for<sp/>my<sp/>pth<sp/>subrarray<sp/>in<sp/>the<sp/>3d<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//d3_array_start<sp/>holds<sp/>the<sp/>starting<sp/>index<sp/>of<sp/>the<sp/>chunk<sp/>in<sp/>the<sp/>cubes<sp/>local<sp/>coordinates(note<sp/>the<sp/>cubes<sp/>local<sp/>coord<sp/>system<sp/>is<sp/>actually<sp/>the<sp/>same<sp/>as<sp/>the<sp/>grids<sp/>global<sp/>coord<sp/>system,<sp/>by<sp/>set<sp/>up)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/>d3_array_start[x_dim]<sp/>=<sp/>d3_coord[x_dim]<sp/>%<sp/>cube_sizes[x_dim];<sp/></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/>d3_array_start[y_dim]<sp/>=<sp/>d3_coord[y_dim]<sp/>%<sp/>cube_sizes[y_dim];<sp/></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/>d3_array_start[z_dim]<sp/>=<sp/>d3_coord[z_dim]<sp/>%<sp/>cube_sizes[z_dim];<sp/></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//make<sp/>starting<sp/>point<sp/>so<sp/>that<sp/>it<sp/>coincides<sp/>with<sp/>the<sp/>starting<sp/>point<sp/>of<sp/>the<sp/>pencil<sp/>from<sp/>the<sp/>pencils<sp/>coordinate<sp/>system.<sp/>(for<sp/>z_pencils<sp/>nothing<sp/>needs<sp/>to<sp/>be<sp/>changed,<sp/>since<sp/>it<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//has<sp/>the<sp/>coordinate<sp/>system<sp/>of<sp/>the<sp/>grid,<sp/>however,<sp/>the<sp/>x<sp/>and<sp/>y<sp/>pencils<sp/>have<sp/>different<sp/>starting<sp/>points<sp/>of<sp/>the<sp/>subchunk<sp/>in<sp/>their<sp/>coord<sp/>systems.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(z_dim==0<sp/>||<sp/>z_dim<sp/>==1){</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d3_array_start[2]=d3_array_start[2]+subsizes[2]-1;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(print_me<sp/>&amp;&amp;<sp/>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==me))fprintf(stderr,</highlight><highlight class="stringliteral">&quot;D3_array_start<sp/>is<sp/>(%d,%d,%d)<sp/>and<sp/>subsizes<sp/>is<sp/>(%d,%d,%d)<sp/>\n&quot;</highlight><highlight class="normal">,d3_array_start[0],d3_array_start[1],d3_array_start[2],subsizes[0],subsizes[1],subsizes[2]);</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>sending<sp/>cube<sp/>chunks<sp/>to<sp/>pencils,<sp/>need<sp/>to<sp/>fill<sp/>those<sp/>chunks<sp/>with<sp/>data<sp/>here.<sp/>The<sp/>chunks<sp/>are<sp/>filled<sp/>in<sp/>the<sp/>order<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//such<sp/>that<sp/>when<sp/>the<sp/>pencil<sp/>recieves<sp/>the<sp/>chunk,<sp/>in<sp/>its<sp/>local<sp/>array<sp/>indexing,<sp/>it<sp/>assumes<sp/>that<sp/>the<sp/>array<sp/>is<sp/>already<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//filled<sp/>such<sp/>that<sp/>it<sp/>is<sp/>contiguous.<sp/>Therefore,<sp/>complicated<sp/>for-loops<sp/>below<sp/>fill<sp/>the<sp/>array<sp/>in<sp/>the<sp/>cubes<sp/>local<sp/>indexing<sp/>to<sp/>match<sp/>what<sp/>the<sp/>pencil<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//expect.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(direction<sp/>==<sp/><ref refid="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06cabbf46de6625103b22139e067e3d181fb" kindref="member">REDISTRIBUTE_3_TO_2</ref>){</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>ch_indx=0;</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dims_size=cube_sizes[0]*cube_sizes[1]*cube_sizes[2];</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me)<sp/>&amp;&amp;<sp/>print_me)fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d,<sp/>%d,<sp/>MAKE<sp/>3D<sp/>Chunk...\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,d3_peer);</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(z_dim){</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2=d3_array_start[y_dim];i2&gt;d3_array_start[y_dim]-subsizes[y_dim];i2--){</highlight><highlight class="comment">//perhaps<sp/>y_dim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i1=d3_array_start[x_dim];i1&lt;d3_array_start[x_dim]+subsizes[x_dim];i1++){</highlight><highlight class="comment">//perhaps<sp/>x_dim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i0=d3_array_start[z_dim];i0&lt;d3_array_start[z_dim]+subsizes[z_dim];i0++){</highlight><highlight class="comment">//perhaps<sp/>z_dim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>local_indx=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]*(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]*i0+i1)<sp/>+<sp/>i2;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(local_indx<sp/>&lt;<sp/>dims_size);</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ch_indx<sp/>&lt;chunk_size<sp/>&amp;&amp;<sp/>ch_indx<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>local_indx&gt;=0<sp/>&amp;&amp;<sp/>local_indx<sp/>&lt;<sp/>dims_size);</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a971ee0fe2ddf42e0669273a5ebda1512" kindref="member">d3_chunk</ref>[ch_indx]=a[local_indx];</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch_indx++;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i0=d3_array_start[y_dim];i0&lt;d3_array_start[y_dim]+subsizes[y_dim];i0++){</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2=d3_array_start[x_dim];i2&gt;d3_array_start[x_dim]-subsizes[x_dim];i2--){</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i1=d3_array_start[z_dim];i1&lt;d3_array_start[z_dim]+subsizes[z_dim];i1++){</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>local_indx=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]*(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]*i0+i1)<sp/>+<sp/>i2;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(local_indx<sp/>&lt;<sp/>dims_size);</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ch_indx<sp/>&lt;chunk_size<sp/>&amp;&amp;<sp/>ch_indx<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>local_indx&gt;=0<sp/>&amp;&amp;<sp/>local_indx<sp/>&lt;<sp/>dims_size);</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a971ee0fe2ddf42e0669273a5ebda1512" kindref="member">d3_chunk</ref>[ch_indx]=a[local_indx];</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch_indx++;</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i0=d3_array_start[x_dim];i0&lt;d3_array_start[x_dim]+subsizes[x_dim];i0++){</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i1=d3_array_start[y_dim];i1&lt;d3_array_start[y_dim]+subsizes[y_dim];i1++){</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2=d3_array_start[z_dim];i2&lt;d3_array_start[z_dim]+subsizes[z_dim];i2++){</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>local_indx=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]*(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]*i0+i1)<sp/>+<sp/>i2;</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(local_indx<sp/>&lt;<sp/>dims_size);</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ch_indx<sp/>&lt;chunk_size<sp/>&amp;&amp;<sp/>ch_indx<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>local_indx&gt;=0<sp/>&amp;&amp;<sp/>local_indx<sp/>&lt;<sp/>dims_size);</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="structdistribution__t_1a971ee0fe2ddf42e0669273a5ebda1512" kindref="member">d3_chunk</ref>[ch_indx]=a[local_indx];</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch_indx++;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="distribution_8c_1a4b0f3914f3a5d4e3126ae2331c245c69" kindref="member">DEBUG_CONDITION</ref><sp/>||<sp/>((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me)<sp/>&amp;&amp;<sp/>print_me))<sp/>{</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%d:<sp/>pencil_sizes=(%d,%d,%d),<sp/>cube_sizes=(%d,%d,%d),<sp/>subsizes=(%d,%d,%d),<sp/>d3_coord=(%d,%d,%d),<sp/>d3_array_start=(%d,%d,%d)<sp/>\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pencil_sizes[0],<sp/>pencil_sizes[1],<sp/>pencil_sizes[2],</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cube_sizes[0],<sp/>cube_sizes[1],<sp/>cube_sizes[2],</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subsizes[0],<sp/>subsizes[1],<sp/>subsizes[2],</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d3_coord[0],<sp/>d3_coord[1],<sp/>d3_coord[2],</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d3_array_start[0],d3_array_start[1],d3_array_start[2]);</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>what<sp/>peer<sp/>in<sp/>the<sp/>2d<sp/>distribution<sp/>owns<sp/>this<sp/>subarray?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(z_dim){</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d2_peer_coord[i]<sp/>=<sp/>d3_coord[i]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1af6a7bae9b4cb830d7c37076561f1417c" kindref="member">process_topology_2_x</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[i];</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d2_peer_coord[i]<sp/>=<sp/>d3_coord[i]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a00fcc37760762bee9052ff654398aaee" kindref="member">process_topology_2_y</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[i];</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d2_peer_coord[i]<sp/>=<sp/>d3_coord[i]<sp/>/<sp/>d-&gt;<ref refid="structdistribution__t_1a48496ef186f85b7d82d83592b366c03f" kindref="member">process_topology_2_z</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[i];</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/>d2_peer_coord[z_dim]<sp/>=<sp/>0;</highlight><highlight class="comment">//since<sp/>these<sp/>are<sp/>pencils,<sp/>there<sp/>is<sp/>no<sp/>two<sp/>pencils<sp/>in<sp/>this<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me)<sp/>&amp;&amp;<sp/>print_me)fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d,<sp/>%d,<sp/>%d<sp/>PENCIL<sp/>that<sp/>hits<sp/>chunk!...\n&quot;</highlight><highlight class="normal">,d2_peer_coord[0],d2_peer_coord[1],d2_peer_coord[2]);</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(z_dim){</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//find<sp/>its<sp/>rank</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="distribution_8c_1a01529a1209fac1485d38c87e23f7597e" kindref="member">Rank_x_pencils</ref>(&amp;d2_peer,d2_peer_coord,d);</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="distribution_8c_1aabd6606f208962a20790f9df1ae05d04" kindref="member">Rank_y_pencils</ref>(&amp;d2_peer,d2_peer_coord,d);</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="distribution_8c_1adbaeef387d26c7edcbd5e9a13d6d1fec" kindref="member">Rank_z_pencils</ref>(&amp;d2_peer,d2_peer_coord,d);</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me)<sp/>&amp;&amp;<sp/>print_me)fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d,<sp/>%d,<sp/>%d<sp/>Made<sp/>it<sp/>before<sp/>comm!...\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,p,<sp/>npeers);</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>record<sp/>the<sp/>communication<sp/>to<sp/>be<sp/>done<sp/>in<sp/>a<sp/>schedule.<sp/>Make<sp/>sure<sp/>to<sp/>map<sp/>each<sp/>grid<sp/>to<sp/>the<sp/>correct<sp/>rank</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/><ref refid="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06cabbf46de6625103b22139e067e3d181fb" kindref="member">REDISTRIBUTE_3_TO_2</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_peer<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a65f303dfbdd0d1dbe148507bb0a48386" kindref="member">rankmap</ref>[d3_peer];</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_peer<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a65f303dfbdd0d1dbe148507bb0a48386" kindref="member">rankmap</ref>[d2_peer];</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/><ref refid="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06ca93d616dcfe604bebc3850ec51b2f5d15" kindref="member">REDISTRIBUTE_2_TO_3</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>recv_peer<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a65f303dfbdd0d1dbe148507bb0a48386" kindref="member">rankmap</ref>[d2_peer];</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>send_peer<sp/>=<sp/>d-&gt;<ref refid="structdistribution__t_1a65f303dfbdd0d1dbe148507bb0a48386" kindref="member">rankmap</ref>[d3_peer];</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//comunication<sp/>of<sp/>the<sp/>chunks:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>print_mess<sp/>boolean<sp/>is<sp/>set<sp/>to<sp/>true,<sp/>then<sp/>the<sp/>code<sp/>runs<sp/>without<sp/>sending<sp/>any<sp/>messages,<sp/>and<sp/>is<sp/>used<sp/>to<sp/>test<sp/>which<sp/>messages<sp/>would<sp/>be<sp/>sent<sp/>in<sp/>the<sp/>entire<sp/>run.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(designed<sp/>to<sp/>debug<sp/>comm<sp/>hangups,<sp/>if<sp/>they<sp/>occur).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(direction<sp/>==<sp/><ref refid="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06cabbf46de6625103b22139e067e3d181fb" kindref="member">REDISTRIBUTE_3_TO_2</ref>){</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me)<sp/>&amp;&amp;<sp/>print_mess)fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>I<sp/>am<sp/>%d,<sp/>making<sp/>request<sp/>to<sp/>recieve<sp/>from<sp/>%d...\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,recv_peer);</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!print_mess)MPI_Irecv((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>d-&gt;<ref refid="structdistribution__t_1a957bdfca24a116d7bb5f7bcbde3a93fa" kindref="member">d2_chunk</ref>,<sp/>chunk_size,<sp/>MPI_DOUBLE_COMPLEX,<sp/>recv_peer,<sp/>0,<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>,<sp/>&amp;req1);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me)<sp/>&amp;&amp;<sp/>print_mess)fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>I<sp/>am<sp/>%d,<sp/>making<sp/>request<sp/>to<sp/>send<sp/>to<sp/>%d...\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,send_peer);</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!print_mess)MPI_Isend((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>d-&gt;<ref refid="structdistribution__t_1a971ee0fe2ddf42e0669273a5ebda1512" kindref="member">d3_chunk</ref>,<sp/>chunk_size,<sp/>MPI_DOUBLE_COMPLEX,<sp/>send_peer,<sp/>0,<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>,<sp/>&amp;req2);</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me)<sp/>&amp;&amp;<sp/>print_mess)fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>I<sp/>am<sp/>%d,<sp/>waiting<sp/>to<sp/>recieve<sp/>from<sp/>%d...\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,recv_peer);</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fprintf(stderr,<sp/>&quot;<sp/>I<sp/>am<sp/>%d,<sp/>waiting<sp/>to<sp/>recieve<sp/>from<sp/>%d...\n&quot;,<sp/>self,recv_peer);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!print_mess)MPI_Wait(&amp;req1,MPI_STATUS_IGNORE);</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if((self<sp/>==<sp/>me<sp/>||<sp/>self<sp/>==<sp/>1<sp/>||<sp/>self<sp/>==<sp/>2<sp/>||<sp/>self<sp/>==<sp/>3)<sp/>&amp;&amp;<sp/>print_me)fprintf(stderr,<sp/>&quot;<sp/>I<sp/>am<sp/>%d,<sp/>waiting<sp/>to<sp/>send<sp/>to<sp/>%d...\n&quot;,<sp/>self,send_peer);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fprintf(stderr,<sp/>&quot;<sp/>I<sp/>am<sp/>%d,<sp/>waiting<sp/>to<sp/>send<sp/>to<sp/>%d...\n&quot;,<sp/>self,send_peer);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==me<sp/>&amp;&amp;<sp/>print_mess)fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>I<sp/>am<sp/>%d,<sp/>waiting<sp/>to<sp/>send<sp/>to<sp/>%d...\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,send_peer);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!print_mess)MPI_Wait(&amp;req2,MPI_STATUS_IGNORE);</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fill<sp/>the<sp/>local<sp/>array<sp/>with<sp/>the<sp/>received<sp/>chunk.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>ch_indx=0;</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dims_size=pencil_dims[0]*pencil_dims[1]*pencil_dims[2];</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==me<sp/>&amp;&amp;<sp/>print_me)fprintf(stderr,</highlight><highlight class="stringliteral">&quot;REAL<sp/>SUBSIZES<sp/>(%d,%d,%d)\n&quot;</highlight><highlight class="normal">,subsizes[x_dim],subsizes[y_dim],subsizes[z_dim]);</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==me<sp/>&amp;&amp;<sp/>print_me)fprintf(stderr,</highlight><highlight class="stringliteral">&quot;PENCIL<sp/>DIMENSION<sp/>VS.<sp/>local<sp/>sizes<sp/>(%d,%d,%d)<sp/>vs<sp/>(%d,%d,%d)\n&quot;</highlight><highlight class="normal">,pencil_dims[0],pencil_dims[1],pencil_dims[2],local_sizes[0],local_sizes[1],local_sizes[2]);</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">self</highlight><highlight class="normal">==me<sp/>&amp;&amp;<sp/>print_me)fprintf(stderr,</highlight><highlight class="stringliteral">&quot;DIM_2_ARRAY_START<sp/>(%d,%d,%d)<sp/>\n&quot;</highlight><highlight class="normal">,d2_array_start[0],d2_array_start[1],d2_array_start[2]);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i0=d2_array_start[0];i0&lt;d2_array_start[0]+local_sizes[0];i0++){</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i1=d2_array_start[1];i1&lt;d2_array_start[1]+local_sizes[1];i1++){</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2=d2_array_start[2];i2&lt;d2_array_start[2]+local_sizes[2];i2++){</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>local_indx=pencil_dims[2]*(pencil_dims[1]*i0+i1)<sp/>+<sp/>i2;</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(self==me)fprintf(stderr,&quot;local_indx<sp/>=<sp/>%d<sp/>&quot;,local_indx);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(local_indx<sp/>&gt;=<sp/>dims_size)fprintf(stderr,&quot;WOW,<sp/>in<sp/>third<sp/>for,<sp/>dims<sp/>is<sp/>(%d),<sp/>we<sp/>are<sp/>%d<sp/>and<sp/>my<sp/>rank<sp/>is<sp/>%d&quot;,dims_size,local_indx,self);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(local_indx<sp/>&lt;<sp/>dims_size);</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ch_indx<sp/>&lt;chunk_size<sp/>&amp;&amp;<sp/>ch_indx<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>local_indx&gt;=0<sp/>&amp;&amp;<sp/>local_indx<sp/>&lt;<sp/>dims_size);</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[local_indx]=d-&gt;<ref refid="structdistribution__t_1a957bdfca24a116d7bb5f7bcbde3a93fa" kindref="member">d2_chunk</ref>[ch_indx];</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if((p==0<sp/>||<sp/>p==1<sp/>||<sp/>p==2<sp/>||<sp/>p==3<sp/>||<sp/>p==4<sp/>||<sp/>p==5)<sp/>&amp;&amp;<sp/>self==me)fprintf(stderr,&quot;(%f,%f)<sp/>&quot;,real(d-&gt;d2_chunk[ch_indx]),imag(d-&gt;d2_chunk[ch_indx]));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch_indx++;</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if((p==0<sp/>||p==1<sp/>||<sp/>p==2<sp/>||<sp/>p==3<sp/>||<sp/>p==4<sp/>||<sp/>p==5)<sp/>&amp;&amp;<sp/>self==me)fprintf(stderr,&quot;P<sp/>is<sp/>%d<sp/>\n&quot;,p);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/><ref refid="distribution_8c_1adc29c2ff13d900c2f185ee95427fb06ca93d616dcfe604bebc3850ec51b2f5d15" kindref="member">REDISTRIBUTE_2_TO_3</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me)<sp/>&amp;&amp;<sp/>print_mess)fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>I<sp/>am<sp/>%d,<sp/>making<sp/>request<sp/>to<sp/>recieve<sp/>from<sp/>%d...\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,recv_peer);</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!print_mess)MPI_Irecv((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>d-&gt;<ref refid="structdistribution__t_1a971ee0fe2ddf42e0669273a5ebda1512" kindref="member">d3_chunk</ref>,<sp/>chunk_size,<sp/>MPI_DOUBLE_COMPLEX,<sp/>recv_peer,<sp/>0,<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>,<sp/>&amp;req1);</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me)<sp/>&amp;&amp;<sp/>print_mess)fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>I<sp/>am<sp/>%d,<sp/>making<sp/>request<sp/>to<sp/>send<sp/>to<sp/>%d...\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,send_peer);</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!print_mess)MPI_Isend((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>d-&gt;<ref refid="structdistribution__t_1a957bdfca24a116d7bb5f7bcbde3a93fa" kindref="member">d2_chunk</ref>,<sp/>chunk_size,<sp/>MPI_DOUBLE_COMPLEX,<sp/>send_peer,<sp/>0,<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1adba2e61f59319e9965761531fd4e9535" kindref="member">cart</ref>,<sp/>&amp;req2);</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me)<sp/>&amp;&amp;<sp/>print_mess)fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>I<sp/>am<sp/>%d,<sp/>waiting<sp/>to<sp/>recieve<sp/>from<sp/>%d...\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,recv_peer);</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!print_mess)MPI_Wait(&amp;req1,MPI_STATUS_IGNORE);</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me)<sp/>&amp;&amp;<sp/>print_mess)fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>I<sp/>am<sp/>%d,<sp/>waiting<sp/>to<sp/>send<sp/>to<sp/>%d...\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,send_peer);</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!print_mess)MPI_Wait(&amp;req2,MPI_STATUS_IGNORE);</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>ch_indx=0;</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dims_size=(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2])*(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1])*(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[0]);</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(z_dim==0){</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fill<sp/>the<sp/>local<sp/>array<sp/>with<sp/>the<sp/>received<sp/>chunk.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2=d3_array_start[y_dim];i2&gt;d3_array_start[y_dim]-subsizes[y_dim];i2--){</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i1=d3_array_start[x_dim];i1&lt;d3_array_start[x_dim]+subsizes[x_dim];i1++){</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i0=d3_array_start[z_dim];i0&lt;d3_array_start[z_dim]+subsizes[z_dim];i0++){</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>local_indx=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]*(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]*i0+i1)<sp/>+<sp/>i2;</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(local_indx<sp/>&gt;=<sp/>dims_size)fprintf(stderr,&quot;WOW,<sp/>in<sp/>fourth<sp/>for,<sp/>dims<sp/>is<sp/>(%d),<sp/>we<sp/>are<sp/>%d<sp/>and<sp/>my<sp/>rank<sp/>is<sp/>%d&quot;,dims_size,local_indx,self);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(local_indx<sp/>&lt;<sp/>dims_size);</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ch_indx<sp/>&lt;chunk_size<sp/>&amp;&amp;<sp/>ch_indx<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>local_indx&gt;=0<sp/>&amp;&amp;<sp/>local_indx<sp/>&lt;<sp/>dims_size);</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[local_indx]=d-&gt;<ref refid="structdistribution__t_1a971ee0fe2ddf42e0669273a5ebda1512" kindref="member">d3_chunk</ref>[ch_indx];</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(p==3<sp/>&amp;&amp;<sp/>self==me)fprintf(stderr,&quot;(%f,%f)<sp/>&quot;,real(d-&gt;d3_chunk[ch_indx]),imag(d-&gt;d3_chunk[ch_indx]));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch_indx++;</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(z_dim==1){</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i0=d3_array_start[y_dim];i0&lt;d3_array_start[y_dim]+subsizes[y_dim];i0++){</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2=d3_array_start[x_dim];i2&gt;d3_array_start[x_dim]-subsizes[x_dim];i2--){</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i1=d3_array_start[z_dim];i1&lt;d3_array_start[z_dim]+subsizes[z_dim];i1++){</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>local_indx=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]*(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]*i0+i1)<sp/>+<sp/>i2;</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(local_indx<sp/>&gt;=<sp/>dims_size)fprintf(stderr,&quot;WOW,<sp/>in<sp/>fourth<sp/>for,<sp/>dims<sp/>is<sp/>(%d),<sp/>we<sp/>are<sp/>%d<sp/>and<sp/>my<sp/>rank<sp/>is<sp/>%d&quot;,dims_size,local_indx,self);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(local_indx<sp/>&lt;<sp/>dims_size);</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ch_indx<sp/>&lt;chunk_size<sp/>&amp;&amp;<sp/>ch_indx<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>local_indx&gt;=0<sp/>&amp;&amp;<sp/>local_indx<sp/>&lt;<sp/>dims_size);</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[local_indx]=d-&gt;<ref refid="structdistribution__t_1a971ee0fe2ddf42e0669273a5ebda1512" kindref="member">d3_chunk</ref>[ch_indx];</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(p==0<sp/>&amp;&amp;<sp/>self==me)fprintf(stderr,&quot;(%f,%f)<sp/>&quot;,real(d-&gt;d3_chunk[ch_indx]),imag(d-&gt;d3_chunk[ch_indx]));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch_indx++;</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(z_dim==2){</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i0=d3_array_start[x_dim];i0&lt;d3_array_start[x_dim]+subsizes[x_dim];i0++){</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i1=d3_array_start[y_dim];i1&lt;d3_array_start[y_dim]+subsizes[y_dim];i1++){</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i2=d3_array_start[z_dim];i2&lt;d3_array_start[z_dim]+subsizes[z_dim];i2++){</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>local_indx=d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[2]*(d-&gt;<ref refid="structdistribution__t_1ab7383f9179b519721f4dffdd185c055a" kindref="member">process_topology_3</ref>.<ref refid="structprocess__topology__t_1a34fd641ec3073c157da173359feb99e6" kindref="member">n</ref>[1]*i0+i1)<sp/>+<sp/>i2;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(local_indx<sp/>&lt;<sp/>dims_size);</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ch_indx<sp/>&lt;chunk_size<sp/>&amp;&amp;<sp/>ch_indx<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>local_indx&gt;=0<sp/>&amp;&amp;<sp/>local_indx<sp/>&lt;<sp/>dims_size);</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[local_indx]=d-&gt;<ref refid="structdistribution__t_1a971ee0fe2ddf42e0669273a5ebda1512" kindref="member">d3_chunk</ref>[ch_indx];</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(p==1<sp/>&amp;&amp;<sp/>self==me)fprintf(stderr,&quot;(%f,%f)<sp/>&quot;,real(d-&gt;d3_chunk[ch_indx]),imag(d-&gt;d3_chunk[ch_indx]));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch_indx++;</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="distribution_8c_1a4b0f3914f3a5d4e3126ae2331c245c69" kindref="member">DEBUG_CONDITION</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%d:<sp/>npeers,p,p0,p1,p1max=(%d,%d,%d,%d,%d),<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;d3_coord=(%d,%d,%d),<sp/>d2_peer_coord=(%d,%d,%d),<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;d2_coord=(%d,%d,%d),<sp/>d3_peer_coord=(%d,%d,%d),<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;recv_peer=%d,<sp/>send_peer=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>npeers,<sp/>p,<sp/>p0,<sp/>p1,<sp/>p1max,</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d3_coord[0],<sp/>d3_coord[1],<sp/>d3_coord[2],</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2_peer_coord[0],<sp/>d2_peer_coord[1],<sp/>d2_peer_coord[2],</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d2_coord[0],<sp/>d2_coord[1],<sp/>d2_coord[2],</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d3_peer_coord[0],<sp/>d3_peer_coord[1],<sp/>d3_peer_coord[2],</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recv_peer,<sp/>send_peer);</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me)<sp/>&amp;&amp;<sp/>print_me)fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;%d,<sp/>%d,<sp/>%d<sp/>Made<sp/>it<sp/>end-for!...\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,p,<sp/>npeers);</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if((self<sp/>==<sp/>me)<sp/>&amp;&amp;<sp/>print_me)fprintf(outfile,<sp/>&quot;<sp/><sp/><sp/>Made<sp/>it<sp/>all<sp/>the<sp/>way!<sp/>for<sp/>z_dim<sp/>=(%d)<sp/>and<sp/>num_proc<sp/>=<sp/>(%d)...\n&quot;,<sp/>z_dim,<sp/>d-&gt;process_topology_1.nproc[0]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>me)<sp/>&amp;&amp;<sp/>print_result){</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*<sp/>outfile;</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/>outfile=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;passed.data&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outfile)<sp/>fprintf(outfile,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Made<sp/>it<sp/>all<sp/>the<sp/>way!<sp/>for<sp/>z_dim<sp/>=(%d)<sp/>and<sp/>num_proc<sp/>=<sp/>(%d)...\n&quot;</highlight><highlight class="normal">,<sp/>z_dim,<sp/>d-&gt;<ref refid="structdistribution__t_1a2958e45305ae7bd3d1077348c2f30f1e" kindref="member">process_topology_1</ref>.<ref refid="structprocess__topology__t_1a5fa8fdbcfe943816e8c19862dffddeaa" kindref="member">nproc</ref>[0]);</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outfile)<sp/>fclose(outfile);</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>fprintf(stderr,<sp/>&quot;%d,<sp/>Made<sp/>it<sp/>all<sp/>the<sp/>way!...\n&quot;,<sp/>self);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SWFFT/distribution.c"/>
  </compounddef>
</doxygen>
