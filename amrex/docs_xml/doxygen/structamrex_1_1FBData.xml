<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structamrex_1_1FBData" kind="struct" language="C++" prot="public">
    <compoundname>amrex::FBData</compoundname>
    <includes refid="AMReX__FabArray_8H" local="no">AMReX_FabArray.H</includes>
    <templateparamlist>
      <param>
        <type>class FAB</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1FBData_1a12405182d3038f333d621aaf7ba0de9f" prot="public" static="no" mutable="no">
        <type>const <ref refid="structamrex_1_1FabArrayBase_1_1FB" kindref="compound">FabArrayBase::FB</ref> *</type>
        <definition>const FabArrayBase::FB* amrex::FBData&lt; FAB &gt;::fb</definition>
        <argsstring></argsstring>
        <name>fb</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="154" column="29" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FBData_1a869352ea49403f3d983d945d75b914a8" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FBData&lt; FAB &gt;::scomp</definition>
        <argsstring></argsstring>
        <name>scomp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="155" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FBData_1ad2ab165dff9bdbdedaf65405a2bee07a" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FBData&lt; FAB &gt;::ncomp</definition>
        <argsstring></argsstring>
        <name>ncomp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="156" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FBData_1a88fb3f6360b867dc412a82ee1a2e7eeb" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></type>
        <definition>IntVect amrex::FBData&lt; FAB &gt;::nghost</definition>
        <argsstring></argsstring>
        <name>nghost</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="157" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FBData_1a4557ccffa32c50fdcc2578b01076acf5" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Periodicity" kindref="compound">Periodicity</ref></type>
        <definition>Periodicity amrex::FBData&lt; FAB &gt;::period</definition>
        <argsstring></argsstring>
        <name>period</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="158" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FBData_1a76c421f9fabab69eeb6725f85f875e9f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::FBData&lt; FAB &gt;::cross</definition>
        <argsstring></argsstring>
        <name>cross</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="159" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FBData_1a77e7045e3ff8a0a8b870e7462a88b639" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::FBData&lt; FAB &gt;::epo</definition>
        <argsstring></argsstring>
        <name>epo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="160" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FBData_1a3e3b282afdf75099193c3c85ea5effa3" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* amrex::FBData&lt; FAB &gt;::the_recv_data</definition>
        <argsstring></argsstring>
        <name>the_recv_data</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="163" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FBData_1a938e0208e00afba91947616b5e70d600" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* amrex::FBData&lt; FAB &gt;::the_send_data</definition>
        <argsstring></argsstring>
        <name>the_send_data</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="164" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FBData_1a8a3cfe25482c47ca2e7bef67a9012713" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::FBData&lt; FAB &gt;::recv_from</definition>
        <argsstring></argsstring>
        <name>recv_from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="165" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FBData_1a56b9327ba0b96235d8296bb1b1716872" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; char * &gt;</type>
        <definition>Vector&lt;char*&gt; amrex::FBData&lt; FAB &gt;::recv_data</definition>
        <argsstring></argsstring>
        <name>recv_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="166" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FBData_1acaa3ee8877ff8fb497dc7bf091870075" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::size_t &gt;</type>
        <definition>Vector&lt;std::size_t&gt; amrex::FBData&lt; FAB &gt;::recv_size</definition>
        <argsstring></argsstring>
        <name>recv_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="167" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FBData_1a4aa5af528b7479cc3a9a8c7687554b74" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="AMReX__ccse-mpi_8H_1a240e9d13a157e03c75e42306b13cd8d8" kindref="member">MPI_Request</ref> &gt;</type>
        <definition>Vector&lt;MPI_Request&gt; amrex::FBData&lt; FAB &gt;::recv_reqs</definition>
        <argsstring></argsstring>
        <name>recv_reqs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="168" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FBData_1a6a1a0383bdc83a03838f17b4b2448a15" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structMPI__Status" kindref="compound">MPI_Status</ref> &gt;</type>
        <definition>Vector&lt;MPI_Status&gt; amrex::FBData&lt; FAB &gt;::recv_stat</definition>
        <argsstring></argsstring>
        <name>recv_stat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="169" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FBData_1ac562fa064a61bafbf187dbf6f37d00ce" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; char * &gt;</type>
        <definition>Vector&lt;char*&gt; amrex::FBData&lt; FAB &gt;::send_data</definition>
        <argsstring></argsstring>
        <name>send_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="171" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FBData_1ac37fd86847fa215e7b422a70cb40d62d" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="AMReX__ccse-mpi_8H_1a240e9d13a157e03c75e42306b13cd8d8" kindref="member">MPI_Request</ref> &gt;</type>
        <definition>Vector&lt;MPI_Request&gt; amrex::FBData&lt; FAB &gt;::send_reqs</definition>
        <argsstring></argsstring>
        <name>send_reqs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="172" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1FBData_1af44e5964682abeb59937bec1038cdc9e" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FBData&lt; FAB &gt;::tag</definition>
        <argsstring></argsstring>
        <name>tag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="173" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="173" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="11">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>K</label>
      </node>
      <node id="5">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="5" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>T</label>
      </node>
      <node id="16">
        <label>amrex::FabArrayBase::CommMetaData</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CommMetaData"/>
        <childnode refid="17" relation="usage">
          <edgelabel>m_RcvTags</edgelabel>
          <edgelabel>m_SndTags</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>m_LocTags</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="19" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="5" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>std::vector&lt; char *, std::allocator&lt; char * &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::FBData&lt; FAB &gt;</label>
        <link refid="structamrex_1_1FBData"/>
        <childnode refid="2" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>nghost</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>recv_data</edgelabel>
          <edgelabel>send_data</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>recv_stat</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>send_reqs</edgelabel>
          <edgelabel>recv_reqs</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>fb</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>amrex::FabArrayBase::FB</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FB"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_ngrow</edgelabel>
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>m_period</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>std::unique_ptr&lt; MapOfCopyComTagContainers &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="2">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::vector&lt; std::size_t, std::allocator&lt; std::size_t &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>std::unique_ptr&lt; CopyComTagsContainer &gt;</label>
        <childnode refid="21" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="152" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="152" bodyend="175"/>
    <listofallmembers>
      <member refid="structamrex_1_1FBData_1a76c421f9fabab69eeb6725f85f875e9f" prot="public" virt="non-virtual"><scope>amrex::FBData</scope><name>cross</name></member>
      <member refid="structamrex_1_1FBData_1a77e7045e3ff8a0a8b870e7462a88b639" prot="public" virt="non-virtual"><scope>amrex::FBData</scope><name>epo</name></member>
      <member refid="structamrex_1_1FBData_1a12405182d3038f333d621aaf7ba0de9f" prot="public" virt="non-virtual"><scope>amrex::FBData</scope><name>fb</name></member>
      <member refid="structamrex_1_1FBData_1ad2ab165dff9bdbdedaf65405a2bee07a" prot="public" virt="non-virtual"><scope>amrex::FBData</scope><name>ncomp</name></member>
      <member refid="structamrex_1_1FBData_1a88fb3f6360b867dc412a82ee1a2e7eeb" prot="public" virt="non-virtual"><scope>amrex::FBData</scope><name>nghost</name></member>
      <member refid="structamrex_1_1FBData_1a4557ccffa32c50fdcc2578b01076acf5" prot="public" virt="non-virtual"><scope>amrex::FBData</scope><name>period</name></member>
      <member refid="structamrex_1_1FBData_1a56b9327ba0b96235d8296bb1b1716872" prot="public" virt="non-virtual"><scope>amrex::FBData</scope><name>recv_data</name></member>
      <member refid="structamrex_1_1FBData_1a8a3cfe25482c47ca2e7bef67a9012713" prot="public" virt="non-virtual"><scope>amrex::FBData</scope><name>recv_from</name></member>
      <member refid="structamrex_1_1FBData_1a4aa5af528b7479cc3a9a8c7687554b74" prot="public" virt="non-virtual"><scope>amrex::FBData</scope><name>recv_reqs</name></member>
      <member refid="structamrex_1_1FBData_1acaa3ee8877ff8fb497dc7bf091870075" prot="public" virt="non-virtual"><scope>amrex::FBData</scope><name>recv_size</name></member>
      <member refid="structamrex_1_1FBData_1a6a1a0383bdc83a03838f17b4b2448a15" prot="public" virt="non-virtual"><scope>amrex::FBData</scope><name>recv_stat</name></member>
      <member refid="structamrex_1_1FBData_1a869352ea49403f3d983d945d75b914a8" prot="public" virt="non-virtual"><scope>amrex::FBData</scope><name>scomp</name></member>
      <member refid="structamrex_1_1FBData_1ac562fa064a61bafbf187dbf6f37d00ce" prot="public" virt="non-virtual"><scope>amrex::FBData</scope><name>send_data</name></member>
      <member refid="structamrex_1_1FBData_1ac37fd86847fa215e7b422a70cb40d62d" prot="public" virt="non-virtual"><scope>amrex::FBData</scope><name>send_reqs</name></member>
      <member refid="structamrex_1_1FBData_1af44e5964682abeb59937bec1038cdc9e" prot="public" virt="non-virtual"><scope>amrex::FBData</scope><name>tag</name></member>
      <member refid="structamrex_1_1FBData_1a3e3b282afdf75099193c3c85ea5effa3" prot="public" virt="non-virtual"><scope>amrex::FBData</scope><name>the_recv_data</name></member>
      <member refid="structamrex_1_1FBData_1a938e0208e00afba91947616b5e70d600" prot="public" virt="non-virtual"><scope>amrex::FBData</scope><name>the_send_data</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
