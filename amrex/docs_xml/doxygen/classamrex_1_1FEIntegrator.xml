<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1FEIntegrator" kind="class" language="C++" prot="public">
    <compoundname>amrex::FEIntegrator</compoundname>
    <basecompoundref refid="classamrex_1_1IntegratorBase" prot="public" virt="non-virtual">amrex::IntegratorBase&lt; T &gt;</basecompoundref>
    <includes refid="AMReX__FEIntegrator_8H" local="no">AMReX_FEIntegrator.H</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classamrex_1_1FEIntegrator_1a42de2ec6d2a8822f8bff33922347f6d8" prot="private" static="no">
        <type><ref refid="classamrex_1_1IntegratorBase" kindref="compound">IntegratorBase</ref>&lt; T &gt;</type>
        <definition>using amrex::FEIntegrator&lt; T &gt;::BaseT =  IntegratorBase&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>BaseT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="14" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1FEIntegrator_1a4068613bcf39366eadab0ad2a6d42013" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">amrex::Vector</ref>&lt; std::unique_ptr&lt; T &gt; &gt;</type>
        <definition>amrex::Vector&lt;std::unique_ptr&lt;T&gt; &gt; amrex::FEIntegrator&lt; T &gt;::F_nodes</definition>
        <argsstring></argsstring>
        <name>F_nodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="16" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1FEIntegrator_1a80e6ac66484b3c5d5b7d9e3e270f8be1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FEIntegrator&lt; T &gt;::initialize_stages</definition>
        <argsstring>(const T &amp;S_data)</argsstring>
        <name>initialize_stages</name>
        <param>
          <type>const T &amp;</type>
          <declname>S_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="18" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="18" bodyend="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1FEIntegrator_1a3a939c4bb592b14713d49cb3380c34fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::FEIntegrator&lt; T &gt;::FEIntegrator</definition>
        <argsstring>()</argsstring>
        <name>FEIntegrator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="24" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FEIntegrator_1ac5334d9eba2385a4a26629527444e489" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::FEIntegrator&lt; T &gt;::FEIntegrator</definition>
        <argsstring>(const T &amp;S_data)</argsstring>
        <name>FEIntegrator</name>
        <param>
          <type>const T &amp;</type>
          <declname>S_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="26" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FEIntegrator_1acc384fa61c635b7d9236f4c07a48109a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual amrex::FEIntegrator&lt; T &gt;::~FEIntegrator</definition>
        <argsstring>()</argsstring>
        <name>~FEIntegrator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="31" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FEIntegrator_1afde8c9a7877ee333a8b61e68499f61d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void amrex::FEIntegrator&lt; T &gt;::initialize</definition>
        <argsstring>(const T &amp;S_data) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classamrex_1_1IntegratorBase_1a776b334c903b6275ea792b4e7cca5a88">initialize</reimplements>
        <param>
          <type>const T &amp;</type>
          <declname>S_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="33" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FEIntegrator_1a9029a1e7d1a854f5d3a1ecb88ce927e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>amrex::Real</type>
        <definition>amrex::Real amrex::FEIntegrator&lt; T &gt;::advance</definition>
        <argsstring>(T &amp;S_old, T &amp;S_new, amrex::Real time, const amrex::Real time_step) override</argsstring>
        <name>advance</name>
        <reimplements refid="classamrex_1_1IntegratorBase_1a4d714675069097ce07c843145e45d465">advance</reimplements>
        <param>
          <type>T &amp;</type>
          <declname>S_old</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>S_new</declname>
        </param>
        <param>
          <type>amrex::Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const amrex::Real</type>
          <declname>time_step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="38" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="38" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FEIntegrator_1ac0b9633fedee03bd638f87514a952720" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void amrex::FEIntegrator&lt; T &gt;::time_interpolate</definition>
        <argsstring>(const T &amp;, const T &amp;, amrex::Real, T &amp;) override</argsstring>
        <name>time_interpolate</name>
        <reimplements refid="classamrex_1_1IntegratorBase_1a3dc1f86935271c9b053b9d6a60911739">time_interpolate</reimplements>
        <param>
          <type>const T &amp;</type>
        </param>
        <param>
          <type>const T &amp;</type>
        </param>
        <param>
          <type>amrex::Real</type>
        </param>
        <param>
          <type>T &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="59" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FEIntegrator_1acd01b4dfae6f5cbd84d2ed940355fd0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void amrex::FEIntegrator&lt; T &gt;::map_data</definition>
        <argsstring>(std::function&lt; void(T &amp;)&gt; Map) override</argsstring>
        <name>map_data</name>
        <reimplements refid="classamrex_1_1IntegratorBase_1a9a0b2271de694f1ea0903339931578ec">map_data</reimplements>
        <param>
          <type>std::function&lt; void(T &amp;)&gt;</type>
          <declname>Map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="64" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="64" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>amrex::FEIntegrator&lt; T &gt;</label>
        <link refid="classamrex_1_1FEIntegrator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::IntegratorBase&lt; T &gt;</label>
        <link refid="classamrex_1_1IntegratorBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>T</label>
      </node>
      <node id="3">
        <label>Real</label>
      </node>
      <node id="5">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::FEIntegrator&lt; T &gt;</label>
        <link refid="classamrex_1_1FEIntegrator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>F_nodes</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::IntegratorBase&lt; T &gt;</label>
        <link refid="classamrex_1_1IntegratorBase"/>
        <childnode refid="3" relation="usage">
          <edgelabel>fast_timestep</edgelabel>
          <edgelabel>timestep</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>amrex::Vector&lt; std::unique_ptr&lt; T &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="11" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="12" bodyend="71"/>
    <listofallmembers>
      <member refid="classamrex_1_1FEIntegrator_1a9029a1e7d1a854f5d3a1ecb88ce927e7" prot="public" virt="virtual"><scope>amrex::FEIntegrator</scope><name>advance</name></member>
      <member refid="classamrex_1_1FEIntegrator_1a42de2ec6d2a8822f8bff33922347f6d8" prot="private" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>BaseT</name></member>
      <member refid="classamrex_1_1FEIntegrator_1a4068613bcf39366eadab0ad2a6d42013" prot="private" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>F_nodes</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a350b00b806650cf615625b20a5814925" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>fast_rhs</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a020d8e83bf55dd069e374403d4ff1f7a" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>fast_timestep</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a1455552255598f4b2a1cf54b60ae3317" prot="private" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>FastFun</name></member>
      <member refid="classamrex_1_1FEIntegrator_1a3a939c4bb592b14713d49cb3380c34fd" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>FEIntegrator</name></member>
      <member refid="classamrex_1_1FEIntegrator_1ac5334d9eba2385a4a26629527444e489" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>FEIntegrator</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a26bec4822130d973d323ec22ce38e71a" prot="private" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>Fun</name></member>
      <member refid="classamrex_1_1IntegratorBase_1af028b7c14d3958dcb6563442aa2ab5ad" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>get_fast_rhs</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a1b6d214905b360f23d3a162eb4aa8f99" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>get_fast_timestep</name></member>
      <member refid="classamrex_1_1IntegratorBase_1af961f09393e62d6a09749da90d0b9016" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>get_post_update</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a273aca91ddf7ee9e5de270e7f6c02a21" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>get_rhs</name></member>
      <member refid="classamrex_1_1IntegratorBase_1aedf790cb6391c0861069d8c358f65ddf" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>get_slow_fast_timestep_ratio</name></member>
      <member refid="classamrex_1_1FEIntegrator_1afde8c9a7877ee333a8b61e68499f61d7" prot="public" virt="virtual"><scope>amrex::FEIntegrator</scope><name>initialize</name></member>
      <member refid="classamrex_1_1FEIntegrator_1a80e6ac66484b3c5d5b7d9e3e270f8be1" prot="private" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>initialize_stages</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a0161e86a01e6b8a3ae9a9d3f91e5ad29" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>IntegratorBase</name></member>
      <member refid="classamrex_1_1IntegratorBase_1ad6e1d1e6bb0cd9f1ac3dec311f811151" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>IntegratorBase</name></member>
      <member refid="classamrex_1_1FEIntegrator_1acd01b4dfae6f5cbd84d2ed940355fd0c" prot="public" virt="virtual"><scope>amrex::FEIntegrator</scope><name>map_data</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a093f10915c880670f78fcc8cbc763dd6" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>post_update</name></member>
      <member refid="classamrex_1_1IntegratorBase_1ae03ee5e425bef0111005514d81fdf5e4" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>rhs</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a8a1755cd66c91ef2d57cefb32ce90b1f" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>set_fast_rhs</name></member>
      <member refid="classamrex_1_1IntegratorBase_1ac5003ee30c98dff34007cf2738599392" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>set_fast_timestep</name></member>
      <member refid="classamrex_1_1IntegratorBase_1ab844bc357c2ad282e111b0f3e965864e" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>set_post_update</name></member>
      <member refid="classamrex_1_1IntegratorBase_1ad6bd9eb8cc13ac9e2a120c9018f529aa" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>set_rhs</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a2c28fc76c5cdf2fceab4b2c06b07074c" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>set_slow_fast_timestep_ratio</name></member>
      <member refid="classamrex_1_1IntegratorBase_1af8b9b0ced6670ce184422a8223b57b63" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>slow_fast_timestep_ratio</name></member>
      <member refid="classamrex_1_1FEIntegrator_1ac0b9633fedee03bd638f87514a952720" prot="public" virt="virtual"><scope>amrex::FEIntegrator</scope><name>time_interpolate</name></member>
      <member refid="classamrex_1_1IntegratorBase_1ae09b7963b36e9cba661e6e64c3d67159" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>timestep</name></member>
      <member refid="classamrex_1_1FEIntegrator_1acc384fa61c635b7d9236f4c07a48109a" prot="public" virt="virtual"><scope>amrex::FEIntegrator</scope><name>~FEIntegrator</name></member>
      <member refid="classamrex_1_1IntegratorBase_1ab552abbdc6f529d492e5912b8af6f3a3" prot="public" virt="virtual"><scope>amrex::FEIntegrator</scope><name>~IntegratorBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
