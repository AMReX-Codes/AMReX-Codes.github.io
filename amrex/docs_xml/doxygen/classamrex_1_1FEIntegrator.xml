<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classamrex_1_1FEIntegrator" kind="class" language="C++" prot="public">
    <compoundname>amrex::FEIntegrator</compoundname>
    <basecompoundref refid="classamrex_1_1IntegratorBase" prot="public" virt="non-virtual">amrex::IntegratorBase&lt; T &gt;</basecompoundref>
    <includes refid="AMReX__FEIntegrator_8H" local="no">AMReX_FEIntegrator.H</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classamrex_1_1FEIntegrator_1a42de2ec6d2a8822f8bff33922347f6d8" prot="private" static="no">
        <type><ref refid="classamrex_1_1IntegratorBase" kindref="compound">IntegratorBase</ref>&lt; T &gt;</type>
        <definition>using amrex::FEIntegrator&lt; T &gt;::BaseT =  IntegratorBase&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>BaseT</name>
        <qualifiedname>amrex::FEIntegrator::BaseT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="14" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="14" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1FEIntegrator_1a4068613bcf39366eadab0ad2a6d42013" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">amrex::Vector</ref>&lt; std::unique_ptr&lt; T &gt; &gt;</type>
        <definition>amrex::Vector&lt;std::unique_ptr&lt;T&gt; &gt; amrex::FEIntegrator&lt; T &gt;::F_nodes</definition>
        <argsstring></argsstring>
        <name>F_nodes</name>
        <qualifiedname>amrex::FEIntegrator::F_nodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="16" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FEIntegrator_1a72de24a588880e733ef7ff90365645a1" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">amrex::Vector</ref>&lt; std::unique_ptr&lt; T &gt; &gt;</type>
        <definition>amrex::Vector&lt;std::unique_ptr&lt;T&gt; &gt; amrex::FEIntegrator&lt; T &gt;::S_current</definition>
        <argsstring></argsstring>
        <name>S_current</name>
        <qualifiedname>amrex::FEIntegrator::S_current</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="19" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FEIntegrator_1ae1493ee81180c4fc466c1dbeb8905681" prot="private" static="no" mutable="no">
        <type>amrex::Real</type>
        <definition>amrex::Real amrex::FEIntegrator&lt; T &gt;::time_current</definition>
        <argsstring></argsstring>
        <name>time_current</name>
        <qualifiedname>amrex::FEIntegrator::time_current</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="20" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="20" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1FEIntegrator_1ac5967c00d555d6b2865daf4c937fbbf0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FEIntegrator&lt; T &gt;::initialize_stages</definition>
        <argsstring>(const T &amp;S_data, const amrex::Real time)</argsstring>
        <name>initialize_stages</name>
        <qualifiedname>amrex::FEIntegrator::initialize_stages</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>S_data</declname>
        </param>
        <param>
          <type>const amrex::Real</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="22" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="22" bodyend="33"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1FEIntegrator_1a3a939c4bb592b14713d49cb3380c34fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::FEIntegrator&lt; T &gt;::FEIntegrator</definition>
        <argsstring>()</argsstring>
        <name>FEIntegrator</name>
        <qualifiedname>amrex::FEIntegrator::FEIntegrator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="36" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FEIntegrator_1a90b3d1c28484a9ccdc34c484942c462a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::FEIntegrator&lt; T &gt;::FEIntegrator</definition>
        <argsstring>(const T &amp;S_data, const amrex::Real time=0.0)</argsstring>
        <name>FEIntegrator</name>
        <qualifiedname>amrex::FEIntegrator::FEIntegrator</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>S_data</declname>
        </param>
        <param>
          <type>const amrex::Real</type>
          <declname>time</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="38" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FEIntegrator_1acc384fa61c635b7d9236f4c07a48109a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual amrex::FEIntegrator&lt; T &gt;::~FEIntegrator</definition>
        <argsstring>()</argsstring>
        <name>~FEIntegrator</name>
        <qualifiedname>amrex::FEIntegrator::~FEIntegrator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="43" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FEIntegrator_1ab125ad41009da20311f0d5b950c2e527" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FEIntegrator&lt; T &gt;::initialize</definition>
        <argsstring>(const T &amp;S_data, const amrex::Real time=0.0)</argsstring>
        <name>initialize</name>
        <qualifiedname>amrex::FEIntegrator::initialize</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>S_data</declname>
        </param>
        <param>
          <type>const amrex::Real</type>
          <declname>time</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="45" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FEIntegrator_1a8fd0bd1a546d76eaf337dabca422ead4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>amrex::Real</type>
        <definition>amrex::Real amrex::FEIntegrator&lt; T &gt;::advance</definition>
        <argsstring>(T &amp;S_old, T &amp;S_new, amrex::Real time, const amrex::Real dt) override</argsstring>
        <name>advance</name>
        <qualifiedname>amrex::FEIntegrator::advance</qualifiedname>
        <reimplements refid="classamrex_1_1IntegratorBase_1a4d714675069097ce07c843145e45d465">advance</reimplements>
        <param>
          <type>T &amp;</type>
          <declname>S_old</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>S_new</declname>
        </param>
        <param>
          <type>amrex::Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const amrex::Real</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Take a single time step from (time, S_old) to (time + dt, S_new) with the given step size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="50" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="50" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FEIntegrator_1a31411280257ee4d2942a140cbead4635" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void amrex::FEIntegrator&lt; T &gt;::evolve</definition>
        <argsstring>(T &amp;S_out, const amrex::Real time_out) override</argsstring>
        <name>evolve</name>
        <qualifiedname>amrex::FEIntegrator::evolve</qualifiedname>
        <reimplements refid="classamrex_1_1IntegratorBase_1a97d9851462a6592d58c42ced9cb266a9">evolve</reimplements>
        <param>
          <type>T &amp;</type>
          <declname>S_out</declname>
        </param>
        <param>
          <type>const amrex::Real</type>
          <declname>time_out</declname>
        </param>
        <briefdescription>
<para>Evolve the current (internal) integrator state to time_out. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="70" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="70" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FEIntegrator_1ac0b9633fedee03bd638f87514a952720" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void amrex::FEIntegrator&lt; T &gt;::time_interpolate</definition>
        <argsstring>(const T &amp;, const T &amp;, amrex::Real, T &amp;) override</argsstring>
        <name>time_interpolate</name>
        <qualifiedname>amrex::FEIntegrator::time_interpolate</qualifiedname>
        <reimplements refid="classamrex_1_1IntegratorBase_1a3dc1f86935271c9b053b9d6a60911739">time_interpolate</reimplements>
        <param>
          <type>const T &amp;</type>
        </param>
        <param>
          <type>const T &amp;</type>
        </param>
        <param>
          <type>amrex::Real</type>
        </param>
        <param>
          <type>T &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="98" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FEIntegrator_1acd01b4dfae6f5cbd84d2ed940355fd0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void amrex::FEIntegrator&lt; T &gt;::map_data</definition>
        <argsstring>(std::function&lt; void(T &amp;)&gt; Map) override</argsstring>
        <name>map_data</name>
        <qualifiedname>amrex::FEIntegrator::map_data</qualifiedname>
        <reimplements refid="classamrex_1_1IntegratorBase_1a9a0b2271de694f1ea0903339931578ec">map_data</reimplements>
        <param>
          <type>std::function&lt; void(T &amp;)&gt;</type>
          <declname>Map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="103" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="103" bodyend="108"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>amrex::FEIntegrator&lt; T &gt;</label>
        <link refid="classamrex_1_1FEIntegrator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::IntegratorBase&lt; T &gt;</label>
        <link refid="classamrex_1_1IntegratorBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>T</label>
      </node>
      <node id="3">
        <label>amrex::Vector&lt; std::unique_ptr&lt; T &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>amrex::FEIntegrator&lt; T &gt;</label>
        <link refid="classamrex_1_1FEIntegrator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>F_nodes</edgelabel>
          <edgelabel>S_current</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::IntegratorBase&lt; T &gt;</label>
        <link refid="classamrex_1_1IntegratorBase"/>
      </node>
      <node id="4">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" line="11" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FEIntegrator.H" bodystart="12" bodyend="110"/>
    <listofallmembers>
      <member refid="classamrex_1_1IntegratorBase_1afad6554d52e651fc45b533d34a96c135" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>abs_tol</name></member>
      <member refid="classamrex_1_1FEIntegrator_1a8fd0bd1a546d76eaf337dabca422ead4" prot="public" virt="virtual"><scope>amrex::FEIntegrator</scope><name>advance</name></member>
      <member refid="classamrex_1_1FEIntegrator_1a42de2ec6d2a8822f8bff33922347f6d8" prot="private" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>BaseT</name></member>
      <member refid="classamrex_1_1FEIntegrator_1a31411280257ee4d2942a140cbead4635" prot="public" virt="virtual"><scope>amrex::FEIntegrator</scope><name>evolve</name></member>
      <member refid="classamrex_1_1FEIntegrator_1a4068613bcf39366eadab0ad2a6d42013" prot="private" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>F_nodes</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a4ec1caa1e60f0282b7a8e76dffe856ee" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>fast_abs_tol</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a1be9f819915ff16d7883d0ebd8009e66" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>fast_rel_tol</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a4fe63921d4507e1af5f2df9fdbe66047" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>fast_time_step</name></member>
      <member refid="classamrex_1_1FEIntegrator_1a3a939c4bb592b14713d49cb3380c34fd" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>FEIntegrator</name></member>
      <member refid="classamrex_1_1FEIntegrator_1a90b3d1c28484a9ccdc34c484942c462a" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>FEIntegrator</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a4e271bb0dfa0e7bee049e3b8dfcbfec4" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>get_time_step</name></member>
      <member refid="classamrex_1_1FEIntegrator_1ab125ad41009da20311f0d5b950c2e527" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>initialize</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a2aa5bd913a65baae7135ef4945c4c327" prot="private" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>initialize_base_parameters</name></member>
      <member refid="classamrex_1_1FEIntegrator_1ac5967c00d555d6b2865daf4c937fbbf0" prot="private" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>initialize_stages</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a8960e06411e4dac4bd0a99f5be3b489e" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>IntegratorBase</name></member>
      <member refid="classamrex_1_1IntegratorBase_1ad6e1d1e6bb0cd9f1ac3dec311f811151" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>IntegratorBase</name></member>
      <member refid="classamrex_1_1FEIntegrator_1acd01b4dfae6f5cbd84d2ed940355fd0c" prot="public" virt="virtual"><scope>amrex::FEIntegrator</scope><name>map_data</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a9686cea17de48c6ffb49d0288146fc03" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>max_steps</name></member>
      <member refid="classamrex_1_1IntegratorBase_1ab68545bb3877ccbb5beef755501e6e51" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>num_steps</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a3898e71d3b76c181fe8826e3c1c8e23e" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>post_fast_stage_action</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a8a54ccfa6d203a9d2f8efe66130ae468" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>post_fast_step_action</name></member>
      <member refid="classamrex_1_1IntegratorBase_1ad51e1ada5e5a2f2956bea509831a43e3" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>post_stage_action</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a5e6edee80e051ee491f30b7e2668cea1" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>post_step_action</name></member>
      <member refid="classamrex_1_1IntegratorBase_1aea34558a8595abbdc1f9a5f3635fb4c2" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>previous_time_step</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a260c250d0a39818e4d4f9ef808b82239" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>rel_tol</name></member>
      <member refid="classamrex_1_1IntegratorBase_1ab5166c9130778bcf08f08230d72b05f3" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>Rhs</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a580d4499f9876896b94cd3db82664bc0" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>RhsEx</name></member>
      <member refid="classamrex_1_1IntegratorBase_1ae700a0f7a7f2bf4456e466be7a2828ed" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>RhsFast</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a983bd9fe800746c882ce2184ef5baf48" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>RhsIm</name></member>
      <member refid="classamrex_1_1FEIntegrator_1a72de24a588880e733ef7ff90365645a1" prot="private" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>S_current</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a49c90c36c565d4499bd64662416f4d0d" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>set_adaptive_fast_step</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a100f797cb82abd1ec8563c591ebe823a" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>set_adaptive_step</name></member>
      <member refid="classamrex_1_1IntegratorBase_1ac97ece6993962b73c93abd34b7d49e2d" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>set_fast_rhs</name></member>
      <member refid="classamrex_1_1IntegratorBase_1ad59a858ee7ee2d3267dff6c2f085a4dd" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>set_fast_time_step</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a338b71036c6b6ddcc8e887518376152f" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>set_fast_tolerances</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a9c9409a416dc1c392f0a06e958ca10a4" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>set_imex_rhs</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a9fe529e314e46e719aec6150281858a3" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>set_max_steps</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a378df79907ae53d5eef652341833ab77" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>set_post_fast_stage_action</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a9a2a23791bed8871f255633f141f0444" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>set_post_fast_step_action</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a694555275ea4407fe6132ebb1a2f09c3" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>set_post_stage_action</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a0d4804fed689d7335e3b404e4a67c37d" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>set_post_step_action</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a0e94856b2945a45e1f0dae7cd9bbb8fe" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>set_rhs</name></member>
      <member refid="classamrex_1_1IntegratorBase_1aa2dfdf9011fe5398e3aef23edc39d76a" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>set_time_step</name></member>
      <member refid="classamrex_1_1IntegratorBase_1aa6a9eaa0e52db6d40074bfc02b9cacd0" prot="public" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>set_tolerances</name></member>
      <member refid="classamrex_1_1FEIntegrator_1ae1493ee81180c4fc466c1dbeb8905681" prot="private" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>time_current</name></member>
      <member refid="classamrex_1_1FEIntegrator_1ac0b9633fedee03bd638f87514a952720" prot="public" virt="virtual"><scope>amrex::FEIntegrator</scope><name>time_interpolate</name></member>
      <member refid="classamrex_1_1IntegratorBase_1ad9211fc29fd1cd9a03025959738c90d4" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>time_step</name></member>
      <member refid="classamrex_1_1IntegratorBase_1a19edbb14c5dbad6c2550d6fb59ab3860" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>use_adaptive_fast_time_step</name></member>
      <member refid="classamrex_1_1IntegratorBase_1ac912e7cd93ce1edbebd7af47bd90f7c2" prot="protected" virt="non-virtual"><scope>amrex::FEIntegrator</scope><name>use_adaptive_time_step</name></member>
      <member refid="classamrex_1_1FEIntegrator_1acc384fa61c635b7d9236f4c07a48109a" prot="public" virt="virtual"><scope>amrex::FEIntegrator</scope><name>~FEIntegrator</name></member>
      <member refid="classamrex_1_1IntegratorBase_1ab552abbdc6f529d492e5912b8af6f3a3" prot="public" virt="virtual"><scope>amrex::FEIntegrator</scope><name>~IntegratorBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
