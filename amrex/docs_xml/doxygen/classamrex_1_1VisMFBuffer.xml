<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1VisMFBuffer" kind="class" language="C++" prot="public">
    <compoundname>amrex::VisMFBuffer</compoundname>
    <derivedcompoundref refid="classamrex_1_1VisMF" prot="public" virt="non-virtual">amrex::VisMF</derivedcompoundref>
    <includes refid="AMReX__VisMFBuffer_8H" local="no">AMReX_VisMFBuffer.H</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classamrex_1_1VisMFBuffer_1a950522a5cdc10ea0ee5b3ee127612f33" prot="public" static="no" strong="no">
        <type></type>
        <name>@1</name>
        <enumvalue id="classamrex_1_1VisMFBuffer_1a950522a5cdc10ea0ee5b3ee127612f33a2c8bdbac4eb5f5b7b66bb2b48e4672c8" prot="public">
          <name>IO_Buffer_Size</name>
          <initializer>= 262144 * 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>We try to do I/O with buffers of this size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMFBuffer.H" line="16" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMFBuffer.H" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1VisMFBuffer_1a49a155dcc41cf64677c1b57df5dcfcb2" prot="public" static="no">
        <type>char</type>
        <definition>using amrex::VisMFBuffer::Setbuf_Char_Type =  char</definition>
        <argsstring></argsstring>
        <name>Setbuf_Char_Type</name>
        <briefdescription>
<para>The type of a char buffer required by [p]setbuf(). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMFBuffer.H" line="21" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMFBuffer.H" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1VisMFBuffer_1a1b2038a46c20c406d77023b6cdc956c0" prot="public" static="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1VisMFBuffer_1a49a155dcc41cf64677c1b57df5dcfcb2" kindref="member">Setbuf_Char_Type</ref> &gt;</type>
        <definition>using amrex::VisMFBuffer::IO_Buffer =  Vector&lt;Setbuf_Char_Type&gt;</definition>
        <argsstring></argsstring>
        <name>IO_Buffer</name>
        <briefdescription>
<para>A simple character buffer for setbuf() usage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMFBuffer.H" line="24" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMFBuffer.H" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1VisMFBuffer_1ab8b3e050b7f01e4270b0185d0d0e0497" prot="protected" static="yes" mutable="no">
        <type><ref refid="AMReX__Extension_8H_1ac05fa35b3db13c4599d7ad5fc51bef47" kindref="member">AMREX_EXPORT</ref> Long</type>
        <definition>Long amrex::VisMFBuffer::ioBufferSize</definition>
        <argsstring></argsstring>
        <name>ioBufferSize</name>
        <briefdescription>
<para>-<mdash/> the settable buffer size </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMFBuffer.H" line="34" column="30" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMFBuffer.H" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1VisMFBuffer_1a18fe5085940077f84917d957455078ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Long</type>
        <definition>static Long amrex::VisMFBuffer::GetIOBufferSize</definition>
        <argsstring>()</argsstring>
        <name>GetIOBufferSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMFBuffer.H" line="26" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMFBuffer.H" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1VisMFBuffer_1a6408b3042dc48515b0c3722c43826f03" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void amrex::VisMFBuffer::SetIOBufferSize</definition>
        <argsstring>(Long iobuffersize)</argsstring>
        <name>SetIOBufferSize</name>
        <param>
          <type>Long</type>
          <declname>iobuffersize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMFBuffer.H" line="27" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMFBuffer.H" bodystart="27" bodyend="30"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>amrex::VisMF</label>
        <link refid="classamrex_1_1VisMF"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>amrex::VisMFBuffer</label>
        <link refid="classamrex_1_1VisMFBuffer"/>
      </node>
    </inheritancegraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMFBuffer.H" line="12" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMFBuffer.H" bodystart="13" bodyend="35"/>
    <listofallmembers>
      <member refid="classamrex_1_1VisMFBuffer_1a18fe5085940077f84917d957455078ab" prot="public" virt="non-virtual"><scope>amrex::VisMFBuffer</scope><name>GetIOBufferSize</name></member>
      <member refid="classamrex_1_1VisMFBuffer_1a1b2038a46c20c406d77023b6cdc956c0" prot="public" virt="non-virtual"><scope>amrex::VisMFBuffer</scope><name>IO_Buffer</name></member>
      <member refid="classamrex_1_1VisMFBuffer_1a950522a5cdc10ea0ee5b3ee127612f33a2c8bdbac4eb5f5b7b66bb2b48e4672c8" prot="public" virt="non-virtual"><scope>amrex::VisMFBuffer</scope><name>IO_Buffer_Size</name></member>
      <member refid="classamrex_1_1VisMFBuffer_1ab8b3e050b7f01e4270b0185d0d0e0497" prot="protected" virt="non-virtual"><scope>amrex::VisMFBuffer</scope><name>ioBufferSize</name></member>
      <member refid="classamrex_1_1VisMFBuffer_1a49a155dcc41cf64677c1b57df5dcfcb2" prot="public" virt="non-virtual"><scope>amrex::VisMFBuffer</scope><name>Setbuf_Char_Type</name></member>
      <member refid="classamrex_1_1VisMFBuffer_1a6408b3042dc48515b0c3722c43826f03" prot="public" virt="non-virtual"><scope>amrex::VisMFBuffer</scope><name>SetIOBufferSize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
