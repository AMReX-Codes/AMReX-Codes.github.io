<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__BArena_8cpp" kind="file" language="C++">
    <compoundname>AMReX_BArena.cpp</compoundname>
    <includes refid="AMReX__BArena_8H" local="no">AMReX_BArena.H</includes>
    <incdepgraph>
      <node id="7336">
        <label>functional</label>
      </node>
      <node id="7330">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="7331" relation="include">
        </childnode>
        <childnode refid="7332" relation="include">
        </childnode>
        <childnode refid="7333" relation="include">
        </childnode>
        <childnode refid="7335" relation="include">
        </childnode>
        <childnode refid="7336" relation="include">
        </childnode>
        <childnode refid="7337" relation="include">
        </childnode>
        <childnode refid="7338" relation="include">
        </childnode>
        <childnode refid="7339" relation="include">
        </childnode>
        <childnode refid="7340" relation="include">
        </childnode>
      </node>
      <node id="7334">
        <label>stdexcept</label>
      </node>
      <node id="7337">
        <label>string</label>
      </node>
      <node id="7326">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BArena.cpp</label>
        <link refid="AMReX_BArena.cpp"/>
        <childnode refid="7327" relation="include">
        </childnode>
      </node>
      <node id="7338">
        <label>cstdio</label>
      </node>
      <node id="7339">
        <label>vector</label>
      </node>
      <node id="7329">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="7330" relation="include">
        </childnode>
      </node>
      <node id="7331">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="7333">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="7334" relation="include">
        </childnode>
      </node>
      <node id="7328">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="7329" relation="include">
        </childnode>
        <childnode refid="7341" relation="include">
        </childnode>
        <childnode refid="7342" relation="include">
        </childnode>
      </node>
      <node id="7342">
        <label>cstdlib</label>
      </node>
      <node id="7335">
        <label>iostream</label>
      </node>
      <node id="7341">
        <label>cstddef</label>
      </node>
      <node id="7327">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="7328" relation="include">
        </childnode>
      </node>
      <node id="7332">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="7340">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__BArena_8H" kindref="compound">AMReX_BArena.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><ref refid="classamrex_1_1BArena_1a3f5a8cc7a0cb8013fe3bc8ba6270c510" kindref="member">amrex::BArena::alloc</ref><sp/>(std::size_t<sp/>sz_)</highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::malloc(sz_);</highlight></codeline>
<codeline lineno="7"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="classamrex_1_1BArena_1a64267cbe47ae467eedfd819c6fc50cd2" kindref="member">amrex::BArena::free</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pt)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>std::free(pt);</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_BArena.cpp"/>
  </compounddef>
</doxygen>
