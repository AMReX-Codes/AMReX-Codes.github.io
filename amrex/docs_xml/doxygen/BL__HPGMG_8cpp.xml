<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="BL__HPGMG_8cpp" kind="file" language="C++">
    <compoundname>BL_HPGMG.cpp</compoundname>
    <includes refid="BL__HPGMG_8H" local="no">BL_HPGMG.H</includes>
    <incdepgraph>
      <node id="46665">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="46616" relation="include">
        </childnode>
        <childnode refid="46666" relation="include">
        </childnode>
        <childnode refid="46637" relation="include">
        </childnode>
        <childnode refid="46608" relation="include">
        </childnode>
      </node>
      <node id="46690">
        <label>iomanip</label>
      </node>
      <node id="46612">
        <label>functional</label>
      </node>
      <node id="46661">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="46611" relation="include">
        </childnode>
        <childnode refid="46647" relation="include">
        </childnode>
        <childnode refid="46656" relation="include">
        </childnode>
        <childnode refid="46662" relation="include">
        </childnode>
        <childnode refid="46638" relation="include">
        </childnode>
        <childnode refid="46644" relation="include">
        </childnode>
        <childnode refid="46625" relation="include">
        </childnode>
        <childnode refid="46637" relation="include">
        </childnode>
      </node>
      <node id="46653">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="46633" relation="include">
        </childnode>
        <childnode refid="46605" relation="include">
        </childnode>
        <childnode refid="46618" relation="include">
        </childnode>
        <childnode refid="46624" relation="include">
        </childnode>
        <childnode refid="46630" relation="include">
        </childnode>
        <childnode refid="46632" relation="include">
        </childnode>
      </node>
      <node id="46635">
        <label>limits</label>
      </node>
      <node id="46652">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="46613" relation="include">
        </childnode>
        <childnode refid="46624" relation="include">
        </childnode>
      </node>
      <node id="46691">
        <label>AMReX_CudaContainers.H</label>
        <link refid="AMReX__CudaContainers_8H"/>
        <childnode refid="46673" relation="include">
        </childnode>
        <childnode refid="46637" relation="include">
        </childnode>
        <childnode refid="46688" relation="include">
        </childnode>
      </node>
      <node id="46618">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="46619" relation="include">
        </childnode>
        <childnode refid="46620" relation="include">
        </childnode>
        <childnode refid="46631" relation="include">
        </childnode>
        <childnode refid="46608" relation="include">
        </childnode>
        <childnode refid="46632" relation="include">
        </childnode>
        <childnode refid="46638" relation="include">
        </childnode>
        <childnode refid="46639" relation="include">
        </childnode>
        <childnode refid="46630" relation="include">
        </childnode>
        <childnode refid="46625" relation="include">
        </childnode>
        <childnode refid="46640" relation="include">
        </childnode>
        <childnode refid="46637" relation="include">
        </childnode>
        <childnode refid="46607" relation="include">
        </childnode>
        <childnode refid="46629" relation="include">
        </childnode>
      </node>
      <node id="46682">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="46607" relation="include">
        </childnode>
        <childnode refid="46629" relation="include">
        </childnode>
        <childnode refid="46679" relation="include">
        </childnode>
        <childnode refid="46622" relation="include">
        </childnode>
        <childnode refid="46624" relation="include">
        </childnode>
        <childnode refid="46625" relation="include">
        </childnode>
        <childnode refid="46640" relation="include">
        </childnode>
        <childnode refid="46611" relation="include">
        </childnode>
        <childnode refid="46634" relation="include">
        </childnode>
      </node>
      <node id="46604">
        <label>cstdint</label>
      </node>
      <node id="46702">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="46613" relation="include">
        </childnode>
        <childnode refid="46661" relation="include">
        </childnode>
        <childnode refid="46663" relation="include">
        </childnode>
        <childnode refid="46664" relation="include">
        </childnode>
        <childnode refid="46703" relation="include">
        </childnode>
        <childnode refid="46701" relation="include">
        </childnode>
        <childnode refid="46689" relation="include">
        </childnode>
        <childnode refid="46646" relation="include">
        </childnode>
        <childnode refid="46674" relation="include">
        </childnode>
      </node>
      <node id="46663">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="46656" relation="include">
        </childnode>
        <childnode refid="46635" relation="include">
        </childnode>
        <childnode refid="46616" relation="include">
        </childnode>
        <childnode refid="46647" relation="include">
        </childnode>
        <childnode refid="46611" relation="include">
        </childnode>
        <childnode refid="46606" relation="include">
        </childnode>
        <childnode refid="46625" relation="include">
        </childnode>
        <childnode refid="46637" relation="include">
        </childnode>
        <childnode refid="46618" relation="include">
        </childnode>
        <childnode refid="46624" relation="include">
        </childnode>
        <childnode refid="46664" relation="include">
        </childnode>
      </node>
      <node id="46632">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="46619" relation="include">
        </childnode>
        <childnode refid="46633" relation="include">
        </childnode>
        <childnode refid="46634" relation="include">
        </childnode>
        <childnode refid="46635" relation="include">
        </childnode>
        <childnode refid="46636" relation="include">
        </childnode>
        <childnode refid="46621" relation="include">
        </childnode>
        <childnode refid="46608" relation="include">
        </childnode>
        <childnode refid="46630" relation="include">
        </childnode>
        <childnode refid="46625" relation="include">
        </childnode>
        <childnode refid="46637" relation="include">
        </childnode>
        <childnode refid="46623" relation="include">
        </childnode>
        <childnode refid="46605" relation="include">
        </childnode>
        <childnode refid="46622" relation="include">
        </childnode>
        <childnode refid="46607" relation="include">
        </childnode>
      </node>
      <node id="46606">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="46607" relation="include">
        </childnode>
        <childnode refid="46608" relation="include">
        </childnode>
        <childnode refid="46609" relation="include">
        </childnode>
        <childnode refid="46611" relation="include">
        </childnode>
        <childnode refid="46612" relation="include">
        </childnode>
        <childnode refid="46613" relation="include">
        </childnode>
        <childnode refid="46614" relation="include">
        </childnode>
        <childnode refid="46615" relation="include">
        </childnode>
        <childnode refid="46616" relation="include">
        </childnode>
      </node>
      <node id="46654">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="46681">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="46676">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="46655" relation="include">
        </childnode>
        <childnode refid="46613" relation="include">
        </childnode>
      </node>
      <node id="46637">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="46621" relation="include">
        </childnode>
        <childnode refid="46615" relation="include">
        </childnode>
        <childnode refid="46616" relation="include">
        </childnode>
        <childnode refid="46605" relation="include">
        </childnode>
      </node>
      <node id="46689">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="46628" relation="include">
        </childnode>
        <childnode refid="46666" relation="include">
        </childnode>
        <childnode refid="46690" relation="include">
        </childnode>
        <childnode refid="46606" relation="include">
        </childnode>
        <childnode refid="46665" relation="include">
        </childnode>
        <childnode refid="46664" relation="include">
        </childnode>
      </node>
      <node id="46634">
        <label>cmath</label>
      </node>
      <node id="46700">
        <label>cassert</label>
      </node>
      <node id="46610">
        <label>stdexcept</label>
      </node>
      <node id="46673">
        <label>numeric</label>
      </node>
      <node id="46644">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="46619" relation="include">
        </childnode>
        <childnode refid="46632" relation="include">
        </childnode>
        <childnode refid="46638" relation="include">
        </childnode>
        <childnode refid="46618" relation="include">
        </childnode>
        <childnode refid="46625" relation="include">
        </childnode>
        <childnode refid="46637" relation="include">
        </childnode>
      </node>
      <node id="46641">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="46634" relation="include">
        </childnode>
        <childnode refid="46633" relation="include">
        </childnode>
        <childnode refid="46621" relation="include">
        </childnode>
        <childnode refid="46635" relation="include">
        </childnode>
        <childnode refid="46636" relation="include">
        </childnode>
        <childnode refid="46626" relation="include">
        </childnode>
        <childnode refid="46642" relation="include">
        </childnode>
        <childnode refid="46616" relation="include">
        </childnode>
        <childnode refid="46622" relation="include">
        </childnode>
        <childnode refid="46605" relation="include">
        </childnode>
        <childnode refid="46625" relation="include">
        </childnode>
        <childnode refid="46618" relation="include">
        </childnode>
        <childnode refid="46643" relation="include">
        </childnode>
        <childnode refid="46644" relation="include">
        </childnode>
        <childnode refid="46645" relation="include">
        </childnode>
        <childnode refid="46648" relation="include">
        </childnode>
        <childnode refid="46624" relation="include">
        </childnode>
        <childnode refid="46652" relation="include">
        </childnode>
        <childnode refid="46653" relation="include">
        </childnode>
        <childnode refid="46654" relation="include">
        </childnode>
        <childnode refid="46655" relation="include">
        </childnode>
        <childnode refid="46674" relation="include">
        </childnode>
      </node>
      <node id="46613">
        <label>string</label>
      </node>
      <node id="46688">
        <label>AMReX_CudaAllocators.H</label>
        <link refid="AMReX__CudaAllocators_8H"/>
        <childnode refid="46656" relation="include">
        </childnode>
        <childnode refid="46616" relation="include">
        </childnode>
        <childnode refid="46635" relation="include">
        </childnode>
        <childnode refid="46689" relation="include">
        </childnode>
        <childnode refid="46646" relation="include">
        </childnode>
        <childnode refid="46679" relation="include">
        </childnode>
      </node>
      <node id="46643">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="46618" relation="include">
        </childnode>
      </node>
      <node id="46656">
        <label>map</label>
      </node>
      <node id="46601">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/Extern/hpgmg/BL_HPGMG.cpp</label>
        <link refid="BL_HPGMG.cpp"/>
        <childnode refid="46602" relation="include">
        </childnode>
      </node>
      <node id="46603">
        <label>AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="46604" relation="include">
        </childnode>
        <childnode refid="46605" relation="include">
        </childnode>
        <childnode refid="46617" relation="include">
        </childnode>
        <childnode refid="46694" relation="include">
        </childnode>
        <childnode refid="46707" relation="include">
        </childnode>
        <childnode refid="46701" relation="include">
        </childnode>
      </node>
      <node id="46651">
        <label>unordered_set</label>
      </node>
      <node id="46706">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
      </node>
      <node id="46705">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="46702" relation="include">
        </childnode>
        <childnode refid="46704" relation="include">
        </childnode>
      </node>
      <node id="46666">
        <label>fstream</label>
      </node>
      <node id="46696">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="46619" relation="include">
        </childnode>
        <childnode refid="46656" relation="include">
        </childnode>
        <childnode refid="46625" relation="include">
        </childnode>
        <childnode refid="46697" relation="include">
        </childnode>
        <childnode refid="46664" relation="include">
        </childnode>
        <childnode refid="46698" relation="include">
        </childnode>
        <childnode refid="46701" relation="include">
        </childnode>
      </node>
      <node id="46704">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="46616" relation="include">
        </childnode>
        <childnode refid="46646" relation="include">
        </childnode>
        <childnode refid="46702" relation="include">
        </childnode>
        <childnode refid="46632" relation="include">
        </childnode>
        <childnode refid="46617" relation="include">
        </childnode>
        <childnode refid="46698" relation="include">
        </childnode>
        <childnode refid="46674" relation="include">
        </childnode>
      </node>
      <node id="46631">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="46624" relation="include">
        </childnode>
      </node>
      <node id="46698">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="46619" relation="include">
        </childnode>
        <childnode refid="46626" relation="include">
        </childnode>
        <childnode refid="46625" relation="include">
        </childnode>
        <childnode refid="46637" relation="include">
        </childnode>
        <childnode refid="46624" relation="include">
        </childnode>
        <childnode refid="46618" relation="include">
        </childnode>
        <childnode refid="46699" relation="include">
        </childnode>
      </node>
      <node id="46625">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="46626" relation="include">
        </childnode>
        <childnode refid="46616" relation="include">
        </childnode>
        <childnode refid="46627" relation="include">
        </childnode>
        <childnode refid="46613" relation="include">
        </childnode>
        <childnode refid="46611" relation="include">
        </childnode>
        <childnode refid="46628" relation="include">
        </childnode>
        <childnode refid="46614" relation="include">
        </childnode>
        <childnode refid="46606" relation="include">
        </childnode>
        <childnode refid="46607" relation="include">
        </childnode>
        <childnode refid="46629" relation="include">
        </childnode>
        <childnode refid="46605" relation="include">
        </childnode>
        <childnode refid="46630" relation="include">
        </childnode>
        <childnode refid="46624" relation="include">
        </childnode>
      </node>
      <node id="46687">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="46607" relation="include">
        </childnode>
        <childnode refid="46629" relation="include">
        </childnode>
        <childnode refid="46655" relation="include">
        </childnode>
      </node>
      <node id="46630">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="46703">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="46606" relation="include">
        </childnode>
        <childnode refid="46664" relation="include">
        </childnode>
        <childnode refid="46689" relation="include">
        </childnode>
        <childnode refid="46637" relation="include">
        </childnode>
        <childnode refid="46642" relation="include">
        </childnode>
      </node>
      <node id="46622">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="46675">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="46607" relation="include">
        </childnode>
        <childnode refid="46629" relation="include">
        </childnode>
        <childnode refid="46676" relation="include">
        </childnode>
        <childnode refid="46677" relation="include">
        </childnode>
        <childnode refid="46679" relation="include">
        </childnode>
        <childnode refid="46618" relation="include">
        </childnode>
        <childnode refid="46643" relation="include">
        </childnode>
        <childnode refid="46622" relation="include">
        </childnode>
        <childnode refid="46605" relation="include">
        </childnode>
        <childnode refid="46678" relation="include">
        </childnode>
        <childnode refid="46647" relation="include">
        </childnode>
        <childnode refid="46635" relation="include">
        </childnode>
        <childnode refid="46621" relation="include">
        </childnode>
        <childnode refid="46680" relation="include">
        </childnode>
        <childnode refid="46681" relation="include">
        </childnode>
      </node>
      <node id="46658">
        <label>sys/types.h</label>
      </node>
      <node id="46701">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="46632" relation="include">
        </childnode>
        <childnode refid="46618" relation="include">
        </childnode>
        <childnode refid="46615" relation="include">
        </childnode>
      </node>
      <node id="46672">
        <label>typeinfo</label>
      </node>
      <node id="46614">
        <label>cstdio</label>
      </node>
      <node id="46678">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="46642" relation="include">
        </childnode>
        <childnode refid="46622" relation="include">
        </childnode>
      </node>
      <node id="46629">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="46607" relation="include">
        </childnode>
      </node>
      <node id="46602">
        <label>BL_HPGMG.H</label>
        <link refid="BL__HPGMG_8H"/>
        <childnode refid="46603" relation="include">
        </childnode>
      </node>
      <node id="46667">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="46668" relation="include">
        </childnode>
        <childnode refid="46613" relation="include">
        </childnode>
        <childnode refid="46627" relation="include">
        </childnode>
        <childnode refid="46628" relation="include">
        </childnode>
        <childnode refid="46614" relation="include">
        </childnode>
        <childnode refid="46633" relation="include">
        </childnode>
        <childnode refid="46669" relation="include">
        </childnode>
        <childnode refid="46670" relation="include">
        </childnode>
        <childnode refid="46671" relation="include">
        </childnode>
      </node>
      <node id="46659">
        <label>unistd.h</label>
      </node>
      <node id="46668">
        <label>stack</label>
      </node>
      <node id="46615">
        <label>vector</label>
      </node>
      <node id="46693">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="46618" relation="include">
        </childnode>
        <childnode refid="46689" relation="include">
        </childnode>
        <childnode refid="46654" relation="include">
        </childnode>
        <childnode refid="46637" relation="include">
        </childnode>
        <childnode refid="46646" relation="include">
        </childnode>
      </node>
      <node id="46605">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="46606" relation="include">
        </childnode>
      </node>
      <node id="46607">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="46627">
        <label>utility</label>
      </node>
      <node id="46626">
        <label>array</label>
      </node>
      <node id="46694">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="46611" relation="include">
        </childnode>
        <childnode refid="46684" relation="include">
        </childnode>
        <childnode refid="46635" relation="include">
        </childnode>
        <childnode refid="46656" relation="include">
        </childnode>
        <childnode refid="46627" relation="include">
        </childnode>
        <childnode refid="46615" relation="include">
        </childnode>
        <childnode refid="46621" relation="include">
        </childnode>
        <childnode refid="46649" relation="include">
        </childnode>
        <childnode refid="46613" relation="include">
        </childnode>
        <childnode refid="46605" relation="include">
        </childnode>
        <childnode refid="46625" relation="include">
        </childnode>
        <childnode refid="46637" relation="include">
        </childnode>
        <childnode refid="46618" relation="include">
        </childnode>
        <childnode refid="46606" relation="include">
        </childnode>
        <childnode refid="46661" relation="include">
        </childnode>
        <childnode refid="46695" relation="include">
        </childnode>
        <childnode refid="46693" relation="include">
        </childnode>
        <childnode refid="46663" relation="include">
        </childnode>
        <childnode refid="46696" relation="include">
        </childnode>
        <childnode refid="46664" relation="include">
        </childnode>
        <childnode refid="46655" relation="include">
        </childnode>
        <childnode refid="46608" relation="include">
        </childnode>
        <childnode refid="46652" relation="include">
        </childnode>
        <childnode refid="46701" relation="include">
        </childnode>
        <childnode refid="46689" relation="include">
        </childnode>
        <childnode refid="46702" relation="include">
        </childnode>
        <childnode refid="46704" relation="include">
        </childnode>
        <childnode refid="46654" relation="include">
        </childnode>
        <childnode refid="46678" relation="include">
        </childnode>
        <childnode refid="46705" relation="include">
        </childnode>
        <childnode refid="46641" relation="include">
        </childnode>
        <childnode refid="46674" relation="include">
        </childnode>
        <childnode refid="46706" relation="include">
        </childnode>
      </node>
      <node id="46617">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="46618" relation="include">
        </childnode>
        <childnode refid="46641" relation="include">
        </childnode>
        <childnode refid="46624" relation="include">
        </childnode>
        <childnode refid="46630" relation="include">
        </childnode>
        <childnode refid="46693" relation="include">
        </childnode>
        <childnode refid="46634" relation="include">
        </childnode>
      </node>
      <node id="46628">
        <label>sstream</label>
      </node>
      <node id="46707">
        <label>AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="46694" relation="include">
        </childnode>
        <childnode refid="46705" relation="include">
        </childnode>
        <childnode refid="46689" relation="include">
        </childnode>
        <childnode refid="46635" relation="include">
        </childnode>
      </node>
      <node id="46609">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="46610" relation="include">
        </childnode>
      </node>
      <node id="46620">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="46621" relation="include">
        </childnode>
        <childnode refid="46607" relation="include">
        </childnode>
        <childnode refid="46622" relation="include">
        </childnode>
        <childnode refid="46623" relation="include">
        </childnode>
      </node>
      <node id="46677">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="46607" relation="include">
        </childnode>
        <childnode refid="46629" relation="include">
        </childnode>
        <childnode refid="46676" relation="include">
        </childnode>
        <childnode refid="46618" relation="include">
        </childnode>
        <childnode refid="46678" relation="include">
        </childnode>
      </node>
      <node id="46664">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="46608" relation="include">
        </childnode>
        <childnode refid="46665" relation="include">
        </childnode>
        <childnode refid="46667" relation="include">
        </childnode>
        <childnode refid="46652" relation="include">
        </childnode>
        <childnode refid="46605" relation="include">
        </childnode>
        <childnode refid="46624" relation="include">
        </childnode>
        <childnode refid="46625" relation="include">
        </childnode>
        <childnode refid="46637" relation="include">
        </childnode>
        <childnode refid="46618" relation="include">
        </childnode>
        <childnode refid="46611" relation="include">
        </childnode>
        <childnode refid="46615" relation="include">
        </childnode>
        <childnode refid="46613" relation="include">
        </childnode>
        <childnode refid="46672" relation="include">
        </childnode>
        <childnode refid="46621" relation="include">
        </childnode>
        <childnode refid="46612" relation="include">
        </childnode>
        <childnode refid="46635" relation="include">
        </childnode>
        <childnode refid="46673" relation="include">
        </childnode>
      </node>
      <node id="46655">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="46633" relation="include">
        </childnode>
        <childnode refid="46611" relation="include">
        </childnode>
        <childnode refid="46613" relation="include">
        </childnode>
        <childnode refid="46656" relation="include">
        </childnode>
        <childnode refid="46657" relation="include">
        </childnode>
        <childnode refid="46642" relation="include">
        </childnode>
        <childnode refid="46658" relation="include">
        </childnode>
        <childnode refid="46659" relation="include">
        </childnode>
        <childnode refid="46660" relation="include">
        </childnode>
        <childnode refid="46605" relation="include">
        </childnode>
        <childnode refid="46624" relation="include">
        </childnode>
        <childnode refid="46625" relation="include">
        </childnode>
        <childnode refid="46637" relation="include">
        </childnode>
        <childnode refid="46618" relation="include">
        </childnode>
        <childnode refid="46661" relation="include">
        </childnode>
        <childnode refid="46663" relation="include">
        </childnode>
        <childnode refid="46664" relation="include">
        </childnode>
      </node>
      <node id="46646">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="46605" relation="include">
        </childnode>
        <childnode refid="46647" relation="include">
        </childnode>
        <childnode refid="46633" relation="include">
        </childnode>
      </node>
      <node id="46639">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="46619" relation="include">
        </childnode>
        <childnode refid="46605" relation="include">
        </childnode>
        <childnode refid="46630" relation="include">
        </childnode>
        <childnode refid="46607" relation="include">
        </childnode>
      </node>
      <node id="46623">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="46611" relation="include">
        </childnode>
        <childnode refid="46624" relation="include">
        </childnode>
        <childnode refid="46625" relation="include">
        </childnode>
      </node>
      <node id="46660">
        <label>sys/wait.h</label>
      </node>
      <node id="46619">
        <label>iosfwd</label>
      </node>
      <node id="46633">
        <label>cstdlib</label>
      </node>
      <node id="46671">
        <label>cfenv</label>
      </node>
      <node id="46611">
        <label>iostream</label>
      </node>
      <node id="46638">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="46619" relation="include">
        </childnode>
        <childnode refid="46608" relation="include">
        </childnode>
        <childnode refid="46632" relation="include">
        </childnode>
        <childnode refid="46630" relation="include">
        </childnode>
      </node>
      <node id="46640">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="46632" relation="include">
        </childnode>
      </node>
      <node id="46647">
        <label>cstddef</label>
      </node>
      <node id="46662">
        <label>unordered_map</label>
      </node>
      <node id="46695">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="46619" relation="include">
        </childnode>
        <childnode refid="46638" relation="include">
        </childnode>
        <childnode refid="46618" relation="include">
        </childnode>
        <childnode refid="46632" relation="include">
        </childnode>
        <childnode refid="46644" relation="include">
        </childnode>
      </node>
      <node id="46674">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="46607" relation="include">
        </childnode>
        <childnode refid="46629" relation="include">
        </childnode>
        <childnode refid="46675" relation="include">
        </childnode>
        <childnode refid="46676" relation="include">
        </childnode>
        <childnode refid="46682" relation="include">
        </childnode>
        <childnode refid="46679" relation="include">
        </childnode>
        <childnode refid="46683" relation="include">
        </childnode>
        <childnode refid="46685" relation="include">
        </childnode>
        <childnode refid="46686" relation="include">
        </childnode>
        <childnode refid="46677" relation="include">
        </childnode>
        <childnode refid="46687" relation="include">
        </childnode>
        <childnode refid="46688" relation="include">
        </childnode>
        <childnode refid="46691" relation="include">
        </childnode>
        <childnode refid="46692" relation="include">
        </childnode>
      </node>
      <node id="46636">
        <label>climits</label>
      </node>
      <node id="46692">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="46650">
        <label>mutex</label>
      </node>
      <node id="46657">
        <label>chrono</label>
      </node>
      <node id="46680">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="46670">
        <label>csignal</label>
      </node>
      <node id="46648">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="46647" relation="include">
        </childnode>
        <childnode refid="46649" relation="include">
        </childnode>
        <childnode refid="46615" relation="include">
        </childnode>
        <childnode refid="46650" relation="include">
        </childnode>
        <childnode refid="46651" relation="include">
        </childnode>
        <childnode refid="46612" relation="include">
        </childnode>
        <childnode refid="46646" relation="include">
        </childnode>
      </node>
      <node id="46642">
        <label>type_traits</label>
      </node>
      <node id="46649">
        <label>set</label>
      </node>
      <node id="46645">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="46646" relation="include">
        </childnode>
      </node>
      <node id="46608">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="46685">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="46646" relation="include">
        </childnode>
      </node>
      <node id="46621">
        <label>algorithm</label>
      </node>
      <node id="46679">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="46633" relation="include">
        </childnode>
        <childnode refid="46616" relation="include">
        </childnode>
        <childnode refid="46626" relation="include">
        </childnode>
        <childnode refid="46606" relation="include">
        </childnode>
        <childnode refid="46655" relation="include">
        </childnode>
        <childnode refid="46676" relation="include">
        </childnode>
        <childnode refid="46629" relation="include">
        </childnode>
      </node>
      <node id="46669">
        <label>execinfo.h</label>
      </node>
      <node id="46684">
        <label>cstring</label>
      </node>
      <node id="46699">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="46647" relation="include">
        </childnode>
        <childnode refid="46633" relation="include">
        </childnode>
        <childnode refid="46684" relation="include">
        </childnode>
        <childnode refid="46611" relation="include">
        </childnode>
        <childnode refid="46634" relation="include">
        </childnode>
        <childnode refid="46618" relation="include">
        </childnode>
        <childnode refid="46624" relation="include">
        </childnode>
        <childnode refid="46630" relation="include">
        </childnode>
        <childnode refid="46615" relation="include">
        </childnode>
        <childnode refid="46700" relation="include">
        </childnode>
        <childnode refid="46632" relation="include">
        </childnode>
      </node>
      <node id="46697">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="46635" relation="include">
        </childnode>
        <childnode refid="46606" relation="include">
        </childnode>
        <childnode refid="46624" relation="include">
        </childnode>
        <childnode refid="46625" relation="include">
        </childnode>
        <childnode refid="46637" relation="include">
        </childnode>
        <childnode refid="46618" relation="include">
        </childnode>
      </node>
      <node id="46616">
        <label>memory</label>
      </node>
      <node id="46683">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="46647" relation="include">
        </childnode>
        <childnode refid="46684" relation="include">
        </childnode>
        <childnode refid="46633" relation="include">
        </childnode>
        <childnode refid="46616" relation="include">
        </childnode>
        <childnode refid="46646" relation="include">
        </childnode>
        <childnode refid="46678" relation="include">
        </childnode>
        <childnode refid="46679" relation="include">
        </childnode>
      </node>
      <node id="46686">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="46607" relation="include">
        </childnode>
        <childnode refid="46629" relation="include">
        </childnode>
        <childnode refid="46679" relation="include">
        </childnode>
        <childnode refid="46678" relation="include">
        </childnode>
        <childnode refid="46646" relation="include">
        </childnode>
        <childnode refid="46633" relation="include">
        </childnode>
      </node>
      <node id="46624">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="46622" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="BL__HPGMG_8H" kindref="compound">BL_HPGMG.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>want<sp/>to<sp/>use<sp/>the<sp/>multigrid<sp/>solver<sp/>from<sp/>HPGMG<sp/>then<sp/>we<sp/>must<sp/>convert<sp/>our</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MultiFabs<sp/>to<sp/>HPGMG&apos;s<sp/>level<sp/>data<sp/>structures.<sp/>This<sp/>function<sp/>essentially</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>replaces<sp/>the<sp/>create_level()<sp/>function<sp/>in<sp/>HPGMG.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USEHPGMG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateHPGMGLevel<sp/>(level_type*<sp/>level,</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>&amp;<sp/>mf,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_cell,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1EB2_1a6a03e6a896276bd89190ad6eee9566e1" kindref="member">max_grid_size</ref>,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>my_rank,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_ranks,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>domain_boundary_condition,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numVectors,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>h0)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>box;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>boxes_in_i<sp/>=<sp/>n_cell<sp/>/<sp/><ref refid="namespaceamrex_1_1EB2_1a6a03e6a896276bd89190ad6eee9566e1" kindref="member">max_grid_size</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TotalBoxes<sp/>=<sp/>boxes_in_i<sp/>*<sp/>boxes_in_i<sp/>*<sp/>boxes_in_i;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HPGMG<sp/>requires<sp/>perfect<sp/>cubes<sp/>for<sp/>all<sp/>boxes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(mf);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.validbox();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bx.<ref refid="classamrex_1_1Box_1afd87b7a11b5e3c17d51a21a4f9703a47" kindref="member">isSquare</ref>())<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac0e2e23df625040ded95611ceae98352" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;All<sp/>boxes<sp/>must<sp/>be<sp/>square<sp/>in<sp/>HPGMG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HPGMG<sp/>also<sp/>requires<sp/>all<sp/>boxes<sp/>to<sp/>be<sp/>the<sp/>same<sp/>size,<sp/>so<sp/>we<sp/>iterate<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>boxes<sp/>and<sp/>make<sp/>sure<sp/>they&apos;re<sp/>the<sp/>same.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi1(mf);<sp/>mfi1.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi1)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx1<sp/>=<sp/>mfi1.validbox();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi2(mf);<sp/>mfi2.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi2)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx2<sp/>=<sp/>mfi2.validbox();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(bx1.<ref refid="classamrex_1_1Box_1a225f6b397e246c834230768152000ab9" kindref="member">sameSize</ref>(bx2)))</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac0e2e23df625040ded95611ceae98352" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;All<sp/>boxes<sp/>must<sp/>be<sp/>identical<sp/>in<sp/>HPGMG!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>the<sp/>boxes<sp/>have<sp/>identical<sp/>size<sp/>and<sp/>shape,<sp/>so<sp/>we<sp/>just<sp/>pick<sp/>one<sp/>of<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>a<sp/>representative<sp/>to<sp/>fill<sp/>in<sp/>all<sp/>the<sp/>level<sp/>data<sp/>for<sp/>HPGMG.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(mf);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!mfi.isValid())<sp/>++mfi;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref>&amp;<sp/>bx<sp/>=<sp/>mfi.validbox();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>box_dim<sp/>=<sp/>bx.<ref refid="classamrex_1_1Box_1a6a6733882a425dd6a062cce99c224421" kindref="member">length</ref>(0);<sp/></highlight><highlight class="comment">/*<sp/>Since<sp/>we&apos;ve<sp/>already<sp/>checked<sp/>that<sp/>all<sp/>boxes<sp/>are<sp/>the<sp/>same<sp/>size,<sp/>we<sp/>can<sp/>just<sp/>use<sp/>the<sp/>size<sp/>from<sp/>one<sp/>of<sp/>them<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TotalBoxes<sp/>/<sp/>num_ranks<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac0e2e23df625040ded95611ceae98352" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;Must<sp/>have<sp/>at<sp/>least<sp/>one<sp/>box<sp/>per<sp/>MPI<sp/>task<sp/>when<sp/>using<sp/>HPGMG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>())</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;attempting<sp/>to<sp/>create<sp/>a<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>box_dim*boxes_in_i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;^3<sp/>level<sp/>from<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>TotalBoxes<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>x<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>box_dim<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;^3<sp/>boxes<sp/>distributed<sp/>among<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>num_ranks<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>tasks...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(domain_boundary_condition==BC_DIRICHLET)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;boundary<sp/>condition<sp/>=<sp/>BC_DIRICHLET&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(domain_boundary_condition==BC_PERIODIC)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;boundary<sp/>condition<sp/>=<sp/>BC_PERIODIC&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac0e2e23df625040ded95611ceae98352" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>boundary<sp/>condition<sp/>supplied&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>omp_threads<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>master</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>omp_threads<sp/>=<sp/><ref refid="namespaceamrex__omp__module_1a1f567807c5ae4117153ee1e35cb0a418" kindref="member">omp_get_num_threads</ref><sp/>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>box_ghosts<sp/>=<sp/>stencil_get_radius();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;box_dim<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>box_dim;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;box_ghosts<sp/><sp/><sp/><sp/><sp/>=<sp/>box_ghosts;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;numVectors<sp/><sp/><sp/><sp/><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>no<sp/>vectors<sp/>have<sp/>been<sp/>allocated<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;vectors_base<sp/><sp/><sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>returned<sp/>by<sp/>bulk<sp/>malloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;vectors<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>pointers<sp/>to<sp/>individual<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;boxes_in.i<sp/><sp/><sp/><sp/><sp/>=<sp/>boxes_in_i;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;boxes_in.j<sp/><sp/><sp/><sp/><sp/>=<sp/>boxes_in_i;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;boxes_in.k<sp/><sp/><sp/><sp/><sp/>=<sp/>boxes_in_i;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;dim.i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>box_dim*level-&gt;boxes_in.i;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;dim.j<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>box_dim*level-&gt;boxes_in.j;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;dim.k<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>box_dim*level-&gt;boxes_in.k;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;active<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;my_rank<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>my_rank;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;num_ranks<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>num_ranks;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;boundary_condition.type<sp/>=<sp/>domain_boundary_condition;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;must_subtract_mean<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;num_threads<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>omp_threads;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;my_blocks<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;num_my_blocks<sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;allocated_blocks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;tag<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>log2(level-&gt;dim.i);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;h<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>h0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;fluxes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>3D<sp/>array<sp/>of<sp/>integers<sp/>to<sp/>hold<sp/>the<sp/>MPI<sp/>rank<sp/>of<sp/>the<sp/>corresponding<sp/>box<sp/>and<sp/>initialize<sp/>to<sp/>-1<sp/>(unassigned)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;rank_of_box<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)malloc(level-&gt;boxes_in.i*level-&gt;boxes_in.j*level-&gt;boxes_in.k*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(level-&gt;rank_of_box==NULL)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac0e2e23df625040ded95611ceae98352" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;malloc<sp/>of<sp/>level-&gt;rank_of_box<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(box=0;box&lt;level-&gt;boxes_in.i*level-&gt;boxes_in.j*level-&gt;boxes_in.k;box++){level-&gt;rank_of_box[box]=-1;}<sp/><sp/></highlight><highlight class="comment">//<sp/>-1<sp/>denotes<sp/>that<sp/>there<sp/>is<sp/>no<sp/>actual<sp/>box<sp/>assigned<sp/>to<sp/>this<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>convert<sp/>our<sp/>rank<sp/>distribution<sp/>of<sp/>boxes<sp/>to<sp/>HPGMG&apos;s<sp/>rank_of_box<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>convoluted<sp/>because<sp/>HPGMG<sp/>first<sp/>assigns<sp/>boxes<sp/>to<sp/>ranks,<sp/>and<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lexicographically<sp/>assigns<sp/>the<sp/>coordinates<sp/>of<sp/>each<sp/>box.<sp/>This</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lexicographical<sp/>ordering<sp/>of<sp/>box<sp/>coordinates<sp/>is<sp/>*required*<sp/>in<sp/>order<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>MPI<sp/>communication<sp/>patterns<sp/>in<sp/>HPGMG<sp/>to<sp/>function<sp/>correctly,<sp/>via<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>global_box_id<sp/>variable.<sp/>In<sp/>other<sp/>words,<sp/>HPGMG<sp/>anticipates<sp/>the<sp/>geometric</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>relationship<sp/>between<sp/>boxes<sp/>based<sp/>on<sp/>their<sp/>respective<sp/>values<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>global_box_id,<sp/>and<sp/>routes<sp/>MPI<sp/>traffic<sp/>accordingly.<sp/>However,<sp/>in<sp/>BoxLib</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>box<sp/>ranks<sp/>and<sp/>indices<sp/>are<sp/>not<sp/>necessarily<sp/>in<sp/>this<sp/>order,<sp/>so<sp/>we<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>&quot;fake&quot;<sp/>the<sp/>box<sp/>ordering<sp/>in<sp/>HPGMG<sp/>here<sp/>(even<sp/>though<sp/>the<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>aren&apos;t<sp/>actually<sp/>assigned<sp/>until<sp/>we<sp/>call<sp/>create_vectors())<sp/>in<sp/>order<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>match<sp/>the<sp/>box<sp/>ranks<sp/>between<sp/>BoxLib<sp/>and<sp/>HPGMG.<sp/>This<sp/>whole<sp/>method<sp/>is<sp/>dumb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>deserves<sp/>a<sp/>better<sp/>solution,<sp/>but<sp/>I<sp/>don&apos;t<sp/>know<sp/>a<sp/>better<sp/>way<sp/>to<sp/>do<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_local_boxes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,k;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;level-&gt;boxes_in.k;k++){</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;level-&gt;boxes_in.j;j++){</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;level-&gt;boxes_in.i;i++){</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jStride<sp/>=<sp/>level-&gt;boxes_in.i;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kStride<sp/>=<sp/>level-&gt;boxes_in.i*level-&gt;boxes_in.j;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b=i<sp/>+<sp/>j*jStride<sp/>+<sp/>k*kStride;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>will<sp/>be<sp/>the<sp/>coordinates<sp/>of<sp/>a<sp/>box<sp/>in<sp/>HPGMG.<sp/>These<sp/>are<sp/>also<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>coordinates<sp/>of<sp/>a<sp/>box<sp/>already<sp/>created<sp/>in<sp/>BoxLib.<sp/>Now<sp/>we<sp/>iterate<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>every<sp/>rank&apos;s<sp/>local<sp/>boxes<sp/>until<sp/>we<sp/>find<sp/>the<sp/>matching<sp/>one,<sp/>and<sp/>assign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>rank<sp/>of<sp/>the<sp/>HPGMG<sp/>box<sp/>to<sp/>the<sp/>same<sp/>rank<sp/>in<sp/>BoxLib.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>low_i<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>i*level-&gt;box_dim;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>low_j<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>j*level-&gt;box_dim;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>low_k<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>k*level-&gt;box_dim;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(mf);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>&amp;bx<sp/>=<sp/>mfi.validbox();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*loVect<sp/>=<sp/>bx.<ref refid="classamrex_1_1Box_1a8a029c1d95918fd6e6fe0afb141ed415" kindref="member">loVect</ref>();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Found<sp/>the<sp/>matching<sp/>box!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((low_i<sp/>==<sp/>loVect[0])<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(low_j<sp/>==<sp/>loVect[1])<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(low_k<sp/>==<sp/>loVect[2]))</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_local_boxes++;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level-&gt;rank_of_box[b]<sp/>=<sp/>my_rank;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>tell<sp/>all<sp/>the<sp/>ranks<sp/>what<sp/>each<sp/>other&apos;s<sp/>box<sp/>ranks<sp/>are.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tot_num_boxes<sp/>=<sp/>level-&gt;boxes_in.i<sp/>*<sp/>level-&gt;boxes_in.j<sp/>*<sp/>level-&gt;boxes_in.k;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>all_box_ranks[tot_num_boxes];</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fill_n(all_box_ranks,<sp/>tot_num_boxes,<sp/>1);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Allreduce(level-&gt;rank_of_box,<sp/>all_box_ranks,<sp/>tot_num_boxes,<sp/>MPI_INT,<sp/>MPI_PROD,<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a0f53686fc6a6b7dca69c230fd1336e44" kindref="member">ParallelDescriptor::Communicator</ref>());</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tot_num_boxes;<sp/>++i)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level-&gt;rank_of_box[i]<sp/>=<sp/><ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(all_box_ranks[i]);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>box_ranks(level-&gt;rank_of_box,<sp/>level-&gt;rank_of_box<sp/>+<sp/>tot_num_boxes);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>how<sp/>many<sp/>boxes<sp/>I<sp/>own...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;num_my_boxes=0;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(box=0;box&lt;level-&gt;boxes_in.i*level-&gt;boxes_in.j*level-&gt;boxes_in.k;box++){</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(level-&gt;rank_of_box[box]==level-&gt;my_rank)level-&gt;num_my_boxes++;}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;my_boxes<sp/>=<sp/>(box_type*)malloc(level-&gt;num_my_boxes*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(box_type));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((level-&gt;num_my_boxes&gt;0)&amp;&amp;(level-&gt;my_boxes==NULL))</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac0e2e23df625040ded95611ceae98352" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;malloc<sp/>failed<sp/>-<sp/>create_level/level-&gt;my_boxes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>flattened<sp/>vector<sp/>FP<sp/>data<sp/>and<sp/>create<sp/>pointers...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>())</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Allocating<sp/>vectors...<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>create_vectors<sp/>(level,<sp/>numVectors);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>())</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;done.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>and<sp/>auxilarlly<sp/>data<sp/>structure<sp/>that<sp/>flattens<sp/>boxes<sp/>into<sp/>blocks...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(box=0;box&lt;level-&gt;num_my_boxes;box++){</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockcopy_i<sp/>=<sp/>BLOCKCOPY_TILE_I;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockcopy_j<sp/>=<sp/>BLOCKCOPY_TILE_J;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockcopy_k<sp/>=<sp/>BLOCKCOPY_TILE_K;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>append_block_to_list(&amp;(level-&gt;my_blocks),&amp;(level-&gt;allocated_blocks),&amp;(level-&gt;num_my_blocks),</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>dim.i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>level-&gt;my_boxes[box].dim,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>dim.j<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>level-&gt;my_boxes[box].dim,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>dim.k<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>level-&gt;my_boxes[box].dim,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read.box<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>box,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read.ptr<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>NULL,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read.i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>0,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read.j<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>0,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read.k<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>0,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read.jStride<sp/><sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>level-&gt;my_boxes[box].jStride,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read.kStride<sp/><sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>level-&gt;my_boxes[box].kStride,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read.scale<sp/><sp/><sp/><sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>1,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write.box<sp/><sp/><sp/><sp/><sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>box,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write.ptr<sp/><sp/><sp/><sp/><sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>NULL,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write.i<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>0,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write.j<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>0,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write.k<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>0,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write.jStride<sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>level-&gt;my_boxes[box].jStride,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write.kStride<sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>level-&gt;my_boxes[box].kStride,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write.scale<sp/><sp/><sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>1,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>blockcopy_i<sp/><sp/><sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>blockcopy_i,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>blockcopy_j<sp/><sp/><sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>blockcopy_j,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>blockcopy_k<sp/><sp/><sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>blockcopy_k,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>subtype<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*/</highlight><highlight class="normal"><sp/>0</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>an<sp/>assist<sp/>structure<sp/>for<sp/>Gauss<sp/>Seidel<sp/>Red<sp/>Black<sp/>that<sp/>would<sp/>facilitate<sp/>unrolling<sp/>and<sp/>SIMDization...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;RedBlack_base<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>level-&gt;RedBlack_FP<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(level-&gt;num_my_boxes){</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kStride<sp/>=<sp/>level-&gt;my_boxes[0].kStride;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jStride<sp/>=<sp/>level-&gt;my_boxes[0].jStride;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>level-&gt;RedBlack_base<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)malloc(2*kStride*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)+256);<sp/></highlight><highlight class="comment">//<sp/>used<sp/>for<sp/>free()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>level-&gt;RedBlack_FP<sp/><sp/><sp/>=<sp/>level-&gt;RedBlack_base;<sp/></highlight><highlight class="comment">//<sp/>aligned<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>align<sp/>first<sp/>*non-ghost*<sp/>zone<sp/>element<sp/>to<sp/>a<sp/>64-Byte<sp/>boundary...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>(uint64_t)(level-&gt;RedBlack_FP<sp/>+<sp/>level-&gt;box_ghosts*(1+level-&gt;box_jStride))<sp/>&amp;<sp/>0x3f<sp/>){level-&gt;RedBlack_FP++;}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>RedBlack<sp/>array...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0-level-&gt;box_ghosts;j&lt;level-&gt;box_dim+level-&gt;box_ghosts;j++){</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0-level-&gt;box_ghosts;i&lt;level-&gt;box_dim+level-&gt;box_ghosts;i++){</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ij<sp/>=<sp/>(i+level-&gt;box_ghosts)<sp/>+<sp/>(j+level-&gt;box_ghosts)*jStride;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((i^j^1)&amp;0x1){</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level-&gt;RedBlack_FP[ij<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]=1.0;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level-&gt;RedBlack_FP[ij+kStride]=0.0;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level-&gt;RedBlack_FP[ij<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]=0.0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level-&gt;RedBlack_FP[ij+kStride]=1.0;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>mini<sp/>program<sp/>for<sp/>each<sp/>stencil<sp/>shape<sp/>to<sp/>perform<sp/>a<sp/>ghost<sp/>zone<sp/>exchange...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(shape=0;shape&lt;STENCIL_MAX_SHAPES;shape++)build_exchange_ghosts(<sp/><sp/><sp/><sp/>level,shape);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>mini<sp/>program<sp/>for<sp/>each<sp/>stencil<sp/>shape<sp/>to<sp/>perform<sp/>a<sp/>boundary<sp/>condition...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(shape=0;shape&lt;STENCIL_MAX_SHAPES;shape++)build_boundary_conditions(level,shape);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>duplicate<sp/>the<sp/>parent<sp/>communicator<sp/>to<sp/>be<sp/>the<sp/>communicator<sp/>for<sp/>each<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>BL_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>())</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Duplicating<sp/>MPI<sp/>communicator...<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time_start<sp/>=<sp/>MPI_Wtime();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Comm_dup(<ref refid="namespaceamrex_1_1ParallelDescriptor_1a0f53686fc6a6b7dca69c230fd1336e44" kindref="member">ParallelDescriptor::Communicator</ref>(),&amp;level-&gt;MPI_COMM_ALLREDUCE);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time_end<sp/>=<sp/>MPI_Wtime();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time_in_comm_dup<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time_in_comm_dup_send<sp/>=<sp/>time_end-time_start;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Allreduce(&amp;time_in_comm_dup_send,&amp;time_in_comm_dup,1,MPI_DOUBLE,MPI_MAX,<ref refid="namespaceamrex_1_1ParallelDescriptor_1a0f53686fc6a6b7dca69c230fd1336e44" kindref="member">ParallelDescriptor::Communicator</ref>());</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>())</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;done<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>time_in_comm_dup<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>seconds)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="comment">/*<sp/>BL_USE_MPI<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>report<sp/>on<sp/>potential<sp/>load<sp/>imbalance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BoxesPerProcess<sp/>=<sp/>level-&gt;num_my_boxes;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>BL_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BoxesPerProcessSend<sp/>=<sp/>level-&gt;num_my_boxes;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Allreduce(&amp;BoxesPerProcessSend,&amp;BoxesPerProcess,1,MPI_INT,MPI_MAX,<ref refid="namespaceamrex_1_1ParallelDescriptor_1a0f53686fc6a6b7dca69c230fd1336e44" kindref="member">ParallelDescriptor::Communicator</ref>());</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="comment">/*<sp/>BL_USE_MPI<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1ac7fb3467af4aabf15e61cb9c27e916d9" kindref="member">ParallelDescriptor::IOProcessor</ref>())</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Calculating<sp/>boxes<sp/>per<sp/>process...<sp/>target=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(double)TotalBoxes/(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)num_ranks<sp/>&lt;&lt;<sp/>&quot;,<sp/><ref refid="namespaceamrex_1aaadb66ad08e0a33ec413e2ce8b687414" kindref="member">max</ref>=&quot;<sp/>&lt;&lt;<sp/>BoxesPerProcess<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetupHPGMGCoefficients(const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>&amp;<sp/>alpha,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>&amp;<sp/>beta_cc,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level_type*<sp/>level)</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>set<sp/>the<sp/>alphas<sp/>(cell-centered).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(alpha);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>&amp;bx<sp/>=<sp/>mfi.validbox();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*loVect<sp/>=<sp/>bx.<ref refid="classamrex_1_1Box_1a8a029c1d95918fd6e6fe0afb141ed415" kindref="member">loVect</ref>();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>box;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(box<sp/>=<sp/>0;<sp/>box<sp/>&lt;<sp/>level-&gt;num_my_boxes;<sp/>++box)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((level-&gt;my_boxes[box].low.i<sp/>==<sp/>loVect[0])<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(level-&gt;my_boxes[box].low.j<sp/>==<sp/>loVect[1])<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(level-&gt;my_boxes[box].low.k<sp/>==<sp/>loVect[2]))</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac0e2e23df625040ded95611ceae98352" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>matching<sp/>boxes<sp/>between<sp/>HPGMG<sp/>and<sp/>BoxLib&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>&amp;fabbox<sp/>=<sp/>mfi.fabbox();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*alpha_data_ptr<sp/>=<sp/>alpha[mfi].dataPtr();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,k;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jStride<sp/>=<sp/>level-&gt;my_boxes[box].jStride;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kStride<sp/>=<sp/>level-&gt;my_boxes[box].kStride;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>ghosts<sp/>=<sp/>level-&gt;my_boxes[box].ghosts;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>dim_i<sp/>=<sp/>level-&gt;my_boxes[box].dim;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>dim_j<sp/>=<sp/>level-&gt;my_boxes[box].dim;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>dim_k<sp/>=<sp/>level-&gt;my_boxes[box].dim;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BL_jStride<sp/>=<sp/>fabbox.<ref refid="classamrex_1_1Box_1a6a6733882a425dd6a062cce99c224421" kindref="member">length</ref>(0);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BL_kStride<sp/>=<sp/>fabbox.<ref refid="classamrex_1_1Box_1a6a6733882a425dd6a062cce99c224421" kindref="member">length</ref>(0)<sp/>*<sp/>fabbox.<ref refid="classamrex_1_1Box_1a6a6733882a425dd6a062cce99c224421" kindref="member">length</ref>(1);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BoxLib_ghosts<sp/>=<sp/>alpha.nGrow();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>private(k,j,i)<sp/>collapse(3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;dim_k;k++){</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;dim_j;j++){</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;dim_i;i++){</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ijk_HPGMG<sp/>=<sp/>(i+ghosts)<sp/>+<sp/>(j+ghosts)*jStride<sp/>+<sp/>(k+ghosts)*kStride;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ijk_BoxLib<sp/>=<sp/>(i+BoxLib_ghosts)<sp/>+<sp/>(j+BoxLib_ghosts)*BL_jStride<sp/>+<sp/>(k+BoxLib_ghosts)*BL_kStride;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level-&gt;my_boxes[box].vectors[VECTOR_ALPHA][ijk_HPGMG]<sp/>=<sp/>alpha_data_ptr[ijk_BoxLib];</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>convert<sp/>the<sp/>cell-centered<sp/>beta<sp/>to<sp/>faces.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(beta_cc);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>&amp;bx<sp/>=<sp/>mfi.validbox();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*loVect<sp/>=<sp/>bx.<ref refid="classamrex_1_1Box_1a8a029c1d95918fd6e6fe0afb141ed415" kindref="member">loVect</ref>();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>box;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(box<sp/>=<sp/>0;<sp/>box<sp/>&lt;<sp/>level-&gt;num_my_boxes;<sp/>++box)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((level-&gt;my_boxes[box].low.i<sp/>==<sp/>loVect[0])<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(level-&gt;my_boxes[box].low.j<sp/>==<sp/>loVect[1])<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(level-&gt;my_boxes[box].low.k<sp/>==<sp/>loVect[2]))</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac0e2e23df625040ded95611ceae98352" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>matching<sp/>boxes<sp/>between<sp/>HPGMG<sp/>and<sp/>BoxLib&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>&amp;fabbox<sp/>=<sp/>mfi.fabbox();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*beta_data_ptr<sp/>=<sp/>beta_cc[mfi].dataPtr();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,k;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jStride<sp/>=<sp/>level-&gt;my_boxes[box].jStride;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kStride<sp/>=<sp/>level-&gt;my_boxes[box].kStride;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>ghosts<sp/>=<sp/>level-&gt;my_boxes[box].ghosts;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>dim_i<sp/>=<sp/>level-&gt;my_boxes[box].dim;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>dim_j<sp/>=<sp/>level-&gt;my_boxes[box].dim;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>dim_k<sp/>=<sp/>level-&gt;my_boxes[box].dim;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BL_jStride<sp/>=<sp/>fabbox.<ref refid="classamrex_1_1Box_1a6a6733882a425dd6a062cce99c224421" kindref="member">length</ref>(0);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BL_kStride<sp/>=<sp/>fabbox.<ref refid="classamrex_1_1Box_1a6a6733882a425dd6a062cce99c224421" kindref="member">length</ref>(0)<sp/>*<sp/>fabbox.<ref refid="classamrex_1_1Box_1a6a6733882a425dd6a062cce99c224421" kindref="member">length</ref>(1);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BoxLib_ghosts<sp/>=<sp/>beta_cc.nGrow();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>private(k,j,i)<sp/>collapse(3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;=dim_k;k++){<sp/></highlight><highlight class="comment">//<sp/>include<sp/>high<sp/>face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;=dim_j;j++){<sp/></highlight><highlight class="comment">//<sp/>include<sp/>high<sp/>face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;=dim_i;i++){<sp/></highlight><highlight class="comment">//<sp/>include<sp/>high<sp/>face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ijk_HPGMG<sp/>=<sp/>(i+ghosts)<sp/>+<sp/>(j+ghosts)*jStride<sp/>+<sp/>(k+ghosts)*kStride;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ijk_BoxLib<sp/><sp/><sp/>=<sp/>(i<sp/><sp/>+BoxLib_ghosts)<sp/>+<sp/>(j<sp/><sp/>+BoxLib_ghosts)*BL_jStride<sp/>+<sp/>(k<sp/><sp/>+BoxLib_ghosts)*BL_kStride;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>im1jk_BoxLib<sp/>=<sp/>(i-1+BoxLib_ghosts)<sp/>+<sp/>(j<sp/><sp/>+BoxLib_ghosts)*BL_jStride<sp/>+<sp/>(k<sp/><sp/>+BoxLib_ghosts)*BL_kStride;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ijm1k_BoxLib<sp/>=<sp/>(i<sp/><sp/>+BoxLib_ghosts)<sp/>+<sp/>(j-1+BoxLib_ghosts)*BL_jStride<sp/>+<sp/>(k<sp/><sp/>+BoxLib_ghosts)*BL_kStride;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ijkm1_BoxLib<sp/>=<sp/>(i<sp/><sp/>+BoxLib_ghosts)<sp/>+<sp/>(j<sp/><sp/>+BoxLib_ghosts)*BL_jStride<sp/>+<sp/>(k-1+BoxLib_ghosts)*BL_kStride;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level-&gt;my_boxes[box].vectors[VECTOR_BETA_I][ijk_HPGMG]<sp/>=<sp/>0.5<sp/>*<sp/>(beta_data_ptr[ijk_BoxLib]<sp/>+<sp/>beta_data_ptr[im1jk_BoxLib]);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level-&gt;my_boxes[box].vectors[VECTOR_BETA_J][ijk_HPGMG]<sp/>=<sp/>0.5<sp/>*<sp/>(beta_data_ptr[ijk_BoxLib]<sp/>+<sp/>beta_data_ptr[ijm1k_BoxLib]);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level-&gt;my_boxes[box].vectors[VECTOR_BETA_K][ijk_HPGMG]<sp/>=<sp/>0.5<sp/>*<sp/>(beta_data_ptr[ijk_BoxLib]<sp/>+<sp/>beta_data_ptr[ijkm1_BoxLib]);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConvertToHPGMGLevel<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>&amp;<sp/>mf,</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_cell,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_grid_size,</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level_type*<sp/>level,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>component_id)</highlight></codeline>
<codeline lineno="408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(mf);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>&amp;bx<sp/>=<sp/>mfi.validbox();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>local<sp/>box<sp/>indices<sp/>are<sp/>ordered<sp/>differently<sp/>in<sp/>HPGMG<sp/>and<sp/>BoxLib.<sp/>So</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>a<sp/>simple<sp/>(but<sp/>SLOW)<sp/>hack,<sp/>we<sp/>just<sp/>find<sp/>the<sp/>boxes<sp/>with<sp/>matching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lower<sp/>indices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>make<sp/>this<sp/>box<sp/>matching<sp/>less<sp/>hacky</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*loVect<sp/>=<sp/>bx.<ref refid="classamrex_1_1Box_1a8a029c1d95918fd6e6fe0afb141ed415" kindref="member">loVect</ref>();</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>box;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(box<sp/>=<sp/>0;<sp/>box<sp/>&lt;<sp/>level-&gt;num_my_boxes;<sp/>++box)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((level-&gt;my_boxes[box].low.i<sp/>==<sp/>loVect[0])<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(level-&gt;my_boxes[box].low.j<sp/>==<sp/>loVect[1])<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(level-&gt;my_boxes[box].low.k<sp/>==<sp/>loVect[2]))</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac0e2e23df625040ded95611ceae98352" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>find<sp/>matching<sp/>boxes<sp/>between<sp/>HPGMG<sp/>and<sp/>BoxLib&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>&amp;fabbox<sp/>=<sp/>mfi.fabbox();</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BL_jStride<sp/>=<sp/>fabbox.<ref refid="classamrex_1_1Box_1a6a6733882a425dd6a062cce99c224421" kindref="member">length</ref>(0);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BL_kStride<sp/>=<sp/>fabbox.<ref refid="classamrex_1_1Box_1a6a6733882a425dd6a062cce99c224421" kindref="member">length</ref>(0)<sp/>*<sp/>fabbox.<ref refid="classamrex_1_1Box_1a6a6733882a425dd6a062cce99c224421" kindref="member">length</ref>(1);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*fab_data<sp/>=<sp/>mf[mfi].dataPtr();</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j,k;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jStride<sp/>=<sp/>level-&gt;my_boxes[box].jStride;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kStride<sp/>=<sp/>level-&gt;my_boxes[box].kStride;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>ghosts<sp/>=<sp/>level-&gt;my_boxes[box].ghosts;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>dim_i<sp/>=<sp/>level-&gt;my_boxes[box].dim;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>dim_j<sp/>=<sp/>level-&gt;my_boxes[box].dim;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>dim_k<sp/>=<sp/>level-&gt;my_boxes[box].dim;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BoxLib_ghosts<sp/>=<sp/>mf.<ref refid="classamrex_1_1FabArrayBase_1a92cef599b0ae34401a5463ec6fddc606" kindref="member">nGrow</ref>();</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>private(k,j,i)<sp/>collapse(3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;dim_k;k++){</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;dim_j;j++){</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;dim_i;i++){</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>HPGMG<sp/>strides<sp/>are<sp/>padded<sp/>to<sp/>align<sp/>memory<sp/>and<sp/>encourage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SIMD-ization,<sp/>so<sp/>they<sp/>are<sp/>different<sp/>than<sp/>the<sp/>BoxLib<sp/>strides.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ijk_HPGMG<sp/>=<sp/>(i+ghosts)<sp/>+<sp/>(j+ghosts)*jStride<sp/>+<sp/>(k+ghosts)*kStride;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ijk_BoxLib<sp/>=<sp/>(i+BoxLib_ghosts)<sp/>+<sp/>(j+BoxLib_ghosts)*BL_jStride<sp/>+<sp/>(k+BoxLib_ghosts)*BL_kStride;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>level-&gt;my_boxes[box].vectors[component_id][ijk_HPGMG]<sp/>=<sp/>fab_data[ijk_BoxLib];</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConvertFromHPGMGLevel(<ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>&amp;<sp/>mf,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>level_type*<sp/>level,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>component_id)</highlight></codeline>
<codeline lineno="473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(mf);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>&amp;bx<sp/>=<sp/>mfi.validbox();</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*fab_data<sp/>=<sp/>mf[mfi].dataPtr();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>find<sp/>the<sp/>HPGMG<sp/>box<sp/>corresponding<sp/>to<sp/>this<sp/>BoxLib<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*loVect<sp/>=<sp/>bx.<ref refid="classamrex_1_1Box_1a8a029c1d95918fd6e6fe0afb141ed415" kindref="member">loVect</ref>();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>box;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(box<sp/>=<sp/>0;<sp/>box<sp/>&lt;<sp/>level-&gt;num_my_boxes;<sp/>++box)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((level-&gt;my_boxes[box].low.i<sp/>==<sp/>loVect[0])<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(level-&gt;my_boxes[box].low.j<sp/>==<sp/>loVect[1])<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(level-&gt;my_boxes[box].low.k<sp/>==<sp/>loVect[2]))</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>&amp;fabbox<sp/>=<sp/>mfi.fabbox();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Found<sp/>the<sp/>matching<sp/>boxes,<sp/>now<sp/>fill<sp/>the<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim_i<sp/>=<sp/>level-&gt;my_boxes[box].dim;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim_j<sp/>=<sp/>level-&gt;my_boxes[box].dim;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim_k<sp/>=<sp/>level-&gt;my_boxes[box].dim;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ghosts<sp/>=<sp/>level-&gt;my_boxes[box].ghosts;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jStride<sp/>=<sp/>level-&gt;my_boxes[box].jStride;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kStride<sp/>=<sp/>level-&gt;my_boxes[box].kStride;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BoxLib_ghosts<sp/>=<sp/>mf.<ref refid="classamrex_1_1FabArrayBase_1a92cef599b0ae34401a5463ec6fddc606" kindref="member">nGrow</ref>();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>k;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>_OPENMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for<sp/>private(k,j,i)<sp/>collapse(3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;dim_k;k++){</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;dim_j;j++){</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;dim_i;i++){</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ijk_HPGMG<sp/>=<sp/>(i+ghosts)<sp/>+<sp/>(j+ghosts)*jStride<sp/>+<sp/>(k+ghosts)*kStride;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WARNING:<sp/>this<sp/>indexing<sp/>stride<sp/>works<sp/>for<sp/>FABs<sp/>*ONLY*<sp/>if<sp/>we<sp/>have<sp/>ONE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>component<sp/>in<sp/>the<sp/>FAB.<sp/>If<sp/>we<sp/>have<sp/>more<sp/>than<sp/>one<sp/>we<sp/>have<sp/>to<sp/>stride</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>over<sp/>the<sp/>components<sp/>in<sp/>the<sp/>outermost<sp/>loop<sp/>(outside<sp/>of<sp/>k).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BL_jStride<sp/>=<sp/>fabbox.<ref refid="classamrex_1_1Box_1a6a6733882a425dd6a062cce99c224421" kindref="member">length</ref>(0);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BL_kStride<sp/>=<sp/>fabbox.<ref refid="classamrex_1_1Box_1a6a6733882a425dd6a062cce99c224421" kindref="member">length</ref>(0)<sp/>*<sp/>fabbox.<ref refid="classamrex_1_1Box_1a6a6733882a425dd6a062cce99c224421" kindref="member">length</ref>(1);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ijk_BoxLib<sp/>=<sp/>(i+BoxLib_ghosts)<sp/>+<sp/>(j+BoxLib_ghosts)*BL_jStride<sp/>+<sp/>(k+BoxLib_ghosts)*BL_kStride;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fab_data[ijk_BoxLib]<sp/>=<sp/>level-&gt;my_boxes[box].vectors[VECTOR_U][ijk_HPGMG];</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}}}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>USEHPGMG<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/hpgmg/BL_HPGMG.cpp"/>
  </compounddef>
</doxygen>
