<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structamrex_1_1ForkJoin_1_1MFFork" kind="struct" language="C++" prot="private">
    <compoundname>amrex::ForkJoin::MFFork</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1ForkJoin_1_1MFFork_1af278943e6089937c826f0bd0967a264f" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *</type>
        <definition>MultiFab* amrex::ForkJoin::MFFork::orig</definition>
        <argsstring></argsstring>
        <name>orig</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" line="154" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ForkJoin_1_1MFFork_1a922cc68b9dce362ee62f0d724dede442" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1ForkJoin_1a72de18d1d16fadce31b830834ffff282" kindref="member">Strategy</ref></type>
        <definition>Strategy amrex::ForkJoin::MFFork::strategy</definition>
        <argsstring></argsstring>
        <name>strategy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" line="155" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ForkJoin_1_1MFFork_1adab1f2dcfd2d52eebf3c6727ef5e37d7" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1ForkJoin_1a3acf0d91b32d1d08dbe32046028f1466" kindref="member">Intent</ref></type>
        <definition>Intent amrex::ForkJoin::MFFork::intent</definition>
        <argsstring></argsstring>
        <name>intent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" line="156" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ForkJoin_1_1MFFork_1aab173e1a49428a72e1099f8925dfeb56" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::ForkJoin::MFFork::owner_task</definition>
        <argsstring></argsstring>
        <name>owner_task</name>
        <briefdescription>
<para>only used if strategy == single or duplicate </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" line="157" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ForkJoin_1_1MFFork_1ab30d7bacb605f55a7714f002a92f2cf6" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></type>
        <definition>IntVect amrex::ForkJoin::MFFork::ngrow</definition>
        <argsstring></argsstring>
        <name>ngrow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" line="158" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ForkJoin_1_1MFFork_1a10f36654d975cbc986561d7c1931a02b" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1ForkJoin_1_1ComponentSet" kindref="compound">ComponentSet</ref> &gt;</type>
        <definition>Vector&lt;ComponentSet&gt; amrex::ForkJoin::MFFork::comp_split</definition>
        <argsstring></argsstring>
        <name>comp_split</name>
        <briefdescription>
<para>if strategy == split, how to split components to tasks </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" line="159" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ForkJoin_1_1MFFork_1a335de4835763f4875e6c6089f5e739c9" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &gt;</type>
        <definition>Vector&lt;MultiFab&gt; amrex::ForkJoin::MFFork::forked</definition>
        <argsstring></argsstring>
        <name>forked</name>
        <briefdescription>
<para>holds new multifab for each task in fork </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" line="160" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" bodystart="160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1ForkJoin_1_1MFFork_1a34adaed2dce7ad0a962488bee88e6589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ForkJoin::MFFork::MFFork</definition>
        <argsstring>()=default</argsstring>
        <name>MFFork</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ForkJoin_1_1MFFork_1a963d59d69d1624a4fc0bc1806a6f8588" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ForkJoin::MFFork::MFFork</definition>
        <argsstring>(const MFFork &amp;)=delete</argsstring>
        <name>MFFork</name>
        <param>
          <type>const <ref refid="structamrex_1_1ForkJoin_1_1MFFork" kindref="compound">MFFork</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ForkJoin_1_1MFFork_1ad06d1e92d8a2216c6a39393c6975f0ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structamrex_1_1ForkJoin_1_1MFFork" kindref="compound">MFFork</ref> &amp;</type>
        <definition>MFFork&amp; amrex::ForkJoin::MFFork::operator=</definition>
        <argsstring>(const MFFork &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structamrex_1_1ForkJoin_1_1MFFork" kindref="compound">MFFork</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ForkJoin_1_1MFFork_1a9f9fa0710f16b9dff7c3002b6b23744c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ForkJoin::MFFork::MFFork</definition>
        <argsstring>(MFFork &amp;&amp;)=default</argsstring>
        <name>MFFork</name>
        <param>
          <type><ref refid="structamrex_1_1ForkJoin_1_1MFFork" kindref="compound">MFFork</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ForkJoin_1_1MFFork_1a98a485f718830f05c4833b82e0749f2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structamrex_1_1ForkJoin_1_1MFFork" kindref="compound">MFFork</ref> &amp;</type>
        <definition>MFFork&amp; amrex::ForkJoin::MFFork::operator=</definition>
        <argsstring>(MFFork &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structamrex_1_1ForkJoin_1_1MFFork" kindref="compound">MFFork</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ForkJoin_1_1MFFork_1a67f00ed8c48e03e4b18dcecaa19b14d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::ForkJoin::MFFork::MFFork</definition>
        <argsstring>(MultiFab *omf, Strategy s, Intent i, int own, const IntVect &amp;ng, Vector&lt; ComponentSet &gt; cs)</argsstring>
        <name>MFFork</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *</type>
          <declname>omf</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1ForkJoin_1a72de18d1d16fadce31b830834ffff282" kindref="member">Strategy</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1ForkJoin_1a3acf0d91b32d1d08dbe32046028f1466" kindref="member">Intent</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>own</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>ng</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1ForkJoin_1_1ComponentSet" kindref="compound">ComponentSet</ref> &gt;</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" line="167" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ForkJoin_1_1MFFork_1acc55015e88c7d5c4997ed560e7afc7ba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::ForkJoin::MFFork::empty</definition>
        <argsstring>() const </argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" line="172" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" bodystart="172" bodyend="172"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4266">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
      </node>
      <node id="4248">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="4249" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="4251">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="4244">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="4244" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="4267">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4268" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4261">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
      </node>
      <node id="4252">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4253" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4249">
        <label>string</label>
      </node>
      <node id="4269">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="4244" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="4263">
        <label>std::vector&lt; char *, std::allocator&lt; char * &gt; &gt;</label>
      </node>
      <node id="4241">
        <label>amrex::ForkJoin::MFFork</label>
        <link refid="structamrex_1_1ForkJoin_1_1MFFork"/>
        <childnode refid="4242" relation="usage">
          <edgelabel>comp_split</edgelabel>
        </childnode>
        <childnode refid="4244" relation="usage">
          <edgelabel>ngrow</edgelabel>
        </childnode>
        <childnode refid="4245" relation="usage">
          <edgelabel>orig</edgelabel>
        </childnode>
        <childnode refid="4270" relation="usage">
          <edgelabel>forked</edgelabel>
        </childnode>
      </node>
      <node id="4262">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4263" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4270">
        <label>amrex::Vector&lt; amrex::MultiFab &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4271" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4264">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="4268">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
      </node>
      <node id="4253">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="4258">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="4244" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="4259" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="4256">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="4257" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="4265">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4266" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4259">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="4257">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="4252" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="4260">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4261" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4250">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
      </node>
      <node id="4243">
        <label>std::vector&lt; amrex::ForkJoin::ComponentSet, std::allocator&lt; amrex::ForkJoin::ComponentSet &gt; &gt;</label>
      </node>
      <node id="4254">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="4255" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="4256" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="4245">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="4246" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4271">
        <label>std::vector&lt; amrex::MultiFab, std::allocator&lt; amrex::MultiFab &gt; &gt;</label>
      </node>
      <node id="4242">
        <label>amrex::Vector&lt; amrex::ForkJoin::ComponentSet &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4243" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4246">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="4247" relation="public-inheritance">
        </childnode>
        <childnode refid="4244" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="4252" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="4260" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="4262" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="4264" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="4265" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="4267" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="4269" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="4255">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
      </node>
      <node id="4247">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="4248" relation="usage">
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
        </childnode>
        <childnode refid="4250" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="4244" relation="usage">
          <edgelabel>n_grow</edgelabel>
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>mfghostiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="4251" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="4252" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="4254" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="4258" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" line="153" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" bodystart="152" bodyend="173"/>
    <listofallmembers>
      <member refid="structamrex_1_1ForkJoin_1_1MFFork_1a10f36654d975cbc986561d7c1931a02b" prot="public" virt="non-virtual"><scope>amrex::ForkJoin::MFFork</scope><name>comp_split</name></member>
      <member refid="structamrex_1_1ForkJoin_1_1MFFork_1acc55015e88c7d5c4997ed560e7afc7ba" prot="public" virt="non-virtual"><scope>amrex::ForkJoin::MFFork</scope><name>empty</name></member>
      <member refid="structamrex_1_1ForkJoin_1_1MFFork_1a335de4835763f4875e6c6089f5e739c9" prot="public" virt="non-virtual"><scope>amrex::ForkJoin::MFFork</scope><name>forked</name></member>
      <member refid="structamrex_1_1ForkJoin_1_1MFFork_1adab1f2dcfd2d52eebf3c6727ef5e37d7" prot="public" virt="non-virtual"><scope>amrex::ForkJoin::MFFork</scope><name>intent</name></member>
      <member refid="structamrex_1_1ForkJoin_1_1MFFork_1a34adaed2dce7ad0a962488bee88e6589" prot="public" virt="non-virtual"><scope>amrex::ForkJoin::MFFork</scope><name>MFFork</name></member>
      <member refid="structamrex_1_1ForkJoin_1_1MFFork_1a963d59d69d1624a4fc0bc1806a6f8588" prot="public" virt="non-virtual"><scope>amrex::ForkJoin::MFFork</scope><name>MFFork</name></member>
      <member refid="structamrex_1_1ForkJoin_1_1MFFork_1a9f9fa0710f16b9dff7c3002b6b23744c" prot="public" virt="non-virtual"><scope>amrex::ForkJoin::MFFork</scope><name>MFFork</name></member>
      <member refid="structamrex_1_1ForkJoin_1_1MFFork_1a67f00ed8c48e03e4b18dcecaa19b14d1" prot="public" virt="non-virtual"><scope>amrex::ForkJoin::MFFork</scope><name>MFFork</name></member>
      <member refid="structamrex_1_1ForkJoin_1_1MFFork_1ab30d7bacb605f55a7714f002a92f2cf6" prot="public" virt="non-virtual"><scope>amrex::ForkJoin::MFFork</scope><name>ngrow</name></member>
      <member refid="structamrex_1_1ForkJoin_1_1MFFork_1ad06d1e92d8a2216c6a39393c6975f0ed" prot="public" virt="non-virtual"><scope>amrex::ForkJoin::MFFork</scope><name>operator=</name></member>
      <member refid="structamrex_1_1ForkJoin_1_1MFFork_1a98a485f718830f05c4833b82e0749f2e" prot="public" virt="non-virtual"><scope>amrex::ForkJoin::MFFork</scope><name>operator=</name></member>
      <member refid="structamrex_1_1ForkJoin_1_1MFFork_1af278943e6089937c826f0bd0967a264f" prot="public" virt="non-virtual"><scope>amrex::ForkJoin::MFFork</scope><name>orig</name></member>
      <member refid="structamrex_1_1ForkJoin_1_1MFFork_1aab173e1a49428a72e1099f8925dfeb56" prot="public" virt="non-virtual"><scope>amrex::ForkJoin::MFFork</scope><name>owner_task</name></member>
      <member refid="structamrex_1_1ForkJoin_1_1MFFork_1a922cc68b9dce362ee62f0d724dede442" prot="public" virt="non-virtual"><scope>amrex::ForkJoin::MFFork</scope><name>strategy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
