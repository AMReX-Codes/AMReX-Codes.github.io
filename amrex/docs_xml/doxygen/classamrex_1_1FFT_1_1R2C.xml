<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1FFT_1_1R2C" kind="class" language="C++" prot="public">
    <compoundname>amrex::FFT::R2C</compoundname>
    <includes refid="AMReX__FFT__R2C_8H" local="no">AMReX_FFT_R2C.H</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
        <defval>Real</defval>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0" kindref="member">FFT::Direction</ref></type>
        <declname>D</declname>
        <defname>D</defname>
        <defval><ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0af6cb3e816496528d4187db53bc66567f" kindref="member">FFT::Direction::both</ref></defval>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1_1FFT_1a5e1db35696b96f6c8dcd2308027ce845" kindref="member">FFT::DomainStrategy</ref></type>
        <defval><ref refid="namespaceamrex_1_1FFT_1a5e1db35696b96f6c8dcd2308027ce845ae52ce0141772cd5abea43f36ab85f387" kindref="member">FFT::DomainStrategy::slab</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1FFT_1_1R2C_1aa078479f5563108a286fc9f2c34589cb" prot="public" static="no">
        <type>std::conditional_t&lt; std::is_same_v&lt; T, Real &gt;, <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>, <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt; T &gt; &gt; &gt;</type>
        <definition>using amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::MF =  std::conditional_t&lt;std::is_same_v&lt;T,Real&gt;, MultiFab, FabArray&lt;BaseFab&lt;T&gt; &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>MF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="36" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1FFT_1_1R2C_1ad56d4d40fdb0248b81b76e3a7658e18b" prot="public" static="no">
        <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt; <ref refid="structamrex_1_1GpuComplex" kindref="compound">GpuComplex</ref>&lt; T &gt; &gt; &gt;</type>
        <definition>using amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::cMF =  FabArray&lt;BaseFab&lt;GpuComplex&lt;T&gt; &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>cMF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="38" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classamrex_1_1FFT_1_1R2C_1afd3d509858e88e5f3a1efe7cb494baf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class OpenBCSolver</definition>
        <argsstring></argsstring>
        <name>OpenBCSolver</name>
        <param>
          <type><ref refid="classamrex_1_1FFT_1_1OpenBCSolver" kindref="compound">OpenBCSolver</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="40" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a3e8a5fa22798bc7055e23c03d8ad9e58" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1FFT_1_1Plan" kindref="compound">Plan</ref>&lt; T &gt;</type>
        <definition>Plan&lt;T&gt; amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_fft_fwd_x</definition>
        <argsstring></argsstring>
        <name>m_fft_fwd_x</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="175" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a56cfcb34e692ac749aa2afb45c54873c" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1FFT_1_1Plan" kindref="compound">Plan</ref>&lt; T &gt;</type>
        <definition>Plan&lt;T&gt; amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_fft_bwd_x</definition>
        <argsstring></argsstring>
        <name>m_fft_bwd_x</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="176" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1aa265126e8170d6036d1b58826a975d95" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1FFT_1_1Plan" kindref="compound">Plan</ref>&lt; T &gt;</type>
        <definition>Plan&lt;T&gt; amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_fft_fwd_y</definition>
        <argsstring></argsstring>
        <name>m_fft_fwd_y</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="177" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a18c21ee0e1f5fd623815cd8827bac072" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1FFT_1_1Plan" kindref="compound">Plan</ref>&lt; T &gt;</type>
        <definition>Plan&lt;T&gt; amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_fft_bwd_y</definition>
        <argsstring></argsstring>
        <name>m_fft_bwd_y</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="178" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1ac75a018d4bd06f5592003700945af2f2" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1FFT_1_1Plan" kindref="compound">Plan</ref>&lt; T &gt;</type>
        <definition>Plan&lt;T&gt; amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_fft_fwd_z</definition>
        <argsstring></argsstring>
        <name>m_fft_fwd_z</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="179" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a6b7ffff2c4ecb6d1b5e86fc5b19cd10f" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1FFT_1_1Plan" kindref="compound">Plan</ref>&lt; T &gt;</type>
        <definition>Plan&lt;T&gt; amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_fft_bwd_z</definition>
        <argsstring></argsstring>
        <name>m_fft_bwd_z</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="180" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a373893ae1d4b5fcb263b5dfe46be9e68" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1FFT_1_1Plan" kindref="compound">Plan</ref>&lt; T &gt;</type>
        <definition>Plan&lt;T&gt; amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_fft_fwd_x_half</definition>
        <argsstring></argsstring>
        <name>m_fft_fwd_x_half</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="181" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a732a438db3b92c9118bfb1492b960c7a" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1FFT_1_1Plan" kindref="compound">Plan</ref>&lt; T &gt;</type>
        <definition>Plan&lt;T&gt; amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_fft_bwd_x_half</definition>
        <argsstring></argsstring>
        <name>m_fft_bwd_x_half</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="182" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a4e458acb1274d2fc4a8db2d1a7c544b1" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData" kindref="compound">MultiBlockCommMetaData</ref> &gt;</type>
        <definition>std::unique_ptr&lt;MultiBlockCommMetaData&gt; amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_cmd_x2y</definition>
        <argsstring></argsstring>
        <name>m_cmd_x2y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="187" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1aa480de56fa85818fe4e644e37c1c27f5" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData" kindref="compound">MultiBlockCommMetaData</ref> &gt;</type>
        <definition>std::unique_ptr&lt;MultiBlockCommMetaData&gt; amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_cmd_y2x</definition>
        <argsstring></argsstring>
        <name>m_cmd_y2x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="188" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a976332adaab397631e96f7f279ea4064" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData" kindref="compound">MultiBlockCommMetaData</ref> &gt;</type>
        <definition>std::unique_ptr&lt;MultiBlockCommMetaData&gt; amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_cmd_y2z</definition>
        <argsstring></argsstring>
        <name>m_cmd_y2z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="189" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a54542dbdd142352d554f0314947c8ecf" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData" kindref="compound">MultiBlockCommMetaData</ref> &gt;</type>
        <definition>std::unique_ptr&lt;MultiBlockCommMetaData&gt; amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_cmd_z2y</definition>
        <argsstring></argsstring>
        <name>m_cmd_z2y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="190" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1af44d954790f7199a839117d19f9c59a7" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData" kindref="compound">MultiBlockCommMetaData</ref> &gt;</type>
        <definition>std::unique_ptr&lt;MultiBlockCommMetaData&gt; amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_cmd_x2z</definition>
        <argsstring></argsstring>
        <name>m_cmd_x2z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="191" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a9c45539a48cc18ef08c9bf2c75b5bc5e" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData" kindref="compound">MultiBlockCommMetaData</ref> &gt;</type>
        <definition>std::unique_ptr&lt;MultiBlockCommMetaData&gt; amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_cmd_z2x</definition>
        <argsstring></argsstring>
        <name>m_cmd_z2x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="192" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a0d92849b173f91f8149dbdaaa887cd10" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData" kindref="compound">MultiBlockCommMetaData</ref> &gt;</type>
        <definition>std::unique_ptr&lt;MultiBlockCommMetaData&gt; amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_cmd_x2z_half</definition>
        <argsstring></argsstring>
        <name>m_cmd_x2z_half</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="193" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a64d56c55c24e1f8ed26f3deb5bf4207a" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structamrex_1_1NonLocalBC_1_1MultiBlockCommMetaData" kindref="compound">MultiBlockCommMetaData</ref> &gt;</type>
        <definition>std::unique_ptr&lt;MultiBlockCommMetaData&gt; amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_cmd_z2x_half</definition>
        <argsstring></argsstring>
        <name>m_cmd_z2x_half</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="194" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a13a17b3574521d8bba67a1f96d0d3834" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1FFT_1_1Swap01" kindref="compound">Swap01</ref></type>
        <definition>Swap01 amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_dtos_x2y</definition>
        <argsstring></argsstring>
        <name>m_dtos_x2y</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="195" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1ae5725df08a907d5837a6e38b285edac2" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1FFT_1_1Swap01" kindref="compound">Swap01</ref></type>
        <definition>Swap01 amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_dtos_y2x</definition>
        <argsstring></argsstring>
        <name>m_dtos_y2x</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="196" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a4a5d878dde86135d2dfc69795e58a9b2" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1FFT_1_1Swap02" kindref="compound">Swap02</ref></type>
        <definition>Swap02 amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_dtos_y2z</definition>
        <argsstring></argsstring>
        <name>m_dtos_y2z</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="197" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1acbf7f80d9b889ecc188c910634bb85f0" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1FFT_1_1Swap02" kindref="compound">Swap02</ref></type>
        <definition>Swap02 amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_dtos_z2y</definition>
        <argsstring></argsstring>
        <name>m_dtos_z2y</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="198" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a0b640983961d6ee3de50af47956bd472" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1FFT_1_1RotateFwd" kindref="compound">RotateFwd</ref></type>
        <definition>RotateFwd amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_dtos_x2z</definition>
        <argsstring></argsstring>
        <name>m_dtos_x2z</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="199" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a7f91644663dfc7cdf2b82c06e1dbd164" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1FFT_1_1RotateBwd" kindref="compound">RotateBwd</ref></type>
        <definition>RotateBwd amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_dtos_z2x</definition>
        <argsstring></argsstring>
        <name>m_dtos_z2x</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="200" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1acfc80c1525302f1b84118071676e0ef6" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FFT_1_1R2C_1aa078479f5563108a286fc9f2c34589cb" kindref="member">MF</ref></type>
        <definition>MF amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_rx</definition>
        <argsstring></argsstring>
        <name>m_rx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="202" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a7416e69585877283b79273ad1780c6d7" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FFT_1_1R2C_1ad56d4d40fdb0248b81b76e3a7658e18b" kindref="member">cMF</ref></type>
        <definition>cMF amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_cx</definition>
        <argsstring></argsstring>
        <name>m_cx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="203" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1ae87f0e1dc9a56aa10374db6ff32bf982" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FFT_1_1R2C_1ad56d4d40fdb0248b81b76e3a7658e18b" kindref="member">cMF</ref></type>
        <definition>cMF amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_cy</definition>
        <argsstring></argsstring>
        <name>m_cy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="204" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a6458b98d0175ae86b2352388541c72a1" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FFT_1_1R2C_1ad56d4d40fdb0248b81b76e3a7658e18b" kindref="member">cMF</ref></type>
        <definition>cMF amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_cz</definition>
        <argsstring></argsstring>
        <name>m_cz</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="205" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1ae6d4f256e3f702c45e28d7a6d7b9699a" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; char, <ref refid="structamrex_1_1DataDeleter" kindref="compound">DataDeleter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;char,DataDeleter&gt; amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_data_1</definition>
        <argsstring></argsstring>
        <name>m_data_1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="207" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1aca7da24dcb68f1019dcba1064fa90c55" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; char, <ref refid="structamrex_1_1DataDeleter" kindref="compound">DataDeleter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;char,DataDeleter&gt; amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_data_2</definition>
        <argsstring></argsstring>
        <name>m_data_2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="208" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a20d4f09c9c3a568d8a8a3b3c55094706" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a222089e49ba211b37cf7a4a8ae7eb186" kindref="member">Box</ref></type>
        <definition>Box amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_real_domain</definition>
        <argsstring></argsstring>
        <name>m_real_domain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="210" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1ad4a0ae04ab3f733030acbe23e267334e" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a222089e49ba211b37cf7a4a8ae7eb186" kindref="member">Box</ref></type>
        <definition>Box amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_spectral_domain_x</definition>
        <argsstring></argsstring>
        <name>m_spectral_domain_x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="211" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a7525c698494154a2b82ceb38f728984b" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a222089e49ba211b37cf7a4a8ae7eb186" kindref="member">Box</ref></type>
        <definition>Box amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_spectral_domain_y</definition>
        <argsstring></argsstring>
        <name>m_spectral_domain_y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="212" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a99d977d07c448dcc222e6ee291b1a1f6" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a222089e49ba211b37cf7a4a8ae7eb186" kindref="member">Box</ref></type>
        <definition>Box amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_spectral_domain_z</definition>
        <argsstring></argsstring>
        <name>m_spectral_domain_z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="213" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a8a77fbe2b8f2ac15afca8d615d4d81ff" prot="private" static="no" mutable="no">
        <type><ref refid="structamrex_1_1FFT_1_1Info" kindref="compound">Info</ref></type>
        <definition>Info amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_info</definition>
        <argsstring></argsstring>
        <name>m_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="215" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a41268ca359cbd688968574e7fd092aba" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_do_alld_fft</definition>
        <argsstring></argsstring>
        <name>m_do_alld_fft</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="217" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1a72cb54c1b686bcab0a8436dafd9167aa" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_slab_decomp</definition>
        <argsstring></argsstring>
        <name>m_slab_decomp</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="218" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FFT_1_1R2C_1aae0724090dbd8f00495959495c3fb312" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::m_openbc_half</definition>
        <argsstring></argsstring>
        <name>m_openbc_half</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="219" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="219" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1FFT_1_1R2C_1aa36162bdb5e89c7dd8fcbb54d669c952" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FFT::R2C&lt; T, D, S &gt;::R2C</definition>
        <argsstring>(Box const &amp;domain, Info const &amp;info=Info{})</argsstring>
        <name>R2C</name>
        <param>
          <type><ref refid="namespaceamrex_1a222089e49ba211b37cf7a4a8ae7eb186" kindref="member">Box</ref> const &amp;</type>
          <declname>domain</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1FFT_1_1Info" kindref="compound">Info</ref> const &amp;</type>
          <declname>info</declname>
          <defval><ref refid="structamrex_1_1FFT_1_1Info" kindref="compound">Info</ref>{}</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>domain</parametername>
</parameternamelist>
<parameterdescription>
<para>the forward domain (i.e., the domain of the real data) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>info</parametername>
</parameternamelist>
<parameterdescription>
<para>optional information </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="48" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="223" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1R2C_1aed73adc1ab4d3489b8c3eced0ed7a6e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FFT::R2C&lt; T, D, S &gt;::~R2C&lt; T, D, S &gt;</definition>
        <argsstring>()</argsstring>
        <name>~R2C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="50" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="413" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1R2C_1a0336152a901505bb39e4e41ecef5ee35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::R2C</definition>
        <argsstring>(R2C const &amp;)=delete</argsstring>
        <name>R2C</name>
        <param>
          <type><ref refid="classamrex_1_1FFT_1_1R2C" kindref="compound">R2C</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="52" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1R2C_1a5c9d8e7b1937f8543b2e0ad889980dfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::R2C</definition>
        <argsstring>(R2C &amp;&amp;)=delete</argsstring>
        <name>R2C</name>
        <param>
          <type><ref refid="classamrex_1_1FFT_1_1R2C" kindref="compound">R2C</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="53" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1R2C_1acf1ae92475a5c6273f3e52c8e0a82593" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1FFT_1_1R2C" kindref="compound">R2C</ref> &amp;</type>
        <definition>R2C&amp; amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::operator=</definition>
        <argsstring>(R2C const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1FFT_1_1R2C" kindref="compound">R2C</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="54" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1R2C_1a556d3956e146ae16242feb1a64afdccf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1FFT_1_1R2C" kindref="compound">R2C</ref> &amp;</type>
        <definition>R2C&amp; amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::operator=</definition>
        <argsstring>(R2C &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1FFT_1_1R2C" kindref="compound">R2C</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="55" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1R2C_1afc918ae6250fc9b61e18463a0f4c6e25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type><ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0" kindref="member">Direction</ref></type>
            <declname>DIR</declname>
            <defname>DIR</defname>
            <defval>D</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; DIR==<ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0af6cb3e816496528d4187db53bc66567f" kindref="member">Direction::both</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::forwardThenBackward</definition>
        <argsstring>(MF const &amp;inmf, MF &amp;outmf, F const &amp;post_forward)</argsstring>
        <name>forwardThenBackward</name>
        <param>
          <type><ref refid="classamrex_1_1FFT_1_1R2C_1aa078479f5563108a286fc9f2c34589cb" kindref="member">MF</ref> const &amp;</type>
          <declname>inmf</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1FFT_1_1R2C_1aa078479f5563108a286fc9f2c34589cb" kindref="member">MF</ref> &amp;</type>
          <declname>outmf</declname>
        </param>
        <param>
          <type>F const &amp;</type>
          <declname>post_forward</declname>
        </param>
        <briefdescription>
<para>Forward and then backward transform. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is available only when this class template is instantiated for transforms in both directions. It&apos;s more efficient than calling the forward function that stores the spectral data in a caller provided container followed by the backward function, because this can avoid parallel communication between the internal data and the caller&apos;s data container.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inmf</parametername>
</parameternamelist>
<parameterdescription>
<para>input data in <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> or <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt;BaseFab&lt;float&gt;&gt; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outmf</parametername>
</parameternamelist>
<parameterdescription>
<para>output data in <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> or <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt;BaseFab&lt;float&gt;&gt; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>post_forward</parametername>
</parameternamelist>
<parameterdescription>
<para>a callable object for processing the post-forward data before the backward transform. Its interface is <computeroutput>(int,int,int,<ref refid="structamrex_1_1GpuComplex" kindref="compound">GpuComplex</ref>&lt;T&gt;&amp;)</computeroutput>, where the integers are indices in the spectral space, and the reference to the complex number allows for the modification of the spectral data at that location. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="78" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="78" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1R2C_1af2ab788ee9323ca2fcc29faed326c1e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0" kindref="member">Direction</ref></type>
            <declname>DIR</declname>
            <defname>DIR</defname>
            <defval>D</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; DIR==<ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0a965dbaac085fc891bfbbd4f9d145bbc8" kindref="member">Direction::forward</ref>||DIR==<ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0af6cb3e816496528d4187db53bc66567f" kindref="member">Direction::both</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::FFT::R2C&lt; T, D, S &gt;::forward</definition>
        <argsstring>(MF const &amp;inmf)</argsstring>
        <name>forward</name>
        <param>
          <type><ref refid="classamrex_1_1FFT_1_1R2C_1aa078479f5563108a286fc9f2c34589cb" kindref="member">MF</ref> const &amp;</type>
          <declname>inmf</declname>
        </param>
        <briefdescription>
<para>Forward transform. </para>
        </briefdescription>
        <detaileddescription>
<para>The output is stored in this object&apos;s internal data. This function is not available when this class template is instantiated for backward-only transform.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inmf</parametername>
</parameternamelist>
<parameterdescription>
<para>input data in <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> or <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt;BaseFab&lt;float&gt;&gt; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="97" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="488" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1R2C_1a60149ed3e177d55569d1ad4becfe0648" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0" kindref="member">Direction</ref></type>
            <declname>DIR</declname>
            <defname>DIR</defname>
            <defval>D</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; DIR==<ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0a965dbaac085fc891bfbbd4f9d145bbc8" kindref="member">Direction::forward</ref>||DIR==<ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0af6cb3e816496528d4187db53bc66567f" kindref="member">Direction::both</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::FFT::R2C&lt; T, D, S &gt;::forward</definition>
        <argsstring>(MF const &amp;inmf, cMF &amp;outmf)</argsstring>
        <name>forward</name>
        <param>
          <type><ref refid="classamrex_1_1FFT_1_1R2C_1aa078479f5563108a286fc9f2c34589cb" kindref="member">MF</ref> const &amp;</type>
          <declname>inmf</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1FFT_1_1R2C_1ad56d4d40fdb0248b81b76e3a7658e18b" kindref="member">cMF</ref> &amp;</type>
          <declname>outmf</declname>
        </param>
        <briefdescription>
<para>Forward transform. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is not available when this class template is instantiated for backward-only transform.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inmf</parametername>
</parameternamelist>
<parameterdescription>
<para>input data in <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> or <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt;BaseFab&lt;float&gt;&gt; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outmf</parametername>
</parameternamelist>
<parameterdescription>
<para>output data in <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt;<ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt;GpuComplex&lt;T&gt;&gt;&gt; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="110" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="674" bodyend="691"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1R2C_1a7473313a03c345dbebba617208e567b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0" kindref="member">Direction</ref></type>
            <declname>DIR</declname>
            <defname>DIR</defname>
            <defval>D</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; DIR==<ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0af6cb3e816496528d4187db53bc66567f" kindref="member">Direction::both</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::FFT::R2C&lt; T, D, S &gt;::backward</definition>
        <argsstring>(MF &amp;outmf)</argsstring>
        <name>backward</name>
        <param>
          <type><ref refid="classamrex_1_1FFT_1_1R2C_1aa078479f5563108a286fc9f2c34589cb" kindref="member">MF</ref> &amp;</type>
          <declname>outmf</declname>
        </param>
        <briefdescription>
<para>Backward transform. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is available only when this class template is instantiated for transforms in both directions.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outmf</parametername>
</parameternamelist>
<parameterdescription>
<para>output data in <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> or <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt;BaseFab&lt;float&gt;&gt; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="121" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="536" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1R2C_1af125aee2864013003fea6c9c8ec57d65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0" kindref="member">Direction</ref></type>
            <declname>DIR</declname>
            <defname>DIR</defname>
            <defval>D</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; DIR==<ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0a195fe59b6f103787a914aead0f3db502" kindref="member">Direction::backward</ref>||DIR==<ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0af6cb3e816496528d4187db53bc66567f" kindref="member">Direction::both</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::FFT::R2C&lt; T, D, S &gt;::backward</definition>
        <argsstring>(cMF const &amp;inmf, MF &amp;outmf)</argsstring>
        <name>backward</name>
        <param>
          <type><ref refid="classamrex_1_1FFT_1_1R2C_1ad56d4d40fdb0248b81b76e3a7658e18b" kindref="member">cMF</ref> const &amp;</type>
          <declname>inmf</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1FFT_1_1R2C_1aa078479f5563108a286fc9f2c34589cb" kindref="member">MF</ref> &amp;</type>
          <declname>outmf</declname>
        </param>
        <briefdescription>
<para>Backward transform. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is not available when this class template is instantiated for forward-only transform.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inmf</parametername>
</parameternamelist>
<parameterdescription>
<para>input data in <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt;<ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt;GpuComplex&lt;T&gt;&gt;&gt; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outmf</parametername>
</parameternamelist>
<parameterdescription>
<para>output data in <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> or <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt;BaseFab&lt;float&gt;&gt; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="134" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="696" bodyend="713"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1R2C_1a04cc7a979415fd93a0f97ffe2a469638" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T amrex::FFT::R2C&lt; T, D, S &gt;::scalingFactor</definition>
        <argsstring>() const</argsstring>
        <name>scalingFactor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scaling factor. If the data goes through forward and then backward, the result multiplied by the scaling factor is equal to the original data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="139" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="643" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1R2C_1a09c3cd786098785470197484da6d65c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0" kindref="member">Direction</ref></type>
            <declname>DIR</declname>
            <defname>DIR</defname>
            <defval>D</defval>
          </param>
          <param>
            <type>std::enable_if_t&lt; DIR==<ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0a965dbaac085fc891bfbbd4f9d145bbc8" kindref="member">Direction::forward</ref>||DIR==<ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0af6cb3e816496528d4187db53bc66567f" kindref="member">Direction::both</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>std::pair&lt; <ref refid="classamrex_1_1FFT_1_1R2C_1ad56d4d40fdb0248b81b76e3a7658e18b" kindref="member">cMF</ref> *, <ref refid="namespaceamrex_1a8792201c856a367dda275e09047daa33" kindref="member">IntVect</ref> &gt;</type>
        <definition>std::pair&lt;cMF*,IntVect&gt; amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::getSpectralData</definition>
        <argsstring>()</argsstring>
        <name>getSpectralData</name>
        <briefdescription>
<para>Get the internal spectral data. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is not available when this class template is instantiated for backward-only transform. For performance reasons, the returned data array does not have the usual ordering of <computeroutput>(x,y,z)</computeroutput>. The order is specified in the second part of the return value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="152" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1R2C_1a8148fe0560b7de83296159d75b9ad396" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref>, <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &gt;</type>
        <definition>std::pair&lt; BoxArray, DistributionMapping &gt; amrex::FFT::R2C&lt; T, D, S &gt;::getSpectralDataLayout</definition>
        <argsstring>() const</argsstring>
        <name>getSpectralDataLayout</name>
        <briefdescription>
<para>Get <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> and <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> for spectral data. </para>
        </briefdescription>
        <detaileddescription>
<para>The returned <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> and <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> can be used to build <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt;<ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt;GpuComplex&lt;T&gt;&gt;&gt; for spectral data. The returned <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> has the usual order of <computeroutput>(x,y,z)</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="161" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="717" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1R2C_1ab18f4105f6b6342d1490b85ee7f949f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::FFT::R2C&lt; T, D, S &gt;::post_forward_doit</definition>
        <argsstring>(F const &amp;post_forward)</argsstring>
        <name>post_forward_doit</name>
        <param>
          <type>F const &amp;</type>
          <declname>post_forward</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="165" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="603" bodyend="640"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1R2C_1a05acedd3c18cddb2e808273e33ada318" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FFT::R2C&lt; T, D, S &gt;::prepare_openbc</definition>
        <argsstring>()</argsstring>
        <name>prepare_openbc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="167" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="434" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1R2C_1ad27b7957b1cbbce2fa64cbff8dab70dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FFT::R2C&lt; T, D, S &gt;::backward_doit</definition>
        <argsstring>(MF &amp;outmf, IntVect const &amp;ngout=IntVect(0))</argsstring>
        <name>backward_doit</name>
        <param>
          <type><ref refid="classamrex_1_1FFT_1_1R2C_1aa078479f5563108a286fc9f2c34589cb" kindref="member">MF</ref> &amp;</type>
          <declname>outmf</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a8792201c856a367dda275e09047daa33" kindref="member">IntVect</ref> const &amp;</type>
          <declname>ngout</declname>
          <defval><ref refid="namespaceamrex_1a8792201c856a367dda275e09047daa33" kindref="member">IntVect</ref>(0)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="169" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="542" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FFT_1_1R2C_1a6dcbfe3322a919097f59b18802134626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0" kindref="member">Direction</ref></type>
            <declname>DIR</declname>
            <defname>DIR</defname>
          </param>
          <param>
            <type>std::enable_if_t&lt; DIR==<ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0a965dbaac085fc891bfbbd4f9d145bbc8" kindref="member">Direction::forward</ref>||DIR==<ref refid="namespaceamrex_1_1FFT_1a28c4d0ce41c89d0d14f83d98b45375c0af6cb3e816496528d4187db53bc66567f" kindref="member">Direction::both</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; typename <ref refid="classamrex_1_1FFT_1_1R2C" kindref="compound">R2C</ref>&lt; T, D, S &gt;::<ref refid="classamrex_1_1FFT_1_1R2C_1ad56d4d40fdb0248b81b76e3a7658e18b" kindref="member">cMF</ref> *, <ref refid="namespaceamrex_1a8792201c856a367dda275e09047daa33" kindref="member">IntVect</ref> &gt;</type>
        <definition>std::pair&lt;typename R2C&lt;T,D,S&gt;::cMF *, IntVect&gt; amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;::getSpectralData</definition>
        <argsstring>()</argsstring>
        <name>getSpectralData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="660" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="660" bodyend="669"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classamrex_1_1FFT_1_1R2C_1a1c9b286f2c655d17b48d8d1e6a6b264f" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="structamrex_1_1FFT_1_1Plan" kindref="compound">Plan</ref>&lt; T &gt;, <ref refid="structamrex_1_1FFT_1_1Plan" kindref="compound">Plan</ref>&lt; T &gt; &gt;</type>
        <definition>std::pair&lt; Plan&lt; T &gt;, Plan&lt; T &gt; &gt; amrex::FFT::R2C&lt; T, D, S &gt;::make_c2c_plans</definition>
        <argsstring>(cMF &amp;inout)</argsstring>
        <name>make_c2c_plans</name>
        <param>
          <type><ref refid="classamrex_1_1FFT_1_1R2C_1ad56d4d40fdb0248b81b76e3a7658e18b" kindref="member">cMF</ref> &amp;</type>
          <declname>inout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="173" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="575" bodyend="599"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Parallel Discrete Fourier Transform. </para>
    </briefdescription>
    <detaileddescription>
<para>This class supports Fourier transforms between real and complex data. The name <ref refid="classamrex_1_1FFT_1_1R2C" kindref="compound">R2C</ref> indicates that the forward transform converts real data to complex data, while the backward transform converts complex data to real data. It should be noted that both directions of transformation are supported, not just from real to complex. The scaling follows the FFTW convention, where applying the forward transform followed by the backward transform scales the original data by the size of the input array.</para>
<para>For more details, we refer the users to <ulink url="https://amrex-codes.github.io/amrex/docs_html/FFT_Chapter.html">https://amrex-codes.github.io/amrex/docs_html/FFT_Chapter.html</ulink>. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="35">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="36" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="58">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="19">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="16" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="70">
        <label>std::unique_ptr&lt; char, amrex::DataDeleter &gt;</label>
      </node>
      <node id="43">
        <label>std::map&lt; amrex::FabArrayBase::BDKey, int &gt;</label>
        <childnode refid="22" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>K</label>
      </node>
      <node id="20">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="6">
        <label>T</label>
      </node>
      <node id="67">
        <label>std::unique_ptr&lt; amrex::PCData&lt; BaseFab&lt; GpuComplex&lt; Real &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="11">
        <label>amrex::Math::FastDivmodU64</label>
        <link refid="structamrex_1_1Math_1_1FastDivmodU64"/>
      </node>
      <node id="68">
        <label>std::unique_ptr&lt; amrex::NonLocalBC::MultiBlockCommMetaData &gt;</label>
      </node>
      <node id="16">
        <label>amrex::IndexTypeND&lt; AMREX_SPACEDIM &gt;</label>
        <link refid="classamrex_1_1IndexTypeND"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="66">
        <label>amrex::MultiArray4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
      </node>
      <node id="51">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="52" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="29" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="59">
        <label>amrex::MultiArray4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
      </node>
      <node id="4">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="52">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="53" relation="usage">
          <edgelabel>m_profiler</edgelabel>
        </childnode>
        <childnode refid="58" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>std::map&lt; std::string, amrex::FabArrayBase::meminfo &gt;</label>
        <childnode refid="41" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="24">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="9" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="49">
        <label>std::vector&lt; BaseFab&lt; GpuComplex&lt; Real &gt; &gt; * &gt;</label>
        <childnode refid="50" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="12">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="13" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>amrex::BoxND&lt; AMREX_SPACEDIM &gt;</label>
        <link refid="classamrex_1_1BoxND"/>
      </node>
      <node id="18">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="65">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="13">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="14" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
      </node>
      <node id="53">
        <label>amrex::Arena::ArenaProfiler</label>
        <link refid="structamrex_1_1Arena_1_1ArenaProfiler"/>
        <childnode refid="54" relation="usage">
          <edgelabel>m_currently_allocated</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>m_arena_profiler_mutex</edgelabel>
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>m_profiling_stats</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::FabArray&lt; BaseFab&lt; GpuComplex&lt; Real &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="59" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="61" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="62" relation="usage">
          <edgelabel>m_single_chunk_arena</edgelabel>
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
        <childnode refid="64" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="66" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
        <childnode refid="67" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
      </node>
      <node id="54">
        <label>std::unordered_map&lt; void *, std::pair&lt; amrex::MemStat *, std::size_t &gt; &gt;</label>
      </node>
      <node id="75">
        <label>amrex::FFT::Plan&lt; Real &gt;</label>
        <link refid="structamrex_1_1FFT_1_1Plan"/>
      </node>
      <node id="61">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; BaseFab&lt; GpuComplex&lt; Real &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="44">
        <label>std::multimap&lt; K, T &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="71">
        <label>amrex::FFT::RotateFwd</label>
        <link refid="structamrex_1_1FFT_1_1RotateFwd"/>
      </node>
      <node id="46">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="47" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::FFT::R2C&lt; T, D, DomainStrategy &gt;</label>
        <link refid="classamrex_1_1FFT_1_1R2C"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_cx</edgelabel>
          <edgelabel>m_cy</edgelabel>
          <edgelabel>m_cz</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>m_cmd_x2y</edgelabel>
          <edgelabel>m_cmd_x2z</edgelabel>
          <edgelabel>m_cmd_x2z_half</edgelabel>
          <edgelabel>m_cmd_y2x</edgelabel>
          <edgelabel>m_cmd_y2z</edgelabel>
          <edgelabel>m_cmd_z2x</edgelabel>
          <edgelabel>m_cmd_z2x_half</edgelabel>
          <edgelabel>m_cmd_z2y</edgelabel>
        </childnode>
        <childnode refid="69" relation="usage">
          <edgelabel>m_dtos_x2y</edgelabel>
          <edgelabel>m_dtos_y2x</edgelabel>
        </childnode>
        <childnode refid="70" relation="usage">
          <edgelabel>m_data_1</edgelabel>
          <edgelabel>m_data_2</edgelabel>
        </childnode>
        <childnode refid="71" relation="usage">
          <edgelabel>m_dtos_x2z</edgelabel>
        </childnode>
        <childnode refid="72" relation="usage">
          <edgelabel>m_dtos_y2z</edgelabel>
          <edgelabel>m_dtos_z2y</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>m_real_domain</edgelabel>
          <edgelabel>m_spectral_domain_x</edgelabel>
          <edgelabel>m_spectral_domain_y</edgelabel>
          <edgelabel>m_spectral_domain_z</edgelabel>
        </childnode>
        <childnode refid="73" relation="usage">
          <edgelabel>m_info</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>m_dtos_z2x</edgelabel>
        </childnode>
        <childnode refid="75" relation="usage">
          <edgelabel>m_fft_bwd_x</edgelabel>
          <edgelabel>m_fft_bwd_x_half</edgelabel>
          <edgelabel>m_fft_bwd_y</edgelabel>
          <edgelabel>m_fft_bwd_z</edgelabel>
          <edgelabel>m_fft_fwd_x</edgelabel>
          <edgelabel>m_fft_fwd_x_half</edgelabel>
          <edgelabel>m_fft_fwd_y</edgelabel>
          <edgelabel>m_fft_fwd_z</edgelabel>
        </childnode>
      </node>
      <node id="69">
        <label>amrex::FFT::Swap01</label>
        <link refid="structamrex_1_1FFT_1_1Swap01"/>
      </node>
      <node id="72">
        <label>amrex::FFT::Swap02</label>
        <link refid="structamrex_1_1FFT_1_1Swap02"/>
      </node>
      <node id="55">
        <label>std::mutex</label>
      </node>
      <node id="63">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; BaseFab&lt; GpuComplex&lt; Real &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="74">
        <label>amrex::FFT::RotateBwd</label>
        <link refid="structamrex_1_1FFT_1_1RotateBwd"/>
      </node>
      <node id="45">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="36" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="62">
        <label>std::unique_ptr&lt; amrex::detail::SingleChunkArena &gt;</label>
      </node>
      <node id="47">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
      </node>
      <node id="31">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="32" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>std::shared_ptr&lt; amrex::DistributionMapping::Ref &gt;</label>
      </node>
      <node id="14">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>amrex::FabArrayBase::ParForInfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1ParForInfo"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_ng</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_boxes</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="50">
        <label>amrex::BaseFab&lt; GpuComplex&lt; Real &gt; &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="51" relation="public-inheritance">
        </childnode>
      </node>
      <node id="73">
        <label>amrex::FFT::Info</label>
        <link refid="structamrex_1_1FFT_1_1Info"/>
      </node>
      <node id="32">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="33" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>m_ownership</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>amrex::Vector&lt; amrex::BoxND &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="64">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="57">
        <label>amrex::MemStat</label>
        <link refid="structamrex_1_1MemStat"/>
      </node>
      <node id="30">
        <label>amrex::IntVectND&lt; dim &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="41">
        <label>amrex::FabArrayBase::meminfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1meminfo"/>
      </node>
      <node id="38">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
        <childnode refid="39" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="23" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="17">
        <label>amrex::CellIndexEnum</label>
        <link refid="structamrex_1_1CellIndexEnum"/>
      </node>
      <node id="48">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
      </node>
      <node id="10">
        <label>amrex::BoxIndexerND&lt; dim &gt;</label>
        <link refid="structamrex_1_1BoxIndexerND"/>
        <childnode refid="11" relation="usage">
          <edgelabel>fdm</edgelabel>
        </childnode>
      </node>
      <node id="60">
        <label>std::unique_ptr&lt; amrex::FBData&lt; BaseFab&lt; GpuComplex&lt; Real &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="23">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="24" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::multimap&lt; amrex::FabArrayBase::BDKey, amrex::FabArrayBase::ParForInfo * &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_TheTileArrayCache</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_TheParForCache</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>m_mem_usage</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>m_BD_count</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>m_TheCPCache</edgelabel>
          <edgelabel>m_TheCrseFineCache</edgelabel>
          <edgelabel>m_TheFBCache</edgelabel>
          <edgelabel>m_TheFillPatchCache</edgelabel>
          <edgelabel>m_ThePolarBCache</edgelabel>
          <edgelabel>m_TheRB180Cache</edgelabel>
          <edgelabel>m_TheRB90Cache</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>ownership</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>m_region_tag</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>std::vector&lt; int &gt;</label>
      </node>
      <node id="36">
        <label>std::string</label>
        <childnode refid="37" relation="public-inheritance">
        </childnode>
      </node>
      <node id="56">
        <label>std::map&lt; std::string, amrex::MemStat &gt;</label>
        <childnode refid="57" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::IntVectND&lt; AMREX_SPACEDIM &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" line="33" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/FFT/AMReX_FFT_R2C.H" bodystart="34" bodyend="220"/>
    <listofallmembers>
      <member refid="classamrex_1_1FFT_1_1R2C_1a7473313a03c345dbebba617208e567b7" prot="public" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>backward</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1af125aee2864013003fea6c9c8ec57d65" prot="public" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>backward</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1ad27b7957b1cbbce2fa64cbff8dab70dc" prot="public" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>backward_doit</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1ad56d4d40fdb0248b81b76e3a7658e18b" prot="public" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>cMF</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1af2ab788ee9323ca2fcc29faed326c1e9" prot="public" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>forward</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a60149ed3e177d55569d1ad4becfe0648" prot="public" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>forward</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1afc918ae6250fc9b61e18463a0f4c6e25" prot="public" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>forwardThenBackward</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a09c3cd786098785470197484da6d65c8" prot="public" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>getSpectralData</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a6dcbfe3322a919097f59b18802134626" prot="public" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>getSpectralData</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a8148fe0560b7de83296159d75b9ad396" prot="public" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>getSpectralDataLayout</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a4e458acb1274d2fc4a8db2d1a7c544b1" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_cmd_x2y</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1af44d954790f7199a839117d19f9c59a7" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_cmd_x2z</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a0d92849b173f91f8149dbdaaa887cd10" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_cmd_x2z_half</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1aa480de56fa85818fe4e644e37c1c27f5" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_cmd_y2x</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a976332adaab397631e96f7f279ea4064" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_cmd_y2z</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a9c45539a48cc18ef08c9bf2c75b5bc5e" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_cmd_z2x</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a64d56c55c24e1f8ed26f3deb5bf4207a" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_cmd_z2x_half</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a54542dbdd142352d554f0314947c8ecf" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_cmd_z2y</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a7416e69585877283b79273ad1780c6d7" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_cx</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1ae87f0e1dc9a56aa10374db6ff32bf982" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_cy</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a6458b98d0175ae86b2352388541c72a1" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_cz</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1ae6d4f256e3f702c45e28d7a6d7b9699a" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_data_1</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1aca7da24dcb68f1019dcba1064fa90c55" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_data_2</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a41268ca359cbd688968574e7fd092aba" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_do_alld_fft</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a13a17b3574521d8bba67a1f96d0d3834" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_dtos_x2y</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a0b640983961d6ee3de50af47956bd472" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_dtos_x2z</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1ae5725df08a907d5837a6e38b285edac2" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_dtos_y2x</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a4a5d878dde86135d2dfc69795e58a9b2" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_dtos_y2z</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a7f91644663dfc7cdf2b82c06e1dbd164" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_dtos_z2x</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1acbf7f80d9b889ecc188c910634bb85f0" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_dtos_z2y</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a56cfcb34e692ac749aa2afb45c54873c" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_fft_bwd_x</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a732a438db3b92c9118bfb1492b960c7a" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_fft_bwd_x_half</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a18c21ee0e1f5fd623815cd8827bac072" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_fft_bwd_y</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a6b7ffff2c4ecb6d1b5e86fc5b19cd10f" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_fft_bwd_z</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a3e8a5fa22798bc7055e23c03d8ad9e58" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_fft_fwd_x</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a373893ae1d4b5fcb263b5dfe46be9e68" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_fft_fwd_x_half</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1aa265126e8170d6036d1b58826a975d95" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_fft_fwd_y</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1ac75a018d4bd06f5592003700945af2f2" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_fft_fwd_z</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a8a77fbe2b8f2ac15afca8d615d4d81ff" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_info</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1aae0724090dbd8f00495959495c3fb312" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_openbc_half</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a20d4f09c9c3a568d8a8a3b3c55094706" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_real_domain</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1acfc80c1525302f1b84118071676e0ef6" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_rx</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a72cb54c1b686bcab0a8436dafd9167aa" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_slab_decomp</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1ad4a0ae04ab3f733030acbe23e267334e" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_spectral_domain_x</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a7525c698494154a2b82ceb38f728984b" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_spectral_domain_y</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a99d977d07c448dcc222e6ee291b1a1f6" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>m_spectral_domain_z</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a1c9b286f2c655d17b48d8d1e6a6b264f" prot="private" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>make_c2c_plans</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1aa078479f5563108a286fc9f2c34589cb" prot="public" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>MF</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1afd3d509858e88e5f3a1efe7cb494baf4" prot="public" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>OpenBCSolver</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1acf1ae92475a5c6273f3e52c8e0a82593" prot="public" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>operator=</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a556d3956e146ae16242feb1a64afdccf" prot="public" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>operator=</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1ab18f4105f6b6342d1490b85ee7f949f5" prot="public" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>post_forward_doit</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a05acedd3c18cddb2e808273e33ada318" prot="public" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>prepare_openbc</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1aa36162bdb5e89c7dd8fcbb54d669c952" prot="public" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>R2C</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a0336152a901505bb39e4e41ecef5ee35" prot="public" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>R2C</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a5c9d8e7b1937f8543b2e0ad889980dfd" prot="public" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>R2C</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1a04cc7a979415fd93a0f97ffe2a469638" prot="public" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>scalingFactor</name></member>
      <member refid="classamrex_1_1FFT_1_1R2C_1aed73adc1ab4d3489b8c3eced0ed7a6e0" prot="public" virt="non-virtual"><scope>amrex::FFT::R2C</scope><name>~R2C</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
