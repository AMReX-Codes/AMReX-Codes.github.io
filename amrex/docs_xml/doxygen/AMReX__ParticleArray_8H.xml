<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="AMReX__ParticleArray_8H" kind="file" language="C++">
    <compoundname>AMReX_ParticleArray.H</compoundname>
    <includes local="no">AMReX_Config.H</includes>
    <includes refid="AMReX_8H" local="no">AMReX.H</includes>
    <includes refid="AMReX__TypeTraits_8H" local="no">AMReX_TypeTraits.H</includes>
    <includes refid="AMReX__Tuple_8H" local="no">AMReX_Tuple.H</includes>
    <includes local="no">functional</includes>
    <includes local="no">tuple</includes>
    <includes local="no">type_traits</includes>
    <incdepgraph>
      <node id="79474">
        <label>functional</label>
      </node>
      <node id="79485">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="79455" relation="include">
        </childnode>
        <childnode refid="79457" relation="include">
        </childnode>
      </node>
      <node id="79469">
        <label>float.h</label>
      </node>
      <node id="79460">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="79455" relation="include">
        </childnode>
        <childnode refid="79461" relation="include">
        </childnode>
      </node>
      <node id="79480">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="79455" relation="include">
        </childnode>
        <childnode refid="79481" relation="include">
        </childnode>
        <childnode refid="79482" relation="include">
        </childnode>
        <childnode refid="79474" relation="include">
        </childnode>
        <childnode refid="79479" relation="include">
        </childnode>
        <childnode refid="79483" relation="include">
        </childnode>
        <childnode refid="79478" relation="include">
        </childnode>
        <childnode refid="79484" relation="include">
        </childnode>
        <childnode refid="79485" relation="include">
        </childnode>
        <childnode refid="79457" relation="include">
        </childnode>
      </node>
      <node id="79471">
        <label>cmath</label>
      </node>
      <node id="79461">
        <label>cassert</label>
      </node>
      <node id="79468">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="79455" relation="include">
        </childnode>
        <childnode refid="79465" relation="include">
        </childnode>
        <childnode refid="79469" relation="include">
        </childnode>
      </node>
      <node id="79464">
        <label>stdexcept</label>
      </node>
      <node id="79462">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
        <childnode refid="79455" relation="include">
        </childnode>
      </node>
      <node id="79475">
        <label>string</label>
      </node>
      <node id="79457">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
        <childnode refid="79455" relation="include">
        </childnode>
      </node>
      <node id="79456">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="79455" relation="include">
        </childnode>
        <childnode refid="79457" relation="include">
        </childnode>
        <childnode refid="79458" relation="include">
        </childnode>
        <childnode refid="79460" relation="include">
        </childnode>
        <childnode refid="79462" relation="include">
        </childnode>
        <childnode refid="79463" relation="include">
        </childnode>
        <childnode refid="79465" relation="include">
        </childnode>
        <childnode refid="79466" relation="include">
        </childnode>
        <childnode refid="79468" relation="include">
        </childnode>
        <childnode refid="79470" relation="include">
        </childnode>
        <childnode refid="79473" relation="include">
        </childnode>
        <childnode refid="79474" relation="include">
        </childnode>
        <childnode refid="79475" relation="include">
        </childnode>
        <childnode refid="79459" relation="include">
        </childnode>
        <childnode refid="79476" relation="include">
        </childnode>
        <childnode refid="79477" relation="include">
        </childnode>
      </node>
      <node id="79465">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
        <childnode refid="79455" relation="include">
        </childnode>
      </node>
      <node id="79458">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="79455" relation="include">
        </childnode>
        <childnode refid="79459" relation="include">
        </childnode>
      </node>
      <node id="79455">
        <label>AMReX_Config.H</label>
      </node>
      <node id="79459">
        <label>cstdio</label>
      </node>
      <node id="79482">
        <label>tuple</label>
      </node>
      <node id="79476">
        <label>vector</label>
      </node>
      <node id="79483">
        <label>utility</label>
      </node>
      <node id="79481">
        <label>array</label>
      </node>
      <node id="79466">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="79455" relation="include">
        </childnode>
        <childnode refid="79467" relation="include">
        </childnode>
      </node>
      <node id="79454">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H</label>
        <link refid="AMReX__ParticleArray_8H"/>
        <childnode refid="79455" relation="include">
        </childnode>
        <childnode refid="79456" relation="include">
        </childnode>
        <childnode refid="79478" relation="include">
        </childnode>
        <childnode refid="79480" relation="include">
        </childnode>
        <childnode refid="79474" relation="include">
        </childnode>
        <childnode refid="79482" relation="include">
        </childnode>
        <childnode refid="79479" relation="include">
        </childnode>
      </node>
      <node id="79472">
        <label>cstdlib</label>
      </node>
      <node id="79484">
        <label>AMReX_IndexSequence.H</label>
        <link refid="AMReX__IndexSequence_8H"/>
        <childnode refid="79455" relation="include">
        </childnode>
        <childnode refid="79483" relation="include">
        </childnode>
      </node>
      <node id="79473">
        <label>iostream</label>
      </node>
      <node id="79470">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="79455" relation="include">
        </childnode>
        <childnode refid="79457" relation="include">
        </childnode>
        <childnode refid="79465" relation="include">
        </childnode>
        <childnode refid="79471" relation="include">
        </childnode>
        <childnode refid="79472" relation="include">
        </childnode>
      </node>
      <node id="79463">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="79455" relation="include">
        </childnode>
        <childnode refid="79464" relation="include">
        </childnode>
      </node>
      <node id="79479">
        <label>type_traits</label>
      </node>
      <node id="79477">
        <label>memory</label>
      </node>
      <node id="79467">
        <label>inttypes.h</label>
      </node>
      <node id="79478">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="79455" relation="include">
        </childnode>
        <childnode refid="79479" relation="include">
        </childnode>
        <childnode refid="79465" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structamrex_1_1DataLayoutPolicy" prot="public">amrex::DataLayoutPolicy</innerclass>
    <innerclass refid="structamrex_1_1DataLayoutPolicyRaw" prot="public">amrex::DataLayoutPolicyRaw</innerclass>
    <innerclass refid="structamrex_1_1ParticleArrayAccessor" prot="public">amrex::ParticleArrayAccessor</innerclass>
    <innerclass refid="classamrex_1_1ref__wrapper" prot="public">amrex::ref_wrapper</innerclass>
    <innerclass refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4" prot="public">amrex::DataLayoutPolicy&lt; ContainerType, ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;</innerclass>
    <innerclass refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4" prot="public">amrex::DataLayoutPolicyRaw&lt; ParticleType&lt; Types... &gt;, DataLayout::AoS &gt;</innerclass>
    <innerclass refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4" prot="public">amrex::DataLayoutPolicy&lt; ContainerType, ParticleType&lt; Types... &gt;, DataLayout::SoA &gt;</innerclass>
    <innerclass refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4" prot="public">amrex::DataLayoutPolicyRaw&lt; ParticleType&lt; Types... &gt;, DataLayout::SoA &gt;</innerclass>
    <innerclass refid="structamrex_1_1ParticleArray" prot="public">amrex::ParticleArray</innerclass>
    <innerclass refid="structamrex_1_1ParticleArrayAccessor" prot="public">amrex::ParticleArrayAccessor</innerclass>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_PARTICLEARRAY_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_PARTICLEARRAY_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_Config.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX_8H" kindref="compound">AMReX.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__TypeTraits_8H" kindref="compound">AMReX_TypeTraits.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Tuple_8H" kindref="compound">AMReX_Tuple.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19" refid="namespaceamrex_1a83d03eb75adb29c552bae0a3d625895b" refkind="member"><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a83d03eb75adb29c552bae0a3d625895b" kindref="member">DataLayout</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a83d03eb75adb29c552bae0a3d625895ba16b9d7db01fae7828de9941a0736d3d0" kindref="member">AoS</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a83d03eb75adb29c552bae0a3d625895ba7df366f0036440c84928f057941f8dad" kindref="member">SoA</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ContainerType,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ParticleType,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a83d03eb75adb29c552bae0a3d625895b" kindref="member">DataLayout</ref><sp/>DataLayoutTag&gt;</highlight></codeline>
<codeline lineno="31" refid="structamrex_1_1DataLayoutPolicy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1DataLayoutPolicy" kindref="compound">DataLayoutPolicy</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ParticleType,<sp/>DataLayout<sp/>DataLayoutTag&gt;</highlight></codeline>
<codeline lineno="34" refid="structamrex_1_1DataLayoutPolicyRaw" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1DataLayoutPolicyRaw" kindref="compound">DataLayoutPolicyRaw</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ParticleType,<sp/>DataLayout<sp/>DataLayoutTag&gt;</highlight></codeline>
<codeline lineno="37" refid="structamrex_1_1ParticleArrayAccessor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ParticleArrayAccessor" kindref="compound">ParticleArrayAccessor</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="43" refid="classamrex_1_1ref__wrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1ref__wrapper" kindref="compound">ref_wrapper</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45" refid="classamrex_1_1ref__wrapper_1aed72fe005ae33391f22e0c498019797b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="classamrex_1_1ref__wrapper_1aed72fe005ae33391f22e0c498019797b" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="48" refid="classamrex_1_1ref__wrapper_1aec548b435e6ba52441b7c436a859048a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ref__wrapper_1aec548b435e6ba52441b7c436a859048a" kindref="member">ref_wrapper</ref>(T&amp;<sp/>ref)<sp/>noexcept<sp/>:<sp/>_ptr(&amp;ref)<sp/>{}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ref__wrapper" kindref="compound">ref_wrapper</ref>(T&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ref__wrapper" kindref="compound">ref_wrapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ref__wrapper" kindref="compound">ref_wrapper</ref>&amp;)<sp/>noexcept<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="53" refid="classamrex_1_1ref__wrapper_1a42c534331fe88f6513641cecef48d4b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator=<sp/>(T&amp;&amp;<sp/>a_other)<sp/>{this-&gt;</highlight><highlight class="keyword">get</highlight><highlight class="normal">()=a_other;}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ref__wrapper" kindref="compound">ref_wrapper</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1ref__wrapper" kindref="compound">ref_wrapper</ref>&amp;<sp/>x)<sp/>noexcept<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="57" refid="classamrex_1_1ref__wrapper_1a62d3ea6419621c4f02a260b9d6d408f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>T&amp;<sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*_ptr;<sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="60" refid="classamrex_1_1ref__wrapper_1a48fae2c492bcad7afe1baed7ed0bfc64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T&amp;<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*_ptr;<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="63" refid="classamrex_1_1ref__wrapper_1ad6587c3974bf67afc32e7d313432b20e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><ref refid="classamrex_1_1ref__wrapper_1ad6587c3974bf67afc32e7d313432b20e" kindref="member">_ptr</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ContainerType,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ParticleType,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Types&gt;</highlight></codeline>
<codeline lineno="73" refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1DataLayoutPolicy" kindref="compound">DataLayoutPolicy</ref>&lt;ContainerType,<sp/>ParticleType&lt;Types...&gt;,<sp/><ref refid="namespaceamrex_1a83d03eb75adb29c552bae0a3d625895b" kindref="member">DataLayout</ref>::<ref refid="namespaceamrex_1a83d03eb75adb29c552bae0a3d625895ba16b9d7db01fae7828de9941a0736d3d0" kindref="member">AoS</ref>&gt;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75" refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a7bdcc3eb6bbb219b65280bd41b97b774" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a7bdcc3eb6bbb219b65280bd41b97b774" kindref="member">container_type</ref><sp/>=<sp/>ContainerType&lt;ParticleType&lt;Types...&gt;&gt;;</highlight></codeline>
<codeline lineno="76" refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1ab6759853d755a1a01624618efeb177b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1ab6759853d755a1a01624618efeb177b0" kindref="member">raw_type</ref><sp/>=<sp/>ParticleType&lt;Types...&gt;*;</highlight></codeline>
<codeline lineno="77" refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1acf82f34218d15ed26f163a36979c5a30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1acf82f34218d15ed26f163a36979c5a30" kindref="member">value_type</ref><sp/>=<sp/>ParticleType&lt;Types...&gt;&amp;;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a530916a537dcc4b424694411b430833e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1ab6759853d755a1a01624618efeb177b0" kindref="member">raw_type</ref><sp/><ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a530916a537dcc4b424694411b430833e" kindref="member">get_raw_data</ref><sp/>(<ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a7bdcc3eb6bbb219b65280bd41b97b774" kindref="member">container_type</ref>&amp;<sp/>a_container)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1ab6759853d755a1a01624618efeb177b0" kindref="member">raw_type</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">ParticleType&lt;Types...</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">*&gt;(&amp;a_container[0]));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a20054ec96a4caf67051d57e923579a8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a20054ec96a4caf67051d57e923579a8e" kindref="member">resize</ref><sp/>(<ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a7bdcc3eb6bbb219b65280bd41b97b774" kindref="member">container_type</ref>&amp;<sp/>a_container,<sp/>std::size_t<sp/>a_size)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_container.resize(a_size);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="90" refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a59c2843f59e6ba99661a6d26958b6f08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a59c2843f59e6ba99661a6d26958b6f08" kindref="member">push_back</ref><sp/>(<ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a7bdcc3eb6bbb219b65280bd41b97b774" kindref="member">container_type</ref>&amp;<sp/>a_container,<sp/>ValueType&amp;&amp;<sp/>a_value)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_container.push_back(a_value);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1ac8950252d5f3400022f97669a5ae9f66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>std::size_t<sp/><ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1ac8950252d5f3400022f97669a5ae9f66" kindref="member">size</ref><sp/>(<ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a7bdcc3eb6bbb219b65280bd41b97b774" kindref="member">container_type</ref>&amp;<sp/>a_container)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a_container.size();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ParticleType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Types&gt;</highlight></codeline>
<codeline lineno="105" refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1DataLayoutPolicyRaw" kindref="compound">DataLayoutPolicyRaw</ref>&lt;ParticleType&lt;Types...&gt;,<sp/><ref refid="namespaceamrex_1a83d03eb75adb29c552bae0a3d625895b" kindref="member">DataLayout</ref>::<ref refid="namespaceamrex_1a83d03eb75adb29c552bae0a3d625895ba16b9d7db01fae7828de9941a0736d3d0" kindref="member">AoS</ref>&gt;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107" refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a4cea01ca1b107d8585be77870f2da12f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a4cea01ca1b107d8585be77870f2da12f" kindref="member">raw_type</ref><sp/>=<sp/>ParticleType&lt;Types...&gt;*;</highlight></codeline>
<codeline lineno="108" refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a913ff82076d8ba44b1368ee651f235b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a913ff82076d8ba44b1368ee651f235b4" kindref="member">value_type</ref><sp/>=<sp/>ParticleType&lt;Types...&gt;&amp;;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="111" refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a62d1e4bb09aa9d6a9f20844737fab794" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a913ff82076d8ba44b1368ee651f235b4" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>(<ref refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a4cea01ca1b107d8585be77870f2da12f" kindref="member">raw_type</ref><sp/>a_ptr,<sp/>std::size_t<sp/>a_index)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1AoS_01_4_1a913ff82076d8ba44b1368ee651f235b4" kindref="member">value_type</ref>(*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">ParticleType&lt;Types...</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">*&gt;(&amp;a_ptr[a_index]));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ContainerType,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ParticleType,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Types&gt;</highlight></codeline>
<codeline lineno="126" refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1DataLayoutPolicy" kindref="compound">DataLayoutPolicy</ref>&lt;ContainerType,<sp/>ParticleType&lt;Types...&gt;,<sp/><ref refid="namespaceamrex_1a83d03eb75adb29c552bae0a3d625895b" kindref="member">DataLayout</ref>::<ref refid="namespaceamrex_1a83d03eb75adb29c552bae0a3d625895ba7df366f0036440c84928f057941f8dad" kindref="member">SoA</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="127" refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1a83fde477aa6104bcc887473e4804f35f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1a83fde477aa6104bcc887473e4804f35f" kindref="member">container_type</ref><sp/>=<sp/>std::tuple&lt;ContainerType&lt;Types&gt;...&gt;;</highlight></codeline>
<codeline lineno="128" refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1a5baa987d864932264a15fc54696e1881" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1GpuTuple" kindref="compound">raw_type</ref><sp/>=<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1GpuTuple" kindref="compound">amrex::GpuTuple</ref>&lt;Types*...&gt;;</highlight></codeline>
<codeline lineno="129" refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1a6d7825ead06e725a3e1a91b248a9149a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1a6d7825ead06e725a3e1a91b248a9149a" kindref="member">value_type</ref><sp/>=<sp/>ParticleType&lt;ref_wrapper&lt;Types&gt;...&gt;;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1a226d825fc52f81b473a5ccb27d0d19e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1GpuTuple" kindref="compound">raw_type</ref><sp/><ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1a226d825fc52f81b473a5ccb27d0d19e1" kindref="member">get_raw_data</ref><sp/>(<ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1a83fde477aa6104bcc887473e4804f35f" kindref="member">container_type</ref>&amp;<sp/>a_container)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_raw_data_impl(a_container,<sp/><ref refid="namespaceamrex_1ad9f3a92c061d8ad8de35370ed5ce28b8" kindref="member">amrex::makeIndexSequence</ref>&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Types)&gt;());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1aa06193aa48e202c1d61b1c00b5cb5f13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1aa06193aa48e202c1d61b1c00b5cb5f13" kindref="member">resize</ref><sp/>(<ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1a83fde477aa6104bcc887473e4804f35f" kindref="member">container_type</ref>&amp;<sp/>a_container,<sp/>std::size_t<sp/>a_size)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resize_impl(a_container,<sp/>a_size,<sp/><ref refid="namespaceamrex_1ad9f3a92c061d8ad8de35370ed5ce28b8" kindref="member">amrex::makeIndexSequence</ref>&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Types)&gt;());</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="142" refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1a0c93bb0e80cf6277ee1823f35072007a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1a0c93bb0e80cf6277ee1823f35072007a" kindref="member">push_back</ref><sp/>(<ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1a83fde477aa6104bcc887473e4804f35f" kindref="member">container_type</ref>&amp;<sp/>a_container,<sp/>ValueType&amp;&amp;<sp/>a_value)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_back_impl(a_container,<sp/>std::forward&lt;ValueType&gt;(a_value),</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ad9f3a92c061d8ad8de35370ed5ce28b8" kindref="member">amrex::makeIndexSequence</ref>&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Types)&gt;());</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1a7e8276dde25976588d90281777c5a96c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>std::size_t<sp/><ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1a7e8276dde25976588d90281777c5a96c" kindref="member">size</ref><sp/>(<ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1a83fde477aa6104bcc887473e4804f35f" kindref="member">container_type</ref>&amp;<sp/>a_container)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::get&lt;0&gt;(a_container).<ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t...<sp/>Is&gt;</highlight></codeline>
<codeline lineno="156" refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1aa16c11745de61ad7667de1cf36706c69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1aa16c11745de61ad7667de1cf36706c69" kindref="member">get_raw_data_impl</ref><sp/>(<ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1a83fde477aa6104bcc887473e4804f35f" kindref="member">container_type</ref>&amp;<sp/>a_container,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1IndexSequence" kindref="compound">amrex::IndexSequence&lt;Is...&gt;</ref>)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1GpuTuple" kindref="compound">raw_type</ref>{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Types*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;std::get&lt;Is&gt;(a_container)[0])...<sp/>};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t...<sp/>Is&gt;</highlight></codeline>
<codeline lineno="163" refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1af65492416eb92239a4558c51a294b84f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1af65492416eb92239a4558c51a294b84f" kindref="member">resize_impl</ref><sp/>(<ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1a83fde477aa6104bcc887473e4804f35f" kindref="member">container_type</ref>&amp;<sp/>a_container,<sp/>std::size_t<sp/>a_size,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1IndexSequence" kindref="compound">amrex::IndexSequence&lt;Is...&gt;</ref>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>expander<sp/>=<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[];</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>expander{<sp/>0,<sp/>(std::get&lt;Is&gt;(a_container).resize(a_size),<sp/>0)...<sp/>};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType,<sp/>std::size_t...<sp/>Is&gt;</highlight></codeline>
<codeline lineno="171" refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1a8ceb3cf68db5e57b030fcd18d42a72eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1a8ceb3cf68db5e57b030fcd18d42a72eb" kindref="member">push_back_impl</ref>(<ref refid="structamrex_1_1DataLayoutPolicy_3_01ContainerType_00_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1a83fde477aa6104bcc887473e4804f35f" kindref="member">container_type</ref>&amp;<sp/>a_container,<sp/>ValueType&amp;&amp;<sp/>a_value,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1IndexSequence" kindref="compound">amrex::IndexSequence&lt;Is...&gt;</ref>)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>expander<sp/>=<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[];</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(void)<sp/>expander{<sp/>0,<sp/>(std::get&lt;Is&gt;(a_container).push_back(</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::get&lt;Is&gt;(std::forward&lt;ValueType&gt;(a_value))),<sp/>0)...<sp/>};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal">};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ParticleType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Types&gt;</highlight></codeline>
<codeline lineno="184" refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1DataLayoutPolicyRaw" kindref="compound">DataLayoutPolicyRaw</ref>&lt;ParticleType&lt;Types...&gt;,<sp/><ref refid="namespaceamrex_1a83d03eb75adb29c552bae0a3d625895b" kindref="member">DataLayout</ref>::<ref refid="namespaceamrex_1a83d03eb75adb29c552bae0a3d625895ba7df366f0036440c84928f057941f8dad" kindref="member">SoA</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="185" refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1a9265e7f970dbc93b3f517c80c0feee50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1GpuTuple" kindref="compound">raw_type</ref><sp/>=<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1GpuTuple" kindref="compound">amrex::GpuTuple</ref>&lt;Types*...&gt;;</highlight></codeline>
<codeline lineno="186" refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1aee9e9e8e6778816545b4523b1bb0056e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1aee9e9e8e6778816545b4523b1bb0056e" kindref="member">value_type</ref><sp/>=<sp/>ParticleType&lt;ref_wrapper&lt;Types&gt;...&gt;;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="189" refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1aa4ff70bff40b0058853efd51541f24ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1aee9e9e8e6778816545b4523b1bb0056e" kindref="member">value_type</ref><sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1GpuTuple" kindref="compound">raw_type</ref>&amp;<sp/>a_tuple,<sp/>std::size_t<sp/>a_index)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1a62a2b2ccd165d829b36206f3cffb70f5" kindref="member">get_impl</ref>(a_tuple,<sp/>a_index,<sp/><ref refid="namespaceamrex_1ad9f3a92c061d8ad8de35370ed5ce28b8" kindref="member">amrex::makeIndexSequence</ref>&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(Types)&gt;());</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;std::size_t...<sp/>Is&gt;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="198" refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1ab38444d749c38719d9eaecda7650c5ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1ab38444d749c38719d9eaecda7650c5ba" kindref="member">get_impl</ref><sp/>(<ref refid="classamrex_1_1GpuTuple" kindref="compound">raw_type</ref>&amp;<sp/>a_tuple,<sp/>std::size_t<sp/>a_index,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1IndexSequence" kindref="compound">amrex::IndexSequence&lt;Is...&gt;</ref>)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicyRaw_3_01ParticleType_3_01Types_8_8_8_01_4_00_01DataLayout_1_1SoA_01_4_1aee9e9e8e6778816545b4523b1bb0056e" kindref="member">value_type</ref>{<ref refid="classamrex_1_1ref__wrapper" kindref="compound">ref_wrapper&lt;Types&gt;</ref>(amrex::get&lt;Is&gt;(a_tuple)[a_index])...<sp/>};</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal">};</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ContainerType,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ParticleType,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a83d03eb75adb29c552bae0a3d625895b" kindref="member">DataLayout</ref><sp/>DataLayoutTag&gt;</highlight></codeline>
<codeline lineno="211" refid="structamrex_1_1ParticleArray" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ParticleArray" kindref="compound">ParticleArray</ref></highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213" refid="structamrex_1_1ParticleArray_1ac7d6cb85347432af38cca8139f86111a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicy" kindref="compound">policy_type</ref><sp/>=<sp/><ref refid="structamrex_1_1DataLayoutPolicy" kindref="compound">DataLayoutPolicy&lt;ContainerType, ParticleType, DataLayoutTag&gt;</ref>;</highlight></codeline>
<codeline lineno="214" refid="structamrex_1_1ParticleArray_1abe08a1aa2e59187c8d0dc6081d804649" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleArrayAccessor" kindref="compound">accessor_type</ref><sp/>=<sp/><ref refid="structamrex_1_1ParticleArrayAccessor" kindref="compound">ParticleArrayAccessor&lt;ParticleType, DataLayoutTag&gt;</ref>;</highlight></codeline>
<codeline lineno="215" refid="structamrex_1_1ParticleArray_1ac61c23cc2289daaeb85d95dc667a2a36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleArray_1ac61c23cc2289daaeb85d95dc667a2a36" kindref="member">value_type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>policy_type::value_type;</highlight></codeline>
<codeline lineno="216" refid="structamrex_1_1ParticleArray_1a19896f3acb2bafd71e85b5eb60ae410b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleArray_1a19896f3acb2bafd71e85b5eb60ae410b" kindref="member">container_type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>policy_type::container_type;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="structamrex_1_1ParticleArray_1ae7fc3680d4c9f199f1ce4cb5e9c2892d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>data_layout<sp/>=<sp/>DataLayoutTag;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="structamrex_1_1ParticleArray_1a992f0f789c839c1fdcce16c570491de1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1ParticleArray_1a992f0f789c839c1fdcce16c570491de1" kindref="member">ParticleArray</ref><sp/>()<sp/>{<sp/>resize(0);<sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="structamrex_1_1ParticleArray_1a8deff78130d0f7f982f4a2d6ef55ceb3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1ParticleArray_1a8deff78130d0f7f982f4a2d6ef55ceb3" kindref="member">ParticleArray</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>a_size)<sp/>{<sp/>resize(a_size);<sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType&gt;</highlight></codeline>
<codeline lineno="225" refid="structamrex_1_1ParticleArray_1ac63a647b8a7225d490ce30caaf1105b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleArray_1ac63a647b8a7225d490ce30caaf1105b3" kindref="member">push_back</ref><sp/>(ValueType&amp;&amp;<sp/>val)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>policy_type::push_back(m_data,<sp/>std::forward&lt;ValueType&gt;(val));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="structamrex_1_1ParticleArray_1a164daf80e9951556f38dc0887e804c78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="structamrex_1_1ParticleArray_1a164daf80e9951556f38dc0887e804c78" kindref="member">size</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">policy_type::size</ref>(m_data);<sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="structamrex_1_1ParticleArray_1a05d3b903f74ef52b4246ec959002057a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleArray_1a05d3b903f74ef52b4246ec959002057a" kindref="member">resize</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>a_size)<sp/>{<sp/>policy_type::resize(m_data,<sp/>a_size);<sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="structamrex_1_1ParticleArray_1a86ef9aa50ef7b290e9e0d5b7efc5b003" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1ParticleArrayAccessor" kindref="compound">accessor_type</ref><sp/><ref refid="structamrex_1_1ParticleArray_1a86ef9aa50ef7b290e9e0d5b7efc5b003" kindref="member">get_particle_data</ref><sp/>()</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleArrayAccessor" kindref="compound">accessor_type</ref>(<ref refid="namespaceamrex_1_1Gpu_1_1range__detail_1a57949ca6008ad4fe7edb4e00741b1906" kindref="member">size</ref>(),<sp/>policy_type::get_raw_data(m_data));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="structamrex_1_1ParticleArray_1a0b11b0f597e0de5ea793492eaef23cd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1ParticleArray_1a19896f3acb2bafd71e85b5eb60ae410b" kindref="member">container_type</ref><sp/><ref refid="structamrex_1_1ParticleArray_1a0b11b0f597e0de5ea793492eaef23cd1" kindref="member">m_data</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">};</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ParticleType,<sp/>DataLayout<sp/>DataLayoutTag&gt;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ParticleArrayAccessor" kindref="compound">ParticleArrayAccessor</ref></highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251" refid="structamrex_1_1ParticleArrayAccessor_1a7fd6a1c4f97aa655b71ce36e4aad357d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1DataLayoutPolicyRaw" kindref="compound">policy_type</ref><sp/><sp/>=<sp/><ref refid="structamrex_1_1DataLayoutPolicyRaw" kindref="compound">DataLayoutPolicyRaw&lt;ParticleType, DataLayoutTag&gt;</ref>;</highlight></codeline>
<codeline lineno="252" refid="structamrex_1_1ParticleArrayAccessor_1ac08ef3659c93f94805a96457a9419b5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleArrayAccessor_1ac08ef3659c93f94805a96457a9419b5e" kindref="member">value_type</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>policy_type::value_type;</highlight></codeline>
<codeline lineno="253" refid="structamrex_1_1ParticleArrayAccessor_1a07ee693a6d6f19f5c34611ecc35a74b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParticleArrayAccessor_1a07ee693a6d6f19f5c34611ecc35a74b5" kindref="member">raw_type</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>policy_type::raw_type;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="structamrex_1_1ParticleArrayAccessor_1a60e4d602b27e1827b9ce6bd8d781663f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>data_layout<sp/>=<sp/>DataLayoutTag;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="structamrex_1_1ParticleArrayAccessor_1ad27aa85c57de2acbd9936f84108365c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1ParticleArrayAccessor_1ad27aa85c57de2acbd9936f84108365c9" kindref="member">ParticleArrayAccessor</ref><sp/>(std::size_t<sp/>a_size,<sp/><ref refid="structamrex_1_1ParticleArrayAccessor_1a07ee693a6d6f19f5c34611ecc35a74b5" kindref="member">raw_type</ref><sp/>a_data)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_size(a_size),<sp/>m_data(a_data)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="262" refid="structamrex_1_1ParticleArrayAccessor_1a5c651ceec4c12e5fb2905c321abc5471" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1ParticleArrayAccessor_1ac08ef3659c93f94805a96457a9419b5e" kindref="member">value_type</ref><sp/>operator[]<sp/>(std::size_t<sp/>a_index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ab4827649f3c5439adcbd2428c051a977" kindref="member">policy_type::get</ref>(m_data,<sp/>a_index);<sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="265" refid="structamrex_1_1ParticleArrayAccessor_1a1e73ca781d2a6cd7b92499a8fa188a7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="structamrex_1_1ParticleArrayAccessor_1a1e73ca781d2a6cd7b92499a8fa188a7d" kindref="member">size</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_size;<sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="268" refid="structamrex_1_1ParticleArrayAccessor_1a22fdbcda4f3aba7fe5a29d9137589c4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="structamrex_1_1ParticleArrayAccessor_1a22fdbcda4f3aba7fe5a29d9137589c4b" kindref="member">m_size</ref>;</highlight></codeline>
<codeline lineno="269" refid="structamrex_1_1ParticleArrayAccessor_1ac6fd95b2e7f736db5408bbdc3e44cbe4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1ParticleArrayAccessor_1a07ee693a6d6f19f5c34611ecc35a74b5" kindref="member">raw_type</ref><sp/><ref refid="structamrex_1_1ParticleArrayAccessor_1ac6fd95b2e7f736db5408bbdc3e44cbe4" kindref="member">m_data</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal">};</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleArray.H"/>
  </compounddef>
</doxygen>
