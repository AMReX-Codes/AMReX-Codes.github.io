<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="fnvector__mod_8f90" kind="file" language="Fortran">
    <compoundname>fnvector_mod.f90</compoundname>
    <innerclass refid="interfacefnvector__mod_1_1FN__VGetVectorID" prot="private">fnvector_mod::FN_VGetVectorID</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VClone" prot="private">fnvector_mod::FN_VClone</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VCloneEmpty" prot="private">fnvector_mod::FN_VCloneEmpty</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VDestroy" prot="private">fnvector_mod::FN_VDestroy</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VSpace" prot="private">fnvector_mod::FN_VSpace</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VGetArrayPointer" prot="private">fnvector_mod::FN_VGetArrayPointer</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VSetArrayPointer" prot="private">fnvector_mod::FN_VSetArrayPointer</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VLinearSum" prot="private">fnvector_mod::FN_VLinearSum</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VConst" prot="private">fnvector_mod::FN_VConst</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VProd" prot="private">fnvector_mod::FN_VProd</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VDiv" prot="private">fnvector_mod::FN_VDiv</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VScale" prot="private">fnvector_mod::FN_VScale</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VAbs" prot="private">fnvector_mod::FN_VAbs</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VInv" prot="private">fnvector_mod::FN_VInv</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VAddConst" prot="private">fnvector_mod::FN_VAddConst</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VDotProd" prot="private">fnvector_mod::FN_VDotProd</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VMaxNorm" prot="private">fnvector_mod::FN_VMaxNorm</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VWrmsNorm" prot="private">fnvector_mod::FN_VWrmsNorm</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VWrmsNormMask" prot="private">fnvector_mod::FN_VWrmsNormMask</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VMin" prot="private">fnvector_mod::FN_VMin</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VWL2Norm" prot="private">fnvector_mod::FN_VWL2Norm</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VL1Norm" prot="private">fnvector_mod::FN_VL1Norm</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VCompare" prot="private">fnvector_mod::FN_VCompare</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VInvTest" prot="private">fnvector_mod::FN_VInvTest</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VConstrMask" prot="private">fnvector_mod::FN_VConstrMask</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VMinQuotient" prot="private">fnvector_mod::FN_VMinQuotient</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VLinearCombination" prot="private">fnvector_mod::FN_VLinearCombination</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VScaleAddMulti" prot="private">fnvector_mod::FN_VScaleAddMulti</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VDotProdMulti" prot="private">fnvector_mod::FN_VDotProdMulti</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VLinearSumVectorArray" prot="private">fnvector_mod::FN_VLinearSumVectorArray</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VScaleVectorArray" prot="private">fnvector_mod::FN_VScaleVectorArray</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VConstVectorArray" prot="private">fnvector_mod::FN_VConstVectorArray</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VWrmsNormVectorArray" prot="private">fnvector_mod::FN_VWrmsNormVectorArray</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VWrmsNormMaskVectorArray" prot="private">fnvector_mod::FN_VWrmsNormMaskVectorArray</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VScaleAddMultiVectorArray" prot="private">fnvector_mod::FN_VScaleAddMultiVectorArray</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VLinearCombinationVectorArray" prot="private">fnvector_mod::FN_VLinearCombinationVectorArray</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VCloneEmptyVectorArray" prot="private">fnvector_mod::FN_VCloneEmptyVectorArray</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VCloneVectorArray" prot="private">fnvector_mod::FN_VCloneVectorArray</innerclass>
    <innerclass refid="interfacefnvector__mod_1_1FN__VDestroyVectorArray" prot="private">fnvector_mod::FN_VDestroyVectorArray</innerclass>
    <innernamespace refid="namespacefnvector__mod">fnvector_mod</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">!<sp/>This<sp/>file<sp/>was<sp/>automatically<sp/>generated<sp/>by<sp/>SWIG<sp/>(http://www.swig.org).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">!<sp/>Version<sp/>4.0.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">!<sp/>Do<sp/>not<sp/>make<sp/>changes<sp/>to<sp/>this<sp/>file<sp/>unless<sp/>you<sp/>know<sp/>what<sp/>you<sp/>are<sp/>doing--modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">!<sp/>the<sp/>SWIG<sp/>interface<sp/>file<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="namespacefnvector__mod" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">module</highlight><highlight class="normal"><sp/><ref refid="namespacefnvector__mod" kindref="compound">fnvector_mod</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/>use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">use<sp/></highlight><highlight class="normal"><ref refid="namespacefsundials__types__mod" kindref="compound">fsundials_types_mod</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">implicit<sp/>none</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">private</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/></highlight><highlight class="comment">!<sp/>DECLARATION<sp/>CONSTRUCTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/></highlight><highlight class="comment">!<sp/>typedef<sp/>enum<sp/>N_Vector_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/>enum,<sp/>bind(c)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>enumerator<sp/>::<sp/>sundials_nvec_serial</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>enumerator<sp/>::<sp/>sundials_nvec_parallel</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>enumerator<sp/>::<sp/>sundials_nvec_openmp</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>enumerator<sp/>::<sp/>sundials_nvec_pthreads</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>enumerator<sp/>::<sp/>sundials_nvec_parhyp</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>enumerator<sp/>::<sp/>sundials_nvec_petsc</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>enumerator<sp/>::<sp/>sundials_nvec_cuda</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>enumerator<sp/>::<sp/>sundials_nvec_raja</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>enumerator<sp/>::<sp/>sundials_nvec_openmpdev</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>enumerator<sp/>::<sp/>sundials_nvec_trilinos</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>enumerator<sp/>::<sp/>sundials_nvec_custom</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword"><sp/>end<sp/></highlight><highlight class="normal">enum</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">integer</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">parameter</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/><ref refid="namespacefnvector__mod_1a2c62d46a567b41c1a12adff72247f0bb" kindref="member">n_vector_id</ref><sp/>=<sp/>kind(sundials_nvec_serial)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>sundials_nvec_serial,<sp/>sundials_nvec_parallel,<sp/>sundials_nvec_openmp,<sp/>sundials_nvec_pthreads,<sp/>sundials_nvec_parhyp,<sp/>&amp;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>sundials_nvec_petsc,<sp/>sundials_nvec_cuda,<sp/>sundials_nvec_raja,<sp/>sundials_nvec_openmpdev,<sp/>sundials_nvec_trilinos,<sp/>&amp;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>sundials_nvec_custom</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vgetvectorid</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vclone</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vcloneempty</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vdestroy</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vspace</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vgetarraypointer</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vsetarraypointer</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vlinearsum</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vconst</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vprod</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vdiv</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vscale</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vabs</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vinv</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vaddconst</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vdotprod</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vmaxnorm</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vwrmsnorm</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vwrmsnormmask</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vmin</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vwl2norm</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vl1norm</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vcompare</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vinvtest</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vconstrmask</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vminquotient</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vlinearcombination</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vscaleaddmulti</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vdotprodmulti</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vlinearsumvectorarray</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vscalevectorarray</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vconstvectorarray</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vwrmsnormvectorarray</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vwrmsnormmaskvectorarray</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vscaleaddmultivectorarray</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vlinearcombinationvectorarray</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vcloneemptyvectorarray</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vclonevectorarray</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">public</highlight><highlight class="normal"><sp/>::<sp/>fn_vdestroyvectorarray</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">!<sp/>WRAPPER<sp/>DECLARATIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="interfacefnvector__mod_1_1FN__VGetVectorID" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vgetvectorid(w)<sp/>&amp;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VGetVectorID&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>w</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal"><sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="interfacefnvector__mod_1_1FN__VClone" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vclone(w)<sp/>&amp;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VClone&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>w</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr)<sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="interfacefnvector__mod_1_1FN__VCloneEmpty" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vcloneempty(w)<sp/>&amp;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VCloneEmpty&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>w</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr)<sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="interfacefnvector__mod_1_1FN__VDestroy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal">fn_vdestroy(v)<sp/>&amp;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VDestroy&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>v</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="interfacefnvector__mod_1_1FN__VSpace" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal">fn_vspace(v,<sp/>lrw,<sp/>liw)<sp/>&amp;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VSpace&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>v</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT64_T)</highlight><highlight class="normal"><sp/>::<sp/>lrw</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT64_T)</highlight><highlight class="normal"><sp/>::<sp/>liw</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="interfacefnvector__mod_1_1FN__VGetArrayPointer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vgetarraypointer(v)<sp/>&amp;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VGetArrayPointer&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>v</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr)<sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="interfacefnvector__mod_1_1FN__VSetArrayPointer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal">fn_vsetarraypointer(v_data,<sp/>v)<sp/>&amp;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VSetArrayPointer&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal"><sp/>::<sp/>v_data</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>v</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="interfacefnvector__mod_1_1FN__VLinearSum" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal">fn_vlinearsum(a,<sp/>x,<sp/>b,<sp/>y,<sp/>z)<sp/>&amp;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VLinearSum&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>a</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>b</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>y</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>z</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="interfacefnvector__mod_1_1FN__VConst" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal">fn_vconst(c,<sp/>z)<sp/>&amp;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VConst&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>c</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>z</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="interfacefnvector__mod_1_1FN__VProd" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal">fn_vprod(x,<sp/>y,<sp/>z)<sp/>&amp;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VProd&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>y</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>z</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="interfacefnvector__mod_1_1FN__VDiv" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal">fn_vdiv(x,<sp/>y,<sp/>z)<sp/>&amp;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VDiv&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>y</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>z</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="interfacefnvector__mod_1_1FN__VScale" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal">fn_vscale(c,<sp/>x,<sp/>z)<sp/>&amp;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VScale&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>c</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>z</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="interfacefnvector__mod_1_1FN__VAbs" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal">fn_vabs(x,<sp/>z)<sp/>&amp;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VAbs&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>z</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="interfacefnvector__mod_1_1FN__VInv" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal">fn_vinv(x,<sp/>z)<sp/>&amp;</highlight></codeline>
<codeline lineno="175"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VInv&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>z</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="interfacefnvector__mod_1_1FN__VAddConst" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal">fn_vaddconst(x,<sp/>b,<sp/>z)<sp/>&amp;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VAddConst&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>b</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>z</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="interfacefnvector__mod_1_1FN__VDotProd" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vdotprod(x,<sp/>y)<sp/>&amp;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VDotProd&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>y</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal"><sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="interfacefnvector__mod_1_1FN__VMaxNorm" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vmaxnorm(x)<sp/>&amp;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VMaxNorm&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal"><sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="interfacefnvector__mod_1_1FN__VWrmsNorm" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vwrmsnorm(x,<sp/>w)<sp/>&amp;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VWrmsNorm&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>w</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal"><sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="interfacefnvector__mod_1_1FN__VWrmsNormMask" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vwrmsnormmask(x,<sp/>w,<sp/>id)<sp/>&amp;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VWrmsNormMask&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>w</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>id</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal"><sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="interfacefnvector__mod_1_1FN__VMin" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vmin(x)<sp/>&amp;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VMin&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="228"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal"><sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="interfacefnvector__mod_1_1FN__VWL2Norm" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vwl2norm(x,<sp/>w)<sp/>&amp;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VWL2Norm&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="236"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>w</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal"><sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="interfacefnvector__mod_1_1FN__VL1Norm" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vl1norm(x)<sp/>&amp;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VL1Norm&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="245"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal"><sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="interfacefnvector__mod_1_1FN__VCompare" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal">fn_vcompare(c,<sp/>x,<sp/>z)<sp/>&amp;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VCompare&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="252"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>c</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>z</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="interfacefnvector__mod_1_1FN__VInvTest" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vinvtest(x,<sp/>z)<sp/>&amp;</highlight></codeline>
<codeline lineno="259"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VInvTest&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="261"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>z</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keywordtype">logical(C_BOOL)</highlight><highlight class="normal"><sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="interfacefnvector__mod_1_1FN__VConstrMask" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vconstrmask(c,<sp/>x,<sp/>m)<sp/>&amp;</highlight></codeline>
<codeline lineno="268"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VConstrMask&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="270"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>c</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>m</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">logical(C_BOOL)</highlight><highlight class="normal"><sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="interfacefnvector__mod_1_1FN__VMinQuotient" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vminquotient(num,<sp/>denom)<sp/>&amp;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VMinQuotient&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="280"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>num</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>denom</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal"><sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="interfacefnvector__mod_1_1FN__VLinearCombination" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vlinearcombination(nvec,<sp/>c,<sp/>x,<sp/>z)<sp/>&amp;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VLinearCombination&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="288"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>nvec</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal"><sp/>::<sp/>c</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>z</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal"><sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="interfacefnvector__mod_1_1FN__VScaleAddMulti" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vscaleaddmulti(nvec,<sp/>a,<sp/>x,<sp/>y,<sp/>z)<sp/>&amp;</highlight></codeline>
<codeline lineno="298"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VScaleAddMulti&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="299"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="300"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>nvec</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal"><sp/>::<sp/>a</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>y</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>z</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal"><sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="interfacefnvector__mod_1_1FN__VDotProdMulti" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vdotprodmulti(nvec,<sp/>x,<sp/>y,<sp/>dotprods)<sp/>&amp;</highlight></codeline>
<codeline lineno="310"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VDotProdMulti&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="311"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="312"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>nvec</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>y</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal"><sp/>::<sp/>dotprods</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal"><sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="interfacefnvector__mod_1_1FN__VLinearSumVectorArray" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vlinearsumvectorarray(nvec,<sp/>a,<sp/>x,<sp/>b,<sp/>y,<sp/>z)<sp/>&amp;</highlight></codeline>
<codeline lineno="321"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VLinearSumVectorArray&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="322"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="323"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>nvec</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>a</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>b</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>y</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>z</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal"><sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="interfacefnvector__mod_1_1FN__VScaleVectorArray" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vscalevectorarray(nvec,<sp/>c,<sp/>x,<sp/>z)<sp/>&amp;</highlight></codeline>
<codeline lineno="334"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VScaleVectorArray&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="335"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="336"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>nvec</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal"><sp/>::<sp/>c</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>z</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal"><sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="interfacefnvector__mod_1_1FN__VConstVectorArray" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vconstvectorarray(nvec,<sp/>c,<sp/>z)<sp/>&amp;</highlight></codeline>
<codeline lineno="345"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VConstVectorArray&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="346"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>nvec</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>c</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>z</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal"><sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="interfacefnvector__mod_1_1FN__VWrmsNormVectorArray" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vwrmsnormvectorarray(nvec,<sp/>x,<sp/>w,<sp/>nrm)<sp/>&amp;</highlight></codeline>
<codeline lineno="355"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VWrmsNormVectorArray&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="357"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>nvec</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>w</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal"><sp/>::<sp/>nrm</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal"><sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="interfacefnvector__mod_1_1FN__VWrmsNormMaskVectorArray" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vwrmsnormmaskvectorarray(nvec,<sp/>x,<sp/>w,<sp/>id,<sp/>nrm)<sp/>&amp;</highlight></codeline>
<codeline lineno="366"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VWrmsNormMaskVectorArray&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="367"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="368"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>nvec</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>w</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>id</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal"><sp/>::<sp/>nrm</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal"><sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="interfacefnvector__mod_1_1FN__VScaleAddMultiVectorArray" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vscaleaddmultivectorarray(nvec,<sp/>nsum,<sp/>a,<sp/>x,<sp/>y,<sp/>z)<sp/>&amp;</highlight></codeline>
<codeline lineno="378"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VScaleAddMultiVectorArray&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="379"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="380"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>nvec</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>nsum</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal"><sp/>::<sp/>a</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>y</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>z</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal"><sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="interfacefnvector__mod_1_1FN__VLinearCombinationVectorArray" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vlinearcombinationvectorarray(nvec,<sp/>nsum,<sp/>c,<sp/>x,<sp/>z)<sp/>&amp;</highlight></codeline>
<codeline lineno="391"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VLinearCombinationVectorArray&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="392"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>nvec</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>nsum</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keywordtype">real(C_DOUBLE)</highlight><highlight class="normal"><sp/>::<sp/>c</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>x</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>z</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal"><sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="interfacefnvector__mod_1_1FN__VCloneEmptyVectorArray" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vcloneemptyvectorarray(count,<sp/>w)<sp/>&amp;</highlight></codeline>
<codeline lineno="403"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VCloneEmptyVectorArray&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="404"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="405"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>count</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>w</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr)<sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="interfacefnvector__mod_1_1FN__VCloneVectorArray" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">function<sp/></highlight><highlight class="normal">fn_vclonevectorarray(count,<sp/>w)<sp/>&amp;</highlight></codeline>
<codeline lineno="412"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VCloneVectorArray&quot;</highlight><highlight class="normal">)<sp/>&amp;</highlight></codeline>
<codeline lineno="413"><highlight class="normal">result(fresult)</highlight></codeline>
<codeline lineno="414"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>count</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>w</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr)<sp/>::<sp/>fresult</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="interfacefnvector__mod_1_1FN__VDestroyVectorArray" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">subroutine<sp/></highlight><highlight class="normal">fn_vdestroyvectorarray(vs,<sp/>count)<sp/>&amp;</highlight></codeline>
<codeline lineno="421"><highlight class="normal">bind(c,<sp/>name=</highlight><highlight class="stringliteral">&quot;N_VDestroyVectorArray&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="422"><highlight class="normal">use,<sp/></highlight><highlight class="keywordtype">intrinsic</highlight><highlight class="normal"><sp/>::<sp/>iso_c_binding</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="keywordtype">type</highlight><highlight class="normal">(c_ptr),<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>vs</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keywordtype">integer(C_INT)</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">value</highlight><highlight class="normal"><sp/>::<sp/>count</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>subroutine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="keyword">end<sp/>module</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/SUNDIALS4/fnvector_mod.f90"/>
  </compounddef>
</doxygen>
