<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classamrex_1_1FillPatchIterator" kind="class" language="C++" prot="public">
    <compoundname>amrex::FillPatchIterator</compoundname>
    <basecompoundref refid="classamrex_1_1MFIter" prot="public" virt="non-virtual">amrex::MFIter</basecompoundref>
    <includes refid="AMReX__AmrLevel_8H" local="no">AMReX_AmrLevel.H</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classamrex_1_1FillPatchIterator_1ade3e9c0f92befd31e9f3991e09e56ea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class AmrLevel</definition>
        <argsstring></argsstring>
        <name>AmrLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="456" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="456" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1FillPatchIterator_1a46fe436cf49ee7a1d997483554a1966a" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref> &amp;</type>
        <definition>AmrLevel&amp; amrex::FillPatchIterator::m_amrlevel</definition>
        <argsstring></argsstring>
        <name>m_amrlevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="497" column="38" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIterator_1ad4440122fa2d2e2f66a50fba97d62586" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
        <definition>MultiFab&amp; amrex::FillPatchIterator::m_leveldata</definition>
        <argsstring></argsstring>
        <name>m_leveldata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="498" column="38" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIterator_1a33de9fa05506431fd65c4134ce8ce573" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt;</type>
        <definition>std::vector&lt; std::pair&lt;int,int&gt; &gt; amrex::FillPatchIterator::m_range</definition>
        <argsstring></argsstring>
        <name>m_range</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="499" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIterator_1ab816646d06cbb8bde38ec73d3cad1303" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::FillPatchIterator::m_fabs</definition>
        <argsstring></argsstring>
        <name>m_fabs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="500" column="39" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="500" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1FillPatchIterator_1a7614b1bf508cfb79fd233bf3c7527b00" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::FillPatchIterator::m_ncomp</definition>
        <argsstring></argsstring>
        <name>m_ncomp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="501" column="39" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="501" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1aebdca878a23ab164decbcdd3bc1a9a20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FillPatchIterator::FillPatchIterator</definition>
        <argsstring>(AmrLevel &amp;amrlevel, MultiFab &amp;leveldata)</argsstring>
        <name>FillPatchIterator</name>
        <param>
          <type><ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref> &amp;</type>
          <declname>amrlevel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>leveldata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="458" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp" bodystart="666" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1aadd026240dc35d11a31ed27a8044f4e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FillPatchIterator::FillPatchIterator</definition>
        <argsstring>(AmrLevel &amp;amrlevel, MultiFab &amp;leveldata, int boxGrow, Real time, int state_indx, int scomp, int ncomp)</argsstring>
        <name>FillPatchIterator</name>
        <param>
          <type><ref refid="classamrex_1_1AmrLevel" kindref="compound">AmrLevel</ref> &amp;</type>
          <declname>amrlevel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>leveldata</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>boxGrow</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>state_indx</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="461" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp" bodystart="698" bodyend="722"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1af5802a6775fcd2b458844dc37c1c6f29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FillPatchIterator::Initialize</definition>
        <argsstring>(int boxGrow, Real time, int state_indx, int scomp, int ncomp)</argsstring>
        <name>Initialize</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>boxGrow</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>state_indx</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="469" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp" bodystart="982" bodyend="1092"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1a11cdfec72e349c0312a44f1238e209d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FillPatchIterator::~FillPatchIterator</definition>
        <argsstring>()</argsstring>
        <name>~FillPatchIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="475" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp" bodystart="1510" bodyend="1510"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1a0057542962ff6d94256f3acb727ef870" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &amp;</type>
        <definition>FArrayBox&amp; amrex::FillPatchIterator::operator()</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator()</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="477" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="477" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1a7bb682831638917318e9f87fee6871af" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref></type>
        <definition>Box amrex::FillPatchIterator::UngrownBox</definition>
        <argsstring>() const noexcept</argsstring>
        <name>UngrownBox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="479" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="479" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1a43b2cf5d4684fbb2c23776d786efecdd" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
        <definition>MultiFab&amp; amrex::FillPatchIterator::get_mf</definition>
        <argsstring>() noexcept</argsstring>
        <name>get_mf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="481" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="481" bodyend="481"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1a4f7ab2de501c939a837ce864ec0cb513" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FillPatchIterator::FillPatchIterator</definition>
        <argsstring>()</argsstring>
        <name>FillPatchIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="487" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1a4f431029cd9fd851184dbe10107ff273" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::FillPatchIterator::FillPatchIterator</definition>
        <argsstring>(const FillPatchIterator &amp;rhs)</argsstring>
        <name>FillPatchIterator</name>
        <param>
          <type>const <ref refid="classamrex_1_1FillPatchIterator" kindref="compound">FillPatchIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="488" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1aa65703406becd33b424efc5a298d7f64" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1FillPatchIterator" kindref="compound">FillPatchIterator</ref> &amp;</type>
        <definition>FillPatchIterator&amp; amrex::FillPatchIterator::operator=</definition>
        <argsstring>(const FillPatchIterator &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1FillPatchIterator" kindref="compound">FillPatchIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="489" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1af7335d2d909e39e4921f9ca699e52b0a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FillPatchIterator::FillFromLevel0</definition>
        <argsstring>(Real time, int index, int scomp, int dcomp, int ncomp)</argsstring>
        <name>FillFromLevel0</name>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="491" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp" bodystart="1095" bodyend="1110"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1FillPatchIterator_1ac1229b67deb9f544baff571f5d76593f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::FillPatchIterator::FillFromTwoLevels</definition>
        <argsstring>(Real time, int index, int scomp, int dcomp, int ncomp)</argsstring>
        <name>FillFromTwoLevels</name>
        <param>
          <type>Real</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dcomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="492" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp" bodystart="1113" bodyend="1150"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>amrex::MFIter</label>
        <link refid="classamrex_1_1MFIter"/>
      </node>
      <node id="1">
        <label>amrex::FillPatchIterator</label>
        <link refid="classamrex_1_1FillPatchIterator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="72">
        <label>amrex::BaseFab&lt; Real &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="73" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
        <childnode refid="76" relation="usage">
          <edgelabel>dptr</edgelabel>
        </childnode>
      </node>
      <node id="116">
        <label>amrex::LevelBld</label>
        <link refid="classamrex_1_1LevelBld"/>
      </node>
      <node id="81">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="106">
        <label>std::vector&lt; amrex::BoxArray, std::allocator&lt; amrex::BoxArray &gt; &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::MFIter</label>
        <link refid="classamrex_1_1MFIter"/>
        <childnode refid="3" relation="usage">
          <edgelabel>fabArray</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>tile_size</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>index_map</edgelabel>
          <edgelabel>local_index_map</edgelabel>
          <edgelabel>local_tile_index_map</edgelabel>
          <edgelabel>num_local_tiles</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>tile_array</edgelabel>
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>m_fa</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>device_sync</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>typ</edgelabel>
        </childnode>
      </node>
      <node id="89">
        <label>std::vector&lt; std::pair&lt; int, int &gt; &gt;</label>
      </node>
      <node id="24">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="25" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="90">
        <label>amrex::AmrLevel</label>
        <link refid="classamrex_1_1AmrLevel"/>
        <childnode refid="91" relation="usage">
          <edgelabel>derive_lst</edgelabel>
        </childnode>
        <childnode refid="97" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
        <childnode refid="123" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="126" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="128" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
        <childnode refid="130" relation="usage">
          <edgelabel>desc_lst</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>dmap</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>fine_ratio</edgelabel>
          <edgelabel>crse_ratio</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_AreaToTag</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>nodal_grids</edgelabel>
          <edgelabel>grids</edgelabel>
          <edgelabel>m_AreaNotToTag</edgelabel>
          <edgelabel>edge_grids</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>amrex::BoxList</label>
        <link refid="classamrex_1_1BoxList"/>
        <childnode refid="17" relation="usage">
          <edgelabel>m_lbox</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="31">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="75">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="44">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="11" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="78">
        <label>std::unique_ptr&lt; amrex::FBData&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="79" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>std::vector&lt; amrex::Box, std::allocator&lt; amrex::Box &gt; &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="115">
        <label>std::vector&lt; std::unique_ptr&lt; std::fstream &gt;, std::allocator&lt; std::unique_ptr&lt; std::fstream &gt; &gt; &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="91">
        <label>amrex::DeriveList</label>
        <link refid="classamrex_1_1DeriveList"/>
        <childnode refid="92" relation="usage">
          <edgelabel>lst</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>std::map&lt; amrex::FabArrayBase::BDKey, int &gt;</label>
        <childnode refid="12" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="46">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="95">
        <label>amrex::InterpBase</label>
        <link refid="classamrex_1_1InterpBase"/>
      </node>
      <node id="5">
        <label>K</label>
      </node>
      <node id="45">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="9">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="9" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>T</label>
      </node>
      <node id="113">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::AmrLevel &gt;, std::allocator&lt; std::unique_ptr&lt; amrex::AmrLevel &gt; &gt; &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="61">
        <label>amrex::FabArrayBase::CommMetaData</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CommMetaData"/>
        <childnode refid="62" relation="usage">
          <edgelabel>m_RcvTags</edgelabel>
          <edgelabel>m_SndTags</edgelabel>
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>m_LocTags</edgelabel>
        </childnode>
      </node>
      <node id="96">
        <label>amrex::DeriveRec::StateRange</label>
        <link refid="structamrex_1_1DeriveRec_1_1StateRange"/>
        <childnode refid="96" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="83">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="50" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="52">
        <label>amrex::FabFactory&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="112">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::AmrLevel &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="47">
        <label>std::unique_ptr&lt; amrex::FabArrayBase &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="76">
        <label>Real</label>
      </node>
      <node id="108">
        <label>std::vector&lt; amrex::Geometry, std::allocator&lt; amrex::Geometry &gt; &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="98">
        <label>amrex::AmrCore</label>
        <link refid="classamrex_1_1AmrCore"/>
        <childnode refid="99" relation="public-inheritance">
        </childnode>
      </node>
      <node id="64">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="132">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::StateDescriptor &gt;, std::allocator&lt; std::unique_ptr&lt; amrex::StateDescriptor &gt; &gt; &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="68">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="69" relation="public-inheritance">
        </childnode>
      </node>
      <node id="92">
        <label>std::list&lt; amrex::DeriveRec &gt;</label>
        <childnode refid="93" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="87">
        <label>amrex::MultiArray4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
        <childnode refid="88" relation="usage">
          <edgelabel>hp</edgelabel>
          <edgelabel>dp</edgelabel>
        </childnode>
      </node>
      <node id="122">
        <label>std::list&lt; std::string &gt;</label>
        <childnode refid="25" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="73">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="74" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="85">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="53">
        <label>amrex::MultiArray4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
        <childnode refid="54" relation="usage">
          <edgelabel>hp</edgelabel>
          <edgelabel>dp</edgelabel>
        </childnode>
      </node>
      <node id="88">
        <label>amrex::Array4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1Array4"/>
        <childnode refid="55" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="103">
        <label>amrex::Vector&lt; amrex::DistributionMapping &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="104" relation="public-inheritance">
        </childnode>
      </node>
      <node id="118">
        <label>std::basic_ofstream&lt; char &gt;</label>
        <childnode refid="119" relation="public-inheritance">
        </childnode>
      </node>
      <node id="109">
        <label>std::multimap&lt; std::pair&lt; int, int &gt;, double &gt;</label>
      </node>
      <node id="4">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="74">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="75" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="65">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="9" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="97">
        <label>amrex::Amr</label>
        <link refid="classamrex_1_1Amr"/>
        <childnode refid="98" relation="public-inheritance">
        </childnode>
        <childnode refid="109" relation="usage">
          <edgelabel>intersect_lox</edgelabel>
          <edgelabel>intersect_loy</edgelabel>
          <edgelabel>intersect_loz</edgelabel>
          <edgelabel>intersect_hix</edgelabel>
          <edgelabel>intersect_hiy</edgelabel>
          <edgelabel>intersect_hiz</edgelabel>
        </childnode>
        <childnode refid="110" relation="usage">
          <edgelabel>dt_min</edgelabel>
          <edgelabel>dt_level</edgelabel>
        </childnode>
        <childnode refid="112" relation="usage">
          <edgelabel>amr_level</edgelabel>
        </childnode>
        <childnode refid="84" relation="usage">
          <edgelabel>datalogname</edgelabel>
        </childnode>
        <childnode refid="114" relation="usage">
          <edgelabel>datalog</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>n_cycle</edgelabel>
          <edgelabel>level_count</edgelabel>
          <edgelabel>regrid_int</edgelabel>
          <edgelabel>level_steps</edgelabel>
        </childnode>
        <childnode refid="116" relation="usage">
          <edgelabel>levelbld</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>small_plot_file_root</edgelabel>
          <edgelabel>initial_grids_file</edgelabel>
          <edgelabel>check_file_root</edgelabel>
          <edgelabel>regrid_grids_file</edgelabel>
          <edgelabel>subcycling_mode</edgelabel>
          <edgelabel>plot_file_root</edgelabel>
          <edgelabel>restart_chkfile</edgelabel>
          <edgelabel>probin_file</edgelabel>
          <edgelabel>restart_pltfile</edgelabel>
        </childnode>
        <childnode refid="105" relation="usage">
          <edgelabel>regrid_ba</edgelabel>
          <edgelabel>initial_ba</edgelabel>
        </childnode>
        <childnode refid="117" relation="usage">
          <edgelabel>gridlog</edgelabel>
          <edgelabel>runlog</edgelabel>
          <edgelabel>runlog_terse</edgelabel>
        </childnode>
        <childnode refid="122" relation="usage">
          <edgelabel>state_plot_vars</edgelabel>
          <edgelabel>state_small_plot_vars</edgelabel>
          <edgelabel>derive_small_plot_vars</edgelabel>
          <edgelabel>derive_plot_vars</edgelabel>
        </childnode>
        <childnode refid="76" relation="usage">
          <edgelabel>check_per</edgelabel>
          <edgelabel>start_time</edgelabel>
          <edgelabel>small_plot_per</edgelabel>
          <edgelabel>plot_log_per</edgelabel>
          <edgelabel>cumtime</edgelabel>
          <edgelabel>plot_per</edgelabel>
          <edgelabel>small_plot_log_per</edgelabel>
          <edgelabel>loadbalance_max_fac</edgelabel>
        </childnode>
      </node>
      <node id="67">
        <label>std::vector&lt; char *, std::allocator&lt; char * &gt; &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="79">
        <label>amrex::FBData&lt; FArrayBox &gt;</label>
        <link refid="structamrex_1_1FBData"/>
        <childnode refid="58" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>nghost</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="66" relation="usage">
          <edgelabel>recv_data</edgelabel>
          <edgelabel>send_data</edgelabel>
        </childnode>
        <childnode refid="80" relation="usage">
          <edgelabel>recv_stat</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>send_reqs</edgelabel>
          <edgelabel>recv_reqs</edgelabel>
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>fb</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>std::map&lt; std::string, amrex::FabArrayBase::meminfo &gt;</label>
        <childnode refid="30" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="111">
        <label>std::vector&lt; Real, std::allocator&lt; Real &gt; &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="14">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="9" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
      </node>
      <node id="105">
        <label>amrex::Vector&lt; amrex::BoxArray &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="106" relation="public-inheritance">
        </childnode>
      </node>
      <node id="82">
        <label>amrex::FabArrayBase::FB</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FB"/>
        <childnode refid="61" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_ngrow</edgelabel>
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>m_period</edgelabel>
        </childnode>
      </node>
      <node id="66">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="67" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="40" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="117">
        <label>std::ofstream</label>
        <childnode refid="118" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="86">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="94">
        <label>amrex::Interpolater</label>
        <link refid="classamrex_1_1Interpolater"/>
        <childnode refid="95" relation="public-inheritance">
        </childnode>
      </node>
      <node id="93">
        <label>amrex::DeriveRec</label>
        <link refid="classamrex_1_1DeriveRec"/>
        <childnode refid="84" relation="usage">
          <edgelabel>variable_names</edgelabel>
        </childnode>
        <childnode refid="94" relation="usage">
          <edgelabel>mapper</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>derive_name</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>bx_map</edgelabel>
          <edgelabel>func_fab</edgelabel>
        </childnode>
        <childnode refid="96" relation="usage">
          <edgelabel>rng</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>der_type</edgelabel>
        </childnode>
      </node>
      <node id="127">
        <label>amrex::FabFactory&lt; amrex::FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="40">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="41" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
      </node>
      <node id="70">
        <label>std::vector&lt; FArrayBox * &gt;</label>
        <childnode refid="71" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="60">
        <label>amrex::FabArrayBase::CPC</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CPC"/>
        <childnode refid="61" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_srcng</edgelabel>
          <edgelabel>m_dstng</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_dstbdk</edgelabel>
          <edgelabel>m_srcbdk</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>m_srcba</edgelabel>
          <edgelabel>m_dstba</edgelabel>
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>m_period</edgelabel>
        </childnode>
      </node>
      <node id="55">
        <label>amrex::Dim3</label>
        <link refid="structamrex_1_1Dim3"/>
      </node>
      <node id="104">
        <label>std::vector&lt; amrex::DistributionMapping, std::allocator&lt; amrex::DistributionMapping &gt; &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::FillPatchIterator</label>
        <link refid="classamrex_1_1FillPatchIterator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>m_leveldata</edgelabel>
          <edgelabel>m_fabs</edgelabel>
        </childnode>
        <childnode refid="89" relation="usage">
          <edgelabel>m_range</edgelabel>
        </childnode>
        <childnode refid="90" relation="usage">
          <edgelabel>m_amrlevel</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="101">
        <label>amrex::Vector&lt; amrex::IntVect &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="102" relation="public-inheritance">
        </childnode>
      </node>
      <node id="69">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="114">
        <label>amrex::Vector&lt; std::unique_ptr&lt; std::fstream &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="115" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>std::multimap&lt; K, T &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="36" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="128">
        <label>amrex::Vector&lt; amrex::StateData &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="129" relation="public-inheritance">
        </childnode>
      </node>
      <node id="34">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="25" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="125">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="76" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="54">
        <label>amrex::Array4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1Array4"/>
        <childnode refid="55" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="9" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="56">
        <label>std::unique_ptr&lt; amrex::PCData&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="57" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="20" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>std::shared_ptr&lt; amrex::DistributionMapping::Ref &gt;</label>
        <childnode refid="20" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="80">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="81" relation="public-inheritance">
        </childnode>
      </node>
      <node id="129">
        <label>std::vector&lt; amrex::StateData, std::allocator&lt; amrex::StateData &gt; &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="124">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="76" relation="usage">
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
          <edgelabel>dx</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>amrex::FabArrayBase::ParForInfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1ParForInfo"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_ng</edgelabel>
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_boxes</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="62">
        <label>std::unique_ptr&lt; MapOfCopyComTagContainers &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="119">
        <label>std::basic_ostream&lt; Char &gt;</label>
        <childnode refid="120" relation="public-inheritance">
        </childnode>
      </node>
      <node id="120">
        <label>std::basic_ios&lt; Char &gt;</label>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="131">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::StateDescriptor &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="132" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="21" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>m_ownership</edgelabel>
        </childnode>
      </node>
      <node id="100">
        <label>amrex::AmrInfo</label>
        <link refid="structamrex_1_1AmrInfo"/>
        <childnode refid="101" relation="usage">
          <edgelabel>blocking_factor</edgelabel>
          <edgelabel>n_error_buf</edgelabel>
          <edgelabel>max_grid_size</edgelabel>
          <edgelabel>ref_ratio</edgelabel>
        </childnode>
        <childnode refid="76" relation="usage">
          <edgelabel>grid_eff</edgelabel>
        </childnode>
      </node>
      <node id="84">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="85" relation="public-inheritance">
        </childnode>
      </node>
      <node id="77">
        <label>amrex::FABio</label>
        <link refid="classamrex_1_1FABio"/>
      </node>
      <node id="121">
        <label>std::ios_base</label>
      </node>
      <node id="126">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; amrex::FArrayBox &gt; &gt;</label>
        <childnode refid="127" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>amrex::FabArrayBase::meminfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1meminfo"/>
      </node>
      <node id="130">
        <label>amrex::DescriptorList</label>
        <link refid="classamrex_1_1DescriptorList"/>
        <childnode refid="131" relation="usage">
          <edgelabel>desc</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
        <childnode refid="28" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="13" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="102">
        <label>std::vector&lt; amrex::IntVect, std::allocator&lt; amrex::IntVect &gt; &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="110">
        <label>amrex::Vector&lt; Real &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="111" relation="public-inheritance">
        </childnode>
      </node>
      <node id="51">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="52" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="49">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="50" relation="public-inheritance">
        </childnode>
      </node>
      <node id="123">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="124" relation="public-inheritance">
        </childnode>
        <childnode refid="125" relation="usage">
          <edgelabel>roundoff_domain</edgelabel>
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
        <childnode refid="38" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="107">
        <label>amrex::Vector&lt; amrex::Geometry &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="108" relation="public-inheritance">
        </childnode>
      </node>
      <node id="71">
        <label>amrex::FArrayBox</label>
        <link refid="classamrex_1_1FArrayBox"/>
        <childnode refid="72" relation="public-inheritance">
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>fabio</edgelabel>
        </childnode>
        <childnode refid="76" relation="usage">
          <edgelabel>initval</edgelabel>
        </childnode>
      </node>
      <node id="50">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="51" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="70" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="78" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="73" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="83" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
        <childnode refid="84" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="86" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="87" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
      </node>
      <node id="58">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="59" relation="public-inheritance">
        </childnode>
      </node>
      <node id="99">
        <label>amrex::AmrMesh</label>
        <link refid="classamrex_1_1AmrMesh"/>
        <childnode refid="100" relation="protected-inheritance">
        </childnode>
        <childnode refid="103" relation="usage">
          <edgelabel>dmap</edgelabel>
        </childnode>
        <childnode refid="105" relation="usage">
          <edgelabel>grids</edgelabel>
        </childnode>
        <childnode refid="107" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="14" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::multimap&lt; amrex::FabArrayBase::BDKey, amrex::FabArrayBase::ParForInfo * &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>amrex::Vector&lt; amrex::Box &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="57">
        <label>amrex::PCData&lt; FArrayBox &gt;</label>
        <link refid="structamrex_1_1PCData"/>
        <childnode refid="58" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>cpc</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>snghost</edgelabel>
          <edgelabel>dnghost</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="66" relation="usage">
          <edgelabel>recv_data</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>src</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>send_reqs</edgelabel>
          <edgelabel>recv_reqs</edgelabel>
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_TheTileArrayCache</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_TheParForCache</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>m_mem_usage</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>m_BD_count</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>m_TheRB90Cache</edgelabel>
          <edgelabel>m_TheRB180Cache</edgelabel>
          <edgelabel>m_TheFillPatchCache</edgelabel>
          <edgelabel>m_TheCPCache</edgelabel>
          <edgelabel>m_TheFBCache</edgelabel>
          <edgelabel>m_TheCrseFineCache</edgelabel>
          <edgelabel>m_ThePolarBCache</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>ownership</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>m_region_tag</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
      </node>
      <node id="59">
        <label>std::vector&lt; std::size_t, std::allocator&lt; std::size_t &gt; &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>std::vector&lt; int &gt;</label>
      </node>
      <node id="48">
        <label>amrex::MFIter::DeviceSync</label>
        <link refid="structamrex_1_1MFIter_1_1DeviceSync"/>
      </node>
      <node id="25">
        <label>std::string</label>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="63">
        <label>std::unique_ptr&lt; CopyComTagsContainer &gt;</label>
        <childnode refid="64" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" line="453" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H" bodystart="450" bodyend="502"/>
    <listofallmembers>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38a96650cf6d7f0f21d0f4b118ae897d008" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>AllBoxes</name></member>
      <member refid="classamrex_1_1MFIter_1ab2fc387b6146040c8efcef278b258f78" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>allow_multiple_mfiters</name></member>
      <member refid="classamrex_1_1MFIter_1a3a8a7a77b913c5ddc8b352f2610e9cd1" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>allowMultipleMFIters</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1ade3e9c0f92befd31e9f3991e09e56ea4" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>AmrLevel</name></member>
      <member refid="classamrex_1_1MFIter_1a65b335b52bc54d9eaf7030a4fce20cf8" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>beginIndex</name></member>
      <member refid="classamrex_1_1MFIter_1abfba09b9f27138141e9758d1a8ea2e4b" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>currentIndex</name></member>
      <member refid="classamrex_1_1MFIter_1a46b0a938c3d5f41c379d0adc7bf19c0d" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>depth</name></member>
      <member refid="classamrex_1_1MFIter_1a55734d57f0abbb384833f35c1a5422ef" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>device_sync</name></member>
      <member refid="classamrex_1_1MFIter_1a47d2e159ed2d66cd78498ea5bea35a17" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>DistributionMap</name></member>
      <member refid="classamrex_1_1MFIter_1a16fa2d144bcc71d665056de5938c4b32" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>dynamic</name></member>
      <member refid="classamrex_1_1MFIter_1a427faab13c7d1f9d72b476452df519e1" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>endIndex</name></member>
      <member refid="classamrex_1_1MFIter_1a198baf9d7f4a208f217569a0c6f02183" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>fabArray</name></member>
      <member refid="classamrex_1_1MFIter_1a3290eb14472377e0118842344967a44c" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>fabbox</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1af7335d2d909e39e4921f9ca699e52b0a" prot="private" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>FillFromLevel0</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1ac1229b67deb9f544baff571f5d76593f" prot="private" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>FillFromTwoLevels</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1aebdca878a23ab164decbcdd3bc1a9a20" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>FillPatchIterator</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1aadd026240dc35d11a31ed27a8044f4e0" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>FillPatchIterator</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1a4f7ab2de501c939a837ce864ec0cb513" prot="private" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>FillPatchIterator</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1a4f431029cd9fd851184dbe10107ff273" prot="private" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>FillPatchIterator</name></member>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>Flags</name></member>
      <member refid="classamrex_1_1MFIter_1a1184620f493f560be355cf02e5a0e619" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>flags</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1a43b2cf5d4684fbb2c23776d786efecdd" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>get_mf</name></member>
      <member refid="classamrex_1_1MFIter_1ae59e3e67c7b94d6b15158d177dd8cdc8" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>grownnodaltilebox</name></member>
      <member refid="classamrex_1_1MFIter_1a972ba6223b0f4ccca81791b9510b3002" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>grownnodaltilebox</name></member>
      <member refid="classamrex_1_1MFIter_1a1e344ffd39d3dba95d582a7d93c1ad97" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>growntilebox</name></member>
      <member refid="classamrex_1_1MFIter_1ac9653cce066f73c95c3ec89f46f38ba1" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>growntilebox</name></member>
      <member refid="classamrex_1_1MFIter_1aa69f73dbf7931e2d0a3889de2db4a42b" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>index</name></member>
      <member refid="classamrex_1_1MFIter_1ac482cbbf5ecee6f2593a3e4437623082" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>index_map</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1af5802a6775fcd2b458844dc37c1c6f29" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1MFIter_1addaa9305a4ee5dda972e835164b70e29" prot="protected" virt="non-virtual" ambiguityscope="amrex::MFIter::"><scope>amrex::FillPatchIterator</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>isValid</name></member>
      <member refid="classamrex_1_1MFIter_1a3658deeec368fbc6be8f9555ac37bab5" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>length</name></member>
      <member refid="classamrex_1_1MFIter_1a8a8cdb1fbae0dace9fcc0dc622c3409d" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>local_index_map</name></member>
      <member refid="classamrex_1_1MFIter_1a72828c9a333be0dfff3e89e350fd0e11" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>local_tile_index_map</name></member>
      <member refid="classamrex_1_1MFIter_1ab9afc4ebb6b729bcecdba6b22a317e88" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>LocalIndex</name></member>
      <member refid="classamrex_1_1MFIter_1a02c0b04b49bf0116bc21ee53e3593225" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>LocalTileIndex</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1a46fe436cf49ee7a1d997483554a1966a" prot="private" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>m_amrlevel</name></member>
      <member refid="classamrex_1_1MFIter_1ae0aa4364654842ee9aaba3d573fb6b01" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>m_fa</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1ab816646d06cbb8bde38ec73d3cad1303" prot="private" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>m_fabs</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1ad4440122fa2d2e2f66a50fba97d62586" prot="private" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>m_leveldata</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1a7614b1bf508cfb79fd233bf3c7527b00" prot="private" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>m_ncomp</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1a33de9fa05506431fd65c4134ce8ce573" prot="private" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>m_range</name></member>
      <member refid="classamrex_1_1MFIter_1aac055187a5b4d7200fc77827dc28a76c" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1ae7623281ac9e772db1fc5085a64aeeca" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a1d9668de99635aa50096d0f091d8b9b0" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a830e42aee76ec9fe8dae8bdd262e0b2d" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1ad7a19e95ba128febb94b27d2a9d97ef1" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a970e636bf6a2d744068483806ddb7944" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a2c0a016e1d5d69073f2cab81e7c6a095" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1aecfd3f3ef12e8703caad5794968ff06a" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a66b92b6dbfbe1a498ba614df28817709" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>MFIter</name></member>
      <member refid="classamrex_1_1MFIter_1a07296b12634219c4a15337435852a67b" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>nextDynamicIndex</name></member>
      <member refid="classamrex_1_1MFIter_1a7a17b4a775ec84d2987cb480c38ed271" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>nodaltilebox</name></member>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38af1e51da50b24860035a3665786fe9d14" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>NoTeamBarrier</name></member>
      <member refid="classamrex_1_1MFIter_1a967c3c48ccb4f316911d06fcaccb29fa" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>num_local_tiles</name></member>
      <member refid="classamrex_1_1MFIter_1afbbd9093cd125af3cebbc8f8231bb142" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>numLocalTiles</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1a0057542962ff6d94256f3acb727ef870" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>operator()</name></member>
      <member refid="classamrex_1_1MFIter_1aec727f262b8f91587f66613da26fcbbb" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>operator++</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1aa65703406becd33b424efc5a298d7f64" prot="private" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>operator=</name></member>
      <member refid="classamrex_1_1MFIter_1a6387ff79e8fcfbfdcfbc7dd8d8e78621" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>streams</name></member>
      <member refid="classamrex_1_1MFIter_1a8a7f84508a19797af16e5f3f6b13523c" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>theFabArrayBase</name></member>
      <member refid="classamrex_1_1MFIter_1a10b2f0f6900d23295fe25fd526153f43" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>tile_array</name></member>
      <member refid="classamrex_1_1MFIter_1ae64d80e0b2d14e9209c426a0654e8a1f" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>tile_size</name></member>
      <member refid="classamrex_1_1MFIter_1a4633394eac1ff3355fe082b815ed7413" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>tilebox</name></member>
      <member refid="classamrex_1_1MFIter_1aade25ad6c9b6b92a5dbe2e022fc77912" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>tilebox</name></member>
      <member refid="classamrex_1_1MFIter_1a3563f863ba15b874a9abd0dc338c0c72" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>tilebox</name></member>
      <member refid="classamrex_1_1MFIter_1a3d73098e8ef5205fc2bce58d5ed0f21b" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>tileIndex</name></member>
      <member refid="classamrex_1_1MFIter_1af5cf94bce73f6da744dd94acc46cdf38a1db74b1bbdeb756077e4bc33e25a2740" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>Tiling</name></member>
      <member refid="classamrex_1_1MFIter_1a1406cbb9152b357a39e877b78eb8ff0d" prot="protected" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>typ</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1a7bb682831638917318e9f87fee6871af" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>UngrownBox</name></member>
      <member refid="classamrex_1_1MFIter_1a77ae102619461dabde09c7801390b841" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>validbox</name></member>
      <member refid="classamrex_1_1FillPatchIterator_1a11cdfec72e349c0312a44f1238e209d6" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>~FillPatchIterator</name></member>
      <member refid="classamrex_1_1MFIter_1aac3223d243bff8f86cbd227b8f1af866" prot="public" virt="non-virtual"><scope>amrex::FillPatchIterator</scope><name>~MFIter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
