<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structamrex_1_1SparseBinIteratorFactory" kind="struct" language="C++" prot="public">
    <compoundname>amrex::SparseBinIteratorFactory</compoundname>
    <includes refid="AMReX__SparseBins_8H" local="no">AMReX_SparseBins.H</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structamrex_1_1SparseBinIteratorFactory_1af3b2075ffb37148df43247481a6acf79" prot="public" static="no">
        <type>unsigned int</type>
        <definition>using amrex::SparseBinIteratorFactory&lt; T &gt;::index_type =  unsigned int</definition>
        <argsstring></argsstring>
        <name>index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H" line="16" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1SparseBinIteratorFactory_1afa3d2fe979810d8c42a56913e808c53d" prot="public" static="no" mutable="no">
        <type>const <ref refid="structamrex_1_1SparseBinIteratorFactory_1af3b2075ffb37148df43247481a6acf79" kindref="member">index_type</ref> *</type>
        <definition>const index_type* amrex::SparseBinIteratorFactory&lt; T &gt;::m_bins_ptr</definition>
        <argsstring></argsstring>
        <name>m_bins_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H" line="57" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1SparseBinIteratorFactory_1ade6704bbc963e4c3734bd2348e79847b" prot="public" static="no" mutable="no">
        <type>const <ref refid="structamrex_1_1SparseBinIteratorFactory_1af3b2075ffb37148df43247481a6acf79" kindref="member">index_type</ref> *</type>
        <definition>const index_type* amrex::SparseBinIteratorFactory&lt; T &gt;::m_offsets_ptr</definition>
        <argsstring></argsstring>
        <name>m_offsets_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H" line="58" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1SparseBinIteratorFactory_1a3f84a41c582546501b263369e4d13ef1" prot="public" static="no" mutable="no">
        <type>const <ref refid="structamrex_1_1SparseBinIteratorFactory_1af3b2075ffb37148df43247481a6acf79" kindref="member">index_type</ref> *</type>
        <definition>const index_type* amrex::SparseBinIteratorFactory&lt; T &gt;::m_permutation_ptr</definition>
        <argsstring></argsstring>
        <name>m_permutation_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H" line="59" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1SparseBinIteratorFactory_1a1c909792712e364faa3a6b92cc023c8c" prot="public" static="no" mutable="no">
        <type>const T *</type>
        <definition>const T* amrex::SparseBinIteratorFactory&lt; T &gt;::m_items</definition>
        <argsstring></argsstring>
        <name>m_items</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H" line="60" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1SparseBinIteratorFactory_1a11aed40e2ac62cfff56202d86e98a1ec" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1SparseBinIteratorFactory_1af3b2075ffb37148df43247481a6acf79" kindref="member">index_type</ref></type>
        <definition>index_type amrex::SparseBinIteratorFactory&lt; T &gt;::m_num_bins</definition>
        <argsstring></argsstring>
        <name>m_num_bins</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H" line="61" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structamrex_1_1SparseBinIteratorFactory_1a7bbba0567292af76a5b3d7937dcadd76" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="structamrex_1_1SparseBinIteratorFactory_1af3b2075ffb37148df43247481a6acf79" kindref="member">index_type</ref></type>
        <definition>constexpr index_type amrex::SparseBinIteratorFactory&lt; T &gt;::m_not_found</definition>
        <argsstring></argsstring>
        <name>m_not_found</name>
        <initializer>= std::numeric_limits&lt;<ref refid="structamrex_1_1SparseBinIteratorFactory_1af3b2075ffb37148df43247481a6acf79" kindref="member">index_type</ref>&gt;::<ref refid="namespaceamrex_1aaadb66ad08e0a33ec413e2ce8b687414" kindref="member">max</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H" line="63" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1SparseBinIteratorFactory_1a916349c2b4b46497ca3a27d0d1c1b58d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::SparseBinIteratorFactory&lt; T &gt;::SparseBinIteratorFactory</definition>
        <argsstring>(const Gpu::DeviceVector&lt; index_type &gt; &amp;bins, const Gpu::DeviceVector&lt; index_type &gt; &amp;offsets, const Gpu::DeviceVector&lt; index_type &gt; &amp;permutation, const T *items)</argsstring>
        <name>SparseBinIteratorFactory</name>
        <param>
          <type>const <ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; <ref refid="structamrex_1_1SparseBinIteratorFactory_1af3b2075ffb37148df43247481a6acf79" kindref="member">index_type</ref> &gt; &amp;</type>
          <declname>bins</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; <ref refid="structamrex_1_1SparseBinIteratorFactory_1af3b2075ffb37148df43247481a6acf79" kindref="member">index_type</ref> &gt; &amp;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1_1Gpu_1aa82b32772de552834254d9d74c6da13e" kindref="member">Gpu::DeviceVector</ref>&lt; <ref refid="structamrex_1_1SparseBinIteratorFactory_1af3b2075ffb37148df43247481a6acf79" kindref="member">index_type</ref> &gt; &amp;</type>
          <declname>permutation</declname>
        </param>
        <param>
          <type>const T *</type>
          <declname>items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H" line="18" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="18" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1SparseBinIteratorFactory_1aeb4fc11d76183b0156cbeb8d8c0862af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="structamrex_1_1SparseBinIteratorFactory_1af3b2075ffb37148df43247481a6acf79" kindref="member">index_type</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE index_type amrex::SparseBinIteratorFactory&lt; T &gt;::getIndex</definition>
        <argsstring>(const index_type bin_number) const noexcept</argsstring>
        <name>getIndex</name>
        <param>
          <type>const <ref refid="structamrex_1_1SparseBinIteratorFactory_1af3b2075ffb37148df43247481a6acf79" kindref="member">index_type</ref></type>
          <declname>bin_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H" line="29" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="29" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1SparseBinIteratorFactory_1afd23c4f2b4f25cec986300221b0f03d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="structamrex_1_1BinIterator" kindref="compound">BinIterator</ref>&lt; T &gt;</type>
        <definition>AMREX_GPU_HOST_DEVICE BinIterator&lt;T&gt; amrex::SparseBinIteratorFactory&lt; T &gt;::getBinIterator</definition>
        <argsstring>(const index_type bin_number) const noexcept</argsstring>
        <name>getBinIterator</name>
        <param>
          <type>const <ref refid="structamrex_1_1SparseBinIteratorFactory_1af3b2075ffb37148df43247481a6acf79" kindref="member">index_type</ref></type>
          <declname>bin_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H" line="51" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="51" bodyend="55"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H" line="14" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Particle/AMReX_SparseBins.H" bodystart="13" bodyend="64"/>
    <listofallmembers>
      <member refid="structamrex_1_1SparseBinIteratorFactory_1afd23c4f2b4f25cec986300221b0f03d3" prot="public" virt="non-virtual"><scope>amrex::SparseBinIteratorFactory</scope><name>getBinIterator</name></member>
      <member refid="structamrex_1_1SparseBinIteratorFactory_1aeb4fc11d76183b0156cbeb8d8c0862af" prot="public" virt="non-virtual"><scope>amrex::SparseBinIteratorFactory</scope><name>getIndex</name></member>
      <member refid="structamrex_1_1SparseBinIteratorFactory_1af3b2075ffb37148df43247481a6acf79" prot="public" virt="non-virtual"><scope>amrex::SparseBinIteratorFactory</scope><name>index_type</name></member>
      <member refid="structamrex_1_1SparseBinIteratorFactory_1afa3d2fe979810d8c42a56913e808c53d" prot="public" virt="non-virtual"><scope>amrex::SparseBinIteratorFactory</scope><name>m_bins_ptr</name></member>
      <member refid="structamrex_1_1SparseBinIteratorFactory_1a1c909792712e364faa3a6b92cc023c8c" prot="public" virt="non-virtual"><scope>amrex::SparseBinIteratorFactory</scope><name>m_items</name></member>
      <member refid="structamrex_1_1SparseBinIteratorFactory_1a7bbba0567292af76a5b3d7937dcadd76" prot="public" virt="non-virtual"><scope>amrex::SparseBinIteratorFactory</scope><name>m_not_found</name></member>
      <member refid="structamrex_1_1SparseBinIteratorFactory_1a11aed40e2ac62cfff56202d86e98a1ec" prot="public" virt="non-virtual"><scope>amrex::SparseBinIteratorFactory</scope><name>m_num_bins</name></member>
      <member refid="structamrex_1_1SparseBinIteratorFactory_1ade6704bbc963e4c3734bd2348e79847b" prot="public" virt="non-virtual"><scope>amrex::SparseBinIteratorFactory</scope><name>m_offsets_ptr</name></member>
      <member refid="structamrex_1_1SparseBinIteratorFactory_1a3f84a41c582546501b263369e4d13ef1" prot="public" virt="non-virtual"><scope>amrex::SparseBinIteratorFactory</scope><name>m_permutation_ptr</name></member>
      <member refid="structamrex_1_1SparseBinIteratorFactory_1a916349c2b4b46497ca3a27d0d1c1b58d" prot="public" virt="non-virtual"><scope>amrex::SparseBinIteratorFactory</scope><name>SparseBinIteratorFactory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
