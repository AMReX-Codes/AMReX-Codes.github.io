<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classamrex_1_1PhysBCFunctUseCoarseGhost" kind="class" language="C++" prot="public">
    <compoundname>amrex::PhysBCFunctUseCoarseGhost</compoundname>
    <includes refid="AMReX__PhysBCFunct_8H" local="no">AMReX_PhysBCFunct.H</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classamrex_1_1PhysBCFunctUseCoarseGhost_1ac18bba8715a858535bfef42b967c8fa5" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a95101764f5ec64cd1dd6e55614702cdb" kindref="member">IntVect</ref></type>
        <definition>IntVect amrex::PhysBCFunctUseCoarseGhost::nghost</definition>
        <argsstring></argsstring>
        <name>nghost</name>
        <qualifiedname>amrex::PhysBCFunctUseCoarseGhost::nghost</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" line="159" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PhysBCFunctUseCoarseGhost_1af4f46c3c77f6391f5f05e7beac8e49cb" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a95101764f5ec64cd1dd6e55614702cdb" kindref="member">IntVect</ref></type>
        <definition>IntVect amrex::PhysBCFunctUseCoarseGhost::nghost_outside_domain</definition>
        <argsstring></argsstring>
        <name>nghost_outside_domain</name>
        <qualifiedname>amrex::PhysBCFunctUseCoarseGhost::nghost_outside_domain</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" line="161" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PhysBCFunctUseCoarseGhost_1ab825421f1e03196f392fef2e60ba0421" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a95101764f5ec64cd1dd6e55614702cdb" kindref="member">IntVect</ref></type>
        <definition>IntVect amrex::PhysBCFunctUseCoarseGhost::src_ghost</definition>
        <argsstring></argsstring>
        <name>src_ghost</name>
        <qualifiedname>amrex::PhysBCFunctUseCoarseGhost::src_ghost</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" line="165" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PhysBCFunctUseCoarseGhost_1a104926e53939c65b74952b31bd40e651" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a95101764f5ec64cd1dd6e55614702cdb" kindref="member">IntVect</ref></type>
        <definition>IntVect amrex::PhysBCFunctUseCoarseGhost::src_ghost_outside_domain</definition>
        <argsstring></argsstring>
        <name>src_ghost_outside_domain</name>
        <qualifiedname>amrex::PhysBCFunctUseCoarseGhost::src_ghost_outside_domain</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" line="169" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PhysBCFunctUseCoarseGhost_1a5a23493dcdb2a877b6f4ec8e9ed4dc94" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a95101764f5ec64cd1dd6e55614702cdb" kindref="member">IntVect</ref></type>
        <definition>IntVect amrex::PhysBCFunctUseCoarseGhost::cghost</definition>
        <argsstring></argsstring>
        <name>cghost</name>
        <qualifiedname>amrex::PhysBCFunctUseCoarseGhost::cghost</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" line="172" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1PhysBCFunctUseCoarseGhost_1a119255f887ab3be2472009448eab6a9d" prot="public" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a95101764f5ec64cd1dd6e55614702cdb" kindref="member">IntVect</ref></type>
        <definition>IntVect amrex::PhysBCFunctUseCoarseGhost::fp1_src_ghost</definition>
        <argsstring></argsstring>
        <name>fp1_src_ghost</name>
        <qualifiedname>amrex::PhysBCFunctUseCoarseGhost::fp1_src_ghost</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" line="174" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="174" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1PhysBCFunctUseCoarseGhost_1a19519f86bdb850603b708442e35f04b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::PhysBCFunctUseCoarseGhost::PhysBCFunctUseCoarseGhost</definition>
        <argsstring>(IntVect const &amp;a_fp1_src_ghost)</argsstring>
        <name>PhysBCFunctUseCoarseGhost</name>
        <qualifiedname>amrex::PhysBCFunctUseCoarseGhost::PhysBCFunctUseCoarseGhost</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1a95101764f5ec64cd1dd6e55614702cdb" kindref="member">IntVect</ref> const &amp;</type>
          <declname>a_fp1_src_ghost</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" line="130" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="130" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PhysBCFunctUseCoarseGhost_1ac4606069ff51762825e7c8c42f7d1c42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MF</type>
          </param>
          <param>
            <type>typename Interp</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>amrex::PhysBCFunctUseCoarseGhost::PhysBCFunctUseCoarseGhost</definition>
        <argsstring>(MF const &amp;cmf, IntVect const &amp;a_nghost, IntVect const &amp;a_nghost_outside_domain, IntVect const &amp;ratio, Interp *mapper)</argsstring>
        <name>PhysBCFunctUseCoarseGhost</name>
        <qualifiedname>amrex::PhysBCFunctUseCoarseGhost::PhysBCFunctUseCoarseGhost</qualifiedname>
        <param>
          <type>MF const &amp;</type>
          <declname>cmf</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a95101764f5ec64cd1dd6e55614702cdb" kindref="member">IntVect</ref> const &amp;</type>
          <declname>a_nghost</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a95101764f5ec64cd1dd6e55614702cdb" kindref="member">IntVect</ref> const &amp;</type>
          <declname>a_nghost_outside_domain</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a95101764f5ec64cd1dd6e55614702cdb" kindref="member">IntVect</ref> const &amp;</type>
          <declname>ratio</declname>
        </param>
        <param>
          <type>Interp *</type>
          <declname>mapper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" line="134" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="134" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1PhysBCFunctUseCoarseGhost_1a7bbf5fc4329d330d49fc85d259725202" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::PhysBCFunctUseCoarseGhost::operator()</definition>
        <argsstring>(MultiFab &amp;, int, int, IntVect const &amp;, Real, int)</argsstring>
        <name>operator()</name>
        <qualifiedname>amrex::PhysBCFunctUseCoarseGhost::operator()</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a95101764f5ec64cd1dd6e55614702cdb" kindref="member">IntVect</ref> const &amp;</type>
        </param>
        <param>
          <type>Real</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" line="156" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="156" bodyend="157"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>amrex::IntVectND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="1">
        <label>amrex::PhysBCFunctUseCoarseGhost</label>
        <link refid="classamrex_1_1PhysBCFunctUseCoarseGhost"/>
        <childnode refid="2" relation="usage">
          <edgelabel>cghost</edgelabel>
          <edgelabel>fp1_src_ghost</edgelabel>
          <edgelabel>nghost</edgelabel>
          <edgelabel>nghost_outside_domain</edgelabel>
          <edgelabel>src_ghost</edgelabel>
          <edgelabel>src_ghost_outside_domain</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" line="126" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_PhysBCFunct.H" bodystart="127" bodyend="175"/>
    <listofallmembers>
      <member refid="classamrex_1_1PhysBCFunctUseCoarseGhost_1a5a23493dcdb2a877b6f4ec8e9ed4dc94" prot="public" virt="non-virtual"><scope>amrex::PhysBCFunctUseCoarseGhost</scope><name>cghost</name></member>
      <member refid="classamrex_1_1PhysBCFunctUseCoarseGhost_1a119255f887ab3be2472009448eab6a9d" prot="public" virt="non-virtual"><scope>amrex::PhysBCFunctUseCoarseGhost</scope><name>fp1_src_ghost</name></member>
      <member refid="classamrex_1_1PhysBCFunctUseCoarseGhost_1ac18bba8715a858535bfef42b967c8fa5" prot="public" virt="non-virtual"><scope>amrex::PhysBCFunctUseCoarseGhost</scope><name>nghost</name></member>
      <member refid="classamrex_1_1PhysBCFunctUseCoarseGhost_1af4f46c3c77f6391f5f05e7beac8e49cb" prot="public" virt="non-virtual"><scope>amrex::PhysBCFunctUseCoarseGhost</scope><name>nghost_outside_domain</name></member>
      <member refid="classamrex_1_1PhysBCFunctUseCoarseGhost_1a7bbf5fc4329d330d49fc85d259725202" prot="public" virt="non-virtual"><scope>amrex::PhysBCFunctUseCoarseGhost</scope><name>operator()</name></member>
      <member refid="classamrex_1_1PhysBCFunctUseCoarseGhost_1a19519f86bdb850603b708442e35f04b2" prot="public" virt="non-virtual"><scope>amrex::PhysBCFunctUseCoarseGhost</scope><name>PhysBCFunctUseCoarseGhost</name></member>
      <member refid="classamrex_1_1PhysBCFunctUseCoarseGhost_1ac4606069ff51762825e7c8c42f7d1c42" prot="public" virt="non-virtual"><scope>amrex::PhysBCFunctUseCoarseGhost</scope><name>PhysBCFunctUseCoarseGhost</name></member>
      <member refid="classamrex_1_1PhysBCFunctUseCoarseGhost_1ab825421f1e03196f392fef2e60ba0421" prot="public" virt="non-virtual"><scope>amrex::PhysBCFunctUseCoarseGhost</scope><name>src_ghost</name></member>
      <member refid="classamrex_1_1PhysBCFunctUseCoarseGhost_1a104926e53939c65b74952b31bd40e651" prot="public" virt="non-virtual"><scope>amrex::PhysBCFunctUseCoarseGhost</scope><name>src_ghost_outside_domain</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
