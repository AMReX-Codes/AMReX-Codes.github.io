<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1BATransformer" kind="struct" language="C++" prot="public">
    <compoundname>amrex::BATransformer</compoundname>
    <includes refid="AMReX__BoxArray_8H" local="no">AMReX_BoxArray.H</includes>
    <innerclass refid="unionamrex_1_1BATransformer_1_1BATOp" prot="public">amrex::BATransformer::BATOp</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="structamrex_1_1BATransformer_1a6a53c84fc58b61586d8d0d5d274b4feb" prot="public" static="no" strong="yes">
        <type></type>
        <name>BATType</name>
        <qualifiedname>amrex::BATransformer::BATType</qualifiedname>
        <enumvalue id="structamrex_1_1BATransformer_1a6a53c84fc58b61586d8d0d5d274b4feba37a6259cc0c1dae299a7866489dff0bd" prot="public">
          <name>null</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structamrex_1_1BATransformer_1a6a53c84fc58b61586d8d0d5d274b4febaa83af96ce0bc256deeb3ce660dcebacc" prot="public">
          <name>indexType</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structamrex_1_1BATransformer_1a6a53c84fc58b61586d8d0d5d274b4febac7d830dd99b4caf93a2b565d87c8422e" prot="public">
          <name>coarsenRatio</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structamrex_1_1BATransformer_1a6a53c84fc58b61586d8d0d5d274b4feba3e10d52c08b4ae924eb9c9c4c42386b6" prot="public">
          <name>indexType_coarsenRatio</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structamrex_1_1BATransformer_1a6a53c84fc58b61586d8d0d5d274b4feba15f56c267485f29a6a84bcfce877f804" prot="public">
          <name>bndryReg</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="278" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="278" bodyend="278"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1BATransformer_1addbc01e0e2621532efa04d4f28e3f305" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1BATransformer_1a6a53c84fc58b61586d8d0d5d274b4feb" kindref="member">BATType</ref></type>
        <definition>BATType amrex::BATransformer::m_bat_type</definition>
        <argsstring></argsstring>
        <name>m_bat_type</name>
        <qualifiedname>amrex::BATransformer::m_bat_type</qualifiedname>
        <initializer>{<ref refid="structamrex_1_1BATransformer_1a6a53c84fc58b61586d8d0d5d274b4feba37a6259cc0c1dae299a7866489dff0bd" kindref="member">BATType::null</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="533" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="533" bodyend="533"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1BATransformer_1ae5934f27c83bc63db5971f7d9fc6c780" prot="public" static="no" mutable="no">
        <type><ref refid="unionamrex_1_1BATransformer_1_1BATOp" kindref="compound">BATOp</ref></type>
        <definition>BATOp amrex::BATransformer::m_op</definition>
        <argsstring></argsstring>
        <name>m_op</name>
        <qualifiedname>amrex::BATransformer::m_op</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="534" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="534" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1BATransformer_1a34546a5ba0006584f390d2a051f25a3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::BATransformer::BATransformer</definition>
        <argsstring>()=default</argsstring>
        <name>BATransformer</name>
        <qualifiedname>amrex::BATransformer::BATransformer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="298" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1a0d5404cf30e094f664ab13a32024777d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::BATransformer::BATransformer</definition>
        <argsstring>(IndexType t)</argsstring>
        <name>BATransformer</name>
        <qualifiedname>amrex::BATransformer::BATransformer</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1a7e095993c9b3f5a4c2abddd839d800e2" kindref="member">IndexType</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="300" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="300" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1a1d26c72183fc41c34c8b647b2672993e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::BATransformer::BATransformer</definition>
        <argsstring>(Orientation f, IndexType t, int in_rad, int out_rad, int extent_rad)</argsstring>
        <name>BATransformer</name>
        <qualifiedname>amrex::BATransformer::BATransformer</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1Orientation" kindref="compound">Orientation</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a7e095993c9b3f5a4c2abddd839d800e2" kindref="member">IndexType</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>int</type>
          <declname>in_rad</declname>
        </param>
        <param>
          <type>int</type>
          <declname>out_rad</declname>
        </param>
        <param>
          <type>int</type>
          <declname>extent_rad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="304" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="304" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1a650f32f0436d1606c8ef585f2c735c0b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1a5e922fb76ff2eb645844783ad65d1490" kindref="member">Box</ref></type>
        <definition>Box amrex::BATransformer::operator()</definition>
        <argsstring>(Box const &amp;ab) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>amrex::BATransformer::operator()</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1a5e922fb76ff2eb645844783ad65d1490" kindref="member">Box</ref> const &amp;</type>
          <declname>ab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="308" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="308" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1a888900af671b00ababfa6b1e5934bca5" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1a5e922fb76ff2eb645844783ad65d1490" kindref="member">Box</ref></type>
        <definition>Box amrex::BATransformer::coarsen</definition>
        <argsstring>(Box const &amp;a_box) const noexcept</argsstring>
        <name>coarsen</name>
        <qualifiedname>amrex::BATransformer::coarsen</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1a5e922fb76ff2eb645844783ad65d1490" kindref="member">Box</ref> const &amp;</type>
          <declname>a_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="324" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="324" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1a4a5cde989725fd732d0c5d4359869c86" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1a95101764f5ec64cd1dd6e55614702cdb" kindref="member">IntVect</ref></type>
        <definition>IntVect amrex::BATransformer::doiLo</definition>
        <argsstring>() const noexcept</argsstring>
        <name>doiLo</name>
        <qualifiedname>amrex::BATransformer::doiLo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="340" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="340" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1ac52986aa2fd74bc95cde0b02e2c0e3cd" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1a95101764f5ec64cd1dd6e55614702cdb" kindref="member">IntVect</ref></type>
        <definition>IntVect amrex::BATransformer::doiHi</definition>
        <argsstring>() const noexcept</argsstring>
        <name>doiHi</name>
        <qualifiedname>amrex::BATransformer::doiHi</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="356" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="356" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1ab3b08da13a73b3057d2c1a7d565b0f8a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1a7e095993c9b3f5a4c2abddd839d800e2" kindref="member">IndexType</ref></type>
        <definition>IndexType amrex::BATransformer::index_type</definition>
        <argsstring>() const noexcept</argsstring>
        <name>index_type</name>
        <qualifiedname>amrex::BATransformer::index_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="372" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="372" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1a50a575dbc6ff5673d4fd6d3e5678498f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1a95101764f5ec64cd1dd6e55614702cdb" kindref="member">IntVect</ref></type>
        <definition>IntVect amrex::BATransformer::coarsen_ratio</definition>
        <argsstring>() const noexcept</argsstring>
        <name>coarsen_ratio</name>
        <qualifiedname>amrex::BATransformer::coarsen_ratio</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="388" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="388" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1a5c08ad89ed844fa9ea1e5c951121d2b5" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::BATransformer::is_null</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_null</name>
        <qualifiedname>amrex::BATransformer::is_null</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="404" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="404" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1ab39c81e4c05ec1e0c571dda7736068eb" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::BATransformer::is_simple</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_simple</name>
        <qualifiedname>amrex::BATransformer::is_simple</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="408" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="408" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1a2d9128c80e5c47d5ce89cd3d930ce13a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::BATransformer::set_coarsen_ratio</definition>
        <argsstring>(IntVect const &amp;a_ratio) noexcept</argsstring>
        <name>set_coarsen_ratio</name>
        <qualifiedname>amrex::BATransformer::set_coarsen_ratio</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1a95101764f5ec64cd1dd6e55614702cdb" kindref="member">IntVect</ref> const &amp;</type>
          <declname>a_ratio</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="412" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="412" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1a1624c9b9c308aa8bcc73b3133064c861" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::BATransformer::set_index_type</definition>
        <argsstring>(IndexType typ) noexcept</argsstring>
        <name>set_index_type</name>
        <qualifiedname>amrex::BATransformer::set_index_type</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1a7e095993c9b3f5a4c2abddd839d800e2" kindref="member">IndexType</ref></type>
          <declname>typ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="467" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="467" bodyend="520"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="structamrex_1_1BATransformer_1a9d0fed703b10738a7b976f24d1c427c7" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(BATransformer const &amp;a, BATransformer const &amp;b) noexcept</argsstring>
        <name>operator==</name>
        <qualifiedname>amrex::BATransformer::operator==</qualifiedname>
        <param>
          <type><ref refid="structamrex_1_1BATransformer" kindref="compound">BATransformer</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1BATransformer" kindref="compound">BATransformer</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="522" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="522" bodyend="531"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5">
        <label>amrex::IndexTypeND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1IndexTypeND"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>amrex::IntVectND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="10">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="11" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="5" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="5" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="1">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>amrex::CellIndexEnum</label>
        <link refid="structamrex_1_1CellIndexEnum"/>
      </node>
      <node id="11">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="276" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="277" bodyend="535"/>
    <listofallmembers>
      <member refid="structamrex_1_1BATransformer_1a34546a5ba0006584f390d2a051f25a3a" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>BATransformer</name></member>
      <member refid="structamrex_1_1BATransformer_1a0d5404cf30e094f664ab13a32024777d" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>BATransformer</name></member>
      <member refid="structamrex_1_1BATransformer_1a1d26c72183fc41c34c8b647b2672993e" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>BATransformer</name></member>
      <member refid="structamrex_1_1BATransformer_1a6a53c84fc58b61586d8d0d5d274b4feb" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>BATType</name></member>
      <member refid="structamrex_1_1BATransformer_1a888900af671b00ababfa6b1e5934bca5" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>coarsen</name></member>
      <member refid="structamrex_1_1BATransformer_1a50a575dbc6ff5673d4fd6d3e5678498f" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>coarsen_ratio</name></member>
      <member refid="structamrex_1_1BATransformer_1ac52986aa2fd74bc95cde0b02e2c0e3cd" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>doiHi</name></member>
      <member refid="structamrex_1_1BATransformer_1a4a5cde989725fd732d0c5d4359869c86" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>doiLo</name></member>
      <member refid="structamrex_1_1BATransformer_1ab3b08da13a73b3057d2c1a7d565b0f8a" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>index_type</name></member>
      <member refid="structamrex_1_1BATransformer_1a5c08ad89ed844fa9ea1e5c951121d2b5" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>is_null</name></member>
      <member refid="structamrex_1_1BATransformer_1ab39c81e4c05ec1e0c571dda7736068eb" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>is_simple</name></member>
      <member refid="structamrex_1_1BATransformer_1addbc01e0e2621532efa04d4f28e3f305" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>m_bat_type</name></member>
      <member refid="structamrex_1_1BATransformer_1ae5934f27c83bc63db5971f7d9fc6c780" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>m_op</name></member>
      <member refid="structamrex_1_1BATransformer_1a650f32f0436d1606c8ef585f2c735c0b" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>operator()</name></member>
      <member refid="structamrex_1_1BATransformer_1a9d0fed703b10738a7b976f24d1c427c7" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>operator==</name></member>
      <member refid="structamrex_1_1BATransformer_1a2d9128c80e5c47d5ce89cd3d930ce13a" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>set_coarsen_ratio</name></member>
      <member refid="structamrex_1_1BATransformer_1a1624c9b9c308aa8bcc73b3133064c861" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>set_index_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
