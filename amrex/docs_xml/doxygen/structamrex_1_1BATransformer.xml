<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structamrex_1_1BATransformer" kind="struct" language="C++" prot="public">
    <compoundname>amrex::BATransformer</compoundname>
    <includes refid="AMReX__BoxArray_8H" local="no">AMReX_BoxArray.H</includes>
    <innerclass refid="unionamrex_1_1BATransformer_1_1BATOp" prot="public">amrex::BATransformer::BATOp</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="structamrex_1_1BATransformer_1a6a53c84fc58b61586d8d0d5d274b4feb" prot="public" static="no" strong="yes">
        <type></type>
        <name>BATType</name>
        <enumvalue id="structamrex_1_1BATransformer_1a6a53c84fc58b61586d8d0d5d274b4feba37a6259cc0c1dae299a7866489dff0bd" prot="public">
          <name>null</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structamrex_1_1BATransformer_1a6a53c84fc58b61586d8d0d5d274b4febaa83af96ce0bc256deeb3ce660dcebacc" prot="public">
          <name>indexType</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structamrex_1_1BATransformer_1a6a53c84fc58b61586d8d0d5d274b4febac7d830dd99b4caf93a2b565d87c8422e" prot="public">
          <name>coarsenRatio</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structamrex_1_1BATransformer_1a6a53c84fc58b61586d8d0d5d274b4feba3e10d52c08b4ae924eb9c9c4c42386b6" prot="public">
          <name>indexType_coarsenRatio</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="structamrex_1_1BATransformer_1a6a53c84fc58b61586d8d0d5d274b4feba15f56c267485f29a6a84bcfce877f804" prot="public">
          <name>bndryReg</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="256" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="256" bodyend="256"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1BATransformer_1addbc01e0e2621532efa04d4f28e3f305" prot="public" static="no" mutable="no">
        <type><ref refid="structamrex_1_1BATransformer_1a6a53c84fc58b61586d8d0d5d274b4feb" kindref="member">BATType</ref></type>
        <definition>BATType amrex::BATransformer::m_bat_type</definition>
        <argsstring></argsstring>
        <name>m_bat_type</name>
        <initializer>{<ref refid="structamrex_1_1BATransformer_1a6a53c84fc58b61586d8d0d5d274b4feba37a6259cc0c1dae299a7866489dff0bd" kindref="member">BATType::null</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="511" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1BATransformer_1ae5934f27c83bc63db5971f7d9fc6c780" prot="public" static="no" mutable="no">
        <type><ref refid="unionamrex_1_1BATransformer_1_1BATOp" kindref="compound">BATOp</ref></type>
        <definition>BATOp amrex::BATransformer::m_op</definition>
        <argsstring></argsstring>
        <name>m_op</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="512" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="512" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1BATransformer_1a34546a5ba0006584f390d2a051f25a3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::BATransformer::BATransformer</definition>
        <argsstring>()=default</argsstring>
        <name>BATransformer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="276" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1a0d5404cf30e094f664ab13a32024777d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::BATransformer::BATransformer</definition>
        <argsstring>(IndexType t)</argsstring>
        <name>BATransformer</name>
        <param>
          <type><ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="278" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="278" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1a1d26c72183fc41c34c8b647b2672993e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::BATransformer::BATransformer</definition>
        <argsstring>(Orientation f, IndexType t, int in_rad, int out_rad, int extent_rad)</argsstring>
        <name>BATransformer</name>
        <param>
          <type><ref refid="classamrex_1_1Orientation" kindref="compound">Orientation</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>in_rad</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>out_rad</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>extent_rad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="282" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="282" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1a650f32f0436d1606c8ef585f2c735c0b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref></type>
        <definition>Box amrex::BATransformer::operator()</definition>
        <argsstring>(Box const &amp;ab) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>ab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="286" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="286" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1a888900af671b00ababfa6b1e5934bca5" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref></type>
        <definition>Box amrex::BATransformer::coarsen</definition>
        <argsstring>(Box const &amp;a_box) const noexcept</argsstring>
        <name>coarsen</name>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>a_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="302" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="302" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1a4a5cde989725fd732d0c5d4359869c86" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></type>
        <definition>IntVect amrex::BATransformer::doiLo</definition>
        <argsstring>() const noexcept</argsstring>
        <name>doiLo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="318" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="318" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1ac52986aa2fd74bc95cde0b02e2c0e3cd" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></type>
        <definition>IntVect amrex::BATransformer::doiHi</definition>
        <argsstring>() const noexcept</argsstring>
        <name>doiHi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="334" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="334" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1ab3b08da13a73b3057d2c1a7d565b0f8a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref></type>
        <definition>IndexType amrex::BATransformer::index_type</definition>
        <argsstring>() const noexcept</argsstring>
        <name>index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="350" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="350" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1a50a575dbc6ff5673d4fd6d3e5678498f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></type>
        <definition>IntVect amrex::BATransformer::coarsen_ratio</definition>
        <argsstring>() const noexcept</argsstring>
        <name>coarsen_ratio</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="366" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="366" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1a5c08ad89ed844fa9ea1e5c951121d2b5" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::BATransformer::is_null</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_null</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="382" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="382" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1ab39c81e4c05ec1e0c571dda7736068eb" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::BATransformer::is_simple</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_simple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="386" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="386" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1a2d9128c80e5c47d5ce89cd3d930ce13a" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::BATransformer::set_coarsen_ratio</definition>
        <argsstring>(IntVect const &amp;a_ratio) noexcept</argsstring>
        <name>set_coarsen_ratio</name>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> const &amp;</type>
          <declname>a_ratio</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="390" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="390" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BATransformer_1a1624c9b9c308aa8bcc73b3133064c861" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::BATransformer::set_index_type</definition>
        <argsstring>(IndexType typ) noexcept</argsstring>
        <name>set_index_type</name>
        <param>
          <type><ref refid="classamrex_1_1IndexType" kindref="compound">IndexType</ref></type>
          <declname>typ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="445" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="445" bodyend="498"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structamrex_1_1BATransformer_1a9d0fed703b10738a7b976f24d1c427c7" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(BATransformer const &amp;a, BATransformer const &amp;b) noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structamrex_1_1BATransformer" kindref="compound">BATransformer</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structamrex_1_1BATransformer" kindref="compound">BATransformer</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="500" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="500" bodyend="509"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="8">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="6" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="4">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="4" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="1">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="254" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="255" bodyend="513"/>
    <listofallmembers>
      <member refid="structamrex_1_1BATransformer_1a34546a5ba0006584f390d2a051f25a3a" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>BATransformer</name></member>
      <member refid="structamrex_1_1BATransformer_1a0d5404cf30e094f664ab13a32024777d" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>BATransformer</name></member>
      <member refid="structamrex_1_1BATransformer_1a1d26c72183fc41c34c8b647b2672993e" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>BATransformer</name></member>
      <member refid="structamrex_1_1BATransformer_1a6a53c84fc58b61586d8d0d5d274b4feb" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>BATType</name></member>
      <member refid="structamrex_1_1BATransformer_1a888900af671b00ababfa6b1e5934bca5" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>coarsen</name></member>
      <member refid="structamrex_1_1BATransformer_1a50a575dbc6ff5673d4fd6d3e5678498f" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>coarsen_ratio</name></member>
      <member refid="structamrex_1_1BATransformer_1ac52986aa2fd74bc95cde0b02e2c0e3cd" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>doiHi</name></member>
      <member refid="structamrex_1_1BATransformer_1a4a5cde989725fd732d0c5d4359869c86" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>doiLo</name></member>
      <member refid="structamrex_1_1BATransformer_1ab3b08da13a73b3057d2c1a7d565b0f8a" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>index_type</name></member>
      <member refid="structamrex_1_1BATransformer_1a5c08ad89ed844fa9ea1e5c951121d2b5" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>is_null</name></member>
      <member refid="structamrex_1_1BATransformer_1ab39c81e4c05ec1e0c571dda7736068eb" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>is_simple</name></member>
      <member refid="structamrex_1_1BATransformer_1addbc01e0e2621532efa04d4f28e3f305" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>m_bat_type</name></member>
      <member refid="structamrex_1_1BATransformer_1ae5934f27c83bc63db5971f7d9fc6c780" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>m_op</name></member>
      <member refid="structamrex_1_1BATransformer_1a650f32f0436d1606c8ef585f2c735c0b" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>operator()</name></member>
      <member refid="structamrex_1_1BATransformer_1a9d0fed703b10738a7b976f24d1c427c7" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>operator==</name></member>
      <member refid="structamrex_1_1BATransformer_1a2d9128c80e5c47d5ce89cd3d930ce13a" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>set_coarsen_ratio</name></member>
      <member refid="structamrex_1_1BATransformer_1a1624c9b9c308aa8bcc73b3133064c861" prot="public" virt="non-virtual"><scope>amrex::BATransformer</scope><name>set_index_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
