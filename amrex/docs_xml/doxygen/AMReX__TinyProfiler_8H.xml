<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="AMReX__TinyProfiler_8H" kind="file" language="C++">
    <compoundname>AMReX_TinyProfiler.H</compoundname>
    <includes local="no">AMReX_Config.H</includes>
    <includes refid="AMReX__INT_8H" local="no">AMReX_INT.H</includes>
    <includes refid="AMReX__REAL_8H" local="no">AMReX_REAL.H</includes>
    <includes local="no">array</includes>
    <includes local="no">deque</includes>
    <includes local="no">iosfwd</includes>
    <includes local="no">limits</includes>
    <includes local="no">map</includes>
    <includes local="no">string</includes>
    <includes local="no">tuple</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includedby refid="AMReX__TinyProfiler_8cpp" local="no">/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp</includedby>
    <incdepgraph>
      <node id="7">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H</label>
        <link refid="AMReX__TinyProfiler_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>AMReX_Config.H</label>
      </node>
      <node id="9">
        <label>array</label>
      </node>
      <node id="10">
        <label>deque</label>
      </node>
      <node id="8">
        <label>float.h</label>
      </node>
      <node id="4">
        <label>inttypes.h</label>
      </node>
      <node id="11">
        <label>iosfwd</label>
      </node>
      <node id="12">
        <label>limits</label>
      </node>
      <node id="5">
        <label>limits.h</label>
      </node>
      <node id="13">
        <label>map</label>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="15">
        <label>tuple</label>
      </node>
      <node id="16">
        <label>utility</label>
      </node>
      <node id="17">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H</label>
        <link refid="AMReX__TinyProfiler_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp</label>
        <link refid="AMReX__TinyProfiler_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structamrex_1_1MemStat" prot="public">amrex::MemStat</innerclass>
    <innerclass refid="classamrex_1_1TinyProfiler" prot="public">amrex::TinyProfiler</innerclass>
    <innerclass refid="structamrex_1_1TinyProfiler_1_1Stats" prot="private">amrex::TinyProfiler::Stats</innerclass>
    <innerclass refid="structamrex_1_1TinyProfiler_1_1ProcStats" prot="private">amrex::TinyProfiler::ProcStats</innerclass>
    <innerclass refid="structamrex_1_1TinyProfiler_1_1MemProcStats" prot="private">amrex::TinyProfiler::MemProcStats</innerclass>
    <innerclass refid="classamrex_1_1TinyProfileRegion" prot="public">amrex::TinyProfileRegion</innerclass>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_TINY_PROFILER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_TINY_PROFILER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_Config.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__INT_8H" kindref="compound">AMReX_INT.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__REAL_8H" kindref="compound">AMReX_REAL.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;deque&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iosfwd&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tuple&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MemStat</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22" refid="structamrex_1_1MemStat_1a59e766bfe21e1f505dee3649c10037b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/><ref refid="structamrex_1_1MemStat_1a59e766bfe21e1f505dee3649c10037b4" kindref="member">nalloc</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23" refid="structamrex_1_1MemStat_1a9d6dfbc5efa557f55251adda530dcf4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/><ref refid="structamrex_1_1MemStat_1a9d6dfbc5efa557f55251adda530dcf4a" kindref="member">nfree</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24" refid="structamrex_1_1MemStat_1a2bd452ad7a114fcc1750efffe7e63ba2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/><ref refid="structamrex_1_1MemStat_1a2bd452ad7a114fcc1750efffe7e63ba2" kindref="member">currentmem</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25" refid="structamrex_1_1MemStat_1af46944491d4efca70face3a494959165" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1MemStat_1af46944491d4efca70face3a494959165" kindref="member">avgmem</ref><sp/>=<sp/>0.;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26" refid="structamrex_1_1MemStat_1a4871062a2ac188af29295f1cf7721669" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Long<sp/><ref refid="structamrex_1_1MemStat_1a4871062a2ac188af29295f1cf7721669" kindref="member">maxmem</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classamrex_1_1TinyProfiler" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1TinyProfiler" kindref="compound">TinyProfiler</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler" kindref="compound">TinyProfiler</ref><sp/>(std::string<sp/>funcname)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TinyProfiler" kindref="compound">TinyProfiler</ref><sp/>(std::string<sp/>funcname,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>start_)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler" kindref="compound">TinyProfiler</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>funcname)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TinyProfiler" kindref="compound">TinyProfiler</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>funcname,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>start_)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TinyProfiler_1ac86f51f4e2e72d2b045260f22d50475d" kindref="member">~TinyProfiler</ref><sp/>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classamrex_1_1TinyProfiler_1a63cae02a5e649724bfc02c528e84ca18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TinyProfiler_1a63cae02a5e649724bfc02c528e84ca18" kindref="member">TinyProfiler</ref><sp/>(<ref refid="classamrex_1_1TinyProfiler" kindref="compound">TinyProfiler</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40" refid="classamrex_1_1TinyProfiler_1aee36686bda9cf58b62055dca5818af46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TinyProfiler_1aee36686bda9cf58b62055dca5818af46" kindref="member">TinyProfiler</ref><sp/>(<ref refid="classamrex_1_1TinyProfiler" kindref="compound">TinyProfiler</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41" refid="classamrex_1_1TinyProfiler_1a7302c20bc98f1a54da0608b4b9a209c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TinyProfiler" kindref="compound">TinyProfiler</ref>&amp;<sp/><ref refid="classamrex_1_1TinyProfiler_1a7302c20bc98f1a54da0608b4b9a209c3" kindref="member">operator= </ref>(<ref refid="classamrex_1_1TinyProfiler" kindref="compound">TinyProfiler</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42" refid="classamrex_1_1TinyProfiler_1ada78a4f656254e716d24eec760df09ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TinyProfiler" kindref="compound">TinyProfiler</ref>&amp;<sp/><ref refid="classamrex_1_1TinyProfiler_1a7302c20bc98f1a54da0608b4b9a209c3" kindref="member">operator= </ref>(<ref refid="classamrex_1_1TinyProfiler" kindref="compound">TinyProfiler</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1aa79d79de0a3a1e592808ea80448e1637" kindref="member">start</ref><sp/>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1a84199c5f792b3e60b33f6e7ea0fc5568" kindref="member">stop</ref><sp/>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1abcd103d902962eb392b8fc2867da7c85" kindref="member">memory_start</ref><sp/>()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1abda7b021e9aab1a30edc75b2afee7d13" kindref="member">memory_stop</ref><sp/>()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/><ref refid="structamrex_1_1MemStat" kindref="compound">MemStat</ref>*<sp/><ref refid="classamrex_1_1TinyProfiler_1a7973da4e33568c937969b5eec423e21e" kindref="member">memory_alloc</ref><sp/>(std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nbytes,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/><ref refid="structamrex_1_1MemStat" kindref="compound">MemStat</ref>&gt;&amp;<sp/>memstats)<sp/>noexcept;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1acf44a0af5564add5abbde50e6b9aa570" kindref="member">memory_free</ref><sp/>(std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nbytes,<sp/><ref refid="structamrex_1_1MemStat" kindref="compound">MemStat</ref>*<sp/>stat)<sp/>noexcept;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1a0aa1d955349c9f07bfe14b493855258e" kindref="member">Initialize</ref><sp/>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a58b341e8a1b6a668812e8801b917a9de" kindref="member">Finalize</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bFlushing<sp/>=<sp/>false)<sp/>noexcept;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1aae21ad28f75e600f99d43c211de27370" kindref="member">MemoryInitialize</ref><sp/>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1a28131b0e3240b1df559a63c255fc6d72" kindref="member">MemoryFinalize</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bFlushing<sp/>=<sp/>false)<sp/>noexcept;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1a0ee76d52f5f79b4295db066f8145bea1" kindref="member">RegisterArena</ref><sp/>(const<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>memory_name,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/><ref refid="structamrex_1_1MemStat" kindref="compound">MemStat</ref>&gt;&amp;<sp/>memstats)<sp/>noexcept;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1af7c89134a317d3c1cb595a236bdaeff0" kindref="member">DeregisterArena</ref><sp/>(std::map&lt;std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/><ref refid="structamrex_1_1MemStat" kindref="compound">MemStat</ref>&gt;&amp;<sp/>memstats)<sp/>noexcept;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1abf8db78796b24b46b0483e5b61ed1d84" kindref="member">StartRegion</ref><sp/>(std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>regname)<sp/>noexcept;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1ac96b507c36165550f9a2bf115aedc5fb" kindref="member">StopRegion</ref><sp/>(const<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>regname)<sp/>noexcept;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1a8a14bcc37603ec472c17a644428d3686" kindref="member">PrintCallStack</ref><sp/>(std::ostream&amp;<sp/>os);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">private:</highlight></codeline>
<codeline lineno="71" refid="structamrex_1_1TinyProfiler_1_1Stats" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/>struct<sp/><ref refid="structamrex_1_1TinyProfiler_1_1Stats" kindref="compound">Stats</ref></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73" refid="structamrex_1_1TinyProfiler_1_1Stats_1aa462bcfda5e47f61afb6a7460b9e7371" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1TinyProfiler_1_1Stats_1aa462bcfda5e47f61afb6a7460b9e7371" kindref="member">Stats</ref><sp/>()<sp/>noexcept<sp/><sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="74" refid="structamrex_1_1TinyProfiler_1_1Stats_1a9fc076452eebe7a8e37d2820b05f2dad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>depth{0};<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75" refid="structamrex_1_1TinyProfiler_1_1Stats_1a23fedc6778a6f6a72862b3a659494231" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/>n{0L};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76" refid="structamrex_1_1TinyProfiler_1_1Stats_1abc66c2425cf9bbd67c89d82f69597d2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dtin{0.0};<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77" refid="structamrex_1_1TinyProfiler_1_1Stats_1aeb3a3eb0ea9abaf2f440c82e8e9a486d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dtex{0.0};<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="structamrex_1_1TinyProfiler_1_1ProcStats" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1TinyProfiler_1_1ProcStats" kindref="compound">ProcStats</ref></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="structamrex_1_1TinyProfiler_1_1ProcStats_1a4712cf4e60cf2801bc15d5a4555cd80b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/><ref refid="structamrex_1_1TinyProfiler_1_1ProcStats_1a4712cf4e60cf2801bc15d5a4555cd80b" kindref="member">nmin</ref>{std::numeric_limits&lt;Long&gt;::max()};</highlight></codeline>
<codeline lineno="85" refid="structamrex_1_1TinyProfiler_1_1ProcStats_1a072e3cbbf26527a9f54155ce1140e45c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/><ref refid="structamrex_1_1TinyProfiler_1_1ProcStats_1a072e3cbbf26527a9f54155ce1140e45c" kindref="member">navg</ref>{0L},<sp/><ref refid="structamrex_1_1TinyProfiler_1_1ProcStats_1a601e3d46b6b378292f6861605af53b55" kindref="member">nmax</ref>{0L};</highlight></codeline>
<codeline lineno="86" refid="structamrex_1_1TinyProfiler_1_1ProcStats_1ad9c2c49d8b22ac959def10c90dd3ed30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1TinyProfiler_1_1ProcStats_1ad9c2c49d8b22ac959def10c90dd3ed30" kindref="member">dtinmin</ref>{std::numeric_limits&lt;double&gt;::max()};</highlight></codeline>
<codeline lineno="87" refid="structamrex_1_1TinyProfiler_1_1ProcStats_1ab36067feb232434de61f459d59427970" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1TinyProfiler_1_1ProcStats_1ab36067feb232434de61f459d59427970" kindref="member">dtinavg</ref>{0.0},<sp/><ref refid="structamrex_1_1TinyProfiler_1_1ProcStats_1aba8890827f1d77d1a04fda2971170ffe" kindref="member">dtinmax</ref>{0.0};</highlight></codeline>
<codeline lineno="88" refid="structamrex_1_1TinyProfiler_1_1ProcStats_1a01cbf389132c01e2971cb1723fa846cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1TinyProfiler_1_1ProcStats_1a01cbf389132c01e2971cb1723fa846cd" kindref="member">dtexmin</ref>{std::numeric_limits&lt;double&gt;::max()};</highlight></codeline>
<codeline lineno="89" refid="structamrex_1_1TinyProfiler_1_1ProcStats_1a23387ec0b0dd45815da72c13541e68de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1TinyProfiler_1_1ProcStats_1a23387ec0b0dd45815da72c13541e68de" kindref="member">dtexavg</ref>{0.0},<sp/><ref refid="structamrex_1_1TinyProfiler_1_1ProcStats_1a65dee4854dfd2baf26af6b16812090e3" kindref="member">dtexmax</ref>{0.0};</highlight></codeline>
<codeline lineno="90" refid="structamrex_1_1TinyProfiler_1_1ProcStats_1a94c0f899273eecb5387f06f7ea455a5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1TinyProfiler_1_1ProcStats_1a94c0f899273eecb5387f06f7ea455a5b" kindref="member">do_print</ref>{</highlight><highlight class="keyword">true</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="91" refid="structamrex_1_1TinyProfiler_1_1ProcStats_1a38621bfbdcc37e8e877df3a96bf3c5e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structamrex_1_1TinyProfiler_1_1ProcStats_1a38621bfbdcc37e8e877df3a96bf3c5e3" kindref="member">fname</ref>;</highlight></codeline>
<codeline lineno="92" refid="structamrex_1_1TinyProfiler_1_1ProcStats_1ae641e60af08fa4f6e33d79a5f03db53a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1TinyProfiler_1_1ProcStats_1ae641e60af08fa4f6e33d79a5f03db53a" kindref="member">compex</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1TinyProfiler_1_1ProcStats" kindref="compound">ProcStats</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1TinyProfiler_1_1ProcStats" kindref="compound">ProcStats</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.<ref refid="structamrex_1_1TinyProfiler_1_1ProcStats_1a65dee4854dfd2baf26af6b16812090e3" kindref="member">dtexmax</ref><sp/>&gt;<sp/>rhs.<ref refid="structamrex_1_1TinyProfiler_1_1ProcStats_1a65dee4854dfd2baf26af6b16812090e3" kindref="member">dtexmax</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95" refid="structamrex_1_1TinyProfiler_1_1ProcStats_1a3e930047fc2ea18c08f936b6020c28ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1TinyProfiler_1_1ProcStats_1a3e930047fc2ea18c08f936b6020c28ef" kindref="member">compin</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1TinyProfiler_1_1ProcStats" kindref="compound">ProcStats</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1TinyProfiler_1_1ProcStats" kindref="compound">ProcStats</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.<ref refid="structamrex_1_1TinyProfiler_1_1ProcStats_1aba8890827f1d77d1a04fda2971170ffe" kindref="member">dtinmax</ref><sp/>&gt;<sp/>rhs.<ref refid="structamrex_1_1TinyProfiler_1_1ProcStats_1aba8890827f1d77d1a04fda2971170ffe" kindref="member">dtinmax</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="structamrex_1_1TinyProfiler_1_1MemProcStats" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1TinyProfiler_1_1MemProcStats" kindref="compound">MemProcStats</ref></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102" refid="structamrex_1_1TinyProfiler_1_1MemProcStats_1a330cc4e231f61e998afb4546138fa0c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/><ref refid="structamrex_1_1TinyProfiler_1_1MemProcStats_1a330cc4e231f61e998afb4546138fa0c3" kindref="member">nalloc</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="103" refid="structamrex_1_1TinyProfiler_1_1MemProcStats_1ab2c0f6adf1de06d4e718a0165b63b373" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/><ref refid="structamrex_1_1TinyProfiler_1_1MemProcStats_1ab2c0f6adf1de06d4e718a0165b63b373" kindref="member">nfree</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="104" refid="structamrex_1_1TinyProfiler_1_1MemProcStats_1ad4b57ac73f4f081e9dd6a4cb04a7256d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/><ref refid="structamrex_1_1TinyProfiler_1_1MemProcStats_1ad4b57ac73f4f081e9dd6a4cb04a7256d" kindref="member">avgmem_min</ref><sp/>=<sp/>std::numeric_limits&lt;Long&gt;::max();</highlight></codeline>
<codeline lineno="105" refid="structamrex_1_1TinyProfiler_1_1MemProcStats_1a294ace43655d2f9f98de17aa39ae94ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/><ref refid="structamrex_1_1TinyProfiler_1_1MemProcStats_1a294ace43655d2f9f98de17aa39ae94ed" kindref="member">avgmem_avg</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106" refid="structamrex_1_1TinyProfiler_1_1MemProcStats_1a84205dd6fc19fda21f2932003ee62a85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/><ref refid="structamrex_1_1TinyProfiler_1_1MemProcStats_1a84205dd6fc19fda21f2932003ee62a85" kindref="member">avgmem_max</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="107" refid="structamrex_1_1TinyProfiler_1_1MemProcStats_1a959fca2ea033e58ad9ccb6f701d2c2dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/><ref refid="structamrex_1_1TinyProfiler_1_1MemProcStats_1a959fca2ea033e58ad9ccb6f701d2c2dc" kindref="member">maxmem_min</ref><sp/>=<sp/>std::numeric_limits&lt;Long&gt;::max();</highlight></codeline>
<codeline lineno="108" refid="structamrex_1_1TinyProfiler_1_1MemProcStats_1a2bf69c6701f401ca00d5e5ad3b999d0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/><ref refid="structamrex_1_1TinyProfiler_1_1MemProcStats_1a2bf69c6701f401ca00d5e5ad3b999d0d" kindref="member">maxmem_avg</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="109" refid="structamrex_1_1TinyProfiler_1_1MemProcStats_1abcd7e0edc5c0e56722ae0d5610ed843d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/><ref refid="structamrex_1_1TinyProfiler_1_1MemProcStats_1abcd7e0edc5c0e56722ae0d5610ed843d" kindref="member">maxmem_max</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110" refid="structamrex_1_1TinyProfiler_1_1MemProcStats_1ad67743332ab69e7c9bc65a551c4b9eb7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structamrex_1_1TinyProfiler_1_1MemProcStats_1ad67743332ab69e7c9bc65a551c4b9eb7" kindref="member">fname</ref>;</highlight></codeline>
<codeline lineno="111" refid="structamrex_1_1TinyProfiler_1_1MemProcStats_1a1c9e814cfa3e13889f8fecc6a71824fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1TinyProfiler_1_1MemProcStats_1a1c9e814cfa3e13889f8fecc6a71824fc" kindref="member">compmem</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1TinyProfiler_1_1MemProcStats" kindref="compound">MemProcStats</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1TinyProfiler_1_1MemProcStats" kindref="compound">MemProcStats</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.<ref refid="structamrex_1_1TinyProfiler_1_1MemProcStats_1abcd7e0edc5c0e56722ae0d5610ed843d" kindref="member">maxmem_max</ref><sp/>&gt;<sp/>rhs.<ref refid="structamrex_1_1TinyProfiler_1_1MemProcStats_1abcd7e0edc5c0e56722ae0d5610ed843d" kindref="member">maxmem_max</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classamrex_1_1TinyProfiler_1a8691b33b40a313ca7ffe01a287f57dff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classamrex_1_1TinyProfiler_1a8691b33b40a313ca7ffe01a287f57dff" kindref="member">fname</ref>;</highlight></codeline>
<codeline lineno="117" refid="classamrex_1_1TinyProfiler_1a9949d2a62ee0e670c89942b622ef9ebb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1a9949d2a62ee0e670c89942b622ef9ebb" kindref="member">in_parallel_region</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118" refid="classamrex_1_1TinyProfiler_1ae7befef46d2ca9e3de4299f950647451" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1ae7befef46d2ca9e3de4299f950647451" kindref="member">global_depth</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="119" refid="classamrex_1_1TinyProfiler_1a5205c680d2a8d3fd69195aab83ce3b7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Stats*&gt;<sp/><ref refid="classamrex_1_1TinyProfiler_1a5205c680d2a8d3fd69195aab83ce3b7a" kindref="member">stats</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classamrex_1_1TinyProfiler_1a175f44d41236b9cd4b6268fc0488ac5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::deque&lt;const<sp/>TinyProfiler*&gt;<sp/><ref refid="classamrex_1_1TinyProfiler_1a175f44d41236b9cd4b6268fc0488ac5e" kindref="member">mem_stack</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_OMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">aligned_deque<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>align<sp/>thread-private<sp/>data<sp/>to<sp/>cache<sp/>lines<sp/>to<sp/>prevent<sp/>false<sp/>sharing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(64)<sp/>std::deque&lt;const<sp/>TinyProfiler*&gt;<sp/>deque;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;aligned_deque&gt;<sp/>mem_stack_thread_private;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="classamrex_1_1TinyProfiler_1adac60aa8448dcfb383a94e4f607dfc01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;std::map&lt;std::string,<sp/>MemStat&gt;*&gt;<sp/><ref refid="classamrex_1_1TinyProfiler_1adac60aa8448dcfb383a94e4f607dfc01" kindref="member">all_memstats</ref>;</highlight></codeline>
<codeline lineno="132" refid="classamrex_1_1TinyProfiler_1a4c5a66e30e341fc78c3e29f260fb7904" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classamrex_1_1TinyProfiler_1a4c5a66e30e341fc78c3e29f260fb7904" kindref="member">all_memnames</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classamrex_1_1TinyProfiler_1a03febcd85f7ea80790cac0181b9c2b1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classamrex_1_1TinyProfiler_1a03febcd85f7ea80790cac0181b9c2b1b" kindref="member">regionstack</ref>;</highlight></codeline>
<codeline lineno="135" refid="classamrex_1_1TinyProfiler_1a55b136d8859480b76a1311cff89009a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::deque&lt;std::tuple&lt;double,double,std::string*&gt;<sp/>&gt;<sp/><ref refid="classamrex_1_1TinyProfiler_1a55b136d8859480b76a1311cff89009a0" kindref="member">ttstack</ref>;</highlight></codeline>
<codeline lineno="136" refid="classamrex_1_1TinyProfiler_1ac803023249064c812474a5aa120ef397" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::map&lt;std::string,std::map&lt;std::string,<sp/>Stats&gt;<sp/>&gt;<sp/><ref refid="classamrex_1_1TinyProfiler_1ac803023249064c812474a5aa120ef397" kindref="member">statsmap</ref>;</highlight></codeline>
<codeline lineno="137" refid="classamrex_1_1TinyProfiler_1abcb523d4f35aced1936bf2f559577201" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1abcb523d4f35aced1936bf2f559577201" kindref="member">t_init</ref>;</highlight></codeline>
<codeline lineno="138" refid="classamrex_1_1TinyProfiler_1a15ae68038b556fc6fa24170d5cb0d5b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1a15ae68038b556fc6fa24170d5cb0d5b5" kindref="member">device_synchronize_around_region</ref>;</highlight></codeline>
<codeline lineno="139" refid="classamrex_1_1TinyProfiler_1af5020b8e813ceea3418f07d2529ae2cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1af5020b8e813ceea3418f07d2529ae2cd" kindref="member">n_print_tabs</ref>;</highlight></codeline>
<codeline lineno="140" refid="classamrex_1_1TinyProfiler_1a42fc975e27a744624c255b0fad3f8cd7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1a42fc975e27a744624c255b0fad3f8cd7" kindref="member">verbose</ref>;</highlight></codeline>
<codeline lineno="141" refid="classamrex_1_1TinyProfiler_1a4de3ee9387602dc09ef0f134c9826c13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1a4de3ee9387602dc09ef0f134c9826c13" kindref="member">print_threshold</ref>;</highlight></codeline>
<codeline lineno="142" refid="classamrex_1_1TinyProfiler_1a282b4e789e0c442305b8348d40b3a9e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1a282b4e789e0c442305b8348d40b3a9e5" kindref="member">enabled</ref>;</highlight></codeline>
<codeline lineno="143" refid="classamrex_1_1TinyProfiler_1a03fe25c86d7dbbb990a00595040557cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1a03fe25c86d7dbbb990a00595040557cc" kindref="member">memprof_enabled</ref>;</highlight></codeline>
<codeline lineno="144" refid="classamrex_1_1TinyProfiler_1af042a12f3b873d678126ac7aae488106" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classamrex_1_1TinyProfiler_1af042a12f3b873d678126ac7aae488106" kindref="member">output_file</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="classamrex_1_1TinyProfiler_1a179ed9477bf3c19ddd7678a6277230c1" kindref="member">get_output_file</ref><sp/>();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1a77843e1433ce6bede350d2dd35eb02a3" kindref="member">PrintStats</ref><sp/>(std::map&lt;std::string,Stats&gt;&amp;<sp/>regstats,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt_max,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream*<sp/>os);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfiler_1a18a5eb16b85aa8cc252a58b24a6ac763" kindref="member">PrintMemStats</ref><sp/>(std::map&lt;std::string,<sp/>MemStat&gt;&amp;<sp/>memstats,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>memname,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt_max,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t_final,<sp/>std::ostream*<sp/>os);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classamrex_1_1TinyProfileRegion" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1TinyProfileRegion" kindref="compound">TinyProfileRegion</ref></highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfileRegion" kindref="compound">TinyProfileRegion</ref><sp/>(std::string<sp/>a_regname)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1TinyProfileRegion" kindref="compound">TinyProfileRegion</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>a_regname)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159" refid="classamrex_1_1TinyProfileRegion_1aad9588693616dcc6ff68675a2d235437" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TinyProfileRegion_1aad9588693616dcc6ff68675a2d235437" kindref="member">TinyProfileRegion</ref><sp/>(<ref refid="classamrex_1_1TinyProfileRegion" kindref="compound">TinyProfileRegion</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160" refid="classamrex_1_1TinyProfileRegion_1ae16c9ddca9a89c31676b9be0b716c097" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TinyProfileRegion_1ae16c9ddca9a89c31676b9be0b716c097" kindref="member">TinyProfileRegion</ref><sp/>(<ref refid="classamrex_1_1TinyProfileRegion" kindref="compound">TinyProfileRegion</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161" refid="classamrex_1_1TinyProfileRegion_1aa0025009668cbc63501464a2f2e17178" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TinyProfileRegion" kindref="compound">TinyProfileRegion</ref>&amp;<sp/><ref refid="classamrex_1_1TinyProfileRegion_1aa0025009668cbc63501464a2f2e17178" kindref="member">operator= </ref>(<ref refid="classamrex_1_1TinyProfileRegion" kindref="compound">TinyProfileRegion</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162" refid="classamrex_1_1TinyProfileRegion_1a23ea9e506cffa9a79951018e761b6c71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TinyProfileRegion" kindref="compound">TinyProfileRegion</ref>&amp;<sp/><ref refid="classamrex_1_1TinyProfileRegion_1aa0025009668cbc63501464a2f2e17178" kindref="member">operator= </ref>(<ref refid="classamrex_1_1TinyProfileRegion" kindref="compound">TinyProfileRegion</ref><sp/>&amp;&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TinyProfileRegion_1a529634d28a0589df7b0e0fd5f7294834" kindref="member">~TinyProfileRegion</ref><sp/>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="165" refid="classamrex_1_1TinyProfileRegion_1ae8f1674b3d50716ce74d4d05074c5551" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classamrex_1_1TinyProfileRegion_1ae8f1674b3d50716ce74d4d05074c5551" kindref="member">regname</ref>;</highlight></codeline>
<codeline lineno="166" refid="classamrex_1_1TinyProfileRegion_1af05c972ffb11a5d0230dc3903fc0a33f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1TinyProfiler" kindref="compound">TinyProfiler</ref><sp/><ref refid="classamrex_1_1TinyProfileRegion_1af05c972ffb11a5d0230dc3903fc0a33f" kindref="member">tprof</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.H"/>
  </compounddef>
</doxygen>
