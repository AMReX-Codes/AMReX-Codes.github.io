<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1MacBndry" kind="class" language="C++" prot="public">
    <compoundname>amrex::MacBndry</compoundname>
    <basecompoundref refid="classamrex_1_1InterpBndryData" prot="public" virt="non-virtual">amrex::InterpBndryData</basecompoundref>
    <includes refid="AMReX__MacBndry_8H" local="no">AMReX_MacBndry.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1MacBndry_1a0da143add897028cf221c27f035335b2" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref></type>
        <definition>BCRec amrex::MacBndry::m_phys_bc</definition>
        <argsstring></argsstring>
        <name>m_phys_bc</name>
        <briefdescription>
<para>save phys_bc for FMultiGrid </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H" line="46" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1MacBndry_1aeb14ec13ce6b570d59647427a8717dfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MacBndry::MacBndry</definition>
        <argsstring>()</argsstring>
        <name>MacBndry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H" line="15" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.cpp" bodystart="7" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacBndry_1a7adac5379d6492f57784417ec6b7b68f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MacBndry::MacBndry</definition>
        <argsstring>(const BoxArray &amp;_grids, const DistributionMapping &amp;_dmap, int _ncomp, const Geometry &amp;_geom)</argsstring>
        <name>MacBndry</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>_grids</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>_dmap</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_ncomp</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>_geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H" line="17" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.cpp" bodystart="14" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacBndry_1a02591b27ce31d10c67b00ed2c9281684" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>amrex::MacBndry::~MacBndry</definition>
        <argsstring>() override</argsstring>
        <name>~MacBndry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H" line="22" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.cpp" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacBndry_1a7f8311f229addca98aca749a0e01aa2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MacBndry::MacBndry</definition>
        <argsstring>(MacBndry &amp;&amp;rhs)=delete</argsstring>
        <name>MacBndry</name>
        <param>
          <type><ref refid="classamrex_1_1MacBndry" kindref="compound">MacBndry</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacBndry_1a208d0bb0bf64833160511cec605e873b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::MacBndry::MacBndry</definition>
        <argsstring>(const MacBndry &amp;rhs)=delete</argsstring>
        <name>MacBndry</name>
        <param>
          <type>const <ref refid="classamrex_1_1MacBndry" kindref="compound">MacBndry</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacBndry_1a25041eb939703c22f9d73ef73febcba3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MacBndry" kindref="compound">MacBndry</ref> &amp;</type>
        <definition>MacBndry&amp; amrex::MacBndry::operator=</definition>
        <argsstring>(const MacBndry &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1MacBndry" kindref="compound">MacBndry</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacBndry_1a2acbd062998e69283c2180d6b9b09fde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1MacBndry" kindref="compound">MacBndry</ref> &amp;</type>
        <definition>MacBndry&amp; amrex::MacBndry::operator=</definition>
        <argsstring>(MacBndry &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1MacBndry" kindref="compound">MacBndry</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H" line="27" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacBndry_1a997a1e24113b6cad5ea1674bcd061d59" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void amrex::MacBndry::setBndryConds</definition>
        <argsstring>(const BCRec &amp;phys_bc, int ratio) override</argsstring>
        <name>setBndryConds</name>
        <reimplements refid="classamrex_1_1InterpBndryData_1a4dd747e3d5e6b38f92d23d9bae511bbd">setBndryConds</reimplements>
        <param>
          <type>const <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &amp;</type>
          <declname>phys_bc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ratio</declname>
        </param>
        <briefdescription>
<para>interpret user BCs to those expected by <ref refid="classamrex_1_1LinOp" kindref="compound">LinOp</ref>: takes integer ratio and is a wrapper to the <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> version </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>phys_bc</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ratio</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H" line="29" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.cpp" bodystart="25" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacBndry_1af8d34108797db541f2d5ef276a94634e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void amrex::MacBndry::setBndryConds</definition>
        <argsstring>(const BCRec &amp;phys_bc, const IntVect &amp;ratio, int comp=0) override</argsstring>
        <name>setBndryConds</name>
        <reimplements refid="classamrex_1_1InterpBndryData_1a834b29613637b7aedd5ada18b7e33080">setBndryConds</reimplements>
        <param>
          <type>const <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &amp;</type>
          <declname>phys_bc</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>ratio</declname>
        </param>
        <param>
          <type>int</type>
          <declname>comp</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>interpret user BCs to those expected by <ref refid="classamrex_1_1LinOp" kindref="compound">LinOp</ref>: takes <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> ratio </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>phys_bc</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ratio</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comp</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H" line="32" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.cpp" bodystart="33" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacBndry_1a9abf850c1e8108fedff300e61cc961f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::MacBndry::setHomogValues</definition>
        <argsstring>(const BCRec &amp;bc, const IntVect &amp;ratio)</argsstring>
        <name>setHomogValues</name>
        <param>
          <type>const <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &amp;</type>
          <declname>bc</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>ratio</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H" line="35" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.cpp" bodystart="88" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacBndry_1ae0994a20e5bd402ffafb58b9f2d2317b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MacBndry::phys_bc_lo</definition>
        <argsstring>(int dir) const noexcept</argsstring>
        <name>phys_bc_lo</name>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H" line="38" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacBndry_1a2e1c27be0a1e95c36acda58c970775dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::MacBndry::phys_bc_hi</definition>
        <argsstring>(int dir) const noexcept</argsstring>
        <name>phys_bc_hi</name>
        <param>
          <type>int</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H" line="39" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1MacBndry_1a7a1de984132f94266ef9ca891e4e6d24" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1BCRec" kindref="compound">BCRec</ref> &amp;</type>
        <definition>const BCRec&amp; amrex::MacBndry::PhysBC</definition>
        <argsstring>() const noexcept</argsstring>
        <name>PhysBC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H" line="41" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H" bodystart="41" bodyend="41"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3949">
        <label>amrex::BndryData</label>
        <link refid="classamrex_1_1BndryData"/>
        <childnode refid="3950" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3948">
        <label>amrex::InterpBndryData</label>
        <link refid="classamrex_1_1InterpBndryData"/>
        <childnode refid="3949" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3950">
        <label>amrex::BndryRegister</label>
        <link refid="classamrex_1_1BndryRegister"/>
      </node>
      <node id="3947">
        <label>amrex::MacBndry</label>
        <link refid="classamrex_1_1MacBndry"/>
        <childnode refid="3948" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3978">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
      </node>
      <node id="3959">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="3960" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="3963">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="3962">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="3962" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="3992">
        <label>amrex::LayoutData&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="3958" relation="public-inheritance">
        </childnode>
        <childnode refid="3993" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="3984">
        <label>Real</label>
      </node>
      <node id="3979">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3980" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3953">
        <label>amrex::BndryData</label>
        <link refid="classamrex_1_1BndryData"/>
        <childnode refid="3954" relation="public-inheritance">
        </childnode>
        <childnode refid="3982" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="3987" relation="usage">
          <edgelabel>bcloc</edgelabel>
        </childnode>
        <childnode refid="3990" relation="usage">
          <edgelabel>masks</edgelabel>
        </childnode>
        <childnode refid="3992" relation="usage">
          <edgelabel>bcond</edgelabel>
        </childnode>
      </node>
      <node id="3973">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
      </node>
      <node id="3964">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3965" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3960">
        <label>string</label>
      </node>
      <node id="3981">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="3962" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="3975">
        <label>std::vector&lt; char *, std::allocator&lt; char * &gt; &gt;</label>
      </node>
      <node id="3991">
        <label>std::vector&lt; amrex::MultiMask, std::allocator&lt; amrex::MultiMask &gt; &gt;</label>
      </node>
      <node id="3974">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3975" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3994">
        <label>std::vector&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt;, std::allocator&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="3976">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="3990">
        <label>amrex::Vector&lt; amrex::MultiMask &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3991" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3995">
        <label>amrex::BCRec</label>
        <link refid="classamrex_1_1BCRec"/>
      </node>
      <node id="3980">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
      </node>
      <node id="3965">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="3970">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="3962" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="3971" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="3985">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="3984" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="3952">
        <label>amrex::InterpBndryData</label>
        <link refid="classamrex_1_1InterpBndryData"/>
        <childnode refid="3953" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3993">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3994" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3986">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="3962" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="3971" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="3968">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="3969" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="3977">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3978" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3983">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="3984" relation="usage">
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
          <edgelabel>dx</edgelabel>
        </childnode>
      </node>
      <node id="3971">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="3969">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="3964" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="3955">
        <label>amrex::FabSet</label>
        <link refid="classamrex_1_1FabSet"/>
        <childnode refid="3956" relation="usage">
          <edgelabel>m_mf</edgelabel>
        </childnode>
      </node>
      <node id="3972">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3973" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3961">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
      </node>
      <node id="3966">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="3967" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="3968" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="3956">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="3957" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3954">
        <label>amrex::BndryRegister</label>
        <link refid="classamrex_1_1BndryRegister"/>
        <childnode refid="3955" relation="usage">
          <edgelabel>bndry</edgelabel>
        </childnode>
        <childnode refid="3970" relation="usage">
          <edgelabel>grids</edgelabel>
        </childnode>
      </node>
      <node id="3982">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="3983" relation="public-inheritance">
        </childnode>
        <childnode refid="3985" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="3986" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="3989">
        <label>std::vector&lt; RealTuple, std::allocator&lt; RealTuple &gt; &gt;</label>
      </node>
      <node id="3987">
        <label>amrex::LayoutData&lt; RealTuple &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="3958" relation="public-inheritance">
        </childnode>
        <childnode refid="3988" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="3988">
        <label>amrex::Vector&lt; RealTuple &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3989" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3957">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="3958" relation="public-inheritance">
        </childnode>
        <childnode refid="3962" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="3964" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="3972" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="3974" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="3976" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="3977" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="3979" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="3981" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="3967">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
      </node>
      <node id="3958">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="3959" relation="usage">
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
        </childnode>
        <childnode refid="3961" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="3962" relation="usage">
          <edgelabel>n_grow</edgelabel>
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>mfghostiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="3963" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="3964" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="3966" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="3970" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
      </node>
      <node id="3951">
        <label>amrex::MacBndry</label>
        <link refid="classamrex_1_1MacBndry"/>
        <childnode refid="3952" relation="public-inheritance">
        </childnode>
        <childnode refid="3995" relation="usage">
          <edgelabel>m_phys_bc</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H" line="12" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Boundary/AMReX_MacBndry.H" bodystart="9" bodyend="47"/>
    <listofallmembers>
      <member refid="classamrex_1_1BndryData_1a30e8975eaca9018ee72a0f5e9600e590" prot="protected" virt="non-virtual"><scope>amrex::MacBndry</scope><name>bcloc</name></member>
      <member refid="classamrex_1_1BndryData_1a33b33d468118587f694c916018b3f3fb" prot="protected" virt="non-virtual"><scope>amrex::MacBndry</scope><name>bcond</name></member>
      <member refid="classamrex_1_1BndryRegister_1adb20e61942a04f1783a0e82598583bc9" prot="protected" virt="non-virtual"><scope>amrex::MacBndry</scope><name>bndry</name></member>
      <member refid="classamrex_1_1BndryData_1ab22274b8017f01edf0d5e432240a3308" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>bndryConds</name></member>
      <member refid="classamrex_1_1BndryData_1a91ee362b8e44820cf8d6ffa2c78cad90" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>bndryConds</name></member>
      <member refid="classamrex_1_1BndryData_1a56865f9312ebb3ec688b1d6dcb1a579f" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>BndryData</name></member>
      <member refid="classamrex_1_1BndryData_1a1d889161b75f5cb49d91b6da56c3596b" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>BndryData</name></member>
      <member refid="classamrex_1_1BndryData_1af682ca27d245a4002c2e8f47b7c96ec3" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>BndryData</name></member>
      <member refid="classamrex_1_1BndryData_1a0ce8e12e17b925619b9792d6469e1904" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>BndryData</name></member>
      <member refid="classamrex_1_1BndryData_1a8c53fbb7063c71b365d41ef352f4ffb5" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>bndryLocs</name></member>
      <member refid="classamrex_1_1BndryData_1a0f33ed526270778cb45aea3f8532315e" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>bndryLocs</name></member>
      <member refid="classamrex_1_1BndryData_1aa9e18873f726b8e44ff7a7569a79a8fe" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>bndryMasks</name></member>
      <member refid="classamrex_1_1BndryRegister_1aa4688ce12aed07218f4eb52082c290c2" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>BndryRegister</name></member>
      <member refid="classamrex_1_1BndryRegister_1aecf2bfb5d33fc73dc7fff1da73df6cb3" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>BndryRegister</name></member>
      <member refid="classamrex_1_1BndryRegister_1ada2a8c68444266b0a43501e0bbbfb187" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>BndryRegister</name></member>
      <member refid="classamrex_1_1BndryRegister_1ae816eecbaf5ba41568607d00441d3420" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>BndryRegister</name></member>
      <member refid="classamrex_1_1BndryData_1a3ce6d337a83e14d713a998d6b09a27e0" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>bndryValues</name></member>
      <member refid="classamrex_1_1InterpBndryData_1a2dd6a9486577bf514eb29818eee5cb21" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>BndryValuesDoIt</name></member>
      <member refid="classamrex_1_1BndryRegister_1a013d3c766ec5b97ea88fa71f9cc810cb" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>boxes</name></member>
      <member refid="classamrex_1_1BndryRegister_1acb41d395fa564b8c3c9d46327920d239" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>clear</name></member>
      <member refid="classamrex_1_1BndryRegister_1a361e5f4f34fe99325481f704c661c2ed" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>Copy</name></member>
      <member refid="classamrex_1_1BndryRegister_1af9a7b006622b33878423e6be4fd7fcc3" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>copyFrom</name></member>
      <member refid="classamrex_1_1BndryData_1a4d31afbfcfb31a6229877bb9ad880fb9a843d5274aec429fe8bea1719d6162727" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>covered</name></member>
      <member refid="classamrex_1_1BndryData_1a3457a4bb428e2f1478f95e76fd15a9df" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>define</name></member>
      <member refid="classamrex_1_1BndryRegister_1a7ac16569b9b981389bb8a08a6d99e89e" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryRegister::"><scope>amrex::MacBndry</scope><name>define</name></member>
      <member refid="classamrex_1_1BndryRegister_1a50339ee95902a57f40f9251322cbd143" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryRegister::"><scope>amrex::MacBndry</scope><name>define</name></member>
      <member refid="classamrex_1_1BndryRegister_1a543c6c7f9abadfda4cb25368007d14f8" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>DistributionMap</name></member>
      <member refid="classamrex_1_1BndryData_1a2aee61504e5cdef7ac8af1986bff5c6c" prot="protected" virt="non-virtual"><scope>amrex::MacBndry</scope><name>geom</name></member>
      <member refid="classamrex_1_1BndryData_1a23e91cef1e7680f2ee0f8c741768e790" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>getDomain</name></member>
      <member refid="classamrex_1_1BndryData_1a1c808b83c725af10075314a95391e06f" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>getGeom</name></member>
      <member refid="classamrex_1_1BndryRegister_1ae15db9f8fcfd9583ae5907d4cf69eeb9" prot="protected" virt="non-virtual"><scope>amrex::MacBndry</scope><name>grids</name></member>
      <member refid="classamrex_1_1InterpBndryData_1a3c37f7ae3bebb39f7fac821540e10227" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>IBD_max_order_DEF</name></member>
      <member refid="classamrex_1_1BndryData_1a86d75e0d19f16438072188201b4e6dea" prot="protected" virt="non-virtual"><scope>amrex::MacBndry</scope><name>init</name></member>
      <member refid="classamrex_1_1BndryRegister_1a02832dac3fe498a4a60c84024d2fa2ad" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryRegister::"><scope>amrex::MacBndry</scope><name>init</name></member>
      <member refid="classamrex_1_1InterpBndryData_1a4d91b0f0b2fdf34ead31dbb37eb81481" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>InterpBndryData</name></member>
      <member refid="classamrex_1_1InterpBndryData_1aacdd08122e12fb3d39a4102127cbf2ac" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>InterpBndryData</name></member>
      <member refid="classamrex_1_1InterpBndryData_1ab2cb364c5c9b8f308e807ac22cd64460" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>InterpBndryData</name></member>
      <member refid="classamrex_1_1InterpBndryData_1aaf5621e5b48610f485a220c581374dea" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>InterpBndryData</name></member>
      <member refid="classamrex_1_1BndryRegister_1a081060fb3475eb5b2a2b5a620ca98bcb" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>linComb</name></member>
      <member refid="classamrex_1_1BndryData_1a93c9313da3c49504432d4eefb95fab98" prot="protected" virt="non-virtual"><scope>amrex::MacBndry</scope><name>m_defined</name></member>
      <member refid="classamrex_1_1BndryData_1a407bf2d353db9c58b6205a43b2d500bd" prot="protected" virt="non-virtual"><scope>amrex::MacBndry</scope><name>m_ncomp</name></member>
      <member refid="classamrex_1_1MacBndry_1a0da143add897028cf221c27f035335b2" prot="private" virt="non-virtual"><scope>amrex::MacBndry</scope><name>m_phys_bc</name></member>
      <member refid="classamrex_1_1MacBndry_1aeb14ec13ce6b570d59647427a8717dfa" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>MacBndry</name></member>
      <member refid="classamrex_1_1MacBndry_1a7adac5379d6492f57784417ec6b7b68f" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>MacBndry</name></member>
      <member refid="classamrex_1_1MacBndry_1a7f8311f229addca98aca749a0e01aa2b" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>MacBndry</name></member>
      <member refid="classamrex_1_1MacBndry_1a208d0bb0bf64833160511cec605e873b" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>MacBndry</name></member>
      <member refid="classamrex_1_1BndryData_1af590a7b776cc9ccee49e607a3e84671d" prot="protected" virt="non-virtual"><scope>amrex::MacBndry</scope><name>masks</name></member>
      <member refid="classamrex_1_1BndryData_1a4d31afbfcfb31a6229877bb9ad880fb9" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>MaskVal</name></member>
      <member refid="classamrex_1_1InterpBndryData_1ac44f35418adba2d5b16a824b57ebeb37" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>maxOrderDEF</name></member>
      <member refid="classamrex_1_1BndryData_1a97018aa05709deb4cdbbcdc4a2c9f410" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>nComp</name></member>
      <member refid="classamrex_1_1BndryData_1a4d31afbfcfb31a6229877bb9ad880fb9a54f598ca1ea830b90bd86719dd843014" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>not_covered</name></member>
      <member refid="classamrex_1_1BndryData_1a4d31afbfcfb31a6229877bb9ad880fb9a22450c0e6f732b3f87827b12e1b20aa5" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>NumMaskVals</name></member>
      <member refid="classamrex_1_1BndryRegister_1ad0674b001bc3b0a4b75d1029e94312c2" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>operator+=</name></member>
      <member refid="classamrex_1_1MacBndry_1a25041eb939703c22f9d73ef73febcba3" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>operator=</name></member>
      <member refid="classamrex_1_1MacBndry_1a2acbd062998e69283c2180d6b9b09fde" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>operator=</name></member>
      <member refid="classamrex_1_1InterpBndryData_1ad0d8f84e27d334aaccb3d207e438edbf" prot="public" virt="non-virtual" ambiguityscope="amrex::InterpBndryData::"><scope>amrex::MacBndry</scope><name>operator=</name></member>
      <member refid="classamrex_1_1InterpBndryData_1a9e3a19f47c44b99ca92c3042a730c160" prot="public" virt="non-virtual" ambiguityscope="amrex::InterpBndryData::"><scope>amrex::MacBndry</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BndryData_1a7a048ebe06e3f4bd0eda04267d099526" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryData::"><scope>amrex::MacBndry</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BndryData_1a91c68a0f4629147dee1b0d6a9105ce91" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryData::"><scope>amrex::MacBndry</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BndryRegister_1aca9e7d7c7f5c551ed60dde97cab4cc76" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryRegister::"><scope>amrex::MacBndry</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BndryRegister_1a09b5da018d193a820c808b1f2cab5095" prot="public" virt="non-virtual" ambiguityscope="amrex::BndryRegister::"><scope>amrex::MacBndry</scope><name>operator=</name></member>
      <member refid="classamrex_1_1BndryData_1a46b99b60d63dc321382543e85c6fac52" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1BndryData_1abde34b0ee2d6202d1cc507137de7110c" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>operator[]</name></member>
      <member refid="classamrex_1_1BndryData_1a4d31afbfcfb31a6229877bb9ad880fb9aa3c78d810a253d1eace3c04595537ff1" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>outside_domain</name></member>
      <member refid="classamrex_1_1MacBndry_1a2e1c27be0a1e95c36acda58c970775dc" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>phys_bc_hi</name></member>
      <member refid="classamrex_1_1MacBndry_1ae0994a20e5bd402ffafb58b9f2d2317b" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>phys_bc_lo</name></member>
      <member refid="classamrex_1_1MacBndry_1a7a1de984132f94266ef9ca891e4e6d24" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>PhysBC</name></member>
      <member refid="classamrex_1_1BndryRegister_1a1fbfbedbc701bb9f20fa7487bff20bdf" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>plus</name></member>
      <member refid="classamrex_1_1BndryRegister_1ab19d96f57df527f106a7f53c2590b65a" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>plusFrom</name></member>
      <member refid="classamrex_1_1BndryRegister_1a4cb1af64eb4645b6e6398c1839ecabe7" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>read</name></member>
      <member refid="classamrex_1_1BndryData_1ab4ed85c429f2c9ba26ce7e046590aee0" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>RealTuple</name></member>
      <member refid="classamrex_1_1MacBndry_1a997a1e24113b6cad5ea1674bcd061d59" prot="public" virt="virtual"><scope>amrex::MacBndry</scope><name>setBndryConds</name></member>
      <member refid="classamrex_1_1MacBndry_1af8d34108797db541f2d5ef276a94634e" prot="public" virt="virtual"><scope>amrex::MacBndry</scope><name>setBndryConds</name></member>
      <member refid="classamrex_1_1InterpBndryData_1aed3688b851edabbdefbcbe81c5f51b21" prot="public" virt="virtual"><scope>amrex::MacBndry</scope><name>setBndryValues</name></member>
      <member refid="classamrex_1_1InterpBndryData_1a2cd3291710fa05174dedeae1237696fa" prot="public" virt="virtual"><scope>amrex::MacBndry</scope><name>setBndryValues</name></member>
      <member refid="classamrex_1_1InterpBndryData_1a7059969ab7be0a1abf225299f0096563" prot="public" virt="virtual"><scope>amrex::MacBndry</scope><name>setBndryValues</name></member>
      <member refid="classamrex_1_1InterpBndryData_1ab141baee1bcdc61e9f49d5c4114a7a01" prot="public" virt="virtual"><scope>amrex::MacBndry</scope><name>setBndryValues</name></member>
      <member refid="classamrex_1_1InterpBndryData_1a8883417c1aab8d1739c01f17ad19893f" prot="public" virt="virtual"><scope>amrex::MacBndry</scope><name>setBndryValues</name></member>
      <member refid="classamrex_1_1BndryData_1a1817e397bfd5fde2d13cf387fdea1634" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>setBoundCond</name></member>
      <member refid="classamrex_1_1BndryData_1a2d630b4b3737a4d5f8a896954919b210" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>setBoundCond</name></member>
      <member refid="classamrex_1_1BndryData_1a915cd3e0f2421e3ffe2286c62305bedf" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>setBoundLoc</name></member>
      <member refid="classamrex_1_1BndryData_1a09c6217601d6804d709c3860a081e3f3" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>setBoundLoc</name></member>
      <member refid="classamrex_1_1BndryRegister_1a4da05261825b0d26b246bf5c5b5fb586" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>setBoxes</name></member>
      <member refid="classamrex_1_1MacBndry_1a9abf850c1e8108fedff300e61cc961f6" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>setHomogValues</name></member>
      <member refid="classamrex_1_1InterpBndryData_1a93b74ec9e39f3c4ad998f20e4ed1e8ee" prot="public" virt="non-virtual" ambiguityscope="amrex::InterpBndryData::"><scope>amrex::MacBndry</scope><name>setHomogValues</name></member>
      <member refid="classamrex_1_1BndryRegister_1a8a45cb99b2e11388c149bf277120fbc9" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>setVal</name></member>
      <member refid="classamrex_1_1BndryData_1a1fe4b4c1ca31db758ed7599cc0993f13" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>setValue</name></member>
      <member refid="classamrex_1_1BndryRegister_1a32eadb3490dbaa29c79ebea0c0c8b8bd" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>size</name></member>
      <member refid="classamrex_1_1InterpBndryData_1a6801628a380e0cec5714dd9e5fe8621b" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>updateBndryValues</name></member>
      <member refid="classamrex_1_1InterpBndryData_1af1f588505ed7575ed35fcfddfaeb5bfc" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>updateBndryValues</name></member>
      <member refid="classamrex_1_1BndryRegister_1a72d84522ffa27cd1d702aaeeccd1a585" prot="public" virt="non-virtual"><scope>amrex::MacBndry</scope><name>write</name></member>
      <member refid="classamrex_1_1BndryData_1ad6ebc5a788a82c41a8b1bffc8e589440" prot="public" virt="virtual"><scope>amrex::MacBndry</scope><name>~BndryData</name></member>
      <member refid="classamrex_1_1BndryRegister_1a3607c6a07e3dd764daaf2cb5301f1a59" prot="public" virt="virtual"><scope>amrex::MacBndry</scope><name>~BndryRegister</name></member>
      <member refid="classamrex_1_1InterpBndryData_1aba3d2785516360221c4a05c8fa56cc68" prot="public" virt="virtual"><scope>amrex::MacBndry</scope><name>~InterpBndryData</name></member>
      <member refid="classamrex_1_1MacBndry_1a02591b27ce31d10c67b00ed2c9281684" prot="public" virt="virtual"><scope>amrex::MacBndry</scope><name>~MacBndry</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
