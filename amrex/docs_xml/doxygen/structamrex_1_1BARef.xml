<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structamrex_1_1BARef" kind="struct" language="C++" prot="public">
    <compoundname>amrex::BARef</compoundname>
    <includes refid="AMReX__BoxArray_8H" local="no">AMReX_BoxArray.H</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structamrex_1_1BARef_1a59cc4e634f9108fb676919f94f8ff55f" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="namespaceamrex_1a8792201c856a367dda275e09047daa33" kindref="member">IntVect</ref>, std::vector&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;, IntVect::shift_hasher &gt;</type>
        <definition>using amrex::BARef::HashType =  std::unordered_map&lt; IntVect, std::vector&lt;int&gt;, IntVect::shift_hasher &gt;</definition>
        <argsstring></argsstring>
        <name>HashType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="100" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1BARef_1aaa1d0e47191bce43137f9aeecf529f64" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1a222089e49ba211b37cf7a4a8ae7eb186" kindref="member">Box</ref> &gt;</type>
        <definition>Vector&lt;Box&gt; amrex::BARef::m_abox</definition>
        <argsstring></argsstring>
        <name>m_abox</name>
        <briefdescription>
<para>The data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="93" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1BARef_1a88374d21f3cf26914235a3136df641f7" prot="public" static="no" mutable="yes">
        <type><ref refid="namespaceamrex_1a222089e49ba211b37cf7a4a8ae7eb186" kindref="member">Box</ref></type>
        <definition>Box amrex::BARef::bbox</definition>
        <argsstring></argsstring>
        <name>bbox</name>
        <briefdescription>
<para>Box hash stuff. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="96" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1BARef_1a5944e840877ab3c3a9aa28d2bd5d1399" prot="public" static="no" mutable="yes">
        <type><ref refid="namespaceamrex_1a8792201c856a367dda275e09047daa33" kindref="member">IntVect</ref></type>
        <definition>IntVect amrex::BARef::crsn</definition>
        <argsstring></argsstring>
        <name>crsn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="98" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1BARef_1a734b995447c10c9d1c7b743aaa30e345" prot="public" static="no" mutable="yes">
        <type><ref refid="structamrex_1_1BARef_1a59cc4e634f9108fb676919f94f8ff55f" kindref="member">HashType</ref></type>
        <definition>HashType amrex::BARef::hash</definition>
        <argsstring></argsstring>
        <name>hash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="103" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1BARef_1aa7702554a15d6a73ffa7a16ee2e017bc" prot="public" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool amrex::BARef::has_hashmap</definition>
        <argsstring></argsstring>
        <name>has_hashmap</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="105" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structamrex_1_1BARef_1a221b256184f09f24c7e7a835d6cf4a9e" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::BARef::numboxarrays</definition>
        <argsstring></argsstring>
        <name>numboxarrays</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="107" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1BARef_1aa4715d9e30ad640a00703a76b8b29f5d" prot="public" static="yes" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::BARef::numboxarrays_hwm</definition>
        <argsstring></argsstring>
        <name>numboxarrays_hwm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="108" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1BARef_1aaa44a8c337df517114ccca6c8d4a2c11" prot="public" static="yes" mutable="no">
        <type>Long</type>
        <definition>Long amrex::BARef::total_box_bytes</definition>
        <argsstring></argsstring>
        <name>total_box_bytes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="109" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1BARef_1a04d3d344f8124f6c49b5d0ab984a642b" prot="public" static="yes" mutable="no">
        <type>Long</type>
        <definition>Long amrex::BARef::total_box_bytes_hwm</definition>
        <argsstring></argsstring>
        <name>total_box_bytes_hwm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="110" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1BARef_1a2252a59c60e4bc7ad886663a4ebc32b0" prot="public" static="yes" mutable="no">
        <type>Long</type>
        <definition>Long amrex::BARef::total_hash_bytes</definition>
        <argsstring></argsstring>
        <name>total_hash_bytes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="111" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1BARef_1a65dc0d94878bc8772f54d69c57430979" prot="public" static="yes" mutable="no">
        <type>Long</type>
        <definition>Long amrex::BARef::total_hash_bytes_hwm</definition>
        <argsstring></argsstring>
        <name>total_hash_bytes_hwm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="112" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1BARef_1a706eeeb8f176a08d3774dd488715bfc1" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool amrex::BARef::initialized</definition>
        <argsstring></argsstring>
        <name>initialized</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="116" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1BARef_1a85cb1fd1c58fbc88dad28f9336d6245f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::BARef::BARef</definition>
        <argsstring>()</argsstring>
        <name>BARef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="58" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.cpp" bodystart="35" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BARef_1a7a41d2a79c7b1a0f9b36ffa0afbc6b49" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::BARef::BARef</definition>
        <argsstring>(size_t size)</argsstring>
        <name>BARef</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="59" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.cpp" bodystart="42" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BARef_1a789502091a9bdb1518f980349e484bfc" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::BARef::BARef</definition>
        <argsstring>(const Box &amp;b)</argsstring>
        <name>BARef</name>
        <param>
          <type>const <ref refid="namespaceamrex_1a222089e49ba211b37cf7a4a8ae7eb186" kindref="member">Box</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="60" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.cpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BARef_1a850d8df48213b59d82ab683351d2805e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::BARef::BARef</definition>
        <argsstring>(const BoxList &amp;bl)</argsstring>
        <name>BARef</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxList" kindref="compound">BoxList</ref> &amp;</type>
          <declname>bl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="61" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.cpp" bodystart="55" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BARef_1a99abf80b40a6ebff2f6ac1e3e71a21da" prot="public" static="no" const="no" explicit="yes" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::BARef::BARef</definition>
        <argsstring>(BoxList &amp;&amp;bl) noexcept</argsstring>
        <name>BARef</name>
        <param>
          <type><ref refid="classamrex_1_1BoxList" kindref="compound">BoxList</ref> &amp;&amp;</type>
          <declname>bl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="62" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.cpp" bodystart="63" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BARef_1a9c091cdb6183ee153e309231d68ef52b" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::BARef::BARef</definition>
        <argsstring>(std::istream &amp;is)</argsstring>
        <name>BARef</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="63" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.cpp" bodystart="71" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BARef_1ad2f872def0b3f44f438a4aa0ee455ad1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::BARef::BARef</definition>
        <argsstring>(const BARef &amp;rhs)</argsstring>
        <name>BARef</name>
        <param>
          <type>const <ref refid="structamrex_1_1BARef" kindref="compound">BARef</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="64" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.cpp" bodystart="77" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BARef_1a299f5f87c10a06d86f32289928792d07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::BARef::BARef</definition>
        <argsstring>(BARef &amp;&amp;rhs)=delete</argsstring>
        <name>BARef</name>
        <param>
          <type><ref refid="structamrex_1_1BARef" kindref="compound">BARef</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="65" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BARef_1a220d49c6e54825fb9753f389bc247ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structamrex_1_1BARef" kindref="compound">BARef</ref> &amp;</type>
        <definition>BARef&amp; amrex::BARef::operator=</definition>
        <argsstring>(const BARef &amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structamrex_1_1BARef" kindref="compound">BARef</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="66" column="11"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BARef_1ac35e7bcd2e6c974918c1d5e74a4bac3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structamrex_1_1BARef" kindref="compound">BARef</ref> &amp;</type>
        <definition>BARef&amp; amrex::BARef::operator=</definition>
        <argsstring>(BARef &amp;&amp;rhs)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structamrex_1_1BARef" kindref="compound">BARef</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="67" column="11"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BARef_1a1b8ba3959e98109e86948f5cde5109c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::BARef::~BARef</definition>
        <argsstring>()</argsstring>
        <name>~BARef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="69" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.cpp" bodystart="85" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BARef_1acc3f91bbfe28d183372eb8befe363972" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::BARef::define</definition>
        <argsstring>(const Box &amp;bx)</argsstring>
        <name>define</name>
        <param>
          <type>const <ref refid="namespaceamrex_1a222089e49ba211b37cf7a4a8ae7eb186" kindref="member">Box</ref> &amp;</type>
          <declname>bx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="71" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.cpp" bodystart="143" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BARef_1a983668be1ab6a935c4bd6bdf22d5c8bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::BARef::define</definition>
        <argsstring>(const BoxList &amp;bl)</argsstring>
        <name>define</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxList" kindref="compound">BoxList</ref> &amp;</type>
          <declname>bl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="72" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.cpp" bodystart="156" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BARef_1ad0db0d492add727fe2dbf88391e1c328" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::BARef::define</definition>
        <argsstring>(BoxList &amp;&amp;bl) noexcept</argsstring>
        <name>define</name>
        <param>
          <type><ref refid="classamrex_1_1BoxList" kindref="compound">BoxList</ref> &amp;&amp;</type>
          <declname>bl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="73" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.cpp" bodystart="168" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BARef_1ad04e340c23c29ecb2782dec327e0a773" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::BARef::define</definition>
        <argsstring>(std::istream &amp;is, int &amp;ndims)</argsstring>
        <name>define</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &amp;</type>
          <declname>ndims</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="74" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.cpp" bodystart="94" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BARef_1a6d54f5af3411a20df87cec16abf974f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::BARef::resize</definition>
        <argsstring>(Long n)</argsstring>
        <name>resize</name>
        <param>
          <type>Long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="76" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.cpp" bodystart="180" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BARef_1af9368a5b73dd3adff290c1dfc5bc4b88" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::BARef::HasHashMap</definition>
        <argsstring>() const</argsstring>
        <name>HasHashMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="82" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="82" bodyend="89"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structamrex_1_1BARef_1aae9932a1a2b245c7a6a1b472cbd0b8ff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::BARef::Initialize</definition>
        <argsstring>()</argsstring>
        <name>Initialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="114" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.cpp" bodystart="231" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1BARef_1aba76fcc2eabe3ac7e99e4b5e52cf3f0f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::BARef::Finalize</definition>
        <argsstring>()</argsstring>
        <name>Finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="115" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.cpp" bodystart="255" bodyend="258"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5">
        <label>T</label>
      </node>
      <node id="4">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="2" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>amrex::BoxND&lt; AMREX_SPACEDIM &gt;</label>
        <link refid="classamrex_1_1BoxND"/>
      </node>
      <node id="3">
        <label>amrex::Vector&lt; amrex::BoxND &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>amrex::IntVectND&lt; dim &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="8">
        <label>std::vector&lt; int &gt;</label>
      </node>
      <node id="2">
        <label>amrex::IntVectND&lt; AMREX_SPACEDIM &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" line="56" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_BoxArray.H" bodystart="57" bodyend="117"/>
    <listofallmembers>
      <member refid="structamrex_1_1BARef_1a85cb1fd1c58fbc88dad28f9336d6245f" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>BARef</name></member>
      <member refid="structamrex_1_1BARef_1a7a41d2a79c7b1a0f9b36ffa0afbc6b49" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>BARef</name></member>
      <member refid="structamrex_1_1BARef_1a789502091a9bdb1518f980349e484bfc" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>BARef</name></member>
      <member refid="structamrex_1_1BARef_1a850d8df48213b59d82ab683351d2805e" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>BARef</name></member>
      <member refid="structamrex_1_1BARef_1a99abf80b40a6ebff2f6ac1e3e71a21da" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>BARef</name></member>
      <member refid="structamrex_1_1BARef_1a9c091cdb6183ee153e309231d68ef52b" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>BARef</name></member>
      <member refid="structamrex_1_1BARef_1ad2f872def0b3f44f438a4aa0ee455ad1" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>BARef</name></member>
      <member refid="structamrex_1_1BARef_1a299f5f87c10a06d86f32289928792d07" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>BARef</name></member>
      <member refid="structamrex_1_1BARef_1a88374d21f3cf26914235a3136df641f7" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>bbox</name></member>
      <member refid="structamrex_1_1BARef_1a5944e840877ab3c3a9aa28d2bd5d1399" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>crsn</name></member>
      <member refid="structamrex_1_1BARef_1acc3f91bbfe28d183372eb8befe363972" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>define</name></member>
      <member refid="structamrex_1_1BARef_1a983668be1ab6a935c4bd6bdf22d5c8bb" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>define</name></member>
      <member refid="structamrex_1_1BARef_1ad0db0d492add727fe2dbf88391e1c328" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>define</name></member>
      <member refid="structamrex_1_1BARef_1ad04e340c23c29ecb2782dec327e0a773" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>define</name></member>
      <member refid="structamrex_1_1BARef_1aba76fcc2eabe3ac7e99e4b5e52cf3f0f" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>Finalize</name></member>
      <member refid="structamrex_1_1BARef_1aa7702554a15d6a73ffa7a16ee2e017bc" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>has_hashmap</name></member>
      <member refid="structamrex_1_1BARef_1a734b995447c10c9d1c7b743aaa30e345" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>hash</name></member>
      <member refid="structamrex_1_1BARef_1af9368a5b73dd3adff290c1dfc5bc4b88" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>HasHashMap</name></member>
      <member refid="structamrex_1_1BARef_1a59cc4e634f9108fb676919f94f8ff55f" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>HashType</name></member>
      <member refid="structamrex_1_1BARef_1aae9932a1a2b245c7a6a1b472cbd0b8ff" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>Initialize</name></member>
      <member refid="structamrex_1_1BARef_1a706eeeb8f176a08d3774dd488715bfc1" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>initialized</name></member>
      <member refid="structamrex_1_1BARef_1aaa1d0e47191bce43137f9aeecf529f64" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>m_abox</name></member>
      <member refid="structamrex_1_1BARef_1a221b256184f09f24c7e7a835d6cf4a9e" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>numboxarrays</name></member>
      <member refid="structamrex_1_1BARef_1aa4715d9e30ad640a00703a76b8b29f5d" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>numboxarrays_hwm</name></member>
      <member refid="structamrex_1_1BARef_1a220d49c6e54825fb9753f389bc247ea8" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>operator=</name></member>
      <member refid="structamrex_1_1BARef_1ac35e7bcd2e6c974918c1d5e74a4bac3a" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>operator=</name></member>
      <member refid="structamrex_1_1BARef_1a6d54f5af3411a20df87cec16abf974f8" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>resize</name></member>
      <member refid="structamrex_1_1BARef_1aaa44a8c337df517114ccca6c8d4a2c11" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>total_box_bytes</name></member>
      <member refid="structamrex_1_1BARef_1a04d3d344f8124f6c49b5d0ab984a642b" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>total_box_bytes_hwm</name></member>
      <member refid="structamrex_1_1BARef_1a2252a59c60e4bc7ad886663a4ebc32b0" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>total_hash_bytes</name></member>
      <member refid="structamrex_1_1BARef_1a65dc0d94878bc8772f54d69c57430979" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>total_hash_bytes_hwm</name></member>
      <member refid="structamrex_1_1BARef_1a1b8ba3959e98109e86948f5cde5109c1" prot="public" virt="non-virtual"><scope>amrex::BARef</scope><name>~BARef</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
