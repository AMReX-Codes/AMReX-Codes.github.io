<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="AMReX__Parser__Exe_8H" kind="file" language="C++">
    <compoundname>AMReX_Parser_Exe.H</compoundname>
    <includes local="no">AMReX_Config.H</includes>
    <includes refid="AMReX__Parser__Y_8H" local="no">AMReX_Parser_Y.H</includes>
    <includes refid="AMReX__Vector_8H" local="no">AMReX_Vector.H</includes>
    <includes local="no">limits</includes>
    <includedby refid="AMReX__Parser_8H" local="no">/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H</includedby>
    <includedby refid="AMReX__Parser__Exe_8cpp" local="no">/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Exe.cpp</includedby>
    <incdepgraph>
      <node id="63">
        <label>atomic</label>
      </node>
      <node id="38">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>iomanip</label>
      </node>
      <node id="24">
        <label>functional</label>
      </node>
      <node id="51">
        <label>AMReX_ValLocPair.H</label>
        <link refid="AMReX__ValLocPair_8H"/>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>limits</label>
      </node>
      <node id="49">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>float.h</label>
      </node>
      <node id="31">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>cstdint</label>
      </node>
      <node id="55">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>cmath</label>
      </node>
      <node id="19">
        <label>cassert</label>
      </node>
      <node id="36">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>stdexcept</label>
      </node>
      <node id="20">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>numeric</label>
      </node>
      <node id="50">
        <label>AMReX_GpuComplex.H</label>
        <link refid="AMReX__GpuComplex_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>string</label>
      </node>
      <node id="67">
        <label>AMReX_ANSIEscCode.H</label>
        <link refid="AMReX__ANSIEscCode_8H"/>
      </node>
      <node id="4">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>fstream</label>
      </node>
      <node id="11">
        <label>limits.h</label>
      </node>
      <node id="33">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>string_view</label>
      </node>
      <node id="8">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>typeinfo</label>
      </node>
      <node id="5">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>AMReX_Config.H</label>
      </node>
      <node id="6">
        <label>cstdio</label>
      </node>
      <node id="58">
        <label>tuple</label>
      </node>
      <node id="61">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>stack</label>
      </node>
      <node id="28">
        <label>vector</label>
      </node>
      <node id="15">
        <label>utility</label>
      </node>
      <node id="52">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>array</label>
      </node>
      <node id="62">
        <label>sstream</label>
      </node>
      <node id="9">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>AMReX_Parser_Y.H</label>
        <link refid="AMReX__Parser__Y_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>iosfwd</label>
      </node>
      <node id="13">
        <label>cstdlib</label>
      </node>
      <node id="25">
        <label>iostream</label>
      </node>
      <node id="32">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>cstddef</label>
      </node>
      <node id="54">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>climits</label>
      </node>
      <node id="64">
        <label>csignal</label>
      </node>
      <node id="7">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>type_traits</label>
      </node>
      <node id="72">
        <label>set</label>
      </node>
      <node id="40">
        <label>algorithm</label>
      </node>
      <node id="71">
        <label>cstring</label>
      </node>
      <node id="57">
        <label>AMReX_TypeList.H</label>
        <link refid="AMReX__TypeList_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Exe.H</label>
        <link refid="AMReX__Parser__Exe_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>memory</label>
      </node>
      <node id="10">
        <label>inttypes.h</label>
      </node>
      <node id="44">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.H</label>
        <link refid="AMReX__ParmParse_8H"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleReduce.H</label>
        <link refid="AMReX__ParticleReduce_8H"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Geometry.cpp</label>
        <link refid="AMReX__Geometry_8cpp"/>
      </node>
      <node id="49">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level_chkpt_file.H</label>
        <link refid="AMReX__EB2__Level__chkpt__file_8H"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_InSituBridge.cpp</label>
        <link refid="AMReX__InSituBridge_8cpp"/>
      </node>
      <node id="82">
        <label>/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Exe.cpp</label>
        <link refid="AMReX__Parser__Exe_8cpp"/>
      </node>
      <node id="29">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.cpp</label>
        <link refid="AMReX__EB2_8cpp"/>
      </node>
      <node id="16">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Machine.cpp</label>
        <link refid="AMReX__Machine_8cpp"/>
      </node>
      <node id="21">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_ParmParse.cpp</label>
        <link refid="AMReX__ParmParse_8cpp"/>
      </node>
      <node id="69">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTransformation.H</label>
        <link refid="AMReX__ParticleTransformation_8H"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_utils.H</label>
        <link refid="AMReX__EB__utils_8H"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_TinyProfiler.cpp</label>
        <link refid="AMReX__TinyProfiler_8cpp"/>
      </node>
      <node id="18">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MemProfiler.cpp</label>
        <link refid="AMReX__MemProfiler_8cpp"/>
      </node>
      <node id="36">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IndexSpace_STL.cpp</label>
        <link refid="AMReX__EB2__IndexSpace__STL_8cpp"/>
      </node>
      <node id="20">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_ParallelDescriptor.cpp</label>
        <link refid="AMReX__ParallelDescriptor_8cpp"/>
      </node>
      <node id="19">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_OpenMP.cpp</label>
        <link refid="AMReX__OpenMP_8cpp"/>
      </node>
      <node id="10">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.cpp</label>
        <link refid="AMReX__DistributionMapping_8cpp"/>
      </node>
      <node id="53">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp</label>
        <link refid="AMReX__EBDataCollection_8cpp"/>
      </node>
      <node id="55">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrMeshInSituBridge.cpp</label>
        <link refid="AMReX__AmrMeshInSituBridge_8cpp"/>
      </node>
      <node id="62">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParticles.H</label>
        <link refid="AMReX__AmrParticles_8H"/>
      </node>
      <node id="77">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticleHDF5.H</label>
        <link refid="AMReX__ParticleHDF5_8H"/>
      </node>
      <node id="40">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_RedistributionApply.cpp</label>
        <link refid="AMReX__EB__RedistributionApply_8cpp"/>
      </node>
      <node id="25">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_RKIntegrator.H</label>
        <link refid="AMReX__RKIntegrator_8H"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_fi.cpp</label>
        <link refid="AMReX__parmparse__fi_8cpp"/>
      </node>
      <node id="81">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF.H</label>
        <link refid="AMReX__EB2__IF_8H"/>
      </node>
      <node id="38">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_FluxRedistribute.cpp</label>
        <link refid="AMReX__EB__FluxRedistribute_8cpp"/>
      </node>
      <node id="5">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp</label>
        <link refid="AMReX__AmrLevel_8cpp"/>
      </node>
      <node id="54">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreIJIface.cpp</label>
        <link refid="AMReX__HypreIJIface_8cpp"/>
      </node>
      <node id="57">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SUNDIALS/AMReX_SundialsIntegrator.H</label>
        <link refid="AMReX__SundialsIntegrator_8H"/>
      </node>
      <node id="70">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleUtil.H</label>
        <link refid="AMReX__ParticleUtil_8H"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H</label>
        <link refid="AMReX__Particle_8H"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_StateRedistribute.cpp</label>
        <link refid="AMReX__EB__StateRedistribute_8cpp"/>
      </node>
      <node id="66">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticle_mod_K.H</label>
        <link refid="AMReX__TracerParticle__mod__K_8H"/>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level_STL.H</label>
        <link refid="AMReX__EB2__Level__STL_8H"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_parstream.cpp</label>
        <link refid="AMReX__parstream_8cpp"/>
      </node>
      <node id="35">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IndexSpace_STL.H</label>
        <link refid="AMReX__EB2__IndexSpace__STL_8H"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborList.H</label>
        <link refid="AMReX__NeighborList_8H"/>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Amr.cpp</label>
        <link refid="AMReX__Amr_8cpp"/>
      </node>
      <node id="6">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrMesh.cpp</label>
        <link refid="AMReX__AmrMesh_8cpp"/>
      </node>
      <node id="8">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_Arena.cpp</label>
        <link refid="AMReX__Arena_8cpp"/>
      </node>
      <node id="2">
        <label>/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.H</label>
        <link refid="AMReX__Parser_8H"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_Redistribution.H</label>
        <link refid="AMReX__EB__Redistribution_8H"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticles.cpp</label>
        <link refid="AMReX__TracerParticles_8cpp"/>
      </node>
      <node id="32">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.cpp</label>
        <link refid="AMReX__algoim_8cpp"/>
      </node>
      <node id="75">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleUtil.cpp</label>
        <link refid="AMReX__ParticleUtil_8cpp"/>
      </node>
      <node id="39">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_Redistribution.cpp</label>
        <link refid="AMReX__EB__Redistribution_8cpp"/>
      </node>
      <node id="43">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_StateRedistUtils.cpp</label>
        <link refid="AMReX__EB__StateRedistUtils_8cpp"/>
      </node>
      <node id="59">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ArrayOfStructs.H</label>
        <link refid="AMReX__ArrayOfStructs_8H"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleMesh.H</label>
        <link refid="AMReX__ParticleMesh_8H"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IF_Parser.H</label>
        <link refid="AMReX__EB2__IF__Parser_8H"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H</label>
        <link refid="AMReX__EB2_8H"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX.cpp</label>
        <link refid="AMReX_8cpp"/>
      </node>
      <node id="13">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_ForkJoin.cpp</label>
        <link refid="AMReX__ForkJoin_8cpp"/>
      </node>
      <node id="65">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticles.H</label>
        <link refid="AMReX__TracerParticles_8H"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArrayBase.cpp</label>
        <link refid="AMReX__FabArrayBase_8cpp"/>
      </node>
      <node id="79">
        <label>/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser.cpp</label>
        <link refid="AMReX__Parser_8cpp"/>
      </node>
      <node id="46">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFabFactory.cpp</label>
        <link refid="AMReX__EBFabFactory_8cpp"/>
      </node>
      <node id="28">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMF.cpp</label>
        <link refid="AMReX__VisMF_8cpp"/>
      </node>
      <node id="15">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuDevice.cpp</label>
        <link refid="AMReX__GpuDevice_8cpp"/>
      </node>
      <node id="47">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_WriteEBSurface.cpp</label>
        <link refid="AMReX__WriteEBSurface_8cpp"/>
      </node>
      <node id="72">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleContainerBase.cpp</label>
        <link refid="AMReX__ParticleContainerBase_8cpp"/>
      </node>
      <node id="48">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp</label>
        <link refid="AMReX__EB2__Level_8cpp"/>
      </node>
      <node id="9">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_AsyncOut.cpp</label>
        <link refid="AMReX__AsyncOut_8cpp"/>
      </node>
      <node id="68">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleTile.H</label>
        <link refid="AMReX__ParticleTile_8H"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_MemPool.cpp</label>
        <link refid="AMReX__MemPool_8cpp"/>
      </node>
      <node id="24">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PODVector.cpp</label>
        <link refid="AMReX__PODVector_8cpp"/>
      </node>
      <node id="76">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_WriteBinaryParticleData.H</label>
        <link refid="AMReX__WriteBinaryParticleData_8H"/>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level_STL.cpp</label>
        <link refid="AMReX__EB2__Level__STL_8cpp"/>
      </node>
      <node id="30">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H</label>
        <link refid="AMReX__EB2__Level_8H"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particles.H</label>
        <link refid="AMReX__Particles_8H"/>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IndexSpace_chkpt_file.cpp</label>
        <link refid="AMReX__EB2__IndexSpace__chkpt__file_8cpp"/>
      </node>
      <node id="33">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_IndexSpace_chkpt_file.H</label>
        <link refid="AMReX__EB2__IndexSpace__chkpt__file_8H"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_TimeIntegrator.H</label>
        <link refid="AMReX__TimeIntegrator_8H"/>
      </node>
      <node id="78">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleIO.H</label>
        <link refid="AMReX__ParticleIO_8H"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_utils.cpp</label>
        <link refid="AMReX__EB__utils_8cpp"/>
      </node>
      <node id="41">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_StateRedistItracker.cpp</label>
        <link refid="AMReX__EB__StateRedistItracker_8cpp"/>
      </node>
      <node id="12">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_FArrayBox.cpp</label>
        <link refid="AMReX__FArrayBox_8cpp"/>
      </node>
      <node id="50">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level_chkpt_file.cpp</label>
        <link refid="AMReX__EB2__Level__chkpt__file_8cpp"/>
      </node>
      <node id="1">
        <label>/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Exe.H</label>
        <link refid="AMReX__Parser__Exe_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleContainerBase.H</label>
        <link refid="AMReX__ParticleContainerBase_8H"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H</label>
        <link refid="AMReX__NeighborParticles_8H"/>
      </node>
      <node id="60">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleContainer.H</label>
        <link refid="AMReX__ParticleContainer_8H"/>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structamrex_1_1ParserExeNull" prot="public">amrex::ParserExeNull</innerclass>
    <innerclass refid="structamrex_1_1ParserExeNumber" prot="public">amrex::ParserExeNumber</innerclass>
    <innerclass refid="structamrex_1_1ParserExeSymbol" prot="public">amrex::ParserExeSymbol</innerclass>
    <innerclass refid="structamrex_1_1ParserExeADD" prot="public">amrex::ParserExeADD</innerclass>
    <innerclass refid="structamrex_1_1ParserExeSUB__F" prot="public">amrex::ParserExeSUB_F</innerclass>
    <innerclass refid="structamrex_1_1ParserExeSUB__B" prot="public">amrex::ParserExeSUB_B</innerclass>
    <innerclass refid="structamrex_1_1ParserExeMUL" prot="public">amrex::ParserExeMUL</innerclass>
    <innerclass refid="structamrex_1_1ParserExeDIV__F" prot="public">amrex::ParserExeDIV_F</innerclass>
    <innerclass refid="structamrex_1_1ParserExeDIV__B" prot="public">amrex::ParserExeDIV_B</innerclass>
    <innerclass refid="structamrex_1_1ParserExeF1" prot="public">amrex::ParserExeF1</innerclass>
    <innerclass refid="structamrex_1_1ParserExeF2__F" prot="public">amrex::ParserExeF2_F</innerclass>
    <innerclass refid="structamrex_1_1ParserExeF2__B" prot="public">amrex::ParserExeF2_B</innerclass>
    <innerclass refid="structamrex_1_1ParserExeADD__VP" prot="public">amrex::ParserExeADD_VP</innerclass>
    <innerclass refid="structamrex_1_1ParserExeSUB__VP" prot="public">amrex::ParserExeSUB_VP</innerclass>
    <innerclass refid="structamrex_1_1ParserExeMUL__VP" prot="public">amrex::ParserExeMUL_VP</innerclass>
    <innerclass refid="structamrex_1_1ParserExeDIV__VP" prot="public">amrex::ParserExeDIV_VP</innerclass>
    <innerclass refid="structamrex_1_1ParserExeADD__PP" prot="public">amrex::ParserExeADD_PP</innerclass>
    <innerclass refid="structamrex_1_1ParserExeSUB__PP" prot="public">amrex::ParserExeSUB_PP</innerclass>
    <innerclass refid="structamrex_1_1ParserExeMUL__PP" prot="public">amrex::ParserExeMUL_PP</innerclass>
    <innerclass refid="structamrex_1_1ParserExeDIV__PP" prot="public">amrex::ParserExeDIV_PP</innerclass>
    <innerclass refid="structamrex_1_1ParserExeADD__VN" prot="public">amrex::ParserExeADD_VN</innerclass>
    <innerclass refid="structamrex_1_1ParserExeSUB__VN" prot="public">amrex::ParserExeSUB_VN</innerclass>
    <innerclass refid="structamrex_1_1ParserExeMUL__VN" prot="public">amrex::ParserExeMUL_VN</innerclass>
    <innerclass refid="structamrex_1_1ParserExeDIV__VN" prot="public">amrex::ParserExeDIV_VN</innerclass>
    <innerclass refid="structamrex_1_1ParserExeADD__PN" prot="public">amrex::ParserExeADD_PN</innerclass>
    <innerclass refid="structamrex_1_1ParserExeSUB__PN" prot="public">amrex::ParserExeSUB_PN</innerclass>
    <innerclass refid="structamrex_1_1ParserExeMUL__PN" prot="public">amrex::ParserExeMUL_PN</innerclass>
    <innerclass refid="structamrex_1_1ParserExeDIV__PN" prot="public">amrex::ParserExeDIV_PN</innerclass>
    <innerclass refid="structamrex_1_1ParserExeSquare" prot="public">amrex::ParserExeSquare</innerclass>
    <innerclass refid="structamrex_1_1ParserExePOWI" prot="public">amrex::ParserExePOWI</innerclass>
    <innerclass refid="structamrex_1_1ParserExeIF" prot="public">amrex::ParserExeIF</innerclass>
    <innerclass refid="structamrex_1_1ParserExeJUMP" prot="public">amrex::ParserExeJUMP</innerclass>
    <innerclass refid="structamrex_1_1ParserStack" prot="public">amrex::ParserStack</innerclass>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="AMReX__Parser__Exe_8H_1a17ce5ea3b6e40fa1da429fca8b07406e" prot="public" static="no">
        <name>AMREX_PARSER_STACK_SIZE</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Exe.H" line="11" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Exe.H" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__Parser__Exe_8H_1a13e00db49c0c59dd2772385306e84f9a" prot="public" static="no">
        <name>AMREX_PARSER_LOCAL_IDX0</name>
        <initializer>1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Exe.H" line="14" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Exe.H" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="AMReX__Parser__Exe_8H_1a7478a6b2c1f097effb3b8788ebf49726" prot="public" static="no">
        <name>AMREX_PARSER_GET_DATA</name>
        <param><defname>i</defname></param>
        <initializer>((i)&lt;1000) ? x[i] : pstack[(i)-1000]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Exe.H" line="15" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Exe.H" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>AMREX_PARSER_EXE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_PARSER_EXE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_Config.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Parser__Y_8H" kindref="compound">AMReX_Parser_Y.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Vector_8H" kindref="compound">AMReX_Vector.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>AMREX_PARSER_STACK_SIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="AMReX__Parser__Exe_8H_1a17ce5ea3b6e40fa1da429fca8b07406e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_PARSER_STACK_SIZE<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="AMReX__Parser__Exe_8H_1a13e00db49c0c59dd2772385306e84f9a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_PARSER_LOCAL_IDX0<sp/>1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="AMReX__Parser__Exe_8H_1a7478a6b2c1f097effb3b8788ebf49726" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_PARSER_GET_DATA(i)<sp/>((i)&lt;1000)<sp/>?<sp/>x[i]<sp/>:<sp/>pstack[(i)-1000]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>N:<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>P:<sp/>pointer<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>V:<sp/>value<sp/>(i.e.,<sp/>double<sp/>literal)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/>{</highlight></codeline>
<codeline lineno="24" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ad164042843bc5d3219c38304422dda7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ad164042843bc5d3219c38304422dda7f" kindref="member">PARSER_EXE_NULL</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="25" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a2053b9047a2310dcbbaff624c5bd4301" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a2053b9047a2310dcbbaff624c5bd4301" kindref="member">PARSER_EXE_NUMBER</ref>,</highlight></codeline>
<codeline lineno="26" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a39f7549a4fd26261fcef5e6b3e8d939d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a39f7549a4fd26261fcef5e6b3e8d939d" kindref="member">PARSER_EXE_SYMBOL</ref>,</highlight></codeline>
<codeline lineno="27" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a65accef83deb826771cbd9976c4598b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a65accef83deb826771cbd9976c4598b4" kindref="member">PARSER_EXE_ADD</ref>,</highlight></codeline>
<codeline lineno="28" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a58d8a1e2338a0136e6cdfd56c6cc3dff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a58d8a1e2338a0136e6cdfd56c6cc3dff" kindref="member">PARSER_EXE_SUB_F</ref>,</highlight></codeline>
<codeline lineno="29" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ad128e6d075eb69fd93126e2e25a97256" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ad128e6d075eb69fd93126e2e25a97256" kindref="member">PARSER_EXE_SUB_B</ref>,</highlight></codeline>
<codeline lineno="30" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ac2d587754eccf536e1195395dd760613" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ac2d587754eccf536e1195395dd760613" kindref="member">PARSER_EXE_MUL</ref>,</highlight></codeline>
<codeline lineno="31" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ad3a5a5721de497d1bc95f49759f05a08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ad3a5a5721de497d1bc95f49759f05a08" kindref="member">PARSER_EXE_DIV_F</ref>,</highlight></codeline>
<codeline lineno="32" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a467c9f3fa7bc494399821d9327b05845" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a467c9f3fa7bc494399821d9327b05845" kindref="member">PARSER_EXE_DIV_B</ref>,</highlight></codeline>
<codeline lineno="33" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ad2a0a201913529696e77ea9584318f7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ad2a0a201913529696e77ea9584318f7b" kindref="member">PARSER_EXE_F1</ref>,</highlight></codeline>
<codeline lineno="34" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a6206643ce6fe2a5b52b05bf0075231b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a6206643ce6fe2a5b52b05bf0075231b9" kindref="member">PARSER_EXE_F2_F</ref>,</highlight></codeline>
<codeline lineno="35" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a4f416e08f560a5ada8f89594c011e377" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a4f416e08f560a5ada8f89594c011e377" kindref="member">PARSER_EXE_F2_B</ref>,</highlight></codeline>
<codeline lineno="36" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a7effc6143ed862d060081e1273d2c05b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a7effc6143ed862d060081e1273d2c05b" kindref="member">PARSER_EXE_ADD_VP</ref>,</highlight></codeline>
<codeline lineno="37" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a014920eb1a3da47f76dc0006f292af4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a014920eb1a3da47f76dc0006f292af4d" kindref="member">PARSER_EXE_SUB_VP</ref>,</highlight></codeline>
<codeline lineno="38" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49aca265050303407847584f241e18cd70d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49aca265050303407847584f241e18cd70d" kindref="member">PARSER_EXE_MUL_VP</ref>,</highlight></codeline>
<codeline lineno="39" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ae8298a287437468a3ae7cdebb845082d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ae8298a287437468a3ae7cdebb845082d" kindref="member">PARSER_EXE_DIV_VP</ref>,</highlight></codeline>
<codeline lineno="40" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49aad4ecfa4d8942ee7bc7ce33e479f0aaa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49aad4ecfa4d8942ee7bc7ce33e479f0aaa" kindref="member">PARSER_EXE_ADD_PP</ref>,</highlight></codeline>
<codeline lineno="41" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ae8d143cd5deeffcc76ba9094cd848678" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ae8d143cd5deeffcc76ba9094cd848678" kindref="member">PARSER_EXE_SUB_PP</ref>,</highlight></codeline>
<codeline lineno="42" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a8c3987c7b9bf7be1eb47dc65fdd98d23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a8c3987c7b9bf7be1eb47dc65fdd98d23" kindref="member">PARSER_EXE_MUL_PP</ref>,</highlight></codeline>
<codeline lineno="43" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49af6f81328f5f2e9f06525dd7151a713eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49af6f81328f5f2e9f06525dd7151a713eb" kindref="member">PARSER_EXE_DIV_PP</ref>,</highlight></codeline>
<codeline lineno="44" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a1044c34c6cf2464a5a7d3915828db764" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a1044c34c6cf2464a5a7d3915828db764" kindref="member">PARSER_EXE_ADD_VN</ref>,</highlight></codeline>
<codeline lineno="45" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a59525adc4ae7845b8340dd89993a63ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a59525adc4ae7845b8340dd89993a63ce" kindref="member">PARSER_EXE_SUB_VN</ref>,</highlight></codeline>
<codeline lineno="46" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a9421625896cd614f365853bcfcec5253" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a9421625896cd614f365853bcfcec5253" kindref="member">PARSER_EXE_MUL_VN</ref>,</highlight></codeline>
<codeline lineno="47" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a49fbd97b6c92be61a039dcf485b7ef86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a49fbd97b6c92be61a039dcf485b7ef86" kindref="member">PARSER_EXE_DIV_VN</ref>,</highlight></codeline>
<codeline lineno="48" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a9bf6fa5b900a096eaace0643ea2fc87d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a9bf6fa5b900a096eaace0643ea2fc87d" kindref="member">PARSER_EXE_ADD_PN</ref>,</highlight></codeline>
<codeline lineno="49" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a9264353b9cb7c9e35c524a18fee311c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a9264353b9cb7c9e35c524a18fee311c8" kindref="member">PARSER_EXE_SUB_PN</ref>,</highlight></codeline>
<codeline lineno="50" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49aba0e4205769e25aed168c5b5b7af3426" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49aba0e4205769e25aed168c5b5b7af3426" kindref="member">PARSER_EXE_MUL_PN</ref>,</highlight></codeline>
<codeline lineno="51" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a7d3c18b2badf37a3f1e58f6a94ccd574" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a7d3c18b2badf37a3f1e58f6a94ccd574" kindref="member">PARSER_EXE_DIV_PN</ref>,</highlight></codeline>
<codeline lineno="52" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a5e517dacd4952e08078b4c01130a83ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a5e517dacd4952e08078b4c01130a83ee" kindref="member">PARSER_EXE_SQUARE</ref>,</highlight></codeline>
<codeline lineno="53" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a0d4daa650d2d51c5b0e9a48b41461e7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a0d4daa650d2d51c5b0e9a48b41461e7a" kindref="member">PARSER_EXE_POWI</ref>,</highlight></codeline>
<codeline lineno="54" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ade505eeebd4b9a047f99dd00200376f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ade505eeebd4b9a047f99dd00200376f1" kindref="member">PARSER_EXE_IF</ref>,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49aa72fde98c22155ba9b55510fec6f7afe" kindref="member">PARSER_EXE_JUMP</ref></highlight></codeline>
<codeline lineno="56" refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49aa72fde98c22155ba9b55510fec6f7afe" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="structamrex_1_1ParserExeNull" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeNull" kindref="compound">ParserExeNull</ref><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeNull_1a7aa866ce304756df44e2cfbdf4cdb784" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ad164042843bc5d3219c38304422dda7f" kindref="member">PARSER_EXE_NULL</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="structamrex_1_1ParserExeNumber" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeNumber" kindref="compound">ParserExeNumber</ref><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeNumber_1adb7d2c84743735a7cfb9387544e29e69" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a2053b9047a2310dcbbaff624c5bd4301" kindref="member">PARSER_EXE_NUMBER</ref>;</highlight></codeline>
<codeline lineno="64" refid="structamrex_1_1ParserExeSymbol_1a27fce7530cbea2d1fa6fbc8dcb9c292d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeNumber_1a70cf7dd5ba4cfb79e1bfb498244c4b2a" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="structamrex_1_1ParserExeSymbol" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeSymbol" kindref="compound">ParserExeSymbol</ref><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeSymbol_1a27fce7530cbea2d1fa6fbc8dcb9c292d" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a39f7549a4fd26261fcef5e6b3e8d939d" kindref="member">PARSER_EXE_SYMBOL</ref>;</highlight></codeline>
<codeline lineno="69" refid="structamrex_1_1ParserExeSymbol_1a8c997d8cdc27b43d7f0914cae4e375eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeSymbol_1a8c997d8cdc27b43d7f0914cae4e375eb" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="structamrex_1_1ParserExeADD" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeADD" kindref="compound">ParserExeADD</ref><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeADD_1ae9780c323f695d1c05f0da89b404f3f5" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a65accef83deb826771cbd9976c4598b4" kindref="member">PARSER_EXE_ADD</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="structamrex_1_1ParserExeSUB__F" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeSUB__F" kindref="compound">ParserExeSUB_F</ref><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeSUB__F_1a156affa7d9def076195b3bd1153adcf9" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a58d8a1e2338a0136e6cdfd56c6cc3dff" kindref="member">PARSER_EXE_SUB_F</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="structamrex_1_1ParserExeSUB__B" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeSUB__B" kindref="compound">ParserExeSUB_B</ref><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeSUB__B_1a77aeae01642fffcebf743cdfec7f4c0e" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ad128e6d075eb69fd93126e2e25a97256" kindref="member">PARSER_EXE_SUB_B</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="structamrex_1_1ParserExeMUL" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeMUL" kindref="compound">ParserExeMUL</ref><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeMUL_1aee3c7a5bb4e65811dcfe3ab16c20fb93" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ac2d587754eccf536e1195395dd760613" kindref="member">PARSER_EXE_MUL</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="structamrex_1_1ParserExeDIV__F" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeDIV__F" kindref="compound">ParserExeDIV_F</ref><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeDIV__F_1aa4d9491e106b3adcf5becc2f73da16dd" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ad3a5a5721de497d1bc95f49759f05a08" kindref="member">PARSER_EXE_DIV_F</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="structamrex_1_1ParserExeDIV__B" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeDIV__B" kindref="compound">ParserExeDIV_B</ref><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeDIV__B_1a77c8917540992718e369e3320230d475" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a467c9f3fa7bc494399821d9327b05845" kindref="member">PARSER_EXE_DIV_B</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="structamrex_1_1ParserExeF1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeF1" kindref="compound">ParserExeF1</ref><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeF1_1adb9ca0f0a0b6efe400c4af5ae8608587" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ad2a0a201913529696e77ea9584318f7b" kindref="member">PARSER_EXE_F1</ref>;</highlight></codeline>
<codeline lineno="98" refid="structamrex_1_1ParserExeF1_1a4836ce4c26c643a2da9d8c8efbc0ae02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3a7f6659e1b5842a0322fcdd8ad89589" kindref="member">parser_f1_t</ref><sp/><ref refid="structamrex_1_1ParserExeF1_1a4836ce4c26c643a2da9d8c8efbc0ae02" kindref="member">ftype</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="structamrex_1_1ParserExeF2__F" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeF2__F" kindref="compound">ParserExeF2_F</ref><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeF2__F_1a9f206a8beeabf537b5a47812516e69ba" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a6206643ce6fe2a5b52b05bf0075231b9" kindref="member">PARSER_EXE_F2_F</ref>;</highlight></codeline>
<codeline lineno="103" refid="structamrex_1_1ParserExeF2__F_1adaa66210d4f097a9a20072b64f2d02a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bc" kindref="member">parser_f2_t</ref><sp/><ref refid="structamrex_1_1ParserExeF2__F_1adaa66210d4f097a9a20072b64f2d02a1" kindref="member">ftype</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="structamrex_1_1ParserExeF2__B" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeF2__B" kindref="compound">ParserExeF2_B</ref><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeF2__B_1a7fe680aa1738d34d0e33788579688262" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a4f416e08f560a5ada8f89594c011e377" kindref="member">PARSER_EXE_F2_B</ref>;</highlight></codeline>
<codeline lineno="108" refid="structamrex_1_1ParserExeF2__B_1ac7050f924310ab62e44bdb3c1bebc34b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a0075507273391e5967b9d869daed98bc" kindref="member">parser_f2_t</ref><sp/><ref refid="structamrex_1_1ParserExeF2__B_1ac7050f924310ab62e44bdb3c1bebc34b" kindref="member">ftype</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="structamrex_1_1ParserExeADD__VP" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeADD__VP" kindref="compound">ParserExeADD_VP</ref><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeADD__VP_1a1ad44de0386f4f0192b105d058b2e9ae" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a7effc6143ed862d060081e1273d2c05b" kindref="member">PARSER_EXE_ADD_VP</ref>;</highlight></codeline>
<codeline lineno="113" refid="structamrex_1_1ParserExeADD__VP_1ac902bd51a381698bd542d0537bbc68a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeADD__VP_1ac902bd51a381698bd542d0537bbc68a9" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="114" refid="structamrex_1_1ParserExeSUB__VP_1afc0e358d3159bbe8dcb0687ad7000606" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeADD__VP_1ac6b7e571e8c3f62ebf907b020082abf2" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="structamrex_1_1ParserExeSUB__VP" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeSUB__VP" kindref="compound">ParserExeSUB_VP</ref><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeSUB__VP_1afc0e358d3159bbe8dcb0687ad7000606" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a014920eb1a3da47f76dc0006f292af4d" kindref="member">PARSER_EXE_SUB_VP</ref>;</highlight></codeline>
<codeline lineno="119" refid="structamrex_1_1ParserExeSUB__VP_1addf6c374aa0554779e951c5953d8eedf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeSUB__VP_1addf6c374aa0554779e951c5953d8eedf" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="120" refid="structamrex_1_1ParserExeMUL__VP_1ae7d2b89c080d7581c35ea33598155ae6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeSUB__VP_1aba0f711063f2c6ab16f1d456e059499b" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="structamrex_1_1ParserExeMUL__VP" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeMUL__VP" kindref="compound">ParserExeMUL_VP</ref><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeMUL__VP_1ae7d2b89c080d7581c35ea33598155ae6" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49aca265050303407847584f241e18cd70d" kindref="member">PARSER_EXE_MUL_VP</ref>;</highlight></codeline>
<codeline lineno="125" refid="structamrex_1_1ParserExeMUL__VP_1a7e95851162ef26bcbeffd560a1aea20a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeMUL__VP_1a7e95851162ef26bcbeffd560a1aea20a" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="126" refid="structamrex_1_1ParserExeDIV__VP_1a91a71da9f691a66c9f2e71804dafe02f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeMUL__VP_1a695460708ea3a22fd94fbe0f85aa7346" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="structamrex_1_1ParserExeDIV__VP" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeDIV__VP" kindref="compound">ParserExeDIV_VP</ref><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeDIV__VP_1a91a71da9f691a66c9f2e71804dafe02f" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ae8298a287437468a3ae7cdebb845082d" kindref="member">PARSER_EXE_DIV_VP</ref>;</highlight></codeline>
<codeline lineno="131" refid="structamrex_1_1ParserExeDIV__VP_1a44b2a80319993ff7d80bae168243baba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeDIV__VP_1a44b2a80319993ff7d80bae168243baba" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="132" refid="structamrex_1_1ParserExeADD__PP_1ae018d95c7129bf499a131fb284bde1dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeDIV__VP_1a3b3d6e22362dc0df987b0457a574298d" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="structamrex_1_1ParserExeADD__PP" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeADD__PP" kindref="compound">ParserExeADD_PP</ref><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeADD__PP_1ae018d95c7129bf499a131fb284bde1dc" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49aad4ecfa4d8942ee7bc7ce33e479f0aaa" kindref="member">PARSER_EXE_ADD_PP</ref>;</highlight></codeline>
<codeline lineno="137" refid="structamrex_1_1ParserExeADD__PP_1a029d2d2b4f84a851b54e7152d02f64e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeADD__PP_1a029d2d2b4f84a851b54e7152d02f64e7" kindref="member">i1</ref>;</highlight></codeline>
<codeline lineno="138" refid="structamrex_1_1ParserExeADD__PP_1af297a176eb8b3d166a861ab9fe49984a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeADD__PP_1af297a176eb8b3d166a861ab9fe49984a" kindref="member">i2</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="structamrex_1_1ParserExeSUB__PP" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeSUB__PP" kindref="compound">ParserExeSUB_PP</ref><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeSUB__PP_1a590ef631bf89c5dc8c7f6a232d548b18" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ae8d143cd5deeffcc76ba9094cd848678" kindref="member">PARSER_EXE_SUB_PP</ref>;</highlight></codeline>
<codeline lineno="143" refid="structamrex_1_1ParserExeSUB__PP_1a0245865ebfd18499fa9dbe7a7e52395c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeSUB__PP_1a0245865ebfd18499fa9dbe7a7e52395c" kindref="member">i1</ref>;</highlight></codeline>
<codeline lineno="144" refid="structamrex_1_1ParserExeSUB__PP_1ade0b248b82e632eab9ebe922b5783cb3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeSUB__PP_1ade0b248b82e632eab9ebe922b5783cb3" kindref="member">i2</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="structamrex_1_1ParserExeMUL__PP" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeMUL__PP" kindref="compound">ParserExeMUL_PP</ref><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeMUL__PP_1a4cd57a0c3e914ad6ef7e4f54d65921b4" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a8c3987c7b9bf7be1eb47dc65fdd98d23" kindref="member">PARSER_EXE_MUL_PP</ref>;</highlight></codeline>
<codeline lineno="149" refid="structamrex_1_1ParserExeMUL__PP_1a0d7511e66a8072c65c574dbc4999ba2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeMUL__PP_1a0d7511e66a8072c65c574dbc4999ba2f" kindref="member">i1</ref>;</highlight></codeline>
<codeline lineno="150" refid="structamrex_1_1ParserExeMUL__PP_1af2319b7542a3fd1b19f87d19e250575e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeMUL__PP_1af2319b7542a3fd1b19f87d19e250575e" kindref="member">i2</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="structamrex_1_1ParserExeDIV__PP" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeDIV__PP" kindref="compound">ParserExeDIV_PP</ref><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeDIV__PP_1ab196f95ee0e36a4fbc1b18ce8d9f0c53" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49af6f81328f5f2e9f06525dd7151a713eb" kindref="member">PARSER_EXE_DIV_PP</ref>;</highlight></codeline>
<codeline lineno="155" refid="structamrex_1_1ParserExeDIV__PP_1a8fcfdc43d8025357d14f0893b3701f4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeDIV__PP_1a8fcfdc43d8025357d14f0893b3701f4e" kindref="member">i1</ref>;</highlight></codeline>
<codeline lineno="156" refid="structamrex_1_1ParserExeDIV__PP_1a12bb0e0be719eb62eb806443c4641dcd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeDIV__PP_1a12bb0e0be719eb62eb806443c4641dcd" kindref="member">i2</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="structamrex_1_1ParserExeADD__VN" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeADD__VN" kindref="compound">ParserExeADD_VN</ref><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeADD__VN_1ab67f78b46e0bc2b7d9466373e9a16479" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a1044c34c6cf2464a5a7d3915828db764" kindref="member">PARSER_EXE_ADD_VN</ref>;</highlight></codeline>
<codeline lineno="161" refid="structamrex_1_1ParserExeSUB__VN_1a158350ee674b01b235d333d40a6ce204" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeADD__VN_1ada79934875f45953b20dec41ac4237d0" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="structamrex_1_1ParserExeSUB__VN" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeSUB__VN" kindref="compound">ParserExeSUB_VN</ref><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeSUB__VN_1a158350ee674b01b235d333d40a6ce204" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a59525adc4ae7845b8340dd89993a63ce" kindref="member">PARSER_EXE_SUB_VN</ref>;</highlight></codeline>
<codeline lineno="166" refid="structamrex_1_1ParserExeMUL__VN_1ad2b74694830004b3943d8ecf9e602f9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeSUB__VN_1a84b7da4493aa2827477c76ed75372065" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="structamrex_1_1ParserExeMUL__VN" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeMUL__VN" kindref="compound">ParserExeMUL_VN</ref><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeMUL__VN_1ad2b74694830004b3943d8ecf9e602f9e" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a9421625896cd614f365853bcfcec5253" kindref="member">PARSER_EXE_MUL_VN</ref>;</highlight></codeline>
<codeline lineno="171" refid="structamrex_1_1ParserExeDIV__VN_1aa321f932af8d39c77ac421f0d6a4078e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeMUL__VN_1a6d456e1ca0a648b0eb84aa8d10c21ab9" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">};</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="structamrex_1_1ParserExeDIV__VN" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeDIV__VN" kindref="compound">ParserExeDIV_VN</ref><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeDIV__VN_1aa321f932af8d39c77ac421f0d6a4078e" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a49fbd97b6c92be61a039dcf485b7ef86" kindref="member">PARSER_EXE_DIV_VN</ref>;</highlight></codeline>
<codeline lineno="176" refid="structamrex_1_1ParserExeADD__PN_1a56d500ab92f6615f3087792709558d42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeDIV__VN_1a4f66cd89caf8f347e790a67c2adda4a3" kindref="member">v</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">};</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="structamrex_1_1ParserExeADD__PN" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeADD__PN" kindref="compound">ParserExeADD_PN</ref><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeADD__PN_1a56d500ab92f6615f3087792709558d42" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a9bf6fa5b900a096eaace0643ea2fc87d" kindref="member">PARSER_EXE_ADD_PN</ref>;</highlight></codeline>
<codeline lineno="181" refid="structamrex_1_1ParserExeADD__PN_1a4cdc6228051c575d7a4397fa8bb076fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeADD__PN_1a4cdc6228051c575d7a4397fa8bb076fb" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="structamrex_1_1ParserExeSUB__PN" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeSUB__PN" kindref="compound">ParserExeSUB_PN</ref><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeSUB__PN_1a400fca37b7f78f9e6b1f04cd1de6976e" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a9264353b9cb7c9e35c524a18fee311c8" kindref="member">PARSER_EXE_SUB_PN</ref>;</highlight></codeline>
<codeline lineno="186" refid="structamrex_1_1ParserExeSUB__PN_1a7a2a24b39a0a5dad6c4e4226c237d57d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeSUB__PN_1a7a2a24b39a0a5dad6c4e4226c237d57d" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="187" refid="structamrex_1_1ParserExeSUB__PN_1a636f8deeca6a119cd092b5a3257631cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeSUB__PN_1a636f8deeca6a119cd092b5a3257631cc" kindref="member">sign</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">};</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="structamrex_1_1ParserExeMUL__PN" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeMUL__PN" kindref="compound">ParserExeMUL_PN</ref><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeMUL__PN_1a6969bcd1adff4a19ba555b7fd724be7c" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49aba0e4205769e25aed168c5b5b7af3426" kindref="member">PARSER_EXE_MUL_PN</ref>;</highlight></codeline>
<codeline lineno="192" refid="structamrex_1_1ParserExeMUL__PN_1a5d2bc01a123a00e253bed9daeb1873c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeMUL__PN_1a5d2bc01a123a00e253bed9daeb1873c9" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">};</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="structamrex_1_1ParserExeDIV__PN" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeDIV__PN" kindref="compound">ParserExeDIV_PN</ref><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeDIV__PN_1ab182a785cf030d698556e2803da29075" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a7d3c18b2badf37a3f1e58f6a94ccd574" kindref="member">PARSER_EXE_DIV_PN</ref>;</highlight></codeline>
<codeline lineno="197" refid="structamrex_1_1ParserExeDIV__PN_1abe5cd3bd7d632d10b89767bbd1835c00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeDIV__PN_1abe5cd3bd7d632d10b89767bbd1835c00" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="198" refid="structamrex_1_1ParserExeDIV__PN_1a59ed0793b05cb449ad68305a26cc3dc7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeDIV__PN_1a59ed0793b05cb449ad68305a26cc3dc7" kindref="member">reverse</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">};</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="structamrex_1_1ParserExeSquare" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeSquare" kindref="compound">ParserExeSquare</ref><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeSquare_1a4ca31d9a475c2efbf6fe68a3e661400b" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a5e517dacd4952e08078b4c01130a83ee" kindref="member">PARSER_EXE_SQUARE</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">};</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="structamrex_1_1ParserExePOWI" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExePOWI" kindref="compound">ParserExePOWI</ref><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExePOWI_1a17bdde21b0a5bb170322a52d31f1a7c4" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a0d4daa650d2d51c5b0e9a48b41461e7a" kindref="member">PARSER_EXE_POWI</ref>;</highlight></codeline>
<codeline lineno="207" refid="structamrex_1_1ParserExePOWI_1a592be1db09332edbb17adf31e1db35e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExePOWI_1a592be1db09332edbb17adf31e1db35e6" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">};</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="structamrex_1_1ParserExeIF" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeIF" kindref="compound">ParserExeIF</ref><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeIF_1aef67f220560c6ca3d86dd47a94a52e85" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ade505eeebd4b9a047f99dd00200376f1" kindref="member">PARSER_EXE_IF</ref>;</highlight></codeline>
<codeline lineno="212" refid="structamrex_1_1ParserExeIF_1a0ca205ae3f796076ea966533f5abe183" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeIF_1a0ca205ae3f796076ea966533f5abe183" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">};</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="structamrex_1_1ParserExeJUMP" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(8)<sp/><ref refid="structamrex_1_1ParserExeJUMP" kindref="compound">ParserExeJUMP</ref><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref><sp/><ref refid="structamrex_1_1ParserExeJUMP_1a08584434561b18d3ac4065205cf7bf6d" kindref="member">type</ref><sp/>=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49aa72fde98c22155ba9b55510fec6f7afe" kindref="member">PARSER_EXE_JUMP</ref>;</highlight></codeline>
<codeline lineno="217" refid="structamrex_1_1ParserExeJUMP_1ac38e239d19e5c6d0df4c733ceeab0831" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserExeJUMP_1ac38e239d19e5c6d0df4c733ceeab0831" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">};</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="221" refid="structamrex_1_1ParserStack" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1ParserStack" kindref="compound">ParserStack</ref></highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223" refid="structamrex_1_1ParserStack_1a78fe20d4add82e5047474d829b65ffab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserStack_1a78fe20d4add82e5047474d829b65ffab" kindref="member">m_data</ref>[N];</highlight></codeline>
<codeline lineno="224" refid="structamrex_1_1ParserStack_1a482050d389e6f6f1a7628bb8a8df3696" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserStack_1a482050d389e6f6f1a7628bb8a8df3696" kindref="member">m_size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="225" refid="structamrex_1_1ParserStack_1ae5f96b8ae7c872185b3b816dadf7d480" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserStack_1ae5f96b8ae7c872185b3b816dadf7d480" kindref="member">push</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v)<sp/>{<sp/><ref refid="structamrex_1_1ParserStack_1a78fe20d4add82e5047474d829b65ffab" kindref="member">m_data</ref>[<ref refid="structamrex_1_1ParserStack_1a482050d389e6f6f1a7628bb8a8df3696" kindref="member">m_size</ref>++]<sp/>=<sp/>v;<sp/>}</highlight></codeline>
<codeline lineno="226" refid="structamrex_1_1ParserStack_1a0fb2101660c9e5211fb65297ffd99292" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserStack_1a0fb2101660c9e5211fb65297ffd99292" kindref="member">pop</ref><sp/>()<sp/>{<sp/>--<ref refid="structamrex_1_1ParserStack_1a482050d389e6f6f1a7628bb8a8df3696" kindref="member">m_size</ref>;<sp/>}</highlight></codeline>
<codeline lineno="227" refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>constexpr<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserStack_1a78fe20d4add82e5047474d829b65ffab" kindref="member">m_data</ref>[<ref refid="structamrex_1_1ParserStack_1a482050d389e6f6f1a7628bb8a8df3696" kindref="member">m_size</ref>-1];<sp/>}</highlight></codeline>
<codeline lineno="228" refid="structamrex_1_1ParserStack_1a602dc4e0d8b861f23e5bcd34728d1baa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>constexpr<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/><ref refid="structamrex_1_1ParserStack_1a602dc4e0d8b861f23e5bcd34728d1baa" kindref="member">top</ref><sp/>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserStack_1a78fe20d4add82e5047474d829b65ffab" kindref="member">m_data</ref>[<ref refid="structamrex_1_1ParserStack_1a482050d389e6f6f1a7628bb8a8df3696" kindref="member">m_size</ref>-1];<sp/>}</highlight></codeline>
<codeline lineno="229" refid="structamrex_1_1ParserStack_1ad0b61495ec872b2bba140040a6656a79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>constexpr<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserStack_1ad0b61495ec872b2bba140040a6656a79" kindref="member">operator[] </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1ParserStack_1a78fe20d4add82e5047474d829b65ffab" kindref="member">m_data</ref>[i];<sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal">};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="233" refid="namespaceamrex_1ad8b4ee29b3ed76cab2179ad13c01c19b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad8b4ee29b3ed76cab2179ad13c01c19b" kindref="member">parser_exe_eval</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>x)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1a05ef6e98eba987410d73df1617fa569da86cadfc48eb8f9dd4a2e4a3980a6b265" kindref="member">std::numeric_limits&lt;double&gt;::max</ref>();<sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1ParserStack" kindref="compound">ParserStack&lt;AMREX_PARSER_STACK_SIZE&gt;</ref><sp/>pstack;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*((<ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref>*)p)<sp/>!=<sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ad164042843bc5d3219c38304422dda7f" kindref="member">PARSER_EXE_NULL</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*((<ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49" kindref="member">parser_exe_t</ref>*)p))</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a2053b9047a2310dcbbaff624c5bd4301" kindref="member">PARSER_EXE_NUMBER</ref>:</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1ae5f96b8ae7c872185b3b816dadf7d480" kindref="member">push</ref>(((<ref refid="structamrex_1_1ParserExeNumber" kindref="compound">ParserExeNumber</ref>*)p)-&gt;v);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/><sp/><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeNumber" kindref="compound">ParserExeNumber</ref>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a39f7549a4fd26261fcef5e6b3e8d939d" kindref="member">PARSER_EXE_SYMBOL</ref>:</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>((<ref refid="structamrex_1_1ParserExeSymbol" kindref="compound">ParserExeSymbol</ref>*)p)-&gt;i;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/><ref refid="AMReX__Parser__Exe_8H_1a7478a6b2c1f097effb3b8788ebf49726" kindref="member">AMREX_PARSER_GET_DATA</ref>(i);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1ae5f96b8ae7c872185b3b816dadf7d480" kindref="member">push</ref>(d);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/><sp/><sp/><sp/><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeSymbol" kindref="compound">ParserExeSymbol</ref>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a65accef83deb826771cbd9976c4598b4" kindref="member">PARSER_EXE_ADD</ref>:</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a2b273526dd4d27047e455ab7a5a8dcd3a92eb5ffee6ae2fec3ad71c777531578f" kindref="member">b</ref><sp/>=<sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>();<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1a0fb2101660c9e5211fb65297ffd99292" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>()<sp/>+=<sp/><ref refid="namespaceamrex_1a2b273526dd4d27047e455ab7a5a8dcd3a92eb5ffee6ae2fec3ad71c777531578f" kindref="member">b</ref>;<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeADD" kindref="compound">ParserExeADD</ref>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a58d8a1e2338a0136e6cdfd56c6cc3dff" kindref="member">PARSER_EXE_SUB_F</ref>:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a2b273526dd4d27047e455ab7a5a8dcd3a92eb5ffee6ae2fec3ad71c777531578f" kindref="member">b</ref><sp/>=<sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>();<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1a0fb2101660c9e5211fb65297ffd99292" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>()<sp/>-=<sp/><ref refid="namespaceamrex_1a2b273526dd4d27047e455ab7a5a8dcd3a92eb5ffee6ae2fec3ad71c777531578f" kindref="member">b</ref>;<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeSUB__F" kindref="compound">ParserExeSUB_F</ref>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ad128e6d075eb69fd93126e2e25a97256" kindref="member">PARSER_EXE_SUB_B</ref>:</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a2b273526dd4d27047e455ab7a5a8dcd3a92eb5ffee6ae2fec3ad71c777531578f" kindref="member">b</ref><sp/>=<sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>();<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1a0fb2101660c9e5211fb65297ffd99292" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>()<sp/>=<sp/><ref refid="namespaceamrex_1a2b273526dd4d27047e455ab7a5a8dcd3a92eb5ffee6ae2fec3ad71c777531578f" kindref="member">b</ref><sp/>-<sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>();<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeSUB__B" kindref="compound">ParserExeSUB_B</ref>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ac2d587754eccf536e1195395dd760613" kindref="member">PARSER_EXE_MUL</ref>:</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a2b273526dd4d27047e455ab7a5a8dcd3a92eb5ffee6ae2fec3ad71c777531578f" kindref="member">b</ref><sp/>=<sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>();<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1a0fb2101660c9e5211fb65297ffd99292" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>()<sp/>*=<sp/><ref refid="namespaceamrex_1a2b273526dd4d27047e455ab7a5a8dcd3a92eb5ffee6ae2fec3ad71c777531578f" kindref="member">b</ref>;<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeMUL" kindref="compound">ParserExeMUL</ref>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ad3a5a5721de497d1bc95f49759f05a08" kindref="member">PARSER_EXE_DIV_F</ref>:</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>();<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1a0fb2101660c9e5211fb65297ffd99292" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>()<sp/>/=<sp/>v;<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeDIV__F" kindref="compound">ParserExeDIV_F</ref>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a467c9f3fa7bc494399821d9327b05845" kindref="member">PARSER_EXE_DIV_B</ref>:</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>();<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1a0fb2101660c9e5211fb65297ffd99292" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>()<sp/>=<sp/>v<sp/>/<sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>();<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeDIV__B" kindref="compound">ParserExeDIV_B</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ad2a0a201913529696e77ea9584318f7b" kindref="member">PARSER_EXE_F1</ref>:</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>()<sp/>=<sp/><ref refid="namespaceamrex_1a28d9f515eaa0f8b6c464afd9e8e26839" kindref="member">parser_call_f1</ref>(((<ref refid="structamrex_1_1ParserExeF1" kindref="compound">ParserExeF1</ref>*)p)-&gt;ftype,<sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>());<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeF1" kindref="compound">ParserExeF1</ref>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a6206643ce6fe2a5b52b05bf0075231b9" kindref="member">PARSER_EXE_F2_F</ref>:</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>();<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1a0fb2101660c9e5211fb65297ffd99292" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>()<sp/>=<sp/><ref refid="namespaceamrex_1a9ad43c67a92cbfee740c7219dede60de" kindref="member">parser_call_f2</ref>(((<ref refid="structamrex_1_1ParserExeF2__F" kindref="compound">ParserExeF2_F</ref>*)p)-&gt;ftype,<sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>(),<sp/>v);<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeF2__F" kindref="compound">ParserExeF2_F</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a4f416e08f560a5ada8f89594c011e377" kindref="member">PARSER_EXE_F2_B</ref>:</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>();<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1a0fb2101660c9e5211fb65297ffd99292" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>()<sp/>=<sp/><ref refid="namespaceamrex_1a9ad43c67a92cbfee740c7219dede60de" kindref="member">parser_call_f2</ref>(((<ref refid="structamrex_1_1ParserExeF2__B" kindref="compound">ParserExeF2_B</ref>*)p)-&gt;ftype,<sp/>v,<sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>());<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeF2__B" kindref="compound">ParserExeF2_B</ref>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a7effc6143ed862d060081e1273d2c05b" kindref="member">PARSER_EXE_ADD_VP</ref>:</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>((<ref refid="structamrex_1_1ParserExeADD__VP" kindref="compound">ParserExeADD_VP</ref>*)p)-&gt;i;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/><ref refid="AMReX__Parser__Exe_8H_1a7478a6b2c1f097effb3b8788ebf49726" kindref="member">AMREX_PARSER_GET_DATA</ref>(i);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1ae5f96b8ae7c872185b3b816dadf7d480" kindref="member">push</ref>(((<ref refid="structamrex_1_1ParserExeADD__VP" kindref="compound">ParserExeADD_VP</ref>*)p)-&gt;v<sp/>+<sp/>d);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/><sp/><sp/><sp/><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeADD__VP" kindref="compound">ParserExeADD_VP</ref>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a014920eb1a3da47f76dc0006f292af4d" kindref="member">PARSER_EXE_SUB_VP</ref>:</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>((<ref refid="structamrex_1_1ParserExeSUB__VP" kindref="compound">ParserExeSUB_VP</ref>*)p)-&gt;i;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/><ref refid="AMReX__Parser__Exe_8H_1a7478a6b2c1f097effb3b8788ebf49726" kindref="member">AMREX_PARSER_GET_DATA</ref>(i);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1ae5f96b8ae7c872185b3b816dadf7d480" kindref="member">push</ref>(((<ref refid="structamrex_1_1ParserExeSUB__VP" kindref="compound">ParserExeSUB_VP</ref>*)p)-&gt;v<sp/>-<sp/>d);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/><sp/><sp/><sp/><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeSUB__VP" kindref="compound">ParserExeSUB_VP</ref>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49aca265050303407847584f241e18cd70d" kindref="member">PARSER_EXE_MUL_VP</ref>:</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>((<ref refid="structamrex_1_1ParserExeMUL__VP" kindref="compound">ParserExeMUL_VP</ref>*)p)-&gt;i;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/><ref refid="AMReX__Parser__Exe_8H_1a7478a6b2c1f097effb3b8788ebf49726" kindref="member">AMREX_PARSER_GET_DATA</ref>(i);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1ae5f96b8ae7c872185b3b816dadf7d480" kindref="member">push</ref>(((<ref refid="structamrex_1_1ParserExeMUL__VP" kindref="compound">ParserExeMUL_VP</ref>*)p)-&gt;v<sp/>*<sp/>d);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/><sp/><sp/><sp/><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeMUL__VP" kindref="compound">ParserExeMUL_VP</ref>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ae8298a287437468a3ae7cdebb845082d" kindref="member">PARSER_EXE_DIV_VP</ref>:</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>((<ref refid="structamrex_1_1ParserExeDIV__VP" kindref="compound">ParserExeDIV_VP</ref>*)p)-&gt;i;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/><ref refid="AMReX__Parser__Exe_8H_1a7478a6b2c1f097effb3b8788ebf49726" kindref="member">AMREX_PARSER_GET_DATA</ref>(i);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1ae5f96b8ae7c872185b3b816dadf7d480" kindref="member">push</ref>(((<ref refid="structamrex_1_1ParserExeDIV__VP" kindref="compound">ParserExeDIV_VP</ref>*)p)-&gt;v<sp/>/<sp/>d);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/><sp/><sp/><sp/><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeDIV__VP" kindref="compound">ParserExeDIV_VP</ref>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49aad4ecfa4d8942ee7bc7ce33e479f0aaa" kindref="member">PARSER_EXE_ADD_PP</ref>:</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>((<ref refid="structamrex_1_1ParserExeADD__PP" kindref="compound">ParserExeADD_PP</ref>*)p)-&gt;i1;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d1<sp/>=<sp/><ref refid="AMReX__Parser__Exe_8H_1a7478a6b2c1f097effb3b8788ebf49726" kindref="member">AMREX_PARSER_GET_DATA</ref>(i);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/>=<sp/>((<ref refid="structamrex_1_1ParserExeADD__PP" kindref="compound">ParserExeADD_PP</ref>*)p)-&gt;i2;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d2<sp/>=<sp/><ref refid="AMReX__Parser__Exe_8H_1a7478a6b2c1f097effb3b8788ebf49726" kindref="member">AMREX_PARSER_GET_DATA</ref>(i);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1ae5f96b8ae7c872185b3b816dadf7d480" kindref="member">push</ref>(d1+d2);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/><sp/><sp/><sp/><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeADD__PP" kindref="compound">ParserExeADD_PP</ref>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ae8d143cd5deeffcc76ba9094cd848678" kindref="member">PARSER_EXE_SUB_PP</ref>:</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>((<ref refid="structamrex_1_1ParserExeSUB__PP" kindref="compound">ParserExeSUB_PP</ref>*)p)-&gt;i1;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d1<sp/>=<sp/><ref refid="AMReX__Parser__Exe_8H_1a7478a6b2c1f097effb3b8788ebf49726" kindref="member">AMREX_PARSER_GET_DATA</ref>(i);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/>=<sp/>((<ref refid="structamrex_1_1ParserExeSUB__PP" kindref="compound">ParserExeSUB_PP</ref>*)p)-&gt;i2;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d2<sp/>=<sp/><ref refid="AMReX__Parser__Exe_8H_1a7478a6b2c1f097effb3b8788ebf49726" kindref="member">AMREX_PARSER_GET_DATA</ref>(i);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1ae5f96b8ae7c872185b3b816dadf7d480" kindref="member">push</ref>(d1-d2);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/><sp/><sp/><sp/><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeSUB__PP" kindref="compound">ParserExeSUB_PP</ref>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a8c3987c7b9bf7be1eb47dc65fdd98d23" kindref="member">PARSER_EXE_MUL_PP</ref>:</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>((<ref refid="structamrex_1_1ParserExeMUL__PP" kindref="compound">ParserExeMUL_PP</ref>*)p)-&gt;i1;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d1<sp/>=<sp/><ref refid="AMReX__Parser__Exe_8H_1a7478a6b2c1f097effb3b8788ebf49726" kindref="member">AMREX_PARSER_GET_DATA</ref>(i);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/>=<sp/>((<ref refid="structamrex_1_1ParserExeMUL__PP" kindref="compound">ParserExeMUL_PP</ref>*)p)-&gt;i2;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d2<sp/>=<sp/><ref refid="AMReX__Parser__Exe_8H_1a7478a6b2c1f097effb3b8788ebf49726" kindref="member">AMREX_PARSER_GET_DATA</ref>(i);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1ae5f96b8ae7c872185b3b816dadf7d480" kindref="member">push</ref>(d1*d2);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/><sp/><sp/><sp/><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeMUL__PP" kindref="compound">ParserExeMUL_PP</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49af6f81328f5f2e9f06525dd7151a713eb" kindref="member">PARSER_EXE_DIV_PP</ref>:</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>((<ref refid="structamrex_1_1ParserExeDIV__PP" kindref="compound">ParserExeDIV_PP</ref>*)p)-&gt;i1;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d1<sp/>=<sp/><ref refid="AMReX__Parser__Exe_8H_1a7478a6b2c1f097effb3b8788ebf49726" kindref="member">AMREX_PARSER_GET_DATA</ref>(i);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/><sp/><sp/>=<sp/>((<ref refid="structamrex_1_1ParserExeDIV__PP" kindref="compound">ParserExeDIV_PP</ref>*)p)-&gt;i2;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d2<sp/>=<sp/><ref refid="AMReX__Parser__Exe_8H_1a7478a6b2c1f097effb3b8788ebf49726" kindref="member">AMREX_PARSER_GET_DATA</ref>(i);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1ae5f96b8ae7c872185b3b816dadf7d480" kindref="member">push</ref>(d1/d2);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeDIV__PP" kindref="compound">ParserExeDIV_PP</ref>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a1044c34c6cf2464a5a7d3915828db764" kindref="member">PARSER_EXE_ADD_VN</ref>:</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>()<sp/>+=<sp/>((<ref refid="structamrex_1_1ParserExeADD__VN" kindref="compound">ParserExeADD_VN</ref>*)p)-&gt;v;<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeADD__VN" kindref="compound">ParserExeADD_VN</ref>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a59525adc4ae7845b8340dd89993a63ce" kindref="member">PARSER_EXE_SUB_VN</ref>:</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>()<sp/>=<sp/>((<ref refid="structamrex_1_1ParserExeSUB__VN" kindref="compound">ParserExeSUB_VN</ref>*)p)-&gt;v<sp/>-<sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>();<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeSUB__VN" kindref="compound">ParserExeSUB_VN</ref>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a9421625896cd614f365853bcfcec5253" kindref="member">PARSER_EXE_MUL_VN</ref>:</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>()<sp/>*=<sp/>((<ref refid="structamrex_1_1ParserExeMUL__VN" kindref="compound">ParserExeMUL_VN</ref>*)p)-&gt;v;<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeMUL__VN" kindref="compound">ParserExeMUL_VN</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a49fbd97b6c92be61a039dcf485b7ef86" kindref="member">PARSER_EXE_DIV_VN</ref>:</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>()<sp/>=<sp/>((<ref refid="structamrex_1_1ParserExeDIV__VN" kindref="compound">ParserExeDIV_VN</ref>*)p)-&gt;v<sp/>/<sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>();<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeDIV__VN" kindref="compound">ParserExeDIV_VN</ref>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a9bf6fa5b900a096eaace0643ea2fc87d" kindref="member">PARSER_EXE_ADD_PN</ref>:</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>((<ref refid="structamrex_1_1ParserExeADD__PN" kindref="compound">ParserExeADD_PN</ref>*)p)-&gt;i;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/><ref refid="AMReX__Parser__Exe_8H_1a7478a6b2c1f097effb3b8788ebf49726" kindref="member">AMREX_PARSER_GET_DATA</ref>(i);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>()<sp/>+=<sp/>d;<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeADD__PN" kindref="compound">ParserExeADD_PN</ref>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a9264353b9cb7c9e35c524a18fee311c8" kindref="member">PARSER_EXE_SUB_PN</ref>:</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>((<ref refid="structamrex_1_1ParserExeSUB__PN" kindref="compound">ParserExeSUB_PN</ref>*)p)-&gt;i;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/><ref refid="AMReX__Parser__Exe_8H_1a7478a6b2c1f097effb3b8788ebf49726" kindref="member">AMREX_PARSER_GET_DATA</ref>(i);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>()<sp/>=<sp/>(d<sp/>-<sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>())<sp/>*<sp/>(((<ref refid="structamrex_1_1ParserExeSUB__PN" kindref="compound">ParserExeSUB_PN</ref>*)p)-&gt;sign);<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeSUB__PN" kindref="compound">ParserExeSUB_PN</ref>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49aba0e4205769e25aed168c5b5b7af3426" kindref="member">PARSER_EXE_MUL_PN</ref>:</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>((<ref refid="structamrex_1_1ParserExeMUL__PN" kindref="compound">ParserExeMUL_PN</ref>*)p)-&gt;i;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/><ref refid="AMReX__Parser__Exe_8H_1a7478a6b2c1f097effb3b8788ebf49726" kindref="member">AMREX_PARSER_GET_DATA</ref>(i);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>()<sp/>*=<sp/>d;<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeMUL__PN" kindref="compound">ParserExeMUL_PN</ref>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a7d3c18b2badf37a3f1e58f6a94ccd574" kindref="member">PARSER_EXE_DIV_PN</ref>:</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>((<ref refid="structamrex_1_1ParserExeDIV__PN" kindref="compound">ParserExeDIV_PN</ref>*)p)-&gt;i;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/><ref refid="AMReX__Parser__Exe_8H_1a7478a6b2c1f097effb3b8788ebf49726" kindref="member">AMREX_PARSER_GET_DATA</ref>(i);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((<ref refid="structamrex_1_1ParserExeDIV__PN" kindref="compound">ParserExeDIV_PN</ref>*)p)-&gt;reverse)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>()<sp/>/=<sp/>d;<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>()<sp/>=<sp/>d<sp/>/<sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>();<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeDIV__PN" kindref="compound">ParserExeDIV_PN</ref>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a5e517dacd4952e08078b4c01130a83ee" kindref="member">PARSER_EXE_SQUARE</ref>:</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>d<sp/>=<sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>*=<sp/>d;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeSquare" kindref="compound">ParserExeSquare</ref>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49a0d4daa650d2d51c5b0e9a48b41461e7a" kindref="member">PARSER_EXE_POWI</ref>:</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>d<sp/>=<sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>((<ref refid="structamrex_1_1ParserExePOWI" kindref="compound">ParserExePOWI</ref>*)p)-&gt;i;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>1.0/d;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>-n;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>%<sp/>2<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>*=<sp/>d;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>n/2;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>*=<sp/>d;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>*=<sp/>d;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(n-1)/2;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>*=<sp/>y;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExePOWI" kindref="compound">ParserExePOWI</ref>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49ade505eeebd4b9a047f99dd00200376f1" kindref="member">PARSER_EXE_IF</ref>:</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cond<sp/>=<sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>();<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1a0fb2101660c9e5211fb65297ffd99292" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cond<sp/>==<sp/>0.0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>false<sp/>branch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>((<ref refid="structamrex_1_1ParserExeIF" kindref="compound">ParserExeIF</ref>*)p)-&gt;offset;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeIF" kindref="compound">ParserExeIF</ref>);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a0f600e600176e6bc4444aaea08ca1c49aa72fde98c22155ba9b55510fec6f7afe" kindref="member">PARSER_EXE_JUMP</ref>:</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="AMReX__HypreMLABecLap_8cpp_1aca578ec8d09db95559009d91bca7779e" kindref="member">offset</ref><sp/>=<sp/>((<ref refid="structamrex_1_1ParserExeJUMP" kindref="compound">ParserExeJUMP</ref>*)p)-&gt;offset;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeJUMP" kindref="compound">ParserExeJUMP</ref>)<sp/>+<sp/><ref refid="AMReX__HypreMLABecLap_8cpp_1aca578ec8d09db95559009d91bca7779e" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1a1defc2bb8023a3e2599bfb2fc637cb43" kindref="member">AMREX_ALWAYS_ASSERT_WITH_MESSAGE</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;parser_exe_eval:<sp/>unknown<sp/>node<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pstack.<ref refid="structamrex_1_1ParserStack_1aef0073ee79d501d7ffe027cd684c4186" kindref="member">top</ref>();<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ab427f00335de584d8602aec963d5e730" kindref="member">parser_compile_exe_size</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>parser_node*<sp/>node,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*&amp;<sp/>p,<sp/>std::size_t&amp;<sp/>exe_size,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>max_stack_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>stack_size,<sp/>Vector&lt;char<sp/>const*&gt;&amp;<sp/>local_variables);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::size_t</highlight></codeline>
<codeline lineno="518" refid="namespaceamrex_1ad0968c4da0c27c9762dbd61dcc89e270" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1ad0968c4da0c27c9762dbd61dcc89e270" kindref="member">parser_exe_size</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1amrex__parser" kindref="compound">amrex_parser</ref>*<sp/>parser,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>max_stack_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>stack_size)</highlight></codeline>
<codeline lineno="519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a3519067af5edf22a956910ef7ee7ce47" kindref="member">parser_ast_sort</ref>(parser-&gt;<ref refid="structamrex_1_1amrex__parser_1afc9a6bd1b3b65c88f2ff997308922b16" kindref="member">ast</ref>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>exe_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>max_stack_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>stack_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;char const*&gt;</ref><sp/>local_variables;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ab427f00335de584d8602aec963d5e730" kindref="member">parser_compile_exe_size</ref>(parser-&gt;<ref refid="structamrex_1_1amrex__parser_1afc9a6bd1b3b65c88f2ff997308922b16" kindref="member">ast</ref>,<sp/>p,<sp/>exe_size,<sp/>max_stack_size,<sp/>stack_size,<sp/>local_variables);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>stack_size<sp/>-=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(local_variables.<ref refid="classamrex_1_1Vector_1a58c24fe05cc91d42ebe7151c398f0c58" kindref="member">size</ref>())+1;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exe_size+</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structamrex_1_1ParserExeNull" kindref="compound">ParserExeNull</ref>);</highlight></codeline>
<codeline lineno="529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Vector&lt;char<sp/>const*&gt;</highlight></codeline>
<codeline lineno="532" refid="namespaceamrex_1afc63f0f94a713d245e1660797a99af63" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1afc63f0f94a713d245e1660797a99af63" kindref="member">parser_compile</ref><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1amrex__parser" kindref="compound">amrex_parser</ref>*<sp/>parser,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p)</highlight></codeline>
<codeline lineno="533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>exe_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_stack_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stack_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;char const*&gt;</ref><sp/>local_variables;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ab427f00335de584d8602aec963d5e730" kindref="member">parser_compile_exe_size</ref>(parser-&gt;<ref refid="structamrex_1_1amrex__parser_1afc9a6bd1b3b65c88f2ff997308922b16" kindref="member">ast</ref>,<sp/>p,<sp/>exe_size,<sp/>max_stack_size,<sp/>stack_size,<sp/>local_variables);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(p)<sp/><ref refid="structamrex_1_1ParserExeNull" kindref="compound">ParserExeNull</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>local_variables;</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543" refid="structamrex_1_1ParserExeNull_1a7aa866ce304756df44e2cfbdf4cdb784" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1ad8610e10a0a8b9cafad8a53f47c05da6" kindref="member">parser_exe_print</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>parser,<sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;std::string&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>vars,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;char const*&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>locals);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Base/Parser/AMReX_Parser_Exe.H"/>
  </compounddef>
</doxygen>
