<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1HypreNodeLap" kind="class" language="C++" prot="public">
    <compoundname>amrex::HypreNodeLap</compoundname>
    <includes refid="AMReX__HypreNodeLap_8H" local="no">AMReX_HypreNodeLap.H</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" prot="public" static="no">
        <type>HYPRE_Int</type>
        <definition>using amrex::HypreNodeLap::Int =  HYPRE_Int</definition>
        <argsstring></argsstring>
        <name>Int</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="32" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a8454e30c3a460081f89df8154babd952" prot="private" static="no" mutable="no">
        <type>BoxArray</type>
        <definition>BoxArray amrex::HypreNodeLap::grids</definition>
        <argsstring></argsstring>
        <name>grids</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="41" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a9c2f378636a2b4fbc0fba818719bace7" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref></type>
        <definition>DistributionMapping amrex::HypreNodeLap::dmap</definition>
        <argsstring></argsstring>
        <name>dmap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="42" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a3ec12508ffa505780af64ebc27188233" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::HypreNodeLap::geom</definition>
        <argsstring></argsstring>
        <name>geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="43" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a380f7d1b289a6802248ece2786b86565" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabFactory" kindref="compound">FabFactory</ref>&lt; <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &gt; const *</type>
        <definition>FabFactory&lt;FArrayBox&gt; const* amrex::HypreNodeLap::factory</definition>
        <argsstring></argsstring>
        <name>factory</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="44" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1ac8924539f89bd4ae28eb0df416235f4e" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> const *</type>
        <definition>iMultiFab const* amrex::HypreNodeLap::owner_mask</definition>
        <argsstring></argsstring>
        <name>owner_mask</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="45" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1ae0af71a571c9aa2ae19cac29ee7deb4a" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> const *</type>
        <definition>iMultiFab const* amrex::HypreNodeLap::dirichlet_mask</definition>
        <argsstring></argsstring>
        <name>dirichlet_mask</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="46" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1adf57e9f1fd02ffaff4b31a0d22a1a525" prot="private" static="no" mutable="no">
        <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
        <definition>MPI_Comm amrex::HypreNodeLap::comm</definition>
        <argsstring></argsstring>
        <name>comm</name>
        <initializer>= <ref refid="AMReX__ccse-mpi_8H_1a9c299ed1c4c5eaa48a6446c85fb2d689" kindref="member">MPI_COMM_NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="47" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1ad7cbb6433d195bb9fc6aaf2f7b92ff76" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLNodeLinOp" kindref="compound">MLNodeLinOp</ref> const *</type>
        <definition>MLNodeLinOp const* amrex::HypreNodeLap::linop</definition>
        <argsstring></argsstring>
        <name>linop</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="48" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a46cd3d0729be8490f8ae8840c1988d38" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::HypreNodeLap::verbose</definition>
        <argsstring></argsstring>
        <name>verbose</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="49" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a84f23ccfc81e4068d4b59ff219dfdd17" prot="private" static="no" mutable="no">
        <type>HYPRE_IJMatrix</type>
        <definition>HYPRE_IJMatrix amrex::HypreNodeLap::A</definition>
        <argsstring></argsstring>
        <name>A</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="51" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a8bf1aff14a4fff3cc12887bac7c96620" prot="private" static="no" mutable="no">
        <type>HYPRE_IJVector</type>
        <definition>HYPRE_IJVector amrex::HypreNodeLap::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="52" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1af32f270916e5ac3077cad9d15792033e" prot="private" static="no" mutable="no">
        <type>HYPRE_IJVector</type>
        <definition>HYPRE_IJVector amrex::HypreNodeLap::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="53" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a122058882cb0a6fddbc4a9bae3da1b89" prot="private" static="no" mutable="no">
        <type>HYPRE_Solver</type>
        <definition>HYPRE_Solver amrex::HypreNodeLap::solver</definition>
        <argsstring></argsstring>
        <name>solver</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="54" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1ab571c163213ebca30687e13923b90fac" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; <ref refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" kindref="member">Int</ref> &gt;</type>
        <definition>LayoutData&lt;Int&gt; amrex::HypreNodeLap::nnodes_grid</definition>
        <argsstring></argsstring>
        <name>nnodes_grid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="56" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a731b9abb68433c5b5750155482f5c768" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" kindref="member">Int</ref> &gt; &gt;</type>
        <definition>LayoutData&lt;Vector&lt;Int&gt; &gt; amrex::HypreNodeLap::node_id_vec</definition>
        <argsstring></argsstring>
        <name>node_id_vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="57" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a9a1b45b94bfcf850f38810f79ceb5041" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt; <ref refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" kindref="member">Int</ref> &gt; &gt;</type>
        <definition>FabArray&lt;BaseFab&lt;Int&gt; &gt; amrex::HypreNodeLap::node_id</definition>
        <argsstring></argsstring>
        <name>node_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="58" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a0ff36d67bd4b146e140a63de29c435e7" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::HypreNodeLap::tmpsoln</definition>
        <argsstring></argsstring>
        <name>tmpsoln</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="59" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1af26b0bca5d124df7cefa65800d759390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::HypreNodeLap::HypreNodeLap</definition>
        <argsstring>(const BoxArray &amp;grids_, const DistributionMapping &amp;dmap_, const Geometry &amp;geom_, const FabFactory&lt; FArrayBox &gt; &amp;factory_, const iMultiFab &amp;owner_mask_, const iMultiFab &amp;dirichlet_mask_, MPI_Comm comm_, MLNodeLinOp const *linop_, int verbose_)</argsstring>
        <name>HypreNodeLap</name>
        <param>
          <type>const BoxArray &amp;</type>
          <declname>grids_</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap_</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom_</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1FabFactory" kindref="compound">FabFactory</ref>&lt; <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &gt; &amp;</type>
          <declname>factory_</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> &amp;</type>
          <declname>owner_mask_</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> &amp;</type>
          <declname>dirichlet_mask_</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm_</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLNodeLinOp" kindref="compound">MLNodeLinOp</ref> const *</type>
          <declname>linop_</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>verbose_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="26" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="18" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1ac4fd7635fb3f2ef04617ec9a1e17f0ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::HypreNodeLap::~HypreNodeLap</definition>
        <argsstring>()</argsstring>
        <name>~HypreNodeLap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="30" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="258" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1a8ab7840824ff1afad30c2adc35584bd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreNodeLap::solve</definition>
        <argsstring>(MultiFab &amp;soln, const MultiFab &amp;rhs, Real rel_tol, Real abs_tol, int max_iter)</argsstring>
        <name>solve</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>rel_tol</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>abs_tol</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>max_iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="34" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="271" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1aa6c506e9171db3a9db1b1c32fc2b2bbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreNodeLap::fill_node_id</definition>
        <argsstring>(LayoutData&lt; Int &gt; &amp;offset)</argsstring>
        <name>fill_node_id</name>
        <param>
          <type><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; <ref refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" kindref="member">Int</ref> &gt; &amp;</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="37" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="326" bodyend="342"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1a9a4132962fea0f9ec7e1566e1aa6254e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreNodeLap::loadVectors</definition>
        <argsstring>(MultiFab &amp;soln, const MultiFab &amp;rhs)</argsstring>
        <name>loadVectors</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="61" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="345" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1a58381f405245d3ca27aed91c4197bee6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreNodeLap::getSolution</definition>
        <argsstring>(MultiFab &amp;soln)</argsstring>
        <name>getSolution</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="62" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="385" bodyend="419"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3168">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
      </node>
      <node id="3205">
        <label>amrex::iMultiFab</label>
        <link refid="classamrex_1_1iMultiFab"/>
        <childnode refid="3206" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3148">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="3149" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="3151">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="3161">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="3144">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="3144" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="3201">
        <label>amrex::LayoutData&lt; amrex::Vector&lt; Int &gt; &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="3147" relation="public-inheritance">
        </childnode>
        <childnode refid="3202" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="3141">
        <label>Real</label>
      </node>
      <node id="3169">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3170" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3159">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="3160" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="3202">
        <label>amrex::Vector&lt; amrex::Vector&lt; Int &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3203" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3138">
        <label>amrex::HypreNodeLap</label>
        <link refid="classamrex_1_1HypreNodeLap"/>
        <childnode refid="3139" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="3146" relation="usage">
          <edgelabel>node_id</edgelabel>
        </childnode>
        <childnode refid="3172" relation="usage">
          <edgelabel>linop</edgelabel>
        </childnode>
        <childnode refid="3198" relation="usage">
          <edgelabel>nnodes_grid</edgelabel>
        </childnode>
        <childnode refid="3150" relation="usage">
          <edgelabel>dmap</edgelabel>
        </childnode>
        <childnode refid="3181" relation="usage">
          <edgelabel>tmpsoln</edgelabel>
        </childnode>
        <childnode refid="3201" relation="usage">
          <edgelabel>node_id_vec</edgelabel>
        </childnode>
        <childnode refid="3204" relation="usage">
          <edgelabel>factory</edgelabel>
        </childnode>
        <childnode refid="3205" relation="usage">
          <edgelabel>dirichlet_mask</edgelabel>
          <edgelabel>owner_mask</edgelabel>
        </childnode>
      </node>
      <node id="3188">
        <label>std::vector&lt; Array&lt; BCType, AMREX_SPACEDIM &gt;, std::allocator&lt; Array&lt; BCType, AMREX_SPACEDIM &gt; &gt; &gt;</label>
      </node>
      <node id="3163">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
      </node>
      <node id="3160">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="3161" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="3152">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3153" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3149">
        <label>string</label>
      </node>
      <node id="3171">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="3144" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="3165">
        <label>std::vector&lt; char *, std::allocator&lt; char * &gt; &gt;</label>
      </node>
      <node id="3172">
        <label>amrex::MLNodeLinOp</label>
        <link refid="classamrex_1_1MLNodeLinOp"/>
        <childnode refid="3173" relation="public-inheritance">
        </childnode>
        <childnode refid="3181" relation="usage">
          <edgelabel>m_bottom_dot_mask</edgelabel>
          <edgelabel>m_coarse_dot_mask</edgelabel>
        </childnode>
        <childnode refid="3192" relation="usage">
          <edgelabel>m_nd_fine_mask</edgelabel>
          <edgelabel>m_cc_fine_mask</edgelabel>
        </childnode>
        <childnode refid="3194" relation="usage">
          <edgelabel>m_owner_mask</edgelabel>
          <edgelabel>m_dirichlet_mask</edgelabel>
        </childnode>
        <childnode refid="3196" relation="usage">
          <edgelabel>m_has_fine_bndry</edgelabel>
        </childnode>
      </node>
      <node id="3184">
        <label>std::vector&lt; Array&lt; int, AMREX_SPACEDIM &gt;, std::allocator&lt; Array&lt; int, AMREX_SPACEDIM &gt; &gt; &gt;</label>
      </node>
      <node id="3146">
        <label>amrex::FabArray&lt; amrex::BaseFab&lt; Int &gt; &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="3147" relation="public-inheritance">
        </childnode>
        <childnode refid="3157" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
        </childnode>
        <childnode refid="3144" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="3159" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="3152" relation="usage">
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="3162" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="3164" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="3166" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="3167" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="3169" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="3171" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="3198">
        <label>amrex::LayoutData&lt; Int &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="3147" relation="public-inheritance">
        </childnode>
        <childnode refid="3199" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="3176">
        <label>amrex::Vector&lt; amrex::Vector&lt; BoxArray &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3177" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3164">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3165" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3174">
        <label>amrex::Vector&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::FabFactory&lt; amrex::FArrayBox &gt; &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3175" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3179">
        <label>std::vector&lt; amrex::Vector&lt; amrex::Geometry &gt;, std::allocator&lt; amrex::Vector&lt; amrex::Geometry &gt; &gt; &gt;</label>
      </node>
      <node id="3166">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="3204">
        <label>amrex::FabFactory&lt; amrex::FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="3178">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::Geometry &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3179" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3197">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::LayoutData&lt; int &gt; &gt;, std::allocator&lt; std::unique_ptr&lt; amrex::LayoutData&lt; int &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="3180">
        <label>amrex::RealVect</label>
        <link refid="classamrex_1_1RealVect"/>
        <childnode refid="3180" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
        <childnode refid="3141" relation="usage">
          <edgelabel>vect</edgelabel>
        </childnode>
      </node>
      <node id="3203">
        <label>std::vector&lt; amrex::Vector&lt; Int &gt;, std::allocator&lt; amrex::Vector&lt; Int &gt; &gt; &gt;</label>
      </node>
      <node id="3185">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::DistributionMapping &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3186" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3189">
        <label>amrex::Vector&lt; amrex::IntVect &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3190" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3170">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
      </node>
      <node id="3153">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="3206">
        <label>amrex::FabArray&lt; IArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="3147" relation="public-inheritance">
        </childnode>
        <childnode refid="3157" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
        </childnode>
        <childnode refid="3144" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="3159" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="3152" relation="usage">
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="3162" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="3164" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="3166" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="3167" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="3169" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="3171" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="3173">
        <label>amrex::MLLinOp</label>
        <link refid="classamrex_1_1MLLinOp"/>
        <childnode refid="3174" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="3176" relation="usage">
          <edgelabel>m_grids</edgelabel>
        </childnode>
        <childnode refid="3178" relation="usage">
          <edgelabel>m_geom</edgelabel>
        </childnode>
        <childnode refid="3180" relation="usage">
          <edgelabel>m_coarse_bc_loc</edgelabel>
        </childnode>
        <childnode refid="3144" relation="usage">
          <edgelabel>m_ixtype</edgelabel>
        </childnode>
        <childnode refid="3181" relation="usage">
          <edgelabel>m_coarse_data_for_bc</edgelabel>
        </childnode>
        <childnode refid="3152" relation="usage">
          <edgelabel>m_domain_covered</edgelabel>
          <edgelabel>m_amr_ref_ratio</edgelabel>
          <edgelabel>m_num_mg_levels</edgelabel>
        </childnode>
        <childnode refid="3183" relation="usage">
          <edgelabel>m_hi_inhomog_neumann</edgelabel>
          <edgelabel>m_lo_inhomog_neumann</edgelabel>
        </childnode>
        <childnode refid="3185" relation="usage">
          <edgelabel>m_dmap</edgelabel>
        </childnode>
        <childnode refid="3187" relation="usage">
          <edgelabel>m_hibc</edgelabel>
          <edgelabel>m_lobc</edgelabel>
        </childnode>
        <childnode refid="3189" relation="usage">
          <edgelabel>mg_coarsen_ratio_vec</edgelabel>
        </childnode>
        <childnode refid="3173" relation="usage">
          <edgelabel>m_parent</edgelabel>
        </childnode>
        <childnode refid="3191" relation="usage">
          <edgelabel>info</edgelabel>
        </childnode>
      </node>
      <node id="3196">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::LayoutData&lt; int &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3197" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3142">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="3141" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="3143">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="3144" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="3145" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="3192">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3193" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3187">
        <label>amrex::Vector&lt; Array&lt; BCType, AMREX_SPACEDIM &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3188" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3155">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="3156" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="3167">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3168" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3191">
        <label>amrex::LPInfo</label>
        <link refid="structamrex_1_1LPInfo"/>
      </node>
      <node id="3140">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="3141" relation="usage">
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
          <edgelabel>dx</edgelabel>
        </childnode>
      </node>
      <node id="3145">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="3199">
        <label>amrex::Vector&lt; Int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3200" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3156">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="3152" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="3162">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3163" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3183">
        <label>amrex::Vector&lt; Array&lt; int, AMREX_SPACEDIM &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3184" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3194">
        <label>amrex::Vector&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3195" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3150">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
      </node>
      <node id="3154">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="3155" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="3190">
        <label>std::vector&lt; amrex::IntVect, std::allocator&lt; amrex::IntVect &gt; &gt;</label>
      </node>
      <node id="3181">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="3182" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3193">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt;, std::allocator&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt; &gt;</label>
      </node>
      <node id="3139">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="3140" relation="public-inheritance">
        </childnode>
        <childnode refid="3142" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="3143" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="3182">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="3147" relation="public-inheritance">
        </childnode>
        <childnode refid="3157" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
        </childnode>
        <childnode refid="3144" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="3159" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="3152" relation="usage">
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="3162" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="3164" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="3166" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="3167" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="3169" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="3171" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="3157">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3158" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3200">
        <label>std::vector&lt; Int, std::allocator&lt; Int &gt; &gt;</label>
      </node>
      <node id="3147">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="3148" relation="usage">
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
        </childnode>
        <childnode refid="3150" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="3144" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>mfghostiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="3151" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="3152" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="3154" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
      </node>
      <node id="3195">
        <label>std::vector&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt;, std::allocator&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="3158">
        <label>std::vector&lt; std::size_t, std::allocator&lt; std::size_t &gt; &gt;</label>
      </node>
      <node id="3177">
        <label>std::vector&lt; amrex::Vector&lt; BoxArray &gt;, std::allocator&lt; amrex::Vector&lt; BoxArray &gt; &gt; &gt;</label>
      </node>
      <node id="3186">
        <label>std::vector&lt; amrex::Vector&lt; amrex::DistributionMapping &gt;, std::allocator&lt; amrex::Vector&lt; amrex::DistributionMapping &gt; &gt; &gt;</label>
      </node>
      <node id="3175">
        <label>std::vector&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::FabFactory&lt; amrex::FArrayBox &gt; &gt; &gt;, std::allocator&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::FabFactory&lt; amrex::FArrayBox &gt; &gt; &gt; &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="24" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="23" bodyend="63"/>
    <listofallmembers>
      <member refid="classamrex_1_1HypreNodeLap_1a84f23ccfc81e4068d4b59ff219dfdd17" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>A</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a8bf1aff14a4fff3cc12887bac7c96620" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>b</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1adf57e9f1fd02ffaff4b31a0d22a1a525" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>comm</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1ae0af71a571c9aa2ae19cac29ee7deb4a" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>dirichlet_mask</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a9c2f378636a2b4fbc0fba818719bace7" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>dmap</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a380f7d1b289a6802248ece2786b86565" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>factory</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1aa6c506e9171db3a9db1b1c32fc2b2bbc" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>fill_node_id</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a3ec12508ffa505780af64ebc27188233" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>geom</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a58381f405245d3ca27aed91c4197bee6" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>getSolution</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a8454e30c3a460081f89df8154babd952" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>grids</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1af26b0bca5d124df7cefa65800d759390" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>HypreNodeLap</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>Int</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1ad7cbb6433d195bb9fc6aaf2f7b92ff76" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>linop</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a9a4132962fea0f9ec7e1566e1aa6254e" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>loadVectors</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1ab571c163213ebca30687e13923b90fac" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>nnodes_grid</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a9a1b45b94bfcf850f38810f79ceb5041" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>node_id</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a731b9abb68433c5b5750155482f5c768" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>node_id_vec</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1ac8924539f89bd4ae28eb0df416235f4e" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>owner_mask</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a8ab7840824ff1afad30c2adc35584bd3" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>solve</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a122058882cb0a6fddbc4a9bae3da1b89" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>solver</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a0ff36d67bd4b146e140a63de29c435e7" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>tmpsoln</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a46cd3d0729be8490f8ae8840c1988d38" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>verbose</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1af32f270916e5ac3077cad9d15792033e" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>x</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1ac4fd7635fb3f2ef04617ec9a1e17f0ac" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>~HypreNodeLap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
