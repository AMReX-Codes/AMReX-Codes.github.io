<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classamrex_1_1HypreNodeLap" kind="class" language="C++" prot="public">
    <compoundname>amrex::HypreNodeLap</compoundname>
    <includes refid="AMReX__HypreNodeLap_8H" local="no">AMReX_HypreNodeLap.H</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" prot="public" static="no">
        <type>HYPRE_Int</type>
        <definition>using amrex::HypreNodeLap::Int =  HYPRE_Int</definition>
        <argsstring></argsstring>
        <name>Int</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="35" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a8454e30c3a460081f89df8154babd952" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref></type>
        <definition>BoxArray amrex::HypreNodeLap::grids</definition>
        <argsstring></argsstring>
        <name>grids</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="39" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a9c2f378636a2b4fbc0fba818719bace7" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref></type>
        <definition>DistributionMapping amrex::HypreNodeLap::dmap</definition>
        <argsstring></argsstring>
        <name>dmap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="40" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a3ec12508ffa505780af64ebc27188233" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::HypreNodeLap::geom</definition>
        <argsstring></argsstring>
        <name>geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="41" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a380f7d1b289a6802248ece2786b86565" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabFactory" kindref="compound">FabFactory</ref>&lt; <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &gt; const *</type>
        <definition>FabFactory&lt;FArrayBox&gt; const* amrex::HypreNodeLap::factory</definition>
        <argsstring></argsstring>
        <name>factory</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="42" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1ac8924539f89bd4ae28eb0df416235f4e" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> const *</type>
        <definition>iMultiFab const* amrex::HypreNodeLap::owner_mask</definition>
        <argsstring></argsstring>
        <name>owner_mask</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="43" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1ae0af71a571c9aa2ae19cac29ee7deb4a" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> const *</type>
        <definition>iMultiFab const* amrex::HypreNodeLap::dirichlet_mask</definition>
        <argsstring></argsstring>
        <name>dirichlet_mask</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="44" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1adf57e9f1fd02ffaff4b31a0d22a1a525" prot="private" static="no" mutable="no">
        <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
        <definition>MPI_Comm amrex::HypreNodeLap::comm</definition>
        <argsstring></argsstring>
        <name>comm</name>
        <initializer>= <ref refid="AMReX__ccse-mpi_8H_1a9c299ed1c4c5eaa48a6446c85fb2d689" kindref="member">MPI_COMM_NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="45" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a9759b928932e38f3c1df50648d108663" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLNodeLaplacian" kindref="compound">MLNodeLaplacian</ref> const *</type>
        <definition>MLNodeLaplacian const* amrex::HypreNodeLap::linop</definition>
        <argsstring></argsstring>
        <name>linop</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="46" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a46cd3d0729be8490f8ae8840c1988d38" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::HypreNodeLap::verbose</definition>
        <argsstring></argsstring>
        <name>verbose</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="47" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a84f23ccfc81e4068d4b59ff219dfdd17" prot="private" static="no" mutable="no">
        <type>HYPRE_IJMatrix</type>
        <definition>HYPRE_IJMatrix amrex::HypreNodeLap::A</definition>
        <argsstring></argsstring>
        <name>A</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="49" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a8bf1aff14a4fff3cc12887bac7c96620" prot="private" static="no" mutable="no">
        <type>HYPRE_IJVector</type>
        <definition>HYPRE_IJVector amrex::HypreNodeLap::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="50" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1af32f270916e5ac3077cad9d15792033e" prot="private" static="no" mutable="no">
        <type>HYPRE_IJVector</type>
        <definition>HYPRE_IJVector amrex::HypreNodeLap::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="51" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a122058882cb0a6fddbc4a9bae3da1b89" prot="private" static="no" mutable="no">
        <type>HYPRE_Solver</type>
        <definition>HYPRE_Solver amrex::HypreNodeLap::solver</definition>
        <argsstring></argsstring>
        <name>solver</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="52" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1ab571c163213ebca30687e13923b90fac" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; <ref refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" kindref="member">Int</ref> &gt;</type>
        <definition>LayoutData&lt;Int&gt; amrex::HypreNodeLap::nnodes_grid</definition>
        <argsstring></argsstring>
        <name>nnodes_grid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="54" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a731b9abb68433c5b5750155482f5c768" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" kindref="member">Int</ref> &gt; &gt;</type>
        <definition>LayoutData&lt;Vector&lt;Int&gt; &gt; amrex::HypreNodeLap::node_id_vec</definition>
        <argsstring></argsstring>
        <name>node_id_vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="55" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a9a1b45b94bfcf850f38810f79ceb5041" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt; <ref refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" kindref="member">Int</ref> &gt; &gt;</type>
        <definition>FabArray&lt;BaseFab&lt;Int&gt; &gt; amrex::HypreNodeLap::node_id</definition>
        <argsstring></argsstring>
        <name>node_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="56" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a0ff36d67bd4b146e140a63de29c435e7" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::HypreNodeLap::tmpsoln</definition>
        <argsstring></argsstring>
        <name>tmpsoln</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="57" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1a37afff718417564419d2804e054cdf85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::HypreNodeLap::HypreNodeLap</definition>
        <argsstring>(const BoxArray &amp;grids_, const DistributionMapping &amp;dmap_, const Geometry &amp;geom_, const FabFactory&lt; FArrayBox &gt; &amp;factory_, const iMultiFab &amp;owner_mask_, const iMultiFab &amp;dirichlet_mask_, MPI_Comm comm_, MLNodeLaplacian const *linop_, int verbose_)</argsstring>
        <name>HypreNodeLap</name>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>grids_</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap_</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom_</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1FabFactory" kindref="compound">FabFactory</ref>&lt; <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &gt; &amp;</type>
          <declname>factory_</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> &amp;</type>
          <declname>owner_mask_</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> &amp;</type>
          <declname>dirichlet_mask_</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm_</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLNodeLaplacian" kindref="compound">MLNodeLaplacian</ref> const *</type>
          <declname>linop_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>verbose_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="26" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="18" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1ac4fd7635fb3f2ef04617ec9a1e17f0ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::HypreNodeLap::~HypreNodeLap</definition>
        <argsstring>()</argsstring>
        <name>~HypreNodeLap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="30" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="270" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1a8ab7840824ff1afad30c2adc35584bd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreNodeLap::solve</definition>
        <argsstring>(MultiFab &amp;soln, const MultiFab &amp;rhs, Real rel_tol, Real abs_tol, int max_iter)</argsstring>
        <name>solve</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>rel_tol</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>abs_tol</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="32" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="283" bodyend="335"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1a9a4132962fea0f9ec7e1566e1aa6254e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreNodeLap::loadVectors</definition>
        <argsstring>(MultiFab &amp;soln, const MultiFab &amp;rhs)</argsstring>
        <name>loadVectors</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="59" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="338" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1a58381f405245d3ca27aed91c4197bee6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreNodeLap::getSolution</definition>
        <argsstring>(MultiFab &amp;soln)</argsstring>
        <name>getSolution</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="60" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="378" bodyend="412"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3297">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
      </node>
      <node id="3337">
        <label>amrex::iMultiFab</label>
        <link refid="classamrex_1_1iMultiFab"/>
        <childnode refid="3338" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3280">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="3281" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="3283">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="3276">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="3276" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="3333">
        <label>amrex::LayoutData&lt; amrex::Vector&lt; Int &gt; &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="3279" relation="public-inheritance">
        </childnode>
        <childnode refid="3334" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="3273">
        <label>Real</label>
      </node>
      <node id="3298">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3299" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3334">
        <label>amrex::Vector&lt; amrex::Vector&lt; Int &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3335" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3270">
        <label>amrex::HypreNodeLap</label>
        <link refid="classamrex_1_1HypreNodeLap"/>
        <childnode refid="3271" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="3278" relation="usage">
          <edgelabel>node_id</edgelabel>
        </childnode>
        <childnode refid="3301" relation="usage">
          <edgelabel>nnodes_grid</edgelabel>
        </childnode>
        <childnode refid="3282" relation="usage">
          <edgelabel>dmap</edgelabel>
        </childnode>
        <childnode refid="3304" relation="usage">
          <edgelabel>tmpsoln</edgelabel>
        </childnode>
        <childnode refid="3306" relation="usage">
          <edgelabel>linop</edgelabel>
        </childnode>
        <childnode refid="3333" relation="usage">
          <edgelabel>node_id_vec</edgelabel>
        </childnode>
        <childnode refid="3336" relation="usage">
          <edgelabel>factory</edgelabel>
        </childnode>
        <childnode refid="3337" relation="usage">
          <edgelabel>dirichlet_mask</edgelabel>
          <edgelabel>owner_mask</edgelabel>
        </childnode>
        <childnode refid="3290" relation="usage">
          <edgelabel>grids</edgelabel>
        </childnode>
      </node>
      <node id="3319">
        <label>std::vector&lt; Array&lt; BCType, AMREX_SPACEDIM &gt;, std::allocator&lt; Array&lt; BCType, AMREX_SPACEDIM &gt; &gt; &gt;</label>
      </node>
      <node id="3292">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
      </node>
      <node id="3314">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::BoxArray &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3315" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3315">
        <label>std::vector&lt; amrex::Vector&lt; amrex::BoxArray &gt;, std::allocator&lt; amrex::Vector&lt; amrex::BoxArray &gt; &gt; &gt;</label>
      </node>
      <node id="3284">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3285" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3281">
        <label>string</label>
      </node>
      <node id="3300">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="3276" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="3294">
        <label>std::vector&lt; char *, std::allocator&lt; char * &gt; &gt;</label>
      </node>
      <node id="3307">
        <label>amrex::MLNodeLinOp</label>
        <link refid="classamrex_1_1MLNodeLinOp"/>
        <childnode refid="3308" relation="public-inheritance">
        </childnode>
        <childnode refid="3304" relation="usage">
          <edgelabel>m_bottom_dot_mask</edgelabel>
          <edgelabel>m_coarse_dot_mask</edgelabel>
        </childnode>
        <childnode refid="3321" relation="usage">
          <edgelabel>m_nd_fine_mask</edgelabel>
          <edgelabel>m_cc_fine_mask</edgelabel>
        </childnode>
        <childnode refid="3323" relation="usage">
          <edgelabel>m_owner_mask</edgelabel>
          <edgelabel>m_dirichlet_mask</edgelabel>
        </childnode>
        <childnode refid="3325" relation="usage">
          <edgelabel>m_has_fine_bndry</edgelabel>
        </childnode>
      </node>
      <node id="3327">
        <label>amrex::Vector&lt; amrex::Vector&lt; Array&lt; std::unique_ptr&lt; amrex::MultiFab &gt;, AMREX_SPACEDIM &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3328" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3278">
        <label>amrex::FabArray&lt; amrex::BaseFab&lt; Int &gt; &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="3279" relation="public-inheritance">
        </childnode>
        <childnode refid="3276" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="3284" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="3291" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="3293" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="3295" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="3296" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="3298" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="3300" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="3301">
        <label>amrex::LayoutData&lt; Int &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="3279" relation="public-inheritance">
        </childnode>
        <childnode refid="3302" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="3293">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3294" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3309">
        <label>amrex::Vector&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::FabFactory&lt; amrex::FArrayBox &gt; &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3310" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3312">
        <label>std::vector&lt; amrex::Vector&lt; amrex::Geometry &gt;, std::allocator&lt; amrex::Vector&lt; amrex::Geometry &gt; &gt; &gt;</label>
      </node>
      <node id="3295">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="3330">
        <label>std::vector&lt; amrex::Vector&lt; Real &gt;, std::allocator&lt; amrex::Vector&lt; Real &gt; &gt; &gt;</label>
      </node>
      <node id="3336">
        <label>amrex::FabFactory&lt; amrex::FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="3311">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::Geometry &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3312" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3326">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::LayoutData&lt; int &gt; &gt;, std::allocator&lt; std::unique_ptr&lt; amrex::LayoutData&lt; int &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="3313">
        <label>amrex::RealVect</label>
        <link refid="classamrex_1_1RealVect"/>
        <childnode refid="3313" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
        <childnode refid="3273" relation="usage">
          <edgelabel>vect</edgelabel>
        </childnode>
      </node>
      <node id="3335">
        <label>std::vector&lt; amrex::Vector&lt; Int &gt;, std::allocator&lt; amrex::Vector&lt; Int &gt; &gt; &gt;</label>
      </node>
      <node id="3331">
        <label>amrex::Vector&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::MultiFab &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3332" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3316">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::DistributionMapping &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3317" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3299">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
      </node>
      <node id="3285">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="3338">
        <label>amrex::FabArray&lt; IArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="3279" relation="public-inheritance">
        </childnode>
        <childnode refid="3276" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="3284" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="3291" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="3293" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="3295" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="3296" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="3298" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="3300" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="3290">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="3276" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="3277" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="3308">
        <label>amrex::MLLinOp</label>
        <link refid="classamrex_1_1MLLinOp"/>
        <childnode refid="3309" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="3311" relation="usage">
          <edgelabel>m_geom</edgelabel>
        </childnode>
        <childnode refid="3313" relation="usage">
          <edgelabel>m_coarse_bc_loc</edgelabel>
        </childnode>
        <childnode refid="3314" relation="usage">
          <edgelabel>m_grids</edgelabel>
        </childnode>
        <childnode refid="3276" relation="usage">
          <edgelabel>m_ixtype</edgelabel>
        </childnode>
        <childnode refid="3304" relation="usage">
          <edgelabel>m_coarse_data_for_bc</edgelabel>
        </childnode>
        <childnode refid="3284" relation="usage">
          <edgelabel>m_domain_covered</edgelabel>
          <edgelabel>m_amr_ref_ratio</edgelabel>
          <edgelabel>m_num_mg_levels</edgelabel>
        </childnode>
        <childnode refid="3316" relation="usage">
          <edgelabel>m_dmap</edgelabel>
        </childnode>
        <childnode refid="3318" relation="usage">
          <edgelabel>m_hibc</edgelabel>
          <edgelabel>m_lobc</edgelabel>
        </childnode>
        <childnode refid="3308" relation="usage">
          <edgelabel>m_parent</edgelabel>
        </childnode>
        <childnode refid="3320" relation="usage">
          <edgelabel>info</edgelabel>
        </childnode>
      </node>
      <node id="3325">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::LayoutData&lt; int &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3326" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3274">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="3273" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="3328">
        <label>std::vector&lt; amrex::Vector&lt; Array&lt; std::unique_ptr&lt; amrex::MultiFab &gt;, AMREX_SPACEDIM &gt; &gt;, std::allocator&lt; amrex::Vector&lt; Array&lt; std::unique_ptr&lt; amrex::MultiFab &gt;, AMREX_SPACEDIM &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="3275">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="3276" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="3277" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="3321">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3322" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3306">
        <label>amrex::MLNodeLaplacian</label>
        <link refid="classamrex_1_1MLNodeLaplacian"/>
        <childnode refid="3307" relation="public-inheritance">
        </childnode>
        <childnode refid="3327" relation="usage">
          <edgelabel>m_sigma</edgelabel>
        </childnode>
        <childnode refid="3329" relation="usage">
          <edgelabel>m_s0_norm0</edgelabel>
        </childnode>
        <childnode refid="3331" relation="usage">
          <edgelabel>m_stencil</edgelabel>
        </childnode>
        <childnode refid="3273" relation="usage">
          <edgelabel>m_normalization_threshold</edgelabel>
        </childnode>
      </node>
      <node id="3318">
        <label>amrex::Vector&lt; Array&lt; BCType, AMREX_SPACEDIM &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3319" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3288">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="3289" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="3296">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3297" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3320">
        <label>amrex::LPInfo</label>
        <link refid="structamrex_1_1LPInfo"/>
      </node>
      <node id="3272">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="3273" relation="usage">
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
          <edgelabel>dx</edgelabel>
        </childnode>
      </node>
      <node id="3277">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="3302">
        <label>amrex::Vector&lt; Int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3303" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3289">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="3284" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="3291">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3292" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3323">
        <label>amrex::Vector&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3324" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3282">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
      </node>
      <node id="3286">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="3287" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="3288" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="3332">
        <label>std::vector&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::MultiFab &gt; &gt;, std::allocator&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::MultiFab &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="3304">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="3305" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3322">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt;, std::allocator&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt; &gt;</label>
      </node>
      <node id="3271">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="3272" relation="public-inheritance">
        </childnode>
        <childnode refid="3274" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="3275" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="3305">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="3279" relation="public-inheritance">
        </childnode>
        <childnode refid="3276" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="3284" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="3291" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="3293" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="3295" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="3296" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="3298" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="3300" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="3303">
        <label>std::vector&lt; Int, std::allocator&lt; Int &gt; &gt;</label>
      </node>
      <node id="3287">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
      </node>
      <node id="3329">
        <label>amrex::Vector&lt; amrex::Vector&lt; Real &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3330" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3279">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="3280" relation="usage">
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
        </childnode>
        <childnode refid="3282" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="3276" relation="usage">
          <edgelabel>n_grow</edgelabel>
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>mfghostiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="3283" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="3284" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="3286" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="3290" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
      </node>
      <node id="3324">
        <label>std::vector&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt;, std::allocator&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="3317">
        <label>std::vector&lt; amrex::Vector&lt; amrex::DistributionMapping &gt;, std::allocator&lt; amrex::Vector&lt; amrex::DistributionMapping &gt; &gt; &gt;</label>
      </node>
      <node id="3310">
        <label>std::vector&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::FabFactory&lt; amrex::FArrayBox &gt; &gt; &gt;, std::allocator&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::FabFactory&lt; amrex::FArrayBox &gt; &gt; &gt; &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="24" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="23" bodyend="61"/>
    <listofallmembers>
      <member refid="classamrex_1_1HypreNodeLap_1a84f23ccfc81e4068d4b59ff219dfdd17" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>A</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a8bf1aff14a4fff3cc12887bac7c96620" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>b</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1adf57e9f1fd02ffaff4b31a0d22a1a525" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>comm</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1ae0af71a571c9aa2ae19cac29ee7deb4a" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>dirichlet_mask</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a9c2f378636a2b4fbc0fba818719bace7" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>dmap</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a380f7d1b289a6802248ece2786b86565" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>factory</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a3ec12508ffa505780af64ebc27188233" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>geom</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a58381f405245d3ca27aed91c4197bee6" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>getSolution</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a8454e30c3a460081f89df8154babd952" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>grids</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a37afff718417564419d2804e054cdf85" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>HypreNodeLap</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>Int</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a9759b928932e38f3c1df50648d108663" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>linop</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a9a4132962fea0f9ec7e1566e1aa6254e" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>loadVectors</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1ab571c163213ebca30687e13923b90fac" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>nnodes_grid</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a9a1b45b94bfcf850f38810f79ceb5041" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>node_id</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a731b9abb68433c5b5750155482f5c768" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>node_id_vec</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1ac8924539f89bd4ae28eb0df416235f4e" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>owner_mask</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a8ab7840824ff1afad30c2adc35584bd3" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>solve</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a122058882cb0a6fddbc4a9bae3da1b89" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>solver</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a0ff36d67bd4b146e140a63de29c435e7" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>tmpsoln</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a46cd3d0729be8490f8ae8840c1988d38" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>verbose</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1af32f270916e5ac3077cad9d15792033e" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>x</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1ac4fd7635fb3f2ef04617ec9a1e17f0ac" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>~HypreNodeLap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
