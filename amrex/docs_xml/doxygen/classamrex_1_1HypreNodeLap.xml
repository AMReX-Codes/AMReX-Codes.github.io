<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classamrex_1_1HypreNodeLap" kind="class" language="C++" prot="public">
    <compoundname>amrex::HypreNodeLap</compoundname>
    <includes refid="AMReX__HypreNodeLap_8H" local="no">AMReX_HypreNodeLap.H</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" prot="public" static="no">
        <type>HYPRE_Int</type>
        <definition>using amrex::HypreNodeLap::Int =  HYPRE_Int</definition>
        <argsstring></argsstring>
        <name>Int</name>
        <qualifiedname>amrex::HypreNodeLap::Int</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="36" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1HypreNodeLap_1a011b59863c3356d7d808e56f47386d4c" prot="public" static="no">
        <type>std::conditional_t&lt; sizeof(<ref refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" kindref="member">Int</ref>)==4, unsigned int, unsigned long long &gt;</type>
        <definition>using amrex::HypreNodeLap::AtomicInt =  std::conditional_t&lt;sizeof(Int) == 4, unsigned int, unsigned long long&gt;</definition>
        <argsstring></argsstring>
        <name>AtomicInt</name>
        <qualifiedname>amrex::HypreNodeLap::AtomicInt</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="41" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="41" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a8454e30c3a460081f89df8154babd952" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref></type>
        <definition>BoxArray amrex::HypreNodeLap::grids</definition>
        <argsstring></argsstring>
        <name>grids</name>
        <qualifiedname>amrex::HypreNodeLap::grids</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="51" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a9c2f378636a2b4fbc0fba818719bace7" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref></type>
        <definition>DistributionMapping amrex::HypreNodeLap::dmap</definition>
        <argsstring></argsstring>
        <name>dmap</name>
        <qualifiedname>amrex::HypreNodeLap::dmap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="52" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a3ec12508ffa505780af64ebc27188233" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::HypreNodeLap::geom</definition>
        <argsstring></argsstring>
        <name>geom</name>
        <qualifiedname>amrex::HypreNodeLap::geom</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="53" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a380f7d1b289a6802248ece2786b86565" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabFactory" kindref="compound">FabFactory</ref>&lt; <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &gt; const  *</type>
        <definition>FabFactory&lt;FArrayBox&gt; const* amrex::HypreNodeLap::factory</definition>
        <argsstring></argsstring>
        <name>factory</name>
        <qualifiedname>amrex::HypreNodeLap::factory</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="54" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1ac8924539f89bd4ae28eb0df416235f4e" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> const  *</type>
        <definition>iMultiFab const* amrex::HypreNodeLap::owner_mask</definition>
        <argsstring></argsstring>
        <name>owner_mask</name>
        <qualifiedname>amrex::HypreNodeLap::owner_mask</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="55" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1ae0af71a571c9aa2ae19cac29ee7deb4a" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> const  *</type>
        <definition>iMultiFab const* amrex::HypreNodeLap::dirichlet_mask</definition>
        <argsstring></argsstring>
        <name>dirichlet_mask</name>
        <qualifiedname>amrex::HypreNodeLap::dirichlet_mask</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="56" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1adf57e9f1fd02ffaff4b31a0d22a1a525" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1mpidatatypes_1a30fa228956d7a68a0c604ae5f2163db9" kindref="member">MPI_Comm</ref></type>
        <definition>MPI_Comm amrex::HypreNodeLap::comm</definition>
        <argsstring></argsstring>
        <name>comm</name>
        <qualifiedname>amrex::HypreNodeLap::comm</qualifiedname>
        <initializer>= <ref refid="namespaceamrex_1_1mpidatatypes_1aa2364a3fe51b2fa0064be83fa2994608" kindref="member">MPI_COMM_NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="57" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1ad7cbb6433d195bb9fc6aaf2f7b92ff76" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLNodeLinOp" kindref="compound">MLNodeLinOp</ref> const  *</type>
        <definition>MLNodeLinOp const* amrex::HypreNodeLap::linop</definition>
        <argsstring></argsstring>
        <name>linop</name>
        <qualifiedname>amrex::HypreNodeLap::linop</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="58" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a46cd3d0729be8490f8ae8840c1988d38" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::HypreNodeLap::verbose</definition>
        <argsstring></argsstring>
        <name>verbose</name>
        <qualifiedname>amrex::HypreNodeLap::verbose</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="59" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a9edf6830b04060921e5fcd8c3b95ab79" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classamrex_1_1HypreIJIface" kindref="compound">HypreIJIface</ref> &gt;</type>
        <definition>std::unique_ptr&lt;HypreIJIface&gt; amrex::HypreNodeLap::hypre_ij</definition>
        <argsstring></argsstring>
        <name>hypre_ij</name>
        <qualifiedname>amrex::HypreNodeLap::hypre_ij</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="61" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a84f23ccfc81e4068d4b59ff219dfdd17" prot="private" static="no" mutable="no">
        <type>HYPRE_IJMatrix</type>
        <definition>HYPRE_IJMatrix amrex::HypreNodeLap::A</definition>
        <argsstring></argsstring>
        <name>A</name>
        <qualifiedname>amrex::HypreNodeLap::A</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="64" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a8bf1aff14a4fff3cc12887bac7c96620" prot="private" static="no" mutable="no">
        <type>HYPRE_IJVector</type>
        <definition>HYPRE_IJVector amrex::HypreNodeLap::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <qualifiedname>amrex::HypreNodeLap::b</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="65" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1af32f270916e5ac3077cad9d15792033e" prot="private" static="no" mutable="no">
        <type>HYPRE_IJVector</type>
        <definition>HYPRE_IJVector amrex::HypreNodeLap::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <qualifiedname>amrex::HypreNodeLap::x</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="66" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1ab571c163213ebca30687e13923b90fac" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; <ref refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" kindref="member">Int</ref> &gt;</type>
        <definition>LayoutData&lt;Int&gt; amrex::HypreNodeLap::nnodes_grid</definition>
        <argsstring></argsstring>
        <name>nnodes_grid</name>
        <qualifiedname>amrex::HypreNodeLap::nnodes_grid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="68" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a25dc8630f7ee5466e547f64cd3266b22" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; <ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">Gpu::DeviceVector</ref>&lt; <ref refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" kindref="member">Int</ref> &gt; &gt;</type>
        <definition>LayoutData&lt;Gpu::DeviceVector&lt;Int&gt; &gt; amrex::HypreNodeLap::node_id_vec</definition>
        <argsstring></argsstring>
        <name>node_id_vec</name>
        <qualifiedname>amrex::HypreNodeLap::node_id_vec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="69" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1ae800380bfc5755081f9387bd4b9d098b" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt; <ref refid="classamrex_1_1HypreNodeLap_1a011b59863c3356d7d808e56f47386d4c" kindref="member">AtomicInt</ref> &gt; &gt;</type>
        <definition>FabArray&lt;BaseFab&lt;AtomicInt&gt; &gt; amrex::HypreNodeLap::node_id</definition>
        <argsstring></argsstring>
        <name>node_id</name>
        <qualifiedname>amrex::HypreNodeLap::node_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="70" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a2fd291b75b96615bab7ca98c226f039c" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref></type>
        <definition>iMultiFab amrex::HypreNodeLap::local_node_id</definition>
        <argsstring></argsstring>
        <name>local_node_id</name>
        <qualifiedname>amrex::HypreNodeLap::local_node_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="71" column="15" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a572e669336638bfcd32956674cea5b07" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; <ref refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" kindref="member">Int</ref> &gt;</type>
        <definition>LayoutData&lt;Int&gt; amrex::HypreNodeLap::id_offset</definition>
        <argsstring></argsstring>
        <name>id_offset</name>
        <qualifiedname>amrex::HypreNodeLap::id_offset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="72" column="16" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a0ff36d67bd4b146e140a63de29c435e7" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::HypreNodeLap::tmpsoln</definition>
        <argsstring></argsstring>
        <name>tmpsoln</name>
        <qualifiedname>amrex::HypreNodeLap::tmpsoln</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="73" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a82145850435b74caa01b3322229a059b" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string amrex::HypreNodeLap::options_namespace</definition>
        <argsstring></argsstring>
        <name>options_namespace</name>
        <qualifiedname>amrex::HypreNodeLap::options_namespace</qualifiedname>
        <initializer>{&quot;hypre&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="75" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="75" bodyend="75"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1a4a032e1f18d32c22aaff8355cf9f0110" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::HypreNodeLap::HypreNodeLap</definition>
        <argsstring>(const BoxArray &amp;grids_, const DistributionMapping &amp;dmap_, const Geometry &amp;geom_, const FabFactory&lt; FArrayBox &gt; &amp;factory_, const iMultiFab &amp;owner_mask_, const iMultiFab &amp;dirichlet_mask_, MPI_Comm comm_, MLNodeLinOp const *linop_, int verbose_, std::string options_namespace_)</argsstring>
        <name>HypreNodeLap</name>
        <qualifiedname>amrex::HypreNodeLap::HypreNodeLap</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>grids_</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap_</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom_</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1FabFactory" kindref="compound">FabFactory</ref>&lt; <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &gt; &amp;</type>
          <declname>factory_</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> &amp;</type>
          <declname>owner_mask_</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> &amp;</type>
          <declname>dirichlet_mask_</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1_1mpidatatypes_1a30fa228956d7a68a0c604ae5f2163db9" kindref="member">MPI_Comm</ref></type>
          <declname>comm_</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLNodeLinOp" kindref="compound">MLNodeLinOp</ref> const *</type>
          <declname>linop_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>verbose_</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>options_namespace_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="24" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="12" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1ac4fd7635fb3f2ef04617ec9a1e17f0ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::HypreNodeLap::~HypreNodeLap</definition>
        <argsstring>()</argsstring>
        <name>~HypreNodeLap</name>
        <qualifiedname>amrex::HypreNodeLap::~HypreNodeLap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="29" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1ad983343af0ce854dfc6b6c93d50f2f2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::HypreNodeLap::HypreNodeLap</definition>
        <argsstring>(HypreNodeLap const &amp;)=delete</argsstring>
        <name>HypreNodeLap</name>
        <qualifiedname>amrex::HypreNodeLap::HypreNodeLap</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1HypreNodeLap" kindref="compound">HypreNodeLap</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="31" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1a25a7c6fd7deff773f1e8d5d97b409a8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::HypreNodeLap::HypreNodeLap</definition>
        <argsstring>(HypreNodeLap &amp;&amp;)=delete</argsstring>
        <name>HypreNodeLap</name>
        <qualifiedname>amrex::HypreNodeLap::HypreNodeLap</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1HypreNodeLap" kindref="compound">HypreNodeLap</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="32" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1a3718fcf12a43cd5991d66fec1a70b916" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1HypreNodeLap" kindref="compound">HypreNodeLap</ref> &amp;</type>
        <definition>HypreNodeLap &amp; amrex::HypreNodeLap::operator=</definition>
        <argsstring>(HypreNodeLap const &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::HypreNodeLap::operator=</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1HypreNodeLap" kindref="compound">HypreNodeLap</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="33" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1adc21f61d801329beabf566219eedefed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1HypreNodeLap" kindref="compound">HypreNodeLap</ref> &amp;</type>
        <definition>HypreNodeLap &amp; amrex::HypreNodeLap::operator=</definition>
        <argsstring>(HypreNodeLap &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::HypreNodeLap::operator=</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1HypreNodeLap" kindref="compound">HypreNodeLap</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="34" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1a8ab7840824ff1afad30c2adc35584bd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreNodeLap::solve</definition>
        <argsstring>(MultiFab &amp;soln, const MultiFab &amp;rhs, Real rel_tol, Real abs_tol, int max_iter)</argsstring>
        <name>solve</name>
        <qualifiedname>amrex::HypreNodeLap::solve</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>rel_tol</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>abs_tol</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="43" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="136" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1a9f80d1c81a4fc95cd42b3741dbccbacd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreNodeLap::setHypreOptionsNamespace</definition>
        <argsstring>(const std::string &amp;ns)</argsstring>
        <name>setHypreOptionsNamespace</name>
        <qualifiedname>amrex::HypreNodeLap::setHypreOptionsNamespace</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>ns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="46" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="46" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1a0359a94cef0d652dfc7dae61ef3d1ac7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" kindref="member">Int</ref></type>
        <definition>HypreNodeLap::Int amrex::HypreNodeLap::fill_local_node_id</definition>
        <argsstring>()</argsstring>
        <name>fill_local_node_id</name>
        <qualifiedname>amrex::HypreNodeLap::fill_local_node_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="78" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="155" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1aad970086d1f98c702bcb5528a2299e1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" kindref="member">Int</ref></type>
        <definition>HypreNodeLap::Int amrex::HypreNodeLap::fill_local_node_id_gpu</definition>
        <argsstring>()</argsstring>
        <name>fill_local_node_id_gpu</name>
        <qualifiedname>amrex::HypreNodeLap::fill_local_node_id_gpu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="80" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="170" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1a4dd726a8a74759ab3f68d1849d0cdf6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" kindref="member">Int</ref></type>
        <definition>HypreNodeLap::Int amrex::HypreNodeLap::fill_local_node_id_cpu</definition>
        <argsstring>()</argsstring>
        <name>fill_local_node_id_cpu</name>
        <qualifiedname>amrex::HypreNodeLap::fill_local_node_id_cpu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="82" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="214" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1a2510963c0a789333e3eb1cba036cc7ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreNodeLap::fill_global_node_id</definition>
        <argsstring>()</argsstring>
        <name>fill_global_node_id</name>
        <qualifiedname>amrex::HypreNodeLap::fill_global_node_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="83" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="252" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1a9a4132962fea0f9ec7e1566e1aa6254e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreNodeLap::loadVectors</definition>
        <argsstring>(MultiFab &amp;soln, const MultiFab &amp;rhs)</argsstring>
        <name>loadVectors</name>
        <qualifiedname>amrex::HypreNodeLap::loadVectors</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="85" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="293" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1a58381f405245d3ca27aed91c4197bee6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreNodeLap::getSolution</definition>
        <argsstring>(MultiFab &amp;soln)</argsstring>
        <name>getSolution</name>
        <qualifiedname>amrex::HypreNodeLap::getSolution</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="86" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="334" bodyend="366"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1af11e3c7489ef57cc0b55dd79d2a355ea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreNodeLap::adjust_singular_matrix</definition>
        <argsstring>(Int const *ncols, Int const *cols, Int const *rows, Real *mat)</argsstring>
        <name>adjust_singular_matrix</name>
        <qualifiedname>amrex::HypreNodeLap::adjust_singular_matrix</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" kindref="member">Int</ref> const *</type>
          <declname>ncols</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" kindref="member">Int</ref> const *</type>
          <declname>cols</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" kindref="member">Int</ref> const *</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>Real *</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="84" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="280" bodyend="290"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="75">
        <label>amrex::Array4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1Array4"/>
        <childnode refid="76" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="78">
        <label>amrex::Array4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1Array4"/>
        <childnode refid="76" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="85">
        <label>amrex::Array4CopyTag&lt; value_type &gt;</label>
        <link refid="structamrex_1_1Array4CopyTag"/>
        <childnode refid="75" relation="usage">
          <edgelabel>dfab</edgelabel>
        </childnode>
        <childnode refid="78" relation="usage">
          <edgelabel>sfab</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>dbox</edgelabel>
        </childnode>
        <childnode refid="76" relation="usage">
          <edgelabel>offset</edgelabel>
        </childnode>
      </node>
      <node id="169">
        <label>amrex::BaseFab&lt; AtomicInt &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="59" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="148">
        <label>amrex::BaseFab&lt; Real &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="59" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="71">
        <label>amrex::BaseFab&lt; int &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="59" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>amrex::BoxND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1BoxND"/>
      </node>
      <node id="89">
        <label>amrex::CommRecvBufTag&lt; value_type &gt;</label>
        <link refid="structamrex_1_1CommRecvBufTag"/>
        <childnode refid="75" relation="usage">
          <edgelabel>dfab</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>bx</edgelabel>
        </childnode>
      </node>
      <node id="93">
        <label>amrex::CommSendBufTag&lt; value_type &gt;</label>
        <link refid="structamrex_1_1CommSendBufTag"/>
        <childnode refid="78" relation="usage">
          <edgelabel>sfab</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>bx</edgelabel>
        </childnode>
      </node>
      <node id="151">
        <label>amrex::FBData&lt; FArrayBox &gt;</label>
        <link refid="structamrex_1_1FBData"/>
        <childnode refid="96" relation="usage">
          <edgelabel>fb</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>recv_data</edgelabel>
          <edgelabel>send_data</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
        <childnode refid="108" relation="usage">
          <edgelabel>recv_stat</edgelabel>
        </childnode>
      </node>
      <node id="95">
        <label>amrex::FBData&lt; IArrayBox &gt;</label>
        <link refid="structamrex_1_1FBData"/>
        <childnode refid="96" relation="usage">
          <edgelabel>fb</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>recv_data</edgelabel>
          <edgelabel>send_data</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
        <childnode refid="108" relation="usage">
          <edgelabel>recv_stat</edgelabel>
        </childnode>
      </node>
      <node id="171">
        <label>amrex::FBData&lt; amrex::BaseFab&lt; AtomicInt &gt; &gt;</label>
        <link refid="structamrex_1_1FBData"/>
        <childnode refid="96" relation="usage">
          <edgelabel>fb</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>recv_data</edgelabel>
          <edgelabel>send_data</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
        <childnode refid="108" relation="usage">
          <edgelabel>recv_stat</edgelabel>
        </childnode>
      </node>
      <node id="143">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
        <childnode refid="144" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="59" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="67" relation="usage">
          <edgelabel>m_single_chunk_arena</edgelabel>
        </childnode>
        <childnode refid="146" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="79" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="81" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>m_fb_local_copy_handler</edgelabel>
        </childnode>
        <childnode refid="86" relation="usage">
          <edgelabel>m_recv_copy_handler</edgelabel>
        </childnode>
        <childnode refid="90" relation="usage">
          <edgelabel>m_send_copy_handler</edgelabel>
        </childnode>
        <childnode refid="150" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="152" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="154" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>amrex::FabArray&lt; IArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="59" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="67" relation="usage">
          <edgelabel>m_single_chunk_arena</edgelabel>
        </childnode>
        <childnode refid="69" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="79" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="81" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>m_fb_local_copy_handler</edgelabel>
        </childnode>
        <childnode refid="86" relation="usage">
          <edgelabel>m_recv_copy_handler</edgelabel>
        </childnode>
        <childnode refid="90" relation="usage">
          <edgelabel>m_send_copy_handler</edgelabel>
        </childnode>
        <childnode refid="94" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="110" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="113" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
      </node>
      <node id="165">
        <label>amrex::FabArray&lt; amrex::BaseFab&lt; AtomicInt &gt; &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
        <childnode refid="166" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="59" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="67" relation="usage">
          <edgelabel>m_single_chunk_arena</edgelabel>
        </childnode>
        <childnode refid="168" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="79" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="81" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>m_fb_local_copy_handler</edgelabel>
        </childnode>
        <childnode refid="86" relation="usage">
          <edgelabel>m_recv_copy_handler</edgelabel>
        </childnode>
        <childnode refid="90" relation="usage">
          <edgelabel>m_send_copy_handler</edgelabel>
        </childnode>
        <childnode refid="170" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="172" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="174" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
      </node>
      <node id="145">
        <label>amrex::FabFactory&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="58">
        <label>amrex::FabFactory&lt; IArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="167">
        <label>amrex::FabFactory&lt; amrex::BaseFab&lt; AtomicInt &gt; &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="35">
        <label>amrex::FabFactory&lt; amrex::FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="34">
        <label>amrex::GpuArray&lt; ParticleReal, 3 &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="7">
        <label>amrex::IndexTypeND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1IndexTypeND"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>amrex::IntVectND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="40">
        <label>K</label>
      </node>
      <node id="159">
        <label>amrex::LayoutData&lt; Int &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
        <childnode refid="160" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="162">
        <label>amrex::LayoutData&lt; amrex::PODVector&lt; Int &gt; &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
        <childnode refid="163" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="115">
        <label>MLLinOp</label>
        <link refid="classamrex_1_1MLLinOpT"/>
        <childnode refid="116" relation="usage">
          <edgelabel>m_hibc</edgelabel>
          <edgelabel>m_hibc_orig</edgelabel>
          <edgelabel>m_lobc</edgelabel>
          <edgelabel>m_lobc_orig</edgelabel>
        </childnode>
        <childnode refid="118" relation="usage">
          <edgelabel>info</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>m_amr_ref_ratio</edgelabel>
          <edgelabel>m_domain_covered</edgelabel>
          <edgelabel>m_num_mg_levels</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_coarse_data_crse_ratio</edgelabel>
          <edgelabel>m_ixtype</edgelabel>
        </childnode>
        <childnode refid="119" relation="usage">
          <edgelabel>mg_coarsen_ratio_vec</edgelabel>
        </childnode>
        <childnode refid="121" relation="usage">
          <edgelabel>m_geom</edgelabel>
        </childnode>
        <childnode refid="123" relation="usage">
          <edgelabel>m_grids</edgelabel>
        </childnode>
        <childnode refid="125" relation="usage">
          <edgelabel>m_dmap</edgelabel>
        </childnode>
        <childnode refid="127" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="129" relation="usage">
          <edgelabel>m_raii_comm</edgelabel>
        </childnode>
        <childnode refid="131" relation="usage">
          <edgelabel>m_coarse_bc_loc</edgelabel>
        </childnode>
        <childnode refid="133" relation="usage">
          <edgelabel>levelbc_raii</edgelabel>
          <edgelabel>robin_a_raii</edgelabel>
          <edgelabel>robin_b_raii</edgelabel>
          <edgelabel>robin_f_raii</edgelabel>
        </childnode>
      </node>
      <node id="74">
        <label>amrex::MultiArray4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
        <childnode refid="75" relation="usage">
          <edgelabel>dp</edgelabel>
          <edgelabel>hp</edgelabel>
        </childnode>
      </node>
      <node id="77">
        <label>amrex::MultiArray4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
        <childnode refid="78" relation="usage">
          <edgelabel>dp</edgelabel>
          <edgelabel>hp</edgelabel>
        </childnode>
      </node>
      <node id="153">
        <label>amrex::PCData&lt; FArrayBox &gt;</label>
        <link refid="structamrex_1_1PCData"/>
        <childnode refid="112" relation="usage">
          <edgelabel>cpc</edgelabel>
        </childnode>
        <childnode refid="143" relation="usage">
          <edgelabel>src</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>recv_data</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
      </node>
      <node id="111">
        <label>amrex::PCData&lt; IArrayBox &gt;</label>
        <link refid="structamrex_1_1PCData"/>
        <childnode refid="112" relation="usage">
          <edgelabel>cpc</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>src</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>recv_data</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
      </node>
      <node id="173">
        <label>amrex::PCData&lt; amrex::BaseFab&lt; AtomicInt &gt; &gt;</label>
        <link refid="structamrex_1_1PCData"/>
        <childnode refid="112" relation="usage">
          <edgelabel>cpc</edgelabel>
        </childnode>
        <childnode refid="165" relation="usage">
          <edgelabel>src</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>recv_data</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
      </node>
      <node id="131">
        <label>amrex::RealVectND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1RealVectND"/>
        <childnode refid="132" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>T</label>
      </node>
      <node id="84">
        <label>amrex::TagVector&lt; amrex::Array4CopyTag&lt; value_type &gt; &gt;</label>
        <link refid="structamrex_1_1TagVector"/>
        <childnode refid="85" relation="usage">
          <edgelabel>d_tags</edgelabel>
        </childnode>
      </node>
      <node id="88">
        <label>amrex::TagVector&lt; amrex::CommRecvBufTag&lt; value_type &gt; &gt;</label>
        <link refid="structamrex_1_1TagVector"/>
        <childnode refid="89" relation="usage">
          <edgelabel>d_tags</edgelabel>
        </childnode>
      </node>
      <node id="92">
        <label>amrex::TagVector&lt; amrex::CommSendBufTag&lt; value_type &gt; &gt;</label>
        <link refid="structamrex_1_1TagVector"/>
        <childnode refid="93" relation="usage">
          <edgelabel>d_tags</edgelabel>
        </childnode>
      </node>
      <node id="116">
        <label>amrex::Vector&lt; Array&lt; BCType, 3 &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="117" relation="public-inheritance">
        </childnode>
      </node>
      <node id="160">
        <label>amrex::Vector&lt; Int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="161" relation="public-inheritance">
        </childnode>
      </node>
      <node id="106">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="107" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>amrex::Vector&lt; amrex::BoxND &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="119">
        <label>amrex::Vector&lt; amrex::IntVectND &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="120" relation="public-inheritance">
        </childnode>
      </node>
      <node id="155">
        <label>amrex::Vector&lt; amrex::MultiFab &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="156" relation="public-inheritance">
        </childnode>
      </node>
      <node id="163">
        <label>amrex::Vector&lt; amrex::PODVector&lt; Int &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="164" relation="public-inheritance">
        </childnode>
      </node>
      <node id="123">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::BoxArray &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="124" relation="public-inheritance">
        </childnode>
      </node>
      <node id="125">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::DistributionMapping &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="126" relation="public-inheritance">
        </childnode>
      </node>
      <node id="121">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::Geometry &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="122" relation="public-inheritance">
        </childnode>
      </node>
      <node id="127">
        <label>amrex::Vector&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::FabFactory&lt; FAB &gt; &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="128" relation="public-inheritance">
        </childnode>
      </node>
      <node id="136">
        <label>amrex::Vector&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="137" relation="public-inheritance">
        </childnode>
      </node>
      <node id="108">
        <label>amrex::Vector&lt; amrex::mpidatatypes::MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="109" relation="public-inheritance">
        </childnode>
      </node>
      <node id="102">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="103" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="104">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="105" relation="public-inheritance">
        </childnode>
      </node>
      <node id="79">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="80" relation="public-inheritance">
        </childnode>
      </node>
      <node id="133">
        <label>amrex::Vector&lt; std::unique_ptr&lt; MF &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="134" relation="public-inheritance">
        </childnode>
      </node>
      <node id="140">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::LayoutData&lt; int &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="141" relation="public-inheritance">
        </childnode>
      </node>
      <node id="138">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="60">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="61" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
        <childnode refid="62" relation="usage">
          <edgelabel>m_profiler</edgelabel>
        </childnode>
      </node>
      <node id="62">
        <label>amrex::Arena::ArenaProfiler</label>
        <link refid="structamrex_1_1Arena_1_1ArenaProfiler"/>
        <childnode refid="63" relation="usage">
          <edgelabel>m_arena_profiler_mutex</edgelabel>
        </childnode>
        <childnode refid="64" relation="usage">
          <edgelabel>m_profiling_stats</edgelabel>
        </childnode>
        <childnode refid="66" relation="usage">
          <edgelabel>m_currently_allocated</edgelabel>
        </childnode>
      </node>
      <node id="61">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="15">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="16" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="13" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="10" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="7" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="7" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="3">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="5" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
      </node>
      <node id="48">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="15" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="53">
        <label>amrex::BoxIndexerND&lt; dim &gt;</label>
        <link refid="structamrex_1_1BoxIndexerND"/>
        <childnode refid="54" relation="usage">
          <edgelabel>fdm</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>amrex::BoxList</label>
        <link refid="classamrex_1_1BoxList"/>
        <childnode refid="16" relation="usage">
          <edgelabel>m_lbox</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>amrex::CellIndexEnum</label>
        <link refid="structamrex_1_1CellIndexEnum"/>
      </node>
      <node id="32">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
      </node>
      <node id="59">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="60" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="76">
        <label>amrex::Dim3</label>
        <link refid="structamrex_1_1Dim3"/>
      </node>
      <node id="25">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
        <childnode refid="26" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="28" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>m_ownership</edgelabel>
        </childnode>
      </node>
      <node id="49">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="27" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="149">
        <label>amrex::FABio</label>
        <link refid="classamrex_1_1FABio"/>
      </node>
      <node id="147">
        <label>amrex::FArrayBox</label>
        <link refid="classamrex_1_1FArrayBox"/>
        <childnode refid="148" relation="public-inheritance">
        </childnode>
        <childnode refid="149" relation="usage">
          <edgelabel>fabio</edgelabel>
        </childnode>
      </node>
      <node id="81">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="38">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="21" relation="usage">
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>m_TheCPCache</edgelabel>
          <edgelabel>m_TheCrseFineCache</edgelabel>
          <edgelabel>m_TheFBCache</edgelabel>
          <edgelabel>m_TheFillPatchCache</edgelabel>
          <edgelabel>m_ThePolarBCache</edgelabel>
          <edgelabel>m_TheRB180Cache</edgelabel>
          <edgelabel>m_TheRB90Cache</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>m_mem_usage</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>m_region_tag</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>ownership</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>m_TheTileArrayCache</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>m_TheParForCache</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>m_BD_count</edgelabel>
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="48" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="112">
        <label>amrex::FabArrayBase::CPC</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CPC"/>
        <childnode refid="97" relation="public-inheritance">
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>m_dstbdk</edgelabel>
          <edgelabel>m_srcbdk</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_dstng</edgelabel>
          <edgelabel>m_offset</edgelabel>
          <edgelabel>m_srcng</edgelabel>
        </childnode>
        <childnode refid="101" relation="usage">
          <edgelabel>m_period</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>m_dstba</edgelabel>
          <edgelabel>m_srcba</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="42" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="97">
        <label>amrex::FabArrayBase::CommMetaData</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CommMetaData"/>
        <childnode refid="98" relation="usage">
          <edgelabel>m_LocTags</edgelabel>
        </childnode>
        <childnode refid="100" relation="usage">
          <edgelabel>m_RcvTags</edgelabel>
          <edgelabel>m_SndTags</edgelabel>
        </childnode>
      </node>
      <node id="96">
        <label>amrex::FabArrayBase::FB</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FB"/>
        <childnode refid="97" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_ngrow</edgelabel>
        </childnode>
        <childnode refid="101" relation="usage">
          <edgelabel>m_period</edgelabel>
        </childnode>
      </node>
      <node id="56">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="52">
        <label>amrex::FabArrayBase::ParForInfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1ParForInfo"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_ng</edgelabel>
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>m_boxes</edgelabel>
        </childnode>
      </node>
      <node id="45">
        <label>amrex::FabArrayBase::meminfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1meminfo"/>
      </node>
      <node id="31">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>roundoff_hi</edgelabel>
          <edgelabel>roundoff_lo</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="158">
        <label>amrex::HypreIJIface</label>
        <link refid="classamrex_1_1HypreIJIface"/>
        <childnode refid="42" relation="usage">
          <edgelabel>m_file_prefix</edgelabel>
          <edgelabel>m_preconditioner_name</edgelabel>
          <edgelabel>m_solver_name</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::HypreNodeLap</label>
        <link refid="classamrex_1_1HypreNodeLap"/>
        <childnode refid="2" relation="usage">
          <edgelabel>grids</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>dmap</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>factory</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>dirichlet_mask</edgelabel>
          <edgelabel>local_node_id</edgelabel>
          <edgelabel>owner_mask</edgelabel>
        </childnode>
        <childnode refid="114" relation="usage">
          <edgelabel>linop</edgelabel>
        </childnode>
        <childnode refid="157" relation="usage">
          <edgelabel>hypre_ij</edgelabel>
        </childnode>
        <childnode refid="159" relation="usage">
          <edgelabel>id_offset</edgelabel>
          <edgelabel>nnodes_grid</edgelabel>
        </childnode>
        <childnode refid="162" relation="usage">
          <edgelabel>node_id_vec</edgelabel>
        </childnode>
        <childnode refid="165" relation="usage">
          <edgelabel>node_id</edgelabel>
        </childnode>
        <childnode refid="142" relation="usage">
          <edgelabel>tmpsoln</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>options_namespace</edgelabel>
        </childnode>
      </node>
      <node id="70">
        <label>amrex::IArrayBox</label>
        <link refid="classamrex_1_1IArrayBox"/>
        <childnode refid="71" relation="public-inheritance">
        </childnode>
        <childnode refid="72" relation="usage">
          <edgelabel>ifabio</edgelabel>
        </childnode>
      </node>
      <node id="73">
        <label>amrex::IFABio</label>
        <link refid="classamrex_1_1IFABio"/>
      </node>
      <node id="21">
        <label>amrex::IntVectND&lt; dim &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="118">
        <label>amrex::LPInfo</label>
        <link refid="structamrex_1_1LPInfo"/>
      </node>
      <node id="130">
        <label>amrex::MLLinOpT&lt; MF &gt;::CommContainer</label>
        <link refid="structamrex_1_1MLLinOpT_1_1CommContainer"/>
      </node>
      <node id="114">
        <label>amrex::MLNodeLinOp</label>
        <link refid="classamrex_1_1MLNodeLinOp"/>
        <childnode refid="115" relation="public-inheritance">
        </childnode>
        <childnode refid="135" relation="usage">
          <edgelabel>m_owner_mask_bottom</edgelabel>
          <edgelabel>m_owner_mask_top</edgelabel>
        </childnode>
        <childnode refid="136" relation="usage">
          <edgelabel>m_dirichlet_mask</edgelabel>
        </childnode>
        <childnode refid="138" relation="usage">
          <edgelabel>m_cc_fine_mask</edgelabel>
          <edgelabel>m_nd_fine_mask</edgelabel>
          <edgelabel>m_norm_fine_mask</edgelabel>
        </childnode>
        <childnode refid="140" relation="usage">
          <edgelabel>m_has_fine_bndry</edgelabel>
        </childnode>
        <childnode refid="142" relation="usage">
          <edgelabel>m_bottom_dot_mask</edgelabel>
          <edgelabel>m_coarse_dot_mask</edgelabel>
        </childnode>
        <childnode refid="155" relation="usage">
          <edgelabel>m_precond_weight_mask</edgelabel>
        </childnode>
      </node>
      <node id="54">
        <label>amrex::Math::FastDivmodU64</label>
        <link refid="structamrex_1_1Math_1_1FastDivmodU64"/>
      </node>
      <node id="65">
        <label>amrex::MemStat</label>
        <link refid="structamrex_1_1MemStat"/>
      </node>
      <node id="142">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="101">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="10" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
      </node>
      <node id="132">
        <label>amrex::RealVectND&lt; dim &gt;</label>
        <link refid="classamrex_1_1RealVectND"/>
        <childnode refid="132" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="68">
        <label>amrex::detail::SingleChunkArena</label>
        <link refid="classamrex_1_1detail_1_1SingleChunkArena"/>
        <childnode refid="60" relation="public-inheritance">
        </childnode>
        <childnode refid="59" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>amrex::iMultiFab</label>
        <link refid="classamrex_1_1iMultiFab"/>
        <childnode refid="37" relation="public-inheritance">
        </childnode>
      </node>
      <node id="86">
        <label>std::map&lt; RecvSendCopyHandlerKey, std::unique_ptr&lt; amrex::TagVector&lt; amrex::CommRecvBufTag&lt; value_type &gt; &gt; &gt; &gt;</label>
        <childnode refid="87" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="90">
        <label>std::map&lt; RecvSendCopyHandlerKey, std::unique_ptr&lt; amrex::TagVector&lt; amrex::CommSendBufTag&lt; value_type &gt; &gt; &gt; &gt;</label>
        <childnode refid="91" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="55">
        <label>std::map&lt; amrex::FabArrayBase::BDKey, int &gt;</label>
        <childnode refid="47" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>std::map&lt; std::string, amrex::FabArrayBase::meminfo &gt;</label>
        <childnode refid="42" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="64">
        <label>std::map&lt; std::string, amrex::MemStat &gt;</label>
        <childnode refid="42" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="82">
        <label>std::map&lt; std::uint64_t, std::unique_ptr&lt; amrex::TagVector&lt; amrex::Array4CopyTag&lt; value_type &gt; &gt; &gt; &gt;</label>
        <childnode refid="83" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="51">
        <label>std::multimap&lt; amrex::FabArrayBase::BDKey, amrex::FabArrayBase::ParForInfo * &gt;</label>
        <childnode refid="47" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
        <childnode refid="15" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
        <childnode refid="24" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>std::shared_ptr&lt; amrex::DistributionMapping::Ref &gt;</label>
        <childnode refid="27" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="43">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="50">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="40" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>std::multimap&lt; K, T &gt;</label>
        <childnode refid="40" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="63">
        <label>std::mutex</label>
      </node>
      <node id="42">
        <label>std::string</label>
        <childnode refid="43" relation="public-inheritance">
        </childnode>
      </node>
      <node id="99">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="117">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="161">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="107">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="120">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="156">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="164">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="124">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="126">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="122">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="128">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="137">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="109">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="103">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="105">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="80">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="134">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="141">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="139">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="98">
        <label>std::unique_ptr&lt; CopyComTagsContainer &gt;</label>
        <childnode refid="99" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="100">
        <label>std::unique_ptr&lt; MapOfCopyComTagContainers &gt;</label>
        <childnode refid="50" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="150">
        <label>std::unique_ptr&lt; amrex::FBData&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="151" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="94">
        <label>std::unique_ptr&lt; amrex::FBData&lt; IArrayBox &gt; &gt;</label>
        <childnode refid="95" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="170">
        <label>std::unique_ptr&lt; amrex::FBData&lt; amrex::BaseFab&lt; AtomicInt &gt; &gt; &gt;</label>
        <childnode refid="171" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="154">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="143" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="113">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; IArrayBox &gt; &gt;</label>
        <childnode refid="37" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="174">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; amrex::BaseFab&lt; AtomicInt &gt; &gt; &gt;</label>
        <childnode refid="165" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="144">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="145" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="57">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; IArrayBox &gt; &gt;</label>
        <childnode refid="58" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="166">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; amrex::BaseFab&lt; AtomicInt &gt; &gt; &gt;</label>
        <childnode refid="167" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="157">
        <label>std::unique_ptr&lt; amrex::HypreIJIface &gt;</label>
        <childnode refid="158" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="72">
        <label>std::unique_ptr&lt; amrex::IFABio &gt;</label>
        <childnode refid="73" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="129">
        <label>std::unique_ptr&lt; amrex::MLLinOpT::CommContainer &gt;</label>
        <childnode refid="130" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="152">
        <label>std::unique_ptr&lt; amrex::PCData&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="153" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="110">
        <label>std::unique_ptr&lt; amrex::PCData&lt; IArrayBox &gt; &gt;</label>
        <childnode refid="111" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="172">
        <label>std::unique_ptr&lt; amrex::PCData&lt; amrex::BaseFab&lt; AtomicInt &gt; &gt; &gt;</label>
        <childnode refid="173" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="83">
        <label>std::unique_ptr&lt; amrex::TagVector&lt; amrex::Array4CopyTag&lt; value_type &gt; &gt; &gt;</label>
        <childnode refid="84" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="87">
        <label>std::unique_ptr&lt; amrex::TagVector&lt; amrex::CommRecvBufTag&lt; value_type &gt; &gt; &gt;</label>
        <childnode refid="88" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="91">
        <label>std::unique_ptr&lt; amrex::TagVector&lt; amrex::CommSendBufTag&lt; value_type &gt; &gt; &gt;</label>
        <childnode refid="92" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="67">
        <label>std::unique_ptr&lt; amrex::detail::SingleChunkArena &gt;</label>
        <childnode refid="68" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="135">
        <label>std::unique_ptr&lt; amrex::iMultiFab &gt;</label>
        <childnode refid="36" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="21" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="66">
        <label>std::unordered_map&lt; void *, std::pair&lt; amrex::MemStat *, std::size_t &gt; &gt;</label>
      </node>
      <node id="146">
        <label>std::vector&lt; FArrayBox * &gt;</label>
        <childnode refid="147" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="69">
        <label>std::vector&lt; IArrayBox * &gt;</label>
        <childnode refid="70" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="168">
        <label>std::vector&lt; amrex::BaseFab&lt; AtomicInt &gt; * &gt;</label>
        <childnode refid="169" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="22">
        <label>std::vector&lt; int &gt;</label>
      </node>
      <node id="46">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="42" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="21" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="22" bodyend="87"/>
    <listofallmembers>
      <member refid="classamrex_1_1HypreNodeLap_1a84f23ccfc81e4068d4b59ff219dfdd17" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>A</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1af11e3c7489ef57cc0b55dd79d2a355ea" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>adjust_singular_matrix</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a011b59863c3356d7d808e56f47386d4c" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>AtomicInt</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a8bf1aff14a4fff3cc12887bac7c96620" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>b</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1adf57e9f1fd02ffaff4b31a0d22a1a525" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>comm</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1ae0af71a571c9aa2ae19cac29ee7deb4a" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>dirichlet_mask</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a9c2f378636a2b4fbc0fba818719bace7" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>dmap</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a380f7d1b289a6802248ece2786b86565" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>factory</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a2510963c0a789333e3eb1cba036cc7ea" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>fill_global_node_id</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a0359a94cef0d652dfc7dae61ef3d1ac7" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>fill_local_node_id</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a4dd726a8a74759ab3f68d1849d0cdf6d" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>fill_local_node_id_cpu</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1aad970086d1f98c702bcb5528a2299e1c" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>fill_local_node_id_gpu</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a3ec12508ffa505780af64ebc27188233" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>geom</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a58381f405245d3ca27aed91c4197bee6" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>getSolution</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a8454e30c3a460081f89df8154babd952" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>grids</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a9edf6830b04060921e5fcd8c3b95ab79" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>hypre_ij</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a4a032e1f18d32c22aaff8355cf9f0110" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>HypreNodeLap</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1ad983343af0ce854dfc6b6c93d50f2f2c" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>HypreNodeLap</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a25a7c6fd7deff773f1e8d5d97b409a8a" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>HypreNodeLap</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a572e669336638bfcd32956674cea5b07" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>id_offset</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>Int</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1ad7cbb6433d195bb9fc6aaf2f7b92ff76" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>linop</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a9a4132962fea0f9ec7e1566e1aa6254e" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>loadVectors</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a2fd291b75b96615bab7ca98c226f039c" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>local_node_id</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1ab571c163213ebca30687e13923b90fac" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>nnodes_grid</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1ae800380bfc5755081f9387bd4b9d098b" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>node_id</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a25dc8630f7ee5466e547f64cd3266b22" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>node_id_vec</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a3718fcf12a43cd5991d66fec1a70b916" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>operator=</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1adc21f61d801329beabf566219eedefed" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>operator=</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a82145850435b74caa01b3322229a059b" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>options_namespace</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1ac8924539f89bd4ae28eb0df416235f4e" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>owner_mask</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a9f80d1c81a4fc95cd42b3741dbccbacd" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>setHypreOptionsNamespace</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a8ab7840824ff1afad30c2adc35584bd3" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>solve</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a0ff36d67bd4b146e140a63de29c435e7" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>tmpsoln</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a46cd3d0729be8490f8ae8840c1988d38" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>verbose</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1af32f270916e5ac3077cad9d15792033e" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>x</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1ac4fd7635fb3f2ef04617ec9a1e17f0ac" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>~HypreNodeLap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
