<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1HypreNodeLap" kind="class" language="C++" prot="public">
    <compoundname>amrex::HypreNodeLap</compoundname>
    <includes refid="AMReX__HypreNodeLap_8H" local="no">AMReX_HypreNodeLap.H</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" prot="public" static="no">
        <type>HYPRE_Int</type>
        <definition>using amrex::HypreNodeLap::Int =  HYPRE_Int</definition>
        <argsstring></argsstring>
        <name>Int</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="31" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a8454e30c3a460081f89df8154babd952" prot="private" static="no" mutable="no">
        <type>BoxArray</type>
        <definition>BoxArray amrex::HypreNodeLap::grids</definition>
        <argsstring></argsstring>
        <name>grids</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="43" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a9c2f378636a2b4fbc0fba818719bace7" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref></type>
        <definition>DistributionMapping amrex::HypreNodeLap::dmap</definition>
        <argsstring></argsstring>
        <name>dmap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="44" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a3ec12508ffa505780af64ebc27188233" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::HypreNodeLap::geom</definition>
        <argsstring></argsstring>
        <name>geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="45" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a380f7d1b289a6802248ece2786b86565" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabFactory" kindref="compound">FabFactory</ref>&lt; <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &gt; const  *</type>
        <definition>FabFactory&lt;FArrayBox&gt; const* amrex::HypreNodeLap::factory</definition>
        <argsstring></argsstring>
        <name>factory</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="46" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1ac8924539f89bd4ae28eb0df416235f4e" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> const  *</type>
        <definition>iMultiFab const* amrex::HypreNodeLap::owner_mask</definition>
        <argsstring></argsstring>
        <name>owner_mask</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="47" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1ae0af71a571c9aa2ae19cac29ee7deb4a" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> const  *</type>
        <definition>iMultiFab const* amrex::HypreNodeLap::dirichlet_mask</definition>
        <argsstring></argsstring>
        <name>dirichlet_mask</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="48" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1adf57e9f1fd02ffaff4b31a0d22a1a525" prot="private" static="no" mutable="no">
        <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
        <definition>MPI_Comm amrex::HypreNodeLap::comm</definition>
        <argsstring></argsstring>
        <name>comm</name>
        <initializer>= <ref refid="AMReX__ccse-mpi_8H_1a9c299ed1c4c5eaa48a6446c85fb2d689" kindref="member">MPI_COMM_NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="49" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1ad7cbb6433d195bb9fc6aaf2f7b92ff76" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLNodeLinOp" kindref="compound">MLNodeLinOp</ref> const  *</type>
        <definition>MLNodeLinOp const* amrex::HypreNodeLap::linop</definition>
        <argsstring></argsstring>
        <name>linop</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="50" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a46cd3d0729be8490f8ae8840c1988d38" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::HypreNodeLap::verbose</definition>
        <argsstring></argsstring>
        <name>verbose</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="51" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a9edf6830b04060921e5fcd8c3b95ab79" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classamrex_1_1HypreIJIface" kindref="compound">HypreIJIface</ref> &gt;</type>
        <definition>std::unique_ptr&lt;HypreIJIface&gt; amrex::HypreNodeLap::hypre_ij</definition>
        <argsstring></argsstring>
        <name>hypre_ij</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="53" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a84f23ccfc81e4068d4b59ff219dfdd17" prot="private" static="no" mutable="no">
        <type>HYPRE_IJMatrix</type>
        <definition>HYPRE_IJMatrix amrex::HypreNodeLap::A</definition>
        <argsstring></argsstring>
        <name>A</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="56" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a8bf1aff14a4fff3cc12887bac7c96620" prot="private" static="no" mutable="no">
        <type>HYPRE_IJVector</type>
        <definition>HYPRE_IJVector amrex::HypreNodeLap::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="57" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1af32f270916e5ac3077cad9d15792033e" prot="private" static="no" mutable="no">
        <type>HYPRE_IJVector</type>
        <definition>HYPRE_IJVector amrex::HypreNodeLap::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="58" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1ab571c163213ebca30687e13923b90fac" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; <ref refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" kindref="member">Int</ref> &gt;</type>
        <definition>LayoutData&lt;Int&gt; amrex::HypreNodeLap::nnodes_grid</definition>
        <argsstring></argsstring>
        <name>nnodes_grid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="60" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a731b9abb68433c5b5750155482f5c768" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" kindref="member">Int</ref> &gt; &gt;</type>
        <definition>LayoutData&lt;Vector&lt;Int&gt; &gt; amrex::HypreNodeLap::node_id_vec</definition>
        <argsstring></argsstring>
        <name>node_id_vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="61" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a9a1b45b94bfcf850f38810f79ceb5041" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; <ref refid="classamrex_1_1BaseFab" kindref="compound">BaseFab</ref>&lt; <ref refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" kindref="member">Int</ref> &gt; &gt;</type>
        <definition>FabArray&lt;BaseFab&lt;Int&gt; &gt; amrex::HypreNodeLap::node_id</definition>
        <argsstring></argsstring>
        <name>node_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="62" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a0ff36d67bd4b146e140a63de29c435e7" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::HypreNodeLap::tmpsoln</definition>
        <argsstring></argsstring>
        <name>tmpsoln</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="63" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1HypreNodeLap_1a82145850435b74caa01b3322229a059b" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string amrex::HypreNodeLap::options_namespace</definition>
        <argsstring></argsstring>
        <name>options_namespace</name>
        <initializer>{&quot;hypre&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="65" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1ad99767a5bee39ac11fc1c49b01beaf26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::HypreNodeLap::HypreNodeLap</definition>
        <argsstring>(const BoxArray &amp;grids_, const DistributionMapping &amp;dmap_, const Geometry &amp;geom_, const FabFactory&lt; FArrayBox &gt; &amp;factory_, const iMultiFab &amp;owner_mask_, const iMultiFab &amp;dirichlet_mask_, MPI_Comm comm_, MLNodeLinOp const *linop_, int verbose_, const std::string &amp;options_namespace_)</argsstring>
        <name>HypreNodeLap</name>
        <param>
          <type>const BoxArray &amp;</type>
          <declname>grids_</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap_</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom_</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1FabFactory" kindref="compound">FabFactory</ref>&lt; <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &gt; &amp;</type>
          <declname>factory_</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> &amp;</type>
          <declname>owner_mask_</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> &amp;</type>
          <declname>dirichlet_mask_</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm_</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1MLNodeLinOp" kindref="compound">MLNodeLinOp</ref> const *</type>
          <declname>linop_</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>verbose_</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>options_namespace_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="24" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="18" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1ac4fd7635fb3f2ef04617ec9a1e17f0ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::HypreNodeLap::~HypreNodeLap</definition>
        <argsstring>()</argsstring>
        <name>~HypreNodeLap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="29" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="245" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1a8ab7840824ff1afad30c2adc35584bd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreNodeLap::solve</definition>
        <argsstring>(MultiFab &amp;soln, const MultiFab &amp;rhs, Real rel_tol, Real abs_tol, int max_iter)</argsstring>
        <name>solve</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>rel_tol</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>abs_tol</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>max_iter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="33" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="249" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1aa6c506e9171db3a9db1b1c32fc2b2bbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreNodeLap::fill_node_id</definition>
        <argsstring>(LayoutData&lt; Int &gt; &amp;offset)</argsstring>
        <name>fill_node_id</name>
        <param>
          <type><ref refid="classamrex_1_1LayoutData" kindref="compound">LayoutData</ref>&lt; <ref refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" kindref="member">Int</ref> &gt; &amp;</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="36" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="268" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1a9f80d1c81a4fc95cd42b3741dbccbacd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreNodeLap::setHypreOptionsNamespace</definition>
        <argsstring>(const std::string &amp;ns)</argsstring>
        <name>setHypreOptionsNamespace</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>ns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="38" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="38" bodyend="39"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1a9a4132962fea0f9ec7e1566e1aa6254e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreNodeLap::loadVectors</definition>
        <argsstring>(MultiFab &amp;soln, const MultiFab &amp;rhs)</argsstring>
        <name>loadVectors</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="67" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="287" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1HypreNodeLap_1a58381f405245d3ca27aed91c4197bee6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::HypreNodeLap::getSolution</definition>
        <argsstring>(MultiFab &amp;soln)</argsstring>
        <name>getSolution</name>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="68" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp" bodystart="333" bodyend="367"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2040">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
      </node>
      <node id="2077">
        <label>amrex::iMultiFab</label>
        <link refid="classamrex_1_1iMultiFab"/>
        <childnode refid="2078" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2020">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="2021" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="2023">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="2035">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="2016">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="2016" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="2073">
        <label>amrex::LayoutData&lt; amrex::Vector&lt; Int &gt; &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="2019" relation="public-inheritance">
        </childnode>
        <childnode refid="2074" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="2013">
        <label>Real</label>
      </node>
      <node id="2041">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2042" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2033">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="2034" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="2074">
        <label>amrex::Vector&lt; amrex::Vector&lt; Int &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2075" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2010">
        <label>amrex::HypreNodeLap</label>
        <link refid="classamrex_1_1HypreNodeLap"/>
        <childnode refid="2011" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="2018" relation="usage">
          <edgelabel>node_id</edgelabel>
        </childnode>
        <childnode refid="2044" relation="usage">
          <edgelabel>linop</edgelabel>
        </childnode>
        <childnode refid="2070" relation="usage">
          <edgelabel>nnodes_grid</edgelabel>
        </childnode>
        <childnode refid="2022" relation="usage">
          <edgelabel>dmap</edgelabel>
        </childnode>
        <childnode refid="2053" relation="usage">
          <edgelabel>tmpsoln</edgelabel>
        </childnode>
        <childnode refid="2073" relation="usage">
          <edgelabel>node_id_vec</edgelabel>
        </childnode>
        <childnode refid="2021" relation="usage">
          <edgelabel>options_namespace</edgelabel>
        </childnode>
        <childnode refid="2076" relation="usage">
          <edgelabel>factory</edgelabel>
        </childnode>
        <childnode refid="2077" relation="usage">
          <edgelabel>dirichlet_mask</edgelabel>
          <edgelabel>owner_mask</edgelabel>
        </childnode>
      </node>
      <node id="2032">
        <label>std::vector&lt; char *, std::allocator&lt; char *&gt; &gt;</label>
      </node>
      <node id="2060">
        <label>std::vector&lt; Array&lt; BCType, AMREX_SPACEDIM &gt;, std::allocator&lt; Array&lt; BCType, AMREX_SPACEDIM &gt; &gt; &gt;</label>
      </node>
      <node id="2037">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
      </node>
      <node id="2034">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="2035" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="2024">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2025" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2021">
        <label>string</label>
      </node>
      <node id="2043">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="2016" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="2044">
        <label>amrex::MLNodeLinOp</label>
        <link refid="classamrex_1_1MLNodeLinOp"/>
        <childnode refid="2045" relation="public-inheritance">
        </childnode>
        <childnode refid="2053" relation="usage">
          <edgelabel>m_bottom_dot_mask</edgelabel>
          <edgelabel>m_coarse_dot_mask</edgelabel>
        </childnode>
        <childnode refid="2064" relation="usage">
          <edgelabel>m_nd_fine_mask</edgelabel>
          <edgelabel>m_cc_fine_mask</edgelabel>
        </childnode>
        <childnode refid="2066" relation="usage">
          <edgelabel>m_owner_mask</edgelabel>
          <edgelabel>m_dirichlet_mask</edgelabel>
        </childnode>
        <childnode refid="2068" relation="usage">
          <edgelabel>m_has_fine_bndry</edgelabel>
        </childnode>
      </node>
      <node id="2056">
        <label>std::vector&lt; Array&lt; int, AMREX_SPACEDIM &gt;, std::allocator&lt; Array&lt; int, AMREX_SPACEDIM &gt; &gt; &gt;</label>
      </node>
      <node id="2018">
        <label>amrex::FabArray&lt; amrex::BaseFab&lt; Int &gt; &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="2019" relation="public-inheritance">
        </childnode>
        <childnode refid="2029" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
        </childnode>
        <childnode refid="2031" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="2016" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="2033" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="2024" relation="usage">
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="2036" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="2038" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="2039" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="2041" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="2043" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="2070">
        <label>amrex::LayoutData&lt; Int &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="2019" relation="public-inheritance">
        </childnode>
        <childnode refid="2071" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="2048">
        <label>amrex::Vector&lt; amrex::Vector&lt; BoxArray &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2049" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2046">
        <label>amrex::Vector&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::FabFactory&lt; amrex::FArrayBox &gt; &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2047" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2051">
        <label>std::vector&lt; amrex::Vector&lt; amrex::Geometry &gt;, std::allocator&lt; amrex::Vector&lt; amrex::Geometry &gt; &gt; &gt;</label>
      </node>
      <node id="2038">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="2076">
        <label>amrex::FabFactory&lt; amrex::FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="2050">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::Geometry &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2051" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2069">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::LayoutData&lt; int &gt; &gt;, std::allocator&lt; std::unique_ptr&lt; amrex::LayoutData&lt; int &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="2052">
        <label>amrex::RealVect</label>
        <link refid="classamrex_1_1RealVect"/>
        <childnode refid="2052" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
        <childnode refid="2013" relation="usage">
          <edgelabel>vect</edgelabel>
        </childnode>
      </node>
      <node id="2075">
        <label>std::vector&lt; amrex::Vector&lt; Int &gt;, std::allocator&lt; amrex::Vector&lt; Int &gt; &gt; &gt;</label>
      </node>
      <node id="2031">
        <label>amrex::Vector&lt; char *&gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2032" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2057">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::DistributionMapping &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2058" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2061">
        <label>amrex::Vector&lt; amrex::IntVect &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2062" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2042">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
      </node>
      <node id="2025">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="2078">
        <label>amrex::FabArray&lt; IArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="2019" relation="public-inheritance">
        </childnode>
        <childnode refid="2029" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
        </childnode>
        <childnode refid="2031" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="2016" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="2033" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="2024" relation="usage">
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="2036" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="2038" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="2039" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="2041" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="2043" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="2045">
        <label>amrex::MLLinOp</label>
        <link refid="classamrex_1_1MLLinOp"/>
        <childnode refid="2046" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="2048" relation="usage">
          <edgelabel>m_grids</edgelabel>
        </childnode>
        <childnode refid="2050" relation="usage">
          <edgelabel>m_geom</edgelabel>
        </childnode>
        <childnode refid="2052" relation="usage">
          <edgelabel>m_coarse_bc_loc</edgelabel>
        </childnode>
        <childnode refid="2016" relation="usage">
          <edgelabel>m_ixtype</edgelabel>
        </childnode>
        <childnode refid="2053" relation="usage">
          <edgelabel>m_coarse_data_for_bc</edgelabel>
        </childnode>
        <childnode refid="2024" relation="usage">
          <edgelabel>m_domain_covered</edgelabel>
          <edgelabel>m_amr_ref_ratio</edgelabel>
          <edgelabel>m_num_mg_levels</edgelabel>
        </childnode>
        <childnode refid="2055" relation="usage">
          <edgelabel>m_hi_inhomog_neumann</edgelabel>
          <edgelabel>m_lo_inhomog_neumann</edgelabel>
        </childnode>
        <childnode refid="2057" relation="usage">
          <edgelabel>m_dmap</edgelabel>
        </childnode>
        <childnode refid="2059" relation="usage">
          <edgelabel>m_hibc</edgelabel>
          <edgelabel>m_lobc</edgelabel>
        </childnode>
        <childnode refid="2061" relation="usage">
          <edgelabel>mg_coarsen_ratio_vec</edgelabel>
        </childnode>
        <childnode refid="2045" relation="usage">
          <edgelabel>m_parent</edgelabel>
        </childnode>
        <childnode refid="2063" relation="usage">
          <edgelabel>info</edgelabel>
        </childnode>
      </node>
      <node id="2068">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::LayoutData&lt; int &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2069" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2014">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="2013" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="2015">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="2016" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="2017" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="2064">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2065" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2059">
        <label>amrex::Vector&lt; Array&lt; BCType, AMREX_SPACEDIM &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2060" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2027">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="2028" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="2039">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2040" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2063">
        <label>amrex::LPInfo</label>
        <link refid="structamrex_1_1LPInfo"/>
      </node>
      <node id="2012">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="2013" relation="usage">
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
          <edgelabel>dx</edgelabel>
        </childnode>
      </node>
      <node id="2017">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="2071">
        <label>amrex::Vector&lt; Int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2072" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2028">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="2024" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="2036">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2037" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2055">
        <label>amrex::Vector&lt; Array&lt; int, AMREX_SPACEDIM &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2056" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2066">
        <label>amrex::Vector&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2067" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2022">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
      </node>
      <node id="2026">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="2027" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="2062">
        <label>std::vector&lt; amrex::IntVect, std::allocator&lt; amrex::IntVect &gt; &gt;</label>
      </node>
      <node id="2053">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="2054" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2065">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt;, std::allocator&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt; &gt;</label>
      </node>
      <node id="2011">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="2012" relation="public-inheritance">
        </childnode>
        <childnode refid="2014" relation="usage">
          <edgelabel>roundoff_domain</edgelabel>
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="2015" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="2054">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="2019" relation="public-inheritance">
        </childnode>
        <childnode refid="2029" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
        </childnode>
        <childnode refid="2031" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="2016" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="2033" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="2024" relation="usage">
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="2036" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="2038" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="2039" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="2041" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="2043" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="2029">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="2030" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2072">
        <label>std::vector&lt; Int, std::allocator&lt; Int &gt; &gt;</label>
      </node>
      <node id="2019">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="2020" relation="usage">
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
        </childnode>
        <childnode refid="2022" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="2016" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>mfghostiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="2023" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="2024" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="2026" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
      </node>
      <node id="2067">
        <label>std::vector&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt;, std::allocator&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="2030">
        <label>std::vector&lt; std::size_t, std::allocator&lt; std::size_t &gt; &gt;</label>
      </node>
      <node id="2049">
        <label>std::vector&lt; amrex::Vector&lt; BoxArray &gt;, std::allocator&lt; amrex::Vector&lt; BoxArray &gt; &gt; &gt;</label>
      </node>
      <node id="2058">
        <label>std::vector&lt; amrex::Vector&lt; amrex::DistributionMapping &gt;, std::allocator&lt; amrex::Vector&lt; amrex::DistributionMapping &gt; &gt; &gt;</label>
      </node>
      <node id="2047">
        <label>std::vector&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::FabFactory&lt; amrex::FArrayBox &gt; &gt; &gt;, std::allocator&lt; amrex::Vector&lt; std::unique_ptr&lt; amrex::FabFactory&lt; amrex::FArrayBox &gt; &gt; &gt; &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" line="22" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.H" bodystart="21" bodyend="69"/>
    <listofallmembers>
      <member refid="classamrex_1_1HypreNodeLap_1a84f23ccfc81e4068d4b59ff219dfdd17" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>A</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a8bf1aff14a4fff3cc12887bac7c96620" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>b</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1adf57e9f1fd02ffaff4b31a0d22a1a525" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>comm</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1ae0af71a571c9aa2ae19cac29ee7deb4a" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>dirichlet_mask</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a9c2f378636a2b4fbc0fba818719bace7" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>dmap</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a380f7d1b289a6802248ece2786b86565" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>factory</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1aa6c506e9171db3a9db1b1c32fc2b2bbc" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>fill_node_id</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a3ec12508ffa505780af64ebc27188233" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>geom</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a58381f405245d3ca27aed91c4197bee6" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>getSolution</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a8454e30c3a460081f89df8154babd952" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>grids</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a9edf6830b04060921e5fcd8c3b95ab79" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>hypre_ij</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1ad99767a5bee39ac11fc1c49b01beaf26" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>HypreNodeLap</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a55bfff3929ed41ec8c5f707f22cc392d" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>Int</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1ad7cbb6433d195bb9fc6aaf2f7b92ff76" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>linop</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a9a4132962fea0f9ec7e1566e1aa6254e" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>loadVectors</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1ab571c163213ebca30687e13923b90fac" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>nnodes_grid</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a9a1b45b94bfcf850f38810f79ceb5041" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>node_id</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a731b9abb68433c5b5750155482f5c768" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>node_id_vec</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a82145850435b74caa01b3322229a059b" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>options_namespace</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1ac8924539f89bd4ae28eb0df416235f4e" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>owner_mask</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a9f80d1c81a4fc95cd42b3741dbccbacd" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>setHypreOptionsNamespace</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a8ab7840824ff1afad30c2adc35584bd3" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>solve</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a0ff36d67bd4b146e140a63de29c435e7" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>tmpsoln</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1a46cd3d0729be8490f8ae8840c1988d38" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>verbose</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1af32f270916e5ac3077cad9d15792033e" prot="private" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>x</name></member>
      <member refid="classamrex_1_1HypreNodeLap_1ac4fd7635fb3f2ef04617ec9a1e17f0ac" prot="public" virt="non-virtual"><scope>amrex::HypreNodeLap</scope><name>~HypreNodeLap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
