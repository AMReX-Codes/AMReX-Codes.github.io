<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classamrex_1_1Hypre" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>amrex::Hypre</compoundname>
    <derivedcompoundref refid="classamrex_1_1HypreABecLap" prot="public" virt="non-virtual">amrex::HypreABecLap</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1HypreABecLap2" prot="public" virt="non-virtual">amrex::HypreABecLap2</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1HypreABecLap3" prot="public" virt="non-virtual">amrex::HypreABecLap3</derivedcompoundref>
    <includes refid="AMReX__Hypre_8H" local="no">AMReX_Hypre.H</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="classamrex_1_1Hypre_1af08fbb42b4509a32e7f20a6101dfd13f" prot="public" static="no" strong="yes">
        <type>int</type>
        <name>Interface</name>
        <qualifiedname>amrex::Hypre::Interface</qualifiedname>
        <enumvalue id="classamrex_1_1Hypre_1af08fbb42b4509a32e7f20a6101dfd13fa3c1530a48aea0feaf4956bca2698ebd6" prot="public">
          <name>structed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classamrex_1_1Hypre_1af08fbb42b4509a32e7f20a6101dfd13faf9c3193ceb5f05f22b939a6ddbf628c5" prot="public">
          <name>semi_structed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classamrex_1_1Hypre_1af08fbb42b4509a32e7f20a6101dfd13fa7bed657a775c37c2570786d0cbeefd88" prot="public">
          <name>ij</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="21" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="21" bodyend="21"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1Hypre_1abff4c8fa7e9790d9408099ffa9c57934" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr HYPRE_Int</type>
        <definition>constexpr HYPRE_Int amrex::Hypre::regular_stencil_size</definition>
        <argsstring></argsstring>
        <name>regular_stencil_size</name>
        <qualifiedname>amrex::Hypre::regular_stencil_size</qualifiedname>
        <initializer>= 2*3 + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="71" column="32" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a49181827cb7d3a5b52f02540d7e82121" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr HYPRE_Int</type>
        <definition>constexpr HYPRE_Int amrex::Hypre::eb_stencil_size</definition>
        <argsstring></argsstring>
        <name>eb_stencil_size</name>
        <qualifiedname>amrex::Hypre::eb_stencil_size</qualifiedname>
        <initializer>=  3   *3   *3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="72" column="32" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="72" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a55f4b29b2291555432bbc82aa86c0931" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1mpidatatypes_1a30fa228956d7a68a0c604ae5f2163db9" kindref="member">MPI_Comm</ref></type>
        <definition>MPI_Comm amrex::Hypre::comm</definition>
        <argsstring></argsstring>
        <name>comm</name>
        <qualifiedname>amrex::Hypre::comm</qualifiedname>
        <initializer>= <ref refid="namespaceamrex_1_1mpidatatypes_1aa2364a3fe51b2fa0064be83fa2994608" kindref="member">MPI_COMM_NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="76" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a97c4612c2a7f58b47c36ec710cb1b0f6" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::Hypre::geom</definition>
        <argsstring></argsstring>
        <name>geom</name>
        <qualifiedname>amrex::Hypre::geom</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="77" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a299be2dee6b5a28af170606d9b19615b" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::Hypre::verbose</definition>
        <argsstring></argsstring>
        <name>verbose</name>
        <qualifiedname>amrex::Hypre::verbose</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="79" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1af13e0db2e188907cf98e9b933a919cd0" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::Hypre::old_default</definition>
        <argsstring></argsstring>
        <name>old_default</name>
        <qualifiedname>amrex::Hypre::old_default</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="80" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1aa9e67a6e299266afaff8157d33dcfbec" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::Hypre::relax_type</definition>
        <argsstring></argsstring>
        <name>relax_type</name>
        <qualifiedname>amrex::Hypre::relax_type</qualifiedname>
        <initializer>= 6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="81" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1aa602c05ea8f16fa5aa95d79b372cffa8" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::Hypre::relax_order</definition>
        <argsstring></argsstring>
        <name>relax_order</name>
        <qualifiedname>amrex::Hypre::relax_order</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="82" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1ab49bedd6e91b0cbfe206bc3ab17cdbc1" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::Hypre::num_sweeps</definition>
        <argsstring></argsstring>
        <name>num_sweeps</name>
        <qualifiedname>amrex::Hypre::num_sweeps</qualifiedname>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="83" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1acbc3e949322292ed5e578e8a2bd87bb3" prot="protected" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::Hypre::strong_threshold</definition>
        <argsstring></argsstring>
        <name>strong_threshold</name>
        <qualifiedname>amrex::Hypre::strong_threshold</qualifiedname>
        <initializer>= Real(0.25)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="84" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a9e2c8bb6ef487b2efe4482bd682b68ce" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string amrex::Hypre::options_namespace</definition>
        <argsstring></argsstring>
        <name>options_namespace</name>
        <qualifiedname>amrex::Hypre::options_namespace</qualifiedname>
        <initializer>{&quot;hypre&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="86" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a1ab65d249a3254eb6540bedcc9ebf285" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::Hypre::acoefs</definition>
        <argsstring></argsstring>
        <name>acoefs</name>
        <qualifiedname>amrex::Hypre::acoefs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="88" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a12ddb9a9e7e17a40b6f8b9cd2126384d" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>, 3 &gt;</type>
        <definition>Array&lt;MultiFab,3&gt; amrex::Hypre::bcoefs</definition>
        <argsstring></argsstring>
        <name>bcoefs</name>
        <qualifiedname>amrex::Hypre::bcoefs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="89" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a5cc787cbd77e527e4c58e58904305531" prot="protected" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::Hypre::scalar_a</definition>
        <argsstring></argsstring>
        <name>scalar_a</name>
        <qualifiedname>amrex::Hypre::scalar_a</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="90" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a8cb2fde2e6ce7be52d40bc7ee19f7ae3" prot="protected" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::Hypre::scalar_b</definition>
        <argsstring></argsstring>
        <name>scalar_b</name>
        <qualifiedname>amrex::Hypre::scalar_b</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="90" column="19" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a6eb22e62b62ea0d2bcfef92f18df5304" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::Hypre::diaginv</definition>
        <argsstring></argsstring>
        <name>diaginv</name>
        <qualifiedname>amrex::Hypre::diaginv</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="92" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a88d3049d660b7e0a5fca3002d5b78916" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabFactory" kindref="compound">FabFactory</ref>&lt; <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &gt; const  *</type>
        <definition>FabFactory&lt;FArrayBox&gt; const* amrex::Hypre::m_factory</definition>
        <argsstring></argsstring>
        <name>m_factory</name>
        <qualifiedname>amrex::Hypre::m_factory</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="94" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a64e1c781a5d446a7a7cc3ef1231c2218" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1a9f6fb58eb396dd06df45ba7787548b32" kindref="member">BndryData</ref> const  *</type>
        <definition>BndryData const* amrex::Hypre::m_bndry</definition>
        <argsstring></argsstring>
        <name>m_bndry</name>
        <qualifiedname>amrex::Hypre::m_bndry</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="95" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a7b04bbe6b54d748e48516df1695bc139" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::Hypre::m_maxorder</definition>
        <argsstring></argsstring>
        <name>m_maxorder</name>
        <qualifiedname>amrex::Hypre::m_maxorder</qualifiedname>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="96" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a0a7daa97b3caa6216418e78ddf2835ec" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::Hypre::is_matrix_singular</definition>
        <argsstring></argsstring>
        <name>is_matrix_singular</name>
        <qualifiedname>amrex::Hypre::is_matrix_singular</qualifiedname>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="98" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="98" bodyend="98"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1Hypre_1afd2d6c32022a99d96f73485d03272ec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Hypre::Hypre</definition>
        <argsstring>(const BoxArray &amp;grids, const DistributionMapping &amp;dmap, const Geometry &amp;geom, MPI_Comm comm_)</argsstring>
        <name>Hypre</name>
        <qualifiedname>amrex::Hypre::Hypre</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>grids</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1_1mpidatatypes_1a30fa228956d7a68a0c604ae5f2163db9" kindref="member">MPI_Comm</ref></type>
          <declname>comm_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="23" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.cpp" bodystart="27" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1af5b05a1271484c6bd34ebd3fbbfc85ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>amrex::Hypre::~Hypre</definition>
        <argsstring>()</argsstring>
        <name>~Hypre</name>
        <qualifiedname>amrex::Hypre::~Hypre</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="28" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1a383aec5fd079382143f14a1602a6f2e3" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::Hypre::Hypre</definition>
        <argsstring>(Hypre &amp;&amp;) noexcept=default</argsstring>
        <name>Hypre</name>
        <qualifiedname>amrex::Hypre::Hypre</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1Hypre" kindref="compound">Hypre</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="29" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1aae61b15a16a7846d73aaf5d2af774cf4" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1Hypre" kindref="compound">Hypre</ref> &amp;</type>
        <definition>Hypre &amp; amrex::Hypre::operator=</definition>
        <argsstring>(Hypre &amp;&amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::Hypre::operator=</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1Hypre" kindref="compound">Hypre</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="30" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1aa390f243b090b29bc817812412daf278" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Hypre::Hypre</definition>
        <argsstring>(Hypre const &amp;)=delete</argsstring>
        <name>Hypre</name>
        <qualifiedname>amrex::Hypre::Hypre</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1Hypre" kindref="compound">Hypre</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="32" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1a60262e7d5c400163944cef707e63663a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1Hypre" kindref="compound">Hypre</ref> &amp;</type>
        <definition>Hypre &amp; amrex::Hypre::operator=</definition>
        <argsstring>(Hypre const &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::Hypre::operator=</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1Hypre" kindref="compound">Hypre</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="33" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1ac497cc99508dff6311d584d7e0636ce8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Hypre::setScalars</definition>
        <argsstring>(Real sa, Real sb)</argsstring>
        <name>setScalars</name>
        <qualifiedname>amrex::Hypre::setScalars</qualifiedname>
        <param>
          <type>Real</type>
          <declname>sa</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>sb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="35" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.cpp" bodystart="65" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1ade6e731e7392a70b13f66c6656631cdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Hypre::setACoeffs</definition>
        <argsstring>(const MultiFab &amp;alpha)</argsstring>
        <name>setACoeffs</name>
        <qualifiedname>amrex::Hypre::setACoeffs</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="36" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.cpp" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1a12895e4a022dab7b6f4e2146ba0c5bc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Hypre::setBCoeffs</definition>
        <argsstring>(const Array&lt; const MultiFab *, 3 &gt; &amp;beta)</argsstring>
        <name>setBCoeffs</name>
        <qualifiedname>amrex::Hypre::setBCoeffs</qualifiedname>
        <param>
          <type>const <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *, 3 &gt; &amp;</type>
          <declname>beta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="37" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.cpp" bodystart="78" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1a1aa001ef00cb82f298c761cbf61de2e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Hypre::setVerbose</definition>
        <argsstring>(int _verbose)</argsstring>
        <name>setVerbose</name>
        <qualifiedname>amrex::Hypre::setVerbose</qualifiedname>
        <param>
          <type>int</type>
          <declname>_verbose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="38" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.cpp" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1ace6b42d6b4d28b5aeb6d0ae4ced033f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Hypre::setIsMatrixSingular</definition>
        <argsstring>(bool flag)</argsstring>
        <name>setIsMatrixSingular</name>
        <qualifiedname>amrex::Hypre::setIsMatrixSingular</qualifiedname>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="39" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1accd025c6669f7d68aa001f5c4d1582ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void amrex::Hypre::solve</definition>
        <argsstring>(MultiFab &amp;soln, const MultiFab &amp;rhs, Real rel_tol, Real abs_tol, int max_iter, const BndryData &amp;bndry, int max_bndry_order)=0</argsstring>
        <name>solve</name>
        <qualifiedname>amrex::Hypre::solve</qualifiedname>
        <reimplementedby refid="classamrex_1_1HypreABecLap3_1a8aab0e1b05eed8423e2b70979ff703d8">solve</reimplementedby>
        <reimplementedby refid="classamrex_1_1HypreABecLap_1a95644483c25527e50d0431547e0fe666">solve</reimplementedby>
        <reimplementedby refid="classamrex_1_1HypreABecLap2_1a5d2e1e80ccc5910d5b18be89b43ac98c">solve</reimplementedby>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>rel_tol</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>abs_tol</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_iter</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a9f6fb58eb396dd06df45ba7787548b32" kindref="member">BndryData</ref> &amp;</type>
          <declname>bndry</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_bndry_order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="40" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1a69bd65a7f09331727ec3606700f744b7" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Hypre::setHypreOptionsNamespace</definition>
        <argsstring>(const std::string &amp;ns) noexcept</argsstring>
        <name>setHypreOptionsNamespace</name>
        <qualifiedname>amrex::Hypre::setHypreOptionsNamespace</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>ns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="63" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="63" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1a176164a0be65a008953835f054ed05bb" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Hypre::setHypreOldDefault</definition>
        <argsstring>(bool l) noexcept</argsstring>
        <name>setHypreOldDefault</name>
        <qualifiedname>amrex::Hypre::setHypreOldDefault</qualifiedname>
        <param>
          <type>bool</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="65" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1a405012151d7a1605c76dc277321f8413" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Hypre::setHypreRelaxType</definition>
        <argsstring>(int n) noexcept</argsstring>
        <name>setHypreRelaxType</name>
        <qualifiedname>amrex::Hypre::setHypreRelaxType</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="66" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1ae6d9ce8d191fe74154cb322a83647c65" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Hypre::setHypreRelaxOrder</definition>
        <argsstring>(int n) noexcept</argsstring>
        <name>setHypreRelaxOrder</name>
        <qualifiedname>amrex::Hypre::setHypreRelaxOrder</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="67" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1aa3e3c7cdd1399a6569ead6da002cefcc" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Hypre::setHypreNumSweeps</definition>
        <argsstring>(int n) noexcept</argsstring>
        <name>setHypreNumSweeps</name>
        <qualifiedname>amrex::Hypre::setHypreNumSweeps</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="68" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1a3709ca6588e8a170458aca0425335169" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Hypre::setHypreStrongThreshold</definition>
        <argsstring>(Real t) noexcept</argsstring>
        <name>setHypreStrongThreshold</name>
        <qualifiedname>amrex::Hypre::setHypreStrongThreshold</qualifiedname>
        <param>
          <type>Real</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="69" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="69" bodyend="69"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1Hypre_1a4120c58bf9c835d8345257e836e276b5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HYPRE_Int</type>
        <definition>static HYPRE_Int amrex::Hypre::ispow2</definition>
        <argsstring>(HYPRE_Int i)</argsstring>
        <name>ispow2</name>
        <qualifiedname>amrex::Hypre::ispow2</qualifiedname>
        <param>
          <type>HYPRE_Int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="43" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1aa676d5396d5e8dce5f4864d074ebd412" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; HYPRE_Int, 3 &gt;</type>
        <definition>static Array&lt; HYPRE_Int, 3 &gt; amrex::Hypre::loV</definition>
        <argsstring>(const Box &amp;b)</argsstring>
        <name>loV</name>
        <qualifiedname>amrex::Hypre::loV</qualifiedname>
        <param>
          <type>const <ref refid="namespaceamrex_1a5e922fb76ff2eb645844783ad65d1490" kindref="member">Box</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="48" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="48" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1a0033300a11c97c146ef60d2aba2f2bfd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; HYPRE_Int, 3 &gt;</type>
        <definition>static Array&lt; HYPRE_Int, 3 &gt; amrex::Hypre::hiV</definition>
        <argsstring>(const Box &amp;b)</argsstring>
        <name>hiV</name>
        <qualifiedname>amrex::Hypre::hiV</qualifiedname>
        <param>
          <type>const <ref refid="namespaceamrex_1a5e922fb76ff2eb645844783ad65d1490" kindref="member">Box</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="55" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="55" bodyend="60"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>amrex::Hypre</label>
        <link refid="classamrex_1_1Hypre"/>
      </node>
      <node id="2">
        <label>amrex::HypreABecLap</label>
        <link refid="classamrex_1_1HypreABecLap"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>amrex::HypreABecLap2</label>
        <link refid="classamrex_1_1HypreABecLap2"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>amrex::HypreABecLap3</label>
        <link refid="classamrex_1_1HypreABecLap3"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="73">
        <label>amrex::Array4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1Array4"/>
        <childnode refid="74" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="76">
        <label>amrex::Array4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1Array4"/>
        <childnode refid="74" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="83">
        <label>amrex::Array4CopyTag&lt; value_type &gt;</label>
        <link refid="structamrex_1_1Array4CopyTag"/>
        <childnode refid="73" relation="usage">
          <edgelabel>dfab</edgelabel>
        </childnode>
        <childnode refid="76" relation="usage">
          <edgelabel>sfab</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>dbox</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>offset</edgelabel>
        </childnode>
      </node>
      <node id="70">
        <label>amrex::BaseFab&lt; Real &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="58" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>amrex::BoxND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1BoxND"/>
      </node>
      <node id="87">
        <label>amrex::CommRecvBufTag&lt; value_type &gt;</label>
        <link refid="structamrex_1_1CommRecvBufTag"/>
        <childnode refid="73" relation="usage">
          <edgelabel>dfab</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>bx</edgelabel>
        </childnode>
      </node>
      <node id="91">
        <label>amrex::CommSendBufTag&lt; value_type &gt;</label>
        <link refid="structamrex_1_1CommSendBufTag"/>
        <childnode refid="76" relation="usage">
          <edgelabel>sfab</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>bx</edgelabel>
        </childnode>
      </node>
      <node id="93">
        <label>amrex::FBData&lt; FArrayBox &gt;</label>
        <link refid="structamrex_1_1FBData"/>
        <childnode refid="94" relation="usage">
          <edgelabel>fb</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="100" relation="usage">
          <edgelabel>recv_data</edgelabel>
          <edgelabel>send_data</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_stat</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="58" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="66" relation="usage">
          <edgelabel>m_single_chunk_arena</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="72" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
        <childnode refid="75" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="79" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="80" relation="usage">
          <edgelabel>m_fb_local_copy_handler</edgelabel>
        </childnode>
        <childnode refid="84" relation="usage">
          <edgelabel>m_recv_copy_handler</edgelabel>
        </childnode>
        <childnode refid="88" relation="usage">
          <edgelabel>m_send_copy_handler</edgelabel>
        </childnode>
        <childnode refid="92" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="108" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="111" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
      </node>
      <node id="57">
        <label>amrex::FabFactory&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="112">
        <label>amrex::FabFactory&lt; amrex::FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="5">
        <label>amrex::GpuArray&lt; ParticleReal, 3 &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="25">
        <label>amrex::IndexTypeND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1IndexTypeND"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>amrex::IntVectND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="14">
        <label>K</label>
      </node>
      <node id="118">
        <label>amrex::LayoutData&lt; RealTuple &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="119" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="115">
        <label>amrex::LayoutData&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="116" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="72">
        <label>amrex::MultiArray4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
        <childnode refid="73" relation="usage">
          <edgelabel>dp</edgelabel>
          <edgelabel>hp</edgelabel>
        </childnode>
      </node>
      <node id="75">
        <label>amrex::MultiArray4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
        <childnode refid="76" relation="usage">
          <edgelabel>dp</edgelabel>
          <edgelabel>hp</edgelabel>
        </childnode>
      </node>
      <node id="109">
        <label>amrex::PCData&lt; FArrayBox &gt;</label>
        <link refid="structamrex_1_1PCData"/>
        <childnode refid="110" relation="usage">
          <edgelabel>cpc</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>src</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="100" relation="usage">
          <edgelabel>recv_data</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>T</label>
      </node>
      <node id="82">
        <label>amrex::TagVector&lt; amrex::Array4CopyTag&lt; value_type &gt; &gt;</label>
        <link refid="structamrex_1_1TagVector"/>
        <childnode refid="83" relation="usage">
          <edgelabel>d_tags</edgelabel>
        </childnode>
      </node>
      <node id="86">
        <label>amrex::TagVector&lt; amrex::CommRecvBufTag&lt; value_type &gt; &gt;</label>
        <link refid="structamrex_1_1TagVector"/>
        <childnode refid="87" relation="usage">
          <edgelabel>d_tags</edgelabel>
        </childnode>
      </node>
      <node id="90">
        <label>amrex::TagVector&lt; amrex::CommSendBufTag&lt; value_type &gt; &gt;</label>
        <link refid="structamrex_1_1TagVector"/>
        <childnode refid="91" relation="usage">
          <edgelabel>d_tags</edgelabel>
        </childnode>
      </node>
      <node id="104">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="105" relation="public-inheritance">
        </childnode>
      </node>
      <node id="119">
        <label>amrex::Vector&lt; RealTuple &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="120" relation="public-inheritance">
        </childnode>
      </node>
      <node id="34">
        <label>amrex::Vector&lt; amrex::BoxND &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="121">
        <label>amrex::Vector&lt; amrex::MultiMask &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="122" relation="public-inheritance">
        </childnode>
      </node>
      <node id="116">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="117" relation="public-inheritance">
        </childnode>
      </node>
      <node id="106">
        <label>amrex::Vector&lt; amrex::mpidatatypes::MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="107" relation="public-inheritance">
        </childnode>
      </node>
      <node id="100">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="101" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
      </node>
      <node id="102">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="103" relation="public-inheritance">
        </childnode>
      </node>
      <node id="77">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="78" relation="public-inheritance">
        </childnode>
      </node>
      <node id="59">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="60" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
        <childnode refid="61" relation="usage">
          <edgelabel>m_profiler</edgelabel>
        </childnode>
      </node>
      <node id="61">
        <label>amrex::Arena::ArenaProfiler</label>
        <link refid="structamrex_1_1Arena_1_1ArenaProfiler"/>
        <childnode refid="62" relation="usage">
          <edgelabel>m_arena_profiler_mutex</edgelabel>
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>m_profiling_stats</edgelabel>
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>m_currently_allocated</edgelabel>
        </childnode>
      </node>
      <node id="60">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="33">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="34" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="31" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="28" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="25" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="25" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="21">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="22" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="23" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
      </node>
      <node id="113">
        <label>amrex::BndryDataT&lt; MF &gt;</label>
        <link refid="classamrex_1_1BndryDataT"/>
        <childnode refid="114" relation="public-inheritance">
        </childnode>
        <childnode refid="115" relation="usage">
          <edgelabel>bcond</edgelabel>
        </childnode>
        <childnode refid="118" relation="usage">
          <edgelabel>bcloc</edgelabel>
        </childnode>
        <childnode refid="121" relation="usage">
          <edgelabel>masks</edgelabel>
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
      </node>
      <node id="114">
        <label>amrex::BndryRegisterT&lt; MF &gt;</label>
        <link refid="classamrex_1_1BndryRegisterT"/>
        <childnode refid="20" relation="usage">
          <edgelabel>grids</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="21" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="33" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="52">
        <label>amrex::BoxIndexerND&lt; dim &gt;</label>
        <link refid="structamrex_1_1BoxIndexerND"/>
        <childnode refid="53" relation="usage">
          <edgelabel>fdm</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>amrex::BoxList</label>
        <link refid="classamrex_1_1BoxList"/>
        <childnode refid="34" relation="usage">
          <edgelabel>m_lbox</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>amrex::CellIndexEnum</label>
        <link refid="structamrex_1_1CellIndexEnum"/>
      </node>
      <node id="3">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
      </node>
      <node id="58">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="59" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="74">
        <label>amrex::Dim3</label>
        <link refid="structamrex_1_1Dim3"/>
      </node>
      <node id="40">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
        <childnode refid="41" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
      </node>
      <node id="42">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="43" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>m_ownership</edgelabel>
        </childnode>
      </node>
      <node id="48">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="42" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="71">
        <label>amrex::FABio</label>
        <link refid="classamrex_1_1FABio"/>
      </node>
      <node id="69">
        <label>amrex::FArrayBox</label>
        <link refid="classamrex_1_1FArrayBox"/>
        <childnode refid="70" relation="public-inheritance">
        </childnode>
        <childnode refid="71" relation="usage">
          <edgelabel>fabio</edgelabel>
        </childnode>
      </node>
      <node id="79">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="11">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="12" relation="usage">
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>m_TheCPCache</edgelabel>
          <edgelabel>m_TheCrseFineCache</edgelabel>
          <edgelabel>m_TheFBCache</edgelabel>
          <edgelabel>m_TheFillPatchCache</edgelabel>
          <edgelabel>m_ThePolarBCache</edgelabel>
          <edgelabel>m_TheRB180Cache</edgelabel>
          <edgelabel>m_TheRB90Cache</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>m_mem_usage</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>m_region_tag</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>ownership</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>m_TheTileArrayCache</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>m_TheParForCache</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>m_BD_count</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
      </node>
      <node id="46">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="47" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="110">
        <label>amrex::FabArrayBase::CPC</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CPC"/>
        <childnode refid="95" relation="public-inheritance">
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>m_dstbdk</edgelabel>
          <edgelabel>m_srcbdk</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>m_dstng</edgelabel>
          <edgelabel>m_offset</edgelabel>
          <edgelabel>m_srcng</edgelabel>
        </childnode>
        <childnode refid="99" relation="usage">
          <edgelabel>m_period</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>m_dstba</edgelabel>
          <edgelabel>m_srcba</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="7" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="95">
        <label>amrex::FabArrayBase::CommMetaData</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CommMetaData"/>
        <childnode refid="96" relation="usage">
          <edgelabel>m_LocTags</edgelabel>
        </childnode>
        <childnode refid="98" relation="usage">
          <edgelabel>m_RcvTags</edgelabel>
          <edgelabel>m_SndTags</edgelabel>
        </childnode>
      </node>
      <node id="94">
        <label>amrex::FabArrayBase::FB</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FB"/>
        <childnode refid="95" relation="public-inheritance">
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_ngrow</edgelabel>
        </childnode>
        <childnode refid="99" relation="usage">
          <edgelabel>m_period</edgelabel>
        </childnode>
      </node>
      <node id="55">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="51">
        <label>amrex::FabArrayBase::ParForInfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1ParForInfo"/>
        <childnode refid="21" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>m_ng</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>m_boxes</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>amrex::FabArrayBase::meminfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1meminfo"/>
      </node>
      <node id="2">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>roundoff_hi</edgelabel>
          <edgelabel>roundoff_lo</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::Hypre</label>
        <link refid="classamrex_1_1Hypre"/>
        <childnode refid="2" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>options_namespace</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>acoefs</edgelabel>
          <edgelabel>diaginv</edgelabel>
        </childnode>
        <childnode refid="112" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="113" relation="usage">
          <edgelabel>m_bndry</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>amrex::IntVectND&lt; dim &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="53">
        <label>amrex::Math::FastDivmodU64</label>
        <link refid="structamrex_1_1Math_1_1FastDivmodU64"/>
      </node>
      <node id="64">
        <label>amrex::MemStat</label>
        <link refid="structamrex_1_1MemStat"/>
      </node>
      <node id="9">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="99">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="28" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
      </node>
      <node id="67">
        <label>amrex::detail::SingleChunkArena</label>
        <link refid="classamrex_1_1detail_1_1SingleChunkArena"/>
        <childnode refid="59" relation="public-inheritance">
        </childnode>
        <childnode refid="58" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
      </node>
      <node id="84">
        <label>std::map&lt; RecvSendCopyHandlerKey, std::unique_ptr&lt; amrex::TagVector&lt; amrex::CommRecvBufTag&lt; value_type &gt; &gt; &gt; &gt;</label>
        <childnode refid="85" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="88">
        <label>std::map&lt; RecvSendCopyHandlerKey, std::unique_ptr&lt; amrex::TagVector&lt; amrex::CommSendBufTag&lt; value_type &gt; &gt; &gt; &gt;</label>
        <childnode refid="89" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="54">
        <label>std::map&lt; amrex::FabArrayBase::BDKey, int &gt;</label>
        <childnode refid="46" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>std::map&lt; std::string, amrex::FabArrayBase::meminfo &gt;</label>
        <childnode refid="7" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="63">
        <label>std::map&lt; std::string, amrex::MemStat &gt;</label>
        <childnode refid="7" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="64" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="80">
        <label>std::map&lt; std::uint64_t, std::unique_ptr&lt; amrex::TagVector&lt; amrex::Array4CopyTag&lt; value_type &gt; &gt; &gt; &gt;</label>
        <childnode refid="81" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="50">
        <label>std::multimap&lt; amrex::FabArrayBase::BDKey, amrex::FabArrayBase::ParForInfo * &gt;</label>
        <childnode refid="46" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
        <childnode refid="33" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
        <childnode refid="39" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>std::shared_ptr&lt; amrex::DistributionMapping::Ref &gt;</label>
        <childnode refid="42" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="49">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>std::multimap&lt; K, T &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="62">
        <label>std::mutex</label>
      </node>
      <node id="7">
        <label>std::string</label>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="97">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="105">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="120">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="122">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="117">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="107">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="101">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="103">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="78">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="15" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="96">
        <label>std::unique_ptr&lt; CopyComTagsContainer &gt;</label>
        <childnode refid="97" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="98">
        <label>std::unique_ptr&lt; MapOfCopyComTagContainers &gt;</label>
        <childnode refid="49" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="92">
        <label>std::unique_ptr&lt; amrex::FBData&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="93" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="111">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="10" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="56">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="57" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="108">
        <label>std::unique_ptr&lt; amrex::PCData&lt; FArrayBox &gt; &gt;</label>
        <childnode refid="109" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="81">
        <label>std::unique_ptr&lt; amrex::TagVector&lt; amrex::Array4CopyTag&lt; value_type &gt; &gt; &gt;</label>
        <childnode refid="82" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="85">
        <label>std::unique_ptr&lt; amrex::TagVector&lt; amrex::CommRecvBufTag&lt; value_type &gt; &gt; &gt;</label>
        <childnode refid="86" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="89">
        <label>std::unique_ptr&lt; amrex::TagVector&lt; amrex::CommSendBufTag&lt; value_type &gt; &gt; &gt;</label>
        <childnode refid="90" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="66">
        <label>std::unique_ptr&lt; amrex::detail::SingleChunkArena &gt;</label>
        <childnode refid="67" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="12" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="65">
        <label>std::unordered_map&lt; void *, std::pair&lt; amrex::MemStat *, std::size_t &gt; &gt;</label>
      </node>
      <node id="68">
        <label>std::vector&lt; FArrayBox * &gt;</label>
        <childnode refid="69" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="45">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="37">
        <label>std::vector&lt; int &gt;</label>
      </node>
      <node id="19">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="7" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="17" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="18" bodyend="99"/>
    <listofallmembers>
      <member refid="classamrex_1_1Hypre_1a1ab65d249a3254eb6540bedcc9ebf285" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>acoefs</name></member>
      <member refid="classamrex_1_1Hypre_1a12ddb9a9e7e17a40b6f8b9cd2126384d" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>bcoefs</name></member>
      <member refid="classamrex_1_1Hypre_1a55f4b29b2291555432bbc82aa86c0931" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>comm</name></member>
      <member refid="classamrex_1_1Hypre_1a6eb22e62b62ea0d2bcfef92f18df5304" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>diaginv</name></member>
      <member refid="classamrex_1_1Hypre_1a49181827cb7d3a5b52f02540d7e82121" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>eb_stencil_size</name></member>
      <member refid="classamrex_1_1Hypre_1a97c4612c2a7f58b47c36ec710cb1b0f6" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>geom</name></member>
      <member refid="classamrex_1_1Hypre_1a0033300a11c97c146ef60d2aba2f2bfd" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>hiV</name></member>
      <member refid="classamrex_1_1Hypre_1afd2d6c32022a99d96f73485d03272ec9" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>Hypre</name></member>
      <member refid="classamrex_1_1Hypre_1a383aec5fd079382143f14a1602a6f2e3" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>Hypre</name></member>
      <member refid="classamrex_1_1Hypre_1aa390f243b090b29bc817812412daf278" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>Hypre</name></member>
      <member refid="classamrex_1_1Hypre_1af08fbb42b4509a32e7f20a6101dfd13f" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>Interface</name></member>
      <member refid="classamrex_1_1Hypre_1a0a7daa97b3caa6216418e78ddf2835ec" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>is_matrix_singular</name></member>
      <member refid="classamrex_1_1Hypre_1a4120c58bf9c835d8345257e836e276b5" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>ispow2</name></member>
      <member refid="classamrex_1_1Hypre_1aa676d5396d5e8dce5f4864d074ebd412" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>loV</name></member>
      <member refid="classamrex_1_1Hypre_1a64e1c781a5d446a7a7cc3ef1231c2218" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>m_bndry</name></member>
      <member refid="classamrex_1_1Hypre_1a88d3049d660b7e0a5fca3002d5b78916" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>m_factory</name></member>
      <member refid="classamrex_1_1Hypre_1a7b04bbe6b54d748e48516df1695bc139" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>m_maxorder</name></member>
      <member refid="classamrex_1_1Hypre_1ab49bedd6e91b0cbfe206bc3ab17cdbc1" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>num_sweeps</name></member>
      <member refid="classamrex_1_1Hypre_1af13e0db2e188907cf98e9b933a919cd0" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>old_default</name></member>
      <member refid="classamrex_1_1Hypre_1aae61b15a16a7846d73aaf5d2af774cf4" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>operator=</name></member>
      <member refid="classamrex_1_1Hypre_1a60262e7d5c400163944cef707e63663a" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>operator=</name></member>
      <member refid="classamrex_1_1Hypre_1a9e2c8bb6ef487b2efe4482bd682b68ce" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>options_namespace</name></member>
      <member refid="classamrex_1_1Hypre_1abff4c8fa7e9790d9408099ffa9c57934" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>regular_stencil_size</name></member>
      <member refid="classamrex_1_1Hypre_1aa602c05ea8f16fa5aa95d79b372cffa8" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>relax_order</name></member>
      <member refid="classamrex_1_1Hypre_1aa9e67a6e299266afaff8157d33dcfbec" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>relax_type</name></member>
      <member refid="classamrex_1_1Hypre_1a5cc787cbd77e527e4c58e58904305531" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>scalar_a</name></member>
      <member refid="classamrex_1_1Hypre_1a8cb2fde2e6ce7be52d40bc7ee19f7ae3" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>scalar_b</name></member>
      <member refid="classamrex_1_1Hypre_1ade6e731e7392a70b13f66c6656631cdf" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>setACoeffs</name></member>
      <member refid="classamrex_1_1Hypre_1a12895e4a022dab7b6f4e2146ba0c5bc1" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>setBCoeffs</name></member>
      <member refid="classamrex_1_1Hypre_1aa3e3c7cdd1399a6569ead6da002cefcc" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>setHypreNumSweeps</name></member>
      <member refid="classamrex_1_1Hypre_1a176164a0be65a008953835f054ed05bb" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>setHypreOldDefault</name></member>
      <member refid="classamrex_1_1Hypre_1a69bd65a7f09331727ec3606700f744b7" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>setHypreOptionsNamespace</name></member>
      <member refid="classamrex_1_1Hypre_1ae6d9ce8d191fe74154cb322a83647c65" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>setHypreRelaxOrder</name></member>
      <member refid="classamrex_1_1Hypre_1a405012151d7a1605c76dc277321f8413" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>setHypreRelaxType</name></member>
      <member refid="classamrex_1_1Hypre_1a3709ca6588e8a170458aca0425335169" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>setHypreStrongThreshold</name></member>
      <member refid="classamrex_1_1Hypre_1ace6b42d6b4d28b5aeb6d0ae4ced033f1" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>setIsMatrixSingular</name></member>
      <member refid="classamrex_1_1Hypre_1ac497cc99508dff6311d584d7e0636ce8" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>setScalars</name></member>
      <member refid="classamrex_1_1Hypre_1a1aa001ef00cb82f298c761cbf61de2e1" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>setVerbose</name></member>
      <member refid="classamrex_1_1Hypre_1accd025c6669f7d68aa001f5c4d1582ad" prot="public" virt="pure-virtual"><scope>amrex::Hypre</scope><name>solve</name></member>
      <member refid="classamrex_1_1Hypre_1acbc3e949322292ed5e578e8a2bd87bb3" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>strong_threshold</name></member>
      <member refid="classamrex_1_1Hypre_1a299be2dee6b5a28af170606d9b19615b" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>verbose</name></member>
      <member refid="classamrex_1_1Hypre_1af5b05a1271484c6bd34ebd3fbbfc85ef" prot="public" virt="virtual"><scope>amrex::Hypre</scope><name>~Hypre</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
