<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1Hypre" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>amrex::Hypre</compoundname>
    <derivedcompoundref refid="classamrex_1_1HypreABecLap" prot="public" virt="non-virtual">amrex::HypreABecLap</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1HypreABecLap2" prot="public" virt="non-virtual">amrex::HypreABecLap2</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1HypreABecLap3" prot="public" virt="non-virtual">amrex::HypreABecLap3</derivedcompoundref>
    <includes refid="AMReX__Hypre_8H" local="no">AMReX_Hypre.H</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classamrex_1_1Hypre_1af08fbb42b4509a32e7f20a6101dfd13f" prot="public" static="no">
        <name>Interface</name>
        <enumvalue id="classamrex_1_1Hypre_1af08fbb42b4509a32e7f20a6101dfd13fa3c1530a48aea0feaf4956bca2698ebd6" prot="public">
          <name>structed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classamrex_1_1Hypre_1af08fbb42b4509a32e7f20a6101dfd13faf9c3193ceb5f05f22b939a6ddbf628c5" prot="public">
          <name>semi_structed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classamrex_1_1Hypre_1af08fbb42b4509a32e7f20a6101dfd13fa7bed657a775c37c2570786d0cbeefd88" prot="public">
          <name>ij</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="21" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="21" bodyend="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1Hypre_1abff4c8fa7e9790d9408099ffa9c57934" prot="protected" static="yes" mutable="no">
        <type>constexpr HYPRE_Int</type>
        <definition>constexpr HYPRE_Int amrex::Hypre::regular_stencil_size</definition>
        <argsstring></argsstring>
        <name>regular_stencil_size</name>
        <initializer>= 2*AMREX_SPACEDIM + 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="68" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a49181827cb7d3a5b52f02540d7e82121" prot="protected" static="yes" mutable="no">
        <type>constexpr HYPRE_Int</type>
        <definition>constexpr HYPRE_Int amrex::Hypre::eb_stencil_size</definition>
        <argsstring></argsstring>
        <name>eb_stencil_size</name>
        <initializer>= AMREX_D_TERM(3, *3, *3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="69" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a55f4b29b2291555432bbc82aa86c0931" prot="protected" static="no" mutable="no">
        <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
        <definition>MPI_Comm amrex::Hypre::comm</definition>
        <argsstring></argsstring>
        <name>comm</name>
        <initializer>= <ref refid="AMReX__ccse-mpi_8H_1a9c299ed1c4c5eaa48a6446c85fb2d689" kindref="member">MPI_COMM_NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="71" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a97c4612c2a7f58b47c36ec710cb1b0f6" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::Hypre::geom</definition>
        <argsstring></argsstring>
        <name>geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="72" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a299be2dee6b5a28af170606d9b19615b" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::Hypre::verbose</definition>
        <argsstring></argsstring>
        <name>verbose</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="74" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1af13e0db2e188907cf98e9b933a919cd0" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::Hypre::old_default</definition>
        <argsstring></argsstring>
        <name>old_default</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="75" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1aa9e67a6e299266afaff8157d33dcfbec" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::Hypre::relax_type</definition>
        <argsstring></argsstring>
        <name>relax_type</name>
        <initializer>= 6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="76" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1aa602c05ea8f16fa5aa95d79b372cffa8" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::Hypre::relax_order</definition>
        <argsstring></argsstring>
        <name>relax_order</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="77" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1ab49bedd6e91b0cbfe206bc3ab17cdbc1" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::Hypre::num_sweeps</definition>
        <argsstring></argsstring>
        <name>num_sweeps</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="78" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1acbc3e949322292ed5e578e8a2bd87bb3" prot="protected" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::Hypre::strong_threshold</definition>
        <argsstring></argsstring>
        <name>strong_threshold</name>
        <initializer>= 0.25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="79" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a9e2c8bb6ef487b2efe4482bd682b68ce" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string amrex::Hypre::options_namespace</definition>
        <argsstring></argsstring>
        <name>options_namespace</name>
        <initializer>{&quot;hypre&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="81" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a1ab65d249a3254eb6540bedcc9ebf285" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::Hypre::acoefs</definition>
        <argsstring></argsstring>
        <name>acoefs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="83" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a097bf586d48d127374ec0d293dd3bd41" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref>, AMREX_SPACEDIM &gt;</type>
        <definition>Array&lt;MultiFab,AMREX_SPACEDIM&gt; amrex::Hypre::bcoefs</definition>
        <argsstring></argsstring>
        <name>bcoefs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="84" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a5cc787cbd77e527e4c58e58904305531" prot="protected" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::Hypre::scalar_a</definition>
        <argsstring></argsstring>
        <name>scalar_a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="85" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a8cb2fde2e6ce7be52d40bc7ee19f7ae3" prot="protected" static="no" mutable="no">
        <type>Real</type>
        <definition>Real amrex::Hypre::scalar_b</definition>
        <argsstring></argsstring>
        <name>scalar_b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="85" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a6eb22e62b62ea0d2bcfef92f18df5304" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref></type>
        <definition>MultiFab amrex::Hypre::diaginv</definition>
        <argsstring></argsstring>
        <name>diaginv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="87" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a88d3049d660b7e0a5fca3002d5b78916" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabFactory" kindref="compound">FabFactory</ref>&lt; <ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref> &gt; const  *</type>
        <definition>FabFactory&lt;FArrayBox&gt; const* amrex::Hypre::m_factory</definition>
        <argsstring></argsstring>
        <name>m_factory</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="89" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a64e1c781a5d446a7a7cc3ef1231c2218" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1BndryData" kindref="compound">BndryData</ref> const  *</type>
        <definition>BndryData const* amrex::Hypre::m_bndry</definition>
        <argsstring></argsstring>
        <name>m_bndry</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="90" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a7b04bbe6b54d748e48516df1695bc139" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::Hypre::m_maxorder</definition>
        <argsstring></argsstring>
        <name>m_maxorder</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="91" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1Hypre_1a0a7daa97b3caa6216418e78ddf2835ec" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::Hypre::is_matrix_singular</definition>
        <argsstring></argsstring>
        <name>is_matrix_singular</name>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="93" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1Hypre_1afd2d6c32022a99d96f73485d03272ec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::Hypre::Hypre</definition>
        <argsstring>(const BoxArray &amp;grids, const DistributionMapping &amp;dmap, const Geometry &amp;geom, MPI_Comm comm_)</argsstring>
        <name>Hypre</name>
        <param>
          <type>const BoxArray &amp;</type>
          <declname>grids</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref></type>
          <declname>comm_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="23" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.cpp" bodystart="30" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1af5b05a1271484c6bd34ebd3fbbfc85ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>amrex::Hypre::~Hypre</definition>
        <argsstring>()</argsstring>
        <name>~Hypre</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="28" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.cpp" bodystart="63" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1ac497cc99508dff6311d584d7e0636ce8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Hypre::setScalars</definition>
        <argsstring>(Real sa, Real sb)</argsstring>
        <name>setScalars</name>
        <param>
          <type>Real</type>
          <declname>sa</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>sb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="30" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.cpp" bodystart="71" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1ade6e731e7392a70b13f66c6656631cdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Hypre::setACoeffs</definition>
        <argsstring>(const MultiFab &amp;alpha)</argsstring>
        <name>setACoeffs</name>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="31" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.cpp" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1a993feadb0ec999bd7f2d92717fd9c486" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Hypre::setBCoeffs</definition>
        <argsstring>(const Array&lt; const MultiFab *, BL_SPACEDIM &gt; &amp;beta)</argsstring>
        <name>setBCoeffs</name>
        <param>
          <type>const <ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *, <ref refid="AMReX__SPACE_8H_1af66ac7d7c04dad9fd54778fe5a4e816f" kindref="member">BL_SPACEDIM</ref> &gt; &amp;</type>
          <declname>beta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="32" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.cpp" bodystart="84" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1a1aa001ef00cb82f298c761cbf61de2e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Hypre::setVerbose</definition>
        <argsstring>(int _verbose)</argsstring>
        <name>setVerbose</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>_verbose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="33" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.cpp" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1ace6b42d6b4d28b5aeb6d0ae4ced033f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Hypre::setIsMatrixSingular</definition>
        <argsstring>(bool flag)</argsstring>
        <name>setIsMatrixSingular</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="34" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1accd025c6669f7d68aa001f5c4d1582ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void amrex::Hypre::solve</definition>
        <argsstring>(MultiFab &amp;soln, const MultiFab &amp;rhs, Real rel_tol, Real abs_tol, int max_iter, const BndryData &amp;bndry, int max_bndry_order)=0</argsstring>
        <name>solve</name>
        <reimplementedby refid="classamrex_1_1HypreABecLap2_1a720aace7ce8469e3abdd29a42096d69a">solve</reimplementedby>
        <reimplementedby refid="classamrex_1_1HypreABecLap3_1a84a20efbf88131a2235d161fa5d8065e">solve</reimplementedby>
        <reimplementedby refid="classamrex_1_1HypreABecLap_1a91c060611b4dc33fec8c6ec8b9968a56">solve</reimplementedby>
        <param>
          <type><ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>rel_tol</declname>
        </param>
        <param>
          <type>Real</type>
          <declname>abs_tol</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>max_iter</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BndryData" kindref="compound">BndryData</ref> &amp;</type>
          <declname>bndry</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>max_bndry_order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1a69bd65a7f09331727ec3606700f744b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Hypre::setHypreOptionsNamespace</definition>
        <argsstring>(const std::string &amp;ns) noexcept</argsstring>
        <name>setHypreOptionsNamespace</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>ns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="58" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="58" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1a176164a0be65a008953835f054ed05bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Hypre::setHypreOldDefault</definition>
        <argsstring>(bool l) noexcept</argsstring>
        <name>setHypreOldDefault</name>
        <param>
          <type>bool</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="60" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1a405012151d7a1605c76dc277321f8413" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Hypre::setHypreRelaxType</definition>
        <argsstring>(int n) noexcept</argsstring>
        <name>setHypreRelaxType</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="61" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1ae6d9ce8d191fe74154cb322a83647c65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Hypre::setHypreRelaxOrder</definition>
        <argsstring>(int n) noexcept</argsstring>
        <name>setHypreRelaxOrder</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="62" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1aa3e3c7cdd1399a6569ead6da002cefcc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Hypre::setHypreNumSweeps</definition>
        <argsstring>(int n) noexcept</argsstring>
        <name>setHypreNumSweeps</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="63" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1a3709ca6588e8a170458aca0425335169" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::Hypre::setHypreStrongThreshold</definition>
        <argsstring>(Real t) noexcept</argsstring>
        <name>setHypreStrongThreshold</name>
        <param>
          <type>Real</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="64" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="64" bodyend="64"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1Hypre_1a4120c58bf9c835d8345257e836e276b5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HYPRE_Int</type>
        <definition>static HYPRE_Int amrex::Hypre::ispow2</definition>
        <argsstring>(HYPRE_Int i)</argsstring>
        <name>ispow2</name>
        <param>
          <type>HYPRE_Int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="38" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1ad64dd52bc29882baff668896c2dde9cd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; HYPRE_Int, AMREX_SPACEDIM &gt;</type>
        <definition>static Array&lt;HYPRE_Int,AMREX_SPACEDIM&gt; amrex::Hypre::loV</definition>
        <argsstring>(const Box &amp;b)</argsstring>
        <name>loV</name>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="43" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="43" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1Hypre_1aac6b099395a000804880b97e43407c5b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; HYPRE_Int, AMREX_SPACEDIM &gt;</type>
        <definition>static Array&lt;HYPRE_Int,AMREX_SPACEDIM&gt; amrex::Hypre::hiV</definition>
        <argsstring>(const Box &amp;b)</argsstring>
        <name>hiV</name>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="50" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="50" bodyend="55"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1796">
        <label>amrex::Hypre</label>
        <link refid="classamrex_1_1Hypre"/>
      </node>
      <node id="1797">
        <label>amrex::HypreABecLap</label>
        <link refid="classamrex_1_1HypreABecLap"/>
        <childnode refid="1796" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1798">
        <label>amrex::HypreABecLap2</label>
        <link refid="classamrex_1_1HypreABecLap2"/>
        <childnode refid="1796" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1799">
        <label>amrex::HypreABecLap3</label>
        <link refid="classamrex_1_1HypreABecLap3"/>
        <childnode refid="1796" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1831">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
      </node>
      <node id="1811">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="1812" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="1814">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="1826">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="1806">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="1806" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="1844">
        <label>amrex::LayoutData&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="1810" relation="public-inheritance">
        </childnode>
        <childnode refid="1845" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="1803">
        <label>Real</label>
      </node>
      <node id="1832">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1833" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1824">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="1825" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="1836">
        <label>amrex::BndryData</label>
        <link refid="classamrex_1_1BndryData"/>
        <childnode refid="1837" relation="public-inheritance">
        </childnode>
        <childnode refid="1801" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="1839" relation="usage">
          <edgelabel>bcloc</edgelabel>
        </childnode>
        <childnode refid="1842" relation="usage">
          <edgelabel>masks</edgelabel>
        </childnode>
        <childnode refid="1844" relation="usage">
          <edgelabel>bcond</edgelabel>
        </childnode>
      </node>
      <node id="1823">
        <label>std::vector&lt; char *, std::allocator&lt; char *&gt; &gt;</label>
      </node>
      <node id="1828">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
      </node>
      <node id="1825">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="1826" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
      </node>
      <node id="1815">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1816" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1812">
        <label>string</label>
      </node>
      <node id="1834">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="1806" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="1843">
        <label>std::vector&lt; amrex::MultiMask, std::allocator&lt; amrex::MultiMask &gt; &gt;</label>
      </node>
      <node id="1800">
        <label>amrex::Hypre</label>
        <link refid="classamrex_1_1Hypre"/>
        <childnode refid="1801" relation="usage">
          <edgelabel>geom</edgelabel>
        </childnode>
        <childnode refid="1808" relation="usage">
          <edgelabel>acoefs</edgelabel>
          <edgelabel>diaginv</edgelabel>
        </childnode>
        <childnode refid="1812" relation="usage">
          <edgelabel>options_namespace</edgelabel>
        </childnode>
        <childnode refid="1835" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="1836" relation="usage">
          <edgelabel>m_bndry</edgelabel>
        </childnode>
        <childnode refid="1803" relation="usage">
          <edgelabel>scalar_a</edgelabel>
          <edgelabel>scalar_b</edgelabel>
          <edgelabel>strong_threshold</edgelabel>
        </childnode>
      </node>
      <node id="1846">
        <label>std::vector&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt;, std::allocator&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="1829">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="1835">
        <label>amrex::FabFactory&lt; amrex::FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="1822">
        <label>amrex::Vector&lt; char *&gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1823" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1842">
        <label>amrex::Vector&lt; amrex::MultiMask &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1843" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1833">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
      </node>
      <node id="1816">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="1804">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="1803" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="1845">
        <label>amrex::Vector&lt; amrex::Vector&lt; amrex::Vector&lt; amrex::BoundCond &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1846" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1805">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="1806" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="1807" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="1818">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="1819" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="1830">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1831" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1802">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="1803" relation="usage">
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
          <edgelabel>dx</edgelabel>
        </childnode>
      </node>
      <node id="1807">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="1819">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="1815" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
      </node>
      <node id="1838">
        <label>amrex::FabSet</label>
        <link refid="classamrex_1_1FabSet"/>
        <childnode refid="1808" relation="usage">
          <edgelabel>m_mf</edgelabel>
        </childnode>
      </node>
      <node id="1827">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1828" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1813">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
      </node>
      <node id="1817">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="1818" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="1837">
        <label>amrex::BndryRegister</label>
        <link refid="classamrex_1_1BndryRegister"/>
        <childnode refid="1838" relation="usage">
          <edgelabel>bndry</edgelabel>
        </childnode>
      </node>
      <node id="1808">
        <label>amrex::MultiFab</label>
        <link refid="classamrex_1_1MultiFab"/>
        <childnode refid="1809" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1801">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="1802" relation="public-inheritance">
        </childnode>
        <childnode refid="1804" relation="usage">
          <edgelabel>roundoff_domain</edgelabel>
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="1805" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="1841">
        <label>std::vector&lt; RealTuple, std::allocator&lt; RealTuple &gt; &gt;</label>
      </node>
      <node id="1839">
        <label>amrex::LayoutData&lt; RealTuple &gt;</label>
        <link refid="classamrex_1_1LayoutData"/>
        <childnode refid="1810" relation="public-inheritance">
        </childnode>
        <childnode refid="1840" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="1840">
        <label>amrex::Vector&lt; RealTuple &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1841" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1809">
        <label>amrex::FabArray&lt; FArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="1810" relation="public-inheritance">
        </childnode>
        <childnode refid="1820" relation="usage">
          <edgelabel>fb_recv_size</edgelabel>
        </childnode>
        <childnode refid="1822" relation="usage">
          <edgelabel>fb_recv_data</edgelabel>
          <edgelabel>fb_send_data</edgelabel>
        </childnode>
        <childnode refid="1806" relation="usage">
          <edgelabel>fb_nghost</edgelabel>
        </childnode>
        <childnode refid="1824" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="1815" relation="usage">
          <edgelabel>fb_recv_from</edgelabel>
        </childnode>
        <childnode refid="1827" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="1829" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="1830" relation="usage">
          <edgelabel>fb_recv_stat</edgelabel>
        </childnode>
        <childnode refid="1832" relation="usage">
          <edgelabel>fb_send_reqs</edgelabel>
          <edgelabel>fb_recv_reqs</edgelabel>
        </childnode>
        <childnode refid="1834" relation="usage">
          <edgelabel>fb_period</edgelabel>
        </childnode>
      </node>
      <node id="1820">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="1821" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1810">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="1811" relation="usage">
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
        </childnode>
        <childnode refid="1813" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="1806" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
          <edgelabel>mfghostiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="1814" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
        <childnode refid="1815" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="1817" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
      </node>
      <node id="1821">
        <label>std::vector&lt; std::size_t, std::allocator&lt; std::size_t &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" line="18" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_Hypre.H" bodystart="17" bodyend="94"/>
    <listofallmembers>
      <member refid="classamrex_1_1Hypre_1a1ab65d249a3254eb6540bedcc9ebf285" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>acoefs</name></member>
      <member refid="classamrex_1_1Hypre_1a097bf586d48d127374ec0d293dd3bd41" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>bcoefs</name></member>
      <member refid="classamrex_1_1Hypre_1a55f4b29b2291555432bbc82aa86c0931" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>comm</name></member>
      <member refid="classamrex_1_1Hypre_1a6eb22e62b62ea0d2bcfef92f18df5304" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>diaginv</name></member>
      <member refid="classamrex_1_1Hypre_1a49181827cb7d3a5b52f02540d7e82121" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>eb_stencil_size</name></member>
      <member refid="classamrex_1_1Hypre_1a97c4612c2a7f58b47c36ec710cb1b0f6" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>geom</name></member>
      <member refid="classamrex_1_1Hypre_1aac6b099395a000804880b97e43407c5b" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>hiV</name></member>
      <member refid="classamrex_1_1Hypre_1afd2d6c32022a99d96f73485d03272ec9" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>Hypre</name></member>
      <member refid="classamrex_1_1Hypre_1af08fbb42b4509a32e7f20a6101dfd13f" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>Interface</name></member>
      <member refid="classamrex_1_1Hypre_1a0a7daa97b3caa6216418e78ddf2835ec" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>is_matrix_singular</name></member>
      <member refid="classamrex_1_1Hypre_1a4120c58bf9c835d8345257e836e276b5" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>ispow2</name></member>
      <member refid="classamrex_1_1Hypre_1ad64dd52bc29882baff668896c2dde9cd" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>loV</name></member>
      <member refid="classamrex_1_1Hypre_1a64e1c781a5d446a7a7cc3ef1231c2218" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>m_bndry</name></member>
      <member refid="classamrex_1_1Hypre_1a88d3049d660b7e0a5fca3002d5b78916" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>m_factory</name></member>
      <member refid="classamrex_1_1Hypre_1a7b04bbe6b54d748e48516df1695bc139" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>m_maxorder</name></member>
      <member refid="classamrex_1_1Hypre_1ab49bedd6e91b0cbfe206bc3ab17cdbc1" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>num_sweeps</name></member>
      <member refid="classamrex_1_1Hypre_1af13e0db2e188907cf98e9b933a919cd0" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>old_default</name></member>
      <member refid="classamrex_1_1Hypre_1a9e2c8bb6ef487b2efe4482bd682b68ce" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>options_namespace</name></member>
      <member refid="classamrex_1_1Hypre_1abff4c8fa7e9790d9408099ffa9c57934" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>regular_stencil_size</name></member>
      <member refid="classamrex_1_1Hypre_1aa602c05ea8f16fa5aa95d79b372cffa8" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>relax_order</name></member>
      <member refid="classamrex_1_1Hypre_1aa9e67a6e299266afaff8157d33dcfbec" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>relax_type</name></member>
      <member refid="classamrex_1_1Hypre_1a5cc787cbd77e527e4c58e58904305531" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>scalar_a</name></member>
      <member refid="classamrex_1_1Hypre_1a8cb2fde2e6ce7be52d40bc7ee19f7ae3" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>scalar_b</name></member>
      <member refid="classamrex_1_1Hypre_1ade6e731e7392a70b13f66c6656631cdf" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>setACoeffs</name></member>
      <member refid="classamrex_1_1Hypre_1a993feadb0ec999bd7f2d92717fd9c486" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>setBCoeffs</name></member>
      <member refid="classamrex_1_1Hypre_1aa3e3c7cdd1399a6569ead6da002cefcc" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>setHypreNumSweeps</name></member>
      <member refid="classamrex_1_1Hypre_1a176164a0be65a008953835f054ed05bb" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>setHypreOldDefault</name></member>
      <member refid="classamrex_1_1Hypre_1a69bd65a7f09331727ec3606700f744b7" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>setHypreOptionsNamespace</name></member>
      <member refid="classamrex_1_1Hypre_1ae6d9ce8d191fe74154cb322a83647c65" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>setHypreRelaxOrder</name></member>
      <member refid="classamrex_1_1Hypre_1a405012151d7a1605c76dc277321f8413" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>setHypreRelaxType</name></member>
      <member refid="classamrex_1_1Hypre_1a3709ca6588e8a170458aca0425335169" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>setHypreStrongThreshold</name></member>
      <member refid="classamrex_1_1Hypre_1ace6b42d6b4d28b5aeb6d0ae4ced033f1" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>setIsMatrixSingular</name></member>
      <member refid="classamrex_1_1Hypre_1ac497cc99508dff6311d584d7e0636ce8" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>setScalars</name></member>
      <member refid="classamrex_1_1Hypre_1a1aa001ef00cb82f298c761cbf61de2e1" prot="public" virt="non-virtual"><scope>amrex::Hypre</scope><name>setVerbose</name></member>
      <member refid="classamrex_1_1Hypre_1accd025c6669f7d68aa001f5c4d1582ad" prot="public" virt="pure-virtual"><scope>amrex::Hypre</scope><name>solve</name></member>
      <member refid="classamrex_1_1Hypre_1acbc3e949322292ed5e578e8a2bd87bb3" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>strong_threshold</name></member>
      <member refid="classamrex_1_1Hypre_1a299be2dee6b5a28af170606d9b19615b" prot="protected" virt="non-virtual"><scope>amrex::Hypre</scope><name>verbose</name></member>
      <member refid="classamrex_1_1Hypre_1af5b05a1271484c6bd34ebd3fbbfc85ef" prot="public" virt="virtual"><scope>amrex::Hypre</scope><name>~Hypre</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
