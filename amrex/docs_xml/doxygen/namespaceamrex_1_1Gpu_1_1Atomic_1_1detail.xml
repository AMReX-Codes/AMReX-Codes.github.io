<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceamrex_1_1Gpu_1_1Atomic_1_1detail" kind="namespace" language="C++">
    <compoundname>amrex::Gpu::Atomic::detail</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex_1_1Gpu_1_1Atomic_1_1detail_1a2819a77a9810eefb910390f23d2a698f" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename R</type>
          </param>
          <param>
            <type>typename I</type>
          </param>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> R</type>
        <definition>AMREX_GPU_DEVICE AMREX_FORCE_INLINE R amrex::Gpu::Atomic::detail::atomic_op</definition>
        <argsstring>(R *const address, R const val, F const f) noexcept</argsstring>
        <name>atomic_op</name>
        <param>
          <type>R *const</type>
          <declname>address</declname>
        </param>
        <param>
          <type>R const</type>
          <declname>val</declname>
        </param>
        <param>
          <type>F const</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAtomic.H" line="85" column="7" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAtomic.H" bodystart="85" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex_1_1Gpu_1_1Atomic_1_1detail_1a3b1604f8c0fb00d92059f55290de9efd" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename R</type>
          </param>
          <param>
            <type>typename I</type>
          </param>
          <param>
            <type>typename Op</type>
          </param>
          <param>
            <type>typename Cond</type>
          </param>
        </templateparamlist>
        <type><ref refid="AMReX__GpuQualifiers_8H_1a4e626ebf06898d71a9e0790877f1694f" kindref="member">AMREX_GPU_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> bool</type>
        <definition>AMREX_GPU_DEVICE AMREX_FORCE_INLINE bool amrex::Gpu::Atomic::detail::atomic_op_if</definition>
        <argsstring>(R *const address, R const val, Op &amp;&amp;op, Cond &amp;&amp;cond) noexcept</argsstring>
        <name>atomic_op_if</name>
        <param>
          <type>R *const</type>
          <declname>address</declname>
        </param>
        <param>
          <type>R const</type>
          <declname>val</declname>
        </param>
        <param>
          <type>Op &amp;&amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type>Cond &amp;&amp;</type>
          <declname>cond</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAtomic.H" line="100" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAtomic.H" bodystart="100" bodyend="115"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAtomic.H" line="22" column="1"/>
  </compounddef>
</doxygen>
