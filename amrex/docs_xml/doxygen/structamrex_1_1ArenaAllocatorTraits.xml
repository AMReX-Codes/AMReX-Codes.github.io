<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structamrex_1_1ArenaAllocatorTraits" kind="struct" language="C++" prot="public">
    <compoundname>amrex::ArenaAllocatorTraits</compoundname>
    <derivedcompoundref refid="classamrex_1_1ArenaAllocator" prot="public" virt="non-virtual">amrex::ArenaAllocator&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1DeviceArenaAllocator" prot="public" virt="non-virtual">amrex::DeviceArenaAllocator&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1ManagedArenaAllocator" prot="public" virt="non-virtual">amrex::ManagedArenaAllocator&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classamrex_1_1PinnedArenaAllocator" prot="public" virt="non-virtual">amrex::PinnedArenaAllocator&lt; T &gt;</derivedcompoundref>
    <includes refid="AMReX__GpuAllocators_8H" local="no">AMReX_GpuAllocators.H</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structamrex_1_1ArenaAllocatorTraits_1a877662d4bb47c6680edf92709420599b" prot="public" static="no">
        <type>std::true_type</type>
        <definition>typedef std::true_type amrex::ArenaAllocatorTraits::propagate_on_container_copy_assignment</definition>
        <argsstring></argsstring>
        <name>propagate_on_container_copy_assignment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" line="27" column="32" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ArenaAllocatorTraits_1a7c21ffe5ae786795e9792884b68c3c3d" prot="public" static="no">
        <type>std::true_type</type>
        <definition>typedef std::true_type amrex::ArenaAllocatorTraits::propagate_on_container_move_assignment</definition>
        <argsstring></argsstring>
        <name>propagate_on_container_move_assignment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" line="28" column="32" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ArenaAllocatorTraits_1a9a6140da2b4714f332dd0f10d74e3ac0" prot="public" static="no">
        <type>std::true_type</type>
        <definition>typedef std::true_type amrex::ArenaAllocatorTraits::propagate_on_container_swap</definition>
        <argsstring></argsstring>
        <name>propagate_on_container_swap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" line="29" column="32" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structamrex_1_1ArenaAllocatorTraits_1a087cedc0c534a729f06566c2787234c3" prot="public" static="no">
        <type>std::true_type</type>
        <definition>typedef std::true_type amrex::ArenaAllocatorTraits::is_always_equal</definition>
        <argsstring></argsstring>
        <name>is_always_equal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" line="30" column="32" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="9">
        <label>amrex::ManagedArenaAllocator&lt; T &gt;</label>
        <link refid="classamrex_1_1ManagedArenaAllocator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>PODVector&lt; ParticleType, DefaultAllocator&lt; ParticleType &gt; &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>PODVector&lt; const ParticleReal *, DefaultAllocator&lt; const ParticleReal * &gt; &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>PODVector&lt; const int *, DefaultAllocator&lt; const int * &gt; &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>amrex::ArenaAllocatorTraits</label>
        <link refid="structamrex_1_1ArenaAllocatorTraits"/>
      </node>
      <node id="6">
        <label>PODVector&lt; ParticleReal *, DefaultAllocator&lt; ParticleReal * &gt; &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>PODVector&lt; int *, DefaultAllocator&lt; int * &gt; &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::ArenaAllocator&lt; T &gt;</label>
        <link refid="classamrex_1_1ArenaAllocator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>amrex::DeviceArenaAllocator&lt; T &gt;</label>
        <link refid="classamrex_1_1DeviceArenaAllocator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>amrex::PinnedArenaAllocator&lt; T &gt;</label>
        <link refid="classamrex_1_1PinnedArenaAllocator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" line="26" column="31" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_GpuAllocators.H" bodystart="26" bodyend="31"/>
    <listofallmembers>
      <member refid="structamrex_1_1ArenaAllocatorTraits_1a087cedc0c534a729f06566c2787234c3" prot="public" virt="non-virtual"><scope>amrex::ArenaAllocatorTraits</scope><name>is_always_equal</name></member>
      <member refid="structamrex_1_1ArenaAllocatorTraits_1a877662d4bb47c6680edf92709420599b" prot="public" virt="non-virtual"><scope>amrex::ArenaAllocatorTraits</scope><name>propagate_on_container_copy_assignment</name></member>
      <member refid="structamrex_1_1ArenaAllocatorTraits_1a7c21ffe5ae786795e9792884b68c3c3d" prot="public" virt="non-virtual"><scope>amrex::ArenaAllocatorTraits</scope><name>propagate_on_container_move_assignment</name></member>
      <member refid="structamrex_1_1ArenaAllocatorTraits_1a9a6140da2b4714f332dd0f10d74e3ac0" prot="public" virt="non-virtual"><scope>amrex::ArenaAllocatorTraits</scope><name>propagate_on_container_swap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
