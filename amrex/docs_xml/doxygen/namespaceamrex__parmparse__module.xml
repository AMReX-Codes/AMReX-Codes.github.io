<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespaceamrex__parmparse__module" kind="namespace" language="Fortran">
    <compoundname>amrex_parmparse_module</compoundname>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__delete__parmparse" prot="private">amrex_parmparse_module::amrex_delete_parmparse</innerclass>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__new__parmparse" prot="public">amrex_parmparse_module::amrex_new_parmparse</innerclass>
    <innerclass refid="structamrex__parmparse__module_1_1amrex__parmparse" prot="public">amrex_parmparse_module::amrex_parmparse</innerclass>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__parmparse__add__bool" prot="private">amrex_parmparse_module::amrex_parmparse_add_bool</innerclass>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__parmparse__add__int" prot="private">amrex_parmparse_module::amrex_parmparse_add_int</innerclass>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__parmparse__add__intarr" prot="private">amrex_parmparse_module::amrex_parmparse_add_intarr</innerclass>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__parmparse__add__real" prot="private">amrex_parmparse_module::amrex_parmparse_add_real</innerclass>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__parmparse__add__realarr" prot="private">amrex_parmparse_module::amrex_parmparse_add_realarr</innerclass>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__parmparse__add__string" prot="private">amrex_parmparse_module::amrex_parmparse_add_string</innerclass>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__parmparse__add__stringarr" prot="private">amrex_parmparse_module::amrex_parmparse_add_stringarr</innerclass>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__parmparse__delete__cp__char" prot="private">amrex_parmparse_module::amrex_parmparse_delete_cp_char</innerclass>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__parmparse__destroy" prot="public">amrex_parmparse_module::amrex_parmparse_destroy</innerclass>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__parmparse__get__bool" prot="private">amrex_parmparse_module::amrex_parmparse_get_bool</innerclass>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__parmparse__get__counts" prot="private">amrex_parmparse_module::amrex_parmparse_get_counts</innerclass>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__parmparse__get__int" prot="private">amrex_parmparse_module::amrex_parmparse_get_int</innerclass>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__parmparse__get__intarr" prot="private">amrex_parmparse_module::amrex_parmparse_get_intarr</innerclass>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__parmparse__get__real" prot="private">amrex_parmparse_module::amrex_parmparse_get_real</innerclass>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__parmparse__get__realarr" prot="private">amrex_parmparse_module::amrex_parmparse_get_realarr</innerclass>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__parmparse__get__string" prot="private">amrex_parmparse_module::amrex_parmparse_get_string</innerclass>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__parmparse__get__stringarr" prot="private">amrex_parmparse_module::amrex_parmparse_get_stringarr</innerclass>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__parmparse__query__bool" prot="private">amrex_parmparse_module::amrex_parmparse_query_bool</innerclass>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__parmparse__query__int" prot="private">amrex_parmparse_module::amrex_parmparse_query_int</innerclass>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__parmparse__query__real" prot="private">amrex_parmparse_module::amrex_parmparse_query_real</innerclass>
    <innerclass refid="interfaceamrex__parmparse__module_1_1amrex__parmparse__query__string" prot="private">amrex_parmparse_module::amrex_parmparse_query_string</innerclass>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceamrex__parmparse__module_1a9e52abadec8dd79a05ddec212b4c41a1" prot="public" static="no" mutable="no">
        <type>character(len=:), allocatable, public</type>
        <definition>character(len=:), allocatable, public amrex_parmparse_module::amrex_namelist</definition>
        <argsstring></argsstring>
        <name>amrex_namelist</name>
        <qualifiedname>amrex_parmparse_module::amrex_namelist</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="10" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="10" bodyend="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1a5159132ce76a022a5c7def8ec38a8880" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine, public</type>
        <definition>subroutine, public amrex_parmparse_module::amrex_parmparse_build</definition>
        <argsstring>(pp, name)</argsstring>
        <name>amrex_parmparse_build</name>
        <qualifiedname>amrex_parmparse_module::amrex_parmparse_build</qualifiedname>
        <param>
          <type>type(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>)</type>
          <defname>pp</defname>
        </param>
        <param>
          <type>character(*), intent(in), optional</type>
          <defname>name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="243" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="244" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1a240bfde0d7f9495e75761ac59a91dfe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine, public</type>
        <definition>subroutine, public amrex_parmparse_module::amrex_parmparse_destroy</definition>
        <argsstring>(this)</argsstring>
        <name>amrex_parmparse_destroy</name>
        <qualifiedname>amrex_parmparse_module::amrex_parmparse_destroy</qualifiedname>
        <param>
          <type>type(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>)</type>
          <defname>this</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="254" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="255" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1ac7eb4f4fb08fb1fe22d895d4ea48e90f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_parmparse_module::amrex_parmparse_assign</definition>
        <argsstring>(dst, src)</argsstring>
        <name>amrex_parmparse_assign</name>
        <qualifiedname>amrex_parmparse_module::amrex_parmparse_assign</qualifiedname>
        <param>
          <type>class(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(inout)</type>
          <defname>dst</defname>
        </param>
        <param>
          <type>type (<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(in)</type>
          <defname>src</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="265" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="266" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1a6ef2d5bb23477385797383a4838a1281" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_parmparse_module::get_int</definition>
        <argsstring>(this, name, v)</argsstring>
        <name>get_int</name>
        <qualifiedname>amrex_parmparse_module::get_int</qualifiedname>
        <param>
          <type>class(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(in)</type>
          <defname>this</defname>
        </param>
        <param>
          <type>character(len=*), intent(in)</type>
          <defname>name</defname>
        </param>
        <param>
          <type>integer</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="273" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="274" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1a43a58b4dcfae50bb8a40911804a8fd7b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_parmparse_module::get_real</definition>
        <argsstring>(this, name, v)</argsstring>
        <name>get_real</name>
        <qualifiedname>amrex_parmparse_module::get_real</qualifiedname>
        <param>
          <type>class(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(in)</type>
          <defname>this</defname>
        </param>
        <param>
          <type>character(*), intent(in)</type>
          <defname>name</defname>
        </param>
        <param>
          <type>real(<ref refid="AMReX__REAL_8H_1a9c34e09baf6d4d1b12637402203f9e9e" kindref="member">amrex_real</ref>)</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="280" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="281" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1a1f072a46c41df5283ca3ab135fa8f192" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_parmparse_module::get_logical</definition>
        <argsstring>(this, name, v)</argsstring>
        <name>get_logical</name>
        <qualifiedname>amrex_parmparse_module::get_logical</qualifiedname>
        <param>
          <type>class(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(in)</type>
          <defname>this</defname>
        </param>
        <param>
          <type>character(*), intent(in)</type>
          <defname>name</defname>
        </param>
        <param>
          <type>logical</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="287" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="288" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1a2cbf931e4c309eba6e8c3874eb30f7b5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_parmparse_module::get_string</definition>
        <argsstring>(this, name, v)</argsstring>
        <name>get_string</name>
        <qualifiedname>amrex_parmparse_module::get_string</qualifiedname>
        <param>
          <type>class(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(in)</type>
          <defname>this</defname>
        </param>
        <param>
          <type>character(*), intent(in)</type>
          <defname>name</defname>
        </param>
        <param>
          <type>character(len=:), intent(inout), allocatable</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="296" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="297" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1a56e10e295f5d70b7f238b84f487aa477" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_parmparse_module::get_intarr</definition>
        <argsstring>(this, name, v)</argsstring>
        <name>get_intarr</name>
        <qualifiedname>amrex_parmparse_module::get_intarr</qualifiedname>
        <param>
          <type>class(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(in)</type>
          <defname>this</defname>
        </param>
        <param>
          <type>character(len=*), intent(in)</type>
          <defname>name</defname>
        </param>
        <param>
          <type>integer, dimension(:), intent(inout), allocatable</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="313" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="314" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1afaa243da391ad65ea78af211034bbbb2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_parmparse_module::get_realarr</definition>
        <argsstring>(this, name, v)</argsstring>
        <name>get_realarr</name>
        <qualifiedname>amrex_parmparse_module::get_realarr</qualifiedname>
        <param>
          <type>class(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(in)</type>
          <defname>this</defname>
        </param>
        <param>
          <type>character(len=*), intent(in)</type>
          <defname>name</defname>
        </param>
        <param>
          <type>real(<ref refid="AMReX__REAL_8H_1a9c34e09baf6d4d1b12637402203f9e9e" kindref="member">amrex_real</ref>), dimension(:), intent(inout), allocatable</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="328" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="329" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1a0a94203d52dd6336e6ca512a5139b3e7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_parmparse_module::get_stringarr</definition>
        <argsstring>(this, name, v)</argsstring>
        <name>get_stringarr</name>
        <qualifiedname>amrex_parmparse_module::get_stringarr</qualifiedname>
        <param>
          <type>class(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(in)</type>
          <defname>this</defname>
        </param>
        <param>
          <type>character(len=*), intent(in)</type>
          <defname>name</defname>
        </param>
        <param>
          <type>character(len=:), dimension(:), intent(inout), allocatable</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="343" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="344" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1aa2b6623e9c82e688c1ace4430d3a0edf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_parmparse_module::query_int</definition>
        <argsstring>(this, name, v, flag)</argsstring>
        <name>query_int</name>
        <qualifiedname>amrex_parmparse_module::query_int</qualifiedname>
        <param>
          <type>class(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(in)</type>
          <defname>this</defname>
        </param>
        <param>
          <type>character(len=*), intent(in)</type>
          <defname>name</defname>
        </param>
        <param>
          <type>integer</type>
          <defname>v</defname>
        </param>
        <param>
          <type>logical, intent(out), optional</type>
          <defname>flag</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="370" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="371" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1a9729d60628ced64a34f28997b5122f7d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_parmparse_module::query_real</definition>
        <argsstring>(this, name, v, flag)</argsstring>
        <name>query_real</name>
        <qualifiedname>amrex_parmparse_module::query_real</qualifiedname>
        <param>
          <type>class(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(in)</type>
          <defname>this</defname>
        </param>
        <param>
          <type>character(*), intent(in)</type>
          <defname>name</defname>
        </param>
        <param>
          <type>real(<ref refid="AMReX__REAL_8H_1a9c34e09baf6d4d1b12637402203f9e9e" kindref="member">amrex_real</ref>)</type>
          <defname>v</defname>
        </param>
        <param>
          <type>logical, intent(out), optional</type>
          <defname>flag</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="379" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="380" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1a56db14c7509d856f0aea7bf8e8c98eba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_parmparse_module::query_logical</definition>
        <argsstring>(this, name, v, flag)</argsstring>
        <name>query_logical</name>
        <qualifiedname>amrex_parmparse_module::query_logical</qualifiedname>
        <param>
          <type>class(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(in)</type>
          <defname>this</defname>
        </param>
        <param>
          <type>character(*), intent(in)</type>
          <defname>name</defname>
        </param>
        <param>
          <type>logical</type>
          <defname>v</defname>
        </param>
        <param>
          <type>logical, intent(out), optional</type>
          <defname>flag</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="389" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="390" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1acd6de264c2861656373e7e218ad56eb5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_parmparse_module::query_string</definition>
        <argsstring>(this, name, v, flag)</argsstring>
        <name>query_string</name>
        <qualifiedname>amrex_parmparse_module::query_string</qualifiedname>
        <param>
          <type>class(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(in)</type>
          <defname>this</defname>
        </param>
        <param>
          <type>character(*), intent(in)</type>
          <defname>name</defname>
        </param>
        <param>
          <type>character(len=:), intent(inout), allocatable</type>
          <defname>v</defname>
        </param>
        <param>
          <type>logical, intent(out), optional</type>
          <defname>flag</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="402" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="403" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1a9f0c429d324a66ca1e016da303a54380" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_parmparse_module::query_intarr</definition>
        <argsstring>(this, name, v, flag)</argsstring>
        <name>query_intarr</name>
        <qualifiedname>amrex_parmparse_module::query_intarr</qualifiedname>
        <param>
          <type>class(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(in)</type>
          <defname>this</defname>
        </param>
        <param>
          <type>character(len=*), intent(in)</type>
          <defname>name</defname>
        </param>
        <param>
          <type>integer, dimension(:), intent(inout), allocatable</type>
          <defname>v</defname>
        </param>
        <param>
          <type>logical, intent(out), optional</type>
          <defname>flag</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="423" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="424" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1a245ee45af4497f0ddc4d08df44b1e9f7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_parmparse_module::query_realarr</definition>
        <argsstring>(this, name, v, flag)</argsstring>
        <name>query_realarr</name>
        <qualifiedname>amrex_parmparse_module::query_realarr</qualifiedname>
        <param>
          <type>class(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(in)</type>
          <defname>this</defname>
        </param>
        <param>
          <type>character(len=*), intent(in)</type>
          <defname>name</defname>
        </param>
        <param>
          <type>real(<ref refid="AMReX__REAL_8H_1a9c34e09baf6d4d1b12637402203f9e9e" kindref="member">amrex_real</ref>), dimension(:), intent(inout), allocatable</type>
          <defname>v</defname>
        </param>
        <param>
          <type>logical, intent(out), optional</type>
          <defname>flag</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="436" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="437" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1a0af881c425f46ca90920da704aa796fb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_parmparse_module::query_stringarr</definition>
        <argsstring>(this, name, v, flag)</argsstring>
        <name>query_stringarr</name>
        <qualifiedname>amrex_parmparse_module::query_stringarr</qualifiedname>
        <param>
          <type>class(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(in)</type>
          <defname>this</defname>
        </param>
        <param>
          <type>character(len=*), intent(in)</type>
          <defname>name</defname>
        </param>
        <param>
          <type>character(len=:), dimension(:), intent(inout), allocatable</type>
          <defname>v</defname>
        </param>
        <param>
          <type>logical, intent(out), optional</type>
          <defname>flag</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="449" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="450" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1ad1323834ed5f154750a5c048591417d4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_parmparse_module::add_int</definition>
        <argsstring>(this, name, v)</argsstring>
        <name>add_int</name>
        <qualifiedname>amrex_parmparse_module::add_int</qualifiedname>
        <param>
          <type>class(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(inout)</type>
          <defname>this</defname>
        </param>
        <param>
          <type>character(*), intent(in)</type>
          <defname>name</defname>
        </param>
        <param>
          <type>integer, intent(in)</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="462" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="463" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1a16ac2996309e06781ceed0ad5df07fc6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_parmparse_module::add_real</definition>
        <argsstring>(this, name, v)</argsstring>
        <name>add_real</name>
        <qualifiedname>amrex_parmparse_module::add_real</qualifiedname>
        <param>
          <type>class(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(inout)</type>
          <defname>this</defname>
        </param>
        <param>
          <type>character(*), intent(in)</type>
          <defname>name</defname>
        </param>
        <param>
          <type>real(<ref refid="AMReX__REAL_8H_1a9c34e09baf6d4d1b12637402203f9e9e" kindref="member">amrex_real</ref>), intent(in)</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="469" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="470" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1ab19ca0a4f0bea4114b9a25f29e0b0eac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_parmparse_module::add_logical</definition>
        <argsstring>(this, name, v)</argsstring>
        <name>add_logical</name>
        <qualifiedname>amrex_parmparse_module::add_logical</qualifiedname>
        <param>
          <type>class(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(inout)</type>
          <defname>this</defname>
        </param>
        <param>
          <type>character(*), intent(in)</type>
          <defname>name</defname>
        </param>
        <param>
          <type>logical, intent(in)</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="476" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="477" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1aac33f326044379b5aa26666d546563e8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_parmparse_module::add_string</definition>
        <argsstring>(this, name, v)</argsstring>
        <name>add_string</name>
        <qualifiedname>amrex_parmparse_module::add_string</qualifiedname>
        <param>
          <type>class(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(inout)</type>
          <defname>this</defname>
        </param>
        <param>
          <type>character(*), intent(in)</type>
          <defname>name</defname>
        </param>
        <param>
          <type>character(*), intent(in)</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="489" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="490" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1a0e75dfabca3b63134005a6f0ddd250cd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_parmparse_module::add_intarr</definition>
        <argsstring>(this, name, v)</argsstring>
        <name>add_intarr</name>
        <qualifiedname>amrex_parmparse_module::add_intarr</qualifiedname>
        <param>
          <type>class(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(inout)</type>
          <defname>this</defname>
        </param>
        <param>
          <type>character(*), intent(in)</type>
          <defname>name</defname>
        </param>
        <param>
          <type>integer, dimension(:), intent(in)</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="496" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="497" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1a1bc87a096eee6a1d0e0c52651c44da88" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_parmparse_module::add_realarr</definition>
        <argsstring>(this, name, v)</argsstring>
        <name>add_realarr</name>
        <qualifiedname>amrex_parmparse_module::add_realarr</qualifiedname>
        <param>
          <type>class(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(inout)</type>
          <defname>this</defname>
        </param>
        <param>
          <type>character(*), intent(in)</type>
          <defname>name</defname>
        </param>
        <param>
          <type>real(<ref refid="AMReX__REAL_8H_1a9c34e09baf6d4d1b12637402203f9e9e" kindref="member">amrex_real</ref>), dimension(:), intent(in)</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="503" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="504" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1a1e0986fe43e8763bc1cef87cfef5e206" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine</type>
        <definition>subroutine amrex_parmparse_module::add_stringarr</definition>
        <argsstring>(this, name, v)</argsstring>
        <name>add_stringarr</name>
        <qualifiedname>amrex_parmparse_module::add_stringarr</qualifiedname>
        <param>
          <type>class(<ref refid="structamrex__parmparse__module_1_1amrex__parmparse" kindref="compound">amrex_parmparse</ref>), intent(inout)</type>
          <defname>this</defname>
        </param>
        <param>
          <type>character(*), intent(in)</type>
          <defname>name</defname>
        </param>
        <param>
          <type>character(len=*), dimension(:), intent(in)</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="510" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="511" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1a2240f47e9202eae11b9c2cf3df63056c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine, public</type>
        <definition>subroutine, public amrex_parmparse_module::amrex_init_namelist</definition>
        <argsstring>(cstr)</argsstring>
        <name>amrex_init_namelist</name>
        <qualifiedname>amrex_parmparse_module::amrex_init_namelist</qualifiedname>
        <param>
          <type>character(kind=c_char), dimension(*), intent(in)</type>
          <defname>cstr</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="532" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="533" bodyend="557"/>
      </memberdef>
      <memberdef kind="function" id="namespaceamrex__parmparse__module_1afa4b2a65f17b770eaf9771705a09b5a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>subroutine, public</type>
        <definition>subroutine, public amrex_parmparse_module::amrex_finalize_namelist</definition>
        <argsstring>()</argsstring>
        <name>amrex_finalize_namelist</name>
        <qualifiedname>amrex_parmparse_module::amrex_finalize_namelist</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="560" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" bodystart="561" bodyend="561"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_parmparse_mod.F90" line="1" column="1"/>
  </compounddef>
</doxygen>
