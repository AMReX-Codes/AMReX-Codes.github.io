<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="AMReX__algoim__K_8H" kind="file" language="C++">
    <compoundname>AMReX_algoim_K.H</compoundname>
    <includes refid="AMReX__algoim_8H" local="no">AMReX_algoim.H</includes>
    <includes refid="AMReX__Array_8H" local="no">AMReX_Array.H</includes>
    <includes local="no">limits</includes>
    <includes local="no">cfloat</includes>
    <includedby refid="AMReX__algoim_8cpp" local="no">/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim.cpp</includedby>
    <incdepgraph>
      <node id="39567">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="39518" relation="include">
        </childnode>
        <childnode refid="39568" relation="include">
        </childnode>
        <childnode refid="39539" relation="include">
        </childnode>
        <childnode refid="39510" relation="include">
        </childnode>
      </node>
      <node id="39592">
        <label>iomanip</label>
      </node>
      <node id="39514">
        <label>functional</label>
      </node>
      <node id="39563">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="39513" relation="include">
        </childnode>
        <childnode refid="39549" relation="include">
        </childnode>
        <childnode refid="39558" relation="include">
        </childnode>
        <childnode refid="39564" relation="include">
        </childnode>
        <childnode refid="39540" relation="include">
        </childnode>
        <childnode refid="39546" relation="include">
        </childnode>
        <childnode refid="39527" relation="include">
        </childnode>
        <childnode refid="39539" relation="include">
        </childnode>
      </node>
      <node id="39555">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="39535" relation="include">
        </childnode>
        <childnode refid="39507" relation="include">
        </childnode>
        <childnode refid="39520" relation="include">
        </childnode>
        <childnode refid="39526" relation="include">
        </childnode>
        <childnode refid="39532" relation="include">
        </childnode>
        <childnode refid="39534" relation="include">
        </childnode>
      </node>
      <node id="39537">
        <label>limits</label>
      </node>
      <node id="39554">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="39515" relation="include">
        </childnode>
        <childnode refid="39526" relation="include">
        </childnode>
      </node>
      <node id="39593">
        <label>AMReX_CudaContainers.H</label>
        <link refid="AMReX__CudaContainers_8H"/>
        <childnode refid="39575" relation="include">
        </childnode>
        <childnode refid="39539" relation="include">
        </childnode>
        <childnode refid="39590" relation="include">
        </childnode>
      </node>
      <node id="39520">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="39521" relation="include">
        </childnode>
        <childnode refid="39522" relation="include">
        </childnode>
        <childnode refid="39533" relation="include">
        </childnode>
        <childnode refid="39510" relation="include">
        </childnode>
        <childnode refid="39534" relation="include">
        </childnode>
        <childnode refid="39540" relation="include">
        </childnode>
        <childnode refid="39541" relation="include">
        </childnode>
        <childnode refid="39532" relation="include">
        </childnode>
        <childnode refid="39527" relation="include">
        </childnode>
        <childnode refid="39542" relation="include">
        </childnode>
        <childnode refid="39539" relation="include">
        </childnode>
        <childnode refid="39509" relation="include">
        </childnode>
        <childnode refid="39531" relation="include">
        </childnode>
      </node>
      <node id="39584">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="39509" relation="include">
        </childnode>
        <childnode refid="39531" relation="include">
        </childnode>
        <childnode refid="39581" relation="include">
        </childnode>
        <childnode refid="39524" relation="include">
        </childnode>
        <childnode refid="39526" relation="include">
        </childnode>
        <childnode refid="39527" relation="include">
        </childnode>
        <childnode refid="39542" relation="include">
        </childnode>
        <childnode refid="39513" relation="include">
        </childnode>
        <childnode refid="39536" relation="include">
        </childnode>
      </node>
      <node id="39506">
        <label>cstdint</label>
      </node>
      <node id="39604">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="39515" relation="include">
        </childnode>
        <childnode refid="39563" relation="include">
        </childnode>
        <childnode refid="39565" relation="include">
        </childnode>
        <childnode refid="39566" relation="include">
        </childnode>
        <childnode refid="39605" relation="include">
        </childnode>
        <childnode refid="39603" relation="include">
        </childnode>
        <childnode refid="39591" relation="include">
        </childnode>
        <childnode refid="39548" relation="include">
        </childnode>
        <childnode refid="39576" relation="include">
        </childnode>
      </node>
      <node id="39565">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="39558" relation="include">
        </childnode>
        <childnode refid="39537" relation="include">
        </childnode>
        <childnode refid="39518" relation="include">
        </childnode>
        <childnode refid="39549" relation="include">
        </childnode>
        <childnode refid="39513" relation="include">
        </childnode>
        <childnode refid="39508" relation="include">
        </childnode>
        <childnode refid="39527" relation="include">
        </childnode>
        <childnode refid="39539" relation="include">
        </childnode>
        <childnode refid="39520" relation="include">
        </childnode>
        <childnode refid="39526" relation="include">
        </childnode>
        <childnode refid="39566" relation="include">
        </childnode>
      </node>
      <node id="39534">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="39521" relation="include">
        </childnode>
        <childnode refid="39535" relation="include">
        </childnode>
        <childnode refid="39536" relation="include">
        </childnode>
        <childnode refid="39537" relation="include">
        </childnode>
        <childnode refid="39538" relation="include">
        </childnode>
        <childnode refid="39523" relation="include">
        </childnode>
        <childnode refid="39510" relation="include">
        </childnode>
        <childnode refid="39532" relation="include">
        </childnode>
        <childnode refid="39527" relation="include">
        </childnode>
        <childnode refid="39539" relation="include">
        </childnode>
        <childnode refid="39525" relation="include">
        </childnode>
        <childnode refid="39507" relation="include">
        </childnode>
        <childnode refid="39524" relation="include">
        </childnode>
        <childnode refid="39509" relation="include">
        </childnode>
      </node>
      <node id="39508">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="39509" relation="include">
        </childnode>
        <childnode refid="39510" relation="include">
        </childnode>
        <childnode refid="39511" relation="include">
        </childnode>
        <childnode refid="39513" relation="include">
        </childnode>
        <childnode refid="39514" relation="include">
        </childnode>
        <childnode refid="39515" relation="include">
        </childnode>
        <childnode refid="39516" relation="include">
        </childnode>
        <childnode refid="39517" relation="include">
        </childnode>
        <childnode refid="39518" relation="include">
        </childnode>
      </node>
      <node id="39556">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
      </node>
      <node id="39583">
        <label>AMReX_GpuLaunchFunctsC.H</label>
        <link refid="AMReX__GpuLaunchFunctsC_8H"/>
      </node>
      <node id="39578">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="39557" relation="include">
        </childnode>
        <childnode refid="39515" relation="include">
        </childnode>
      </node>
      <node id="39539">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="39523" relation="include">
        </childnode>
        <childnode refid="39517" relation="include">
        </childnode>
        <childnode refid="39518" relation="include">
        </childnode>
        <childnode refid="39507" relation="include">
        </childnode>
      </node>
      <node id="39591">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="39530" relation="include">
        </childnode>
        <childnode refid="39568" relation="include">
        </childnode>
        <childnode refid="39592" relation="include">
        </childnode>
        <childnode refid="39508" relation="include">
        </childnode>
        <childnode refid="39567" relation="include">
        </childnode>
        <childnode refid="39566" relation="include">
        </childnode>
      </node>
      <node id="39536">
        <label>cmath</label>
      </node>
      <node id="39602">
        <label>cassert</label>
      </node>
      <node id="39512">
        <label>stdexcept</label>
      </node>
      <node id="39575">
        <label>numeric</label>
      </node>
      <node id="39546">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="39521" relation="include">
        </childnode>
        <childnode refid="39534" relation="include">
        </childnode>
        <childnode refid="39540" relation="include">
        </childnode>
        <childnode refid="39520" relation="include">
        </childnode>
        <childnode refid="39527" relation="include">
        </childnode>
        <childnode refid="39539" relation="include">
        </childnode>
      </node>
      <node id="39543">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="39536" relation="include">
        </childnode>
        <childnode refid="39535" relation="include">
        </childnode>
        <childnode refid="39523" relation="include">
        </childnode>
        <childnode refid="39537" relation="include">
        </childnode>
        <childnode refid="39538" relation="include">
        </childnode>
        <childnode refid="39528" relation="include">
        </childnode>
        <childnode refid="39544" relation="include">
        </childnode>
        <childnode refid="39518" relation="include">
        </childnode>
        <childnode refid="39524" relation="include">
        </childnode>
        <childnode refid="39507" relation="include">
        </childnode>
        <childnode refid="39527" relation="include">
        </childnode>
        <childnode refid="39520" relation="include">
        </childnode>
        <childnode refid="39545" relation="include">
        </childnode>
        <childnode refid="39546" relation="include">
        </childnode>
        <childnode refid="39547" relation="include">
        </childnode>
        <childnode refid="39550" relation="include">
        </childnode>
        <childnode refid="39526" relation="include">
        </childnode>
        <childnode refid="39554" relation="include">
        </childnode>
        <childnode refid="39555" relation="include">
        </childnode>
        <childnode refid="39556" relation="include">
        </childnode>
        <childnode refid="39557" relation="include">
        </childnode>
        <childnode refid="39576" relation="include">
        </childnode>
      </node>
      <node id="39515">
        <label>string</label>
      </node>
      <node id="39590">
        <label>AMReX_CudaAllocators.H</label>
        <link refid="AMReX__CudaAllocators_8H"/>
        <childnode refid="39558" relation="include">
        </childnode>
        <childnode refid="39518" relation="include">
        </childnode>
        <childnode refid="39537" relation="include">
        </childnode>
        <childnode refid="39591" relation="include">
        </childnode>
        <childnode refid="39548" relation="include">
        </childnode>
        <childnode refid="39581" relation="include">
        </childnode>
      </node>
      <node id="39545">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="39520" relation="include">
        </childnode>
      </node>
      <node id="39558">
        <label>map</label>
      </node>
      <node id="39505">
        <label>AMReX_MultiFab.H</label>
        <link refid="AMReX__MultiFab_8H"/>
        <childnode refid="39506" relation="include">
        </childnode>
        <childnode refid="39507" relation="include">
        </childnode>
        <childnode refid="39519" relation="include">
        </childnode>
        <childnode refid="39596" relation="include">
        </childnode>
        <childnode refid="39609" relation="include">
        </childnode>
        <childnode refid="39603" relation="include">
        </childnode>
      </node>
      <node id="39553">
        <label>unordered_set</label>
      </node>
      <node id="39608">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
      </node>
      <node id="39610">
        <label>cfloat</label>
      </node>
      <node id="39607">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="39604" relation="include">
        </childnode>
        <childnode refid="39606" relation="include">
        </childnode>
      </node>
      <node id="39568">
        <label>fstream</label>
      </node>
      <node id="39598">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="39521" relation="include">
        </childnode>
        <childnode refid="39558" relation="include">
        </childnode>
        <childnode refid="39527" relation="include">
        </childnode>
        <childnode refid="39599" relation="include">
        </childnode>
        <childnode refid="39566" relation="include">
        </childnode>
        <childnode refid="39600" relation="include">
        </childnode>
        <childnode refid="39603" relation="include">
        </childnode>
      </node>
      <node id="39606">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="39518" relation="include">
        </childnode>
        <childnode refid="39548" relation="include">
        </childnode>
        <childnode refid="39604" relation="include">
        </childnode>
        <childnode refid="39534" relation="include">
        </childnode>
        <childnode refid="39519" relation="include">
        </childnode>
        <childnode refid="39600" relation="include">
        </childnode>
        <childnode refid="39576" relation="include">
        </childnode>
      </node>
      <node id="39533">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="39526" relation="include">
        </childnode>
      </node>
      <node id="39600">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="39521" relation="include">
        </childnode>
        <childnode refid="39528" relation="include">
        </childnode>
        <childnode refid="39527" relation="include">
        </childnode>
        <childnode refid="39539" relation="include">
        </childnode>
        <childnode refid="39526" relation="include">
        </childnode>
        <childnode refid="39520" relation="include">
        </childnode>
        <childnode refid="39601" relation="include">
        </childnode>
      </node>
      <node id="39527">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="39528" relation="include">
        </childnode>
        <childnode refid="39518" relation="include">
        </childnode>
        <childnode refid="39529" relation="include">
        </childnode>
        <childnode refid="39515" relation="include">
        </childnode>
        <childnode refid="39513" relation="include">
        </childnode>
        <childnode refid="39530" relation="include">
        </childnode>
        <childnode refid="39516" relation="include">
        </childnode>
        <childnode refid="39508" relation="include">
        </childnode>
        <childnode refid="39509" relation="include">
        </childnode>
        <childnode refid="39531" relation="include">
        </childnode>
        <childnode refid="39507" relation="include">
        </childnode>
        <childnode refid="39532" relation="include">
        </childnode>
        <childnode refid="39526" relation="include">
        </childnode>
      </node>
      <node id="39589">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="39509" relation="include">
        </childnode>
        <childnode refid="39531" relation="include">
        </childnode>
        <childnode refid="39557" relation="include">
        </childnode>
      </node>
      <node id="39532">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
      </node>
      <node id="39605">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="39508" relation="include">
        </childnode>
        <childnode refid="39566" relation="include">
        </childnode>
        <childnode refid="39591" relation="include">
        </childnode>
        <childnode refid="39539" relation="include">
        </childnode>
        <childnode refid="39544" relation="include">
        </childnode>
      </node>
      <node id="39524">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
      </node>
      <node id="39577">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="39509" relation="include">
        </childnode>
        <childnode refid="39531" relation="include">
        </childnode>
        <childnode refid="39578" relation="include">
        </childnode>
        <childnode refid="39579" relation="include">
        </childnode>
        <childnode refid="39581" relation="include">
        </childnode>
        <childnode refid="39520" relation="include">
        </childnode>
        <childnode refid="39545" relation="include">
        </childnode>
        <childnode refid="39524" relation="include">
        </childnode>
        <childnode refid="39507" relation="include">
        </childnode>
        <childnode refid="39580" relation="include">
        </childnode>
        <childnode refid="39549" relation="include">
        </childnode>
        <childnode refid="39537" relation="include">
        </childnode>
        <childnode refid="39523" relation="include">
        </childnode>
        <childnode refid="39582" relation="include">
        </childnode>
        <childnode refid="39583" relation="include">
        </childnode>
      </node>
      <node id="39560">
        <label>sys/types.h</label>
      </node>
      <node id="39603">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="39534" relation="include">
        </childnode>
        <childnode refid="39520" relation="include">
        </childnode>
        <childnode refid="39517" relation="include">
        </childnode>
      </node>
      <node id="39574">
        <label>typeinfo</label>
      </node>
      <node id="39516">
        <label>cstdio</label>
      </node>
      <node id="39580">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="39544" relation="include">
        </childnode>
        <childnode refid="39524" relation="include">
        </childnode>
      </node>
      <node id="39531">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="39509" relation="include">
        </childnode>
      </node>
      <node id="39569">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="39570" relation="include">
        </childnode>
        <childnode refid="39515" relation="include">
        </childnode>
        <childnode refid="39529" relation="include">
        </childnode>
        <childnode refid="39530" relation="include">
        </childnode>
        <childnode refid="39516" relation="include">
        </childnode>
        <childnode refid="39535" relation="include">
        </childnode>
        <childnode refid="39571" relation="include">
        </childnode>
        <childnode refid="39572" relation="include">
        </childnode>
        <childnode refid="39573" relation="include">
        </childnode>
      </node>
      <node id="39561">
        <label>unistd.h</label>
      </node>
      <node id="39570">
        <label>stack</label>
      </node>
      <node id="39517">
        <label>vector</label>
      </node>
      <node id="39595">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="39520" relation="include">
        </childnode>
        <childnode refid="39591" relation="include">
        </childnode>
        <childnode refid="39556" relation="include">
        </childnode>
        <childnode refid="39539" relation="include">
        </childnode>
        <childnode refid="39548" relation="include">
        </childnode>
      </node>
      <node id="39507">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="39508" relation="include">
        </childnode>
      </node>
      <node id="39509">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
      </node>
      <node id="39529">
        <label>utility</label>
      </node>
      <node id="39528">
        <label>array</label>
      </node>
      <node id="39596">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="39513" relation="include">
        </childnode>
        <childnode refid="39586" relation="include">
        </childnode>
        <childnode refid="39537" relation="include">
        </childnode>
        <childnode refid="39558" relation="include">
        </childnode>
        <childnode refid="39529" relation="include">
        </childnode>
        <childnode refid="39517" relation="include">
        </childnode>
        <childnode refid="39523" relation="include">
        </childnode>
        <childnode refid="39551" relation="include">
        </childnode>
        <childnode refid="39515" relation="include">
        </childnode>
        <childnode refid="39507" relation="include">
        </childnode>
        <childnode refid="39527" relation="include">
        </childnode>
        <childnode refid="39539" relation="include">
        </childnode>
        <childnode refid="39520" relation="include">
        </childnode>
        <childnode refid="39508" relation="include">
        </childnode>
        <childnode refid="39563" relation="include">
        </childnode>
        <childnode refid="39597" relation="include">
        </childnode>
        <childnode refid="39595" relation="include">
        </childnode>
        <childnode refid="39565" relation="include">
        </childnode>
        <childnode refid="39598" relation="include">
        </childnode>
        <childnode refid="39566" relation="include">
        </childnode>
        <childnode refid="39557" relation="include">
        </childnode>
        <childnode refid="39510" relation="include">
        </childnode>
        <childnode refid="39554" relation="include">
        </childnode>
        <childnode refid="39603" relation="include">
        </childnode>
        <childnode refid="39591" relation="include">
        </childnode>
        <childnode refid="39604" relation="include">
        </childnode>
        <childnode refid="39606" relation="include">
        </childnode>
        <childnode refid="39556" relation="include">
        </childnode>
        <childnode refid="39580" relation="include">
        </childnode>
        <childnode refid="39607" relation="include">
        </childnode>
        <childnode refid="39543" relation="include">
        </childnode>
        <childnode refid="39576" relation="include">
        </childnode>
        <childnode refid="39608" relation="include">
        </childnode>
      </node>
      <node id="39519">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="39520" relation="include">
        </childnode>
        <childnode refid="39543" relation="include">
        </childnode>
        <childnode refid="39526" relation="include">
        </childnode>
        <childnode refid="39532" relation="include">
        </childnode>
        <childnode refid="39595" relation="include">
        </childnode>
        <childnode refid="39536" relation="include">
        </childnode>
      </node>
      <node id="39530">
        <label>sstream</label>
      </node>
      <node id="39609">
        <label>AMReX_FabArrayUtility.H</label>
        <link refid="AMReX__FabArrayUtility_8H"/>
        <childnode refid="39596" relation="include">
        </childnode>
        <childnode refid="39607" relation="include">
        </childnode>
        <childnode refid="39591" relation="include">
        </childnode>
        <childnode refid="39537" relation="include">
        </childnode>
      </node>
      <node id="39511">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="39512" relation="include">
        </childnode>
      </node>
      <node id="39522">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="39523" relation="include">
        </childnode>
        <childnode refid="39509" relation="include">
        </childnode>
        <childnode refid="39524" relation="include">
        </childnode>
        <childnode refid="39525" relation="include">
        </childnode>
      </node>
      <node id="39579">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="39509" relation="include">
        </childnode>
        <childnode refid="39531" relation="include">
        </childnode>
        <childnode refid="39578" relation="include">
        </childnode>
        <childnode refid="39520" relation="include">
        </childnode>
        <childnode refid="39580" relation="include">
        </childnode>
      </node>
      <node id="39566">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="39510" relation="include">
        </childnode>
        <childnode refid="39567" relation="include">
        </childnode>
        <childnode refid="39569" relation="include">
        </childnode>
        <childnode refid="39554" relation="include">
        </childnode>
        <childnode refid="39507" relation="include">
        </childnode>
        <childnode refid="39526" relation="include">
        </childnode>
        <childnode refid="39527" relation="include">
        </childnode>
        <childnode refid="39539" relation="include">
        </childnode>
        <childnode refid="39520" relation="include">
        </childnode>
        <childnode refid="39513" relation="include">
        </childnode>
        <childnode refid="39517" relation="include">
        </childnode>
        <childnode refid="39515" relation="include">
        </childnode>
        <childnode refid="39574" relation="include">
        </childnode>
        <childnode refid="39523" relation="include">
        </childnode>
        <childnode refid="39514" relation="include">
        </childnode>
        <childnode refid="39537" relation="include">
        </childnode>
        <childnode refid="39575" relation="include">
        </childnode>
      </node>
      <node id="39557">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="39535" relation="include">
        </childnode>
        <childnode refid="39513" relation="include">
        </childnode>
        <childnode refid="39515" relation="include">
        </childnode>
        <childnode refid="39558" relation="include">
        </childnode>
        <childnode refid="39559" relation="include">
        </childnode>
        <childnode refid="39544" relation="include">
        </childnode>
        <childnode refid="39560" relation="include">
        </childnode>
        <childnode refid="39561" relation="include">
        </childnode>
        <childnode refid="39562" relation="include">
        </childnode>
        <childnode refid="39507" relation="include">
        </childnode>
        <childnode refid="39526" relation="include">
        </childnode>
        <childnode refid="39527" relation="include">
        </childnode>
        <childnode refid="39539" relation="include">
        </childnode>
        <childnode refid="39520" relation="include">
        </childnode>
        <childnode refid="39563" relation="include">
        </childnode>
        <childnode refid="39565" relation="include">
        </childnode>
        <childnode refid="39566" relation="include">
        </childnode>
      </node>
      <node id="39548">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="39507" relation="include">
        </childnode>
        <childnode refid="39549" relation="include">
        </childnode>
        <childnode refid="39535" relation="include">
        </childnode>
      </node>
      <node id="39541">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="39521" relation="include">
        </childnode>
        <childnode refid="39507" relation="include">
        </childnode>
        <childnode refid="39532" relation="include">
        </childnode>
        <childnode refid="39509" relation="include">
        </childnode>
      </node>
      <node id="39525">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="39513" relation="include">
        </childnode>
        <childnode refid="39526" relation="include">
        </childnode>
        <childnode refid="39527" relation="include">
        </childnode>
      </node>
      <node id="39562">
        <label>sys/wait.h</label>
      </node>
      <node id="39521">
        <label>iosfwd</label>
      </node>
      <node id="39503">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H</label>
        <link refid="AMReX_algoim_K.H"/>
        <childnode refid="39504" relation="include">
        </childnode>
        <childnode refid="39527" relation="include">
        </childnode>
        <childnode refid="39537" relation="include">
        </childnode>
        <childnode refid="39610" relation="include">
        </childnode>
      </node>
      <node id="39535">
        <label>cstdlib</label>
      </node>
      <node id="39573">
        <label>cfenv</label>
      </node>
      <node id="39513">
        <label>iostream</label>
      </node>
      <node id="39540">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="39521" relation="include">
        </childnode>
        <childnode refid="39510" relation="include">
        </childnode>
        <childnode refid="39534" relation="include">
        </childnode>
        <childnode refid="39532" relation="include">
        </childnode>
      </node>
      <node id="39504">
        <label>AMReX_algoim.H</label>
        <link refid="AMReX__algoim_8H"/>
        <childnode refid="39505" relation="include">
        </childnode>
      </node>
      <node id="39542">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="39534" relation="include">
        </childnode>
      </node>
      <node id="39549">
        <label>cstddef</label>
      </node>
      <node id="39564">
        <label>unordered_map</label>
      </node>
      <node id="39597">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="39521" relation="include">
        </childnode>
        <childnode refid="39540" relation="include">
        </childnode>
        <childnode refid="39520" relation="include">
        </childnode>
        <childnode refid="39534" relation="include">
        </childnode>
        <childnode refid="39546" relation="include">
        </childnode>
      </node>
      <node id="39576">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="39509" relation="include">
        </childnode>
        <childnode refid="39531" relation="include">
        </childnode>
        <childnode refid="39577" relation="include">
        </childnode>
        <childnode refid="39578" relation="include">
        </childnode>
        <childnode refid="39584" relation="include">
        </childnode>
        <childnode refid="39581" relation="include">
        </childnode>
        <childnode refid="39585" relation="include">
        </childnode>
        <childnode refid="39587" relation="include">
        </childnode>
        <childnode refid="39588" relation="include">
        </childnode>
        <childnode refid="39579" relation="include">
        </childnode>
        <childnode refid="39589" relation="include">
        </childnode>
        <childnode refid="39590" relation="include">
        </childnode>
        <childnode refid="39593" relation="include">
        </childnode>
        <childnode refid="39594" relation="include">
        </childnode>
      </node>
      <node id="39538">
        <label>climits</label>
      </node>
      <node id="39594">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
      </node>
      <node id="39552">
        <label>mutex</label>
      </node>
      <node id="39559">
        <label>chrono</label>
      </node>
      <node id="39582">
        <label>AMReX_GpuLaunchMacrosC.H</label>
        <link refid="AMReX__GpuLaunchMacrosC_8H"/>
      </node>
      <node id="39572">
        <label>csignal</label>
      </node>
      <node id="39550">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="39549" relation="include">
        </childnode>
        <childnode refid="39551" relation="include">
        </childnode>
        <childnode refid="39517" relation="include">
        </childnode>
        <childnode refid="39552" relation="include">
        </childnode>
        <childnode refid="39553" relation="include">
        </childnode>
        <childnode refid="39514" relation="include">
        </childnode>
        <childnode refid="39548" relation="include">
        </childnode>
      </node>
      <node id="39544">
        <label>type_traits</label>
      </node>
      <node id="39551">
        <label>set</label>
      </node>
      <node id="39547">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="39548" relation="include">
        </childnode>
      </node>
      <node id="39510">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
      </node>
      <node id="39587">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="39548" relation="include">
        </childnode>
      </node>
      <node id="39523">
        <label>algorithm</label>
      </node>
      <node id="39581">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="39535" relation="include">
        </childnode>
        <childnode refid="39518" relation="include">
        </childnode>
        <childnode refid="39528" relation="include">
        </childnode>
        <childnode refid="39508" relation="include">
        </childnode>
        <childnode refid="39557" relation="include">
        </childnode>
        <childnode refid="39578" relation="include">
        </childnode>
        <childnode refid="39531" relation="include">
        </childnode>
      </node>
      <node id="39571">
        <label>execinfo.h</label>
      </node>
      <node id="39586">
        <label>cstring</label>
      </node>
      <node id="39601">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="39549" relation="include">
        </childnode>
        <childnode refid="39535" relation="include">
        </childnode>
        <childnode refid="39586" relation="include">
        </childnode>
        <childnode refid="39513" relation="include">
        </childnode>
        <childnode refid="39536" relation="include">
        </childnode>
        <childnode refid="39520" relation="include">
        </childnode>
        <childnode refid="39526" relation="include">
        </childnode>
        <childnode refid="39532" relation="include">
        </childnode>
        <childnode refid="39517" relation="include">
        </childnode>
        <childnode refid="39602" relation="include">
        </childnode>
        <childnode refid="39534" relation="include">
        </childnode>
      </node>
      <node id="39599">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="39537" relation="include">
        </childnode>
        <childnode refid="39508" relation="include">
        </childnode>
        <childnode refid="39526" relation="include">
        </childnode>
        <childnode refid="39527" relation="include">
        </childnode>
        <childnode refid="39539" relation="include">
        </childnode>
        <childnode refid="39520" relation="include">
        </childnode>
      </node>
      <node id="39518">
        <label>memory</label>
      </node>
      <node id="39585">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="39549" relation="include">
        </childnode>
        <childnode refid="39586" relation="include">
        </childnode>
        <childnode refid="39535" relation="include">
        </childnode>
        <childnode refid="39518" relation="include">
        </childnode>
        <childnode refid="39548" relation="include">
        </childnode>
        <childnode refid="39580" relation="include">
        </childnode>
        <childnode refid="39581" relation="include">
        </childnode>
      </node>
      <node id="39588">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="39509" relation="include">
        </childnode>
        <childnode refid="39531" relation="include">
        </childnode>
        <childnode refid="39581" relation="include">
        </childnode>
        <childnode refid="39580" relation="include">
        </childnode>
        <childnode refid="39548" relation="include">
        </childnode>
        <childnode refid="39535" relation="include">
        </childnode>
      </node>
      <node id="39526">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="39524" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="39612">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim.cpp</label>
        <link refid="AMReX__algoim_8cpp"/>
      </node>
      <node id="39611">
        <label>/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H</label>
        <link refid="AMReX_algoim_K.H"/>
        <childnode refid="39612" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structamrex_1_1algoim_1_1EBPlane" prot="public">amrex::algoim::EBPlane</innerclass>
    <innerclass refid="structamrex_1_1algoim_1_1QuadratureRule" prot="public">amrex::algoim::QuadratureRule</innerclass>
    <innerclass refid="structamrex_1_1algoim_1_1QuadratureRule_1_1Node" prot="public">amrex::algoim::QuadratureRule::Node</innerclass>
    <innerclass refid="structamrex_1_1algoim_1_1PsiCode" prot="public">amrex::algoim::PsiCode</innerclass>
    <innerclass refid="structamrex_1_1algoim_1_1BoundingBox" prot="public">amrex::algoim::BoundingBox</innerclass>
    <innerclass refid="structamrex_1_1algoim_1_1Interval" prot="public">amrex::algoim::Interval</innerclass>
    <innerclass refid="structamrex_1_1algoim_1_1ImplicitIntegral" prot="public">amrex::algoim::ImplicitIntegral</innerclass>
    <innerclass refid="structamrex_1_1algoim_1_1ImplicitIntegral_3_010_00_01N_00_01Phi_00_01F_01_4" prot="public">amrex::algoim::ImplicitIntegral&lt; 0, N, Phi, F &gt;</innerclass>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1algoim">amrex::algoim</innernamespace>
    <innernamespace refid="namespaceamrex_1_1algoim_1_1detail">amrex::algoim::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>a<sp/>modified<sp/>version<sp/>of<sp/>Algoim<sp/>developed<sp/>by</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>R.<sp/>Saye,<sp/>SIAM<sp/>J.<sp/>Sci.<sp/>Comput.,<sp/>Vol.<sp/>37,<sp/>No.<sp/>2,<sp/>pp.<sp/>A993-A1019,</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>http://dx.doi.org/10.1137/140966290,<sp/>https://algoim.github.io/.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Algoim<sp/>Copyright<sp/>(c)<sp/>2018,<sp/>The<sp/>Regents<sp/>of<sp/>the<sp/>University<sp/>of</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>California,<sp/>through<sp/>Lawrence<sp/>Berkeley<sp/>National<sp/>Laboratory<sp/>(subject</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>to<sp/>receipt<sp/>of<sp/>any<sp/>required<sp/>approvals<sp/>from<sp/>the<sp/>U.S.<sp/>Dept.<sp/>of</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Energy).<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>AMREX_ALGOIM_K_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_ALGOIM_K_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__algoim_8H" kindref="compound">AMReX_algoim.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__Array_8H" kindref="compound">AMReX_Array.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cfloat&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">algoim<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="structamrex_1_1algoim_1_1EBPlane" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1algoim_1_1EBPlane" kindref="compound">EBPlane</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24" refid="structamrex_1_1algoim_1_1EBPlane_1a3ae6123f45aee26c756d2105c8c903ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;Real,3&gt;</ref><sp/><ref refid="structamrex_1_1algoim_1_1EBPlane_1a3ae6123f45aee26c756d2105c8c903ab" kindref="member">cent</ref>{};</highlight></codeline>
<codeline lineno="25" refid="structamrex_1_1algoim_1_1EBPlane_1af7a978343150dd58b5d75114ad774fbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;Real,3&gt;</ref><sp/><ref refid="structamrex_1_1algoim_1_1EBPlane_1af7a978343150dd58b5d75114ad774fbe" kindref="member">norm</ref>{};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1algoim_1_1EBPlane_1a99b33ff9062162a71e2f1533c76c3a3e" kindref="member">EBPlane</ref><sp/>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr</highlight></codeline>
<codeline lineno="31" refid="structamrex_1_1algoim_1_1EBPlane_1a7c2e51a599be952eca2b472845b39ae4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1algoim_1_1EBPlane_1a7c2e51a599be952eca2b472845b39ae4" kindref="member">EBPlane</ref><sp/>(<ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;Real,3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>c,<sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;Real,3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>n)<sp/>noexcept</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1algoim_1_1EBPlane_1a3ae6123f45aee26c756d2105c8c903ab" kindref="member">cent</ref>(c),<sp/><ref refid="structamrex_1_1algoim_1_1EBPlane_1af7a978343150dd58b5d75114ad774fbe" kindref="member">norm</ref>(n)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr</highlight></codeline>
<codeline lineno="37" refid="structamrex_1_1algoim_1_1EBPlane_1adf23bf8265a3989c1a637df965da16c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1algoim_1_1EBPlane_1adf23bf8265a3989c1a637df965da16c9" kindref="member">EBPlane</ref><sp/>(Real<sp/>cx,<sp/>Real<sp/>cy,<sp/>Real<sp/>cz,<sp/>Real<sp/>nx,<sp/>Real<sp/>ny,<sp/>Real<sp/>nz)<sp/>noexcept</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structamrex_1_1algoim_1_1EBPlane_1a3ae6123f45aee26c756d2105c8c903ab" kindref="member">cent</ref>{cx,cy,cz},<sp/><ref refid="structamrex_1_1algoim_1_1EBPlane_1af7a978343150dd58b5d75114ad774fbe" kindref="member">norm</ref>{nx,ny,nz}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="42" refid="structamrex_1_1algoim_1_1EBPlane_1ac56d4e24891fdae19c88f32f77305ced" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><ref refid="structamrex_1_1algoim_1_1EBPlane_1ac56d4e24891fdae19c88f32f77305ced" kindref="member">operator() </ref>(Real<sp/>x,<sp/>Real<sp/>y,<sp/>Real<sp/>z)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x-<ref refid="structamrex_1_1algoim_1_1EBPlane_1a3ae6123f45aee26c756d2105c8c903ab" kindref="member">cent</ref>[0])*<ref refid="structamrex_1_1algoim_1_1EBPlane_1af7a978343150dd58b5d75114ad774fbe" kindref="member">norm</ref>[0]<sp/>+<sp/>(y-<ref refid="structamrex_1_1algoim_1_1EBPlane_1a3ae6123f45aee26c756d2105c8c903ab" kindref="member">cent</ref>[1])*<ref refid="structamrex_1_1algoim_1_1EBPlane_1af7a978343150dd58b5d75114ad774fbe" kindref="member">norm</ref>[1]<sp/>+<sp/>(z-<ref refid="structamrex_1_1algoim_1_1EBPlane_1a3ae6123f45aee26c756d2105c8c903ab" kindref="member">cent</ref>[2])*<ref refid="structamrex_1_1algoim_1_1EBPlane_1af7a978343150dd58b5d75114ad774fbe" kindref="member">norm</ref>[2];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="48" refid="structamrex_1_1algoim_1_1EBPlane_1a289724cd28f09eb3d384c5a9f432c082" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><ref refid="structamrex_1_1algoim_1_1EBPlane_1ac56d4e24891fdae19c88f32f77305ced" kindref="member">operator() </ref>(<ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;Real,3&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>p)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(p[0]-<ref refid="structamrex_1_1algoim_1_1EBPlane_1a3ae6123f45aee26c756d2105c8c903ab" kindref="member">cent</ref>[0])*<ref refid="structamrex_1_1algoim_1_1EBPlane_1af7a978343150dd58b5d75114ad774fbe" kindref="member">norm</ref>[0]<sp/>+<sp/>(p[1]-<ref refid="structamrex_1_1algoim_1_1EBPlane_1a3ae6123f45aee26c756d2105c8c903ab" kindref="member">cent</ref>[1])*<ref refid="structamrex_1_1algoim_1_1EBPlane_1af7a978343150dd58b5d75114ad774fbe" kindref="member">norm</ref>[1]</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><sp/>(p[2]-<ref refid="structamrex_1_1algoim_1_1EBPlane_1a3ae6123f45aee26c756d2105c8c903ab" kindref="member">cent</ref>[2])*<ref refid="structamrex_1_1algoim_1_1EBPlane_1af7a978343150dd58b5d75114ad774fbe" kindref="member">norm</ref>[2];</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="55" refid="structamrex_1_1algoim_1_1EBPlane_1aa39038dcf72fcf8a8b57513432875bf2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><ref refid="structamrex_1_1algoim_1_1EBPlane_1aa39038dcf72fcf8a8b57513432875bf2" kindref="member">grad</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1algoim_1_1EBPlane_1af7a978343150dd58b5d75114ad774fbe" kindref="member">norm</ref>[d];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="structamrex_1_1algoim_1_1QuadratureRule" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1algoim_1_1QuadratureRule" kindref="compound">QuadratureRule</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63" refid="structamrex_1_1algoim_1_1QuadratureRule_1_1Node" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1algoim_1_1QuadratureRule_1_1Node" kindref="compound">Node</ref></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65" refid="structamrex_1_1algoim_1_1QuadratureRule_1_1Node_1a5f9f48bbbd30d20b1b08061b621b46e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>x,<sp/>y,<sp/><ref refid="structamrex_1_1algoim_1_1QuadratureRule_1_1Node_1a5f9f48bbbd30d20b1b08061b621b46e6" kindref="member">z</ref>,<sp/>w;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="67" refid="structamrex_1_1algoim_1_1QuadratureRule_1af7ae531fe1e05325b891c107d2276c12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nnodes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="68" refid="structamrex_1_1algoim_1_1QuadratureRule_1aff9ac4f971a67e107e2cf55dd95fad21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;Node,256&gt;</ref><sp/><ref refid="structamrex_1_1algoim_1_1QuadratureRule_1aff9ac4f971a67e107e2cf55dd95fad21" kindref="member">nodes</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>Real</highlight></codeline>
<codeline lineno="73" refid="structamrex_1_1algoim_1_1QuadratureRule_1ab49f0d215d0f61cdc48cefdfda4ed845" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1algoim_1_1EBPlane_1ac56d4e24891fdae19c88f32f77305ced" kindref="member">operator() </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>F&amp;<sp/>f)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nnodes;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>+=<sp/>f(nodes[i].x,nodes[i].y,nodes[i].z)<sp/>*<sp/>nodes[i].w;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1af7feff7858c7b1d3557509d883c46674" kindref="member">AMREX_GPU_HOST</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>Real</highlight></codeline>
<codeline lineno="85" refid="structamrex_1_1algoim_1_1QuadratureRule_1ade3a8b7cb056567a40e8be98e24d3260" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1algoim_1_1QuadratureRule_1ade3a8b7cb056567a40e8be98e24d3260" kindref="member">eval</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>F&amp;<sp/>f)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nnodes;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>+=<sp/>f(nodes[i].x,nodes[i].y,nodes[i].z)<sp/>*<sp/>nodes[i].w;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>evalIntegrand<sp/>records<sp/>quadrature<sp/>nodes<sp/>when<sp/>it<sp/>is<sp/>invoked<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ImplicitIntegral</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="structamrex_1_1algoim_1_1QuadratureRule_1a93e5266e3de3f1d636f081e118526ea2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1algoim_1_1QuadratureRule_1a93e5266e3de3f1d636f081e118526ea2" kindref="member">evalIntegrand</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;Real,3&gt;</ref>&amp;<sp/>x_,<sp/>Real<sp/>w_)<sp/>noexcept</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[nnodes].x<sp/>=<sp/>x_[0];</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[nnodes].y<sp/>=<sp/>x_[1];</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[nnodes].z<sp/>=<sp/>x_[2];</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[nnodes].w<sp/>=<sp/>w_;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nnodes;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal">};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="namespaceamrex_1_1algoim_1_1detail" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref></highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="112" refid="namespaceamrex_1_1algoim_1_1detail_1a71b582d94d1c5cd614711ec7b7853192" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1algoim_1_1detail_1a71b582d94d1c5cd614711ec7b7853192" kindref="member">swap</ref><sp/>(T&amp;<sp/>a,<sp/>T&amp;<sp/>b)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>c(a);<sp/>a=b;<sp/>b=c;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Determines<sp/>the<sp/>sign<sp/>conditions<sp/>for<sp/>restricting<sp/>a<sp/>(possibly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>already<sp/>restricted)<sp/>level<sp/>set<sp/>function,<sp/>i.e.,<sp/>sgn_L<sp/>and<sp/>sgn_U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>[R.<sp/>Saye,<sp/>High-Order<sp/>Quadrature<sp/>Methods<sp/>for<sp/>Implicitly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Defined<sp/>Surfaces<sp/>and<sp/>Volumes<sp/>in<sp/>Hyperrectangles,<sp/>SIAM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>J.<sp/>Sci.<sp/>Comput.,<sp/>Vol.<sp/>37,<sp/>No.<sp/>2,<sp/>pp.<sp/>A993-A1019,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>http://dx.doi.org/10.1137/140966290].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="namespaceamrex_1_1algoim_1_1detail_1a33dac9049a534e2243c78895a72992a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1algoim_1_1detail_1a33dac9049a534e2243c78895a72992a9" kindref="member">determineSigns</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>positiveAbove,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sign,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>bottomSign,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>topSign)<sp/>noexcept</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>evaluating<sp/>a<sp/>volume<sp/>integral:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>If<sp/>0<sp/>integrating<sp/>over<sp/>the<sp/>positive<sp/>part:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>positive<sp/>above<sp/>the<sp/>height<sp/>function:<sp/>bottom<sp/>=<sp/>+/-,<sp/>top<sp/>=<sp/>+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>positive<sp/>below<sp/>the<sp/>height<sp/>function:<sp/>bottom<sp/>=<sp/>+,<sp/>top<sp/>=<sp/>+/-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>If<sp/>integrating<sp/>over<sp/>the<sp/>negative<sp/>part:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>positive<sp/>above<sp/>the<sp/>height<sp/>function:<sp/>bottom<sp/>=<sp/>-,<sp/>top<sp/>=<sp/>+/-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>positive<sp/>below<sp/>the<sp/>height<sp/>function:<sp/>bottom<sp/>=<sp/>+/-,<sp/>top<sp/>=<sp/>-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>If<sp/>integrating<sp/>over<sp/>both<sp/>the<sp/>positive<sp/>and<sp/>negative<sp/>part<sp/>(i.e.<sp/>unrestricted<sp/>in<sp/>sign),<sp/>keep<sp/>it<sp/>alive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sign<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomSign<sp/>=<sp/>positiveAbove?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topSign<sp/>=<sp/>positiveAbove?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sign<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomSign<sp/>=<sp/>positiveAbove?<sp/>-1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topSign<sp/>=<sp/>positiveAbove?<sp/>0<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomSign<sp/>=<sp/>topSign<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PsiCode<sp/>encodes<sp/>sign<sp/>information<sp/>of<sp/>restricted<sp/>level<sp/>set<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/>on<sp/>particular<sp/>sides<sp/>of<sp/>a<sp/>hyperrectangle<sp/>in<sp/>a<sp/>packed<sp/>array<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bits.<sp/>The<sp/>first<sp/>N<sp/>bits<sp/>encodes<sp/>side<sp/>information,<sp/>the<sp/>N+1st<sp/>bit<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>true<sp/>iff<sp/>the<sp/>sign<sp/>==<sp/>0,<sp/>while<sp/>the<sp/>N+2nd<sp/>bit<sp/>stores<sp/>the<sp/>sign<sp/>if<sp/>sign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/>!=<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="156" refid="structamrex_1_1algoim_1_1PsiCode" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1algoim_1_1PsiCode" kindref="compound">PsiCode</ref></highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158" refid="structamrex_1_1algoim_1_1PsiCode_1a80ddd826639ec72c71ba72a3c6dfc09a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>bits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref><sp/>constexpr</highlight></codeline>
<codeline lineno="161" refid="structamrex_1_1algoim_1_1PsiCode_1ac0b4e0c04c778ce82f9097ed209d05f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1algoim_1_1PsiCode_1ac0b4e0c04c778ce82f9097ed209d05f2" kindref="member">PsiCode</ref><sp/>()<sp/>noexcept<sp/>{}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="164" refid="structamrex_1_1algoim_1_1PsiCode_1ac85d103050ea6acd04b2a2b4e55ee8d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1algoim_1_1PsiCode_1ac85d103050ea6acd04b2a2b4e55ee8d4" kindref="member">PsiCode</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;int,N&gt;</ref>&amp;<sp/>sides,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sign)<sp/>noexcept</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(N<sp/>&lt;=<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;algoim::PsiCode:<sp/>N<sp/>must<sp/>be<sp/>&lt;=<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim<sp/>=<sp/>0;<sp/>dim<sp/>&lt;<sp/>N;<sp/>++dim)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sides[dim]<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>dim);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sign<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>N);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>N);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sign<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>(N+1));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Modify<sp/>an<sp/>existing<sp/>code<sp/>by<sp/>restriction<sp/>in<sp/>a<sp/>particular<sp/>dimension.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="184" refid="structamrex_1_1algoim_1_1PsiCode_1a791226bc3dff2637e4a5dacb30c25ec0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1algoim_1_1PsiCode_1a791226bc3dff2637e4a5dacb30c25ec0" kindref="member">PsiCode</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1algoim_1_1PsiCode" kindref="compound">PsiCode</ref>&amp;<sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>side,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sign)<sp/>noexcept</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bits(i.bits)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(side<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>dim);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sign<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>N);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>N);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sign<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>(N+1));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="201" refid="structamrex_1_1algoim_1_1PsiCode_1a079589b947e48000160801106e65d2fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1algoim_1_1PsiCode_1a079589b947e48000160801106e65d2fe" kindref="member">side</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bits<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>dim);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="207" refid="structamrex_1_1algoim_1_1PsiCode_1a47d12f0c6eef6f8e1f3f3d205d37c958" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1algoim_1_1PsiCode_1a47d12f0c6eef6f8e1f3f3d205d37c958" kindref="member">sign</ref><sp/>()<sp/>const<sp/>noexcept</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bits<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>N))<sp/>?<sp/>0<sp/>:<sp/>((bits<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>(N+1)))<sp/>?<sp/>1<sp/>:<sp/>-1);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal">};</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="214" refid="structamrex_1_1algoim_1_1BoundingBox" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1algoim_1_1BoundingBox" kindref="compound">BoundingBox</ref></highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216" refid="structamrex_1_1algoim_1_1BoundingBox_1a12d172b57d7ec240c1b12600be045820" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>Real<sp/><ref refid="structamrex_1_1algoim_1_1BoundingBox_1a12d172b57d7ec240c1b12600be045820" kindref="member">min</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*dim*/</highlight><highlight class="normal">)<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-0.5;<sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="structamrex_1_1algoim_1_1BoundingBox_1a5ddb29896fb93ee72d69b9545d3453b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>Real<sp/><ref refid="structamrex_1_1algoim_1_1BoundingBox_1a5ddb29896fb93ee72d69b9545d3453b1" kindref="member">max</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*dim*/</highlight><highlight class="normal">)<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>0.5;<sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="structamrex_1_1algoim_1_1BoundingBox_1af29ddffe552640cdadd8dec27b352074" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>Real<sp/><ref refid="structamrex_1_1algoim_1_1BoundingBox_1af29ddffe552640cdadd8dec27b352074" kindref="member">extent</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*dim*/</highlight><highlight class="normal">)<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0;<sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="structamrex_1_1algoim_1_1BoundingBox_1a77b0f6867f6784ee3d987eb3de9ac2f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;Real,N&gt;</ref><sp/><ref refid="structamrex_1_1algoim_1_1BoundingBox_1a77b0f6867f6784ee3d987eb3de9ac2f8" kindref="member">midpoint</ref><sp/>()<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;Real,N&gt;</ref>{};</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="structamrex_1_1algoim_1_1BoundingBox_1aeb237522d3043c217b69e736554b4791" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>Real<sp/><ref refid="structamrex_1_1algoim_1_1BoundingBox_1aeb237522d3043c217b69e736554b4791" kindref="member">midpoint</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*dim*/</highlight><highlight class="normal">)<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;<sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="structamrex_1_1algoim_1_1BoundingBox_1a7a62e727685b8e1d48309139944ab28f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>Real<sp/><ref refid="structamrex_1_1algoim_1_1EBPlane_1ac56d4e24891fdae19c88f32f77305ced" kindref="member">operator() </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>side,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*dim*/</highlight><highlight class="normal">)<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(side<sp/>==<sp/>0)<sp/>?<sp/>-0.5<sp/>:<sp/>0.5;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal">};</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="structamrex_1_1algoim_1_1Interval" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1algoim_1_1Interval" kindref="compound">Interval</ref></highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235" refid="structamrex_1_1algoim_1_1Interval_1a017e3af95c08cb7c803eb4717bc2da14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><ref refid="structamrex_1_1algoim_1_1Interval_1a017e3af95c08cb7c803eb4717bc2da14" kindref="member">alpha</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">};</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/>M-dimensional<sp/>integral<sp/>of<sp/>an<sp/>N-dimensional<sp/>function<sp/>restricted<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/>given<sp/>implicitly<sp/>defined<sp/>domains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Phi,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="241" refid="structamrex_1_1algoim_1_1ImplicitIntegral" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1algoim_1_1ImplicitIntegral" kindref="compound">ImplicitIntegral</ref></highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243" refid="structamrex_1_1algoim_1_1ImplicitIntegral_1afeff1f944e669f66896bdc7b76eccc88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Phi&amp;<sp/><ref refid="structamrex_1_1algoim_1_1ImplicitIntegral_1afeff1f944e669f66896bdc7b76eccc88" kindref="member">phi</ref>;</highlight></codeline>
<codeline lineno="244" refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a8e63fff308a2667a803639c70fce0b3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>F&amp;<sp/><ref refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a8e63fff308a2667a803639c70fce0b3b" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="245" refid="structamrex_1_1algoim_1_1ImplicitIntegral_1aff95bdf7c30770f6021900c9eedaad6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;bool,N&gt;</ref><sp/><ref refid="structamrex_1_1algoim_1_1ImplicitIntegral_1aff95bdf7c30770f6021900c9eedaad6b" kindref="member">free</ref>;</highlight></codeline>
<codeline lineno="246" refid="structamrex_1_1algoim_1_1ImplicitIntegral_1ac3aa0501b0844da98bbe89d033795500" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;PsiCode&lt;N&gt;</ref>,1<sp/>&lt;&lt;<sp/>(N<sp/>-<sp/>1)&gt;<sp/>psi;</highlight></codeline>
<codeline lineno="247" refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a203aaaa3e85ca58ba28e40f548b2187d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a203aaaa3e85ca58ba28e40f548b2187d" kindref="member">psiCount</ref>;</highlight></codeline>
<codeline lineno="248" refid="structamrex_1_1algoim_1_1ImplicitIntegral_1aa572c858d18a32a5834232222e0de86c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1algoim_1_1BoundingBox" kindref="compound">BoundingBox&lt;N&gt;</ref><sp/><ref refid="structamrex_1_1algoim_1_1ImplicitIntegral_1aa572c858d18a32a5834232222e0de86c" kindref="member">xrange</ref>;</highlight></codeline>
<codeline lineno="249" refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a34411c4dfd852959acaf447507c352ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a34411c4dfd852959acaf447507c352ed" kindref="member">e0</ref>;</highlight></codeline>
<codeline lineno="250" refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a34d771a65448161c411faaf972a6484f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;Interval,N&gt;</ref><sp/><ref refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a34d771a65448161c411faaf972a6484f" kindref="member">xint</ref>;</highlight></codeline>
<codeline lineno="251" refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a13134ba4058f5552958fee4a6fdc0870" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prune<sp/>the<sp/>given<sp/>set<sp/>of<sp/>functions<sp/>by<sp/>checking<sp/>for<sp/>the<sp/>existence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>interface.<sp/>If<sp/>a<sp/>function<sp/>is<sp/>uniformly<sp/>positive<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>negative<sp/>and<sp/>is<sp/>consistent<sp/>with<sp/>specified<sp/>sign,<sp/>it<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>removed.<sp/>If<sp/>a<sp/>function<sp/>is<sp/>uniformly<sp/>positive<sp/>or<sp/>negative<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inconsistent<sp/>with<sp/>specified<sp/>sign,<sp/>the<sp/>domain<sp/>of<sp/>integration<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="260" refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a01778cc8af617214c39143de93bb5e6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a01778cc8af617214c39143de93bb5e6a" kindref="member">prune</ref><sp/>()<sp/>noexcept</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__CUDACC__)<sp/>||<sp/>(__CUDACC_VER_MAJOR__<sp/>!=<sp/>9)<sp/>||<sp/>(__CUDACC_VER_MINOR__<sp/>!=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>Real<sp/><ref refid="namespaceamrex__mlnodelap__1d__module_1acd6b1ade8a1da7f6e305b37870472967" kindref="member">eps</ref><sp/>=<sp/>std::numeric_limits&lt;Real&gt;::epsilon();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>Real<sp/>eps<sp/>=<sp/>DBL_EPSILON;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>Real<sp/>almostone<sp/>=<sp/>1.0-10.*<ref refid="namespaceamrex__mlnodelap__1d__module_1acd6b1ade8a1da7f6e305b37870472967" kindref="member">eps</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>psiCount;<sp/>)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;Real,N&gt;</ref><sp/>mid<sp/>=<sp/>xrange.<ref refid="structamrex_1_1algoim_1_1BoundingBox_1a77b0f6867f6784ee3d987eb3de9ac2f8" kindref="member">midpoint</ref>();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>dphi_max<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim<sp/>=<sp/>0;<sp/>dim<sp/>&lt;<sp/>N;<sp/>++dim)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(free[dim])<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dphi_max<sp/>+=<sp/><ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(phi.grad(dim));</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mid[dim]<sp/>=<sp/>xrange(psi[i].side(dim),dim);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dphi_max<sp/>*=<sp/>0.5*almostone;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Real<sp/>phi_0<sp/>=<sp/>phi(mid);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>uniform_sign<sp/>=<sp/>(phi_0<sp/>&gt;<sp/>dphi_max)<sp/>or<sp/>(phi_0<sp/>&lt;<sp/>-dphi_max);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uniform_sign)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((phi_0<sp/>&gt;=<sp/>0.0<sp/>and<sp/>psi[i].sign()<sp/>&gt;=<sp/>0)<sp/>or</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(phi_0<sp/>&lt;=<sp/>0.0<sp/>and<sp/>psi[i].sign()<sp/>&lt;=<sp/>0)<sp/>)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--psiCount;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1algoim_1_1detail_1a71b582d94d1c5cd614711ec7b7853192" kindref="member">detail::swap</ref>(psi[i],<sp/>psi[psiCount]);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gaussian<sp/>quadrature<sp/>for<sp/>when<sp/>the<sp/>domain<sp/>of<sp/>integration<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determined<sp/>to<sp/>be<sp/>the<sp/>entire<sp/>M-dimensional<sp/>cube.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="304" refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a4c3a229f570e434e2c56fdf8bee3425d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a4c3a229f570e434e2c56fdf8bee3425d" kindref="member">tensorProductIntegral</ref><sp/>()<sp/>noexcept</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>Real<sp/>gauss_x[4]={0.069431844202973712388026755553595247452,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.33000947820757186759866712044837765640,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.66999052179242813240133287955162234360,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.93056815579702628761197324444640475255};</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>Real<sp/>gauss_w[4]={0.173927422568726928686531974610999703618,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.326072577431273071313468025389000296382,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.326072577431273071313468025389000296382,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.173927422568726928686531974610999703618};</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nloops<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>M;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nloops<sp/>*=<sp/>p;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;int,M&gt;</ref><sp/>i{};<sp/></highlight><highlight class="comment">//<sp/>i<sp/>is<sp/>initialized<sp/>to<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iloop<sp/>=<sp/>0;<sp/>iloop<sp/>&lt;<sp/>nloops;<sp/>++iloop)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;Real,N&gt;</ref><sp/>x{};</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>w<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim<sp/>=<sp/>0,<sp/>k<sp/>=<sp/>0;<sp/>dim<sp/>&lt;<sp/>N;<sp/>++dim)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(free[dim])<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[dim]<sp/>=<sp/>xrange.<ref refid="structamrex_1_1algoim_1_1BoundingBox_1a12d172b57d7ec240c1b12600be045820" kindref="member">min</ref>(dim)<sp/>+<sp/>xrange.<ref refid="structamrex_1_1algoim_1_1BoundingBox_1af29ddffe552640cdadd8dec27b352074" kindref="member">extent</ref>(dim)<sp/>*<sp/>gauss_x[i[k]];</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>*=<sp/>xrange.<ref refid="structamrex_1_1algoim_1_1BoundingBox_1af29ddffe552640cdadd8dec27b352074" kindref="member">extent</ref>(dim)<sp/>*<sp/>gauss_w[i[k]];</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++k;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.evalIntegrand(x,<sp/>w);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>M-1;<sp/>m<sp/>&gt;=<sp/>0;<sp/>--m)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++(i[m]);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i[m]<sp/>&lt;<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i[m]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Given<sp/>x,<sp/>valid<sp/>in<sp/>all<sp/>free<sp/>variables<sp/>barring<sp/>e0,<sp/>root<sp/>find<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>e0<sp/>direction<sp/>on<sp/>each<sp/>of<sp/>the<sp/>implicit<sp/>functions,<sp/>and<sp/>apply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gaussian<sp/>quadrature<sp/>to<sp/>each<sp/>segment.<sp/>Weights<sp/>are<sp/>multiplied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>upon<sp/>going<sp/>back<sp/>up<sp/>the<sp/>tree<sp/>of<sp/>recursive<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="349" refid="structamrex_1_1algoim_1_1ImplicitIntegral_1ab0b0d21b0436db3368df308ac574a8ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1algoim_1_1ImplicitIntegral_1ab0b0d21b0436db3368df308ac574a8ec" kindref="member">evalIntegrand</ref><sp/>(<ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;Real,N&gt;</ref><sp/>x,<sp/>Real<sp/>w)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>Real<sp/>gauss_x[4]={0.069431844202973712388026755553595247452,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.33000947820757186759866712044837765640,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.66999052179242813240133287955162234360,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.93056815579702628761197324444640475255};</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>Real<sp/>gauss_w[4]={0.173927422568726928686531974610999703618,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.326072577431273071313468025389000296382,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.326072577431273071313468025389000296382,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.173927422568726928686531974610999703618};</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>thread<sp/>has<sp/>its<sp/>own<sp/>storage<sp/>for<sp/>computing<sp/>roots.<sp/>These</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>not<sp/>corrupted<sp/>by<sp/>the<sp/>recursive<sp/>chain<sp/>of<sp/>evalIntegrand()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calls<sp/>since<sp/>each<sp/>call<sp/>is<sp/>in<sp/>a<sp/>different<sp/>templated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace.<sp/>Moreover,<sp/>if<sp/>using<sp/>OpenMP<sp/>tasking,<sp/>each<sp/>task<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assumed<sp/>tied<sp/>and<sp/>so<sp/>one<sp/>thread<sp/>can<sp/>only<sp/>execute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;evalIntegrand&quot;<sp/>from<sp/>start<sp/>to<sp/>end<sp/>uninterrupted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;Real,4&gt;</ref><sp/>roots;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Partition<sp/>[xmin(e0),<sp/>xmax(e0)]<sp/>by<sp/>roots<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>x_min<sp/>=<sp/>xrange.<ref refid="structamrex_1_1algoim_1_1BoundingBox_1a12d172b57d7ec240c1b12600be045820" kindref="member">min</ref>(e0);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>x_max<sp/>=<sp/>xrange.<ref refid="structamrex_1_1algoim_1_1BoundingBox_1a5ddb29896fb93ee72d69b9545d3453b1" kindref="member">max</ref>(e0);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roots[0]<sp/>=<sp/>x_min;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nroots<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>psiCount;<sp/>++i)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim<sp/>=<sp/>0;<sp/>dim<sp/>&lt;<sp/>N;<sp/>++dim)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!free[dim])<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[dim]<sp/>=<sp/>xrange(psi[i].side(dim),dim);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>is<sp/>now<sp/>valid<sp/>in<sp/>all<sp/>variables<sp/>except<sp/>e0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[e0]<sp/>=<sp/>x_min;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>phi_lo<sp/>=<sp/>phi(x);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>xroot<sp/>=<sp/>x[e0]<sp/>-<sp/>phi_lo<sp/>/<sp/>phi.grad(e0);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xroot<sp/>&gt;<sp/>x_min<sp/>and<sp/>xroot<sp/>&lt;<sp/>x_max)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roots[nroots++]<sp/>=<sp/>xroot;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(nroots<sp/>&lt;=<sp/>3);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nroots<sp/>==<sp/>3<sp/>and<sp/>roots[1]<sp/>&gt;<sp/>roots[2])<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1algoim_1_1detail_1a71b582d94d1c5cd614711ec7b7853192" kindref="member">detail::swap</ref>(roots[1],roots[2]);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>roots[nroots++]<sp/>=<sp/>x_max;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>rare<sp/>cases,<sp/>degenerate<sp/>segments<sp/>can<sp/>be<sp/>found,<sp/>filter<sp/>out<sp/>with<sp/>a<sp/>tolerance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__CUDACC__)<sp/>||<sp/>(__CUDACC_VER_MAJOR__<sp/>!=<sp/>9)<sp/>||<sp/>(__CUDACC_VER_MINOR__<sp/>!=<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>Real<sp/><ref refid="namespaceamrex__mlnodelap__1d__module_1acd6b1ade8a1da7f6e305b37870472967" kindref="member">eps</ref><sp/>=<sp/>std::numeric_limits&lt;Real&gt;::epsilon();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>Real<sp/>eps<sp/>=<sp/>DBL_EPSILON;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>Real<sp/>tol<sp/>=<sp/>50.0*<ref refid="namespaceamrex__mlnodelap__1d__module_1acd6b1ade8a1da7f6e305b37870472967" kindref="member">eps</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>segments<sp/>of<sp/>divided<sp/>interval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nroots<sp/>-<sp/>1;<sp/>++i)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(roots[i+1]<sp/>-<sp/>roots[i]<sp/>&lt;<sp/>tol)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Evaluate<sp/>sign<sp/>of<sp/>phi<sp/>within<sp/>segment<sp/>and<sp/>check<sp/>for<sp/>consistency<sp/>with<sp/>psi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>okay<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[e0]<sp/>=<sp/>(roots[i]<sp/>+<sp/>roots[i+1])*0.5;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>psiCount<sp/>&amp;&amp;<sp/>okay;<sp/>++j)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim<sp/>=<sp/>0;<sp/>dim<sp/>&lt;<sp/>N;<sp/>++dim)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!free[dim])<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[dim]<sp/>=<sp/>xrange(psi[j].side(dim),<sp/>dim);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>new_ok<sp/>=<sp/>(phi(x)<sp/>&gt;<sp/>0.0)<sp/>?<sp/>(psi[j].sign()<sp/>&gt;=<sp/>0)<sp/>:<sp/>(psi[j].sign()<sp/>&lt;=<sp/>0);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>okay<sp/>=<sp/>okay<sp/>and<sp/>new_ok;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!okay)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>p;<sp/>++j)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x[e0]<sp/>=<sp/>roots[i]<sp/>+<sp/>(roots[i+1]<sp/>-<sp/>roots[i])<sp/>*<sp/>gauss_x[j];</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>gw<sp/>=<sp/>(roots[i+1]<sp/>-<sp/>roots[i])<sp/>*<sp/>gauss_w[j];</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.evalIntegrand(x,<sp/>w<sp/>*<sp/>gw);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Main<sp/>calling<sp/>engine;<sp/>parameters<sp/>with<sp/>underscores<sp/>are<sp/>copied</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>upon<sp/>entry<sp/>but<sp/>modified<sp/>internally<sp/>in<sp/>the<sp/>ctor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="434" refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a232bc3b4d353e6a79245b435ba1c15d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1algoim_1_1ImplicitIntegral_1a232bc3b4d353e6a79245b435ba1c15d7" kindref="member">ImplicitIntegral</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Phi&amp;<sp/>phi_,<sp/>F&amp;<sp/>f_,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;bool,N&gt;</ref>&amp;<sp/>free_,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray</ref>&lt;<ref refid="structamrex_1_1algoim_1_1PsiCode" kindref="compound">PsiCode&lt;N&gt;</ref>,1<sp/>&lt;&lt;<sp/>(N-1)&gt;&amp;<sp/>psi_,</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>psiCount_)<sp/>noexcept</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>phi(phi_),<sp/>f(f_),<sp/>free(free_),<sp/>psi(psi_),<sp/>psiCount(psiCount_),</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xrange()</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>one-dimensional<sp/>base<sp/>case,<sp/>evaluate<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bottom-level<sp/>integral.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(M<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim<sp/>=<sp/>0;<sp/>dim<sp/>&lt;<sp/>N;<sp/>++dim)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(free[dim])<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e0<sp/>=<sp/>dim;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evalIntegrand(<ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;Real,N&gt;</ref>{},<sp/>1.0);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Establish<sp/>interval<sp/>bounds<sp/>for<sp/>prune()<sp/>and<sp/>remaining<sp/>part<sp/>of<sp/>ctor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim<sp/>=<sp/>0;<sp/>dim<sp/>&lt;<sp/>N;<sp/>++dim)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(free[dim])</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xint[dim].alpha<sp/>=<sp/>xrange.<ref refid="structamrex_1_1algoim_1_1BoundingBox_1a77b0f6867f6784ee3d987eb3de9ac2f8" kindref="member">midpoint</ref>(dim);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xint[dim].alpha<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prune<sp/>list<sp/>of<sp/>psi<sp/>functions:<sp/>if<sp/>prune<sp/>procedure<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>false,<sp/>then<sp/>the<sp/>domain<sp/>of<sp/>integration<sp/>is<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!prune())<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>all<sp/>psi<sp/>functions<sp/>were<sp/>pruned,<sp/>then<sp/>the<sp/>volumetric</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>integral<sp/>domain<sp/>is<sp/>the<sp/>entire<sp/>hyperrectangle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(psiCount<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensorProductIntegral();</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Among<sp/>all<sp/>monotone<sp/>height<sp/>function<sp/>directions,<sp/>choose<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>that<sp/>makes<sp/>the<sp/>associated<sp/>height<sp/>function<sp/>look<sp/>as<sp/>flat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>possible.<sp/><sp/>This<sp/>is<sp/>a<sp/>modification<sp/>to<sp/>the<sp/>criterion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>presented<sp/>in<sp/>[R.<sp/>Saye,<sp/>High-Order<sp/>Quadrature<sp/>Methods<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Implicitly<sp/>Defined<sp/>Surfaces<sp/>and<sp/>Volumes<sp/>in<sp/>Hyperrectangles,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SIAM<sp/>J.<sp/>Sci.<sp/>Comput.,<sp/>Vol.<sp/>37,<sp/>No.<sp/>2,<sp/>pp.<sp/>A993-A1019,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>http://dx.doi.org/10.1137/140966290].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e0<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>gmax<sp/>=<sp/>-1.;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim<sp/>=<sp/>0;<sp/>dim<sp/>&lt;<sp/>N;<sp/>++dim)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(free[dim]<sp/>&amp;&amp;<sp/><ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(phi.grad(dim))<sp/>&gt;<sp/>gmax)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gmax<sp/>=<sp/><ref refid="complex-type_8h_1a3aa069ac3980707dae1e0530f50d59e4" kindref="member">std::abs</ref>(phi.grad(dim));</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e0<sp/>=<sp/>dim;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>compatibility<sp/>with<sp/>all<sp/>implicit<sp/>functions<sp/>whilst</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simultaneously<sp/>constructing<sp/>new<sp/>implicit<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;PsiCode&lt;N&gt;</ref>,1<sp/>&lt;&lt;<sp/>(N-1)&gt;<sp/>newPsi;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newPsiCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>psiCount;<sp/>++i)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Evaluate<sp/>gradient<sp/>in<sp/>an<sp/>interval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim<sp/>=<sp/>0;<sp/>dim<sp/>&lt;<sp/>N;<sp/>++dim)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!free[dim])<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xint[dim].alpha<sp/>=<sp/>xrange(psi[i].side(dim),<sp/>dim);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>w.z.<sp/>We<sp/>assume<sp/>grad<sp/>does<sp/>not<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottomSign,<sp/>topSign;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1algoim_1_1detail_1a33dac9049a534e2243c78895a72992a9" kindref="member">detail::determineSigns</ref>(phi.grad(e0)<sp/>&gt;<sp/>0.0,<sp/>psi[i].sign(),</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomSign,<sp/>topSign);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>w.z.<sp/>There<sp/>are<sp/>sides<sp/>0<sp/>and<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newPsi[newPsiCount++]<sp/>=<sp/><ref refid="structamrex_1_1algoim_1_1PsiCode" kindref="compound">PsiCode&lt;N&gt;</ref>(psi[i],<sp/>e0,<sp/>0,<sp/>bottomSign);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newPsi[newPsiCount++]<sp/>=<sp/><ref refid="structamrex_1_1algoim_1_1PsiCode" kindref="compound">PsiCode&lt;N&gt;</ref>(psi[i],<sp/>e0,<sp/>1,<sp/>topSign);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dimension<sp/>reduction<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;bool,N&gt;</ref><sp/>new_free<sp/>=<sp/>free;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_free[e0]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1algoim_1_1ImplicitIntegral" kindref="compound">ImplicitIntegral</ref>&lt;M-1,N,Phi,<ref refid="structamrex_1_1algoim_1_1ImplicitIntegral" kindref="compound">ImplicitIntegral&lt;M,N,Phi,F&gt;</ref><sp/>&gt;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(phi,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>new_free,<sp/>newPsi,<sp/>newPsiCount);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal">};</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Partial<sp/>specialisation<sp/>on<sp/>M=0<sp/>as<sp/>a<sp/>dummy<sp/>base<sp/>case<sp/>for<sp/>the<sp/>compiler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Phi,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F&gt;</highlight></codeline>
<codeline lineno="530" refid="structamrex_1_1algoim_1_1ImplicitIntegral_3_010_00_01N_00_01Phi_00_01F_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1algoim_1_1ImplicitIntegral" kindref="compound">ImplicitIntegral</ref>&lt;0,N,Phi,F&gt;</highlight></codeline>
<codeline lineno="531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></highlight></codeline>
<codeline lineno="533" refid="structamrex_1_1algoim_1_1ImplicitIntegral_3_010_00_01N_00_01Phi_00_01F_01_4_1a2e4d84cf0f715db56b5dc2dfc023bc93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1algoim_1_1ImplicitIntegral_3_010_00_01N_00_01Phi_00_01F_01_4_1a2e4d84cf0f715db56b5dc2dfc023bc93" kindref="member">ImplicitIntegral</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Phi&amp;,<sp/>F&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;bool,N&gt;</ref>&amp;,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray</ref>&lt;<ref refid="structamrex_1_1algoim_1_1PsiCode" kindref="compound">PsiCode&lt;N&gt;</ref>,1<sp/>&lt;&lt;<sp/>(N-1)&gt;&amp;,</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>noexcept<sp/>{}</highlight></codeline>
<codeline lineno="536"><highlight class="normal">};</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><ref refid="structamrex_1_1algoim_1_1QuadratureRule" kindref="compound">QuadratureRule</ref></highlight></codeline>
<codeline lineno="540" refid="namespaceamrex_1_1algoim_1a05434c8a13201e8af0f5dab5420e33d2" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1_1algoim_1a05434c8a13201e8af0f5dab5420e33d2" kindref="member">quadGen</ref><sp/>(<ref refid="structamrex_1_1algoim_1_1EBPlane" kindref="compound">EBPlane</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>phi)<sp/>noexcept</highlight></codeline>
<codeline lineno="541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1algoim_1_1QuadratureRule" kindref="compound">QuadratureRule</ref><sp/>q;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;bool,3&gt;</ref><sp/>free{</highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight><highlight class="keyword">true</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1a317082290117984ef29e149750e2c7a8" kindref="member">GpuArray&lt;PsiCode&lt;3&gt;</ref>,4&gt;<sp/>psi;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>psi[0]<sp/>=<sp/><ref refid="structamrex_1_1algoim_1_1PsiCode" kindref="compound">PsiCode&lt;3&gt;</ref>({0,0,0},<sp/>-1);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1algoim_1_1ImplicitIntegral" kindref="compound">ImplicitIntegral&lt;3,3,EBPlane,QuadratureRule&gt;</ref>(phi,<sp/>q,<sp/>free,<sp/>psi,<sp/>1);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>q;</highlight></codeline>
<codeline lineno="548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref><sp/><ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></highlight></codeline>
<codeline lineno="551" refid="namespaceamrex_1_1algoim_1a9ddd20373173f3218e9adf472a02f119" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1algoim_1a9ddd20373173f3218e9adf472a02f119" kindref="member">set_regular</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/><ref refid="structamrex_1_1Array4" kindref="compound">Array4&lt;Real&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>intg)<sp/>noexcept</highlight></codeline>
<codeline lineno="552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>Real<sp/><ref refid="namespaceamrex__constants__module_1a92ecbb61cf990c72d4d745f36c45eb2b" kindref="member">twelfth</ref><sp/>=<sp/>1./12.;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/>Real<sp/><sp/><sp/>offth<sp/>=<sp/>1./144.;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>intg(i,j,k,<ref refid="namespaceamrex_1_1algoim_1a83f836cfcb795ee2e7cf5f031f4e33a5" kindref="member">i_S_x</ref><sp/><sp/><sp/><sp/>)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>intg(i,j,k,<ref refid="namespaceamrex_1_1algoim_1a26347d2ffb8ae0e55a261293b75aae80" kindref="member">i_S_y</ref><sp/><sp/><sp/><sp/>)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>intg(i,j,k,<ref refid="namespaceamrex_1_1algoim_1aa393d743c81287bc86ed10b61b86013d" kindref="member">i_S_z</ref><sp/><sp/><sp/><sp/>)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>intg(i,j,k,<ref refid="namespaceamrex_1_1algoim_1a07474818cba158a836bada961168c817" kindref="member">i_S_x2</ref><sp/><sp/><sp/>)<sp/>=<sp/><ref refid="namespaceamrex__constants__module_1a92ecbb61cf990c72d4d745f36c45eb2b" kindref="member">twelfth</ref>;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>intg(i,j,k,<ref refid="namespaceamrex_1_1algoim_1ae9b79e8e177e12c5d430231f4fa56cee" kindref="member">i_S_y2</ref><sp/><sp/><sp/>)<sp/>=<sp/><ref refid="namespaceamrex__constants__module_1a92ecbb61cf990c72d4d745f36c45eb2b" kindref="member">twelfth</ref>;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>intg(i,j,k,<ref refid="namespaceamrex_1_1algoim_1ad07a32fe98faf4bf2b079e31d5a63fc2" kindref="member">i_S_z2</ref><sp/><sp/><sp/>)<sp/>=<sp/><ref refid="namespaceamrex__constants__module_1a92ecbb61cf990c72d4d745f36c45eb2b" kindref="member">twelfth</ref>;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>intg(i,j,k,<ref refid="namespaceamrex_1_1algoim_1a1563d162ff7c724b049f407982b9376a" kindref="member">i_S_x_y</ref><sp/><sp/>)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>intg(i,j,k,<ref refid="namespaceamrex_1_1algoim_1a319d09e3fac406d5c7435495783c51da" kindref="member">i_S_x_z</ref><sp/><sp/>)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>intg(i,j,k,<ref refid="namespaceamrex_1_1algoim_1a035ca724de0232c06fb8f932f48dfb5b" kindref="member">i_S_y_z</ref><sp/><sp/>)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>intg(i,j,k,<ref refid="namespaceamrex_1_1algoim_1a90a6f014a413b05f96c519b9dcab59dd" kindref="member">i_S_x2_y</ref><sp/>)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>intg(i,j,k,<ref refid="namespaceamrex_1_1algoim_1ad88812a86b6d79fee7ad18f445312126" kindref="member">i_S_x2_z</ref><sp/>)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>intg(i,j,k,<ref refid="namespaceamrex_1_1algoim_1a59d00e52a1182ccb7556e0b34969d082" kindref="member">i_S_x_y2</ref><sp/>)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>intg(i,j,k,<ref refid="namespaceamrex_1_1algoim_1a906f3ea1a1f5abffc2ce63a2f18c3097" kindref="member">i_S_y2_z</ref><sp/>)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>intg(i,j,k,<ref refid="namespaceamrex_1_1algoim_1ad4374cfcd9fd0dcc582d0b7221c7d699" kindref="member">i_S_x_z2</ref><sp/>)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>intg(i,j,k,<ref refid="namespaceamrex_1_1algoim_1a028434e66d37788b7c7aa354d73ed4b3" kindref="member">i_S_y_z2</ref><sp/>)<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>intg(i,j,k,<ref refid="namespaceamrex_1_1algoim_1a7b7ee4491a1bc96aef205aec9d4a3ccc" kindref="member">i_S_x2_y2</ref>)<sp/>=<sp/>offth;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>intg(i,j,k,<ref refid="namespaceamrex_1_1algoim_1a82ccbc9a6ef0f35640533a4432e150a7" kindref="member">i_S_x2_z2</ref>)<sp/>=<sp/>offth;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>intg(i,j,k,<ref refid="namespaceamrex_1_1algoim_1a6dedc899a72f47e8eed563d439589b34" kindref="member">i_S_y2_z2</ref>)<sp/>=<sp/>offth;</highlight></codeline>
<codeline lineno="573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/EB/AMReX_algoim_K.H"/>
  </compounddef>
</doxygen>
