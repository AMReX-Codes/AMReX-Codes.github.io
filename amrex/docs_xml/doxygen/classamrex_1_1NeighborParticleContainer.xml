<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classamrex_1_1NeighborParticleContainer" kind="class" language="C++" prot="public">
    <compoundname>amrex::NeighborParticleContainer</compoundname>
    <basecompoundref refid="classamrex_1_1ParticleContainer__impl" prot="public" virt="non-virtual">amrex::ParticleContainer_impl&lt; NStructReal, NStructInt, 0, 0 &gt;</basecompoundref>
    <includes refid="AMReX__NeighborParticles_8H" local="no">AMReX_NeighborParticles.H</includes>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1InverseCopyTag" prot="private">amrex::NeighborParticleContainer::InverseCopyTag</innerclass>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1MaskComps" prot="private">amrex::NeighborParticleContainer::MaskComps</innerclass>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCommTag" prot="private">amrex::NeighborParticleContainer::NeighborCommTag</innerclass>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" prot="private">amrex::NeighborParticleContainer::NeighborCopyTag</innerclass>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1NeighborIndexMap" prot="private">amrex::NeighborParticleContainer::NeighborIndexMap</innerclass>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1NeighborTask" prot="protected">amrex::NeighborParticleContainer::NeighborTask</innerclass>
    <templateparamlist>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NStructReal</declname>
        <defname>NStructReal</defname>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NStructInt</declname>
        <defname>NStructInt</defname>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NArrayReal</declname>
        <defname>NArrayReal</defname>
        <defval>0</defval>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NArrayInt</declname>
        <defname>NArrayInt</defname>
        <defval>0</defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1aa454b3f1c4a133faaa1d28b9c8c254d8" prot="public" static="no">
        <type><ref refid="namespaceamrex_1a7c419a2c3aef781f1415b7ebd1f138d0" kindref="member">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer__impl_1aa7617bd59325bac568183d9bbcf32ee3" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a591fb654644bfe6f3b18e63547e1079f" kindref="member">NStructInt</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a32623939f5453d39bcfc26fef34972a8" kindref="member">NArrayReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a3063446dc305120704ec3f1670f301c1" kindref="member">NArrayInt</ref> &gt;</type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParticleContainerType =  ParticleContainer&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;</definition>
        <argsstring></argsstring>
        <name>ParticleContainerType</name>
        <qualifiedname>amrex::NeighborParticleContainer::ParticleContainerType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="37" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1ab9497648313d317adc40bc7bebb5ca2d" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer__impl_1af9086e3760f0e461a8aa1cb5cbe2b608" kindref="member">ParticleContainerType::ParticleType</ref></type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParticleType =  typename ParticleContainerType::ParticleType</definition>
        <argsstring></argsstring>
        <name>ParticleType</name>
        <qualifiedname>amrex::NeighborParticleContainer::ParticleType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="38" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1a1c6baf08ed7bdeb1d7a7acf30eefad52" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer__impl_1a12ac56edf0492d0b5d958ff028a6a537" kindref="member">ParticleContainerType::SuperParticleType</ref></type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::SuperParticleType =  typename ParticleContainerType::SuperParticleType</definition>
        <argsstring></argsstring>
        <name>SuperParticleType</name>
        <qualifiedname>amrex::NeighborParticleContainer::SuperParticleType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="39" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1a43409db639b332ea93f0ad257dc54bc7" prot="public" static="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; std::pair&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;, <ref refid="classamrex_1_1NeighborList" kindref="compound">amrex::NeighborList</ref>&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1ab9497648313d317adc40bc7bebb5ca2d" kindref="member">ParticleType</ref> &gt; &gt; &gt;</type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::NeighborListContainerType =  Vector&lt;std::map&lt;std::pair&lt;int, int&gt;, amrex::NeighborList&lt;ParticleType&gt; &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>NeighborListContainerType</name>
        <qualifiedname>amrex::NeighborParticleContainer::NeighborListContainerType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="40" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1a4f7f3ca7bf951e7ec6fce594005694da" prot="public" static="no">
        <type><ref refid="namespaceamrex_1a2b24a534dc7f3adbd4e23acd6a71e154" kindref="member">ParIter</ref>&lt; <ref refid="classamrex_1_1ParticleContainer__impl_1aa7617bd59325bac568183d9bbcf32ee3" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a591fb654644bfe6f3b18e63547e1079f" kindref="member">NStructInt</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a32623939f5453d39bcfc26fef34972a8" kindref="member">NArrayReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a3063446dc305120704ec3f1670f301c1" kindref="member">NArrayInt</ref> &gt;</type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::MyParIter =  ParIter&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;</definition>
        <argsstring></argsstring>
        <name>MyParIter</name>
        <qualifiedname>amrex::NeighborParticleContainer::MyParIter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="195" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1a0c2a28aef7db24fbfccc53f46637a582" prot="public" static="no">
        <type>std::pair&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::PairIndex =  std::pair&lt;int, int&gt;</definition>
        <argsstring></argsstring>
        <name>PairIndex</name>
        <qualifiedname>amrex::NeighborParticleContainer::PairIndex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="196" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1ae77c84d55fb9e147fc49a60bd44d42d6" prot="public" static="no">
        <type>std::map&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCommTag" kindref="compound">NeighborCommTag</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; char &gt; &gt;</type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::NeighborCommMap =  std::map&lt;NeighborCommTag, Vector&lt;char&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>NeighborCommMap</name>
        <qualifiedname>amrex::NeighborParticleContainer::NeighborCommMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="197" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1a41c79512efbfbf1a4145948c6a680d5c" prot="public" static="no">
        <type>typename <ref refid="namespaceamrex_1a7c419a2c3aef781f1415b7ebd1f138d0" kindref="member">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer__impl_1aa7617bd59325bac568183d9bbcf32ee3" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a591fb654644bfe6f3b18e63547e1079f" kindref="member">NStructInt</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a32623939f5453d39bcfc26fef34972a8" kindref="member">NArrayReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a3063446dc305120704ec3f1670f301c1" kindref="member">NArrayInt</ref> &gt;::AoS</type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::AoS =  typename ParticleContainer&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;::AoS</definition>
        <argsstring></argsstring>
        <name>AoS</name>
        <qualifiedname>amrex::NeighborParticleContainer::AoS</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="198" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1ade2385ed6d6005f38a31d3709b55fc4c" prot="public" static="no">
        <type>typename <ref refid="namespaceamrex_1a7c419a2c3aef781f1415b7ebd1f138d0" kindref="member">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer__impl_1aa7617bd59325bac568183d9bbcf32ee3" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a591fb654644bfe6f3b18e63547e1079f" kindref="member">NStructInt</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a32623939f5453d39bcfc26fef34972a8" kindref="member">NArrayReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a3063446dc305120704ec3f1670f301c1" kindref="member">NArrayInt</ref> &gt;::ParticleVector</type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParticleVector =  typename ParticleContainer&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;::ParticleVector</definition>
        <argsstring></argsstring>
        <name>ParticleVector</name>
        <qualifiedname>amrex::NeighborParticleContainer::ParticleVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="199" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1a88e27f1bb35a55e5fb6555057e1e25ac" prot="public" static="no">
        <type>typename <ref refid="namespaceamrex_1a7c419a2c3aef781f1415b7ebd1f138d0" kindref="member">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer__impl_1aa7617bd59325bac568183d9bbcf32ee3" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a591fb654644bfe6f3b18e63547e1079f" kindref="member">NStructInt</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a32623939f5453d39bcfc26fef34972a8" kindref="member">NArrayReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a3063446dc305120704ec3f1670f301c1" kindref="member">NArrayInt</ref> &gt;<ref refid="classamrex_1_1ParticleContainer__impl_1aad727cb5c9b392a0ec2c7bbabdf22576" kindref="member">::ParticleTileType</ref></type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParticleTile =  typename ParticleContainer&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;::ParticleTileType</definition>
        <argsstring></argsstring>
        <name>ParticleTile</name>
        <qualifiedname>amrex::NeighborParticleContainer::ParticleTile</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="200" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1a60a40e557410a932b8adc0275a5d019f" prot="public" static="no">
        <type>typename <ref refid="namespaceamrex_1a7c419a2c3aef781f1415b7ebd1f138d0" kindref="member">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer__impl_1aa7617bd59325bac568183d9bbcf32ee3" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a591fb654644bfe6f3b18e63547e1079f" kindref="member">NStructInt</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a32623939f5453d39bcfc26fef34972a8" kindref="member">NArrayReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a3063446dc305120704ec3f1670f301c1" kindref="member">NArrayInt</ref> &gt;::IntVector</type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::IntVector =  typename ParticleContainer&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;::IntVector</definition>
        <argsstring></argsstring>
        <name>IntVector</name>
        <qualifiedname>amrex::NeighborParticleContainer::IntVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="201" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="201" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1ab2ef89d2bc69cbfa4ca8f26175d2ce1c" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1a0c2a28aef7db24fbfccc53f46637a582" kindref="member">PairIndex</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1InverseCopyTag" kindref="compound">InverseCopyTag</ref> &gt; &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;PairIndex, Vector&lt;InverseCopyTag&gt; &gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::inverse_tags</definition>
        <argsstring></argsstring>
        <name>inverse_tags</name>
        <qualifiedname>amrex::NeighborParticleContainer::inverse_tags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="402" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a2db2fa1d27368a0d8f2a783f215cd93b" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1a0c2a28aef7db24fbfccc53f46637a582" kindref="member">PairIndex</ref>, <ref refid="classamrex_1_1NeighborParticleContainer_1a88e27f1bb35a55e5fb6555057e1e25ac" kindref="member">ParticleTile</ref> &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;PairIndex, ParticleTile&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::neighbors</definition>
        <argsstring></argsstring>
        <name>neighbors</name>
        <qualifiedname>amrex::NeighborParticleContainer::neighbors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="403" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a68d92607a1d43f215ae6af8ff8d3e3af" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1a0c2a28aef7db24fbfccc53f46637a582" kindref="member">PairIndex</ref>, <ref refid="classamrex_1_1NeighborParticleContainer_1a60a40e557410a932b8adc0275a5d019f" kindref="member">IntVector</ref> &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;PairIndex, IntVector&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::neighbor_list</definition>
        <argsstring></argsstring>
        <name>neighbor_list</name>
        <qualifiedname>amrex::NeighborParticleContainer::neighbor_list</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="404" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a0bc1ebc16494317aa1ee91983ac667e4" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::cdata_size</definition>
        <argsstring></argsstring>
        <name>cdata_size</name>
        <qualifiedname>amrex::NeighborParticleContainer::cdata_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="408" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a9c12404dedc750595ce4d68731d6fc29" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_num_neighbor_cells</definition>
        <argsstring></argsstring>
        <name>m_num_neighbor_cells</name>
        <qualifiedname>amrex::NeighborParticleContainer::m_num_neighbor_cells</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="409" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a36b78bd6fa71f934871cf953892ef4f8" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCommTag" kindref="compound">NeighborCommTag</ref> &gt;</type>
        <definition>Vector&lt;NeighborCommTag&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::local_neighbors</definition>
        <argsstring></argsstring>
        <name>local_neighbors</name>
        <qualifiedname>amrex::NeighborParticleContainer::local_neighbors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="410" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1ad8787f8726e711a8d7a8e0dce3fb8624" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::unique_ptr&lt; <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> &gt; &gt;</type>
        <definition>Vector&lt;std::unique_ptr&lt;iMultiFab&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::mask_ptr</definition>
        <argsstring></argsstring>
        <name>mask_ptr</name>
        <qualifiedname>amrex::NeighborParticleContainer::mask_ptr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="411" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a82a5acd18d78404acab9c6f310411369" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1a0c2a28aef7db24fbfccc53f46637a582" kindref="member">PairIndex</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" kindref="compound">NeighborCopyTag</ref> &gt; &gt; &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;PairIndex, Vector&lt;Vector&lt;NeighborCopyTag&gt; &gt; &gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::buffer_tag_cache</definition>
        <argsstring></argsstring>
        <name>buffer_tag_cache</name>
        <qualifiedname>amrex::NeighborParticleContainer::buffer_tag_cache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="413" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1abbb2992e59999ae9c2866da0b90a7378" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1a0c2a28aef7db24fbfccc53f46637a582" kindref="member">PairIndex</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;PairIndex, int&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::local_neighbor_sizes</definition>
        <argsstring></argsstring>
        <name>local_neighbor_sizes</name>
        <qualifiedname>amrex::NeighborParticleContainer::local_neighbor_sizes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="414" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a704c1b5b30612c4f5a09378f0a63b221" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::neighbor_procs</definition>
        <argsstring></argsstring>
        <name>neighbor_procs</name>
        <qualifiedname>amrex::NeighborParticleContainer::neighbor_procs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>each proc knows how many sends it will do, and how many bytes it will rcv from each other proc. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="418" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a6d6260836577412b1a3a17c7f8d09bc4" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt;</type>
        <definition>Vector&lt;Long&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::rcvs</definition>
        <argsstring></argsstring>
        <name>rcvs</name>
        <qualifiedname>amrex::NeighborParticleContainer::rcvs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="419" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a9c0cf5742a0014b73afe38a75f02534e" prot="protected" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::num_snds</definition>
        <argsstring></argsstring>
        <name>num_snds</name>
        <qualifiedname>amrex::NeighborParticleContainer::num_snds</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="420" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a5ba336738781f2d529bbb68a7f297e17" prot="protected" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; char &gt; &gt;</type>
        <definition>std::map&lt;int, Vector&lt;char&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::send_data</definition>
        <argsstring></argsstring>
        <name>send_data</name>
        <qualifiedname>amrex::NeighborParticleContainer::send_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="421" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1abaca3cff5c84aa26d0e6c4a454af00cd" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ghost_real_comp</definition>
        <argsstring></argsstring>
        <name>ghost_real_comp</name>
        <qualifiedname>amrex::NeighborParticleContainer::ghost_real_comp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="423" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a686b95f083fdf17811b9933e189326db" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ghost_int_comp</definition>
        <argsstring></argsstring>
        <name>ghost_int_comp</name>
        <qualifiedname>amrex::NeighborParticleContainer::ghost_int_comp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="424" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a68fedc2fd57b0e5efccdf65617f930ff" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_neighbor_mask_initialized</definition>
        <argsstring></argsstring>
        <name>m_neighbor_mask_initialized</name>
        <qualifiedname>amrex::NeighborParticleContainer::m_neighbor_mask_initialized</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="456" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a0f3bc83f8fdf1b3468248103a0000a49" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classamrex_1_1iMultiFab" kindref="compound">amrex::iMultiFab</ref> &gt;</type>
        <definition>std::unique_ptr&lt;amrex::iMultiFab&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_neighbor_mask_ptr</definition>
        <argsstring></argsstring>
        <name>m_neighbor_mask_ptr</name>
        <qualifiedname>amrex::NeighborParticleContainer::m_neighbor_mask_ptr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="457" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="457" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a6aafab3c8c1565c5457b08400f0c7984" prot="protected" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, std::vector&lt; std::vector&lt; <ref refid="structamrex_1_1NeighborCode" kindref="compound">NeighborCode</ref> &gt; &gt; &gt;</type>
        <definition>std::map&lt;int, std::vector&lt;std::vector&lt;NeighborCode&gt; &gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_grid_map</definition>
        <argsstring></argsstring>
        <name>m_grid_map</name>
        <qualifiedname>amrex::NeighborParticleContainer::m_grid_map</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="459" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="459" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1adc6fa317f2580d5b4eaf5e7e156694e8" prot="protected" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">amrex::Gpu::DeviceVector</ref>&lt; <ref refid="structamrex_1_1NeighborCode" kindref="compound">NeighborCode</ref> &gt; &gt;</type>
        <definition>std::map&lt;int, amrex::Gpu::DeviceVector&lt;NeighborCode&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_code_array</definition>
        <argsstring></argsstring>
        <name>m_code_array</name>
        <qualifiedname>amrex::NeighborParticleContainer::m_code_array</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="462" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a8cec5f0f49ca18e99496c3530716772b" prot="protected" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">amrex::Gpu::DeviceVector</ref>&lt; <ref refid="namespaceamrex_1a222089e49ba211b37cf7a4a8ae7eb186" kindref="member">Box</ref> &gt; &gt;</type>
        <definition>std::map&lt;int, amrex::Gpu::DeviceVector&lt;Box&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_isec_boxes</definition>
        <argsstring></argsstring>
        <name>m_isec_boxes</name>
        <qualifiedname>amrex::NeighborParticleContainer::m_isec_boxes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="464" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1adc56d3fa06a368656ba30775e6af57d5" prot="protected" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">amrex::Gpu::DeviceVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt;</type>
        <definition>std::map&lt;int, amrex::Gpu::DeviceVector&lt;int&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_code_offsets</definition>
        <argsstring></argsstring>
        <name>m_code_offsets</name>
        <qualifiedname>amrex::NeighborParticleContainer::m_code_offsets</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="465" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="465" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a42b4110915286223007d92bbcf580d89" prot="protected" static="no" mutable="no">
        <type><ref refid="structamrex_1_1ParticleCopyOp" kindref="compound">ParticleCopyOp</ref></type>
        <definition>ParticleCopyOp amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::neighbor_copy_op</definition>
        <argsstring></argsstring>
        <name>neighbor_copy_op</name>
        <qualifiedname>amrex::NeighborParticleContainer::neighbor_copy_op</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="467" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a4057e1a1eaeca59b1c87cec0720343d6" prot="protected" static="no" mutable="no">
        <type><ref refid="structamrex_1_1ParticleCopyPlan" kindref="compound">ParticleCopyPlan</ref></type>
        <definition>ParticleCopyPlan amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::neighbor_copy_plan</definition>
        <argsstring></argsstring>
        <name>neighbor_copy_plan</name>
        <qualifiedname>amrex::NeighborParticleContainer::neighbor_copy_plan</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="468" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a8fd0536bf961bc912c1a380d93b077dd" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1PODVector" kindref="compound">amrex::PODVector</ref>&lt; char, <ref refid="classamrex_1_1PolymorphicArenaAllocator" kindref="compound">PolymorphicArenaAllocator</ref>&lt; char &gt; &gt;</type>
        <definition>amrex::PODVector&lt;char, PolymorphicArenaAllocator&lt;char&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::snd_buffer</definition>
        <argsstring></argsstring>
        <name>snd_buffer</name>
        <qualifiedname>amrex::NeighborParticleContainer::snd_buffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="470" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1aed17d81f3a6f2128f594599d2f700105" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1PODVector" kindref="compound">amrex::PODVector</ref>&lt; char, <ref refid="classamrex_1_1PolymorphicArenaAllocator" kindref="compound">PolymorphicArenaAllocator</ref>&lt; char &gt; &gt;</type>
        <definition>amrex::PODVector&lt;char, PolymorphicArenaAllocator&lt;char&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::rcv_buffer</definition>
        <argsstring></argsstring>
        <name>rcv_buffer</name>
        <qualifiedname>amrex::NeighborParticleContainer::rcv_buffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="471" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a1f7704df7069ec0df0e84a649babf620" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1a6e76d121ad2e1030d86ccbc9a47f6fde" kindref="member">Gpu::PinnedVector</ref>&lt; char &gt;</type>
        <definition>Gpu::PinnedVector&lt;char&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::pinned_snd_buffer</definition>
        <argsstring></argsstring>
        <name>pinned_snd_buffer</name>
        <qualifiedname>amrex::NeighborParticleContainer::pinned_snd_buffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="473" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a57f27a8f270653d1a738490e32dffe4b" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1a6e76d121ad2e1030d86ccbc9a47f6fde" kindref="member">Gpu::PinnedVector</ref>&lt; char &gt;</type>
        <definition>Gpu::PinnedVector&lt;char&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::pinned_rcv_buffer</definition>
        <argsstring></argsstring>
        <name>pinned_rcv_buffer</name>
        <qualifiedname>amrex::NeighborParticleContainer::pinned_rcv_buffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="474" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a739c2408e1c55081d20e737f6bf7ec8f" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1NeighborParticleContainer_1a43409db639b332ea93f0ad257dc54bc7" kindref="member">NeighborListContainerType</ref></type>
        <definition>NeighborListContainerType amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_neighbor_list</definition>
        <argsstring></argsstring>
        <name>m_neighbor_list</name>
        <qualifiedname>amrex::NeighborParticleContainer::m_neighbor_list</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="477" column="31" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a71350435dff09e0768bdc74d0f943655" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; std::pair&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;, <ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">amrex::Gpu::DeviceVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;std::pair&lt;int, int&gt;, amrex::Gpu::DeviceVector&lt;int&gt; &gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_boundary_particle_ids</definition>
        <argsstring></argsstring>
        <name>m_boundary_particle_ids</name>
        <qualifiedname>amrex::NeighborParticleContainer::m_boundary_particle_ids</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="479" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a027a8bd9c7726edd5ab979a6ee716fa8" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_has_neighbors</definition>
        <argsstring></argsstring>
        <name>m_has_neighbors</name>
        <qualifiedname>amrex::NeighborParticleContainer::m_has_neighbors</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="483" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="483" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a94f1d1574b0fb4f340d088480ee5fbc1" prot="protected" static="yes" constexpr="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::pdata_size</definition>
        <argsstring></argsstring>
        <name>pdata_size</name>
        <qualifiedname>amrex::NeighborParticleContainer::pdata_size</qualifiedname>
        <initializer>= sizeof(<ref refid="classamrex_1_1NeighborParticleContainer_1ab9497648313d317adc40bc7bebb5ca2d" kindref="member">ParticleType</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="405" column="29" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1aebe05d83866295fa66cd195bfd2ccc44" prot="protected" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::num_mask_comps</definition>
        <argsstring></argsstring>
        <name>num_mask_comps</name>
        <qualifiedname>amrex::NeighborParticleContainer::num_mask_comps</qualifiedname>
        <initializer>= 3</initializer>
        <briefdescription>
<para>grid, tile, level </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="407" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a6ed8edcd2e87a52794e213130dcd0560" prot="protected" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::use_mask</definition>
        <argsstring></argsstring>
        <name>use_mask</name>
        <qualifiedname>amrex::NeighborParticleContainer::use_mask</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="426" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a489d137c303342bb557670749f997930" prot="protected" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::enable_inverse</definition>
        <argsstring></argsstring>
        <name>enable_inverse</name>
        <qualifiedname>amrex::NeighborParticleContainer::enable_inverse</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="428" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="428" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classamrex_1_1NeighborParticleContainer_1a48a36aaec1d09775ee04d9abdbb24bf5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const InverseCopyTag &amp;tag)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>amrex::NeighborParticleContainer::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1NeighborParticleContainer_1_1InverseCopyTag" kindref="compound">InverseCopyTag</ref> &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="143" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="143" bodyend="150"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1afdc38b73df1e102c73af05a2d814d3e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::NeighborParticleContainer</definition>
        <argsstring>(ParGDBBase *gdb, int ncells)</argsstring>
        <name>NeighborParticleContainer</name>
        <qualifiedname>amrex::NeighborParticleContainer::NeighborParticleContainer</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1ParGDBBase" kindref="compound">ParGDBBase</ref> *</type>
          <declname>gdb</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncells</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="203" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="12" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a04cedff11be23a14eb5b47dfb818695f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::NeighborParticleContainer</definition>
        <argsstring>(const Geometry &amp;geom, const DistributionMapping &amp;dmap, const BoxArray &amp;ba, int nneighbor)</argsstring>
        <name>NeighborParticleContainer</name>
        <qualifiedname>amrex::NeighborParticleContainer::NeighborParticleContainer</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nneighbor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="205" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="21" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a7ce8a903b6da41ecd366aaaa48d6ee9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::NeighborParticleContainer</definition>
        <argsstring>(const Vector&lt; Geometry &gt; &amp;geom, const Vector&lt; DistributionMapping &gt; &amp;dmap, const Vector&lt; BoxArray &gt; &amp;ba, const Vector&lt; int &gt; &amp;rr, int nneighbor)</argsstring>
        <name>NeighborParticleContainer</name>
        <qualifiedname>amrex::NeighborParticleContainer::NeighborParticleContainer</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &gt; &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &gt; &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &gt; &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &amp;</type>
          <declname>rr</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nneighbor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="210" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="33" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a4d1fb81f019aa99065cb59c879fd7e7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::~NeighborParticleContainer</definition>
        <argsstring>() override=default</argsstring>
        <name>~NeighborParticleContainer</name>
        <qualifiedname>amrex::NeighborParticleContainer::~NeighborParticleContainer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="216" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1adff18120eea0cf9a843f2779fa7afb80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::NeighborParticleContainer</definition>
        <argsstring>(const NeighborParticleContainer &amp;)=delete</argsstring>
        <name>NeighborParticleContainer</name>
        <qualifiedname>amrex::NeighborParticleContainer::NeighborParticleContainer</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1NeighborParticleContainer" kindref="compound">NeighborParticleContainer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="218" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1accfe8e6d51a654b697f8f3ca0154566b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1NeighborParticleContainer" kindref="compound">NeighborParticleContainer</ref> &amp;</type>
        <definition>NeighborParticleContainer &amp; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::operator=</definition>
        <argsstring>(const NeighborParticleContainer &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::NeighborParticleContainer::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1NeighborParticleContainer" kindref="compound">NeighborParticleContainer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="219" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a8e16762fd9648d7b623cff439d75e888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::NeighborParticleContainer</definition>
        <argsstring>(NeighborParticleContainer &amp;&amp;)=default</argsstring>
        <name>NeighborParticleContainer</name>
        <qualifiedname>amrex::NeighborParticleContainer::NeighborParticleContainer</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1NeighborParticleContainer" kindref="compound">NeighborParticleContainer</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="221" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a6160d2827d7f03410f60173d230ab83b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1NeighborParticleContainer" kindref="compound">NeighborParticleContainer</ref> &amp;</type>
        <definition>NeighborParticleContainer &amp; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::operator=</definition>
        <argsstring>(NeighborParticleContainer &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <qualifiedname>amrex::NeighborParticleContainer::operator=</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1NeighborParticleContainer" kindref="compound">NeighborParticleContainer</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="222" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a73e658c45a529893921685643fb4394d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::Regrid</definition>
        <argsstring>(const DistributionMapping &amp;dmap, const BoxArray &amp;ba)</argsstring>
        <name>Regrid</name>
        <qualifiedname>amrex::NeighborParticleContainer::Regrid</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>ba</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Regrid functions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="227" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="95" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a3205f6eddc5d10390735ccb357aa862a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::Regrid</definition>
        <argsstring>(const DistributionMapping &amp;dmap, const BoxArray &amp;ba, int lev)</argsstring>
        <name>Regrid</name>
        <qualifiedname>amrex::NeighborParticleContainer::Regrid</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="228" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="106" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a94c73b0500c4d153536b364fd34fa310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::Regrid</definition>
        <argsstring>(const Vector&lt; DistributionMapping &gt; &amp;dmap, const Vector&lt; BoxArray &gt; &amp;ba)</argsstring>
        <name>Regrid</name>
        <qualifiedname>amrex::NeighborParticleContainer::Regrid</qualifiedname>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &gt; &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &gt; &amp;</type>
          <declname>ba</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="229" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="116" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1acb8a5585de824219f78b9b8d952197cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::fillNeighbors</definition>
        <argsstring>()</argsstring>
        <name>fillNeighbors</name>
        <qualifiedname>amrex::NeighborParticleContainer::fillNeighbors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This fills the neighbor buffers for each tile with the proper data </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="234" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="639" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a9187eddfa35050d7b2bf91bd8109e88b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::sumNeighbors</definition>
        <argsstring>(int real_start_comp, int real_num_comp, int int_start_comp, int int_num_comp)</argsstring>
        <name>sumNeighbors</name>
        <qualifiedname>amrex::NeighborParticleContainer::sumNeighbors</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>real_start_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>real_num_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>int_start_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>int_num_comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This does an &quot;inverse&quot; fillNeighbors operation, meaning that it adds data from the ghost particles to the corresponding real ones. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="240" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="651" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a8be53de63906df4758fa492f49118d7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::updateNeighbors</definition>
        <argsstring>(bool boundary_neighbors_only=false)</argsstring>
        <name>updateNeighbors</name>
        <qualifiedname>amrex::NeighborParticleContainer::updateNeighbors</qualifiedname>
        <param>
          <type>bool</type>
          <declname>boundary_neighbors_only</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This updates the neighbors with their current particle data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="246" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="664" bodyend="676"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1aba7c433be0b8360af42a8b649bb37c46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::clearNeighbors</definition>
        <argsstring>()</argsstring>
        <name>clearNeighbors</name>
        <qualifiedname>amrex::NeighborParticleContainer::clearNeighbors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Each tile clears its neighbors, freeing the memory </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="251" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="681" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a6fb1047fc993b216cf8b7976cb589c45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CheckPair</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::buildNeighborList</definition>
        <argsstring>(CheckPair const &amp;check_pair, bool sort=false)</argsstring>
        <name>buildNeighborList</name>
        <qualifiedname>amrex::NeighborParticleContainer::buildNeighborList</qualifiedname>
        <param>
          <type>CheckPair const &amp;</type>
          <declname>check_pair</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sort</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a Neighbor List for each tile </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="257" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="695" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a8478ecacf0444af88ada9f65324c8c91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CheckPair</type>
          </param>
          <param>
            <type>class OtherPCType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::buildNeighborList</definition>
        <argsstring>(CheckPair const &amp;check_pair, OtherPCType &amp;other, Vector&lt; std::map&lt; std::pair&lt; int, int &gt;, amrex::NeighborList&lt; typename OtherPCType::ParticleType &gt; &gt; &gt; &amp;neighbor_lists, bool sort=false)</argsstring>
        <name>buildNeighborList</name>
        <qualifiedname>amrex::NeighborParticleContainer::buildNeighborList</qualifiedname>
        <param>
          <type>CheckPair const &amp;</type>
          <declname>check_pair</declname>
        </param>
        <param>
          <type>OtherPCType &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; std::pair&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;, <ref refid="classamrex_1_1NeighborList" kindref="compound">amrex::NeighborList</ref>&lt; typename OtherPCType::ParticleType &gt; &gt; &gt; &amp;</type>
          <declname>neighbor_lists</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sort</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a Neighbor List for each tile </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="263" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="780" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1ad443f88f36ee577341e3ffcffda8a539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CheckPair</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::buildNeighborList</definition>
        <argsstring>(CheckPair const &amp;check_pair, int type_ind, int *ref_ratio, int num_bin_types=1, bool sort=false)</argsstring>
        <name>buildNeighborList</name>
        <qualifiedname>amrex::NeighborParticleContainer::buildNeighborList</qualifiedname>
        <param>
          <type>CheckPair const &amp;</type>
          <declname>check_pair</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>type_ind</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>ref_ratio</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>num_bin_types</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>sort</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a Neighbor List for each tile </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="271" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="849" bodyend="979"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a12039aca5af54df4ee587db2ea95c857" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CheckPair</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::selectActualNeighbors</definition>
        <argsstring>(CheckPair const &amp;check_pair, int num_cells=1)</argsstring>
        <name>selectActualNeighbors</name>
        <qualifiedname>amrex::NeighborParticleContainer::selectActualNeighbors</qualifiedname>
        <param>
          <type>CheckPair const &amp;</type>
          <declname>check_pair</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>num_cells</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="275" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="985" bodyend="1091"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a30c5d8ec64c6b92416e8c9ef53415bed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::printNeighborList</definition>
        <argsstring>()</argsstring>
        <name>printNeighborList</name>
        <qualifiedname>amrex::NeighborParticleContainer::printNeighborList</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="277" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="1095" bodyend="1109"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a09a8dff61d694d6e6bebd4e31b509cfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::setRealCommComp</definition>
        <argsstring>(int i, bool value)</argsstring>
        <name>setRealCommComp</name>
        <qualifiedname>amrex::NeighborParticleContainer::setRealCommComp</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="279" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1ada159dbd6d69caa45134b00a5d097eb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::setIntCommComp</definition>
        <argsstring>(int i, bool value)</argsstring>
        <name>setIntCommComp</name>
        <qualifiedname>amrex::NeighborParticleContainer::setIntCommComp</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="280" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a30de2eac9073181e36b90fe42a35cbfa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1NeighborParticleContainer_1a88e27f1bb35a55e5fb6555057e1e25ac" kindref="member">ParticleTile</ref> &amp;</type>
        <definition>ParticleTile &amp; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::GetNeighbors</definition>
        <argsstring>(int lev, int grid, int tile)</argsstring>
        <name>GetNeighbors</name>
        <qualifiedname>amrex::NeighborParticleContainer::GetNeighbors</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="282" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="282" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a101f4c5383d30d7ade05ecd633f295dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1NeighborParticleContainer_1a88e27f1bb35a55e5fb6555057e1e25ac" kindref="member">ParticleTile</ref> &amp;</type>
        <definition>const ParticleTile &amp; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::GetNeighbors</definition>
        <argsstring>(int lev, int grid, int tile) const</argsstring>
        <name>GetNeighbors</name>
        <qualifiedname>amrex::NeighborParticleContainer::GetNeighbors</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="287" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="287" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a394a5717e0621cf4e2250d432950cd8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_same_v&lt; T, bool &gt;, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::AddRealComp</definition>
        <argsstring>(T communicate=true)</argsstring>
        <name>AddRealComp</name>
        <qualifiedname>amrex::NeighborParticleContainer::AddRealComp</qualifiedname>
        <param>
          <type>T</type>
          <declname>communicate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="294" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="294" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a495d805bcf68681c718d5316bac80c07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_same_v&lt; T, bool &gt;, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::AddIntComp</definition>
        <argsstring>(T communicate=true)</argsstring>
        <name>AddIntComp</name>
        <qualifiedname>amrex::NeighborParticleContainer::AddIntComp</qualifiedname>
        <param>
          <type>T</type>
          <declname>communicate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="304" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="304" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1ace50f0cb60f7340d8f38d1fb7cc5be88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::Redistribute</definition>
        <argsstring>(int lev_min=0, int lev_max=-1, int nGrow=0, int local=0, bool remove_negative=true)</argsstring>
        <name>Redistribute</name>
        <qualifiedname>amrex::NeighborParticleContainer::Redistribute</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev_min</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev_max</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nGrow</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>local</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>remove_negative</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="312" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="312" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a87eefb7672630057e6c862494d12bff9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::RedistributeLocal</definition>
        <argsstring>(bool remove_negative=true)</argsstring>
        <name>RedistributeLocal</name>
        <qualifiedname>amrex::NeighborParticleContainer::RedistributeLocal</qualifiedname>
        <param>
          <type>bool</type>
          <declname>remove_negative</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="320" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="320" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1afcfa8f96104ddefb10c6fb076847f619" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::fillNeighborsGPU</definition>
        <argsstring>()</argsstring>
        <name>fillNeighborsGPU</name>
        <qualifiedname>amrex::NeighborParticleContainer::fillNeighborsGPU</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="331" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesGPUImpl.H" bodystart="227" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1ac724351a52c76d14b8373c0d9fb20dc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::updateNeighborsGPU</definition>
        <argsstring>(bool boundary_neighbors_only=false)</argsstring>
        <name>updateNeighborsGPU</name>
        <qualifiedname>amrex::NeighborParticleContainer::updateNeighborsGPU</qualifiedname>
        <param>
          <type>bool</type>
          <declname>boundary_neighbors_only</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="332" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesGPUImpl.H" bodystart="247" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1aa468e8ad09efe1b96511f7d7ca65b6a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::clearNeighborsGPU</definition>
        <argsstring>()</argsstring>
        <name>clearNeighborsGPU</name>
        <qualifiedname>amrex::NeighborParticleContainer::clearNeighborsGPU</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="333" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesGPUImpl.H" bodystart="303" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a9fd86ef6591da68553312d8cc6321034" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::setEnableInverse</definition>
        <argsstring>(bool flag)</argsstring>
        <name>setEnableInverse</name>
        <qualifiedname>amrex::NeighborParticleContainer::setEnableInverse</qualifiedname>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="342" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="342" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a10946f0902af75ab296818655fa6b388" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::enableInverse</definition>
        <argsstring>()</argsstring>
        <name>enableInverse</name>
        <qualifiedname>amrex::NeighborParticleContainer::enableInverse</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="348" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="348" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1ae12e899c533700652098ed401ae73ec1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::buildNeighborMask</definition>
        <argsstring>()</argsstring>
        <name>buildNeighborMask</name>
        <qualifiedname>amrex::NeighborParticleContainer::buildNeighborMask</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="350" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesGPUImpl.H" bodystart="53" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1abaaecca357ec776790f1cc2cc17e1e2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::buildNeighborCopyOp</definition>
        <argsstring>(bool use_boundary_neighbor=false)</argsstring>
        <name>buildNeighborCopyOp</name>
        <qualifiedname>amrex::NeighborParticleContainer::buildNeighborCopyOp</qualifiedname>
        <param>
          <type>bool</type>
          <declname>use_boundary_neighbor</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="352" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesGPUImpl.H" bodystart="122" bodyend="222"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1aa703189fa53877c919758931df1dae2c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::cacheNeighborInfo</definition>
        <argsstring>()</argsstring>
        <name>cacheNeighborInfo</name>
        <qualifiedname>amrex::NeighborParticleContainer::cacheNeighborInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="356" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="314" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a9468a41ca15b66d1676b5a9112efad06" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::BuildMasks</definition>
        <argsstring>()</argsstring>
        <name>BuildMasks</name>
        <qualifiedname>amrex::NeighborParticleContainer::BuildMasks</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This builds the internal mask data structure used for looking up neighbors </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="361" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="153" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a3e1bdffae320af11e3fb4e1dbd1bc9ab" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::areMasksValid</definition>
        <argsstring>()</argsstring>
        <name>areMasksValid</name>
        <qualifiedname>amrex::NeighborParticleContainer::areMasksValid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Are the masks computed by the above function still valid? </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="366" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="129" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a1eb529c3017818a9d13044fb1482297c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::GetNeighborCommTags</definition>
        <argsstring>()</argsstring>
        <name>GetNeighborCommTags</name>
        <qualifiedname>amrex::NeighborParticleContainer::GetNeighborCommTags</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="368" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="192" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a68da6e6d4d985ae4cb97d57801be2447" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::GetCommTagsBox</definition>
        <argsstring>(Vector&lt; NeighborCommTag &gt; &amp;tags, int lev, const Box &amp;in_box)</argsstring>
        <name>GetCommTagsBox</name>
        <qualifiedname>amrex::NeighborParticleContainer::GetCommTagsBox</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCommTag" kindref="compound">NeighborCommTag</ref> &gt; &amp;</type>
          <declname>tags</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a222089e49ba211b37cf7a4a8ae7eb186" kindref="member">Box</ref> &amp;</type>
          <declname>in_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="370" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="267" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a688040e2b87d758b2b32931617d310b3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::resizeContainers</definition>
        <argsstring>(int num_levels)</argsstring>
        <name>resizeContainers</name>
        <qualifiedname>amrex::NeighborParticleContainer::resizeContainers</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>num_levels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="372" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="1114" bodyend="1131"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a5c29c92fbd7c6fd461b5cfb41dbe6c53" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::initializeCommComps</definition>
        <argsstring>()</argsstring>
        <name>initializeCommComps</name>
        <qualifiedname>amrex::NeighborParticleContainer::initializeCommComps</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="374" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="47" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a32196ebb15076bfcbdf8acdcf6eb63bf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::calcCommSize</definition>
        <argsstring>()</argsstring>
        <name>calcCommSize</name>
        <qualifiedname>amrex::NeighborParticleContainer::calcCommSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="376" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="76" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a8413cd8e2132d90b5b995204ba89dd69" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::fillNeighborsMPI</definition>
        <argsstring>(bool reuse_rcv_counts)</argsstring>
        <name>fillNeighborsMPI</name>
        <qualifiedname>amrex::NeighborParticleContainer::fillNeighborsMPI</qualifiedname>
        <param>
          <type>bool</type>
          <declname>reuse_rcv_counts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform the MPI communication necessary to fill neighbor buffers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="381" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesCPUImpl.H" bodystart="509" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a3d438df75144765d576329bce2e0b9bf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::sumNeighborsMPI</definition>
        <argsstring>(std::map&lt; int, Vector&lt; char &gt; &gt; &amp;not_ours, int real_start_comp, int real_num_comp, int int_start_comp, int int_num_comp)</argsstring>
        <name>sumNeighborsMPI</name>
        <qualifiedname>amrex::NeighborParticleContainer::sumNeighborsMPI</qualifiedname>
        <param>
          <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; char &gt; &gt; &amp;</type>
          <declname>not_ours</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>real_start_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>real_num_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>int_start_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>int_num_comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="383" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesCPUImpl.H" bodystart="110" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a27108f3863fce54df642e2958a2826e8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::getRcvCountsMPI</definition>
        <argsstring>()</argsstring>
        <name>getRcvCountsMPI</name>
        <qualifiedname>amrex::NeighborParticleContainer::getRcvCountsMPI</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform handshake to figure out how many bytes each proc should receive </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="390" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesCPUImpl.H" bodystart="448" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a1846a855343e25e64820d12cb4228d4b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::getNeighborTags</definition>
        <argsstring>(Vector&lt; NeighborCopyTag &gt; &amp;tags, const ParticleType &amp;p, int nGrow, const NeighborCopyTag &amp;src_tag, const MyParIter &amp;pti)</argsstring>
        <name>getNeighborTags</name>
        <qualifiedname>amrex::NeighborParticleContainer::getNeighborTags</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" kindref="compound">NeighborCopyTag</ref> &gt; &amp;</type>
          <declname>tags</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1NeighborParticleContainer_1ab9497648313d317adc40bc7bebb5ca2d" kindref="member">ParticleType</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nGrow</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" kindref="compound">NeighborCopyTag</ref> &amp;</type>
          <declname>src_tag</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1NeighborParticleContainer_1a4f7f3ca7bf951e7ec6fce594005694da" kindref="member">MyParIter</ref> &amp;</type>
          <declname>pti</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="392" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="537" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1aac1ac5776679ea3fe244639093d2ab49" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::getNeighborTags</definition>
        <argsstring>(Vector&lt; NeighborCopyTag &gt; &amp;tags, const ParticleType &amp;p, const IntVect &amp;nGrow, const NeighborCopyTag &amp;src_tag, const MyParIter &amp;pti)</argsstring>
        <name>getNeighborTags</name>
        <qualifiedname>amrex::NeighborParticleContainer::getNeighborTags</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" kindref="compound">NeighborCopyTag</ref> &gt; &amp;</type>
          <declname>tags</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1NeighborParticleContainer_1ab9497648313d317adc40bc7bebb5ca2d" kindref="member">ParticleType</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1a8792201c856a367dda275e09047daa33" kindref="member">IntVect</ref> &amp;</type>
          <declname>nGrow</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" kindref="compound">NeighborCopyTag</ref> &amp;</type>
          <declname>src_tag</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1NeighborParticleContainer_1a4f7f3ca7bf951e7ec6fce594005694da" kindref="member">MyParIter</ref> &amp;</type>
          <declname>pti</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="396" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="546" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a15ca1e067f7b0b35c6c55edf81a07a9c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceamrex_1a8792201c856a367dda275e09047daa33" kindref="member">IntVect</ref></type>
        <definition>IntVect amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::computeRefFac</definition>
        <argsstring>(int src_lev, int lev)</argsstring>
        <name>computeRefFac</name>
        <qualifiedname>amrex::NeighborParticleContainer::computeRefFac</qualifiedname>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>src_lev</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="400" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="248" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a5bde7ea76f99ed274bef3626dc3f833b" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::hasNeighbors</definition>
        <argsstring>() const</argsstring>
        <name>hasNeighbors</name>
        <qualifiedname>amrex::NeighborParticleContainer::hasNeighbors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="481" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="481" bodyend="481"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This is a container for particles that undergo short-range interactions. In addition to the normal ParticleContainer methods, each tile contains a &quot;neighbor
buffer&quot; that is filled with data corresponding to the particles within 1 neighbor cell of the tile boundaries. This allows the N^2 search over each pair of particles to proceed locally, instead of over the entire domain.</para>
<para>Note that neighbor particles are different than &quot;ghost&quot; particles, which are used in AMR subcycling to keep track of coarse level particles that may move on to fine levels during a fine level time step. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>ParticleContainer&lt; NStructReal, NStructInt, 0 , 0  &gt;</label>
        <link refid="classamrex_1_1ParticleContainer__impl"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;</label>
        <link refid="classamrex_1_1NeighborParticleContainer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>amrex::ParticleContainerBase</label>
        <link refid="classamrex_1_1ParticleContainerBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>amrex::AmrParticleLocator&lt; amrex::DenseBins&lt; amrex::BoxND &gt; &gt;</label>
        <link refid="classamrex_1_1AmrParticleLocator"/>
        <childnode refid="6" relation="usage">
          <edgelabel>m_locators</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_grid_assignors</edgelabel>
        </childnode>
      </node>
      <node id="91">
        <label>amrex::Array4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1Array4"/>
        <childnode refid="92" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="94">
        <label>amrex::Array4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1Array4"/>
        <childnode refid="92" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="87">
        <label>amrex::BaseFab&lt; int &gt;</label>
        <link refid="classamrex_1_1BaseFab"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="52">
        <label>amrex::BoxND&lt; AMREX_SPACEDIM &gt;</label>
        <link refid="classamrex_1_1BoxND"/>
      </node>
      <node id="128">
        <label>amrex::DenseBins&lt; typename amrex::ParticleTileData &gt;</label>
        <link refid="classamrex_1_1DenseBins"/>
        <childnode refid="129" relation="usage">
          <edgelabel>m_bins</edgelabel>
          <edgelabel>m_counts</edgelabel>
          <edgelabel>m_local_offsets</edgelabel>
          <edgelabel>m_offsets</edgelabel>
          <edgelabel>m_perm</edgelabel>
        </childnode>
      </node>
      <node id="99">
        <label>amrex::FBData&lt; IArrayBox &gt;</label>
        <link refid="structamrex_1_1FBData"/>
        <childnode refid="100" relation="usage">
          <edgelabel>fb</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_data</edgelabel>
          <edgelabel>send_data</edgelabel>
        </childnode>
        <childnode refid="108" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="110" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
        <childnode refid="112" relation="usage">
          <edgelabel>recv_stat</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>amrex::FabArray&lt; IArrayBox &gt;</label>
        <link refid="classamrex_1_1FabArray"/>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
        <childnode refid="73" relation="usage">
          <edgelabel>m_factory</edgelabel>
        </childnode>
        <childnode refid="75" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
        <childnode refid="83" relation="usage">
          <edgelabel>m_single_chunk_arena</edgelabel>
        </childnode>
        <childnode refid="85" relation="usage">
          <edgelabel>m_fabs_v</edgelabel>
        </childnode>
        <childnode refid="90" relation="usage">
          <edgelabel>m_arrays</edgelabel>
        </childnode>
        <childnode refid="93" relation="usage">
          <edgelabel>m_const_arrays</edgelabel>
        </childnode>
        <childnode refid="95" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="97" relation="usage">
          <edgelabel>shmem</edgelabel>
        </childnode>
        <childnode refid="98" relation="usage">
          <edgelabel>fbd</edgelabel>
        </childnode>
        <childnode refid="114" relation="usage">
          <edgelabel>pcd</edgelabel>
        </childnode>
        <childnode refid="117" relation="usage">
          <edgelabel>os_temp</edgelabel>
        </childnode>
      </node>
      <node id="74">
        <label>amrex::FabFactory&lt; IArrayBox &gt;</label>
        <link refid="classamrex_1_1FabFactory"/>
      </node>
      <node id="41">
        <label>amrex::IndexTypeND&lt; AMREX_SPACEDIM &gt;</label>
        <link refid="classamrex_1_1IndexTypeND"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>amrex::IntVectND&lt; AMREX_SPACEDIM &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="29">
        <label>K</label>
      </node>
      <node id="90">
        <label>amrex::MultiArray4&lt; value_type &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
        <childnode refid="91" relation="usage">
          <edgelabel>dp</edgelabel>
          <edgelabel>hp</edgelabel>
        </childnode>
      </node>
      <node id="93">
        <label>amrex::MultiArray4&lt; value_type const &gt;</label>
        <link refid="structamrex_1_1MultiArray4"/>
        <childnode refid="94" relation="usage">
          <edgelabel>dp</edgelabel>
          <edgelabel>hp</edgelabel>
        </childnode>
      </node>
      <node id="115">
        <label>amrex::PCData&lt; IArrayBox &gt;</label>
        <link refid="structamrex_1_1PCData"/>
        <childnode refid="116" relation="usage">
          <edgelabel>cpc</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>src</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="106" relation="usage">
          <edgelabel>recv_data</edgelabel>
        </childnode>
        <childnode refid="108" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="110" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::PODVector&lt; amrex::AssignGrid&lt; BinIteratorFactory &gt; &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="157">
        <label>amrex::PODVector&lt; amrex::BoxND &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="158" relation="public-inheritance">
        </childnode>
        <childnode refid="159" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="153">
        <label>amrex::PODVector&lt; amrex::NeighborCode &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="154" relation="public-inheritance">
        </childnode>
        <childnode refid="155" relation="usage">
          <edgelabel>m_data</edgelabel>
        </childnode>
      </node>
      <node id="174">
        <label>amrex::PODVector&lt; char &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="175" relation="public-inheritance">
        </childnode>
      </node>
      <node id="171">
        <label>amrex::PODVector&lt; char, amrex::PolymorphicArenaAllocator&lt; char &gt; &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="172" relation="public-inheritance">
        </childnode>
      </node>
      <node id="129">
        <label>amrex::PODVector&lt; index_type &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="130" relation="public-inheritance">
        </childnode>
      </node>
      <node id="119">
        <label>amrex::PODVector&lt; int &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="120" relation="public-inheritance">
        </childnode>
      </node>
      <node id="169">
        <label>amrex::PODVector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="170" relation="public-inheritance">
        </childnode>
      </node>
      <node id="167">
        <label>amrex::PODVector&lt; unsigned int &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="168" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>ParticleContainer&lt; NStructReal, NStructInt, 0 , 0  &gt;</label>
        <link refid="classamrex_1_1ParticleContainer__impl"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="121" relation="usage">
          <edgelabel>ParticleRealDescriptor</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>h_redistribute_int_comp</edgelabel>
          <edgelabel>h_redistribute_real_comp</edgelabel>
        </childnode>
        <childnode refid="122" relation="usage">
          <edgelabel>nParticlesAtLevelPrePost</edgelabel>
        </childnode>
        <childnode refid="124" relation="usage">
          <edgelabel>countPrePost</edgelabel>
          <edgelabel>whichPrePost</edgelabel>
        </childnode>
        <childnode refid="126" relation="usage">
          <edgelabel>wherePrePost</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>HdrFileNamePrePost</edgelabel>
        </childnode>
        <childnode refid="95" relation="usage">
          <edgelabel>filePrefixPrePost</edgelabel>
        </childnode>
        <childnode refid="128" relation="usage">
          <edgelabel>m_bins</edgelabel>
        </childnode>
        <childnode refid="131" relation="usage">
          <edgelabel>m_particles</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>m_soa_idata_names</edgelabel>
          <edgelabel>m_soa_rdata_names</edgelabel>
        </childnode>
      </node>
      <node id="172">
        <label>amrex::PolymorphicArenaAllocator&lt; char &gt;</label>
        <link refid="classamrex_1_1PolymorphicArenaAllocator"/>
        <childnode refid="173" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>T</label>
      </node>
      <node id="122">
        <label>amrex::Vector&lt; Long &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="123" relation="public-inheritance">
        </childnode>
      </node>
      <node id="110">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="111" relation="public-inheritance">
        </childnode>
      </node>
      <node id="112">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="131">
        <label>amrex::Vector&lt; ParticleLevel &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="132" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>amrex::Vector&lt; amrex::BoxArray &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
      </node>
      <node id="50">
        <label>amrex::Vector&lt; amrex::BoxND &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="51" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>amrex::Vector&lt; amrex::DistributionMapping &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>amrex::Vector&lt; amrex::Geometry &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>amrex::Vector&lt; amrex::IntVectND &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
      </node>
      <node id="139">
        <label>amrex::Vector&lt; amrex::NeighborParticleContainer::NeighborCommTag &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="140" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>amrex::Vector&lt; amrex::ParticleLocator&lt; amrex::DenseBins&lt; amrex::BoxND &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="126">
        <label>amrex::Vector&lt; amrex::Vector&lt; Long &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="127" relation="public-inheritance">
        </childnode>
      </node>
      <node id="124">
        <label>amrex::Vector&lt; amrex::Vector&lt; int &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="125" relation="public-inheritance">
        </childnode>
      </node>
      <node id="106">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="107" relation="public-inheritance">
        </childnode>
      </node>
      <node id="148">
        <label>amrex::Vector&lt; char &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="149" relation="public-inheritance">
        </childnode>
      </node>
      <node id="60">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="61" relation="public-inheritance">
        </childnode>
      </node>
      <node id="137">
        <label>amrex::Vector&lt; std::map&lt; PairIndex, IntVector &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="138" relation="public-inheritance">
        </childnode>
      </node>
      <node id="135">
        <label>amrex::Vector&lt; std::map&lt; PairIndex, ParticleTile &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="136" relation="public-inheritance">
        </childnode>
      </node>
      <node id="133">
        <label>amrex::Vector&lt; std::map&lt; PairIndex, amrex::Vector&lt; amrex::NeighborParticleContainer::InverseCopyTag &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="134" relation="public-inheritance">
        </childnode>
      </node>
      <node id="143">
        <label>amrex::Vector&lt; std::map&lt; PairIndex, amrex::Vector&lt; amrex::Vector&lt; amrex::NeighborParticleContainer::NeighborCopyTag &gt; &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="144" relation="public-inheritance">
        </childnode>
      </node>
      <node id="145">
        <label>amrex::Vector&lt; std::map&lt; PairIndex, int &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="146" relation="public-inheritance">
        </childnode>
      </node>
      <node id="164">
        <label>amrex::Vector&lt; std::map&lt; int, amrex::PODVector&lt; amrex::IntVectND &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="165" relation="public-inheritance">
        </childnode>
      </node>
      <node id="162">
        <label>amrex::Vector&lt; std::map&lt; int, amrex::PODVector&lt; int &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="163" relation="public-inheritance">
        </childnode>
      </node>
      <node id="176">
        <label>amrex::Vector&lt; std::map&lt; std::pair&lt; int, int &gt;, amrex::NeighborList&lt; ParticleType &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="177" relation="public-inheritance">
        </childnode>
      </node>
      <node id="178">
        <label>amrex::Vector&lt; std::map&lt; std::pair&lt; int, int &gt;, amrex::PODVector&lt; int &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="179" relation="public-inheritance">
        </childnode>
      </node>
      <node id="108">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="109" relation="public-inheritance">
        </childnode>
      </node>
      <node id="95">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="96" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::MultiFab &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="23" relation="public-inheritance">
        </childnode>
      </node>
      <node id="141">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="142" relation="public-inheritance">
        </childnode>
      </node>
      <node id="76">
        <label>amrex::Arena</label>
        <link refid="classamrex_1_1Arena"/>
        <childnode refid="77" relation="usage">
          <edgelabel>arena_info</edgelabel>
        </childnode>
        <childnode refid="78" relation="usage">
          <edgelabel>m_profiler</edgelabel>
        </childnode>
      </node>
      <node id="78">
        <label>amrex::Arena::ArenaProfiler</label>
        <link refid="structamrex_1_1Arena_1_1ArenaProfiler"/>
        <childnode refid="79" relation="usage">
          <edgelabel>m_arena_profiler_mutex</edgelabel>
        </childnode>
        <childnode refid="80" relation="usage">
          <edgelabel>m_profiling_stats</edgelabel>
        </childnode>
        <childnode refid="82" relation="usage">
          <edgelabel>m_currently_allocated</edgelabel>
        </childnode>
      </node>
      <node id="173">
        <label>amrex::ArenaAllocatorBase&lt; T, AR &gt;</label>
        <link refid="structamrex_1_1ArenaAllocatorBase"/>
      </node>
      <node id="77">
        <label>amrex::ArenaInfo</label>
        <link refid="structamrex_1_1ArenaInfo"/>
      </node>
      <node id="49">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="50" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="53" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="46">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="47" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
      </node>
      <node id="43">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="44" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="40">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="41" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="45">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="41" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="37">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="38" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="39" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="46" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="37" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
      </node>
      <node id="64">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="49" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="69">
        <label>amrex::BoxIndexerND&lt; dim &gt;</label>
        <link refid="structamrex_1_1BoxIndexerND"/>
        <childnode refid="70" relation="usage">
          <edgelabel>fdm</edgelabel>
        </childnode>
      </node>
      <node id="56">
        <label>amrex::BoxList</label>
        <link refid="classamrex_1_1BoxList"/>
        <childnode refid="50" relation="usage">
          <edgelabel>m_lbox</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="159">
        <label>amrex::BoxND&lt; dim &gt;</label>
        <link refid="classamrex_1_1BoxND"/>
      </node>
      <node id="42">
        <label>amrex::CellIndexEnum</label>
        <link refid="structamrex_1_1CellIndexEnum"/>
      </node>
      <node id="75">
        <label>amrex::DataAllocator</label>
        <link refid="structamrex_1_1DataAllocator"/>
        <childnode refid="76" relation="usage">
          <edgelabel>m_arena</edgelabel>
        </childnode>
      </node>
      <node id="92">
        <label>amrex::Dim3</label>
        <link refid="structamrex_1_1Dim3"/>
      </node>
      <node id="57">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
        <childnode refid="58" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
      </node>
      <node id="59">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="60" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
        <childnode refid="62" relation="usage">
          <edgelabel>m_ownership</edgelabel>
        </childnode>
      </node>
      <node id="65">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="59" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="97">
        <label>amrex::FabArray&lt; FAB &gt;::ShMem</label>
        <link refid="structamrex_1_1FabArray_1_1ShMem"/>
      </node>
      <node id="27">
        <label>amrex::FabArrayBase</label>
        <link refid="classamrex_1_1FabArrayBase"/>
        <childnode refid="4" relation="usage">
          <edgelabel>comm_tile_size</edgelabel>
          <edgelabel>mfiter_tile_size</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>m_TheCPCache</edgelabel>
          <edgelabel>m_TheCrseFineCache</edgelabel>
          <edgelabel>m_TheFBCache</edgelabel>
          <edgelabel>m_TheFillPatchCache</edgelabel>
          <edgelabel>m_ThePolarBCache</edgelabel>
          <edgelabel>m_TheRB180Cache</edgelabel>
          <edgelabel>m_TheRB90Cache</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>m_CFinfo_stats</edgelabel>
          <edgelabel>m_CPC_stats</edgelabel>
          <edgelabel>m_FBC_stats</edgelabel>
          <edgelabel>m_FPinfo_stats</edgelabel>
          <edgelabel>m_TAC_stats</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>m_mem_usage</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>m_region_tag</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>boxarray</edgelabel>
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>distributionMap</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>indexArray</edgelabel>
        </childnode>
        <childnode refid="62" relation="usage">
          <edgelabel>ownership</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>n_filled</edgelabel>
          <edgelabel>n_grow</edgelabel>
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>m_bdkey</edgelabel>
        </childnode>
        <childnode refid="66" relation="usage">
          <edgelabel>m_TheTileArrayCache</edgelabel>
        </childnode>
        <childnode refid="67" relation="usage">
          <edgelabel>m_TheParForCache</edgelabel>
        </childnode>
        <childnode refid="71" relation="usage">
          <edgelabel>m_BD_count</edgelabel>
        </childnode>
        <childnode refid="72" relation="usage">
          <edgelabel>m_FA_stats</edgelabel>
        </childnode>
      </node>
      <node id="63">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="64" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="65" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="116">
        <label>amrex::FabArrayBase::CPC</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CPC"/>
        <childnode refid="101" relation="public-inheritance">
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>m_dstbdk</edgelabel>
          <edgelabel>m_srcbdk</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>m_dstng</edgelabel>
          <edgelabel>m_srcng</edgelabel>
        </childnode>
        <childnode refid="105" relation="usage">
          <edgelabel>m_period</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>m_dstba</edgelabel>
          <edgelabel>m_srcba</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>amrex::FabArrayBase::CacheStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CacheStats"/>
        <childnode refid="31" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="101">
        <label>amrex::FabArrayBase::CommMetaData</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CommMetaData"/>
        <childnode refid="102" relation="usage">
          <edgelabel>m_LocTags</edgelabel>
        </childnode>
        <childnode refid="104" relation="usage">
          <edgelabel>m_RcvTags</edgelabel>
          <edgelabel>m_SndTags</edgelabel>
        </childnode>
      </node>
      <node id="100">
        <label>amrex::FabArrayBase::FB</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FB"/>
        <childnode refid="101" relation="public-inheritance">
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_ngrow</edgelabel>
        </childnode>
        <childnode refid="105" relation="usage">
          <edgelabel>m_period</edgelabel>
        </childnode>
      </node>
      <node id="72">
        <label>amrex::FabArrayBase::FabArrayStats</label>
        <link refid="structamrex_1_1FabArrayBase_1_1FabArrayStats"/>
      </node>
      <node id="68">
        <label>amrex::FabArrayBase::ParForInfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1ParForInfo"/>
        <childnode refid="37" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>m_ng</edgelabel>
        </childnode>
        <childnode refid="69" relation="usage">
          <edgelabel>m_boxes</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>amrex::FabArrayBase::meminfo</label>
        <link refid="structamrex_1_1FabArrayBase_1_1meminfo"/>
      </node>
      <node id="86">
        <label>amrex::IArrayBox</label>
        <link refid="classamrex_1_1IArrayBox"/>
        <childnode refid="87" relation="public-inheritance">
        </childnode>
        <childnode refid="88" relation="usage">
          <edgelabel>ifabio</edgelabel>
        </childnode>
      </node>
      <node id="89">
        <label>amrex::IFABio</label>
        <link refid="classamrex_1_1IFABio"/>
      </node>
      <node id="4">
        <label>amrex::IntVectND&lt; dim &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="70">
        <label>amrex::Math::FastDivmodU64</label>
        <link refid="structamrex_1_1Math_1_1FastDivmodU64"/>
      </node>
      <node id="81">
        <label>amrex::MemStat</label>
        <link refid="structamrex_1_1MemStat"/>
      </node>
      <node id="155">
        <label>amrex::NeighborCode</label>
        <link refid="structamrex_1_1NeighborCode"/>
        <childnode refid="44" relation="usage">
          <edgelabel>periodic_shift</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;</label>
        <link refid="classamrex_1_1NeighborParticleContainer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="133" relation="usage">
          <edgelabel>inverse_tags</edgelabel>
        </childnode>
        <childnode refid="135" relation="usage">
          <edgelabel>neighbors</edgelabel>
        </childnode>
        <childnode refid="137" relation="usage">
          <edgelabel>neighbor_list</edgelabel>
        </childnode>
        <childnode refid="139" relation="usage">
          <edgelabel>local_neighbors</edgelabel>
        </childnode>
        <childnode refid="141" relation="usage">
          <edgelabel>mask_ptr</edgelabel>
        </childnode>
        <childnode refid="143" relation="usage">
          <edgelabel>buffer_tag_cache</edgelabel>
        </childnode>
        <childnode refid="145" relation="usage">
          <edgelabel>local_neighbor_sizes</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>ghost_int_comp</edgelabel>
          <edgelabel>ghost_real_comp</edgelabel>
          <edgelabel>neighbor_procs</edgelabel>
        </childnode>
        <childnode refid="122" relation="usage">
          <edgelabel>rcvs</edgelabel>
        </childnode>
        <childnode refid="147" relation="usage">
          <edgelabel>send_data</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>m_neighbor_mask_ptr</edgelabel>
        </childnode>
        <childnode refid="150" relation="usage">
          <edgelabel>m_grid_map</edgelabel>
        </childnode>
        <childnode refid="152" relation="usage">
          <edgelabel>m_code_array</edgelabel>
        </childnode>
        <childnode refid="156" relation="usage">
          <edgelabel>m_isec_boxes</edgelabel>
        </childnode>
        <childnode refid="160" relation="usage">
          <edgelabel>m_code_offsets</edgelabel>
        </childnode>
        <childnode refid="161" relation="usage">
          <edgelabel>neighbor_copy_op</edgelabel>
        </childnode>
        <childnode refid="166" relation="usage">
          <edgelabel>neighbor_copy_plan</edgelabel>
        </childnode>
        <childnode refid="171" relation="usage">
          <edgelabel>rcv_buffer</edgelabel>
          <edgelabel>snd_buffer</edgelabel>
        </childnode>
        <childnode refid="174" relation="usage">
          <edgelabel>pinned_rcv_buffer</edgelabel>
          <edgelabel>pinned_snd_buffer</edgelabel>
        </childnode>
        <childnode refid="176" relation="usage">
          <edgelabel>m_neighbor_list</edgelabel>
        </childnode>
        <childnode refid="178" relation="usage">
          <edgelabel>m_boundary_particle_ids</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="12">
        <label>amrex::ParGDB</label>
        <link refid="classamrex_1_1ParGDB"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>m_geom</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>m_dmap</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>m_ba</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>m_rr</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>amrex::ParGDBBase</label>
        <link refid="classamrex_1_1ParGDBBase"/>
      </node>
      <node id="118">
        <label>amrex::ParticleBufferMap</label>
        <link refid="classamrex_1_1ParticleBufferMap"/>
        <childnode refid="18" relation="usage">
          <edgelabel>m_ba</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>m_dm</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>m_bucket_to_gid</edgelabel>
          <edgelabel>m_bucket_to_lev</edgelabel>
          <edgelabel>m_bucket_to_pid</edgelabel>
          <edgelabel>m_lev_gid_to_bucket</edgelabel>
          <edgelabel>m_lev_offsets</edgelabel>
          <edgelabel>m_proc_box_counts</edgelabel>
          <edgelabel>m_proc_box_offsets</edgelabel>
        </childnode>
        <childnode refid="119" relation="usage">
          <edgelabel>d_bucket_to_pid</edgelabel>
          <edgelabel>d_lev_gid_to_bucket</edgelabel>
          <edgelabel>d_lev_offsets</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>amrex::ParticleContainerBase</label>
        <link refid="classamrex_1_1ParticleContainerBase"/>
        <childnode refid="4" relation="usage">
          <edgelabel>tile_size</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_particle_locator</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_gdb_object</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>m_gdb</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>m_dummy_mf</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>redistribute_mask_ptr</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>neighbor_procs</edgelabel>
        </childnode>
        <childnode refid="118" relation="usage">
          <edgelabel>m_buffer_map</edgelabel>
        </childnode>
      </node>
      <node id="161">
        <label>amrex::ParticleCopyOp</label>
        <link refid="structamrex_1_1ParticleCopyOp"/>
        <childnode refid="162" relation="usage">
          <edgelabel>m_boxes</edgelabel>
          <edgelabel>m_levels</edgelabel>
          <edgelabel>m_src_indices</edgelabel>
        </childnode>
        <childnode refid="164" relation="usage">
          <edgelabel>m_periodic_shift</edgelabel>
        </childnode>
      </node>
      <node id="166">
        <label>amrex::ParticleCopyPlan</label>
        <link refid="structamrex_1_1ParticleCopyPlan"/>
        <childnode refid="162" relation="usage">
          <edgelabel>m_dst_indices</edgelabel>
        </childnode>
        <childnode refid="167" relation="usage">
          <edgelabel>m_box_counts_d</edgelabel>
          <edgelabel>m_box_counts_h</edgelabel>
          <edgelabel>m_box_offsets</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>m_RcvProc</edgelabel>
          <edgelabel>m_neighbor_procs</edgelabel>
          <edgelabel>m_rcv_box_counts</edgelabel>
          <edgelabel>m_rcv_box_ids</edgelabel>
          <edgelabel>m_rcv_box_levs</edgelabel>
          <edgelabel>m_rcv_box_offsets</edgelabel>
          <edgelabel>m_rcv_box_pids</edgelabel>
        </childnode>
        <childnode refid="112" relation="usage">
          <edgelabel>m_build_stats</edgelabel>
          <edgelabel>m_particle_rstats</edgelabel>
          <edgelabel>m_particle_sstats</edgelabel>
        </childnode>
        <childnode refid="110" relation="usage">
          <edgelabel>m_build_rreqs</edgelabel>
          <edgelabel>m_particle_rreqs</edgelabel>
          <edgelabel>m_particle_sreqs</edgelabel>
        </childnode>
        <childnode refid="122" relation="usage">
          <edgelabel>m_Rcvs</edgelabel>
          <edgelabel>m_Snds</edgelabel>
          <edgelabel>m_rcv_num_particles</edgelabel>
          <edgelabel>m_snd_num_particles</edgelabel>
        </childnode>
        <childnode refid="108" relation="usage">
          <edgelabel>m_rOffset</edgelabel>
          <edgelabel>m_rcv_pad_correction_h</edgelabel>
          <edgelabel>m_snd_counts</edgelabel>
          <edgelabel>m_snd_offsets</edgelabel>
          <edgelabel>m_snd_pad_correction_h</edgelabel>
        </childnode>
        <childnode refid="119" relation="usage">
          <edgelabel>d_int_comp_mask</edgelabel>
          <edgelabel>d_real_comp_mask</edgelabel>
          <edgelabel>m_rcv_data</edgelabel>
        </childnode>
        <childnode refid="169" relation="usage">
          <edgelabel>m_rcv_pad_correction_d</edgelabel>
          <edgelabel>m_snd_pad_correction_d</edgelabel>
        </childnode>
      </node>
      <node id="105">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="44" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="121">
        <label>amrex::RealDescriptor</label>
        <link refid="classamrex_1_1RealDescriptor"/>
        <childnode refid="122" relation="usage">
          <edgelabel>fr</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>ord</edgelabel>
        </childnode>
      </node>
      <node id="84">
        <label>amrex::detail::SingleChunkArena</label>
        <link refid="classamrex_1_1detail_1_1SingleChunkArena"/>
        <childnode refid="76" relation="public-inheritance">
        </childnode>
        <childnode refid="75" relation="usage">
          <edgelabel>m_dallocator</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>amrex::iMultiFab</label>
        <link refid="classamrex_1_1iMultiFab"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="71">
        <label>std::map&lt; amrex::FabArrayBase::BDKey, int &gt;</label>
        <childnode refid="63" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="156">
        <label>std::map&lt; int, amrex::PODVector&lt; amrex::BoxND &gt; &gt;</label>
        <childnode refid="157" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="152">
        <label>std::map&lt; int, amrex::PODVector&lt; amrex::NeighborCode &gt; &gt;</label>
        <childnode refid="153" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="160">
        <label>std::map&lt; int, amrex::PODVector&lt; int &gt; &gt;</label>
        <childnode refid="119" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="147">
        <label>std::map&lt; int, amrex::Vector&lt; char &gt; &gt;</label>
        <childnode refid="148" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="150">
        <label>std::map&lt; int, std::vector&lt; std::vector&lt; amrex::NeighborCode &gt; &gt; &gt;</label>
        <childnode refid="151" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>std::map&lt; std::string, amrex::FabArrayBase::meminfo &gt;</label>
        <childnode refid="31" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="80">
        <label>std::map&lt; std::string, amrex::MemStat &gt;</label>
        <childnode refid="31" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="81" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="67">
        <label>std::multimap&lt; amrex::FabArrayBase::BDKey, amrex::FabArrayBase::ParForInfo * &gt;</label>
        <childnode refid="63" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="48">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
        <childnode refid="49" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="55">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
        <childnode refid="56" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="58">
        <label>std::shared_ptr&lt; amrex::DistributionMapping::Ref &gt;</label>
        <childnode refid="59" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>std::allocator&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="158">
        <label>std::allocator&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="154">
        <label>std::allocator&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="175">
        <label>std::allocator&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="130">
        <label>std::allocator&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="120">
        <label>std::allocator&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="170">
        <label>std::allocator&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="168">
        <label>std::allocator&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="66">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="29" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>std::multimap&lt; K, T &gt;</label>
        <childnode refid="29" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="79">
        <label>std::mutex</label>
      </node>
      <node id="31">
        <label>std::string</label>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="103">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="123">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="111">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="113">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="132">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="51">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="140">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="127">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="125">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="107">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="149">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="61">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="138">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="136">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="134">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="144">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="146">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="165">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="163">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="177">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="179">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="109">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="96">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="142">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="102">
        <label>std::unique_ptr&lt; CopyComTagsContainer &gt;</label>
        <childnode refid="103" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="104">
        <label>std::unique_ptr&lt; MapOfCopyComTagContainers &gt;</label>
        <childnode refid="66" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="98">
        <label>std::unique_ptr&lt; amrex::FBData&lt; IArrayBox &gt; &gt;</label>
        <childnode refid="99" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="117">
        <label>std::unique_ptr&lt; amrex::FabArray&lt; IArrayBox &gt; &gt;</label>
        <childnode refid="26" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="73">
        <label>std::unique_ptr&lt; amrex::FabFactory&lt; IArrayBox &gt; &gt;</label>
        <childnode refid="74" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="88">
        <label>std::unique_ptr&lt; amrex::IFABio &gt;</label>
        <childnode refid="89" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="114">
        <label>std::unique_ptr&lt; amrex::PCData&lt; IArrayBox &gt; &gt;</label>
        <childnode refid="115" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>std::unique_ptr&lt; amrex::ParGDB &gt;</label>
        <childnode refid="12" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="83">
        <label>std::unique_ptr&lt; amrex::detail::SingleChunkArena &gt;</label>
        <childnode refid="84" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>std::unique_ptr&lt; amrex::iMultiFab &gt;</label>
        <childnode refid="25" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="53">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="82">
        <label>std::unordered_map&lt; void *, std::pair&lt; amrex::MemStat *, std::size_t &gt; &gt;</label>
      </node>
      <node id="85">
        <label>std::vector&lt; IArrayBox * &gt;</label>
        <childnode refid="86" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="62">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="54">
        <label>std::vector&lt; int &gt;</label>
      </node>
      <node id="35">
        <label>std::vector&lt; std::string &gt;</label>
        <childnode refid="31" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="151">
        <label>std::vector&lt; std::vector&lt; amrex::NeighborCode &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="33" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="35" bodyend="484"/>
    <listofallmembers>
      <member refid="classamrex_1_1NeighborParticleContainer_1a495d805bcf68681c718d5316bac80c07" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AddIntComp</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a10378c3c4f42997ea152ae8f038fdc29" prot="public" virt="non-virtual" ambiguityscope="amrex::ParticleContainer_impl::"><scope>amrex::NeighborParticleContainer</scope><name>AddIntComp</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a954e045f1dc43c3cb20780467983d532" prot="public" virt="non-virtual" ambiguityscope="amrex::ParticleContainer_impl::"><scope>amrex::NeighborParticleContainer</scope><name>AddIntComp</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a066654616c0e94d4df8d77acc92fd305" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>addParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a350d212dc03074db8a66750689660cc3" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>addParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1af07591b0e5cfcfb3640c51432e733666" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AddParticlesAtLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a1f373ace2975d324bf951dafd46c3eda" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AddParticlesAtLevel</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a394a5717e0621cf4e2250d432950cd8a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AddRealComp</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ae2d11ae7c001e15f3972b81fb5dc209f" prot="public" virt="non-virtual" ambiguityscope="amrex::ParticleContainer_impl::"><scope>amrex::NeighborParticleContainer</scope><name>AddRealComp</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1af0579fbeb5709e05fe1ac750d25494ca" prot="public" virt="non-virtual" ambiguityscope="amrex::ParticleContainer_impl::"><scope>amrex::NeighborParticleContainer</scope><name>AddRealComp</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1acf979d3c7c577a5197acd056646c9b04" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AggregationBuffer</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a46ea8e4ecb6c6cfc29dcc47675b959bf" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AggregationType</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1abe9bf1c099a89cdd2fc4f11117f111b7" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AllocatorType</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a41c79512efbfbf1a4145948c6a680d5c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AoS</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a3e1bdffae320af11e3fb4e1dbd1bc9ab" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>areMasksValid</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a722e91dba53fa628b8ae421a2637ef02" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AssignCellDensitySingleLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a0521b81db32f27b22d9d6d627bb47688" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AssignDensity</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a82a5acd18d78404acab9c6f310411369" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buffer_tag_cache</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1adcf30e3dbe2798fa430837cb4b7454c8" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>BufferMap</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9468a41ca15b66d1676b5a9112efad06" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>BuildMasks</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1abaaecca357ec776790f1cc2cc17e1e2a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buildNeighborCopyOp</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a6fb1047fc993b216cf8b7976cb589c45" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buildNeighborList</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a8478ecacf0444af88ada9f65324c8c91" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buildNeighborList</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ad443f88f36ee577341e3ffcffda8a539" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buildNeighborList</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ae12e899c533700652098ed401ae73ec1" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buildNeighborMask</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a1720e5ec3b987f6bee57fde2d515012a" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>BuildRedistributeMask</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ae66736cd613a47f851269128336e533f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ByteSpread</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aa703189fa53877c919758931df1dae2c" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>cacheNeighborInfo</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a32196ebb15076bfcbdf8acdcf6eb63bf" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>calcCommSize</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a0bc1ebc16494317aa1ee91983ac667e4" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>cdata_size</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a7b7b13085dd52256f182ec5cb5cb45a9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CellAssignor</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ad555e3e5802b997740fb9876d8b5880f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CharVector</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a27c1365779e42101977956a8b1a52a14" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Checkpoint</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a53896bd985c853c947a38f910c63af2e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Checkpoint</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a0e34ff12a872e7b4f1a3e1ea4092f75d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Checkpoint</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a4af9afe57030eb2d0a66b1fab9660594" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CheckpointPost</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a838acf7e996acf88afbeba40e1739b46" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CheckpointPre</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a575c4433c9b8bfec8bd57d5a9bdf7191" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CheckpointVersion</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aba7c433be0b8360af42a8b649bb37c46" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>clearNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aa468e8ad09efe1b96511f7d7ca65b6a6" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>clearNeighborsGPU</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a5ff47752a865159c15227706e6205ced" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>clearParticles</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a15ca1e067f7b0b35c6c55edf81a07a9c" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>computeRefFac</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a3d2e30f73679e93e69b1acec892d4a3a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ConstParticleType</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a4ad32bd643f611ee9d4b501b4a572069" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ContainerLike</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1accf7ad43ed041475794e70d7fd06a278" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>copyParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a6c77d64d9145058cc584301f8f7cac8e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>copyParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a6a78df0fb6333e80fe5e85599eb197ef" prot="private" virt="virtual"><scope>amrex::NeighborParticleContainer</scope><name>correctCellVectors</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1afc23dd0deef223d058b767ce1866bd56" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>countPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a735b84bd8fe130d01d4f54dbb4b1ecd5" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CreateGhostParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a97268ac7cd3066438826a2bc300beec6" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CreateGhostParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ad7f2305fa0eddc382a087c81c35f9e23" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CreateVirtualParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1afa430c0a5370e6ee010ff86d66309306" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CreateVirtualParticles</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a777b3fdf529e65178ba4be9fd37b75f4" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>DataPrefix</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1acaf325141f257a6747887448a2d50094" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Define</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a580c70def9c72011c57ef1b0cec64376" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Define</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ad5bd0f3d81314b010cf18db12bf1d2e3" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Define</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a8ed78268b70651f86cae8e2c4cd84781" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Define</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ac2c025f0da37b5df433f31d23dd15783" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>DefineAndReturnParticleTile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a01523ce80d7e802153bbf3606f9589c0" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>DefineAndReturnParticleTile</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1acaa5cea3d2bd6ed396a169f4057f45d3" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>defineBufferMap</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1aa218a301fbc9bf494d8dcecf7ee60d6d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>do_tiling</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a1464b4259b521c1ed74a68c83ee8ef1a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>doUnlink</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a489d137c303342bb557670749f997930" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>enable_inverse</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a10946f0902af75ab296818655fa6b388" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>enableInverse</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a129df32f5a8f7186b9f1a2307f64b12f" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>EnforcePeriodicWhere</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aa059f60f99bc3f5a3bcf24cdb6638920" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>filePrefixPrePost</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1acb8a5585de824219f78b9b8d952197cf" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>fillNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1afcfa8f96104ddefb10c6fb076847f619" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>fillNeighborsGPU</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a8413cd8e2132d90b5b995204ba89dd69" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>fillNeighborsMPI</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1aa9d1fb8c82d375e2d473e0dd677b3f61" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>finestLevel</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a4d06d65f87feb1bfe8867f86c1de3fd3" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Geom</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a68da6e6d4d985ae4cb97d57801be2447" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetCommTagsBox</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ac16a973f89d619e09805652fcf4f7b94" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetIntCompIndex</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ac480e891b8153fb8cdc696e5c1e9c62e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetIntSoANames</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a0bb96928ae0b6b67cdfe378c09ca9028" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetLevelDirectoriesCreated</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a32654ffc430315cf14b8f4cb3e0551d7" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetMaxNextIDPrePost</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a1eb529c3017818a9d13044fb1482297c" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetNeighborCommTags</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a30de2eac9073181e36b90fe42a35cbfa" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a101f4c5383d30d7ade05ecd633f295dd" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a1846a855343e25e64820d12cb4228d4b" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>getNeighborTags</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aac1ac5776679ea3fe244639093d2ab49" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>getNeighborTags</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a74a0a296ae6ee82e07762e815425598c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetNParticlesPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a92778e3dfeb634870d6ae8822fd0d2b2" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetParGDB</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a56f6e04e3321621a6ca9688d6c2a86ca" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetParGDB</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a7c10a812f79168dc064ac09d8dfe3555" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1af4615169eda7e26320e7e02fc878b441" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a7d57d6e2c8f5a398ced6018b1ca5623f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1abf48a32a4f0bb2379e256afe5e57bdaa" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetParticles</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a27108f3863fce54df642e2958a2826e8" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>getRcvCountsMPI</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ab08c431ee132e75a611ff41e557f98d5" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetRealCompIndex</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a7f203918278faf984e759498878417e4" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetRealSoANames</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a34e38da1037a8148ddca00deea8abafc" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetUsePrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aae309f81887fa1f35e89af02581df42a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetUseUnlink</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a686b95f083fdf17811b9933e189326db" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ghost_int_comp</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1abaca3cff5c84aa26d0e6c4a454af00cd" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ghost_real_comp</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a65100fe165b67994e823d372e4c5256e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>h_redistribute_int_comp</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aaa226a4b30b1045dfef949fb868e706b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>h_redistribute_real_comp</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a7915159e09ba4c623b8b1ea13948bc4f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>HasIntComp</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a5bde7ea76f99ed274bef3626dc3f833b" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>hasNeighbors</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a8cc7be639e70708d236fb56ef77e2785" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>HasRealComp</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a1967a72736444134d0de172ad1358743" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>HdrFileNamePrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a61a99e80f77f904e2696eab11fa27b82" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Increment</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aa4d9ff822804a004174b12259691f2d5" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>IncrementWithTotal</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a0be0a3daa1c49d0371f9f8ad119c109a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Index</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a320cf40ccdf2e69ed16da45855a4a553" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitFromAsciiFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ae2a286ec882515ce66d914e2208559ff" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitFromBinaryFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ab51040008aeb3fd4d4211ca6aaecf335" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitFromBinaryMetaFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ab62f103d41e9e2005bb670b5a2726502" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a5c29c92fbd7c6fd461b5cfb41dbe6c53" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>initializeCommComps</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a51391fb142dbee6a66f681a38e862e4b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitNRandomPerCell</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a781cd3233ca44103d55d8549606c899a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitOnePerCell</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a8df0b51652a1ab42f397e61ffd93bc1a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitRandom</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a26dbd487e76ae4b1c3d8579d95ca7f8a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitRandomPerBox</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a60a40e557410a932b8adc0275a5d019f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>IntVector</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ab2ef89d2bc69cbfa4ca8f26175d2ce1c" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>inverse_tags</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a0fef888a5370f9723f2ab2df2fe32266" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>isDefined</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a2b9f02af8e7da88a8e55af2dadfbcce9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>levelDirectoriesCreated</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1abbb2992e59999ae9c2866da0b90a7378" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>local_neighbor_sizes</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a36b78bd6fa71f934871cf953892ef4f8" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>local_neighbors</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a46b8ebf431eb48f5d95892000a082ed0" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>locateParticle</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a8117b70d723320a9c0c4dfc5d57fb224" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_bins</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a71350435dff09e0768bdc74d0f943655" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_boundary_particle_ids</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a2eddb55f0ebdf394ea2ace09e1d0e4a4" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_buffer_map</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1adc6fa317f2580d5b4eaf5e7e156694e8" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_code_array</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1adc56d3fa06a368656ba30775e6af57d5" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_code_offsets</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1adb9b347bff9efa17831af4b1c5cb846a" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_dummy_mf</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a2821fc52ed661ccd9e9d821b81476fff" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_gdb</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a7faac754ff05cf1b841bfe49dad579ba" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_gdb_object</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a6aafab3c8c1565c5457b08400f0c7984" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_grid_map</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a027a8bd9c7726edd5ab979a6ee716fa8" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_has_neighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a8cec5f0f49ca18e99496c3530716772b" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_isec_boxes</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a739c2408e1c55081d20e737f6bf7ec8f" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_neighbor_list</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a68fedc2fd57b0e5efccdf65617f930ff" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_neighbor_mask_initialized</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a0f3bc83f8fdf1b3468248103a0000a49" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_neighbor_mask_ptr</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9c12404dedc750595ce4d68731d6fc29" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_num_neighbor_cells</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a87e6d8dc966e6089011ddb15c43a2f74" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_num_runtime_int</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a972a56d27fa5ca77b8eb78e93637180d" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_num_runtime_real</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1aa9bbd6752d478b3a24e66f2caa11196b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_particle_locator</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a08209cdd1d5e91d7d010403fd22b3468" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_particles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1af9c8295a918075bcaac70f264b946b0e" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_runtime_comps_defined</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a3010aeeab3ad4bb64d4780d6fc34f81a" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_soa_idata_names</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a6590f9d96ec2dacb9bd5e9bc028f84f5" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_soa_rdata_names</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1aed7d0053f45c4e966e5e3e69d6f19d68" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_stable_redistribute</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a89f6fb84fb7e73fc185ae5d8f45818ab" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_verbose</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aec14ad85cd735ad9aeaa4b51e26fff6a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>make_alike</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1adc8bb6ea7e7d8a9596936623bc2e26ed" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>MakeMFIter</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a41cb0c34d64f3d1df87d83f3b26f594b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>MakeMFIter</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a30a608b14352a5cd5bfed79f69f98011" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>MakeMFIter</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ad8787f8726e711a8d7a8e0dce3fb8624" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>mask_ptr</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1ad60ba0c10f19af842fdfbeaccd02b2ed" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>maxLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a20ff6222649a69a92ec84ebb90686f97" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>maxnextidPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a86efecc15f1b38749fee866a4be234ea" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>MaxParticlesPerRead</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1ae385b95f314d4d6691f1c53ba91505c6" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>MaxReaders</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a5bc087527efb5c9aec1ca15f3abafc35" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>memEfficientSort</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a4f7f3ca7bf951e7ec6fce594005694da" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>MyParIter</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a3063446dc305120704ec3f1670f301c1" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NArrayInt</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a32623939f5453d39bcfc26fef34972a8" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NArrayReal</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a42b4110915286223007d92bbcf580d89" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>neighbor_copy_op</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a4057e1a1eaeca59b1c87cec0720343d6" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>neighbor_copy_plan</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a68d92607a1d43f215ae6af8ff8d3e3af" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>neighbor_list</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a704c1b5b30612c4f5a09378f0a63b221" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>neighbor_procs</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ae77c84d55fb9e147fc49a60bd44d42d6" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborCommMap</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a43409db639b332ea93f0ad257dc54bc7" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborListContainerType</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1afdc38b73df1e102c73af05a2d814d3e4" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborParticleContainer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a04cedff11be23a14eb5b47dfb818695f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborParticleContainer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a7ce8a903b6da41ecd366aaaa48d6ee9d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborParticleContainer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1adff18120eea0cf9a843f2779fa7afb80" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborParticleContainer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a8e16762fd9648d7b623cff439d75e888" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborParticleContainer</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a2779b5a388da42483553b8802cf2371f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborProcs</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a2db2fa1d27368a0d8f2a783f215cd93b" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>neighbors</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a1f6eee153647b98b534ef908e86ae03f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>nOutFilesPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a0a0a8965a9936565a35f699f67df9554" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>nParticlesAtLevelPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a9579f1b170547de35dcb4a0b4d84d0c0" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>nparticlesPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a591fb654644bfe6f3b18e63547e1079f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NStructInt</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aa7617bd59325bac568183d9bbcf32ee3" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NStructReal</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ad29ae6f512fcf498a95666ad47ee71e5" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>num_int_comm_comps</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aebe05d83866295fa66cd195bfd2ccc44" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>num_mask_comps</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ae3bf517b7cadd7ea83a0fb14a706c48a" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>num_real_comm_comps</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9c0cf5742a0014b73afe38a75f02534e" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>num_snds</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aa76328c26eb35699479bed078241aa27" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumberOfParticlesAtLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aca2a05694e8f764f7a897f443005ef25" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumberOfParticlesInGrid</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ab761b38df59cb25e8a4fb73ad61dad64" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumIntComps</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a6ec01a89cd77b4473dc1895e1a2b1ebe" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>numLevels</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aa2c16c3a436932f9a3f4ce5eaaf11e0c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>numLocalTilesAtLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a5c0a1d474a92f4622e6156cbd8b42a27" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumRealComps</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a72e673a1fb1acdb894fb63417aaf3c59" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumRuntimeIntComps</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a926b41920a7dd2ca180db0717f726faa" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumRuntimeRealComps</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a1bc5ab891d45a0e44da097b43f94b7fb" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>OK</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a92aa9afcd8adbbb62d06b8c3c293912a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>OnSameGrids</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a48a36aaec1d09775ee04d9abdbb24bf5" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>operator&lt;&lt;</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1accfe8e6d51a654b697f8f3ca0154566b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>operator=</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a6160d2827d7f03410f60173d230ab83b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>operator=</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1abb538e22fbb1040357afa25499040130" prot="public" virt="non-virtual" ambiguityscope="amrex::ParticleContainer_impl::"><scope>amrex::NeighborParticleContainer</scope><name>operator=</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aba1add770f076a80ad7cdaafd468600d" prot="public" virt="non-virtual" ambiguityscope="amrex::ParticleContainer_impl::"><scope>amrex::NeighborParticleContainer</scope><name>operator=</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a05d7cf849b59c815bc33a0f71d68576b" prot="public" virt="non-virtual" ambiguityscope="amrex::ParticleContainerBase::"><scope>amrex::NeighborParticleContainer</scope><name>operator=</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1ab1ba13d6abacc075b19e6375ec9889f8" prot="public" virt="non-virtual" ambiguityscope="amrex::ParticleContainerBase::"><scope>amrex::NeighborParticleContainer</scope><name>operator=</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a0c2a28aef7db24fbfccc53f46637a582" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>PairIndex</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a8a9724a602a1034017c9578d45910a90" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParConstIterType</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1adb85276367bb16831500bd619a7fa724" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParIterType</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ad2bc38953d14a33e1d165372b1f8d3e4" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>particle_size</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a2c0b7f83bf8704d063c57f1e629f4fcb" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleBoxArray</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a5b175fd2bdaed24ba7c697985561e773" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer_impl</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a893cd026d19d1c7791f9edbf1beb9e80" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer_impl</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a448d1854177c7b246db5a02823eb32df" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer_impl</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1acaf9845e14cca4dc0cf89bfba1c09a7f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer_impl</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a17b32ed9f05b29c632ad9dc82e13f0fa" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer_impl</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a3eb505b47edc7093c1b416c4db35f925" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer_impl</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a27b28bd4f409e4f4fee09aa7e43a9f33" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer_impl</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a51bba5cff5a55e3f6ce46c0b56fa1809" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainerBase</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a783bf6edc1d9d0bdc5d4e8dd1f98cd5f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainerBase</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a66e036defd5c86431c583bbd8cb91e2d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainerBase</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a1b59660938f651e5a56bc45bb6bc4d8e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainerBase</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1af60ff4efea559ba4e49dc7178e504e4c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainerBase</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a5f71ad65c90b78b062f40127d91a3134" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainerBase</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1af17feaf161d82ae2ef0466b6188cc7b0" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainerBase</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aa454b3f1c4a133faaa1d28b9c8c254d8" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainerType</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a1d3c53a73651fd4d1b30a4b7f92f11b5" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleDistributionMap</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1ae2ad71767464fef55467f5b2af2ade3f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleGeom</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a39f3dad374127876863b7888ac53b465" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleInitData</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a2a95432c01c58984730881db4e162f02" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ad396acd787a21008fac169e86ab7dd1f" prot="private" virt="virtual"><scope>amrex::NeighborParticleContainer</scope><name>particlePostLocate</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a1b57811f2abf751ac0228b4c5c43442c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleRealDescriptor</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a52077b438cd08b19e37486a4f402a460" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticlesAt</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ade23813204c0c42e9a4da001d9a16446" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticlesAt</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a32f4e8e7c16db83c91f2a79bf1325c80" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticlesAt</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a1d3f01e46337c97d258407ba888bf3f0" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticlesAt</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a88e27f1bb35a55e5fb6555057e1e25ac" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleTile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aad727cb5c9b392a0ec2c7bbabdf22576" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleTileType</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ab9497648313d317adc40bc7bebb5ca2d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleType</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ade2385ed6d6005f38a31d3709b55fc4c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleVector</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a94f1d1574b0fb4f340d088480ee5fbc1" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>pdata_size</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a292a389112a6b521e0fd93a93d1500eb" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>PeriodicShift</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a57f27a8f270653d1a738490e32dffe4b" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>pinned_rcv_buffer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a1f7704df7069ec0df0e84a649babf620" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>pinned_snd_buffer</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a455c5a8b3e564ebdd8f3008995096057" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>PlotfileVersion</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ad7528534f68470a63985ebec885d21cf" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>PrintCapacity</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a30c5d8ec64c6b92416e8c9ef53415bed" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>printNeighborList</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aed17d81f3a6f2128f594599d2f700105" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>rcv_buffer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a6d6260836577412b1a3a17c7f8d09bc4" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>rcvs</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a26d6df612421a3465dc622e1c52954b1" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ReadParticleRealData</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a608343590b5172b850efbd370f0cd6e9" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ReadParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aac72f922b5c6acf01660db3263a3967b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RealType</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a3c635ec7175b9f6f28bce938ea801423" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RealVector</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1ad5f30ae5a0147ce527c0ba93eba393b2" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RedefineDummyMF</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ace50f0cb60f7340d8f38d1fb7cc5be88" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Redistribute</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1ac6b4b306d8f0399657b3884f51ea569e" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>redistribute_mask_nghost</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a18183e85d5ae22c27721996b3c5bfead" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>redistribute_mask_ptr</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a2d404cca389bc501cd8388997a62507a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RedistributeCPU</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1abb2694fa742ba11d0c8dac15cc9c2831" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RedistributeGPU</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a87eefb7672630057e6c862494d12bff9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RedistributeLocal</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ab6d68054b299d03929d9b54369caf883" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RedistributeMPI</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a73e658c45a529893921685643fb4394d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Regrid</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a3205f6eddc5d10390735ccb357aa862a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Regrid</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a94c73b0500c4d153536b364fd34fa310" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Regrid</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a514437dcd26d7780f2a2089a049c82be" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RemoveParticlesAtLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ac94552c20fc683c201073a40e3c363e1" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RemoveParticlesNotAtFinestLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a11b7e58536c0018fec367cae73c564cb" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ReorderParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1af3cf62158c41dbaee7e1529179f86c84" prot="public" virt="virtual"><scope>amrex::NeighborParticleContainer</scope><name>reserveData</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ad20adffbe4b4746c86ea9fc41034e860" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Reset</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a688040e2b87d758b2b32931617d310b3" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>resizeContainers</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a907ddeaea4ca42fcb1c485d701013d27" prot="public" virt="virtual"><scope>amrex::NeighborParticleContainer</scope><name>resizeData</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a13e8f05b4ed5423af853e90b6ea04c38" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ResizeRuntimeIntComp</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a935197ee3cb7a3665b16ec8ded3ea0ce" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ResizeRuntimeRealComp</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1acb9f13c7fa4d704bfb55677fca839469" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Restart</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1abf5ffec33df70c64b7ca055873a055da" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Restart</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a12039aca5af54df4ee587db2ea95c857" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>selectActualNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a5ba336738781f2d529bbb68a7f297e17" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>send_data</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9fd86ef6591da68553312d8cc6321034" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>setEnableInverse</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ada159dbd6d69caa45134b00a5d097eb5" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>setIntCommComp</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a51414af32d7051aef77e91a94ae009ef" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetLevelDirectoriesCreated</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1ae4c36450603243012e55a13c30b6f924" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetParGDB</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1af39ed2aa32a6359b1ab7368a3c1dea13" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetParGDB</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a4b94090fae113940cbe7af3cf19e724c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetParGDB</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a9231dc83e842370bb5e91c77eb5a6915" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetParticleBoxArray</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1ae09bdef9314b42d58a5000ba54298b95" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetParticleDistributionMap</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1adf3e361fae56b92d85299fb77fbe111b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetParticleGeometry</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a4820e40e502374a1e7b31736b3df0f29" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetParticleSize</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a09a8dff61d694d6e6bebd4e31b509cfa" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>setRealCommComp</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a36f7b9890c89ef5af2261d6f1397dcab" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetSoACompileTimeNames</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a3a3a7f6cf9b25237e536f06d7db113b5" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>setStableRedistribute</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a5bec5781b720b0e352bf4175e53db209" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetUsePrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a07a6c47cf3f6c0e4eb77bbb5a3651cac" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetUseUnlink</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a2a0f56f8b64e6c0315442033ebd79fac" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetVerbose</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a841e3e49cf95184882af71b4ae2eed7c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ShrinkToFit</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a8fd0536bf961bc912c1a380d93b077dd" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>snd_buffer</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a69ff052875e307b7cb9ca774912b4003" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SoA</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a765156e4c796a3fb87ef155c773f020e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SortParticlesByBin</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aa901019469055fb65969c92b37460ffd" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SortParticlesByCell</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a5a522d14748b73644f8a9c542c73810f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SortParticlesForDeposition</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a039ae2c7aff1bad803fbb84ca49a79a7" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>stableRedistribute</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9187eddfa35050d7b2bf91bd8109e88b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>sumNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a3d438df75144765d576329bce2e0b9bf" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>sumNeighborsMPI</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a0f5632ab05c6d5c93ec4c4deb0ed0753" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>superparticle_size</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1acc0e05b69f7bc04b034f32697edd73f3" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>superParticleSize</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a1c6baf08ed7bdeb1d7a7acf30eefad52" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SuperParticleType</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1aef5ac9f0985c8a3170a554969eb375cb" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>tile_size</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1af2d2b1e86982b739cd6fc6b2549c9de0" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>TotalNumberOfParticles</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a8be53de63906df4758fa492f49118d7c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>updateNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ac724351a52c76d14b8373c0d9fb20dc2" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>updateNeighborsGPU</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1adaf8edd2c78ff65581a26e7ce38a5489" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>use_comms_arena</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a6ed8edcd2e87a52794e213130dcd0560" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>use_mask</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1afd72327ed221e95f199aa4b22e98f662" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>usePrePost</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1aecfa142bba944fe440b23bd13a79c08e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Verbose</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a2d19ef2ac991ec35e1f75c934f453e0e" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Where</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a19cc9a46b7d9e49c478bc9f26714ee0b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>wherePrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a163a2894a9c1d9ff00c278ee873d2497" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>whichPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a4348f22ec8abc2cab803f8a1aea6e494" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WriteAsciiFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1af4a82116b11fb56e946701ec1576abf9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WriteBinaryParticleData</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ae95ee1cface54e5fda03407190b3a464" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WriteParticleRealData</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1acfeb22c8b5b4266834fea14b1444703c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WriteParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ae2a882c357b72c84b934c0126976c65b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ac619ec4f2ce3efa064323b62a4abab23" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a326446070fe5e2374da5bedf87cc25e2" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a02301b2a02e6fb1ca08c96c9fda109be" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1af248577e6120966c6ed573fe1d8828b4" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a8f7940c8c21dec419a2c751a2e61c20a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a54674ebf0207f608d21f7862c256ad99" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a039fc5fda00bc515f0a1064af928cdc6" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a92576f2c69ef205393563dfc7efe5b4a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aff4d24c0425cd1106380405cc293eacc" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a33a9eb317737d277ff55d8ceac83cad0" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFilePost</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a04848df25835aa49080bb5eb4854085f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFilePre</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a4d1fb81f019aa99065cb59c879fd7e7c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>~NeighborParticleContainer</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1af10957def8edc4549269e00ba154a0b4" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>~ParticleContainer_impl</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a9767823a5595f287569a535bb3b8ae59" prot="public" virt="virtual"><scope>amrex::NeighborParticleContainer</scope><name>~ParticleContainerBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
