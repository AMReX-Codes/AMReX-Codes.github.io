<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classamrex_1_1NeighborParticleContainer" kind="class" language="C++" prot="public">
    <compoundname>amrex::NeighborParticleContainer</compoundname>
    <basecompoundref refid="classamrex_1_1ParticleContainer" prot="public" virt="non-virtual">amrex::ParticleContainer&lt; NStructReal, NStructInt, 0, 0 &gt;</basecompoundref>
    <includes refid="AMReX__NeighborParticles_8H" local="no">AMReX_NeighborParticles.H</includes>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1InverseCopyTag" prot="private">amrex::NeighborParticleContainer::InverseCopyTag</innerclass>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1MaskComps" prot="private">amrex::NeighborParticleContainer::MaskComps</innerclass>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCommTag" prot="private">amrex::NeighborParticleContainer::NeighborCommTag</innerclass>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" prot="private">amrex::NeighborParticleContainer::NeighborCopyTag</innerclass>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1NeighborIndexMap" prot="private">amrex::NeighborParticleContainer::NeighborIndexMap</innerclass>
    <templateparamlist>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NStructReal</declname>
        <defname>NStructReal</defname>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NStructInt</declname>
        <defname>NStructInt</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1af2e8e332b50e495c32925b61b1a4b90d" prot="public" static="no">
        <type><ref refid="classamrex_1_1ParticleContainer" kindref="compound">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer_1a74cc708fff367f884397efee0404d26e" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a8efc7329c2a8acf91fb7fb2533584ad2" kindref="member">NStructInt</ref>, 0, 0 &gt;</type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::ParticleContainerType =  ParticleContainer&lt;NStructReal, NStructInt, 0, 0&gt;</definition>
        <argsstring></argsstring>
        <name>ParticleContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="36" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1ad77c3162bc7d451e1a31652dcab81057" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer_1acec0a5189d35cb69b793e7f98030e164" kindref="member">ParticleContainerType::SuperParticleType</ref></type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::SuperParticleType =  typename ParticleContainerType::SuperParticleType</definition>
        <argsstring></argsstring>
        <name>SuperParticleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="37" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1aa1d79fe5cc0935cf6d819bbbd00d973b" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer" kindref="compound">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer_1a74cc708fff367f884397efee0404d26e" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a8efc7329c2a8acf91fb7fb2533584ad2" kindref="member">NStructInt</ref>, 0, 0 &gt;::<ref refid="classamrex_1_1NeighborParticleContainer_1aa1d79fe5cc0935cf6d819bbbd00d973b" kindref="member">ParticleType</ref></type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::ParticleType =  typename ParticleContainer&lt;NStructReal, NStructInt, 0, 0&gt;::ParticleType</definition>
        <argsstring></argsstring>
        <name>ParticleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="189" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1a9eee43a9d618075ae5aedcacc6c104e4" prot="public" static="no">
        <type><ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref>&lt; <ref refid="classamrex_1_1ParticleContainer_1a74cc708fff367f884397efee0404d26e" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a8efc7329c2a8acf91fb7fb2533584ad2" kindref="member">NStructInt</ref>, 0, 0 &gt;</type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::MyParIter =  ParIter&lt;NStructReal, NStructInt, 0, 0&gt;</definition>
        <argsstring></argsstring>
        <name>MyParIter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="191" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1ab169827a8824abb993c34e715e250f49" prot="public" static="no">
        <type>std::pair&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::PairIndex =  std::pair&lt;int, int&gt;</definition>
        <argsstring></argsstring>
        <name>PairIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="192" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1ae1cee6fdcb3e89d814d42aa6f20ffb50" prot="public" static="no">
        <type>std::map&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCommTag" kindref="compound">NeighborCommTag</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; char &gt; &gt;</type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::NeighborCommMap =  std::map&lt;NeighborCommTag, Vector&lt;char&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>NeighborCommMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="193" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1abda283254c9aa57da66fa85e8bcd57da" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer" kindref="compound">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer_1a74cc708fff367f884397efee0404d26e" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a8efc7329c2a8acf91fb7fb2533584ad2" kindref="member">NStructInt</ref>, 0, 0 &gt;::<ref refid="classamrex_1_1NeighborParticleContainer_1abda283254c9aa57da66fa85e8bcd57da" kindref="member">AoS</ref></type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::AoS =  typename ParticleContainer&lt;NStructReal, NStructInt, 0, 0&gt;::AoS</definition>
        <argsstring></argsstring>
        <name>AoS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="194" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1a244bb9e75cea8c215f5b50b6895ed54d" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer" kindref="compound">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer_1a74cc708fff367f884397efee0404d26e" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a8efc7329c2a8acf91fb7fb2533584ad2" kindref="member">NStructInt</ref>, 0, 0 &gt;::<ref refid="classamrex_1_1NeighborParticleContainer_1a244bb9e75cea8c215f5b50b6895ed54d" kindref="member">ParticleVector</ref></type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::ParticleVector =  typename ParticleContainer&lt;NStructReal, NStructInt, 0, 0&gt;::ParticleVector</definition>
        <argsstring></argsstring>
        <name>ParticleVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="195" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1aab80b7dbd7854b08358199dd39b7cfb9" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer" kindref="compound">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer_1a74cc708fff367f884397efee0404d26e" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a8efc7329c2a8acf91fb7fb2533584ad2" kindref="member">NStructInt</ref>, 0, 0 &gt;::<ref refid="classamrex_1_1NeighborParticleContainer_1aab80b7dbd7854b08358199dd39b7cfb9" kindref="member">IntVector</ref></type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::IntVector =  typename ParticleContainer&lt;NStructReal, NStructInt, 0, 0&gt;::IntVector</definition>
        <argsstring></argsstring>
        <name>IntVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="196" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1ac167c31e10246c5fb4316fa944971904" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer" kindref="compound">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer_1a74cc708fff367f884397efee0404d26e" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a8efc7329c2a8acf91fb7fb2533584ad2" kindref="member">NStructInt</ref>, 0, 0 &gt;::<ref refid="classamrex_1_1NeighborParticleContainer_1ac167c31e10246c5fb4316fa944971904" kindref="member">SendBuffer</ref></type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::SendBuffer =  typename ParticleContainer&lt;NStructReal, NStructInt, 0, 0&gt;::SendBuffer</definition>
        <argsstring></argsstring>
        <name>SendBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="197" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="197" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1ab5c3aa270ffa2be5fd87c1b90ae41e23" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1ab169827a8824abb993c34e715e250f49" kindref="member">PairIndex</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1InverseCopyTag" kindref="compound">InverseCopyTag</ref> &gt; &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;PairIndex, Vector&lt;InverseCopyTag&gt; &gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::inverse_tags</definition>
        <argsstring></argsstring>
        <name>inverse_tags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="348" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a9d868e97cf5644b365ca4e6742f0c644" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1ab169827a8824abb993c34e715e250f49" kindref="member">PairIndex</ref>, <ref refid="classamrex_1_1NeighborParticleContainer_1a244bb9e75cea8c215f5b50b6895ed54d" kindref="member">ParticleVector</ref> &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;PairIndex, ParticleVector&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::neighbors</definition>
        <argsstring></argsstring>
        <name>neighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="349" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1adc2907c34b72b86a0c2c31ae0f5140c3" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1ab169827a8824abb993c34e715e250f49" kindref="member">PairIndex</ref>, <ref refid="classamrex_1_1NeighborParticleContainer_1aab80b7dbd7854b08358199dd39b7cfb9" kindref="member">IntVector</ref> &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;PairIndex, IntVector&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::neighbor_list</definition>
        <argsstring></argsstring>
        <name>neighbor_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="350" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a683d4fcc37d9b1553f64124f5d6adafe" prot="protected" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::pdata_size</definition>
        <argsstring></argsstring>
        <name>pdata_size</name>
        <initializer>= sizeof(<ref refid="classamrex_1_1NeighborParticleContainer_1aa1d79fe5cc0935cf6d819bbbd00d973b" kindref="member">ParticleType</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="351" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a1e5039db78995c9f1e60c816780c91ab" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::cdata_size</definition>
        <argsstring></argsstring>
        <name>cdata_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="354" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1aa0f8017a2f345ca603b5f556933bcbac" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::m_num_neighbor_cells</definition>
        <argsstring></argsstring>
        <name>m_num_neighbor_cells</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="355" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a1683922f39c0dd124022c5e1071f3cb5" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCommTag" kindref="compound">NeighborCommTag</ref> &gt;</type>
        <definition>Vector&lt;NeighborCommTag&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::local_neighbors</definition>
        <argsstring></argsstring>
        <name>local_neighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="356" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a65110fa3e33e93d700a3109246ef506b" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::unique_ptr&lt; <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> &gt; &gt;</type>
        <definition>Vector&lt;std::unique_ptr&lt;iMultiFab&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::mask_ptr</definition>
        <argsstring></argsstring>
        <name>mask_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="357" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a850509e24e6a8560ae8a73f36e4df525" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1ab169827a8824abb993c34e715e250f49" kindref="member">PairIndex</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" kindref="compound">NeighborCopyTag</ref> &gt; &gt; &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;PairIndex, Vector&lt;Vector&lt;NeighborCopyTag&gt; &gt; &gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::buffer_tag_cache</definition>
        <argsstring></argsstring>
        <name>buffer_tag_cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="359" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1af263c3cda7b720f2d950f2f7b27fc480" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1ab169827a8824abb993c34e715e250f49" kindref="member">PairIndex</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;PairIndex, int&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::local_neighbor_sizes</definition>
        <argsstring></argsstring>
        <name>local_neighbor_sizes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="360" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a45987a711af4e60d4beeba11c9cad42b" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::neighbor_procs</definition>
        <argsstring></argsstring>
        <name>neighbor_procs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>each proc knows how many sends it will do, and how many bytes it will rcv from each other proc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="364" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a54569a1ba64fd29970a1d5a202a7dbd6" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt;</type>
        <definition>Vector&lt;Long&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::rcvs</definition>
        <argsstring></argsstring>
        <name>rcvs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="365" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a3e88a983e9e3445b2c1c857195498bc0" prot="protected" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::num_snds</definition>
        <argsstring></argsstring>
        <name>num_snds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="366" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a3b830160ca11e0f7cdead7ae3f6aa19f" prot="protected" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; char &gt; &gt;</type>
        <definition>std::map&lt;int, Vector&lt;char&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::send_data</definition>
        <argsstring></argsstring>
        <name>send_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="367" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1acd7839ccee6f7b170fed84bc50d15a1f" prot="protected" static="no" mutable="no">
        <type>std::array&lt; bool, AMREX_SPACEDIM+<ref refid="classamrex_1_1ParticleContainer_1a74cc708fff367f884397efee0404d26e" kindref="member">NStructReal</ref> &gt;</type>
        <definition>std::array&lt;bool, AMREX_SPACEDIM + NStructReal&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::rc</definition>
        <argsstring></argsstring>
        <name>rc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="369" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1aeaa3b1bb8b6e40c8899b06779754db1d" prot="protected" static="no" mutable="no">
        <type>std::array&lt; bool, 2+<ref refid="classamrex_1_1ParticleContainer_1a8efc7329c2a8acf91fb7fb2533584ad2" kindref="member">NStructInt</ref> &gt;</type>
        <definition>std::array&lt;bool, 2 + NStructInt&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::ic</definition>
        <argsstring></argsstring>
        <name>ic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="370" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a1e12acc11cbade3be179e96e6f2b35b4" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; std::pair&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;, <ref refid="classamrex_1_1NeighborList" kindref="compound">amrex::NeighborList</ref>&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1aa1d79fe5cc0935cf6d819bbbd00d973b" kindref="member">ParticleType</ref> &gt; &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;std::pair&lt;int, int&gt;, amrex::NeighborList&lt;ParticleType&gt; &gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::m_neighbor_list</definition>
        <argsstring></argsstring>
        <name>m_neighbor_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="419" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a7b705eb7801619d0a8297bd6633abd75" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::m_has_neighbors</definition>
        <argsstring></argsstring>
        <name>m_has_neighbors</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="423" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="423" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a436bb8b4cab5f2079831c68f4d3341ad" prot="protected" static="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::num_mask_comps</definition>
        <argsstring></argsstring>
        <name>num_mask_comps</name>
        <initializer>= 3</initializer>
        <briefdescription>
<para>grid, tile, level </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="353" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a21bd4a08b87b0afeeb0d8889c619c86c" prot="protected" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool NeighborParticleContainer::use_mask</definition>
        <argsstring></argsstring>
        <name>use_mask</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="372" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a253931bb13b740bcdf8da45fe68a4591" prot="protected" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool NeighborParticleContainer::enable_inverse</definition>
        <argsstring></argsstring>
        <name>enable_inverse</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="374" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="374" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classamrex_1_1NeighborParticleContainer_1af2dd70e123c4708809ddc29dc04124e9" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const InverseCopyTag &amp;tag)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1NeighborParticleContainer_1_1InverseCopyTag" kindref="compound">InverseCopyTag</ref> &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="139" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="139" bodyend="145"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1aec6aa68d7cccf38bf8f2ece89e2e47ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeighborParticleContainer::NeighborParticleContainer</definition>
        <argsstring>(ParGDBBase *gdb, int ncells)</argsstring>
        <name>NeighborParticleContainer</name>
        <param>
          <type><ref refid="classamrex_1_1ParGDBBase" kindref="compound">ParGDBBase</ref> *</type>
          <declname>gdb</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncells</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="199" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="10" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1aee22d011a8f857aed34e87c077080b96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::NeighborParticleContainer</definition>
        <argsstring>(const Geometry &amp;geom, const DistributionMapping &amp;dmap, const BoxArray &amp;ba, int nneighbor)</argsstring>
        <name>NeighborParticleContainer</name>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const BoxArray &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nneighbor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="201" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="19" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a41dfa9de47f0e68d1eebecd862aeedbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::NeighborParticleContainer</definition>
        <argsstring>(const Vector&lt; Geometry &gt; &amp;geom, const Vector&lt; DistributionMapping &gt; &amp;dmap, const Vector&lt; BoxArray &gt; &amp;ba, const Vector&lt; int &gt; &amp;rr, int nneighbor)</argsstring>
        <name>NeighborParticleContainer</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &gt; &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &gt; &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; BoxArray &gt; &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &amp;</type>
          <declname>rr</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nneighbor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="206" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="31" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1adbf6915c6877b366e0bda3e6f268eb30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::Regrid</definition>
        <argsstring>(const DistributionMapping &amp;dmap, const BoxArray &amp;ba)</argsstring>
        <name>Regrid</name>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const BoxArray &amp;</type>
          <declname>ba</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Regrid functions </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="215" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="91" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1aee1b7c1708cd7d226db64b05d590d1fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::Regrid</definition>
        <argsstring>(const DistributionMapping &amp;dmap, const BoxArray &amp;ba, const int lev)</argsstring>
        <name>Regrid</name>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const BoxArray &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="216" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="102" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a991c2e4f486d6cbb9cf74c326c1ad357" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::Regrid</definition>
        <argsstring>(const Vector&lt; DistributionMapping &gt; &amp;dmap, const Vector&lt; BoxArray &gt; &amp;ba)</argsstring>
        <name>Regrid</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &gt; &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; BoxArray &gt; &amp;</type>
          <declname>ba</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="217" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="112" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a2c1bf28f2552627e93d1587e977dd22a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::fillNeighbors</definition>
        <argsstring>()</argsstring>
        <name>fillNeighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This fills the neighbor buffers for each tile with the proper data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="222" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="611" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a881b90e85491b4c0a7bb25425cc38641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::sumNeighbors</definition>
        <argsstring>(int real_start_comp, int real_num_comp, int int_start_comp, int int_num_comp)</argsstring>
        <name>sumNeighbors</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>real_start_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>real_num_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>int_start_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>int_num_comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This does an &quot;inverse&quot; fillNeighbors operation, meaning that it adds data from the ghost particles to the corresponding real ones. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="228" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="623" bodyend="630"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1add63262756c48b8f645f236c664067d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::updateNeighbors</definition>
        <argsstring>()</argsstring>
        <name>updateNeighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This updates the neighbors with their current particle data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="234" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="635" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a287e510b67bfbb6bd4d500e5281e3329" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::clearNeighbors</definition>
        <argsstring>()</argsstring>
        <name>clearNeighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Each tile clears its neighbors, freeing the memory </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="239" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="651" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a6053ab4e4304050ea4cfd5b9aafc839a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CheckPair</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::buildNeighborList</definition>
        <argsstring>(CheckPair &amp;&amp;check_pair, bool sort=false)</argsstring>
        <name>buildNeighborList</name>
        <param>
          <type>CheckPair &amp;&amp;</type>
          <declname>check_pair</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sort</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a Neighbor List for each tile </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="245" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="665" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1aac13e1f1c324181ce01a8f50fe3897d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::printNeighborList</definition>
        <argsstring>()</argsstring>
        <name>printNeighborList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="247" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="734" bodyend="748"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a9c5eaf4a73e02b631f586b8d9eaa9b44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::setRealCommComp</definition>
        <argsstring>(int i, bool value)</argsstring>
        <name>setRealCommComp</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="249" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a63cbb0b5b6c81df9e4321148bc960f32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::setIntCommComp</definition>
        <argsstring>(int i, bool value)</argsstring>
        <name>setIntCommComp</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="250" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1aa2a2b46f097c98884103c3a7046e64f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1NeighborParticleContainer_1a244bb9e75cea8c215f5b50b6895ed54d" kindref="member">ParticleVector</ref> &amp;</type>
        <definition>ParticleVector&amp; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::GetNeighbors</definition>
        <argsstring>(int lev, int grid, int tile)</argsstring>
        <name>GetNeighbors</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="252" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="252" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a67d318ef154e37e3dde5f5cb8745f776" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1NeighborParticleContainer_1a244bb9e75cea8c215f5b50b6895ed54d" kindref="member">ParticleVector</ref> &amp;</type>
        <definition>const ParticleVector&amp; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::GetNeighbors</definition>
        <argsstring>(int lev, int grid, int tile) const</argsstring>
        <name>GetNeighbors</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="257" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="257" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a61563f663a017a54de333524e6d976e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::Redistribute</definition>
        <argsstring>(int lev_min=0, int lev_max=-1, int nGrow=0, int local=0)</argsstring>
        <name>Redistribute</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev_min</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev_max</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nGrow</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>local</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="262" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="262" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1aed1d7df235a9042894bb42785bb16b9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::RedistributeLocal</definition>
        <argsstring>()</argsstring>
        <name>RedistributeLocal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="269" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="269" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1aa67093443956c508eba7928ca9c43789" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::fillNeighborsCPU</definition>
        <argsstring>()</argsstring>
        <name>fillNeighborsCPU</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="284" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="9" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1ab231fe12c26f5349f8c4005c8b85a170" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::sumNeighborsCPU</definition>
        <argsstring>(int real_start_comp, int real_num_comp, int int_start_comp, int int_num_comp)</argsstring>
        <name>sumNeighborsCPU</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>real_start_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>real_num_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>int_start_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>int_num_comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="285" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="20" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a82b7b32706c360ef9da4f2501f0d2ef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::updateNeighborsCPU</definition>
        <argsstring>(bool reuse_rcv_counts=true)</argsstring>
        <name>updateNeighborsCPU</name>
        <param>
          <type>bool</type>
          <declname>reuse_rcv_counts</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="287" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="270" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1ab52778d0154284955fa59e2e6bc36482" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::clearNeighborsCPU</definition>
        <argsstring>()</argsstring>
        <name>clearNeighborsCPU</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="288" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="384" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a6529150825ca3bed308c9424ba1ca358" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::setEnableInverse</definition>
        <argsstring>(bool flag)</argsstring>
        <name>setEnableInverse</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="291" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="291" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1ac0913cb43a3b4ca5bf9874dc8245382b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::enableInverse</definition>
        <argsstring>()</argsstring>
        <name>enableInverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="297" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="297" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1ad01b79b58df596f16982763a74e34d70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::buildNeighborMask</definition>
        <argsstring>()</argsstring>
        <name>buildNeighborMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="299" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesGPUImpl.H" bodystart="51" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a9f9b59556eee3e510dfa52a90110fe78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::buildNeighborCopyOp</definition>
        <argsstring>()</argsstring>
        <name>buildNeighborCopyOp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="301" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesGPUImpl.H" bodystart="142" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a702f3d0adf02749c4ac595d4c1a11319" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CheckPair</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::buildNeighborList</definition>
        <argsstring>(CheckPair &amp;&amp;check_pair, bool sort)</argsstring>
        <name>buildNeighborList</name>
        <param>
          <type>CheckPair &amp;&amp;</type>
          <declname>check_pair</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" line="663" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="664" bodyend="728"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a497db0eca21eb270f545e60f034aeb6a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::cacheNeighborInfo</definition>
        <argsstring>()</argsstring>
        <name>cacheNeighborInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="305" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="289" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1af79112d043b45868fb00cf720d61b0a5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::BuildMasks</definition>
        <argsstring>()</argsstring>
        <name>BuildMasks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This builds the internal mask data structure used for looking up neighbors </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="310" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="125" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a01f3711526aa5aff0183fc0eeee6a866" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::GetNeighborCommTags</definition>
        <argsstring>()</argsstring>
        <name>GetNeighborCommTags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="312" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="169" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1ace4a68e9536f7e36dd141825cdc04519" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::GetCommTagsBox</definition>
        <argsstring>(Vector&lt; NeighborCommTag &gt; &amp;tags, const int lev, const Box &amp;in_box)</argsstring>
        <name>GetCommTagsBox</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCommTag" kindref="compound">NeighborCommTag</ref> &gt; &amp;</type>
          <declname>tags</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>in_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="314" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="242" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1af03a2d960e9c4975823cee72793a6410" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::resizeContainers</definition>
        <argsstring>(const int lev)</argsstring>
        <name>resizeContainers</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="316" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="753" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a9fc777a6611729b79c56fc8f1782c830" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::initializeCommComps</definition>
        <argsstring>()</argsstring>
        <name>initializeCommComps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="318" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="45" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a9fea3b7765226c9483a81c772e3cfcd0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::calcCommSize</definition>
        <argsstring>()</argsstring>
        <name>calcCommSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="320" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="72" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1af3b5f685680bc88ad15c0f2cd5ee44c8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::fillNeighborsMPI</definition>
        <argsstring>(bool reuse_rcv_counts)</argsstring>
        <name>fillNeighborsMPI</name>
        <param>
          <type>bool</type>
          <declname>reuse_rcv_counts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform the MPI communication neccesary to fill neighbor buffers </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="325" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="470" bodyend="600"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a832b5eccef2ae5ed7bb83a92653b793e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::sumNeighborsMPI</definition>
        <argsstring>(std::map&lt; int, Vector&lt; char &gt; &gt; &amp;not_ours, int real_start_comp, int real_num_comp, int int_start_comp, int int_num_comp)</argsstring>
        <name>sumNeighborsMPI</name>
        <param>
          <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; char &gt; &gt; &amp;</type>
          <declname>not_ours</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>real_start_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>real_num_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>int_start_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>int_num_comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="327" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="107" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a78a0bf763811ffa755a8a562f2cdede1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::getRcvCountsMPI</definition>
        <argsstring>()</argsstring>
        <name>getRcvCountsMPI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform handshake to figure out how many bytes each proc should receive </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="334" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="410" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a097c35d764c29615e90559c167cda994" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::GetNeighborCommTags</definition>
        <argsstring>(Vector&lt; NeighborCommTag &gt; &amp;tags, const int lev, Box box)</argsstring>
        <name>GetNeighborCommTags</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCommTag" kindref="compound">NeighborCommTag</ref> &gt; &amp;</type>
          <declname>tags</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref></type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="336" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a06c94b36af8bed58f1c6c0b4ad62e182" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::getNeighborTags</definition>
        <argsstring>(Vector&lt; NeighborCopyTag &gt; &amp;tags, const ParticleType &amp;p, const int nGrow, const NeighborCopyTag &amp;src_tag, const MyParIter &amp;pti)</argsstring>
        <name>getNeighborTags</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" kindref="compound">NeighborCopyTag</ref> &gt; &amp;</type>
          <declname>tags</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1NeighborParticleContainer_1aa1d79fe5cc0935cf6d819bbbd00d973b" kindref="member">ParticleType</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nGrow</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" kindref="compound">NeighborCopyTag</ref> &amp;</type>
          <declname>src_tag</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1NeighborParticleContainer_1a9eee43a9d618075ae5aedcacc6c104e4" kindref="member">MyParIter</ref> &amp;</type>
          <declname>pti</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="338" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="510" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a98b93307f7df6a29e8e1b84bfdcda458" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::getNeighborTags</definition>
        <argsstring>(Vector&lt; NeighborCopyTag &gt; &amp;tags, const ParticleType &amp;p, const IntVect &amp;nGrow, const NeighborCopyTag &amp;src_tag, const MyParIter &amp;pti)</argsstring>
        <name>getNeighborTags</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" kindref="compound">NeighborCopyTag</ref> &gt; &amp;</type>
          <declname>tags</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1NeighborParticleContainer_1aa1d79fe5cc0935cf6d819bbbd00d973b" kindref="member">ParticleType</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>nGrow</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" kindref="compound">NeighborCopyTag</ref> &amp;</type>
          <declname>src_tag</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1NeighborParticleContainer_1a9eee43a9d618075ae5aedcacc6c104e4" kindref="member">MyParIter</ref> &amp;</type>
          <declname>pti</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="342" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="519" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a9ceb44fa50f3d21117cd9f180ca28eb0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></type>
        <definition>IntVect NeighborParticleContainer::computeRefFac</definition>
        <argsstring>(const int src_lev, const int lev)</argsstring>
        <name>computeRefFac</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>src_lev</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="346" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="223" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1ae3f943f2130c3c16dcfd87ebe91bb761" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;::hasNeighbors</definition>
        <argsstring>() const</argsstring>
        <name>hasNeighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="421" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="421" bodyend="421"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This is a container for particles that undergo short-range interations. In addition to the normal <ref refid="classamrex_1_1ParticleContainer" kindref="compound">ParticleContainer</ref> methods, each tile contains a &quot;neighbor
buffer&quot; that is filled with data corresponding to the particles within 1 neighbor cell of the tile boundaries. This allows the N^2 search over each pair of particles to proceed locally, instead of over the entire domain.</para><para>Note that neighbor particles are different than &quot;ghost&quot; particles, which are used in AMR subcycling to keep track of coarse level particles that may move on to fine levels during a fine level time step. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="3837">
        <label>amrex::ParticleContainer&lt; NStructReal, NStructInt, 0, 0 &gt;</label>
        <link refid="classamrex_1_1ParticleContainer"/>
        <childnode refid="3838" relation="private-inheritance">
        </childnode>
      </node>
      <node id="3836">
        <label>amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;</label>
        <link refid="classamrex_1_1NeighborParticleContainer"/>
        <childnode refid="3837" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3838">
        <label>amrex::ParticleContainerBase</label>
        <link refid="classamrex_1_1ParticleContainerBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3888">
        <label>std::vector&lt; std::map&lt; PairIndex, int &gt;, std::allocator&lt; std::map&lt; PairIndex, int &gt; &gt; &gt;</label>
      </node>
      <node id="3885">
        <label>amrex::Vector&lt; amrex::NeighborParticleContainer::NeighborCommTag &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3886" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3864">
        <label>amrex::ParGDB</label>
        <link refid="classamrex_1_1ParGDB"/>
        <childnode refid="3865" relation="public-inheritance">
        </childnode>
        <childnode refid="3866" relation="usage">
          <edgelabel>m_ba</edgelabel>
        </childnode>
        <childnode refid="3868" relation="usage">
          <edgelabel>m_dmap</edgelabel>
        </childnode>
        <childnode refid="3870" relation="usage">
          <edgelabel>m_rr</edgelabel>
        </childnode>
        <childnode refid="3872" relation="usage">
          <edgelabel>m_geom</edgelabel>
        </childnode>
      </node>
      <node id="3860">
        <label>std::vector&lt; Long, std::allocator&lt; Long &gt; &gt;</label>
      </node>
      <node id="3849">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="3849" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="3852">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::MultiFab &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3853" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3877">
        <label>amrex::Vector&lt; std::map&lt; std::pair&lt; int, int &gt;, amrex::NeighborList&lt; ParticleType &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3878" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3873">
        <label>std::vector&lt; amrex::Geometry, std::allocator&lt; amrex::Geometry &gt; &gt;</label>
      </node>
      <node id="3890">
        <label>std::vector&lt; std::map&lt; PairIndex, IntVector &gt;, std::allocator&lt; std::map&lt; PairIndex, IntVector &gt; &gt; &gt;</label>
      </node>
      <node id="3880">
        <label>std::vector&lt; std::map&lt; PairIndex, ParticleVector &gt;, std::allocator&lt; std::map&lt; PairIndex, ParticleVector &gt; &gt; &gt;</label>
      </node>
      <node id="3843">
        <label>amrex::Particle&lt; T_NReal, T_NInt &gt;</label>
        <link refid="structamrex_1_1Particle"/>
        <childnode refid="3844" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3855">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
      </node>
      <node id="3874">
        <label>amrex::Vector&lt; amrex::Vector&lt; int &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3875" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3868">
        <label>amrex::Vector&lt; amrex::DistributionMapping &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3869" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3856">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3857" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3858">
        <label>string</label>
      </node>
      <node id="3840">
        <label>amrex::ParticleContainer&lt; NStructReal, NStructInt, 0, 0 &gt;</label>
        <link refid="classamrex_1_1ParticleContainer"/>
        <childnode refid="3841" relation="private-inheritance">
        </childnode>
        <childnode refid="3842" relation="usage">
          <edgelabel>m_bins</edgelabel>
        </childnode>
        <childnode refid="3847" relation="usage">
          <edgelabel>d_communicate_int_comp</edgelabel>
          <edgelabel>d_communicate_real_comp</edgelabel>
        </childnode>
        <childnode refid="3849" relation="usage">
          <edgelabel>tile_size</edgelabel>
        </childnode>
        <childnode refid="3850" relation="usage">
          <edgelabel>wherePrePost</edgelabel>
        </childnode>
        <childnode refid="3852" relation="usage">
          <edgelabel>m_dummy_mf</edgelabel>
        </childnode>
        <childnode refid="3854" relation="usage">
          <edgelabel>filePrefixPrePost</edgelabel>
        </childnode>
        <childnode refid="3856" relation="usage">
          <edgelabel>h_communicate_real_comp</edgelabel>
          <edgelabel>neighbor_procs</edgelabel>
          <edgelabel>h_communicate_int_comp</edgelabel>
        </childnode>
        <childnode refid="3858" relation="usage">
          <edgelabel>HdrFileNamePrePost</edgelabel>
        </childnode>
        <childnode refid="3859" relation="usage">
          <edgelabel>nParticlesAtLevelPrePost</edgelabel>
        </childnode>
        <childnode refid="3861" relation="usage">
          <edgelabel>ParticleRealDescriptor</edgelabel>
        </childnode>
        <childnode refid="3862" relation="usage">
          <edgelabel>m_particles</edgelabel>
        </childnode>
        <childnode refid="3864" relation="usage">
          <edgelabel>m_gdb_object</edgelabel>
        </childnode>
        <childnode refid="3874" relation="usage">
          <edgelabel>whichPrePost</edgelabel>
          <edgelabel>countPrePost</edgelabel>
        </childnode>
        <childnode refid="3876" relation="usage">
          <edgelabel>m_buffer_map</edgelabel>
        </childnode>
        <childnode refid="3865" relation="usage">
          <edgelabel>m_gdb</edgelabel>
        </childnode>
      </node>
      <node id="3865">
        <label>amrex::ParGDBBase</label>
        <link refid="classamrex_1_1ParGDBBase"/>
      </node>
      <node id="3881">
        <label>amrex::Vector&lt; std::map&lt; PairIndex, amrex::Vector&lt; amrex::Vector&lt; amrex::NeighborParticleContainer::NeighborCopyTag &gt; &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3882" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3851">
        <label>std::vector&lt; amrex::Vector&lt; Long &gt;, std::allocator&lt; amrex::Vector&lt; Long &gt; &gt; &gt;</label>
      </node>
      <node id="3892">
        <label>std::vector&lt; std::map&lt; PairIndex, amrex::Vector&lt; amrex::NeighborParticleContainer::InverseCopyTag &gt; &gt;, std::allocator&lt; std::map&lt; PairIndex, amrex::Vector&lt; amrex::NeighborParticleContainer::InverseCopyTag &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="3879">
        <label>amrex::Vector&lt; std::map&lt; PairIndex, ParticleVector &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3880" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3878">
        <label>std::vector&lt; std::map&lt; std::pair&lt; int, int &gt;, amrex::NeighborList&lt; ParticleType &gt; &gt;, std::allocator&lt; std::map&lt; std::pair&lt; int, int &gt;, amrex::NeighborList&lt; ParticleType &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="3882">
        <label>std::vector&lt; std::map&lt; PairIndex, amrex::Vector&lt; amrex::Vector&lt; amrex::NeighborParticleContainer::NeighborCopyTag &gt; &gt; &gt;, std::allocator&lt; std::map&lt; PairIndex, amrex::Vector&lt; amrex::Vector&lt; amrex::NeighborParticleContainer::NeighborCopyTag &gt; &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="3886">
        <label>std::vector&lt; amrex::NeighborParticleContainer::NeighborCommTag, std::allocator&lt; amrex::NeighborParticleContainer::NeighborCommTag &gt; &gt;</label>
      </node>
      <node id="3876">
        <label>amrex::ParticleBufferMap</label>
        <link refid="classamrex_1_1ParticleBufferMap"/>
        <childnode refid="3866" relation="usage">
          <edgelabel>m_ba</edgelabel>
        </childnode>
        <childnode refid="3847" relation="usage">
          <edgelabel>d_lev_offsets</edgelabel>
          <edgelabel>d_lev_gid_to_bucket</edgelabel>
          <edgelabel>d_bucket_to_pid</edgelabel>
        </childnode>
        <childnode refid="3868" relation="usage">
          <edgelabel>m_dm</edgelabel>
        </childnode>
        <childnode refid="3856" relation="usage">
          <edgelabel>m_lev_offsets</edgelabel>
          <edgelabel>m_proc_box_offsets</edgelabel>
          <edgelabel>m_bucket_to_pid</edgelabel>
          <edgelabel>m_bucket_to_lev</edgelabel>
          <edgelabel>m_bucket_to_gid</edgelabel>
          <edgelabel>m_lev_gid_to_bucket</edgelabel>
          <edgelabel>m_proc_box_counts</edgelabel>
        </childnode>
      </node>
      <node id="3863">
        <label>std::vector&lt; ParticleLevel, std::allocator&lt; ParticleLevel &gt; &gt;</label>
      </node>
      <node id="3889">
        <label>amrex::Vector&lt; std::map&lt; PairIndex, IntVector &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3890" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3839">
        <label>amrex::NeighborParticleContainer&lt; NStructReal, NStructInt &gt;</label>
        <link refid="classamrex_1_1NeighborParticleContainer"/>
        <childnode refid="3840" relation="public-inheritance">
        </childnode>
        <childnode refid="3877" relation="usage">
          <edgelabel>m_neighbor_list</edgelabel>
        </childnode>
        <childnode refid="3879" relation="usage">
          <edgelabel>neighbors</edgelabel>
        </childnode>
        <childnode refid="3881" relation="usage">
          <edgelabel>buffer_tag_cache</edgelabel>
        </childnode>
        <childnode refid="3883" relation="usage">
          <edgelabel>mask_ptr</edgelabel>
        </childnode>
        <childnode refid="3856" relation="usage">
          <edgelabel>neighbor_procs</edgelabel>
        </childnode>
        <childnode refid="3885" relation="usage">
          <edgelabel>local_neighbors</edgelabel>
        </childnode>
        <childnode refid="3859" relation="usage">
          <edgelabel>rcvs</edgelabel>
        </childnode>
        <childnode refid="3887" relation="usage">
          <edgelabel>local_neighbor_sizes</edgelabel>
        </childnode>
        <childnode refid="3889" relation="usage">
          <edgelabel>neighbor_list</edgelabel>
        </childnode>
        <childnode refid="3891" relation="usage">
          <edgelabel>inverse_tags</edgelabel>
        </childnode>
      </node>
      <node id="3846">
        <label>std::allocator&lt; index_type &gt;</label>
      </node>
      <node id="3869">
        <label>std::vector&lt; amrex::DistributionMapping, std::allocator&lt; amrex::DistributionMapping &gt; &gt;</label>
      </node>
      <node id="3850">
        <label>amrex::Vector&lt; amrex::Vector&lt; Long &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3851" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3844">
        <label>amrex::ParticleBase&lt; ParticleReal, T_NReal, T_NInt &gt;</label>
        <link refid="structamrex_1_1ParticleBase"/>
      </node>
      <node id="3870">
        <label>amrex::Vector&lt; amrex::IntVect &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3871" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3853">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::MultiFab &gt;, std::allocator&lt; std::unique_ptr&lt; amrex::MultiFab &gt; &gt; &gt;</label>
      </node>
      <node id="3891">
        <label>amrex::Vector&lt; std::map&lt; PairIndex, amrex::Vector&lt; amrex::NeighborParticleContainer::InverseCopyTag &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3892" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3857">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="3866">
        <label>amrex::Vector&lt; BoxArray &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3867" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3845">
        <label>amrex::PODVector&lt; index_type &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="3846" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3841">
        <label>amrex::ParticleContainerBase</label>
        <link refid="classamrex_1_1ParticleContainerBase"/>
      </node>
      <node id="3861">
        <label>amrex::RealDescriptor</label>
        <link refid="classamrex_1_1RealDescriptor"/>
        <childnode refid="3856" relation="usage">
          <edgelabel>ord</edgelabel>
        </childnode>
        <childnode refid="3859" relation="usage">
          <edgelabel>fr</edgelabel>
        </childnode>
      </node>
      <node id="3883">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3884" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3859">
        <label>amrex::Vector&lt; Long &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3860" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3847">
        <label>amrex::PODVector&lt; int &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="3848" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3848">
        <label>std::allocator&lt; int &gt;</label>
      </node>
      <node id="3854">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3855" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3867">
        <label>std::vector&lt; BoxArray, std::allocator&lt; BoxArray &gt; &gt;</label>
      </node>
      <node id="3871">
        <label>std::vector&lt; amrex::IntVect, std::allocator&lt; amrex::IntVect &gt; &gt;</label>
      </node>
      <node id="3884">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt;, std::allocator&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt; &gt;</label>
      </node>
      <node id="3862">
        <label>amrex::Vector&lt; ParticleLevel &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3863" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3842">
        <label>amrex::DenseBins&lt; amrex::Particle &gt;</label>
        <link refid="classamrex_1_1DenseBins"/>
        <childnode refid="3843" relation="usage">
          <edgelabel>m_items</edgelabel>
        </childnode>
        <childnode refid="3845" relation="usage">
          <edgelabel>m_counts</edgelabel>
          <edgelabel>m_perm</edgelabel>
          <edgelabel>m_offsets</edgelabel>
          <edgelabel>m_cells</edgelabel>
        </childnode>
      </node>
      <node id="3872">
        <label>amrex::Vector&lt; amrex::Geometry &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3873" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3875">
        <label>std::vector&lt; amrex::Vector&lt; int &gt;, std::allocator&lt; amrex::Vector&lt; int &gt; &gt; &gt;</label>
      </node>
      <node id="3887">
        <label>amrex::Vector&lt; std::map&lt; PairIndex, int &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="3888" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="34" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="32" bodyend="424"/>
    <listofallmembers>
      <member refid="classamrex_1_1ParticleContainer_1a187d86b2f2bad6daba983c264562b385" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AddIntComp</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a5e2e20340bf613d45dffb1ce3177c5e2" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>addParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a9f1768a21e01986dcb18758ec150bbaf" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>addParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ae81d42996a0794aaca5e198f7b1179f6" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AddParticlesAtLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer_1afb4c4971d915cafb5d2edbe16d2e6c5c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AddParticlesAtLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a5d5118015226645b8b1e94cd75f48605" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AddRealComp</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1abda283254c9aa57da66fa85e8bcd57da" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AoS</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a94b2c69326a6881b899d040b0db907c8" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AssignCellDensitySingleLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ad30b9fa7d85dc87a7d351fb619156863" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AssignDensity</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a850509e24e6a8560ae8a73f36e4df525" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buffer_tag_cache</name></member>
      <member refid="classamrex_1_1ParticleContainer_1acc1ab5bc75e5cd6731179e4400cc2aa1" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>BufferMap</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1af79112d043b45868fb00cf720d61b0a5" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>BuildMasks</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9f9b59556eee3e510dfa52a90110fe78" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buildNeighborCopyOp</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a6053ab4e4304050ea4cfd5b9aafc839a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buildNeighborList</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a702f3d0adf02749c4ac595d4c1a11319" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buildNeighborList</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ad01b79b58df596f16982763a74e34d70" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buildNeighborMask</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a56778d93491d67f5e779ba5dbfed0957" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>BuildRedistributeMask</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ad00941653cbd0d08292c874255e1c38b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ByteSpread</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a497db0eca21eb270f545e60f034aeb6a" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>cacheNeighborInfo</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9fea3b7765226c9483a81c772e3cfcd0" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>calcCommSize</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a1e5039db78995c9f1e60c816780c91ab" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>cdata_size</name></member>
      <member refid="classamrex_1_1ParticleContainer_1afc663dae8c1e43e71a5ef9c56bf7e38e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CharVector</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a237a5e5d369c605bddb23b5d1a53cbcd" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Checkpoint</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a6e0974aa7e3112b82daebbb56dcede3b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Checkpoint</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a58b92af437a359f18810fb9f18b6683c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CheckpointPost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a04202c0398fb9dde3867ffaa49f9c724" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CheckpointPre</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a287e510b67bfbb6bd4d500e5281e3329" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>clearNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ab52778d0154284955fa59e2e6bc36482" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>clearNeighborsCPU</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a0090be98ea5068fd31672a06a7c74f5e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>clearParticles</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9ceb44fa50f3d21117cd9f180ca28eb0" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>computeRefFac</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a1472c0ff5f0f576e6d4d972f50b20115" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>copyParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1afe5c5461f2bde632e9f0850d59428813" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>copyParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a5465400ed793453ee62b628d80264a29" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>countPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a8e1f4eb0c16b54284627b12711a9ac92" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CreateGhostParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a7b2c71d1895ce862a535a58d597d8e75" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CreateGhostParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aa0f1c1992f4b588da0574f30324c3c21" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CreateVirtualParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a73bf1f8a4ac131d3988cf41c4acc200f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CreateVirtualParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a53ca60f7318ed230c8e04542bf550295" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>d_communicate_int_comp</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a50bc06ae744be06e4101b09e6ec1af25" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>d_communicate_real_comp</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a19640f0a56a98d6be9da395cf568d5c7" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Define</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a75bf4d2731b1b67895d78a4392fb48fb" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Define</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aec38f47f6cc40841655d7dcc835cd3ff" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Define</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a26130c3db6994575b0230322cb726095" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>DefineAndReturnParticleTile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a1f70f1c69a9b86c8454de86b6292142e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>DefineAndReturnParticleTile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a2316a8be2f68010202337b56d9853f6f" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>defineBufferMap</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ad99c12c6f4382d0e38c1fd95625b518e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>do_tiling</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aa0babe3ae02a65a22823bb00e727edeb" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>doUnlink</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a253931bb13b740bcdf8da45fe68a4591" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>enable_inverse</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ac0913cb43a3b4ca5bf9874dc8245382b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>enableInverse</name></member>
      <member refid="classamrex_1_1ParticleContainer_1abb3abb529cbb3b12cc42d430d4e24f75" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>EnforcePeriodicWhere</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a62fde0689b4800030711d8e2ea419262" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>filePrefixPrePost</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a2c1bf28f2552627e93d1587e977dd22a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>fillNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aa67093443956c508eba7928ca9c43789" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>fillNeighborsCPU</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1af3b5f685680bc88ad15c0f2cd5ee44c8" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>fillNeighborsMPI</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a2be63f66e72316a5487fa827c1670c1b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>finestLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a63c6eab6b6eac4596e3f2e3febb9811f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Geom</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ace4a68e9536f7e36dd141825cdc04519" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetCommTagsBox</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a884e6639d9dcd38cb28b879bf896c799" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetLevelDirectoriesCreated</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a3a63ffb95e3c4a949ec49ca27502dcc8" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetMaxNextIDPrePost</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a01f3711526aa5aff0183fc0eeee6a866" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetNeighborCommTags</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a097c35d764c29615e90559c167cda994" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetNeighborCommTags</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aa2a2b46f097c98884103c3a7046e64f3" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a67d318ef154e37e3dde5f5cb8745f776" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a06c94b36af8bed58f1c6c0b4ad62e182" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>getNeighborTags</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a98b93307f7df6a29e8e1b84bfdcda458" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>getNeighborTags</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ae37768f44bc5f814d97c888e2cf6b4ea" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetNParticlesPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a29ae5b714b6b8eee29ed3cecb2447a45" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetParGDB</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a950d107db7286ee354c85414bf87fd4b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetParGDB</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a86c6b413fe22481ca71e9e40b3ec6944" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a7fae16d43d67759b64826bdf2e46e2dc" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1acb6bbd4430f64567d84a105d880bed4c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a86445811fb9f17e76b0a3c9982bfe0f0" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetParticles</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a78a0bf763811ffa755a8a562f2cdede1" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>getRcvCountsMPI</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ab0bc9b5e87650cc8e927dd1c8d21e50b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetUsePrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1adaa49ebb7089f4fb11fffe9c236926e9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetUseUnlink</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a94bbcb336d799cf0eb813432a2a66dc1" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>h_communicate_int_comp</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a7d5f44b63b6087120e27046eacb720b0" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>h_communicate_real_comp</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ae3f943f2130c3c16dcfd87ebe91bb761" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>hasNeighbors</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ae2016c85148b09f863ba154d2b17f257" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>HdrFileNamePrePost</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aeaa3b1bb8b6e40c8899b06779754db1d" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ic</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a5b610b558d1559e50c8edfaf7ed2ca27" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Increment</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a48897ca75f60ca616cff453a60b18d59" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>IncrementWithTotal</name></member>
      <member refid="classamrex_1_1ParticleContainer_1af8bd39ef3bfbe29f23b81d61903ff301" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Index</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a126705141e84d4b2303cca9d1647cb1d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitFromAsciiFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ac108830360927c2b81f70f79273f5c30" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitFromBinaryFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aa38b6a6a9072401b044d1a1998531bfb" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitFromBinaryMetaFile</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9fc777a6611729b79c56fc8f1782c830" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>initializeCommComps</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a43c257d811d31372ec9aeb183a04831b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitNRandomPerCell</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a23fef3ef39243107d38903a067b38bc7" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitOnePerCell</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a607bf9ea2040821f633079b5fc384573" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitRandom</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a69535e29fdd3ce01b696fe3d681d64b3" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitRandomPerBox</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ae81487d8bc67dbfa4ab241a8f32d186a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Interpolate</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a0cfa715f33235a017da433fb9df6a2e4" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InterpolateSingleLevel</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aab80b7dbd7854b08358199dd39b7cfb9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>IntVector</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ab5c3aa270ffa2be5fd87c1b90ae41e23" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>inverse_tags</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a86f015f9137536c34fbd5832f53dcf16" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>levelDirectoriesCreated</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1af263c3cda7b720f2d950f2f7b27fc480" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>local_neighbor_sizes</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a1683922f39c0dd124022c5e1071f3cb5" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>local_neighbors</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a1eaa6e01628990d3539b95acd7710fe9" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_bins</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a8b542aea1955ac6099f63afac49059ca" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_buffer_map</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a725c3cdfc8b5585b9e70e0fa9a538162" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_gdb</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a15cbbad482b29bf7d065185f41d83553" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_gdb_object</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a7b705eb7801619d0a8297bd6633abd75" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_has_neighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a1e12acc11cbade3be179e96e6f2b35b4" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_neighbor_list</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aa0f8017a2f345ca603b5f556933bcbac" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_num_neighbor_cells</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a8c233c65471500ceadf6e7798a998fcf" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_verbose</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a9ed301455fd0d84811271cf225f122d7" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>MakeMFIter</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aa4a455c024f866b314b84e373b3f9489" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>MakeMFIter</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a8fe00235f3dded53c4cd9dbf719ecfe6" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>MakeMFIter</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a65110fa3e33e93d700a3109246ef506b" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>mask_ptr</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a080ee2bed32e9a3e4843bfcbc4849625" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>maxLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a72e44a1ab6ec89e1c6ffe0bd38b16135" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>maxnextidPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1af87210895f80e5c9851d5b8fa4330fd3" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>MoveRandom</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a8ff12a8b622148daa96f435bbfc5acb7" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>MoveRandom</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9eee43a9d618075ae5aedcacc6c104e4" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>MyParIter</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ab91e06fbdab528acbe8ede3d625e893e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NArrayInt</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ad530af2a690b1f9beadee6ebae62dc7c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NArrayReal</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1adc2907c34b72b86a0c2c31ae0f5140c3" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>neighbor_list</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a45987a711af4e60d4beeba11c9cad42b" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>neighbor_procs</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ae1cee6fdcb3e89d814d42aa6f20ffb50" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborCommMap</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aec6aa68d7cccf38bf8f2ece89e2e47ad" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborParticleContainer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aee22d011a8f857aed34e87c077080b96" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborParticleContainer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a41dfa9de47f0e68d1eebecd862aeedbe" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborParticleContainer</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a64c285d1ef3ad7e65317c1b18d741063" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborProcs</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9d868e97cf5644b365ca4e6742f0c644" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>neighbors</name></member>
      <member refid="classamrex_1_1ParticleContainer_1adc8acb1b56a56ec0b8dd82e85161cdfd" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>nOutFilesPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a6d7d10ccc767005d1dad16802b941097" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>nParticlesAtLevelPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ae318b69b0718a2b419e36adc2b3567bf" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>nparticlesPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a8efc7329c2a8acf91fb7fb2533584ad2" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NStructInt</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a74cc708fff367f884397efee0404d26e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NStructReal</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a436bb8b4cab5f2079831c68f4d3341ad" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>num_mask_comps</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a3e88a983e9e3445b2c1c857195498bc0" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>num_snds</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ab89e22b687136ef82d7f544c90d08a0c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumberOfParticlesAtLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer_1af848b52731530692a1a7d5e2143c7261" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumberOfParticlesInGrid</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a2026b5aef4056aa4cfefdfc6d0b3bb74" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumIntComps</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aebb87ffe3ffc8f67bad6fd54a4486066" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>numLevels</name></member>
      <member refid="classamrex_1_1ParticleContainer_1afe40cfec291bd2ea0efca7894244ed64" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>numLocalTilesAtLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aa144f88553ca29b81ac58638cd182253" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumRealComps</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a9e1860c0edcab0eee5a5bd898006be5a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumRuntimeIntComps</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aa8c639b884c1418142ea3e6ae89f7f4b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumRuntimeRealComps</name></member>
      <member refid="classamrex_1_1ParticleContainer_1af81546b866cfb0ccd6b241d36aec2411" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>OK</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a869194497ad96bc1723ddc082a19685c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>OnSameGrids</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1af2dd70e123c4708809ddc29dc04124e9" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>operator&lt;&lt;</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a3e07fc13fa5d1c7ad0bd21051ce0349f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>operator=</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a6c3392da144f3026a65155825dfa6b69" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>operator=</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ab169827a8824abb993c34e715e250f49" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>PairIndex</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a697d9401b3d579eb45f0a08cb61f42bc" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParConstIterType</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a1684f3ff75d992f36fb20e2ec31ed2ce" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParIterType</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a54c4ab4a3eedc98f1327990fa5308d33" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleBoxArray</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ae224893d2f0c352dbc6786ca91e76f38" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ad9a2ed88fedebd7de32b929596636a2f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aefc8e5a8e2312f853f9c6b46fa00104c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ace021b3c67ed3bf386388e8563e87541" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ae100b3dc86b65f34ac444627c3cd9900" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ab6e8054da0fd5f3b1a85d8b9c479b407" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aa31ff243b9ab5a802bf178eaf0df96a8" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1af2e8e332b50e495c32925b61b1a4b90d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainerType</name></member>
      <member refid="classamrex_1_1ParticleContainer_1af837dacc2cb042781cf69fb735f70aa4" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleDistributionMap</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a0722e054483252f5b9933020f660b009" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleGeom</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a3e731776c247ede69958d790ad7fffbc" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleInitData</name></member>
      <member refid="classamrex_1_1ParticleContainer_1af8aa2626aefe95d4c7b66f6b79598298" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a4aed4f539e080e1aed947dc86dca6ccc" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleRealDescriptor</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a101c5fc6604eaec2a42783e9998f87ad" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticlesAt</name></member>
      <member refid="classamrex_1_1ParticleContainer_1add84b4ffb40bec127f30ad69cccc3b40" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticlesAt</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a1d68ea7e61cfd3409f18574c487e880f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticlesAt</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ac3d8776a7272817c2bdacb781a322cc4" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticlesAt</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a1b6862ee9ee11751c42cd85d8cf91af3" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleTileType</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aa1d79fe5cc0935cf6d819bbbd00d973b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleType</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a244bb9e75cea8c215f5b50b6895ed54d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleVector</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a683d4fcc37d9b1553f64124f5d6adafe" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>pdata_size</name></member>
      <member refid="classamrex_1_1ParticleContainer_1af1a563451b9037f81326253a833f7dca" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>PeriodicShift</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aed77bd767634a177e9d598e5ea4d3fcd" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>PrintCapacity</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aac13e1f1c324181ce01a8f50fe3897d9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>printNeighborList</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1acd7839ccee6f7b170fed84bc50d15a1f" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>rc</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a54569a1ba64fd29970a1d5a202a7dbd6" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>rcvs</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a79fdedf20e1d3c339cb4745e135dc2fc" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ReadParticleRealData</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a225de1db7fe017ffc776d93c61e64efa" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ReadParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a7fc9bf8345c66057c7ec029dca568732" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RealType</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aa2e5af07d99eae219215f27a8353dfa9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RealVector</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a12ad35f5b7401e94f35688a46dd46738" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RedefineDummyMF</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a61563f663a017a54de333524e6d976e6" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Redistribute</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a140d1a9a26a5708cf1da05343ac63f8d" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>redistribute_mask_nghost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a53c49e5b1a5c69bc46759f4b7b92ae9b" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>redistribute_mask_ptr</name></member>
      <member refid="classamrex_1_1ParticleContainer_1afcfa4b3226447e29584bf9c609b7b405" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RedistributeCPU</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a405049a333766dd8d8e4a8e244d4b715" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RedistributeGPU</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aed1d7df235a9042894bb42785bb16b9f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RedistributeLocal</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1adbf6915c6877b366e0bda3e6f268eb30" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Regrid</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aee1b7c1708cd7d226db64b05d590d1fd" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Regrid</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a991c2e4f486d6cbb9cf74c326c1ad357" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Regrid</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a8933b3680b986631fa58b64aabcc1056" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RemoveParticlesAtLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a5e9f1af11b34f555dadfaea79db35f3f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RemoveParticlesNotAtFinestLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ae6988ce9675107c1377a32706edb38ac" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>reserveData</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a6cf68777f26054f8df16afb6f9be41f6" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Reset</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1af03a2d960e9c4975823cee72793a6410" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>resizeContainers</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a73a9685a51644f83bd92af8691ca0230" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>resizeData</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a2ddf26f00578c5221138fa5e44c04460" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Restart</name></member>
      <member refid="classamrex_1_1ParticleContainer_1af513b73d7827e554fa3eb68e359e4003" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Restart</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a3b830160ca11e0f7cdead7ae3f6aa19f" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>send_data</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ac167c31e10246c5fb4316fa944971904" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SendBuffer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a6529150825ca3bed308c9424ba1ca358" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>setEnableInverse</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a63cbb0b5b6c81df9e4321148bc960f32" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>setIntCommComp</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a7bdee0ca73cb3296a4de87377712f9cb" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetLevelDirectoriesCreated</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aa577f4cdb15fdd9e080a4c2fc58defc2" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetParticleBoxArray</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a5dcff788ad8c0cf2c9d883cc608329fe" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetParticleDistributionMap</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a512a06b3fc2e2753fea76ec4159839ea" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetParticleGeometry</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aa68b9885de02d650cf3626441b0c11a1" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetParticleSize</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9c5eaf4a73e02b631f586b8d9eaa9b44" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>setRealCommComp</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a463841a68096d3cfc14eeb25a679a3e8" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetUsePrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a3eccf78745b29b84ecd319057ea2f67e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetUseUnlink</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a777f5c069fc6edfe81139bf585dbc65e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetVerbose</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aaa13bd62d65dd037e7ebaa4853f7ad0c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ShrinkToFit</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a0f3255b06d423259a55c68a1eee71825" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SoA</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a9bf7df095a914f73e986d61d633795c5" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SortParticlesByBin</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a22e1d8ca180b542ad1610173f3a28d63" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SortParticlesByCell</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a881b90e85491b4c0a7bb25425cc38641" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>sumNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ab231fe12c26f5349f8c4005c8b85a170" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>sumNeighborsCPU</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a832b5eccef2ae5ed7bb83a92653b793e" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>sumNeighborsMPI</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a25ad37d902041ef81f2af0dff416f5f4" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>superParticleSize</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ad77c3162bc7d451e1a31652dcab81057" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SuperParticleType</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a433e6240ebcad3866f30555496ab418f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>tile_size</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a98b6781f4220562e43801b6bdb1f80f9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>TotalNumberOfParticles</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1add63262756c48b8f645f236c664067d0" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>updateNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a82b7b32706c360ef9da4f2501f0d2ef7" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>updateNeighborsCPU</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a21bd4a08b87b0afeeb0d8889c619c86c" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>use_mask</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a8bbd5c1953c2de901dadb2f54fdb3983" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>usePrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a218b34f68ba81db912a53fe33e855c41" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Verbose</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a61d77d2a5bd12cf8696c2ecce75f3dd2" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Where</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ace10dffc32fec6541bf23b321b6c04bd" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>wherePrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ae7905a898a74a004007eaa07c8ebc0e5" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>whichPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1afa652b6ccee3292f1567ac82d3e3ebab" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WriteAsciiFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ad07eb8fb8eb05ce868fbb5c543b3b50c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WriteBinaryParticleData</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a28a7017d6b74f832ddd043204454d587" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WriteParticleRealData</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a33df7132fc87c10683d9d0c1938a221c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WriteParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ab282bfa7fc64bfc5fceb25453569a526" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ab500d61172e4ff9022699bfb596af5b6" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ac65377d9d8827956f721b66655388635" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ab963eb549427a79f3a7f2814de9e3481" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1acc522cc9f4b4c8279982f5cea8c17203" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ae3c71333e37a73fc2ef2e4c672907a99" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ae5fe8e3a6296f6853e935aa3012e8043" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ae2a9cf72dc44d580a9b05b155950247b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a025a9ea0c342c2580c56a399c6e98e12" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a25059122e6394715ecfa4e06e9636612" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a48ed8d81c408cc65cb7b8c6f21a32ece" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFilePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a2cf9ca8d8c7aeeb9fc8465a6f8ddf740" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFilePre</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aa3a9668e9970f83c4e53a6098689d67d" prot="public" virt="virtual"><scope>amrex::NeighborParticleContainer</scope><name>~ParticleContainer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
