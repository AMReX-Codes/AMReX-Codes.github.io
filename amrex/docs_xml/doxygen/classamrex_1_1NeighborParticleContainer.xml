<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classamrex_1_1NeighborParticleContainer" kind="class" language="C++" prot="public">
    <compoundname>amrex::NeighborParticleContainer</compoundname>
    <basecompoundref refid="classamrex_1_1ParticleContainer" prot="public" virt="non-virtual">amrex::ParticleContainer&lt; NStructReal, NStructInt, 0, 0 &gt;</basecompoundref>
    <includes refid="AMReX__NeighborParticles_8H" local="no">AMReX_NeighborParticles.H</includes>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1InverseCopyTag" prot="private">amrex::NeighborParticleContainer::InverseCopyTag</innerclass>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1MaskComps" prot="private">amrex::NeighborParticleContainer::MaskComps</innerclass>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCommTag" prot="private">amrex::NeighborParticleContainer::NeighborCommTag</innerclass>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" prot="private">amrex::NeighborParticleContainer::NeighborCopyTag</innerclass>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1NeighborIndexMap" prot="private">amrex::NeighborParticleContainer::NeighborIndexMap</innerclass>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1NeighborTask" prot="protected">amrex::NeighborParticleContainer::NeighborTask</innerclass>
    <templateparamlist>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NStructReal</declname>
        <defname>NStructReal</defname>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NStructInt</declname>
        <defname>NStructInt</defname>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NArrayReal</declname>
        <defname>NArrayReal</defname>
        <defval>0</defval>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NArrayInt</declname>
        <defname>NArrayInt</defname>
        <defval>0</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1aa454b3f1c4a133faaa1d28b9c8c254d8" prot="public" static="no">
        <type><ref refid="classamrex_1_1ParticleContainer" kindref="compound">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer_1ae71c7d35ab833b43cef08cf6aa9944b2" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a0126c339846650d2b30069c08da01fce" kindref="member">NStructInt</ref>, <ref refid="classamrex_1_1ParticleContainer_1a7f4ed428087667aa857bd631b97eb5e6" kindref="member">NArrayReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a1c40700b0202582a3102befdf84451ae" kindref="member">NArrayInt</ref> &gt;</type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParticleContainerType =  ParticleContainer&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;</definition>
        <argsstring></argsstring>
        <name>ParticleContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="37" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1a1c6baf08ed7bdeb1d7a7acf30eefad52" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer_1aeb775c5511301974b2a3e78e67466727" kindref="member">ParticleContainerType::SuperParticleType</ref></type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::SuperParticleType =  typename ParticleContainerType::SuperParticleType</definition>
        <argsstring></argsstring>
        <name>SuperParticleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="38" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1ac5323a2b8fdbd75499432de90d1010f9" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer" kindref="compound">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer_1ae71c7d35ab833b43cef08cf6aa9944b2" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a0126c339846650d2b30069c08da01fce" kindref="member">NStructInt</ref>, <ref refid="classamrex_1_1ParticleContainer_1a7f4ed428087667aa857bd631b97eb5e6" kindref="member">NArrayReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a1c40700b0202582a3102befdf84451ae" kindref="member">NArrayInt</ref> &gt;::<ref refid="classamrex_1_1NeighborParticleContainer_1ac5323a2b8fdbd75499432de90d1010f9" kindref="member">ParticleType</ref></type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParticleType =  typename ParticleContainer&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;::ParticleType</definition>
        <argsstring></argsstring>
        <name>ParticleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="190" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1a4f7f3ca7bf951e7ec6fce594005694da" prot="public" static="no">
        <type><ref refid="classamrex_1_1ParIter" kindref="compound">ParIter</ref>&lt; <ref refid="classamrex_1_1ParticleContainer_1ae71c7d35ab833b43cef08cf6aa9944b2" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a0126c339846650d2b30069c08da01fce" kindref="member">NStructInt</ref>, <ref refid="classamrex_1_1ParticleContainer_1a7f4ed428087667aa857bd631b97eb5e6" kindref="member">NArrayReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a1c40700b0202582a3102befdf84451ae" kindref="member">NArrayInt</ref> &gt;</type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::MyParIter =  ParIter&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;</definition>
        <argsstring></argsstring>
        <name>MyParIter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="192" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1a0c2a28aef7db24fbfccc53f46637a582" prot="public" static="no">
        <type>std::pair&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::PairIndex =  std::pair&lt;int, int&gt;</definition>
        <argsstring></argsstring>
        <name>PairIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="193" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1ae77c84d55fb9e147fc49a60bd44d42d6" prot="public" static="no">
        <type>std::map&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCommTag" kindref="compound">NeighborCommTag</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; char &gt; &gt;</type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::NeighborCommMap =  std::map&lt;NeighborCommTag, Vector&lt;char&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>NeighborCommMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="194" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1a41c79512efbfbf1a4145948c6a680d5c" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer" kindref="compound">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer_1ae71c7d35ab833b43cef08cf6aa9944b2" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a0126c339846650d2b30069c08da01fce" kindref="member">NStructInt</ref>, <ref refid="classamrex_1_1ParticleContainer_1a7f4ed428087667aa857bd631b97eb5e6" kindref="member">NArrayReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a1c40700b0202582a3102befdf84451ae" kindref="member">NArrayInt</ref> &gt;::<ref refid="classamrex_1_1NeighborParticleContainer_1a41c79512efbfbf1a4145948c6a680d5c" kindref="member">AoS</ref></type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::AoS =  typename ParticleContainer&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;::AoS</definition>
        <argsstring></argsstring>
        <name>AoS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="195" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1ade2385ed6d6005f38a31d3709b55fc4c" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer" kindref="compound">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer_1ae71c7d35ab833b43cef08cf6aa9944b2" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a0126c339846650d2b30069c08da01fce" kindref="member">NStructInt</ref>, <ref refid="classamrex_1_1ParticleContainer_1a7f4ed428087667aa857bd631b97eb5e6" kindref="member">NArrayReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a1c40700b0202582a3102befdf84451ae" kindref="member">NArrayInt</ref> &gt;::<ref refid="classamrex_1_1NeighborParticleContainer_1ade2385ed6d6005f38a31d3709b55fc4c" kindref="member">ParticleVector</ref></type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParticleVector =  typename ParticleContainer&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;::ParticleVector</definition>
        <argsstring></argsstring>
        <name>ParticleVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="196" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1a88e27f1bb35a55e5fb6555057e1e25ac" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer" kindref="compound">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer_1ae71c7d35ab833b43cef08cf6aa9944b2" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a0126c339846650d2b30069c08da01fce" kindref="member">NStructInt</ref>, <ref refid="classamrex_1_1ParticleContainer_1a7f4ed428087667aa857bd631b97eb5e6" kindref="member">NArrayReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a1c40700b0202582a3102befdf84451ae" kindref="member">NArrayInt</ref> &gt;::<ref refid="classamrex_1_1ParticleContainer_1a71a0cf043ed329a849e9a33c5e1515fc" kindref="member">ParticleTileType</ref></type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParticleTile =  typename ParticleContainer&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;::ParticleTileType</definition>
        <argsstring></argsstring>
        <name>ParticleTile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="197" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1a60a40e557410a932b8adc0275a5d019f" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer" kindref="compound">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer_1ae71c7d35ab833b43cef08cf6aa9944b2" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a0126c339846650d2b30069c08da01fce" kindref="member">NStructInt</ref>, <ref refid="classamrex_1_1ParticleContainer_1a7f4ed428087667aa857bd631b97eb5e6" kindref="member">NArrayReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a1c40700b0202582a3102befdf84451ae" kindref="member">NArrayInt</ref> &gt;::<ref refid="classamrex_1_1NeighborParticleContainer_1a60a40e557410a932b8adc0275a5d019f" kindref="member">IntVector</ref></type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::IntVector =  typename ParticleContainer&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;::IntVector</definition>
        <argsstring></argsstring>
        <name>IntVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="198" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1afcfe4393ad4cb1e555c5dff902c6901d" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer" kindref="compound">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer_1ae71c7d35ab833b43cef08cf6aa9944b2" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a0126c339846650d2b30069c08da01fce" kindref="member">NStructInt</ref>, <ref refid="classamrex_1_1ParticleContainer_1a7f4ed428087667aa857bd631b97eb5e6" kindref="member">NArrayReal</ref>, <ref refid="classamrex_1_1ParticleContainer_1a1c40700b0202582a3102befdf84451ae" kindref="member">NArrayInt</ref> &gt;::<ref refid="classamrex_1_1NeighborParticleContainer_1afcfe4393ad4cb1e555c5dff902c6901d" kindref="member">SendBuffer</ref></type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::SendBuffer =  typename ParticleContainer&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;::SendBuffer</definition>
        <argsstring></argsstring>
        <name>SendBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="199" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="199" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1ab2ef89d2bc69cbfa4ca8f26175d2ce1c" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1a0c2a28aef7db24fbfccc53f46637a582" kindref="member">PairIndex</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1InverseCopyTag" kindref="compound">InverseCopyTag</ref> &gt; &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;PairIndex, Vector&lt;InverseCopyTag&gt; &gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::inverse_tags</definition>
        <argsstring></argsstring>
        <name>inverse_tags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="370" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a2db2fa1d27368a0d8f2a783f215cd93b" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1a0c2a28aef7db24fbfccc53f46637a582" kindref="member">PairIndex</ref>, <ref refid="classamrex_1_1NeighborParticleContainer_1a88e27f1bb35a55e5fb6555057e1e25ac" kindref="member">ParticleTile</ref> &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;PairIndex, ParticleTile&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::neighbors</definition>
        <argsstring></argsstring>
        <name>neighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="371" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a68d92607a1d43f215ae6af8ff8d3e3af" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1a0c2a28aef7db24fbfccc53f46637a582" kindref="member">PairIndex</ref>, <ref refid="classamrex_1_1NeighborParticleContainer_1a60a40e557410a932b8adc0275a5d019f" kindref="member">IntVector</ref> &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;PairIndex, IntVector&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::neighbor_list</definition>
        <argsstring></argsstring>
        <name>neighbor_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="372" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a36651cd2e655c49f9d9c57c865223fa2" prot="protected" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::pdata_size</definition>
        <argsstring></argsstring>
        <name>pdata_size</name>
        <initializer>= sizeof(<ref refid="classamrex_1_1NeighborParticleContainer_1ac5323a2b8fdbd75499432de90d1010f9" kindref="member">ParticleType</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="373" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a0bc1ebc16494317aa1ee91983ac667e4" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::cdata_size</definition>
        <argsstring></argsstring>
        <name>cdata_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="376" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a9c12404dedc750595ce4d68731d6fc29" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_num_neighbor_cells</definition>
        <argsstring></argsstring>
        <name>m_num_neighbor_cells</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="377" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a36b78bd6fa71f934871cf953892ef4f8" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCommTag" kindref="compound">NeighborCommTag</ref> &gt;</type>
        <definition>Vector&lt;NeighborCommTag&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::local_neighbors</definition>
        <argsstring></argsstring>
        <name>local_neighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="378" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1ad8787f8726e711a8d7a8e0dce3fb8624" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::unique_ptr&lt; <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> &gt; &gt;</type>
        <definition>Vector&lt;std::unique_ptr&lt;iMultiFab&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::mask_ptr</definition>
        <argsstring></argsstring>
        <name>mask_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="379" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a82a5acd18d78404acab9c6f310411369" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1a0c2a28aef7db24fbfccc53f46637a582" kindref="member">PairIndex</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" kindref="compound">NeighborCopyTag</ref> &gt; &gt; &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;PairIndex, Vector&lt;Vector&lt;NeighborCopyTag&gt; &gt; &gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::buffer_tag_cache</definition>
        <argsstring></argsstring>
        <name>buffer_tag_cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="381" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1abbb2992e59999ae9c2866da0b90a7378" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1a0c2a28aef7db24fbfccc53f46637a582" kindref="member">PairIndex</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;PairIndex, int&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::local_neighbor_sizes</definition>
        <argsstring></argsstring>
        <name>local_neighbor_sizes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="382" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a704c1b5b30612c4f5a09378f0a63b221" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::neighbor_procs</definition>
        <argsstring></argsstring>
        <name>neighbor_procs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>each proc knows how many sends it will do, and how many bytes it will rcv from each other proc. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="386" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a6d6260836577412b1a3a17c7f8d09bc4" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt;</type>
        <definition>Vector&lt;Long&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::rcvs</definition>
        <argsstring></argsstring>
        <name>rcvs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="387" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="387" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a9c0cf5742a0014b73afe38a75f02534e" prot="protected" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::num_snds</definition>
        <argsstring></argsstring>
        <name>num_snds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="388" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a5ba336738781f2d529bbb68a7f297e17" prot="protected" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; char &gt; &gt;</type>
        <definition>std::map&lt;int, Vector&lt;char&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::send_data</definition>
        <argsstring></argsstring>
        <name>send_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="389" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1abe13d10d672a558cf71e711fb838801e" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::rc</definition>
        <argsstring></argsstring>
        <name>rc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="391" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a4dcbd1979fd215fa6c8ab4ea563638d0" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ic</definition>
        <argsstring></argsstring>
        <name>ic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="392" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a68fedc2fd57b0e5efccdf65617f930ff" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_neighbor_mask_initialized</definition>
        <argsstring></argsstring>
        <name>m_neighbor_mask_initialized</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="424" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a0f3bc83f8fdf1b3468248103a0000a49" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classamrex_1_1iMultiFab" kindref="compound">amrex::iMultiFab</ref> &gt;</type>
        <definition>std::unique_ptr&lt;amrex::iMultiFab&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_neighbor_mask_ptr</definition>
        <argsstring></argsstring>
        <name>m_neighbor_mask_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="425" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a6aafab3c8c1565c5457b08400f0c7984" prot="protected" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, std::vector&lt; std::vector&lt; <ref refid="structamrex_1_1NeighborCode" kindref="compound">NeighborCode</ref> &gt; &gt; &gt;</type>
        <definition>std::map&lt;int, std::vector&lt;std::vector&lt;NeighborCode&gt; &gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_grid_map</definition>
        <argsstring></argsstring>
        <name>m_grid_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="426" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1adc6fa317f2580d5b4eaf5e7e156694e8" prot="protected" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">amrex::Gpu::DeviceVector</ref>&lt; <ref refid="structamrex_1_1NeighborCode" kindref="compound">NeighborCode</ref> &gt; &gt;</type>
        <definition>std::map&lt;int, amrex::Gpu::DeviceVector&lt;NeighborCode&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_code_array</definition>
        <argsstring></argsstring>
        <name>m_code_array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="428" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1adc56d3fa06a368656ba30775e6af57d5" prot="protected" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">amrex::Gpu::DeviceVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt;</type>
        <definition>std::map&lt;int, amrex::Gpu::DeviceVector&lt;int&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_code_offsets</definition>
        <argsstring></argsstring>
        <name>m_code_offsets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="429" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a42b4110915286223007d92bbcf580d89" prot="protected" static="no" mutable="no">
        <type><ref refid="structamrex_1_1ParticleCopyOp" kindref="compound">ParticleCopyOp</ref></type>
        <definition>ParticleCopyOp amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::neighbor_copy_op</definition>
        <argsstring></argsstring>
        <name>neighbor_copy_op</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="431" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a4057e1a1eaeca59b1c87cec0720343d6" prot="protected" static="no" mutable="no">
        <type><ref refid="structamrex_1_1ParticleCopyPlan" kindref="compound">ParticleCopyPlan</ref></type>
        <definition>ParticleCopyPlan amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::neighbor_copy_plan</definition>
        <argsstring></argsstring>
        <name>neighbor_copy_plan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="432" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a78049454550fa714d431a49586671628" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">amrex::Gpu::DeviceVector</ref>&lt; char &gt;</type>
        <definition>amrex::Gpu::DeviceVector&lt;char&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::snd_buffer</definition>
        <argsstring></argsstring>
        <name>snd_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="434" column="30" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a2f7e6baa209278afea162548a1425bf2" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">amrex::Gpu::DeviceVector</ref>&lt; char &gt;</type>
        <definition>amrex::Gpu::DeviceVector&lt;char&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::rcv_buffer</definition>
        <argsstring></argsstring>
        <name>rcv_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="435" column="30" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a1f7704df7069ec0df0e84a649babf620" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1a6e76d121ad2e1030d86ccbc9a47f6fde" kindref="member">Gpu::PinnedVector</ref>&lt; char &gt;</type>
        <definition>Gpu::PinnedVector&lt;char&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::pinned_snd_buffer</definition>
        <argsstring></argsstring>
        <name>pinned_snd_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="437" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a57f27a8f270653d1a738490e32dffe4b" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1a6e76d121ad2e1030d86ccbc9a47f6fde" kindref="member">Gpu::PinnedVector</ref>&lt; char &gt;</type>
        <definition>Gpu::PinnedVector&lt;char&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::pinned_rcv_buffer</definition>
        <argsstring></argsstring>
        <name>pinned_rcv_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="438" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a099f1647d78bdf8b431f96836f553df3" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; std::pair&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;, <ref refid="classamrex_1_1NeighborList" kindref="compound">amrex::NeighborList</ref>&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1ac5323a2b8fdbd75499432de90d1010f9" kindref="member">ParticleType</ref> &gt; &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;std::pair&lt;int, int&gt;, amrex::NeighborList&lt;ParticleType&gt; &gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_neighbor_list</definition>
        <argsstring></argsstring>
        <name>m_neighbor_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="441" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a027a8bd9c7726edd5ab979a6ee716fa8" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_has_neighbors</definition>
        <argsstring></argsstring>
        <name>m_has_neighbors</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="445" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="445" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1aebe05d83866295fa66cd195bfd2ccc44" prot="protected" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::num_mask_comps</definition>
        <argsstring></argsstring>
        <name>num_mask_comps</name>
        <initializer>= 3</initializer>
        <briefdescription>
<para>grid, tile, level </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="375" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a21bd4a08b87b0afeeb0d8889c619c86c" prot="protected" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool NeighborParticleContainer::use_mask</definition>
        <argsstring></argsstring>
        <name>use_mask</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="394" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a253931bb13b740bcdf8da45fe68a4591" prot="protected" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool NeighborParticleContainer::enable_inverse</definition>
        <argsstring></argsstring>
        <name>enable_inverse</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="396" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="396" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classamrex_1_1NeighborParticleContainer_1af2dd70e123c4708809ddc29dc04124e9" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const InverseCopyTag &amp;tag)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1NeighborParticleContainer_1_1InverseCopyTag" kindref="compound">InverseCopyTag</ref> &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="140" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="140" bodyend="146"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1aec6aa68d7cccf38bf8f2ece89e2e47ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeighborParticleContainer::NeighborParticleContainer</definition>
        <argsstring>(ParGDBBase *gdb, int ncells)</argsstring>
        <name>NeighborParticleContainer</name>
        <param>
          <type><ref refid="classamrex_1_1ParGDBBase" kindref="compound">ParGDBBase</ref> *</type>
          <declname>gdb</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncells</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="201" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="9" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a04cedff11be23a14eb5b47dfb818695f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::NeighborParticleContainer</definition>
        <argsstring>(const Geometry &amp;geom, const DistributionMapping &amp;dmap, const BoxArray &amp;ba, int nneighbor)</argsstring>
        <name>NeighborParticleContainer</name>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nneighbor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="203" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a7ce8a903b6da41ecd366aaaa48d6ee9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::NeighborParticleContainer</definition>
        <argsstring>(const Vector&lt; Geometry &gt; &amp;geom, const Vector&lt; DistributionMapping &gt; &amp;dmap, const Vector&lt; BoxArray &gt; &amp;ba, const Vector&lt; int &gt; &amp;rr, int nneighbor)</argsstring>
        <name>NeighborParticleContainer</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &gt; &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &gt; &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &gt; &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &amp;</type>
          <declname>rr</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nneighbor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="208" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1adbf6915c6877b366e0bda3e6f268eb30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::Regrid</definition>
        <argsstring>(const DistributionMapping &amp;dmap, const BoxArray &amp;ba)</argsstring>
        <name>Regrid</name>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>ba</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Regrid functions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="217" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="90" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1aee1b7c1708cd7d226db64b05d590d1fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::Regrid</definition>
        <argsstring>(const DistributionMapping &amp;dmap, const BoxArray &amp;ba, const int lev)</argsstring>
        <name>Regrid</name>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="218" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="101" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a991c2e4f486d6cbb9cf74c326c1ad357" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::Regrid</definition>
        <argsstring>(const Vector&lt; DistributionMapping &gt; &amp;dmap, const Vector&lt; BoxArray &gt; &amp;ba)</argsstring>
        <name>Regrid</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &gt; &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &gt; &amp;</type>
          <declname>ba</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="219" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="111" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a2c1bf28f2552627e93d1587e977dd22a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::fillNeighbors</definition>
        <argsstring>()</argsstring>
        <name>fillNeighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This fills the neighbor buffers for each tile with the proper data </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="224" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="612" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a881b90e85491b4c0a7bb25425cc38641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::sumNeighbors</definition>
        <argsstring>(int real_start_comp, int real_num_comp, int int_start_comp, int int_num_comp)</argsstring>
        <name>sumNeighbors</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>real_start_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>real_num_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>int_start_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>int_num_comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This does an &quot;inverse&quot; fillNeighbors operation, meaning that it adds data from the ghost particles to the corresponding real ones. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="230" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="624" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1add63262756c48b8f645f236c664067d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::updateNeighbors</definition>
        <argsstring>()</argsstring>
        <name>updateNeighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This updates the neighbors with their current particle data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="236" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="637" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a287e510b67bfbb6bd4d500e5281e3329" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::clearNeighbors</definition>
        <argsstring>()</argsstring>
        <name>clearNeighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Each tile clears its neighbors, freeing the memory </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="241" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="653" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1ab3f15c1b66190b5ff6d895d6ab0b63e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CheckPair</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::buildNeighborList</definition>
        <argsstring>(CheckPair &amp;&amp;check_pair, bool sort=false)</argsstring>
        <name>buildNeighborList</name>
        <param>
          <type>CheckPair &amp;&amp;</type>
          <declname>check_pair</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sort</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a Neighbor List for each tile </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="247" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1aac13e1f1c324181ce01a8f50fe3897d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::printNeighborList</definition>
        <argsstring>()</argsstring>
        <name>printNeighborList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="249" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="736" bodyend="750"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a9c5eaf4a73e02b631f586b8d9eaa9b44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::setRealCommComp</definition>
        <argsstring>(int i, bool value)</argsstring>
        <name>setRealCommComp</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="251" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a63cbb0b5b6c81df9e4321148bc960f32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::setIntCommComp</definition>
        <argsstring>(int i, bool value)</argsstring>
        <name>setIntCommComp</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="252" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a662f2650bebba90cebfd2f314bce4585" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1NeighborParticleContainer_1a88e27f1bb35a55e5fb6555057e1e25ac" kindref="member">ParticleTile</ref> &amp;</type>
        <definition>ParticleTile&amp; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::GetNeighbors</definition>
        <argsstring>(int lev, int grid, int tile)</argsstring>
        <name>GetNeighbors</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="254" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a0d80b42fa8c4fa92b49b26301ea8e205" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1NeighborParticleContainer_1a88e27f1bb35a55e5fb6555057e1e25ac" kindref="member">ParticleTile</ref> &amp;</type>
        <definition>const ParticleTile&amp; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::GetNeighbors</definition>
        <argsstring>(int lev, int grid, int tile) const</argsstring>
        <name>GetNeighbors</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="259" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="259" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a394a5717e0621cf4e2250d432950cd8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename std::enable_if&lt; std::is_same&lt; T, bool &gt;::value, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;::type</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::AddRealComp</definition>
        <argsstring>(T communicate=true)</argsstring>
        <name>AddRealComp</name>
        <param>
          <type>T</type>
          <declname>communicate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="266" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="266" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a495d805bcf68681c718d5316bac80c07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename std::enable_if&lt; std::is_same&lt; T, bool &gt;::value, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;::type</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::AddIntComp</definition>
        <argsstring>(T communicate=true)</argsstring>
        <name>AddIntComp</name>
        <param>
          <type>T</type>
          <declname>communicate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="276" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="276" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a1dadb49a29f4ad711fb369db84b2eb54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::Redistribute</definition>
        <argsstring>(int lev_min=0, int lev_max=-1, int nGrow=0, int local=0)</argsstring>
        <name>Redistribute</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev_min</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev_max</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nGrow</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>local</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="284" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="284" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a098b72559cacc3ab8b2455a36137fd06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::RedistributeLocal</definition>
        <argsstring>()</argsstring>
        <name>RedistributeLocal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="291" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="291" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a4dbc10fb057262215b756a2b4289b33c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::fillNeighborsGPU</definition>
        <argsstring>()</argsstring>
        <name>fillNeighborsGPU</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="302" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesGPUImpl.H" bodystart="264" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a4fa257e580303d39d363c459981fc10b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::updateNeighborsGPU</definition>
        <argsstring>()</argsstring>
        <name>updateNeighborsGPU</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="303" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesGPUImpl.H" bodystart="284" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1acfd5f04cd8c4ccc1624a2800908ab823" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::clearNeighborsGPU</definition>
        <argsstring>()</argsstring>
        <name>clearNeighborsGPU</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="304" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesGPUImpl.H" bodystart="321" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a9fd86ef6591da68553312d8cc6321034" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::setEnableInverse</definition>
        <argsstring>(bool flag)</argsstring>
        <name>setEnableInverse</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="313" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="313" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a10946f0902af75ab296818655fa6b388" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::enableInverse</definition>
        <argsstring>()</argsstring>
        <name>enableInverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="319" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="319" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1ad01b79b58df596f16982763a74e34d70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::buildNeighborMask</definition>
        <argsstring>()</argsstring>
        <name>buildNeighborMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="321" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesGPUImpl.H" bodystart="61" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a9f9b59556eee3e510dfa52a90110fe78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::buildNeighborCopyOp</definition>
        <argsstring>()</argsstring>
        <name>buildNeighborCopyOp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="323" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesGPUImpl.H" bodystart="175" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a099c7b4442243afbac09ed42e80e9774" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CheckPair</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::buildNeighborList</definition>
        <argsstring>(CheckPair &amp;&amp;check_pair, bool)</argsstring>
        <name>buildNeighborList</name>
        <param>
          <type>CheckPair &amp;&amp;</type>
          <declname>check_pair</declname>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" line="666" column="27" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="667" bodyend="731"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a497db0eca21eb270f545e60f034aeb6a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::cacheNeighborInfo</definition>
        <argsstring>()</argsstring>
        <name>cacheNeighborInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="327" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="288" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1af79112d043b45868fb00cf720d61b0a5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::BuildMasks</definition>
        <argsstring>()</argsstring>
        <name>BuildMasks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This builds the internal mask data structure used for looking up neighbors </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="332" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="124" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a01f3711526aa5aff0183fc0eeee6a866" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::GetNeighborCommTags</definition>
        <argsstring>()</argsstring>
        <name>GetNeighborCommTags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="334" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="168" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1ace4a68e9536f7e36dd141825cdc04519" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::GetCommTagsBox</definition>
        <argsstring>(Vector&lt; NeighborCommTag &gt; &amp;tags, const int lev, const Box &amp;in_box)</argsstring>
        <name>GetCommTagsBox</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCommTag" kindref="compound">NeighborCommTag</ref> &gt; &amp;</type>
          <declname>tags</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>in_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="336" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="241" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1af03a2d960e9c4975823cee72793a6410" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::resizeContainers</definition>
        <argsstring>(const int lev)</argsstring>
        <name>resizeContainers</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="338" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="755" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a9fc777a6611729b79c56fc8f1782c830" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::initializeCommComps</definition>
        <argsstring>()</argsstring>
        <name>initializeCommComps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="340" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="44" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a9fea3b7765226c9483a81c772e3cfcd0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::calcCommSize</definition>
        <argsstring>()</argsstring>
        <name>calcCommSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="342" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="71" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1af3b5f685680bc88ad15c0f2cd5ee44c8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::fillNeighborsMPI</definition>
        <argsstring>(bool reuse_rcv_counts)</argsstring>
        <name>fillNeighborsMPI</name>
        <param>
          <type>bool</type>
          <declname>reuse_rcv_counts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform the MPI communication neccesary to fill neighbor buffers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="347" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesCPUImpl.H" bodystart="500" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a832b5eccef2ae5ed7bb83a92653b793e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::sumNeighborsMPI</definition>
        <argsstring>(std::map&lt; int, Vector&lt; char &gt; &gt; &amp;not_ours, int real_start_comp, int real_num_comp, int int_start_comp, int int_num_comp)</argsstring>
        <name>sumNeighborsMPI</name>
        <param>
          <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; char &gt; &gt; &amp;</type>
          <declname>not_ours</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>real_start_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>real_num_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>int_start_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>int_num_comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="349" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesCPUImpl.H" bodystart="106" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a78a0bf763811ffa755a8a562f2cdede1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::getRcvCountsMPI</definition>
        <argsstring>()</argsstring>
        <name>getRcvCountsMPI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform handshake to figure out how many bytes each proc should receive </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="356" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesCPUImpl.H" bodystart="440" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1aeac938e58c39ed30aa59d2fd709583dc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::GetNeighborCommTags</definition>
        <argsstring>(Vector&lt; NeighborCommTag &gt; &amp;tags, const int lev, Box box)</argsstring>
        <name>GetNeighborCommTags</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCommTag" kindref="compound">NeighborCommTag</ref> &gt; &amp;</type>
          <declname>tags</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref></type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="358" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a06c94b36af8bed58f1c6c0b4ad62e182" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::getNeighborTags</definition>
        <argsstring>(Vector&lt; NeighborCopyTag &gt; &amp;tags, const ParticleType &amp;p, const int nGrow, const NeighborCopyTag &amp;src_tag, const MyParIter &amp;pti)</argsstring>
        <name>getNeighborTags</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" kindref="compound">NeighborCopyTag</ref> &gt; &amp;</type>
          <declname>tags</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1NeighborParticleContainer_1ac5323a2b8fdbd75499432de90d1010f9" kindref="member">ParticleType</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nGrow</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" kindref="compound">NeighborCopyTag</ref> &amp;</type>
          <declname>src_tag</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1NeighborParticleContainer_1a4f7f3ca7bf951e7ec6fce594005694da" kindref="member">MyParIter</ref> &amp;</type>
          <declname>pti</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="360" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="511" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a98b93307f7df6a29e8e1b84bfdcda458" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::getNeighborTags</definition>
        <argsstring>(Vector&lt; NeighborCopyTag &gt; &amp;tags, const ParticleType &amp;p, const IntVect &amp;nGrow, const NeighborCopyTag &amp;src_tag, const MyParIter &amp;pti)</argsstring>
        <name>getNeighborTags</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" kindref="compound">NeighborCopyTag</ref> &gt; &amp;</type>
          <declname>tags</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1NeighborParticleContainer_1ac5323a2b8fdbd75499432de90d1010f9" kindref="member">ParticleType</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>nGrow</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" kindref="compound">NeighborCopyTag</ref> &amp;</type>
          <declname>src_tag</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1NeighborParticleContainer_1a4f7f3ca7bf951e7ec6fce594005694da" kindref="member">MyParIter</ref> &amp;</type>
          <declname>pti</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="364" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="520" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a9ceb44fa50f3d21117cd9f180ca28eb0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></type>
        <definition>IntVect NeighborParticleContainer::computeRefFac</definition>
        <argsstring>(const int src_lev, const int lev)</argsstring>
        <name>computeRefFac</name>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>src_lev</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="368" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="222" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a5bde7ea76f99ed274bef3626dc3f833b" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::hasNeighbors</definition>
        <argsstring>() const</argsstring>
        <name>hasNeighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="443" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="443" bodyend="443"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This is a container for particles that undergo short-range interations. In addition to the normal <ref refid="classamrex_1_1ParticleContainer" kindref="compound">ParticleContainer</ref> methods, each tile contains a &quot;neighbor
buffer&quot; that is filled with data corresponding to the particles within 1 neighbor cell of the tile boundaries. This allows the N^2 search over each pair of particles to proceed locally, instead of over the entire domain.</para>
<para>Note that neighbor particles are different than &quot;ghost&quot; particles, which are used in AMR subcycling to keep track of coarse level particles that may move on to fine levels during a fine level time step. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>amrex::ParticleContainer&lt; NStructReal, NStructInt, 0, 0 &gt;</label>
        <link refid="classamrex_1_1ParticleContainer"/>
      </node>
      <node id="1">
        <label>amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;</label>
        <link refid="classamrex_1_1NeighborParticleContainer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="48">
        <label>std::vector&lt; MPI_Status, std::allocator&lt; MPI_Status &gt; &gt;</label>
      </node>
      <node id="42">
        <label>std::allocator&lt; unsigned int &gt;</label>
      </node>
      <node id="37">
        <label>std::vector&lt; std::map&lt; PairIndex, int &gt;, std::allocator&lt; std::map&lt; PairIndex, int &gt; &gt; &gt;</label>
      </node>
      <node id="31">
        <label>std::vector&lt; std::map&lt; PairIndex, ParticleTile &gt;, std::allocator&lt; std::map&lt; PairIndex, ParticleTile &gt; &gt; &gt;</label>
      </node>
      <node id="34">
        <label>amrex::Vector&lt; amrex::NeighborParticleContainer::NeighborCommTag &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>amrex::PODVector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="46" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>std::vector&lt; Long, std::allocator&lt; Long &gt; &gt;</label>
      </node>
      <node id="46">
        <label>std::allocator&lt; std::size_t &gt;</label>
      </node>
      <node id="30">
        <label>amrex::Vector&lt; std::map&lt; PairIndex, ParticleTile &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>amrex::Vector&lt; std::map&lt; std::pair&lt; int, int &gt;, amrex::NeighborList&lt; ParticleType &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="25" relation="public-inheritance">
        </childnode>
      </node>
      <node id="55">
        <label>std::vector&lt; std::map&lt; PairIndex, IntVector &gt;, std::allocator&lt; std::map&lt; PairIndex, IntVector &gt; &gt; &gt;</label>
      </node>
      <node id="49">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="50" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>amrex::Particle&lt; T_NReal, T_NInt &gt;</label>
        <link refid="structamrex_1_1Particle"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>std::vector&lt; std::string, std::allocator&lt; std::string &gt; &gt;</label>
      </node>
      <node id="22">
        <label>amrex::Vector&lt; amrex::Vector&lt; int &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="23" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="15" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>string</label>
      </node>
      <node id="2">
        <label>amrex::ParticleContainer&lt; NStructReal, NStructInt, 0, 0 &gt;</label>
        <link refid="classamrex_1_1ParticleContainer"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_bins</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>d_communicate_int_comp</edgelabel>
          <edgelabel>d_communicate_real_comp</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>wherePrePost</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>filePrefixPrePost</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>h_communicate_real_comp</edgelabel>
          <edgelabel>h_communicate_int_comp</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>HdrFileNamePrePost</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>nParticlesAtLevelPrePost</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>ParticleRealDescriptor</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>m_particles</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>whichPrePost</edgelabel>
          <edgelabel>countPrePost</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>amrex::Vector&lt; std::map&lt; PairIndex, amrex::Vector&lt; amrex::Vector&lt; amrex::NeighborParticleContainer::NeighborCopyTag &gt; &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>std::vector&lt; amrex::Vector&lt; Long &gt;, std::allocator&lt; amrex::Vector&lt; Long &gt; &gt; &gt;</label>
      </node>
      <node id="57">
        <label>std::vector&lt; std::map&lt; PairIndex, amrex::Vector&lt; amrex::NeighborParticleContainer::InverseCopyTag &gt; &gt;, std::allocator&lt; std::map&lt; PairIndex, amrex::Vector&lt; amrex::NeighborParticleContainer::InverseCopyTag &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="25">
        <label>std::vector&lt; std::map&lt; std::pair&lt; int, int &gt;, amrex::NeighborList&lt; ParticleType &gt; &gt;, std::allocator&lt; std::map&lt; std::pair&lt; int, int &gt;, amrex::NeighborList&lt; ParticleType &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="27">
        <label>std::vector&lt; std::map&lt; PairIndex, amrex::Vector&lt; amrex::Vector&lt; amrex::NeighborParticleContainer::NeighborCopyTag &gt; &gt; &gt;, std::allocator&lt; std::map&lt; PairIndex, amrex::Vector&lt; amrex::Vector&lt; amrex::NeighborParticleContainer::NeighborCopyTag &gt; &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="29">
        <label>std::allocator&lt; char &gt;</label>
      </node>
      <node id="52">
        <label>amrex::Vector&lt; std::map&lt; int, amrex::PODVector&lt; amrex::IntVect &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="53" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>std::vector&lt; amrex::NeighborParticleContainer::NeighborCommTag, std::allocator&lt; amrex::NeighborParticleContainer::NeighborCommTag &gt; &gt;</label>
      </node>
      <node id="21">
        <label>std::vector&lt; ParticleLevel, std::allocator&lt; ParticleLevel &gt; &gt;</label>
      </node>
      <node id="41">
        <label>amrex::PODVector&lt; unsigned int &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>amrex::Vector&lt; std::map&lt; int, amrex::PODVector&lt; int &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
      </node>
      <node id="54">
        <label>amrex::Vector&lt; std::map&lt; PairIndex, IntVector &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="55" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>std::allocator&lt; index_type &gt;</label>
      </node>
      <node id="10">
        <label>amrex::Vector&lt; amrex::Vector&lt; Long &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="50">
        <label>std::vector&lt; MPI_Request, std::allocator&lt; MPI_Request &gt; &gt;</label>
      </node>
      <node id="56">
        <label>amrex::Vector&lt; std::map&lt; PairIndex, amrex::Vector&lt; amrex::NeighborParticleContainer::InverseCopyTag &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="57" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>std::vector&lt; int, std::allocator&lt; int &gt; &gt;</label>
      </node>
      <node id="6">
        <label>amrex::PODVector&lt; index_type &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>amrex::RealDescriptor</label>
        <link refid="classamrex_1_1RealDescriptor"/>
        <childnode refid="14" relation="usage">
          <edgelabel>ord</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>fr</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>amrex::ParticleBase&lt; ParticleReal, T_NReal, 0 &gt;</label>
        <link refid="structamrex_1_1ParticleBase"/>
      </node>
      <node id="47">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="48" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>amrex::PODVector&lt; char &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>amrex::Vector&lt; Long &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;</label>
        <link refid="classamrex_1_1NeighborParticleContainer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>m_neighbor_list</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>buffer_tag_cache</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>snd_buffer</edgelabel>
          <edgelabel>pinned_snd_buffer</edgelabel>
          <edgelabel>rcv_buffer</edgelabel>
          <edgelabel>pinned_rcv_buffer</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>neighbors</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>mask_ptr</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>rc</edgelabel>
          <edgelabel>neighbor_procs</edgelabel>
          <edgelabel>ic</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>local_neighbors</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>rcvs</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>local_neighbor_sizes</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>neighbor_copy_plan</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>neighbor_copy_op</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>neighbor_list</edgelabel>
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>inverse_tags</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>amrex::PODVector&lt; int &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>std::vector&lt; std::map&lt; int, amrex::PODVector&lt; int &gt; &gt;, std::allocator&lt; std::map&lt; int, amrex::PODVector&lt; int &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="51">
        <label>amrex::ParticleCopyOp</label>
        <link refid="structamrex_1_1ParticleCopyOp"/>
        <childnode refid="43" relation="usage">
          <edgelabel>m_levels</edgelabel>
          <edgelabel>m_boxes</edgelabel>
          <edgelabel>m_src_indices</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>m_periodic_shift</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>std::allocator&lt; int &gt;</label>
      </node>
      <node id="12">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="53">
        <label>std::vector&lt; std::map&lt; int, amrex::PODVector&lt; amrex::IntVect &gt; &gt;, std::allocator&lt; std::map&lt; int, amrex::PODVector&lt; amrex::IntVect &gt; &gt; &gt; &gt;</label>
      </node>
      <node id="33">
        <label>std::vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt;, std::allocator&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt; &gt;</label>
      </node>
      <node id="20">
        <label>amrex::Vector&lt; ParticleLevel &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>amrex::DenseBins&lt; amrex::Particle &gt;</label>
        <link refid="classamrex_1_1DenseBins"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_items</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_counts</edgelabel>
          <edgelabel>m_perm</edgelabel>
          <edgelabel>m_offsets</edgelabel>
          <edgelabel>m_cells</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>std::vector&lt; amrex::Vector&lt; int &gt;, std::allocator&lt; amrex::Vector&lt; int &gt; &gt; &gt;</label>
      </node>
      <node id="39">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="40" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>amrex::Vector&lt; std::map&lt; PairIndex, int &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="37" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>std::vector&lt; std::size_t, std::allocator&lt; std::size_t &gt; &gt;</label>
      </node>
      <node id="38">
        <label>amrex::ParticleCopyPlan</label>
        <link refid="structamrex_1_1ParticleCopyPlan"/>
        <childnode refid="39" relation="usage">
          <edgelabel>m_snd_pad_correction_h</edgelabel>
          <edgelabel>m_snd_offsets</edgelabel>
          <edgelabel>m_rOffset</edgelabel>
          <edgelabel>m_snd_counts</edgelabel>
          <edgelabel>m_rcv_pad_correction_h</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>m_box_offsets</edgelabel>
          <edgelabel>m_box_counts_h</edgelabel>
          <edgelabel>m_box_counts_d</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>m_dst_indices</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_rcv_box_ids</edgelabel>
          <edgelabel>m_rcv_box_counts</edgelabel>
          <edgelabel>m_rcv_data</edgelabel>
          <edgelabel>m_rcv_box_pids</edgelabel>
          <edgelabel>m_rcv_box_offsets</edgelabel>
          <edgelabel>m_rcv_box_levs</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>m_snd_pad_correction_d</edgelabel>
          <edgelabel>m_rcv_pad_correction_d</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>m_RcvProc</edgelabel>
          <edgelabel>m_neighbor_procs</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>m_Rcvs</edgelabel>
          <edgelabel>m_Snds</edgelabel>
          <edgelabel>m_rcv_num_particles</edgelabel>
          <edgelabel>m_snd_num_particles</edgelabel>
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>m_particle_stats</edgelabel>
          <edgelabel>m_build_stats</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>m_build_rreqs</edgelabel>
          <edgelabel>m_particle_rreqs</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="35" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="33" bodyend="446"/>
    <listofallmembers>
      <member refid="classamrex_1_1NeighborParticleContainer_1a495d805bcf68681c718d5316bac80c07" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AddIntComp</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a15a0822c8e9ab7e6e1c81fd57945b2e1" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>addParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a690524574f10b59f9171c7c71f9f0896" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>addParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ac7b7f0e1b59f64943f3fbb57642b027f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>addParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a579c73fe0e3815a17b0cb7136a5d3788" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>addParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a5e496eb6c5eb9044efccf3405802d0ab" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AddParticlesAtLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a1e5edb9dcc7ecd29dda29c2f11b219c6" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AddParticlesAtLevel</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a394a5717e0621cf4e2250d432950cd8a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AddRealComp</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a9995e5d70eb54ec2ce181516897c3d7e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AllocatorType</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a41c79512efbfbf1a4145948c6a680d5c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AoS</name></member>
      <member refid="classamrex_1_1ParticleContainer_1acc4644f70b3a2b0774d2643061c1e627" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AssignCellDensitySingleLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a9cf5606a50223dbd69895cb4e2fb6a6a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AssignDensity</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a82a5acd18d78404acab9c6f310411369" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buffer_tag_cache</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1af79112d043b45868fb00cf720d61b0a5" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>BuildMasks</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9f9b59556eee3e510dfa52a90110fe78" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buildNeighborCopyOp</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ab3f15c1b66190b5ff6d895d6ab0b63e2" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buildNeighborList</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a099c7b4442243afbac09ed42e80e9774" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buildNeighborList</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ad01b79b58df596f16982763a74e34d70" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buildNeighborMask</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aab3e8fd11dd5a3b385e93347932cf1ee" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ByteSpread</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a497db0eca21eb270f545e60f034aeb6a" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>cacheNeighborInfo</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9fea3b7765226c9483a81c772e3cfcd0" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>calcCommSize</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a0bc1ebc16494317aa1ee91983ac667e4" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>cdata_size</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ae7412e40e001b22e79674559db78518c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CharVector</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a3b1f3f44f027800f96b2fc4109f49066" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Checkpoint</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a5df9334c2851642312c784c5e218c2b6" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Checkpoint</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a56a586c50e7e206bc8b6fe4e42236ab5" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CheckpointPost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a0e505f93fc9e92c5de2b23f240b5e8e9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CheckpointPre</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a287e510b67bfbb6bd4d500e5281e3329" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>clearNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1acfd5f04cd8c4ccc1624a2800908ab823" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>clearNeighborsGPU</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ae3e43a24a2d123987dff0e247386eca6" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>clearParticles</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9ceb44fa50f3d21117cd9f180ca28eb0" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>computeRefFac</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aa439adf0d7c6d4d2b0ab1e69b3f953f2" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>copyParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a0c78636f51794b4a1278b7ec2fb228d4" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>copyParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a8ddf335f9303483f96b8d877f3ca0880" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>copyParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a997ff34394c4e94d45f35a8d096ad68c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>copyParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aed1e16087eecd5c4a580c3355b2c34e3" prot="private" virt="virtual"><scope>amrex::NeighborParticleContainer</scope><name>correctCellVectors</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aad53a5d113c1421b521daa8597d812f5" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>countPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a9376474a48195407b9ee0f8db7d25027" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CreateGhostParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a2a8bc552a4b8277581ccca9399a023eb" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CreateGhostParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1af022a8f9d07c1f2c2eb448dfc500bbc8" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CreateVirtualParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a13c9702fc016f3d6521f173115b94ec2" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CreateVirtualParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a3bda7f33f9612317c988b7a6f4548751" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>d_communicate_int_comp</name></member>
      <member refid="classamrex_1_1ParticleContainer_1acfcf69da8218b517a1319af4aef4b7da" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>d_communicate_real_comp</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ae4ec7278685f0bdc307a4a5119f3768d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Define</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a3b3abd75c81fdb90bd1c0219404f2abb" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Define</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a5d9a132b45d62f770b786771fd69e959" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Define</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a08836ef61a1fb5f718f5684eeb6a5a2c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>DefineAndReturnParticleTile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a86bb7b9d5d63abaaa52210f103b99f49" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>DefineAndReturnParticleTile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1af397a66c3849926e09fd03b1dd1acc1b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>doUnlink</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a253931bb13b740bcdf8da45fe68a4591" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>enable_inverse</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a10946f0902af75ab296818655fa6b388" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>enableInverse</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aea2134948d1fb5fd85656dc6bc1cc3cd" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>EnforcePeriodicWhere</name></member>
      <member refid="classamrex_1_1ParticleContainer_1af0a6de8f8e2b2bf3ce5cdf18d906cdc4" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>filePrefixPrePost</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a2c1bf28f2552627e93d1587e977dd22a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>fillNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a4dbc10fb057262215b756a2b4289b33c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>fillNeighborsGPU</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1af3b5f685680bc88ad15c0f2cd5ee44c8" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>fillNeighborsMPI</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ace4a68e9536f7e36dd141825cdc04519" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetCommTagsBox</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a30fd89965e6fb6402876b7dcfa01f8ca" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetLevelDirectoriesCreated</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a8075f4c73f94879be1b12ad173aee797" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetMaxNextIDPrePost</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a01f3711526aa5aff0183fc0eeee6a866" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetNeighborCommTags</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aeac938e58c39ed30aa59d2fd709583dc" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetNeighborCommTags</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a662f2650bebba90cebfd2f314bce4585" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a0d80b42fa8c4fa92b49b26301ea8e205" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a06c94b36af8bed58f1c6c0b4ad62e182" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>getNeighborTags</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a98b93307f7df6a29e8e1b84bfdcda458" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>getNeighborTags</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a856d46535b4c90f9ee3fc340d4538614" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetNParticlesPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a09c025ce534ccfa2cd24373e610e515b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1adb45c348f51c3f8bdb8ce8d0311f0a68" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a68df62514178f380d273bdb2b416546c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ad198a9136fbfb0e6849f9e7bdf45b634" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetParticles</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a78a0bf763811ffa755a8a562f2cdede1" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>getRcvCountsMPI</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aefcf7e48799c62c1b80f3c52d3f3e434" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetUsePrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a8ad5cf3e3f03e384ff513c2637416266" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetUseUnlink</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a8b8559f9912f624258ef591158eaf115" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>h_communicate_int_comp</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a839b2b309c4894661911e0c22726cb20" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>h_communicate_real_comp</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a5bde7ea76f99ed274bef3626dc3f833b" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>hasNeighbors</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a5c5bc8d9f109d1b7fa0c5d0a2dce0aad" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>HdrFileNamePrePost</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a4dcbd1979fd215fa6c8ab4ea563638d0" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ic</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a4ca25205b38289b99635bca7322ec408" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Increment</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ae2363a1d5e37bd0c82e95173e378534f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>IncrementWithTotal</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a889e1d0c3597001efe0ec89d63705218" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Index</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a889e1d0c3597001efe0ec89d63705218" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Index</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a6e554af95d9d580b66f94d3b37f99568" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitFromAsciiFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ade8d11eedc5db1492c0893ac05469599" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitFromBinaryFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a0df683cd0dda825685b3f80629a4a079" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitFromBinaryMetaFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a81d71f119e4075192d676f172b8d5fd9" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9fc777a6611729b79c56fc8f1782c830" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>initializeCommComps</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a4b0ad0b1f46af2f8c2c0eccce8988d55" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitNRandomPerCell</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ad676fea7b20685d691d59c48031c2757" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitOnePerCell</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ad326acd6525e2fe2a3a7599b2328cc57" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitRandom</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a5acc25ad217c4480c4c38e19d6ef8cf1" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitRandomPerBox</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a4cf0720503d5b0d7147b4df5f0770157" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Interpolate</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ab6fe1354bebdec9053da22c56707dd4d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InterpolateSingleLevel</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a60a40e557410a932b8adc0275a5d019f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>IntVector</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ab2ef89d2bc69cbfa4ca8f26175d2ce1c" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>inverse_tags</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a3c0331bb4661f65348efaa7e59b6b9be" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>levelDirectoriesCreated</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1abbb2992e59999ae9c2866da0b90a7378" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>local_neighbor_sizes</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a36b78bd6fa71f934871cf953892ef4f8" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>local_neighbors</name></member>
      <member refid="classamrex_1_1ParticleContainer_1afd7e9ee344396bfc602657e79be8dbe4" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>locateParticle</name></member>
      <member refid="classamrex_1_1ParticleContainer_1acd7f0ad77ca7d383ba1c86815bc83191" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_bins</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1adc6fa317f2580d5b4eaf5e7e156694e8" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_code_array</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1adc56d3fa06a368656ba30775e6af57d5" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_code_offsets</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a6aafab3c8c1565c5457b08400f0c7984" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_grid_map</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a027a8bd9c7726edd5ab979a6ee716fa8" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_has_neighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a099f1647d78bdf8b431f96836f553df3" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_neighbor_list</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a68fedc2fd57b0e5efccdf65617f930ff" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_neighbor_mask_initialized</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a0f3bc83f8fdf1b3468248103a0000a49" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_neighbor_mask_ptr</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9c12404dedc750595ce4d68731d6fc29" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_num_neighbor_cells</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a48886f9e061ef86f4820d5ec9ced3d36" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_num_runtime_int</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ab9dcae9c6a09bc603f2044989d1ace74" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_num_runtime_real</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a3fe69cdcf81f6bad55051d89bdd62329" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_particles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a8b58bab555b7890689fb5e001c4cd197" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_runtime_comps_defined</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ad8787f8726e711a8d7a8e0dce3fb8624" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>mask_ptr</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a7f05cc5817ae609dd414fe58e9775b0b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>maxnextidPrePost</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a4f7f3ca7bf951e7ec6fce594005694da" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>MyParIter</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a1c40700b0202582a3102befdf84451ae" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NArrayInt</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a7f4ed428087667aa857bd631b97eb5e6" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NArrayReal</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a42b4110915286223007d92bbcf580d89" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>neighbor_copy_op</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a4057e1a1eaeca59b1c87cec0720343d6" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>neighbor_copy_plan</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a68d92607a1d43f215ae6af8ff8d3e3af" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>neighbor_list</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a704c1b5b30612c4f5a09378f0a63b221" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>neighbor_procs</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ae77c84d55fb9e147fc49a60bd44d42d6" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborCommMap</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aec6aa68d7cccf38bf8f2ece89e2e47ad" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborParticleContainer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a04cedff11be23a14eb5b47dfb818695f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborParticleContainer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a7ce8a903b6da41ecd366aaaa48d6ee9d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborParticleContainer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a2db2fa1d27368a0d8f2a783f215cd93b" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>neighbors</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a238a0adb9e543fa2e30a605ba1069e30" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>nOutFilesPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a61598ca5de5b385950c7d8b6b65e52a9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>nParticlesAtLevelPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ac432316e8be4314c8fed30fdbd9f906f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>nparticlesPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a0126c339846650d2b30069c08da01fce" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NStructInt</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ae71c7d35ab833b43cef08cf6aa9944b2" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NStructReal</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a5e23c21e31da601d9d25c4dceda100a5" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>num_int_comm_comps</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aebe05d83866295fa66cd195bfd2ccc44" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>num_mask_comps</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ae3a3bf13e3cafd9e356fb1c3ddb485cc" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>num_real_comm_comps</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9c0cf5742a0014b73afe38a75f02534e" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>num_snds</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a12fd544079a9f16e65a4de296b5c2f14" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumberOfParticlesAtLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a2829099beff606681731396ac7481f08" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumberOfParticlesInGrid</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a910c95ab40f4874412aee9ff9470ac92" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumIntComps</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aee9786e29cf06e42c740f713b2628e00" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>numLocalTilesAtLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ac0fe5d8afe82ea857da8657a1831916c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumRealComps</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a37db914362cb2c0215cea00016c7027d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumRuntimeIntComps</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ab242e953519e01e7216df57939e6cc52" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumRuntimeRealComps</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a8335f1a4f578b1c704a861c015161630" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>OK</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1af2dd70e123c4708809ddc29dc04124e9" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>operator&lt;&lt;</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a26e79db7607c3457fb992c06b32eeac9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>operator=</name></member>
      <member refid="classamrex_1_1ParticleContainer_1af554a71a38abcbf8dac83f89117f8c70" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>operator=</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a0c2a28aef7db24fbfccc53f46637a582" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>PairIndex</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aed980f0e76a528207023adb36734a107" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParConstIterType</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a81c80eb8543dfbd48bbccd92971ddb78" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParIterType</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a3eca54e3796067e16dfd915088236097" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>particle_size</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a9f1682afb446e3b9f21c666ed16f9c0d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer</name></member>
      <member refid="classamrex_1_1ParticleContainer_1accfab0ba16c9bdb72053c1473e0973fd" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a0e574f8367c158cd1acda01b3e28bd2f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a706e09d049ad79faab25e2a87cb442a5" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a3f6a321aac01f3dfef8995b7eb2ef9d6" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer</name></member>
      <member refid="classamrex_1_1ParticleContainer_1abf3eff1066923118f7660a405b1ef655" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ae64034c43f4202075731759389a07202" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aa454b3f1c4a133faaa1d28b9c8c254d8" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainerType</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a231bce1a3e6c62d162a50a43cacb26f6" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleInitData</name></member>
      <member refid="classamrex_1_1ParticleContainer_1acccb7e93f178fb8efd37ca0b43ac2013" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer_1af087e1154abe3c8c7aed9c7bc5e433b3" prot="private" virt="virtual"><scope>amrex::NeighborParticleContainer</scope><name>particlePostLocate</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a34d81cb6db969ef60c5440df7925c904" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleRealDescriptor</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ad83a1bbb70eea2673069ddfebf7bdf04" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticlesAt</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a847a9ee58a4022c53048f72df9579547" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticlesAt</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a3d7725f3c6eaf600859cf3817f15f814" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticlesAt</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aad4d250da468d5bf52c5ec23bf0b7a5f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticlesAt</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a88e27f1bb35a55e5fb6555057e1e25ac" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleTile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a71a0cf043ed329a849e9a33c5e1515fc" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleTileType</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ac5323a2b8fdbd75499432de90d1010f9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleType</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ade2385ed6d6005f38a31d3709b55fc4c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleVector</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a36651cd2e655c49f9d9c57c865223fa2" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>pdata_size</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a47f67390d8d8c825464f861df6359cb2" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>PeriodicShift</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a57f27a8f270653d1a738490e32dffe4b" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>pinned_rcv_buffer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a1f7704df7069ec0df0e84a649babf620" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>pinned_snd_buffer</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a3dede7806e59332e21b555b6c7a20bc9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>PrintCapacity</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aac13e1f1c324181ce01a8f50fe3897d9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>printNeighborList</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1abe13d10d672a558cf71e711fb838801e" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>rc</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a2f7e6baa209278afea162548a1425bf2" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>rcv_buffer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a6d6260836577412b1a3a17c7f8d09bc4" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>rcvs</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a75cec62d0988157c36c1cad225236a9d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ReadParticleRealData</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a5d523bd0038e70f787c268ebb638e8b2" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ReadParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a5d523bd0038e70f787c268ebb638e8b2" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ReadParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a83834de1d741f5be6f07814c570d122d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RealType</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a3228f60a39f554b66ca355f59baa0e28" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RealVector</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a1dadb49a29f4ad711fb369db84b2eb54" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Redistribute</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a608866ea3932dc93e6d1d0e629f0bf81" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RedistributeCPU</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a440139963a1346242883b0c779b6debc" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RedistributeGPU</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a098b72559cacc3ab8b2455a36137fd06" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RedistributeLocal</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aa20ae6b6bfa59d094d454159050c1d53" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RedistributeMPI</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1adbf6915c6877b366e0bda3e6f268eb30" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Regrid</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aee1b7c1708cd7d226db64b05d590d1fd" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Regrid</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a991c2e4f486d6cbb9cf74c326c1ad357" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Regrid</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a6e46853104a175c92f75bc90a3bbbc75" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RemoveParticlesAtLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a74b71d342d1e9deae8f7fe1e3bf41b90" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RemoveParticlesNotAtFinestLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer_1afd8b2a16216afff55b9bbb58886bb936" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>reserveData</name></member>
      <member refid="classamrex_1_1ParticleContainer_1abfae5d5f8542b20a84462bc91073d424" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Reset</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1af03a2d960e9c4975823cee72793a6410" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>resizeContainers</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a15788639879a1f6f0229511c337ed99f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>resizeData</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a471e8dc79b6f170e96c6022938ce21a1" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Restart</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ae8a0e12f918ea400911afe914aacad95" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Restart</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a5ba336738781f2d529bbb68a7f297e17" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>send_data</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1afcfe4393ad4cb1e555c5dff902c6901d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SendBuffer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9fd86ef6591da68553312d8cc6321034" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>setEnableInverse</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a63cbb0b5b6c81df9e4321148bc960f32" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>setIntCommComp</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a1805463ec66ddf9afc4f502fffa3db83" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetLevelDirectoriesCreated</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a5676109ef51af94b23778d2c2d277c68" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetParticleSize</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9c5eaf4a73e02b631f586b8d9eaa9b44" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>setRealCommComp</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ae2a1861e41d8404ce67129bb77b8ff79" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetUsePrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a37a5b5b9403a813c8a62dae4dc47ed7f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetUseUnlink</name></member>
      <member refid="classamrex_1_1ParticleContainer_1afe6dd326d79c3169d35d540f65f6d4f4" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ShrinkToFit</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a78049454550fa714d431a49586671628" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>snd_buffer</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aec513fd16f52bafcec98962f1a904d18" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SoA</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a2ab99fc115d419fb90bc42e69f60e7d6" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SortParticlesByBin</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a7af39cfe3a9d135aa624798a31762da7" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SortParticlesByCell</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a881b90e85491b4c0a7bb25425cc38641" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>sumNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a832b5eccef2ae5ed7bb83a92653b793e" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>sumNeighborsMPI</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a71a5c1448096fb5347f01ee164e70456" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>superparticle_size</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a963f1148018a102d01095f71d4a0e65b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>superParticleSize</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a1c6baf08ed7bdeb1d7a7acf30eefad52" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SuperParticleType</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ac807eaeb5b61de74bab2eddd98f763c6" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>TotalNumberOfParticles</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1add63262756c48b8f645f236c664067d0" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>updateNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a4fa257e580303d39d363c459981fc10b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>updateNeighborsGPU</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a21bd4a08b87b0afeeb0d8889c619c86c" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>use_mask</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a5379ae495140bc0763c163fac9eff177" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>usePrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ada3cfea616aaa17a688c5b26884ac6ad" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Where</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aca255b5b2ffba8c978d33aa087ef69de" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Where</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aab02fddae93b85695d6a0bb37691b5d0" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>wherePrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a9e5dfe5c973c51b24bb4260ffb5122fb" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>whichPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1aa844fae29584f23e9af9457a1b248b2b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WriteAsciiFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1adacc66ae3b2c6986650a1545249d939c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WriteBinaryParticleData</name></member>
      <member refid="classamrex_1_1ParticleContainer_1adacc66ae3b2c6986650a1545249d939c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WriteBinaryParticleData</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ab73a81949960df2b97ddffaec46491b7" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WriteParticleRealData</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ab53d95b3cc3725a44a23383da301cea2" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WriteParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a03f7777b10381a804dec6ebfd4d80539" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a1d348d13ab6055c04952389e33274fe9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ae6b5ae78b3e63e7e8437e4ac42126b2e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ac70a5d6f4a511c728e61c1c0e0f825eb" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1adfff4f76c09775c81000065854225590" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a4486888245ce148040c6ba2c063b9727" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1af6179b66026582beae80c33be1c9cac5" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a0cd1371544e14d13f7ec3055354b1ddd" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a10396d3ecdfb69e187092d6c5043fa2b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ac36c77d73a87b5523fb5b33e7edfeef0" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a1d348d13ab6055c04952389e33274fe9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ac70a5d6f4a511c728e61c1c0e0f825eb" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a4486888245ce148040c6ba2c063b9727" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1a0cd1371544e14d13f7ec3055354b1ddd" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ac36c77d73a87b5523fb5b33e7edfeef0" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer_1acfd42ea6e5478cb242aa1173ff3f2600" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFilePost</name></member>
      <member refid="classamrex_1_1ParticleContainer_1af2a7013064975d755dfca3ae72ab4504" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFilePre</name></member>
      <member refid="classamrex_1_1ParticleContainer_1ad814cd059efba265599f8d0e603a32fd" prot="public" virt="virtual"><scope>amrex::NeighborParticleContainer</scope><name>~ParticleContainer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
