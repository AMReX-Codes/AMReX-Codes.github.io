<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1NeighborParticleContainer" kind="class" language="C++" prot="public">
    <compoundname>amrex::NeighborParticleContainer</compoundname>
    <basecompoundref refid="classamrex_1_1ParticleContainer__impl" prot="public" virt="non-virtual">amrex::ParticleContainer_impl&lt; NStructReal, NStructInt, 0, 0 &gt;</basecompoundref>
    <includes refid="AMReX__NeighborParticles_8H" local="no">AMReX_NeighborParticles.H</includes>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1InverseCopyTag" prot="private">amrex::NeighborParticleContainer::InverseCopyTag</innerclass>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1MaskComps" prot="private">amrex::NeighborParticleContainer::MaskComps</innerclass>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCommTag" prot="private">amrex::NeighborParticleContainer::NeighborCommTag</innerclass>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" prot="private">amrex::NeighborParticleContainer::NeighborCopyTag</innerclass>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1NeighborIndexMap" prot="private">amrex::NeighborParticleContainer::NeighborIndexMap</innerclass>
    <innerclass refid="structamrex_1_1NeighborParticleContainer_1_1NeighborTask" prot="protected">amrex::NeighborParticleContainer::NeighborTask</innerclass>
    <templateparamlist>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NStructReal</declname>
        <defname>NStructReal</defname>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NStructInt</declname>
        <defname>NStructInt</defname>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NArrayReal</declname>
        <defname>NArrayReal</defname>
        <defval>0</defval>
      </param>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>NArrayInt</declname>
        <defname>NArrayInt</defname>
        <defval>0</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1aa454b3f1c4a133faaa1d28b9c8c254d8" prot="public" static="no">
        <type><ref refid="namespaceamrex_1a7c419a2c3aef781f1415b7ebd1f138d0" kindref="member">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer__impl_1aa7617bd59325bac568183d9bbcf32ee3" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a591fb654644bfe6f3b18e63547e1079f" kindref="member">NStructInt</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a32623939f5453d39bcfc26fef34972a8" kindref="member">NArrayReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a3063446dc305120704ec3f1670f301c1" kindref="member">NArrayInt</ref> &gt;</type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParticleContainerType =  ParticleContainer&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;</definition>
        <argsstring></argsstring>
        <name>ParticleContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="37" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1ab9497648313d317adc40bc7bebb5ca2d" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer__impl_1af9086e3760f0e461a8aa1cb5cbe2b608" kindref="member">ParticleContainerType::ParticleType</ref></type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParticleType =  typename ParticleContainerType::ParticleType</definition>
        <argsstring></argsstring>
        <name>ParticleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="38" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1a1c6baf08ed7bdeb1d7a7acf30eefad52" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1ParticleContainer__impl_1a12ac56edf0492d0b5d958ff028a6a537" kindref="member">ParticleContainerType::SuperParticleType</ref></type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::SuperParticleType =  typename ParticleContainerType::SuperParticleType</definition>
        <argsstring></argsstring>
        <name>SuperParticleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="39" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1a43409db639b332ea93f0ad257dc54bc7" prot="public" static="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; std::pair&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;, <ref refid="classamrex_1_1NeighborList" kindref="compound">amrex::NeighborList</ref>&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1ab9497648313d317adc40bc7bebb5ca2d" kindref="member">ParticleType</ref> &gt; &gt; &gt;</type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::NeighborListContainerType =  Vector&lt;std::map&lt;std::pair&lt;int, int&gt;, amrex::NeighborList&lt;ParticleType&gt; &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>NeighborListContainerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="40" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1a4f7f3ca7bf951e7ec6fce594005694da" prot="public" static="no">
        <type><ref refid="namespaceamrex_1a2b24a534dc7f3adbd4e23acd6a71e154" kindref="member">ParIter</ref>&lt; <ref refid="classamrex_1_1ParticleContainer__impl_1aa7617bd59325bac568183d9bbcf32ee3" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a591fb654644bfe6f3b18e63547e1079f" kindref="member">NStructInt</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a32623939f5453d39bcfc26fef34972a8" kindref="member">NArrayReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a3063446dc305120704ec3f1670f301c1" kindref="member">NArrayInt</ref> &gt;</type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::MyParIter =  ParIter&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;</definition>
        <argsstring></argsstring>
        <name>MyParIter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="195" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1a0c2a28aef7db24fbfccc53f46637a582" prot="public" static="no">
        <type>std::pair&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::PairIndex =  std::pair&lt;int, int&gt;</definition>
        <argsstring></argsstring>
        <name>PairIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="196" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1ae77c84d55fb9e147fc49a60bd44d42d6" prot="public" static="no">
        <type>std::map&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCommTag" kindref="compound">NeighborCommTag</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; char &gt; &gt;</type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::NeighborCommMap =  std::map&lt;NeighborCommTag, Vector&lt;char&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>NeighborCommMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="197" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1a41c79512efbfbf1a4145948c6a680d5c" prot="public" static="no">
        <type>typename <ref refid="namespaceamrex_1a7c419a2c3aef781f1415b7ebd1f138d0" kindref="member">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer__impl_1aa7617bd59325bac568183d9bbcf32ee3" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a591fb654644bfe6f3b18e63547e1079f" kindref="member">NStructInt</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a32623939f5453d39bcfc26fef34972a8" kindref="member">NArrayReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a3063446dc305120704ec3f1670f301c1" kindref="member">NArrayInt</ref> &gt;::<ref refid="classamrex_1_1NeighborParticleContainer_1a41c79512efbfbf1a4145948c6a680d5c" kindref="member">AoS</ref></type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::AoS =  typename ParticleContainer&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;::AoS</definition>
        <argsstring></argsstring>
        <name>AoS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="198" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1ade2385ed6d6005f38a31d3709b55fc4c" prot="public" static="no">
        <type>typename <ref refid="namespaceamrex_1a7c419a2c3aef781f1415b7ebd1f138d0" kindref="member">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer__impl_1aa7617bd59325bac568183d9bbcf32ee3" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a591fb654644bfe6f3b18e63547e1079f" kindref="member">NStructInt</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a32623939f5453d39bcfc26fef34972a8" kindref="member">NArrayReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a3063446dc305120704ec3f1670f301c1" kindref="member">NArrayInt</ref> &gt;::<ref refid="classamrex_1_1NeighborParticleContainer_1ade2385ed6d6005f38a31d3709b55fc4c" kindref="member">ParticleVector</ref></type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParticleVector =  typename ParticleContainer&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;::ParticleVector</definition>
        <argsstring></argsstring>
        <name>ParticleVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="199" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1a88e27f1bb35a55e5fb6555057e1e25ac" prot="public" static="no">
        <type>typename <ref refid="namespaceamrex_1a7c419a2c3aef781f1415b7ebd1f138d0" kindref="member">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer__impl_1aa7617bd59325bac568183d9bbcf32ee3" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a591fb654644bfe6f3b18e63547e1079f" kindref="member">NStructInt</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a32623939f5453d39bcfc26fef34972a8" kindref="member">NArrayReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a3063446dc305120704ec3f1670f301c1" kindref="member">NArrayInt</ref> &gt;::<ref refid="classamrex_1_1ParticleContainer__impl_1aad727cb5c9b392a0ec2c7bbabdf22576" kindref="member">ParticleTileType</ref></type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ParticleTile =  typename ParticleContainer&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;::ParticleTileType</definition>
        <argsstring></argsstring>
        <name>ParticleTile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="200" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1NeighborParticleContainer_1a60a40e557410a932b8adc0275a5d019f" prot="public" static="no">
        <type>typename <ref refid="namespaceamrex_1a7c419a2c3aef781f1415b7ebd1f138d0" kindref="member">ParticleContainer</ref>&lt; <ref refid="classamrex_1_1ParticleContainer__impl_1aa7617bd59325bac568183d9bbcf32ee3" kindref="member">NStructReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a591fb654644bfe6f3b18e63547e1079f" kindref="member">NStructInt</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a32623939f5453d39bcfc26fef34972a8" kindref="member">NArrayReal</ref>, <ref refid="classamrex_1_1ParticleContainer__impl_1a3063446dc305120704ec3f1670f301c1" kindref="member">NArrayInt</ref> &gt;::<ref refid="classamrex_1_1NeighborParticleContainer_1a60a40e557410a932b8adc0275a5d019f" kindref="member">IntVector</ref></type>
        <definition>using amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::IntVector =  typename ParticleContainer&lt;NStructReal, NStructInt, NArrayReal, NArrayInt&gt;::IntVector</definition>
        <argsstring></argsstring>
        <name>IntVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="201" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="201" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1ab2ef89d2bc69cbfa4ca8f26175d2ce1c" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1a0c2a28aef7db24fbfccc53f46637a582" kindref="member">PairIndex</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1InverseCopyTag" kindref="compound">InverseCopyTag</ref> &gt; &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;PairIndex, Vector&lt;InverseCopyTag&gt; &gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::inverse_tags</definition>
        <argsstring></argsstring>
        <name>inverse_tags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="401" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a2db2fa1d27368a0d8f2a783f215cd93b" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1a0c2a28aef7db24fbfccc53f46637a582" kindref="member">PairIndex</ref>, <ref refid="classamrex_1_1NeighborParticleContainer_1a88e27f1bb35a55e5fb6555057e1e25ac" kindref="member">ParticleTile</ref> &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;PairIndex, ParticleTile&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::neighbors</definition>
        <argsstring></argsstring>
        <name>neighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="402" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a68d92607a1d43f215ae6af8ff8d3e3af" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1a0c2a28aef7db24fbfccc53f46637a582" kindref="member">PairIndex</ref>, <ref refid="classamrex_1_1NeighborParticleContainer_1a60a40e557410a932b8adc0275a5d019f" kindref="member">IntVector</ref> &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;PairIndex, IntVector&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::neighbor_list</definition>
        <argsstring></argsstring>
        <name>neighbor_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="403" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a0bc1ebc16494317aa1ee91983ac667e4" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::cdata_size</definition>
        <argsstring></argsstring>
        <name>cdata_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="407" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a9c12404dedc750595ce4d68731d6fc29" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_num_neighbor_cells</definition>
        <argsstring></argsstring>
        <name>m_num_neighbor_cells</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="408" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a36b78bd6fa71f934871cf953892ef4f8" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCommTag" kindref="compound">NeighborCommTag</ref> &gt;</type>
        <definition>Vector&lt;NeighborCommTag&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::local_neighbors</definition>
        <argsstring></argsstring>
        <name>local_neighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="409" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1ad8787f8726e711a8d7a8e0dce3fb8624" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::unique_ptr&lt; <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> &gt; &gt;</type>
        <definition>Vector&lt;std::unique_ptr&lt;iMultiFab&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::mask_ptr</definition>
        <argsstring></argsstring>
        <name>mask_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="410" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a82a5acd18d78404acab9c6f310411369" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1a0c2a28aef7db24fbfccc53f46637a582" kindref="member">PairIndex</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" kindref="compound">NeighborCopyTag</ref> &gt; &gt; &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;PairIndex, Vector&lt;Vector&lt;NeighborCopyTag&gt; &gt; &gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::buffer_tag_cache</definition>
        <argsstring></argsstring>
        <name>buffer_tag_cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="412" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1abbb2992e59999ae9c2866da0b90a7378" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; <ref refid="classamrex_1_1NeighborParticleContainer_1a0c2a28aef7db24fbfccc53f46637a582" kindref="member">PairIndex</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;PairIndex, int&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::local_neighbor_sizes</definition>
        <argsstring></argsstring>
        <name>local_neighbor_sizes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="413" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a704c1b5b30612c4f5a09378f0a63b221" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::neighbor_procs</definition>
        <argsstring></argsstring>
        <name>neighbor_procs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>each proc knows how many sends it will do, and how many bytes it will rcv from each other proc. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="417" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a6d6260836577412b1a3a17c7f8d09bc4" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; Long &gt;</type>
        <definition>Vector&lt;Long&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::rcvs</definition>
        <argsstring></argsstring>
        <name>rcvs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="418" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a9c0cf5742a0014b73afe38a75f02534e" prot="protected" static="no" mutable="no">
        <type>Long</type>
        <definition>Long amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::num_snds</definition>
        <argsstring></argsstring>
        <name>num_snds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="419" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a5ba336738781f2d529bbb68a7f297e17" prot="protected" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; char &gt; &gt;</type>
        <definition>std::map&lt;int, Vector&lt;char&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::send_data</definition>
        <argsstring></argsstring>
        <name>send_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="420" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1abaca3cff5c84aa26d0e6c4a454af00cd" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ghost_real_comp</definition>
        <argsstring></argsstring>
        <name>ghost_real_comp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="422" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a686b95f083fdf17811b9933e189326db" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
        <definition>Vector&lt;int&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::ghost_int_comp</definition>
        <argsstring></argsstring>
        <name>ghost_int_comp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="423" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a68fedc2fd57b0e5efccdf65617f930ff" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_neighbor_mask_initialized</definition>
        <argsstring></argsstring>
        <name>m_neighbor_mask_initialized</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="455" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a0f3bc83f8fdf1b3468248103a0000a49" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classamrex_1_1iMultiFab" kindref="compound">amrex::iMultiFab</ref> &gt;</type>
        <definition>std::unique_ptr&lt;amrex::iMultiFab&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_neighbor_mask_ptr</definition>
        <argsstring></argsstring>
        <name>m_neighbor_mask_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="456" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a6aafab3c8c1565c5457b08400f0c7984" prot="protected" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, std::vector&lt; std::vector&lt; <ref refid="structamrex_1_1NeighborCode" kindref="compound">NeighborCode</ref> &gt; &gt; &gt;</type>
        <definition>std::map&lt;int, std::vector&lt;std::vector&lt;NeighborCode&gt; &gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_grid_map</definition>
        <argsstring></argsstring>
        <name>m_grid_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="458" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1adc6fa317f2580d5b4eaf5e7e156694e8" prot="protected" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">amrex::Gpu::DeviceVector</ref>&lt; <ref refid="structamrex_1_1NeighborCode" kindref="compound">NeighborCode</ref> &gt; &gt;</type>
        <definition>std::map&lt;int, amrex::Gpu::DeviceVector&lt;NeighborCode&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_code_array</definition>
        <argsstring></argsstring>
        <name>m_code_array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="461" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="461" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a8cec5f0f49ca18e99496c3530716772b" prot="protected" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">amrex::Gpu::DeviceVector</ref>&lt; <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &gt; &gt;</type>
        <definition>std::map&lt;int, amrex::Gpu::DeviceVector&lt;Box&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_isec_boxes</definition>
        <argsstring></argsstring>
        <name>m_isec_boxes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="463" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1adc56d3fa06a368656ba30775e6af57d5" prot="protected" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">amrex::Gpu::DeviceVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt;</type>
        <definition>std::map&lt;int, amrex::Gpu::DeviceVector&lt;int&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_code_offsets</definition>
        <argsstring></argsstring>
        <name>m_code_offsets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="464" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a42b4110915286223007d92bbcf580d89" prot="protected" static="no" mutable="no">
        <type><ref refid="structamrex_1_1ParticleCopyOp" kindref="compound">ParticleCopyOp</ref></type>
        <definition>ParticleCopyOp amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::neighbor_copy_op</definition>
        <argsstring></argsstring>
        <name>neighbor_copy_op</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="466" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a4057e1a1eaeca59b1c87cec0720343d6" prot="protected" static="no" mutable="no">
        <type><ref refid="structamrex_1_1ParticleCopyPlan" kindref="compound">ParticleCopyPlan</ref></type>
        <definition>ParticleCopyPlan amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::neighbor_copy_plan</definition>
        <argsstring></argsstring>
        <name>neighbor_copy_plan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="467" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a8fd0536bf961bc912c1a380d93b077dd" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1PODVector" kindref="compound">amrex::PODVector</ref>&lt; char, <ref refid="classamrex_1_1PolymorphicArenaAllocator" kindref="compound">PolymorphicArenaAllocator</ref>&lt; char &gt; &gt;</type>
        <definition>amrex::PODVector&lt;char, PolymorphicArenaAllocator&lt;char&gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::snd_buffer</definition>
        <argsstring></argsstring>
        <name>snd_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="469" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="469" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a2f7e6baa209278afea162548a1425bf2" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">amrex::Gpu::DeviceVector</ref>&lt; char &gt;</type>
        <definition>amrex::Gpu::DeviceVector&lt;char&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::rcv_buffer</definition>
        <argsstring></argsstring>
        <name>rcv_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="470" column="30" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a1f7704df7069ec0df0e84a649babf620" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1a6e76d121ad2e1030d86ccbc9a47f6fde" kindref="member">Gpu::PinnedVector</ref>&lt; char &gt;</type>
        <definition>Gpu::PinnedVector&lt;char&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::pinned_snd_buffer</definition>
        <argsstring></argsstring>
        <name>pinned_snd_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="472" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a57f27a8f270653d1a738490e32dffe4b" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1_1Gpu_1a6e76d121ad2e1030d86ccbc9a47f6fde" kindref="member">Gpu::PinnedVector</ref>&lt; char &gt;</type>
        <definition>Gpu::PinnedVector&lt;char&gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::pinned_rcv_buffer</definition>
        <argsstring></argsstring>
        <name>pinned_rcv_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="473" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a739c2408e1c55081d20e737f6bf7ec8f" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1NeighborParticleContainer_1a43409db639b332ea93f0ad257dc54bc7" kindref="member">NeighborListContainerType</ref></type>
        <definition>NeighborListContainerType amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_neighbor_list</definition>
        <argsstring></argsstring>
        <name>m_neighbor_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="476" column="31" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a71350435dff09e0768bdc74d0f943655" prot="protected" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; std::pair&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;, <ref refid="namespaceamrex_1_1Gpu_1a99e1f048890efc1c275606cb9bdc41c7" kindref="member">amrex::Gpu::DeviceVector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &gt; &gt;</type>
        <definition>Vector&lt;std::map&lt;std::pair&lt;int, int&gt;, amrex::Gpu::DeviceVector&lt;int&gt; &gt; &gt; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_boundary_particle_ids</definition>
        <argsstring></argsstring>
        <name>m_boundary_particle_ids</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="478" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a027a8bd9c7726edd5ab979a6ee716fa8" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::m_has_neighbors</definition>
        <argsstring></argsstring>
        <name>m_has_neighbors</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="482" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="482" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a94f1d1574b0fb4f340d088480ee5fbc1" prot="protected" static="yes" constexpr="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::pdata_size</definition>
        <argsstring></argsstring>
        <name>pdata_size</name>
        <initializer>= sizeof(<ref refid="classamrex_1_1NeighborParticleContainer_1ab9497648313d317adc40bc7bebb5ca2d" kindref="member">ParticleType</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="404" column="29" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1aebe05d83866295fa66cd195bfd2ccc44" prot="protected" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>constexpr int amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::num_mask_comps</definition>
        <argsstring></argsstring>
        <name>num_mask_comps</name>
        <initializer>= 3</initializer>
        <briefdescription>
<para>grid, tile, level </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="406" column="26" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a21bd4a08b87b0afeeb0d8889c619c86c" prot="protected" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool NeighborParticleContainer::use_mask</definition>
        <argsstring></argsstring>
        <name>use_mask</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="425" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1NeighborParticleContainer_1a253931bb13b740bcdf8da45fe68a4591" prot="protected" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool NeighborParticleContainer::enable_inverse</definition>
        <argsstring></argsstring>
        <name>enable_inverse</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="427" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="427" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classamrex_1_1NeighborParticleContainer_1af2dd70e123c4708809ddc29dc04124e9" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const InverseCopyTag &amp;tag)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1NeighborParticleContainer_1_1InverseCopyTag" kindref="compound">InverseCopyTag</ref> &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="143" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="143" bodyend="150"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1aec6aa68d7cccf38bf8f2ece89e2e47ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeighborParticleContainer::NeighborParticleContainer</definition>
        <argsstring>(ParGDBBase *gdb, int ncells)</argsstring>
        <name>NeighborParticleContainer</name>
        <param>
          <type><ref refid="classamrex_1_1ParGDBBase" kindref="compound">ParGDBBase</ref> *</type>
          <declname>gdb</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncells</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="203" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="10" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a85456475575ab6d83ef479080e989a74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeighborParticleContainer::NeighborParticleContainer</definition>
        <argsstring>(const Geometry &amp;geom, const DistributionMapping &amp;dmap, const BoxArray &amp;ba, int nneighbor)</argsstring>
        <name>NeighborParticleContainer</name>
        <param>
          <type>const <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nneighbor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="205" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="19" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a186b8b589b18098582292879a91ccf87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeighborParticleContainer::NeighborParticleContainer</definition>
        <argsstring>(const Vector&lt; Geometry &gt; &amp;geom, const Vector&lt; DistributionMapping &gt; &amp;dmap, const Vector&lt; BoxArray &gt; &amp;ba, const Vector&lt; int &gt; &amp;rr, int nneighbor)</argsstring>
        <name>NeighborParticleContainer</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> &gt; &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &gt; &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &gt; &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt; &amp;</type>
          <declname>rr</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nneighbor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="210" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="31" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a4d1fb81f019aa99065cb59c879fd7e7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::~NeighborParticleContainer</definition>
        <argsstring>() override=default</argsstring>
        <name>~NeighborParticleContainer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="216" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1adff18120eea0cf9a843f2779fa7afb80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::NeighborParticleContainer</definition>
        <argsstring>(const NeighborParticleContainer &amp;)=delete</argsstring>
        <name>NeighborParticleContainer</name>
        <param>
          <type>const <ref refid="classamrex_1_1NeighborParticleContainer" kindref="compound">NeighborParticleContainer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="218" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a442d7b34e588606cf0ddb1c5184c3af6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1NeighborParticleContainer" kindref="compound">NeighborParticleContainer</ref> &amp;</type>
        <definition>NeighborParticleContainer&amp; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::operator=</definition>
        <argsstring>(const NeighborParticleContainer &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classamrex_1_1NeighborParticleContainer" kindref="compound">NeighborParticleContainer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="219" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a8e16762fd9648d7b623cff439d75e888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::NeighborParticleContainer</definition>
        <argsstring>(NeighborParticleContainer &amp;&amp;)=default</argsstring>
        <name>NeighborParticleContainer</name>
        <param>
          <type><ref refid="classamrex_1_1NeighborParticleContainer" kindref="compound">NeighborParticleContainer</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="221" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1af187b3c1e4f0d96810f5ea4cdb6fec43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1NeighborParticleContainer" kindref="compound">NeighborParticleContainer</ref> &amp;</type>
        <definition>NeighborParticleContainer&amp; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::operator=</definition>
        <argsstring>(NeighborParticleContainer &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classamrex_1_1NeighborParticleContainer" kindref="compound">NeighborParticleContainer</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="222" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1adbf6915c6877b366e0bda3e6f268eb30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::Regrid</definition>
        <argsstring>(const DistributionMapping &amp;dmap, const BoxArray &amp;ba)</argsstring>
        <name>Regrid</name>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>ba</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Regrid functions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="227" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="93" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a361bea35ab3f956932339ef80930e405" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::Regrid</definition>
        <argsstring>(const DistributionMapping &amp;dmap, const BoxArray &amp;ba, int lev)</argsstring>
        <name>Regrid</name>
        <param>
          <type>const <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &amp;</type>
          <declname>ba</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="228" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="104" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a991c2e4f486d6cbb9cf74c326c1ad357" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::Regrid</definition>
        <argsstring>(const Vector&lt; DistributionMapping &gt; &amp;dmap, const Vector&lt; BoxArray &gt; &amp;ba)</argsstring>
        <name>Regrid</name>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> &gt; &amp;</type>
          <declname>dmap</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> &gt; &amp;</type>
          <declname>ba</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="229" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="114" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a2c1bf28f2552627e93d1587e977dd22a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::fillNeighbors</definition>
        <argsstring>()</argsstring>
        <name>fillNeighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This fills the neighbor buffers for each tile with the proper data </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="234" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="637" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a881b90e85491b4c0a7bb25425cc38641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::sumNeighbors</definition>
        <argsstring>(int real_start_comp, int real_num_comp, int int_start_comp, int int_num_comp)</argsstring>
        <name>sumNeighbors</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>real_start_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>real_num_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>int_start_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>int_num_comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This does an &quot;inverse&quot; fillNeighbors operation, meaning that it adds data from the ghost particles to the corresponding real ones. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="240" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="649" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a6aeacb4e33f4b1946b8b7a5434a77f6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::updateNeighbors</definition>
        <argsstring>(bool boundary_neighbors_only=false)</argsstring>
        <name>updateNeighbors</name>
        <param>
          <type>bool</type>
          <declname>boundary_neighbors_only</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This updates the neighbors with their current particle data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="246" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="662" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a287e510b67bfbb6bd4d500e5281e3329" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::clearNeighbors</definition>
        <argsstring>()</argsstring>
        <name>clearNeighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Each tile clears its neighbors, freeing the memory </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="251" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="679" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a6fb1047fc993b216cf8b7976cb589c45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CheckPair</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::buildNeighborList</definition>
        <argsstring>(CheckPair const &amp;check_pair, bool sort=false)</argsstring>
        <name>buildNeighborList</name>
        <param>
          <type>CheckPair const &amp;</type>
          <declname>check_pair</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sort</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a Neighbor List for each tile </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="257" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a8478ecacf0444af88ada9f65324c8c91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CheckPair</type>
          </param>
          <param>
            <type>class OtherPCType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::buildNeighborList</definition>
        <argsstring>(CheckPair const &amp;check_pair, OtherPCType &amp;other, Vector&lt; std::map&lt; std::pair&lt; int, int &gt;, amrex::NeighborList&lt; typename OtherPCType::ParticleType &gt; &gt; &gt; &amp;neighbor_lists, bool sort=false)</argsstring>
        <name>buildNeighborList</name>
        <param>
          <type>CheckPair const &amp;</type>
          <declname>check_pair</declname>
        </param>
        <param>
          <type>OtherPCType &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; std::pair&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;, <ref refid="classamrex_1_1NeighborList" kindref="compound">amrex::NeighborList</ref>&lt; typename OtherPCType::ParticleType &gt; &gt; &gt; &amp;</type>
          <declname>neighbor_lists</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sort</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a Neighbor List for each tile </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="263" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1ad443f88f36ee577341e3ffcffda8a539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CheckPair</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::buildNeighborList</definition>
        <argsstring>(CheckPair const &amp;check_pair, int type_ind, int *ref_ratio, int num_bin_types=1, bool sort=false)</argsstring>
        <name>buildNeighborList</name>
        <param>
          <type>CheckPair const &amp;</type>
          <declname>check_pair</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>type_ind</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>ref_ratio</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>num_bin_types</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>sort</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build a Neighbor List for each tile </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="271" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a12039aca5af54df4ee587db2ea95c857" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CheckPair</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::selectActualNeighbors</definition>
        <argsstring>(CheckPair const &amp;check_pair, int num_cells=1)</argsstring>
        <name>selectActualNeighbors</name>
        <param>
          <type>CheckPair const &amp;</type>
          <declname>check_pair</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>num_cells</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="275" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1aac13e1f1c324181ce01a8f50fe3897d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::printNeighborList</definition>
        <argsstring>()</argsstring>
        <name>printNeighborList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="277" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="1093" bodyend="1107"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a9c5eaf4a73e02b631f586b8d9eaa9b44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::setRealCommComp</definition>
        <argsstring>(int i, bool value)</argsstring>
        <name>setRealCommComp</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="279" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a63cbb0b5b6c81df9e4321148bc960f32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::setIntCommComp</definition>
        <argsstring>(int i, bool value)</argsstring>
        <name>setIntCommComp</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="280" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a662f2650bebba90cebfd2f314bce4585" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1NeighborParticleContainer_1a88e27f1bb35a55e5fb6555057e1e25ac" kindref="member">ParticleTile</ref> &amp;</type>
        <definition>ParticleTile&amp; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::GetNeighbors</definition>
        <argsstring>(int lev, int grid, int tile)</argsstring>
        <name>GetNeighbors</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="282" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="282" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a0d80b42fa8c4fa92b49b26301ea8e205" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classamrex_1_1NeighborParticleContainer_1a88e27f1bb35a55e5fb6555057e1e25ac" kindref="member">ParticleTile</ref> &amp;</type>
        <definition>const ParticleTile&amp; amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::GetNeighbors</definition>
        <argsstring>(int lev, int grid, int tile) const</argsstring>
        <name>GetNeighbors</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>grid</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="287" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="287" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a394a5717e0621cf4e2250d432950cd8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_same_v&lt; T, bool &gt;, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::AddRealComp</definition>
        <argsstring>(T communicate=true)</argsstring>
        <name>AddRealComp</name>
        <param>
          <type>T</type>
          <declname>communicate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="294" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="294" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a495d805bcf68681c718d5316bac80c07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_same_v&lt; T, bool &gt;, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::AddIntComp</definition>
        <argsstring>(T communicate=true)</argsstring>
        <name>AddIntComp</name>
        <param>
          <type>T</type>
          <declname>communicate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="304" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="304" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a1dadb49a29f4ad711fb369db84b2eb54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::Redistribute</definition>
        <argsstring>(int lev_min=0, int lev_max=-1, int nGrow=0, int local=0)</argsstring>
        <name>Redistribute</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev_min</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev_max</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nGrow</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>local</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="312" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="312" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a098b72559cacc3ab8b2455a36137fd06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::RedistributeLocal</definition>
        <argsstring>()</argsstring>
        <name>RedistributeLocal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="319" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="319" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a4dbc10fb057262215b756a2b4289b33c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::fillNeighborsGPU</definition>
        <argsstring>()</argsstring>
        <name>fillNeighborsGPU</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="330" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesGPUImpl.H" bodystart="225" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a0f70a3eeb349ea4d713b581c5beebc82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::updateNeighborsGPU</definition>
        <argsstring>(bool boundary_neighbors_only=false)</argsstring>
        <name>updateNeighborsGPU</name>
        <param>
          <type>bool</type>
          <declname>boundary_neighbors_only</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="331" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesGPUImpl.H" bodystart="245" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1acfd5f04cd8c4ccc1624a2800908ab823" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::clearNeighborsGPU</definition>
        <argsstring>()</argsstring>
        <name>clearNeighborsGPU</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="332" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesGPUImpl.H" bodystart="295" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a9fd86ef6591da68553312d8cc6321034" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::setEnableInverse</definition>
        <argsstring>(bool flag)</argsstring>
        <name>setEnableInverse</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="341" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="341" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a10946f0902af75ab296818655fa6b388" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::enableInverse</definition>
        <argsstring>()</argsstring>
        <name>enableInverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="347" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="347" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1ad01b79b58df596f16982763a74e34d70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::buildNeighborMask</definition>
        <argsstring>()</argsstring>
        <name>buildNeighborMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="349" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesGPUImpl.H" bodystart="51" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a429842d84ae93439634d8953d71b63bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::buildNeighborCopyOp</definition>
        <argsstring>(bool use_boundary_neighbor=false)</argsstring>
        <name>buildNeighborCopyOp</name>
        <param>
          <type>bool</type>
          <declname>use_boundary_neighbor</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="351" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesGPUImpl.H" bodystart="120" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1aad163ac3bbb3deda0b715ce7e97f6de0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CheckPair</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::buildNeighborList</definition>
        <argsstring>(CheckPair const &amp;check_pair, bool)</argsstring>
        <name>buildNeighborList</name>
        <param>
          <type>CheckPair const &amp;</type>
          <declname>check_pair</declname>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" line="692" column="27" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="693" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1abb69f08cf3677fa93e6b3793e1ef3403" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CheckPair</type>
          </param>
          <param>
            <type>class OtherPCType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::buildNeighborList</definition>
        <argsstring>(CheckPair const &amp;check_pair, OtherPCType &amp;other, Vector&lt; std::map&lt; std::pair&lt; int, int &gt;, amrex::NeighborList&lt; typename OtherPCType::ParticleType &gt; &gt; &gt; &amp;neighbor_lists, bool)</argsstring>
        <name>buildNeighborList</name>
        <param>
          <type>CheckPair const &amp;</type>
          <declname>check_pair</declname>
        </param>
        <param>
          <type>OtherPCType &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::map&lt; std::pair&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> &gt;, <ref refid="classamrex_1_1NeighborList" kindref="compound">amrex::NeighborList</ref>&lt; typename OtherPCType::ParticleType &gt; &gt; &gt; &amp;</type>
          <declname>neighbor_lists</declname>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" line="777" column="27" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="778" bodyend="841"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1ac168ec3279fb7f55564901b2f98dfeeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CheckPair</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::buildNeighborList</definition>
        <argsstring>(CheckPair const &amp;check_pair, int type_ind, int *ref_ratio, int num_bin_types, bool)</argsstring>
        <name>buildNeighborList</name>
        <param>
          <type>CheckPair const &amp;</type>
          <declname>check_pair</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>type_ind</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref> *</type>
          <declname>ref_ratio</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>num_bin_types</declname>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" line="846" column="27" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="847" bodyend="977"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a29c7b740a3afe04a5fb93281fc0d75ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CheckPair</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::selectActualNeighbors</definition>
        <argsstring>(CheckPair const &amp;check_pair, int num_cells)</argsstring>
        <name>selectActualNeighbors</name>
        <param>
          <type>CheckPair const &amp;</type>
          <declname>check_pair</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>num_cells</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" line="982" column="27" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="983" bodyend="1089"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a497db0eca21eb270f545e60f034aeb6a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::cacheNeighborInfo</definition>
        <argsstring>()</argsstring>
        <name>cacheNeighborInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="355" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="312" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1af79112d043b45868fb00cf720d61b0a5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::BuildMasks</definition>
        <argsstring>()</argsstring>
        <name>BuildMasks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This builds the internal mask data structure used for looking up neighbors </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="360" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="151" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a1be3305131595afe235881caad842d14" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool NeighborParticleContainer::areMasksValid</definition>
        <argsstring>()</argsstring>
        <name>areMasksValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Are the masks computed by the above function still valid? </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="365" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="127" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a01f3711526aa5aff0183fc0eeee6a866" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::GetNeighborCommTags</definition>
        <argsstring>()</argsstring>
        <name>GetNeighborCommTags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="367" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="190" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1ac1810a3351cc7c3242d98c7ddf7f5837" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::GetCommTagsBox</definition>
        <argsstring>(Vector&lt; NeighborCommTag &gt; &amp;tags, int lev, const Box &amp;in_box)</argsstring>
        <name>GetCommTagsBox</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCommTag" kindref="compound">NeighborCommTag</ref> &gt; &amp;</type>
          <declname>tags</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1Box" kindref="compound">Box</ref> &amp;</type>
          <declname>in_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="369" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="265" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a60a710dcdfaaa6887b5b865fb1820ba7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::resizeContainers</definition>
        <argsstring>(int num_levels)</argsstring>
        <name>resizeContainers</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>num_levels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="371" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="1112" bodyend="1129"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a9fc777a6611729b79c56fc8f1782c830" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::initializeCommComps</definition>
        <argsstring>()</argsstring>
        <name>initializeCommComps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="373" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="45" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a9fea3b7765226c9483a81c772e3cfcd0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::calcCommSize</definition>
        <argsstring>()</argsstring>
        <name>calcCommSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="375" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="74" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1af3b5f685680bc88ad15c0f2cd5ee44c8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::fillNeighborsMPI</definition>
        <argsstring>(bool reuse_rcv_counts)</argsstring>
        <name>fillNeighborsMPI</name>
        <param>
          <type>bool</type>
          <declname>reuse_rcv_counts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform the MPI communication necessary to fill neighbor buffers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="380" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesCPUImpl.H" bodystart="507" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a832b5eccef2ae5ed7bb83a92653b793e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::sumNeighborsMPI</definition>
        <argsstring>(std::map&lt; int, Vector&lt; char &gt; &gt; &amp;not_ours, int real_start_comp, int real_num_comp, int int_start_comp, int int_num_comp)</argsstring>
        <name>sumNeighborsMPI</name>
        <param>
          <type>std::map&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; char &gt; &gt; &amp;</type>
          <declname>not_ours</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>real_start_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>real_num_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>int_start_comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>int_num_comp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="382" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesCPUImpl.H" bodystart="108" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a78a0bf763811ffa755a8a562f2cdede1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::getRcvCountsMPI</definition>
        <argsstring>()</argsstring>
        <name>getRcvCountsMPI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform handshake to figure out how many bytes each proc should receive </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="389" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesCPUImpl.H" bodystart="446" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a991d920470b2aead6fd0f8f19a26b7c9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::getNeighborTags</definition>
        <argsstring>(Vector&lt; NeighborCopyTag &gt; &amp;tags, const ParticleType &amp;p, int nGrow, const NeighborCopyTag &amp;src_tag, const MyParIter &amp;pti)</argsstring>
        <name>getNeighborTags</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" kindref="compound">NeighborCopyTag</ref> &gt; &amp;</type>
          <declname>tags</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1NeighborParticleContainer_1ab9497648313d317adc40bc7bebb5ca2d" kindref="member">ParticleType</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>nGrow</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" kindref="compound">NeighborCopyTag</ref> &amp;</type>
          <declname>src_tag</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1NeighborParticleContainer_1a4f7f3ca7bf951e7ec6fce594005694da" kindref="member">MyParIter</ref> &amp;</type>
          <declname>pti</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="391" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="535" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a98b93307f7df6a29e8e1b84bfdcda458" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeighborParticleContainer::getNeighborTags</definition>
        <argsstring>(Vector&lt; NeighborCopyTag &gt; &amp;tags, const ParticleType &amp;p, const IntVect &amp;nGrow, const NeighborCopyTag &amp;src_tag, const MyParIter &amp;pti)</argsstring>
        <name>getNeighborTags</name>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" kindref="compound">NeighborCopyTag</ref> &gt; &amp;</type>
          <declname>tags</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1NeighborParticleContainer_1ab9497648313d317adc40bc7bebb5ca2d" kindref="member">ParticleType</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> &amp;</type>
          <declname>nGrow</declname>
        </param>
        <param>
          <type>const <ref refid="structamrex_1_1NeighborParticleContainer_1_1NeighborCopyTag" kindref="compound">NeighborCopyTag</ref> &amp;</type>
          <declname>src_tag</declname>
        </param>
        <param>
          <type>const <ref refid="classamrex_1_1NeighborParticleContainer_1a4f7f3ca7bf951e7ec6fce594005694da" kindref="member">MyParIter</ref> &amp;</type>
          <declname>pti</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="395" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="544" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1af207e3796662b7069d55d479a5de23df" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></type>
        <definition>IntVect NeighborParticleContainer::computeRefFac</definition>
        <argsstring>(int src_lev, int lev)</argsstring>
        <name>computeRefFac</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>src_lev</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>lev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="399" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticlesI.H" bodystart="246" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1NeighborParticleContainer_1a5bde7ea76f99ed274bef3626dc3f833b" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;::hasNeighbors</definition>
        <argsstring>() const</argsstring>
        <name>hasNeighbors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="480" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="480" bodyend="480"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This is a container for particles that undergo short-range interactions. In addition to the normal ParticleContainer methods, each tile contains a &quot;neighbor
buffer&quot; that is filled with data corresponding to the particles within 1 neighbor cell of the tile boundaries. This allows the N^2 search over each pair of particles to proceed locally, instead of over the entire domain.</para>
<para>Note that neighbor particles are different than &quot;ghost&quot; particles, which are used in AMR subcycling to keep track of coarse level particles that may move on to fine levels during a fine level time step. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>amrex::ParticleContainerBase</label>
        <link refid="classamrex_1_1ParticleContainerBase"/>
      </node>
      <node id="1">
        <label>amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;</label>
        <link refid="classamrex_1_1NeighborParticleContainer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>ParticleContainer&lt; NStructReal, NStructInt, 0 , 0  &gt;</label>
        <link refid="classamrex_1_1ParticleContainer__impl"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="43">
        <label>amrex::PODVector&lt; amrex::Box &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>amrex::Vector&lt; amrex::NeighborParticleContainer::NeighborCommTag &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="49">
        <label>amrex::PODVector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>std::map&lt; int, amrex::Vector&lt; char &gt; &gt;</label>
        <childnode refid="37" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="5" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>T</label>
      </node>
      <node id="42">
        <label>std::map&lt; int, amrex::PODVector&lt; amrex::Box &gt; &gt;</label>
        <childnode refid="43" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::MultiFab &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>std::map&lt; int, amrex::PODVector&lt; amrex::NeighborCode &gt; &gt;</label>
        <childnode refid="29" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>amrex::Vector&lt; std::map&lt; PairIndex, ParticleTile &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>amrex::Vector&lt; std::map&lt; std::pair&lt; int, int &gt;, amrex::NeighborList&lt; ParticleType &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="51">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>amrex::Vector&lt; amrex::Vector&lt; int &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>amrex::Vector&lt; amrex::DistributionMapping &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>amrex::ParGDBBase</label>
        <link refid="classamrex_1_1ParGDBBase"/>
      </node>
      <node id="34">
        <label>amrex::Vector&lt; std::map&lt; PairIndex, amrex::Vector&lt; amrex::Vector&lt; amrex::NeighborParticleContainer::NeighborCopyTag &gt; &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>amrex::Vector&lt; amrex::BoxArray &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="55">
        <label>amrex::Vector&lt; std::map&lt; int, amrex::PODVector&lt; amrex::IntVect &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>amrex::ParticleBufferMap</label>
        <link refid="classamrex_1_1ParticleBufferMap"/>
        <childnode refid="13" relation="usage">
          <edgelabel>d_bucket_to_pid</edgelabel>
          <edgelabel>d_lev_gid_to_bucket</edgelabel>
          <edgelabel>d_lev_offsets</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>m_dm</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_bucket_to_gid</edgelabel>
          <edgelabel>m_bucket_to_lev</edgelabel>
          <edgelabel>m_bucket_to_pid</edgelabel>
          <edgelabel>m_lev_gid_to_bucket</edgelabel>
          <edgelabel>m_lev_offsets</edgelabel>
          <edgelabel>m_proc_box_counts</edgelabel>
          <edgelabel>m_proc_box_offsets</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>m_ba</edgelabel>
        </childnode>
      </node>
      <node id="53">
        <label>std::vector&lt; std::vector&lt; amrex::NeighborCode &gt; &gt;</label>
      </node>
      <node id="47">
        <label>amrex::PODVector&lt; unsigned int &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="48">
        <label>amrex::Vector&lt; std::map&lt; int, amrex::PODVector&lt; int &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="56">
        <label>amrex::Vector&lt; std::map&lt; PairIndex, IntVector &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>amrex::Vector&lt; std::map&lt; std::pair&lt; int, int &gt;, amrex::PODVector&lt; int &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>amrex::Vector&lt; amrex::Vector&lt; Long &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="37">
        <label>amrex::Vector&lt; char &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>amrex::AmrParticleLocator&lt; amrex::DenseBins&lt; amrex::Box &gt; &gt;</label>
        <link refid="classamrex_1_1AmrParticleLocator"/>
      </node>
      <node id="57">
        <label>amrex::Vector&lt; std::map&lt; PairIndex, amrex::Vector&lt; amrex::NeighborParticleContainer::InverseCopyTag &gt; &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>std::allocator&lt; T &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>amrex::ParticleContainerBase</label>
        <link refid="classamrex_1_1ParticleContainerBase"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_particle_locator</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>tile_size</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>redistribute_mask_ptr</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>neighbor_procs</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_dummy_mf</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_gdb_object</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_buffer_map</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>m_gdb</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>amrex::PODVector&lt; amrex::NeighborCode &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>std::unique_ptr&lt; amrex::iMultiFab &gt;</label>
      </node>
      <node id="11">
        <label>std::unique_ptr&lt; amrex::ParGDB &gt;</label>
      </node>
      <node id="23">
        <label>amrex::RealDescriptor</label>
        <link refid="classamrex_1_1RealDescriptor"/>
        <childnode refid="7" relation="usage">
          <edgelabel>ord</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>fr</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>amrex::Vector&lt; std::unique_ptr&lt; amrex::iMultiFab &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>amrex::ArenaAllocatorBase&lt; T, PolymorphicArenaWrapper &gt;</label>
        <link refid="structamrex_1_1ArenaAllocatorBase"/>
      </node>
      <node id="52">
        <label>std::map&lt; int, std::vector&lt; std::vector&lt; amrex::NeighborCode &gt; &gt; &gt;</label>
        <childnode refid="53" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="50">
        <label>amrex::Vector&lt; MPI_Status &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>amrex::PolymorphicArenaAllocator&lt; T &gt;</label>
        <link refid="classamrex_1_1PolymorphicArenaAllocator"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>amrex::PODVector&lt; char, amrex::PolymorphicArenaAllocator&lt; char &gt; &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>amrex::PODVector&lt; char &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>amrex::Vector&lt; Long &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>amrex::NeighborParticleContainer&lt; NStructReal, NStructInt, NArrayReal, NArrayInt &gt;</label>
        <link refid="classamrex_1_1NeighborParticleContainer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>m_neighbor_list</edgelabel>
        </childnode>
        <childnode refid="28" relation="usage">
          <edgelabel>m_code_array</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>snd_buffer</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>m_boundary_particle_ids</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>buffer_tag_cache</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>pinned_rcv_buffer</edgelabel>
          <edgelabel>pinned_snd_buffer</edgelabel>
          <edgelabel>rcv_buffer</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>send_data</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>neighbors</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_neighbor_mask_ptr</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>mask_ptr</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>ghost_int_comp</edgelabel>
          <edgelabel>ghost_real_comp</edgelabel>
          <edgelabel>neighbor_procs</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>local_neighbors</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>rcvs</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>m_code_offsets</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>m_isec_boxes</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>local_neighbor_sizes</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>neighbor_copy_plan</edgelabel>
        </childnode>
        <childnode refid="52" relation="usage">
          <edgelabel>m_grid_map</edgelabel>
        </childnode>
        <childnode refid="54" relation="usage">
          <edgelabel>neighbor_copy_op</edgelabel>
        </childnode>
        <childnode refid="56" relation="usage">
          <edgelabel>neighbor_list</edgelabel>
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>inverse_tags</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>amrex::PODVector&lt; int &gt;</label>
        <link refid="classamrex_1_1PODVector"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="54">
        <label>amrex::ParticleCopyOp</label>
        <link refid="structamrex_1_1ParticleCopyOp"/>
        <childnode refid="48" relation="usage">
          <edgelabel>m_boxes</edgelabel>
          <edgelabel>m_levels</edgelabel>
          <edgelabel>m_src_indices</edgelabel>
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>m_periodic_shift</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>amrex::Vector&lt; std::string &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>amrex::DenseBins&lt; typename amrex::ParticleTileData &gt;</label>
        <link refid="classamrex_1_1DenseBins"/>
      </node>
      <node id="41">
        <label>std::map&lt; int, amrex::PODVector&lt; int &gt; &gt;</label>
        <childnode refid="13" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>amrex::Vector&lt; ParticleLevel &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="46">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>amrex::Vector&lt; std::map&lt; PairIndex, int &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>ParticleContainer&lt; NStructReal, NStructInt, 0 , 0  &gt;</label>
        <link refid="classamrex_1_1ParticleContainer__impl"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>wherePrePost</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>filePrefixPrePost</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>h_redistribute_int_comp</edgelabel>
          <edgelabel>h_redistribute_real_comp</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>HdrFileNamePrePost</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>nParticlesAtLevelPrePost</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>ParticleRealDescriptor</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>m_particles</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>m_bins</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>countPrePost</edgelabel>
          <edgelabel>whichPrePost</edgelabel>
        </childnode>
      </node>
      <node id="45">
        <label>amrex::ParticleCopyPlan</label>
        <link refid="structamrex_1_1ParticleCopyPlan"/>
        <childnode refid="46" relation="usage">
          <edgelabel>m_rOffset</edgelabel>
          <edgelabel>m_rcv_pad_correction_h</edgelabel>
          <edgelabel>m_snd_counts</edgelabel>
          <edgelabel>m_snd_offsets</edgelabel>
          <edgelabel>m_snd_pad_correction_h</edgelabel>
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>m_box_counts_d</edgelabel>
          <edgelabel>m_box_counts_h</edgelabel>
          <edgelabel>m_box_offsets</edgelabel>
        </childnode>
        <childnode refid="48" relation="usage">
          <edgelabel>m_dst_indices</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>d_int_comp_mask</edgelabel>
          <edgelabel>d_real_comp_mask</edgelabel>
          <edgelabel>m_rcv_data</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>m_rcv_pad_correction_d</edgelabel>
          <edgelabel>m_snd_pad_correction_d</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_RcvProc</edgelabel>
          <edgelabel>m_neighbor_procs</edgelabel>
          <edgelabel>m_rcv_box_counts</edgelabel>
          <edgelabel>m_rcv_box_ids</edgelabel>
          <edgelabel>m_rcv_box_levs</edgelabel>
          <edgelabel>m_rcv_box_offsets</edgelabel>
          <edgelabel>m_rcv_box_pids</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>m_Rcvs</edgelabel>
          <edgelabel>m_Snds</edgelabel>
          <edgelabel>m_rcv_num_particles</edgelabel>
          <edgelabel>m_snd_num_particles</edgelabel>
        </childnode>
        <childnode refid="50" relation="usage">
          <edgelabel>m_build_stats</edgelabel>
          <edgelabel>m_particle_stats</edgelabel>
        </childnode>
        <childnode refid="51" relation="usage">
          <edgelabel>m_build_rreqs</edgelabel>
          <edgelabel>m_particle_rreqs</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>std::string</label>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" line="33" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H" bodystart="35" bodyend="483"/>
    <listofallmembers>
      <member refid="classamrex_1_1NeighborParticleContainer_1a495d805bcf68681c718d5316bac80c07" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AddIntComp</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a27f7bd611c04c7075881cae3500a5f04" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>addParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ac525d32e717e0df2d0e806cd1694f879" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>addParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a20cee5315ade79318243b96dc7294c83" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>addParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a956db7caae43ab5d1de9c9e96e8df1ab" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>addParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ad8ac626a1f0fc7032d63ae041983079c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AddParticlesAtLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ac44ce79799e40e91aaddaa0ef6b2c51a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AddParticlesAtLevel</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a394a5717e0621cf4e2250d432950cd8a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AddRealComp</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a057b501a3b5f73f4c897da8ec8dd26f9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AggregationBuffer</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1ad4184276cc974fbc7a8316a89df2eb25" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AggregationType</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1abe9bf1c099a89cdd2fc4f11117f111b7" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AllocatorType</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a41c79512efbfbf1a4145948c6a680d5c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AoS</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a1be3305131595afe235881caad842d14" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>areMasksValid</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a4c80f516f077fac4d03733dd10038d91" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AssignCellDensitySingleLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a0521b81db32f27b22d9d6d627bb47688" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>AssignDensity</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a82a5acd18d78404acab9c6f310411369" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buffer_tag_cache</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1ae8cc9df742fa642c6289916de788afa5" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>BufferMap</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1af79112d043b45868fb00cf720d61b0a5" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>BuildMasks</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a429842d84ae93439634d8953d71b63bf" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buildNeighborCopyOp</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a6fb1047fc993b216cf8b7976cb589c45" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buildNeighborList</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a8478ecacf0444af88ada9f65324c8c91" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buildNeighborList</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ad443f88f36ee577341e3ffcffda8a539" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buildNeighborList</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aad163ac3bbb3deda0b715ce7e97f6de0" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buildNeighborList</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1abb69f08cf3677fa93e6b3793e1ef3403" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buildNeighborList</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ac168ec3279fb7f55564901b2f98dfeeb" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buildNeighborList</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ad01b79b58df596f16982763a74e34d70" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>buildNeighborMask</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a96b76ab915415e7891655d0910880636" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>BuildRedistributeMask</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a10bdd9f80e7698acb45b1dec24db3a72" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ByteSpread</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a497db0eca21eb270f545e60f034aeb6a" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>cacheNeighborInfo</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9fea3b7765226c9483a81c772e3cfcd0" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>calcCommSize</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a0bc1ebc16494317aa1ee91983ac667e4" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>cdata_size</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a7b7b13085dd52256f182ec5cb5cb45a9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CellAssignor</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ad555e3e5802b997740fb9876d8b5880f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CharVector</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a27c1365779e42101977956a8b1a52a14" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Checkpoint</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a952caef3e80ea80bc603c495b8943c2a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Checkpoint</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1af3532a7f6a8a5d3ebcc7170313e8e59d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CheckpointPost</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a9bc5bbc4b89549896b1c59493f93618d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CheckpointPre</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a7412df442ee70eda865ad538530acfe8" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CheckpointVersion</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a287e510b67bfbb6bd4d500e5281e3329" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>clearNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1acfd5f04cd8c4ccc1624a2800908ab823" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>clearNeighborsGPU</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a11305e3f05cee007a8d74408e571fd9e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>clearParticles</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1af207e3796662b7069d55d479a5de23df" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>computeRefFac</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a3d2e30f73679e93e69b1acec892d4a3a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ConstParticleType</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a4ad32bd643f611ee9d4b501b4a572069" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ContainerLike</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a132deb6920535ef64e0f8c9122bfa1b1" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>copyParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a9825bb7c6eea753c2e98f5ce5fe546c4" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>copyParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a009ea64497b4f3e91026470f45af5be0" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>copyParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a58cf0ef88b46798899920b74f79a4905" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>copyParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a6a78df0fb6333e80fe5e85599eb197ef" prot="private" virt="virtual"><scope>amrex::NeighborParticleContainer</scope><name>correctCellVectors</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1afc23dd0deef223d058b767ce1866bd56" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>countPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ad4caa3e50e116c9e6084b2e4b0a7540e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CreateGhostParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ac293eac92889ceb2e0f481c96e45c6e4" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CreateGhostParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a917817124424c9af523c504d77b48d84" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CreateVirtualParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a05f88343d3f65cdc0489d319f11c42ec" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>CreateVirtualParticles</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1ac11b2227836fc7582170fbeba06c780a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>DataPrefix</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1acaf325141f257a6747887448a2d50094" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Define</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a580c70def9c72011c57ef1b0cec64376" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Define</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ad5bd0f3d81314b010cf18db12bf1d2e3" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Define</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a8ed78268b70651f86cae8e2c4cd84781" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Define</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a1de9ef85f9c97ccb6cea4b8102c17b88" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>DefineAndReturnParticleTile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a61a13113adbebe1a9551e5763daf2638" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>DefineAndReturnParticleTile</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a23baa2791b5f62a9dd1e7f6c709d4615" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>defineBufferMap</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a29311c7fd7f83d43f84951476f9a265d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>do_tiling</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a1464b4259b521c1ed74a68c83ee8ef1a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>doUnlink</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a253931bb13b740bcdf8da45fe68a4591" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>enable_inverse</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a10946f0902af75ab296818655fa6b388" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>enableInverse</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a5fd964d32b82510c6625589b9038b251" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>EnforcePeriodicWhere</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a460bbf5e47586a2d48353747798e0a1e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>EnforcePeriodicWhere</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aa059f60f99bc3f5a3bcf24cdb6638920" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>filePrefixPrePost</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a2c1bf28f2552627e93d1587e977dd22a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>fillNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a4dbc10fb057262215b756a2b4289b33c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>fillNeighborsGPU</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1af3b5f685680bc88ad15c0f2cd5ee44c8" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>fillNeighborsMPI</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1aa9d1fb8c82d375e2d473e0dd677b3f61" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>finestLevel</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a9ae9a37898b7fb6929b598194c8bca61" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Geom</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ac1810a3351cc7c3242d98c7ddf7f5837" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetCommTagsBox</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a0bb96928ae0b6b67cdfe378c09ca9028" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetLevelDirectoriesCreated</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a32654ffc430315cf14b8f4cb3e0551d7" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetMaxNextIDPrePost</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a01f3711526aa5aff0183fc0eeee6a866" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetNeighborCommTags</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a662f2650bebba90cebfd2f314bce4585" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a0d80b42fa8c4fa92b49b26301ea8e205" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a991d920470b2aead6fd0f8f19a26b7c9" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>getNeighborTags</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a98b93307f7df6a29e8e1b84bfdcda458" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>getNeighborTags</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a74a0a296ae6ee82e07762e815425598c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetNParticlesPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a0e42065282e0589082794401db6d2247" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetParGDB</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1adafb217d391165d8afaf21b38912e068" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetParGDB</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ae97f414f3ff6d998228f84b9746d7851" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ac638c1c7121c5cb0d55a20422abbd1db" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a579db85a7dd51edaeea5fc11888be874" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ac2109d506af4f75c548a7eb80ebe31af" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetParticles</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a78a0bf763811ffa755a8a562f2cdede1" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>getRcvCountsMPI</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a34e38da1037a8148ddca00deea8abafc" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetUsePrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aae309f81887fa1f35e89af02581df42a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>GetUseUnlink</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a686b95f083fdf17811b9933e189326db" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ghost_int_comp</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1abaca3cff5c84aa26d0e6c4a454af00cd" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ghost_real_comp</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a65100fe165b67994e823d372e4c5256e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>h_redistribute_int_comp</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aaa226a4b30b1045dfef949fb868e706b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>h_redistribute_real_comp</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a5bde7ea76f99ed274bef3626dc3f833b" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>hasNeighbors</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a1967a72736444134d0de172ad1358743" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>HdrFileNamePrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a5019b540f254e7b91f8a2d112d19dc95" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Increment</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ae923206d590fdc0fdf1e19fae92a5a5c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>IncrementWithTotal</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ae6231e20371e520643fb269cf5f646ca" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Index</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ae6231e20371e520643fb269cf5f646ca" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Index</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a61246388ae1185e56d61b035b07d69ac" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitFromAsciiFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a0a9ab2b337e6644ad127a55724de54e1" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitFromBinaryFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1adeb31dff53ee49725d7cabb4f6a33cf6" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitFromBinaryMetaFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a3107c4a7bb9135a876706eb026a7193f" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Initialize</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9fc777a6611729b79c56fc8f1782c830" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>initializeCommComps</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a960cdbf8ef062e265b3957220f1db3e8" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitNRandomPerCell</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aeb89e96cb9e2697c5ffeb7b7c99d16c9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitOnePerCell</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a77e8bc7ae893a6e46b8feae5e1c4f7df" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitRandom</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1afd47ecec7c2df08b3b44e73601cc5944" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>InitRandomPerBox</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a60a40e557410a932b8adc0275a5d019f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>IntVector</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ab2ef89d2bc69cbfa4ca8f26175d2ce1c" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>inverse_tags</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a0fef888a5370f9723f2ab2df2fe32266" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>isDefined</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a2b9f02af8e7da88a8e55af2dadfbcce9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>levelDirectoriesCreated</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1abbb2992e59999ae9c2866da0b90a7378" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>local_neighbor_sizes</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a36b78bd6fa71f934871cf953892ef4f8" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>local_neighbors</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a721df7b847160e02567c879da742f2cd" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>locateParticle</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1adbb82df3ca78abd2e90644d15b35e464" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>locateParticle</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a8117b70d723320a9c0c4dfc5d57fb224" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_bins</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a71350435dff09e0768bdc74d0f943655" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_boundary_particle_ids</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a2eddb55f0ebdf394ea2ace09e1d0e4a4" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_buffer_map</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1adc6fa317f2580d5b4eaf5e7e156694e8" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_code_array</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1adc56d3fa06a368656ba30775e6af57d5" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_code_offsets</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1adb9b347bff9efa17831af4b1c5cb846a" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_dummy_mf</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a2821fc52ed661ccd9e9d821b81476fff" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_gdb</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a7faac754ff05cf1b841bfe49dad579ba" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_gdb_object</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a6aafab3c8c1565c5457b08400f0c7984" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_grid_map</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a027a8bd9c7726edd5ab979a6ee716fa8" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_has_neighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a8cec5f0f49ca18e99496c3530716772b" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_isec_boxes</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a739c2408e1c55081d20e737f6bf7ec8f" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_neighbor_list</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a68fedc2fd57b0e5efccdf65617f930ff" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_neighbor_mask_initialized</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a0f3bc83f8fdf1b3468248103a0000a49" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_neighbor_mask_ptr</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9c12404dedc750595ce4d68731d6fc29" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_num_neighbor_cells</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a87e6d8dc966e6089011ddb15c43a2f74" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_num_runtime_int</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a972a56d27fa5ca77b8eb78e93637180d" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_num_runtime_real</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1aa9bbd6752d478b3a24e66f2caa11196b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_particle_locator</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a08209cdd1d5e91d7d010403fd22b3468" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_particles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1af9c8295a918075bcaac70f264b946b0e" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_runtime_comps_defined</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a89f6fb84fb7e73fc185ae5d8f45818ab" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>m_verbose</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a2dddaa556802219ee7e7e7898d7b811c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>make_alike</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1adc8bb6ea7e7d8a9596936623bc2e26ed" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>MakeMFIter</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a41cb0c34d64f3d1df87d83f3b26f594b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>MakeMFIter</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a30a608b14352a5cd5bfed79f69f98011" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>MakeMFIter</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ad8787f8726e711a8d7a8e0dce3fb8624" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>mask_ptr</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1ad60ba0c10f19af842fdfbeaccd02b2ed" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>maxLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a20ff6222649a69a92ec84ebb90686f97" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>maxnextidPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a1f3d39dbdae2586a92fdcc799ee9d1ea" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>MaxParticlesPerRead</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a906decca7ce86c4a87f1874225779d05" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>MaxReaders</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a5a0a39b2da4b85ad599ea7fc51fba940" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>memEfficientSort</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a4f7f3ca7bf951e7ec6fce594005694da" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>MyParIter</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a3063446dc305120704ec3f1670f301c1" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NArrayInt</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a32623939f5453d39bcfc26fef34972a8" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NArrayReal</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a42b4110915286223007d92bbcf580d89" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>neighbor_copy_op</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a4057e1a1eaeca59b1c87cec0720343d6" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>neighbor_copy_plan</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a68d92607a1d43f215ae6af8ff8d3e3af" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>neighbor_list</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a704c1b5b30612c4f5a09378f0a63b221" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>neighbor_procs</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ae77c84d55fb9e147fc49a60bd44d42d6" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborCommMap</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a43409db639b332ea93f0ad257dc54bc7" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborListContainerType</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aec6aa68d7cccf38bf8f2ece89e2e47ad" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborParticleContainer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a85456475575ab6d83ef479080e989a74" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborParticleContainer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a186b8b589b18098582292879a91ccf87" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborParticleContainer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1adff18120eea0cf9a843f2779fa7afb80" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborParticleContainer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a8e16762fd9648d7b623cff439d75e888" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborParticleContainer</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a444a7a4f352c7d70ab530e09facc7894" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NeighborProcs</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a2db2fa1d27368a0d8f2a783f215cd93b" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>neighbors</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a1f6eee153647b98b534ef908e86ae03f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>nOutFilesPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a0a0a8965a9936565a35f699f67df9554" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>nParticlesAtLevelPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a9579f1b170547de35dcb4a0b4d84d0c0" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>nparticlesPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a591fb654644bfe6f3b18e63547e1079f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NStructInt</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aa7617bd59325bac568183d9bbcf32ee3" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NStructReal</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ad29ae6f512fcf498a95666ad47ee71e5" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>num_int_comm_comps</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aebe05d83866295fa66cd195bfd2ccc44" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>num_mask_comps</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ae3bf517b7cadd7ea83a0fb14a706c48a" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>num_real_comm_comps</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9c0cf5742a0014b73afe38a75f02534e" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>num_snds</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a4b971f3afa8e65de0efc62098edae1d2" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumberOfParticlesAtLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ab1bdce872428cb13609c7f5890872f58" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumberOfParticlesInGrid</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ab761b38df59cb25e8a4fb73ad61dad64" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumIntComps</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a6ec01a89cd77b4473dc1895e1a2b1ebe" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>numLevels</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aa2c16c3a436932f9a3f4ce5eaaf11e0c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>numLocalTilesAtLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a5c0a1d474a92f4622e6156cbd8b42a27" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumRealComps</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a72e673a1fb1acdb894fb63417aaf3c59" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumRuntimeIntComps</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a926b41920a7dd2ca180db0717f726faa" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>NumRuntimeRealComps</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a6dc15bf7eabf4bf856b9296c39da773f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>OK</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a92aa9afcd8adbbb62d06b8c3c293912a" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>OnSameGrids</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1af2dd70e123c4708809ddc29dc04124e9" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>operator&lt;&lt;</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a442d7b34e588606cf0ddb1c5184c3af6" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>operator=</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1af187b3c1e4f0d96810f5ea4cdb6fec43" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>operator=</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a35020cff021a7a30b466216320848070" prot="public" virt="non-virtual" ambiguityscope="amrex::ParticleContainer_impl::"><scope>amrex::NeighborParticleContainer</scope><name>operator=</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1acefbd70cdc48ecb35ba0ddb6d3864878" prot="public" virt="non-virtual" ambiguityscope="amrex::ParticleContainer_impl::"><scope>amrex::NeighborParticleContainer</scope><name>operator=</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a4d64529e53afd5cccc69ff5a27262411" prot="public" virt="non-virtual" ambiguityscope="amrex::ParticleContainerBase::"><scope>amrex::NeighborParticleContainer</scope><name>operator=</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a08060e877e41b78ef42581d8a8d7326c" prot="public" virt="non-virtual" ambiguityscope="amrex::ParticleContainerBase::"><scope>amrex::NeighborParticleContainer</scope><name>operator=</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a0c2a28aef7db24fbfccc53f46637a582" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>PairIndex</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a8a9724a602a1034017c9578d45910a90" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParConstIterType</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1adb85276367bb16831500bd619a7fa724" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParIterType</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ad2bc38953d14a33e1d165372b1f8d3e4" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>particle_size</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1aa22d7a841e78ebeadb741eb5fedd6473" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleBoxArray</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a5b175fd2bdaed24ba7c697985561e773" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer_impl</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a893cd026d19d1c7791f9edbf1beb9e80" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer_impl</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a448d1854177c7b246db5a02823eb32df" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer_impl</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1acaf9845e14cca4dc0cf89bfba1c09a7f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer_impl</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a17b32ed9f05b29c632ad9dc82e13f0fa" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer_impl</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a3eb505b47edc7093c1b416c4db35f925" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer_impl</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a27b28bd4f409e4f4fee09aa7e43a9f33" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainer_impl</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a51bba5cff5a55e3f6ce46c0b56fa1809" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainerBase</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a783bf6edc1d9d0bdc5d4e8dd1f98cd5f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainerBase</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a66e036defd5c86431c583bbd8cb91e2d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainerBase</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a1b59660938f651e5a56bc45bb6bc4d8e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainerBase</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1af60ff4efea559ba4e49dc7178e504e4c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainerBase</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a5f71ad65c90b78b062f40127d91a3134" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainerBase</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1af17feaf161d82ae2ef0466b6188cc7b0" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainerBase</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aa454b3f1c4a133faaa1d28b9c8c254d8" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleContainerType</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a7e2ec84758098c59382aba1343bc4a8b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleDistributionMap</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a00182008cdf9fb0039e82588fb15e67e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleGeom</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a39f3dad374127876863b7888ac53b465" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleInitData</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a2a95432c01c58984730881db4e162f02" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ad396acd787a21008fac169e86ab7dd1f" prot="private" virt="virtual"><scope>amrex::NeighborParticleContainer</scope><name>particlePostLocate</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a1b57811f2abf751ac0228b4c5c43442c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleRealDescriptor</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aec3793fce4ff9ab5528153f2e31da3c3" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticlesAt</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1adb8cf88f78dbf7626cf6cb3bef352ee0" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticlesAt</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a177031918d251e2a90532ea6e1f48b52" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticlesAt</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ae54a4fd6231ba214252436d9dbe25cca" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticlesAt</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a88e27f1bb35a55e5fb6555057e1e25ac" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleTile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aad727cb5c9b392a0ec2c7bbabdf22576" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleTileType</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ab9497648313d317adc40bc7bebb5ca2d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleType</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1ade2385ed6d6005f38a31d3709b55fc4c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ParticleVector</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a94f1d1574b0fb4f340d088480ee5fbc1" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>pdata_size</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a37bfe23bdf8f5b0a9e38f5459ec4a42e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>PeriodicShift</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a37bfe23bdf8f5b0a9e38f5459ec4a42e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>PeriodicShift</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a57f27a8f270653d1a738490e32dffe4b" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>pinned_rcv_buffer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a1f7704df7069ec0df0e84a649babf620" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>pinned_snd_buffer</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1ab95e00002c7985b4bc7d425795d72404" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>PlotfileVersion</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a33c5150bb59504c072ff32cd2dcd3407" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>PrintCapacity</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1aac13e1f1c324181ce01a8f50fe3897d9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>printNeighborList</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a2f7e6baa209278afea162548a1425bf2" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>rcv_buffer</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a6d6260836577412b1a3a17c7f8d09bc4" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>rcvs</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a8699a4dc0ddbe5306e7c17e0fb21237b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ReadParticleRealData</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a90b8d7c78a948c202e2af579580d8004" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ReadParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a90b8d7c78a948c202e2af579580d8004" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ReadParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aac72f922b5c6acf01660db3263a3967b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RealType</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a3c635ec7175b9f6f28bce938ea801423" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RealVector</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a7fc7373a60be7c74a38a17b1711f59fa" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RedefineDummyMF</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a1dadb49a29f4ad711fb369db84b2eb54" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Redistribute</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ae715cfb21e499fce29f8aee5a01feac1" prot="public" virt="non-virtual" ambiguityscope="amrex::ParticleContainer_impl::"><scope>amrex::NeighborParticleContainer</scope><name>Redistribute</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1ac6b4b306d8f0399657b3884f51ea569e" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>redistribute_mask_nghost</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a18183e85d5ae22c27721996b3c5bfead" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>redistribute_mask_ptr</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a87a336f58b2a85110ce13bc7aa7cf138" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RedistributeCPU</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aa0b3b069a1dee1a10ea57cc8e8bbde14" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RedistributeGPU</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a098b72559cacc3ab8b2455a36137fd06" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RedistributeLocal</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1abef322b0b6bd8480a776590774981aaf" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RedistributeMPI</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1adbf6915c6877b366e0bda3e6f268eb30" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Regrid</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a361bea35ab3f956932339ef80930e405" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Regrid</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a991c2e4f486d6cbb9cf74c326c1ad357" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Regrid</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a6021c46824d3b594de5cd61b3010e175" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RemoveParticlesAtLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a7d3233cc18ae3b35d52402d41d301b38" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>RemoveParticlesNotAtFinestLevel</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a549364cc9372899941b77e63d953ce51" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ReorderParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a549364cc9372899941b77e63d953ce51" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ReorderParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aa5c8c0fea702cb673995b3f1d87f35f1" prot="public" virt="virtual"><scope>amrex::NeighborParticleContainer</scope><name>reserveData</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aa00c19b16118e48fda0567182840549f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Reset</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a60a710dcdfaaa6887b5b865fb1820ba7" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>resizeContainers</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1adeded66adc9a0a73d9ddb8ce759ca476" prot="public" virt="virtual"><scope>amrex::NeighborParticleContainer</scope><name>resizeData</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1adc824cdc4c493f19c98882f4d94d4d26" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ResizeRuntimeIntComp</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a7aa82330403064a8174b9b6acc5357d3" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ResizeRuntimeRealComp</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a8c3b7e935c8e51c676870ef1845da343" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Restart</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ac94e2cfc39b00353c4f5c589ca0d9840" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Restart</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a12039aca5af54df4ee587db2ea95c857" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>selectActualNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a29c7b740a3afe04a5fb93281fc0d75ac" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>selectActualNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a5ba336738781f2d529bbb68a7f297e17" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>send_data</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9fd86ef6591da68553312d8cc6321034" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>setEnableInverse</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a63cbb0b5b6c81df9e4321148bc960f32" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>setIntCommComp</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a51414af32d7051aef77e91a94ae009ef" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetLevelDirectoriesCreated</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a2b8152157d1ecf4129a015d2a8ead5ff" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetParGDB</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a3a466989f4aa9bba5b055e42d48ee936" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetParGDB</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a390bb96be3157bd1a0bf97fe3167e14b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetParGDB</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a79aa4f01ee0c767eb5f92c5cfed9485d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetParticleBoxArray</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a0efe211fbdf5d6759cd3a045622e0250" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetParticleDistributionMap</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a89426801f817c951b25e9748f669d3ce" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetParticleGeometry</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1afda3cda80b1a328f03e53a8e633e7b52" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetParticleSize</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a9c5eaf4a73e02b631f586b8d9eaa9b44" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>setRealCommComp</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a5bec5781b720b0e352bf4175e53db209" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetUsePrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a07a6c47cf3f6c0e4eb77bbb5a3651cac" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetUseUnlink</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a2a0f56f8b64e6c0315442033ebd79fac" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SetVerbose</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ac4b4b15b3d70602a9bd124bda2a395cc" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>ShrinkToFit</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a8fd0536bf961bc912c1a380d93b077dd" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>snd_buffer</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a69ff052875e307b7cb9ca774912b4003" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SoA</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ad33e212c73081eddcd2f64b9e4782498" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SortParticlesByBin</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ad9ef13f1ef2d43da5bdbaf5be7192df1" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SortParticlesByCell</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aefe4f57eb0d8c9fac0e3e88c24b40e90" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SortParticlesForDeposition</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a881b90e85491b4c0a7bb25425cc38641" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>sumNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a832b5eccef2ae5ed7bb83a92653b793e" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>sumNeighborsMPI</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a0f5632ab05c6d5c93ec4c4deb0ed0753" prot="private" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>superparticle_size</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1acc0e05b69f7bc04b034f32697edd73f3" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>superParticleSize</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a1c6baf08ed7bdeb1d7a7acf30eefad52" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>SuperParticleType</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1adb03167dec6a952cfa60beb45a514dfa" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>tile_size</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a627963d5fe08303ba6da357ffb3e9cb0" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>TotalNumberOfParticles</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a6aeacb4e33f4b1946b8b7a5434a77f6d" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>updateNeighbors</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a0f70a3eeb349ea4d713b581c5beebc82" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>updateNeighborsGPU</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a21bd4a08b87b0afeeb0d8889c619c86c" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>use_mask</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1afd72327ed221e95f199aa4b22e98f662" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>usePrePost</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1aecfa142bba944fe440b23bd13a79c08e" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Verbose</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ac8c9f18cd45f82e224ed9071f67b1b58" prot="protected" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Where</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a4d6bffe8bd2e0c3f068c724ad16026ed" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>Where</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a19cc9a46b7d9e49c478bc9f26714ee0b" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>wherePrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a163a2894a9c1d9ff00c278ee873d2497" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>whichPrePost</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a2e67d70bb4169a2dd136c2a2bc92b236" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WriteAsciiFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a0a8e2763cc8b3981224ac276a9e0a194" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WriteBinaryParticleData</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ad4e0e6f2fb52c965375cdce298727b56" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WriteBinaryParticleData</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a168bcdbf9de86d172333897672ef2154" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WriteParticleRealData</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a40d6b6a2a41be4413bb99d306896beea" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WriteParticles</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a96a9fec76eb6b686013708fd5e2823d9" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a26c0d796f13eb181c4dedb1e818830fa" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1ad11bd2af76a93f78b8a7f306f6b8d7fe" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a6b432e4ca1dd792af8b37d6734500926" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a494bfdd72e01ade7f2373c7db60ead52" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a1a2c4cdcc779530b056bd23affb0665f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a7bd3f50ba210ed0615c33aca78bf0f88" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a9713da99f5e44b64758ad2feac9a62d0" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1acc89914bd4ee4d546c13f0e9d5d31e4c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aa6d84743d950725ea8d83493042b43ab" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a26c0d796f13eb181c4dedb1e818830fa" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a6b432e4ca1dd792af8b37d6734500926" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a1a2c4cdcc779530b056bd23affb0665f" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a9713da99f5e44b64758ad2feac9a62d0" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1aa6d84743d950725ea8d83493042b43ab" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFile</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a8d5191405342c36fd041340e170ae4be" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFilePost</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1a5efa6314179b30a686a87bc91d2ae1da" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>WritePlotFilePre</name></member>
      <member refid="classamrex_1_1NeighborParticleContainer_1a4d1fb81f019aa99065cb59c879fd7e7c" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>~NeighborParticleContainer</name></member>
      <member refid="classamrex_1_1ParticleContainer__impl_1af10957def8edc4549269e00ba154a0b4" prot="public" virt="non-virtual"><scope>amrex::NeighborParticleContainer</scope><name>~ParticleContainer_impl</name></member>
      <member refid="classamrex_1_1ParticleContainerBase_1a9767823a5595f287569a535bb3b8ae59" prot="public" virt="virtual"><scope>amrex::NeighborParticleContainer</scope><name>~ParticleContainerBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
