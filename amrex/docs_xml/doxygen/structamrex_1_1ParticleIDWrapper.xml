<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structamrex_1_1ParticleIDWrapper" kind="struct" language="C++" prot="public">
    <compoundname>amrex::ParticleIDWrapper</compoundname>
    <includes refid="AMReX__Particle_8H" local="no">AMReX_Particle.H</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1ParticleIDWrapper_1a54da690d4c9ce6bdf8348a82f66eba6a" prot="public" static="no" mutable="no">
        <type>uint64_t &amp;</type>
        <definition>uint64_t&amp; amrex::ParticleIDWrapper::m_idata</definition>
        <argsstring></argsstring>
        <name>m_idata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="28" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1ParticleIDWrapper_1ab7e13cdf60396c11caf880dde0226a7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::ParticleIDWrapper::ParticleIDWrapper</definition>
        <argsstring>(uint64_t &amp;idata) noexcept</argsstring>
        <name>ParticleIDWrapper</name>
        <param>
          <type>uint64_t &amp;</type>
          <declname>idata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="31" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleIDWrapper_1ae0e3277f7ccb4ff0872696c8c2c75965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::ParticleIDWrapper::ParticleIDWrapper</definition>
        <argsstring>(const ParticleIDWrapper &amp;rhs)=default</argsstring>
        <name>ParticleIDWrapper</name>
        <param>
          <type>const <ref refid="structamrex_1_1ParticleIDWrapper" kindref="compound">ParticleIDWrapper</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleIDWrapper_1a1884cfb979cf4a00e0396b5240a2f26b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="structamrex_1_1ParticleIDWrapper" kindref="compound">ParticleIDWrapper</ref> &amp;</type>
        <definition>AMREX_GPU_HOST_DEVICE ParticleIDWrapper&amp; amrex::ParticleIDWrapper::operator=</definition>
        <argsstring>(const ParticleIDWrapper &amp;pidw) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structamrex_1_1ParticleIDWrapper" kindref="compound">ParticleIDWrapper</ref> &amp;</type>
          <declname>pidw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="39" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleIDWrapper_1a8e40011be01f4bed4d022c5682b7893f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="structamrex_1_1ParticleIDWrapper" kindref="compound">ParticleIDWrapper</ref> &amp;</type>
        <definition>AMREX_GPU_HOST_DEVICE ParticleIDWrapper&amp; amrex::ParticleIDWrapper::operator=</definition>
        <argsstring>(const Long id) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>const Long</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="45" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="45" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleIDWrapper_1ac56fb16abaa09d4358f0ca5c94760249" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE amrex::ParticleIDWrapper::operator Long</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator Long</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="71" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="71" bodyend="81"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="27" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="26" bodyend="82"/>
    <listofallmembers>
      <member refid="structamrex_1_1ParticleIDWrapper_1a54da690d4c9ce6bdf8348a82f66eba6a" prot="public" virt="non-virtual"><scope>amrex::ParticleIDWrapper</scope><name>m_idata</name></member>
      <member refid="structamrex_1_1ParticleIDWrapper_1ac56fb16abaa09d4358f0ca5c94760249" prot="public" virt="non-virtual"><scope>amrex::ParticleIDWrapper</scope><name>operator Long</name></member>
      <member refid="structamrex_1_1ParticleIDWrapper_1a1884cfb979cf4a00e0396b5240a2f26b" prot="public" virt="non-virtual"><scope>amrex::ParticleIDWrapper</scope><name>operator=</name></member>
      <member refid="structamrex_1_1ParticleIDWrapper_1a8e40011be01f4bed4d022c5682b7893f" prot="public" virt="non-virtual"><scope>amrex::ParticleIDWrapper</scope><name>operator=</name></member>
      <member refid="structamrex_1_1ParticleIDWrapper_1ab7e13cdf60396c11caf880dde0226a7a" prot="public" virt="non-virtual"><scope>amrex::ParticleIDWrapper</scope><name>ParticleIDWrapper</name></member>
      <member refid="structamrex_1_1ParticleIDWrapper_1ae0e3277f7ccb4ff0872696c8c2c75965" prot="public" virt="non-virtual"><scope>amrex::ParticleIDWrapper</scope><name>ParticleIDWrapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
