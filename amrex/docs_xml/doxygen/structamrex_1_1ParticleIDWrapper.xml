<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structamrex_1_1ParticleIDWrapper" kind="struct" language="C++" prot="public">
    <compoundname>amrex::ParticleIDWrapper</compoundname>
    <includes refid="AMReX__Particle_8H" local="no">AMReX_Particle.H</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1ParticleIDWrapper_1a54da690d4c9ce6bdf8348a82f66eba6a" prot="public" static="no" mutable="no">
        <type>uint64_t &amp;</type>
        <definition>uint64_t&amp; amrex::ParticleIDWrapper::m_idata</definition>
        <argsstring></argsstring>
        <name>m_idata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="27" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1ParticleIDWrapper_1a421b8df4ba4bef283d8b812c8a35e976" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::ParticleIDWrapper::~ParticleIDWrapper</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>~ParticleIDWrapper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="29" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleIDWrapper_1a70c96c85021171e8ca0e31b75ba26885" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::ParticleIDWrapper::ParticleIDWrapper</definition>
        <argsstring>(uint64_t &amp;idata) noexcept</argsstring>
        <name>ParticleIDWrapper</name>
        <param>
          <type>uint64_t &amp;</type>
          <declname>idata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="32" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleIDWrapper_1a1be128a081a654e36673ae143e0c78cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::ParticleIDWrapper::ParticleIDWrapper</definition>
        <argsstring>(const ParticleIDWrapper &amp;rhs)=default</argsstring>
        <name>ParticleIDWrapper</name>
        <param>
          <type>const <ref refid="structamrex_1_1ParticleIDWrapper" kindref="compound">ParticleIDWrapper</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="37" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleIDWrapper_1abe6eaeb579f55deb9eea2375bf0cdb4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::ParticleIDWrapper::ParticleIDWrapper</definition>
        <argsstring>(ParticleIDWrapper &amp;&amp;)=delete</argsstring>
        <name>ParticleIDWrapper</name>
        <param>
          <type><ref refid="structamrex_1_1ParticleIDWrapper" kindref="compound">ParticleIDWrapper</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="39" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleIDWrapper_1a9fa4a9ab82a49b53fce7c12cf1a2c108" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> <ref refid="structamrex_1_1ParticleIDWrapper" kindref="compound">ParticleIDWrapper</ref> &amp;</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE ParticleIDWrapper&amp; amrex::ParticleIDWrapper::operator=</definition>
        <argsstring>(const ParticleIDWrapper &amp;pidw) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structamrex_1_1ParticleIDWrapper" kindref="compound">ParticleIDWrapper</ref> &amp;</type>
          <declname>pidw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="42" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleIDWrapper_1a4d2982f670339f79e2fd37622f27b3c4" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> <ref refid="structamrex_1_1ParticleIDWrapper" kindref="compound">ParticleIDWrapper</ref> &amp;</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE ParticleIDWrapper&amp; amrex::ParticleIDWrapper::operator=</definition>
        <argsstring>(ParticleIDWrapper &amp;&amp;pidw) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structamrex_1_1ParticleIDWrapper" kindref="compound">ParticleIDWrapper</ref> &amp;&amp;</type>
          <declname>pidw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="48" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleIDWrapper_1a822b71d351b9a073d243639441c544bc" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> <ref refid="structamrex_1_1ParticleIDWrapper" kindref="compound">ParticleIDWrapper</ref> &amp;</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE ParticleIDWrapper&amp; amrex::ParticleIDWrapper::operator=</definition>
        <argsstring>(const Long id) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>const Long</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="54" column="23" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="54" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ParticleIDWrapper_1a3cdec68611dbd36c124a37200d6eb516" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::ParticleIDWrapper::operator Long</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator Long</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="80" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="80" bodyend="90"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" line="25" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle.H" bodystart="26" bodyend="91"/>
    <listofallmembers>
      <member refid="structamrex_1_1ParticleIDWrapper_1a54da690d4c9ce6bdf8348a82f66eba6a" prot="public" virt="non-virtual"><scope>amrex::ParticleIDWrapper</scope><name>m_idata</name></member>
      <member refid="structamrex_1_1ParticleIDWrapper_1a3cdec68611dbd36c124a37200d6eb516" prot="public" virt="non-virtual"><scope>amrex::ParticleIDWrapper</scope><name>operator Long</name></member>
      <member refid="structamrex_1_1ParticleIDWrapper_1a9fa4a9ab82a49b53fce7c12cf1a2c108" prot="public" virt="non-virtual"><scope>amrex::ParticleIDWrapper</scope><name>operator=</name></member>
      <member refid="structamrex_1_1ParticleIDWrapper_1a4d2982f670339f79e2fd37622f27b3c4" prot="public" virt="non-virtual"><scope>amrex::ParticleIDWrapper</scope><name>operator=</name></member>
      <member refid="structamrex_1_1ParticleIDWrapper_1a822b71d351b9a073d243639441c544bc" prot="public" virt="non-virtual"><scope>amrex::ParticleIDWrapper</scope><name>operator=</name></member>
      <member refid="structamrex_1_1ParticleIDWrapper_1a70c96c85021171e8ca0e31b75ba26885" prot="public" virt="non-virtual"><scope>amrex::ParticleIDWrapper</scope><name>ParticleIDWrapper</name></member>
      <member refid="structamrex_1_1ParticleIDWrapper_1a1be128a081a654e36673ae143e0c78cb" prot="public" virt="non-virtual"><scope>amrex::ParticleIDWrapper</scope><name>ParticleIDWrapper</name></member>
      <member refid="structamrex_1_1ParticleIDWrapper_1abe6eaeb579f55deb9eea2375bf0cdb4b" prot="public" virt="non-virtual"><scope>amrex::ParticleIDWrapper</scope><name>ParticleIDWrapper</name></member>
      <member refid="structamrex_1_1ParticleIDWrapper_1a421b8df4ba4bef283d8b812c8a35e976" prot="public" virt="non-virtual"><scope>amrex::ParticleIDWrapper</scope><name>~ParticleIDWrapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
