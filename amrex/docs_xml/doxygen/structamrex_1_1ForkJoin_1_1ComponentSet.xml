<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structamrex_1_1ForkJoin_1_1ComponentSet" kind="struct" language="C++" prot="public">
    <compoundname>amrex::ForkJoin::ComponentSet</compoundname>
    <includes refid="AMReX__ForkJoin_8H" local="no">AMReX_ForkJoin.H</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1ForkJoin_1_1ComponentSet_1a12a2ef93337b59b9371db5f9bc43be69" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::ForkJoin::ComponentSet::lo</definition>
        <argsstring></argsstring>
        <name>lo</name>
        <briefdescription>
<para>inclusive bound </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" line="27" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1ForkJoin_1_1ComponentSet_1aa6ebc6ce0f58172561258c343c9b0921" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::ForkJoin::ComponentSet::hi</definition>
        <argsstring></argsstring>
        <name>hi</name>
        <briefdescription>
<para>exclusive bound </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" line="28" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1ForkJoin_1_1ComponentSet_1af2f4c74446fd82b0a03403dcbecb6e7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::ForkJoin::ComponentSet::ComponentSet</definition>
        <argsstring>()</argsstring>
        <name>ComponentSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>for now, just support contiguous range of components only requires a single <ref refid="classamrex_1_1MultiFab_1ab70ce65ff46ae21b8cc4e0584fe26ffa" kindref="member">MultiFab::Copy()</ref> per task this way in the future, consider changing this to a true set for arbitrary components </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" line="25" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1ForkJoin_1_1ComponentSet_1a7d0fbbb79ec0286ab72dfe0d23116573" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>amrex::ForkJoin::ComponentSet::ComponentSet</definition>
        <argsstring>(int lo_, int hi_)</argsstring>
        <name>ComponentSet</name>
        <param>
          <type>int</type>
          <declname>lo_</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hi_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" line="26" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" bodystart="26" bodyend="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>if strategy == split, use this to specify how to split components across tasks </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" line="21" column="1" bodyfile="/home/travis/build/AMReX-Codes/amrex/Src/Base/AMReX_ForkJoin.H" bodystart="21" bodyend="29"/>
    <listofallmembers>
      <member refid="structamrex_1_1ForkJoin_1_1ComponentSet_1af2f4c74446fd82b0a03403dcbecb6e7d" prot="public" virt="non-virtual"><scope>amrex::ForkJoin::ComponentSet</scope><name>ComponentSet</name></member>
      <member refid="structamrex_1_1ForkJoin_1_1ComponentSet_1a7d0fbbb79ec0286ab72dfe0d23116573" prot="public" virt="non-virtual"><scope>amrex::ForkJoin::ComponentSet</scope><name>ComponentSet</name></member>
      <member refid="structamrex_1_1ForkJoin_1_1ComponentSet_1aa6ebc6ce0f58172561258c343c9b0921" prot="public" virt="non-virtual"><scope>amrex::ForkJoin::ComponentSet</scope><name>hi</name></member>
      <member refid="structamrex_1_1ForkJoin_1_1ComponentSet_1a12a2ef93337b59b9371db5f9bc43be69" prot="public" virt="non-virtual"><scope>amrex::ForkJoin::ComponentSet</scope><name>lo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
