<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structamrex_1_1algoim_1_1PsiCode" kind="struct" language="C++" prot="public">
    <compoundname>amrex::algoim::PsiCode</compoundname>
    <includes refid="AMReX__algoim__K_8H" local="no">AMReX_algoim_K.H</includes>
    <templateparamlist>
      <param>
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1algoim_1_1PsiCode_1a80ddd826639ec72c71ba72a3c6dfc09a" prot="public" static="no" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char amrex::algoim::PsiCode&lt; N &gt;::bits</definition>
        <argsstring></argsstring>
        <name>bits</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="159" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="159" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structamrex_1_1algoim_1_1PsiCode_1ac0b4e0c04c778ce82f9097ed209d05f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> constexpr</type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE constexpr amrex::algoim::PsiCode&lt; N &gt;::PsiCode</definition>
        <argsstring>() noexcept</argsstring>
        <name>PsiCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="162" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1algoim_1_1PsiCode_1ac85d103050ea6acd04b2a2b4e55ee8d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::algoim::PsiCode&lt; N &gt;::PsiCode</definition>
        <argsstring>(const GpuArray&lt; int, N &gt; &amp;sides, int sign) noexcept</argsstring>
        <name>PsiCode</name>
        <param>
          <type>const <ref refid="structamrex_1_1GpuArray" kindref="compound">GpuArray</ref>&lt; <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref>, N &gt; &amp;</type>
          <declname>sides</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="165" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="165" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1algoim_1_1PsiCode_1a791226bc3dff2637e4a5dacb30c25ec0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::algoim::PsiCode&lt; N &gt;::PsiCode</definition>
        <argsstring>(const PsiCode &amp;i, int dim, int side, int sign) noexcept</argsstring>
        <name>PsiCode</name>
        <param>
          <type>const <ref refid="structamrex_1_1algoim_1_1PsiCode" kindref="compound">PsiCode</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>side</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>sign</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="185" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="185" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1algoim_1_1PsiCode_1a079589b947e48000160801106e65d2fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE int amrex::algoim::PsiCode&lt; N &gt;::side</definition>
        <argsstring>(int dim) const noexcept</argsstring>
        <name>side</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="202" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="structamrex_1_1algoim_1_1PsiCode_1a47d12f0c6eef6f8e1f3f3d205d37c958" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="AMReX__GpuQualifiers_8H_1aac52ee54727d35b2d0033b119a991618" kindref="member">AMREX_GPU_HOST_DEVICE</ref> <ref refid="AMReX__Extension_8H_1a90cf7b81cd61799c87306cad156cc317" kindref="member">AMREX_FORCE_INLINE</ref> <ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE int amrex::algoim::PsiCode&lt; N &gt;::sign</definition>
        <argsstring>() const noexcept</argsstring>
        <name>sign</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="208" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="208" bodyend="211"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" line="158" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim_K.H" bodystart="157" bodyend="212"/>
    <listofallmembers>
      <member refid="structamrex_1_1algoim_1_1PsiCode_1a80ddd826639ec72c71ba72a3c6dfc09a" prot="public" virt="non-virtual"><scope>amrex::algoim::PsiCode</scope><name>bits</name></member>
      <member refid="structamrex_1_1algoim_1_1PsiCode_1ac0b4e0c04c778ce82f9097ed209d05f2" prot="public" virt="non-virtual"><scope>amrex::algoim::PsiCode</scope><name>PsiCode</name></member>
      <member refid="structamrex_1_1algoim_1_1PsiCode_1ac85d103050ea6acd04b2a2b4e55ee8d4" prot="public" virt="non-virtual"><scope>amrex::algoim::PsiCode</scope><name>PsiCode</name></member>
      <member refid="structamrex_1_1algoim_1_1PsiCode_1a791226bc3dff2637e4a5dacb30c25ec0" prot="public" virt="non-virtual"><scope>amrex::algoim::PsiCode</scope><name>PsiCode</name></member>
      <member refid="structamrex_1_1algoim_1_1PsiCode_1a079589b947e48000160801106e65d2fe" prot="public" virt="non-virtual"><scope>amrex::algoim::PsiCode</scope><name>side</name></member>
      <member refid="structamrex_1_1algoim_1_1PsiCode_1a47d12f0c6eef6f8e1f3f3d205d37c958" prot="public" virt="non-virtual"><scope>amrex::algoim::PsiCode</scope><name>sign</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
