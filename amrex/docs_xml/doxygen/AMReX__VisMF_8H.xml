<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="AMReX__VisMF_8H" kind="file" language="C++">
    <compoundname>AMReX_VisMF.H</compoundname>
    <includes local="no">AMReX_Config.H</includes>
    <includes refid="AMReX__AsyncOut_8H" local="no">AMReX_AsyncOut.H</includes>
    <includes refid="AMReX__BLProfiler_8H" local="no">AMReX_BLProfiler.H</includes>
    <includes refid="AMReX__FabArray_8H" local="no">AMReX_FabArray.H</includes>
    <includes refid="AMReX__FArrayBox_8H" local="no">AMReX_FArrayBox.H</includes>
    <includes refid="AMReX__FabConv_8H" local="no">AMReX_FabConv.H</includes>
    <includes refid="AMReX__NFiles_8H" local="no">AMReX_NFiles.H</includes>
    <includes refid="AMReX__ParallelDescriptor_8H" local="no">AMReX_ParallelDescriptor.H</includes>
    <includes refid="AMReX__VisMFBuffer_8H" local="no">AMReX_VisMFBuffer.H</includes>
    <includes local="no">fstream</includes>
    <includes local="no">iostream</includes>
    <includes local="no">sstream</includes>
    <includes local="no">deque</includes>
    <includes local="no">map</includes>
    <includes local="no">numeric</includes>
    <includes local="no">string</includes>
    <includes local="no">type_traits</includes>
    <includedby refid="AMReX__AmrLevel_8cpp" local="no">/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp</includedby>
    <includedby refid="AMReX__AmrLevel_8H" local="no">/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H</includedby>
    <includedby refid="AMReX__StateData_8H" local="no">/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateData.H</includedby>
    <includedby refid="AMReX_8cpp" local="no">/home/runner/work/amrex/amrex/Src/Base/AMReX.cpp</includedby>
    <includedby refid="AMReX__BLBackTrace_8cpp" local="no">/home/runner/work/amrex/amrex/Src/Base/AMReX_BLBackTrace.cpp</includedby>
    <includedby refid="AMReX__DistributionMapping_8cpp" local="no">/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.cpp</includedby>
    <includedby refid="AMReX__PlotFileDataImpl_8cpp" local="no">/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileDataImpl.cpp</includedby>
    <includedby refid="AMReX__PlotFileDataImpl_8H" local="no">/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileDataImpl.H</includedby>
    <includedby refid="AMReX__PlotFileUtil_8cpp" local="no">/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileUtil.cpp</includedby>
    <includedby refid="AMReX__VisMF_8cpp" local="no">/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMF.cpp</includedby>
    <includedby refid="AMReX__FabSet_8cpp" local="no">/home/runner/work/amrex/amrex/Src/Boundary/AMReX_FabSet.cpp</includedby>
    <includedby refid="AMReX__EB2__Level_8H" local="no">/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H</includedby>
    <includedby refid="AMReX__EBMultiFabUtil_8cpp" local="no">/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMultiFabUtil.cpp</includedby>
    <includedby refid="AMReX__AmrData_8cpp" local="no">/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp</includedby>
    <includedby refid="AMReX__AmrData_8H" local="no">/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H</includedby>
    <includedby refid="AMReX__WritePlotFile_8cpp" local="no">/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_WritePlotFile.cpp</includedby>
    <includedby refid="AMReX__PlotFileUtilHDF5_8cpp" local="no">/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_PlotFileUtilHDF5.cpp</includedby>
    <includedby refid="AMReX__HypreABecLap3_8cpp" local="no">/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.cpp</includedby>
    <includedby refid="AMReX__HypreNodeLap_8cpp" local="no">/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp</includedby>
    <includedby refid="AMReX__MLCGSolver_8cpp" local="no">/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.cpp</includedby>
    <includedby refid="AMReX__MLLinOp_8H" local="no">/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H</includedby>
    <includedby refid="AMReX__MLMG_8cpp" local="no">/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.cpp</includedby>
    <includedby refid="AMReX__Particles_8H" local="no">/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particles.H</includedby>
    <incdepgraph>
      <node id="64">
        <label>atomic</label>
      </node>
      <node id="88">
        <label>AMReX_Periodicity.H</label>
        <link refid="AMReX__Periodicity_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>AMReX_Algorithm.H</label>
        <link refid="AMReX__Algorithm_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>AMReX_GpuKernelInfo.H</label>
        <link refid="AMReX__GpuKernelInfo_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>AMReX_OpenMP.H</label>
        <link refid="AMReX__OpenMP_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>AMReX_SPACE.H</label>
        <link refid="AMReX__SPACE_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>AMReX_FBI.H</label>
        <link refid="AMReX__FBI_8H"/>
      </node>
      <node id="70">
        <label>iomanip</label>
      </node>
      <node id="4">
        <label>functional</label>
      </node>
      <node id="34">
        <label>limits</label>
      </node>
      <node id="5">
        <label>AMReX_BLProfiler.H</label>
        <link refid="AMReX__BLProfiler_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>AMReX_IndexType.H</label>
        <link refid="AMReX__IndexType_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>AMReX_Functional.H</label>
        <link refid="AMReX__Functional_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>AMReX_BoxArray.H</label>
        <link refid="AMReX__BoxArray_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="141">
        <label>AMReX_FArrayBox.H</label>
        <link refid="AMReX__FArrayBox_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>iterator</label>
      </node>
      <node id="9">
        <label>float.h</label>
      </node>
      <node id="109">
        <label>AMReX_GpuLaunchFunctsG.H</label>
        <link refid="AMReX__GpuLaunchFunctsG_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>AMReX_FabArrayBase.H</label>
        <link refid="AMReX__FabArrayBase_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>AMReX_BLassert.H</label>
        <link refid="AMReX__BLassert_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>AMReX_GpuAssert.H</label>
        <link refid="AMReX__GpuAssert_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>cstdint</label>
      </node>
      <node id="76">
        <label>AMReX_RealBox.H</label>
        <link refid="AMReX__RealBox_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>AMReX_Utility.H</label>
        <link refid="AMReX__Utility_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="138">
        <label>AMReX_FabArrayCommI.H</label>
        <link refid="AMReX__FabArrayCommI_8H"/>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
      </node>
      <node id="114">
        <label>AMReX_GpuAllocators.H</label>
        <link refid="AMReX__GpuAllocators_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>AMReX_GpuReduce.H</label>
        <link refid="AMReX__GpuReduce_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>AMReX_Tuple.H</label>
        <link refid="AMReX__Tuple_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>AMReX_Vector.H</label>
        <link refid="AMReX__Vector_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>AMReX_BLBackTrace.H</label>
        <link refid="AMReX__BLBackTrace_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="116">
        <label>cuda_runtime.h</label>
      </node>
      <node id="26">
        <label>AMReX_GpuTypes.H</label>
        <link refid="AMReX__GpuTypes_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>cmath</label>
      </node>
      <node id="17">
        <label>cassert</label>
      </node>
      <node id="7">
        <label>AMReX_REAL.H</label>
        <link refid="AMReX__REAL_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>stdexcept</label>
      </node>
      <node id="18">
        <label>AMReX_ccse-mpi.H</label>
        <link refid="AMReX__ccse-mpi_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>numeric</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="96">
        <label>AMReX_GpuDevice.H</label>
        <link refid="AMReX__GpuDevice_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>AMReX_AsyncOut.H</label>
        <link refid="AMReX__AsyncOut_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="136">
        <label>AMReX_TagParallelFor.H</label>
        <link refid="AMReX__TagParallelFor_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>map</label>
      </node>
      <node id="68">
        <label>AMReX_ANSIEscCode.H</label>
        <link refid="AMReX__ANSIEscCode_8H"/>
      </node>
      <node id="130">
        <label>unordered_set</label>
      </node>
      <node id="72">
        <label>AMReX_Arena.H</label>
        <link refid="AMReX__Arena_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>AMReX_GpuError.H</label>
        <link refid="AMReX__GpuError_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>AMReX_GpuQualifiers.H</label>
        <link refid="AMReX__GpuQualifiers_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>cfloat</label>
      </node>
      <node id="29">
        <label>AMReX_Dim3.H</label>
        <link refid="AMReX__Dim3_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>AMReX_ParallelContext.H</label>
        <link refid="AMReX__ParallelContext_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>fstream</label>
      </node>
      <node id="53">
        <label>AMReX_BoxList.H</label>
        <link refid="AMReX__BoxList_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>driver_types.h</label>
      </node>
      <node id="1">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMF.H</label>
        <link refid="AMReX__VisMF_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>AMReX_GpuRange.H</label>
        <link refid="AMReX__GpuRange_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>AMReX_GpuControl.H</label>
        <link refid="AMReX__GpuControl_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>AMReX_GpuBuffer.H</label>
        <link refid="AMReX__GpuBuffer_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>AMReX.H</label>
        <link refid="AMReX_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="143">
        <label>AMReX_NFiles.H</label>
        <link refid="AMReX__NFiles_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>AMReX_Random.H</label>
        <link refid="AMReX__Random_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>AMReX_Extension.H</label>
        <link refid="AMReX__Extension_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>AMReX_RandomEngine.H</label>
        <link refid="AMReX__RandomEngine_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>AMReX_MFParallelFor.H</label>
        <link refid="AMReX__MFParallelFor_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>sys/types.h</label>
      </node>
      <node id="112">
        <label>AMReX_GpuAsyncArray.H</label>
        <link refid="AMReX__GpuAsyncArray_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>AMReX_BArena.H</label>
        <link refid="AMReX__BArena_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="133">
        <label>AMReX_Reduce.H</label>
        <link refid="AMReX__Reduce_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>typeinfo</label>
      </node>
      <node id="14">
        <label>AMReX_GpuPrint.H</label>
        <link refid="AMReX__GpuPrint_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>AMReX_Geometry.H</label>
        <link refid="AMReX__Geometry_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>AMReX_MFParallelForG.H</label>
        <link refid="AMReX__MFParallelForG_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="127">
        <label>AMReX_CArena.H</label>
        <link refid="AMReX__CArena_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>AMReX_Config.H</label>
      </node>
      <node id="15">
        <label>cstdio</label>
      </node>
      <node id="140">
        <label>AMReX_PCI.H</label>
        <link refid="AMReX__PCI_8H"/>
      </node>
      <node id="105">
        <label>tuple</label>
      </node>
      <node id="73">
        <label>AMReX_DistributionMapping.H</label>
        <link refid="AMReX__DistributionMapping_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>AMReX_Array4.H</label>
        <link refid="AMReX__Array4_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>AMReX_ParallelDescriptor.H</label>
        <link refid="AMReX__ParallelDescriptor_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>AMReX_Orientation.H</label>
        <link refid="AMReX__Orientation_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>AMReX_GpuLaunchGlobal.H</label>
        <link refid="AMReX__GpuLaunchGlobal_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>AMReX_RealVect.H</label>
        <link refid="AMReX__RealVect_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>stack</label>
      </node>
      <node id="23">
        <label>vector</label>
      </node>
      <node id="106">
        <label>AMReX_Loop.H</label>
        <link refid="AMReX__Loop_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>AMReX_MFIter.H</label>
        <link refid="AMReX__MFIter_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>AMReX_Scan.H</label>
        <link refid="AMReX__Scan_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>utility</label>
      </node>
      <node id="44">
        <label>AMReX_Box.H</label>
        <link refid="AMReX__Box_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>AMReX_BoxDomain.H</label>
        <link refid="AMReX__BoxDomain_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>array</label>
      </node>
      <node id="113">
        <label>AMReX_GpuElixir.H</label>
        <link refid="AMReX__GpuElixir_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>sstream</label>
      </node>
      <node id="117">
        <label>AMReX_GpuContainers.H</label>
        <link refid="AMReX__GpuContainers_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>AMReX_INT.H</label>
        <link refid="AMReX__INT_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>AMReX_GpuLaunch.H</label>
        <link refid="AMReX__GpuLaunch_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>AMReX_GpuAtomic.H</label>
        <link refid="AMReX__GpuAtomic_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>AMReX_GpuLaunchMacrosG.H</label>
        <link refid="AMReX__GpuLaunchMacrosG_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="123">
        <label>AMReX_LayoutData.H</label>
        <link refid="AMReX__LayoutData_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>iosfwd</label>
      </node>
      <node id="32">
        <label>cstdlib</label>
      </node>
      <node id="71">
        <label>AMReX_MakeType.H</label>
        <link refid="AMReX__MakeType_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>AMReX_BaseFab.H</label>
        <link refid="AMReX__BaseFab_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>iostream</label>
      </node>
      <node id="24">
        <label>AMReX_Array.H</label>
        <link refid="AMReX__Array_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>cstddef</label>
      </node>
      <node id="102">
        <label>AMReX_GpuUtility.H</label>
        <link refid="AMReX__GpuUtility_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="145">
        <label>deque</label>
      </node>
      <node id="56">
        <label>unordered_map</label>
      </node>
      <node id="103">
        <label>cuda.h</label>
      </node>
      <node id="46">
        <label>AMReX_IntVect.H</label>
        <link refid="AMReX__IntVect_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>climits</label>
      </node>
      <node id="129">
        <label>mutex</label>
      </node>
      <node id="118">
        <label>AMReX_PODVector.H</label>
        <link refid="AMReX__PODVector_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>chrono</label>
      </node>
      <node id="142">
        <label>AMReX_FabConv.H</label>
        <link refid="AMReX__FabConv_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>csignal</label>
      </node>
      <node id="58">
        <label>AMReX_FabFactory.H</label>
        <link refid="AMReX__FabFactory_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>AMReX_ParallelReduce.H</label>
        <link refid="AMReX__ParallelReduce_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>AMReX_Math.H</label>
        <link refid="AMReX__Math_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>AMReX_Gpu.H</label>
        <link refid="AMReX__Gpu_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
      </node>
      <node id="131">
        <label>AMReX_DataAllocator.H</label>
        <link refid="AMReX__DataAllocator_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>AMReX_GpuMemory.H</label>
        <link refid="AMReX__GpuMemory_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>AMReX_ArrayLim.H</label>
        <link refid="AMReX__ArrayLim_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>AMReX_Exception.H</label>
        <link refid="AMReX__Exception_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>type_traits</label>
      </node>
      <node id="128">
        <label>set</label>
      </node>
      <node id="75">
        <label>AMReX_CoordSys.H</label>
        <link refid="AMReX__CoordSys_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="137">
        <label>AMReX_ParReduce.H</label>
        <link refid="AMReX__ParReduce_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>algorithm</label>
      </node>
      <node id="10">
        <label>AMReX_FabArray.H</label>
        <link refid="AMReX__FabArray_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>AMReX_FileSystem.H</label>
        <link refid="AMReX__FileSystem_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>curand.h</label>
      </node>
      <node id="144">
        <label>AMReX_VisMFBuffer.H</label>
        <link refid="AMReX__VisMFBuffer_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>AMReX_BaseFabUtility.H</label>
        <link refid="AMReX__BaseFabUtility_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>cstring</label>
      </node>
      <node id="121">
        <label>AMReX_CudaGraph.H</label>
        <link refid="AMReX__CudaGraph_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>memory</label>
      </node>
      <node id="111">
        <label>initializer_list</label>
      </node>
      <node id="42">
        <label>inttypes.h</label>
      </node>
      <node id="43">
        <label>AMReX_TypeTraits.H</label>
        <link refid="AMReX__TypeTraits_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>curand_kernel.h</label>
      </node>
      <node id="132">
        <label>AMReX_BoxIterator.H</label>
        <link refid="AMReX__BoxIterator_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>AMReX_Print.H</label>
        <link refid="AMReX__Print_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="53">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.cpp</label>
        <link refid="AMReX__MLTensorOp_8cpp"/>
      </node>
      <node id="45">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.H</label>
        <link refid="AMReX__MLCellLinOp_8H"/>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileUtil.H</label>
        <link refid="AMReX__PlotFileUtil_8H"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.H</label>
        <link refid="AMReX__BLWritePlotFile_8H"/>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.cpp</label>
        <link refid="AMReX__EB2_8cpp"/>
      </node>
      <node id="66">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.H</label>
        <link refid="AMReX__MLCGSolver_8H"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_utils.H</label>
        <link refid="AMReX__EB__utils_8H"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBMultiFabUtil.cpp</label>
        <link refid="AMReX__EBMultiFabUtil_8cpp"/>
      </node>
      <node id="48">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.cpp</label>
        <link refid="AMReX__MLABecLaplacian_8cpp"/>
      </node>
      <node id="15">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileUtil.cpp</label>
        <link refid="AMReX__PlotFileUtil_8cpp"/>
      </node>
      <node id="39">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_WritePlotFile.H</label>
        <link refid="AMReX__WritePlotFile_8H"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateData.H</label>
        <link refid="AMReX__StateData_8H"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.H</label>
        <link refid="AMReX__MLCellABecLap_8H"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_BLBackTrace.cpp</label>
        <link refid="AMReX__BLBackTrace_8cpp"/>
      </node>
      <node id="32">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.cpp</label>
        <link refid="AMReX__AmrData_8cpp"/>
      </node>
      <node id="11">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_DistributionMapping.cpp</label>
        <link refid="AMReX__DistributionMapping_8cpp"/>
      </node>
      <node id="80">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLaplacian.H</label>
        <link refid="AMReX__MLNodeTensorLaplacian_8H"/>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBDataCollection.cpp</label>
        <link refid="AMReX__EBDataCollection_8cpp"/>
      </node>
      <node id="75">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian_hypre.cpp</label>
        <link refid="AMReX__MLNodeLaplacian__hypre_8cpp"/>
      </node>
      <node id="72">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.H</label>
        <link refid="AMReX__MLNodeLaplacian_8H"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBNodeFDLaplacian.H</label>
        <link refid="AMReX__MLEBNodeFDLaplacian_8H"/>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp.H</label>
        <link refid="AMReX__MLTensorOp_8H"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.H</label>
        <link refid="AMReX__MLEBABecLap_8H"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_AmrParticles.H</label>
        <link refid="AMReX__AmrParticles_8H"/>
      </node>
      <node id="81">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLap_K.H</label>
        <link refid="AMReX__MLNodeTensorLap__K_8H"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_ParticleHDF5.H</label>
        <link refid="AMReX__ParticleHDF5_8H"/>
      </node>
      <node id="63">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.H</label>
        <link refid="AMReX__MLPoisson_8H"/>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap_F.cpp</label>
        <link refid="AMReX__MLEBABecLap__F_8cpp"/>
      </node>
      <node id="2">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.cpp</label>
        <link refid="AMReX__AmrLevel_8cpp"/>
      </node>
      <node id="17">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreIJIface.cpp</label>
        <link refid="AMReX__HypreIJIface_8cpp"/>
      </node>
      <node id="60">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.cpp</label>
        <link refid="AMReX__MLEBTensorOp_8cpp"/>
      </node>
      <node id="51">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.cpp</label>
        <link refid="AMReX__MLMG_8cpp"/>
      </node>
      <node id="42">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreNodeLap.cpp</label>
        <link refid="AMReX__HypreNodeLap_8cpp"/>
      </node>
      <node id="8">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_StateData.cpp</label>
        <link refid="AMReX__StateData_8cpp"/>
      </node>
      <node id="89">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticle_mod_K.H</label>
        <link refid="AMReX__TracerParticle__mod__K_8H"/>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMF.H</label>
        <link refid="AMReX__VisMF_8H"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileDataImpl.cpp</label>
        <link refid="AMReX__PlotFileDataImpl_8cpp"/>
      </node>
      <node id="85">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborList.H</label>
        <link refid="AMReX__NeighborList_8H"/>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.cpp</label>
        <link refid="AMReX__MLALaplacian_8cpp"/>
      </node>
      <node id="4">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_Amr.cpp</label>
        <link refid="AMReX__Amr_8cpp"/>
      </node>
      <node id="5">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_LevelBld.H</label>
        <link refid="AMReX__LevelBld_8H"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellLinOp.cpp</label>
        <link refid="AMReX__MLCellLinOp_8cpp"/>
      </node>
      <node id="67">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLMG.H</label>
        <link refid="AMReX__MLMG_8H"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian_sten.cpp</label>
        <link refid="AMReX__MLNodeLaplacian__sten_8cpp"/>
      </node>
      <node id="76">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian_misc.cpp</label>
        <link refid="AMReX__MLNodeLaplacian__misc_8cpp"/>
      </node>
      <node id="87">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particle_mod_K.H</label>
        <link refid="AMReX__Particle__mod__K_8H"/>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLALaplacian.H</label>
        <link refid="AMReX__MLALaplacian_8H"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp.H</label>
        <link refid="AMReX__MLEBTensorOp_8H"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLTensorOp_grad.cpp</label>
        <link refid="AMReX__MLTensorOp__grad_8cpp"/>
      </node>
      <node id="38">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_ProfParserBatch.cpp</label>
        <link refid="AMReX__ProfParserBatch_8cpp"/>
      </node>
      <node id="90">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticles.cpp</label>
        <link refid="AMReX__TracerParticles_8cpp"/>
      </node>
      <node id="79">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.cpp</label>
        <link refid="AMReX__MLNodeLinOp_8cpp"/>
      </node>
      <node id="23">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_algoim.cpp</label>
        <link refid="AMReX__algoim_8cpp"/>
      </node>
      <node id="73">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian.cpp</label>
        <link refid="AMReX__MLNodeLaplacian_8cpp"/>
      </node>
      <node id="16">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_PlotFileUtilHDF5.cpp</label>
        <link refid="AMReX__PlotFileUtilHDF5_8cpp"/>
      </node>
      <node id="18">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HDF5/AMReX_PlotFileUtilHDF5.H</label>
        <link refid="AMReX__PlotFileUtilHDF5_8H"/>
      </node>
      <node id="40">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_WritePlotFile.cpp</label>
        <link refid="AMReX__WritePlotFile_8cpp"/>
      </node>
      <node id="49">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBABecLap.cpp</label>
        <link refid="AMReX__MLEBABecLap_8cpp"/>
      </node>
      <node id="62">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBTensorOp_bc.cpp</label>
        <link refid="AMReX__MLEBTensorOp__bc_8cpp"/>
      </node>
      <node id="57">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLPoisson.cpp</label>
        <link refid="AMReX__MLPoisson_8cpp"/>
      </node>
      <node id="6">
        <label>/home/runner/work/amrex/amrex/Src/Extern/SENSEI/AMReX_AmrDataAdaptor.cpp</label>
        <link refid="AMReX__AmrDataAdaptor_8cpp"/>
      </node>
      <node id="33">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_AmrData.H</label>
        <link refid="AMReX__AmrData_8H"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian_eb.cpp</label>
        <link refid="AMReX__MLNodeLaplacian__eb_8cpp"/>
      </node>
      <node id="22">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2.H</label>
        <link refid="AMReX__EB2_8H"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX.cpp</label>
        <link refid="AMReX_8cpp"/>
      </node>
      <node id="88">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_TracerParticles.H</label>
        <link refid="AMReX__TracerParticles_8H"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBNodeFDLaplacian.cpp</label>
        <link refid="AMReX__MLEBNodeFDLaplacian_8cpp"/>
      </node>
      <node id="27">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EBFabFactory.cpp</label>
        <link refid="AMReX__EBFabFactory_8cpp"/>
      </node>
      <node id="47">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLABecLaplacian.H</label>
        <link refid="AMReX__MLABecLaplacian_8H"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLaplacian_sync.cpp</label>
        <link refid="AMReX__MLNodeLaplacian__sync_8cpp"/>
      </node>
      <node id="58">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCellABecLap.cpp</label>
        <link refid="AMReX__MLCellABecLap_8cpp"/>
      </node>
      <node id="19">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMF.cpp</label>
        <link refid="AMReX__VisMF_8cpp"/>
      </node>
      <node id="35">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_DataServices.cpp</label>
        <link refid="AMReX__DataServices_8cpp"/>
      </node>
      <node id="28">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_WriteEBSurface.cpp</label>
        <link refid="AMReX__WriteEBSurface_8cpp"/>
      </node>
      <node id="65">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.cpp</label>
        <link refid="AMReX__MLLinOp_8cpp"/>
      </node>
      <node id="41">
        <label>/home/runner/work/amrex/amrex/Src/Extern/HYPRE/AMReX_HypreABecLap3.cpp</label>
        <link refid="AMReX__HypreABecLap3_8cpp"/>
      </node>
      <node id="43">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLCGSolver.cpp</label>
        <link refid="AMReX__MLCGSolver_8cpp"/>
      </node>
      <node id="20">
        <label>/home/runner/work/amrex/amrex/Src/Boundary/AMReX_FabSet.cpp</label>
        <link refid="AMReX__FabSet_8cpp"/>
      </node>
      <node id="29">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.cpp</label>
        <link refid="AMReX__EB2__Level_8cpp"/>
      </node>
      <node id="44">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLLinOp.H</label>
        <link refid="AMReX__MLLinOp_8H"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_WriteBinaryParticleData.H</label>
        <link refid="AMReX__WriteBinaryParticleData_8H"/>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/home/runner/work/amrex/amrex/Src/Base/AMReX_PlotFileDataImpl.H</label>
        <link refid="AMReX__PlotFileDataImpl_8H"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB2_Level.H</label>
        <link refid="AMReX__EB2__Level_8H"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_Particles.H</label>
        <link refid="AMReX__Particles_8H"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLEBNodeFDLap_K.H</label>
        <link refid="AMReX__MLEBNodeFDLap__K_8H"/>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeTensorLaplacian.cpp</label>
        <link refid="AMReX__MLNodeTensorLaplacian_8cpp"/>
      </node>
      <node id="37">
        <label>/home/runner/work/amrex/amrex/Src/Extern/ProfParser/AMReX_BLWritePlotFile.cpp</label>
        <link refid="AMReX__BLWritePlotFile_8cpp"/>
      </node>
      <node id="68">
        <label>/home/runner/work/amrex/amrex/Src/LinearSolvers/MLMG/AMReX_MLNodeLinOp.H</label>
        <link refid="AMReX__MLNodeLinOp_8H"/>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/runner/work/amrex/amrex/Src/Amr/AMReX_AmrLevel.H</label>
        <link refid="AMReX__AmrLevel_8H"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_ParticleIO.H</label>
        <link refid="AMReX__ParticleIO_8H"/>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>/home/runner/work/amrex/amrex/Src/EB/AMReX_EB_utils.cpp</label>
        <link refid="AMReX__EB__utils_8cpp"/>
      </node>
      <node id="34">
        <label>/home/runner/work/amrex/amrex/Src/Extern/amrdata/AMReX_DataServices.H</label>
        <link refid="AMReX__DataServices_8H"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>/home/runner/work/amrex/amrex/Src/Particle/AMReX_NeighborParticles.H</label>
        <link refid="AMReX__NeighborParticles_8H"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classamrex_1_1VisMF" prot="public">amrex::VisMF</innerclass>
    <innerclass refid="structamrex_1_1VisMF_1_1FabOnDisk" prot="public">amrex::VisMF::FabOnDisk</innerclass>
    <innerclass refid="structamrex_1_1VisMF_1_1Header" prot="public">amrex::VisMF::Header</innerclass>
    <innerclass refid="structamrex_1_1VisMF_1_1FabReadLink" prot="public">amrex::VisMF::FabReadLink</innerclass>
    <innerclass refid="structamrex_1_1VisMF_1_1PersistentIFStream" prot="public">amrex::VisMF::PersistentIFStream</innerclass>
    <innernamespace refid="namespaceamrex">amrex</innernamespace>
    <innernamespace refid="namespaceamrex_1_1detail">amrex::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>AMREX_VISMF_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AMREX_VISMF_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;AMReX_Config.H&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__AsyncOut_8H" kindref="compound">AMReX_AsyncOut.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__BLProfiler_8H" kindref="compound">AMReX_BLProfiler.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__FabArray_8H" kindref="compound">AMReX_FabArray.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__FArrayBox_8H" kindref="compound">AMReX_FArrayBox.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__FabConv_8H" kindref="compound">AMReX_FabConv.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__NFiles_8H" kindref="compound">AMReX_NFiles.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__ParallelDescriptor_8H" kindref="compound">AMReX_ParallelDescriptor.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AMReX__VisMFBuffer_8H" kindref="compound">AMReX_VisMFBuffer.H</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;deque&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceamrex" kindref="compound">amrex</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">IArrayBox;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classamrex_1_1VisMF" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classamrex_1_1VisMF" kindref="compound">VisMF</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMFBuffer" kindref="compound">VisMFBuffer</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42" refid="classamrex_1_1VisMF_1aa50a3ce471ac0bdf8f78134f0004e156a93fcd009ee92168a4e419161fc19635b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1aa50a3ce471ac0bdf8f78134f0004e156" kindref="member">How</ref><sp/>{<sp/><ref refid="classamrex_1_1VisMF_1aa50a3ce471ac0bdf8f78134f0004e156a93fcd009ee92168a4e419161fc19635b" kindref="member">OneFilePerCPU</ref>,<sp/><ref refid="classamrex_1_1VisMF_1aa50a3ce471ac0bdf8f78134f0004e156a167fa24b841257fa58af35b658f5d6c1" kindref="member">NFiles</ref><sp/>};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1ae372e9dede4ddc3c4c271118812e9b39" kindref="member">VisMF</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fafab_name);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1VisMF_1adae69cdb339309e76cfb37486e60ffe4" kindref="member">~VisMF</ref><sp/>();</highlight></codeline>
<codeline lineno="52" refid="structamrex_1_1VisMF_1_1FabOnDisk" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1VisMF_1_1FabOnDisk" kindref="compound">FabOnDisk</ref></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1FabOnDisk_1a909e67bdc85c7a669788ae3144c7709a" kindref="member">FabOnDisk</ref><sp/>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1FabOnDisk_1a909e67bdc85c7a669788ae3144c7709a" kindref="member">FabOnDisk</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/>Long<sp/>offset);</highlight></codeline>
<codeline lineno="59" refid="structamrex_1_1VisMF_1_1FabOnDisk_1a3384af022eabbdadda0f20d0bda79ebe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structamrex_1_1VisMF_1_1FabOnDisk_1a3384af022eabbdadda0f20d0bda79ebe" kindref="member">m_name</ref>;<sp/></highlight></codeline>
<codeline lineno="60" refid="structamrex_1_1VisMF_1_1FabOnDisk_1a2592709514015ee6c2e68a254a2b5806" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1FabOnDisk_1a2592709514015ee6c2e68a254a2b5806" kindref="member">m_head</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="63" refid="structamrex_1_1VisMF_1_1Header" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1VisMF_1_1Header" kindref="compound">Header</ref></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66" refid="structamrex_1_1VisMF_1_1Header_1aa4469030a55d4e3be552189f7d06b54d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1VisMF_1_1Header_1aa4469030a55d4e3be552189f7d06b54d" kindref="member">Version</ref><sp/>{</highlight></codeline>
<codeline lineno="67" refid="structamrex_1_1VisMF_1_1Header_1aa4469030a55d4e3be552189f7d06b54da3394365084045ae347fad00a360767d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1Header_1aa4469030a55d4e3be552189f7d06b54da3394365084045ae347fad00a360767d8" kindref="member">Undefined_v1</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,<sp/><sp/></highlight></codeline>
<codeline lineno="68" refid="structamrex_1_1VisMF_1_1Header_1aa4469030a55d4e3be552189f7d06b54dad8a8b7451642ebbf0f06d98d6aec42c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1Header_1aa4469030a55d4e3be552189f7d06b54dad8a8b7451642ebbf0f06d98d6aec42c5" kindref="member">Version_v1</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1,<sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1Header_1aa4469030a55d4e3be552189f7d06b54da10ec66a6475783b69e6c646e53a89cc5" kindref="member">NoFabHeader_v1</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2,<sp/><sp/></highlight></codeline>
<codeline lineno="72" refid="structamrex_1_1VisMF_1_1Header_1aa4469030a55d4e3be552189f7d06b54da27bc8d82bb52f548646a14b92cf8f43f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1Header_1aa4469030a55d4e3be552189f7d06b54da27bc8d82bb52f548646a14b92cf8f43f" kindref="member">NoFabHeaderMinMax_v1</ref><sp/><sp/><sp/>=<sp/>3,<sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1Header_1aa4469030a55d4e3be552189f7d06b54daea230534883ebe9d77fc2c31aeab4589" kindref="member">NoFabHeaderFAMinMax_v1</ref><sp/>=<sp/>4<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1Header_1ac047b91f6a9bf22efc30801bfc4b4452" kindref="member">Header</ref><sp/>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1Header_1ac047b91f6a9bf22efc30801bfc4b4452" kindref="member">Header</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FArrayBox&gt;</ref>&amp;<sp/>fafab,<sp/><ref refid="classamrex_1_1VisMF_1aa50a3ce471ac0bdf8f78134f0004e156" kindref="member">VisMF::How</ref><sp/>how,<sp/><ref refid="structamrex_1_1VisMF_1_1Header_1aa4469030a55d4e3be552189f7d06b54d" kindref="member">Version</ref><sp/>version<sp/>=<sp/><ref refid="structamrex_1_1VisMF_1_1Header_1aa4469030a55d4e3be552189f7d06b54dad8a8b7451642ebbf0f06d98d6aec42c5" kindref="member">Version_v1</ref>,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>calcMinMax<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a0f53686fc6a6b7dca69c230fd1336e44" kindref="member">ParallelDescriptor::Communicator</ref>());</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1Header_1ac047b91f6a9bf22efc30801bfc4b4452" kindref="member">Header</ref><sp/>(<ref refid="structamrex_1_1VisMF_1_1Header" kindref="compound">Header</ref>&amp;&amp;<sp/>rhs)<sp/>noexcept<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1VisMF_1_1Header_1a67ebe2f805154bc932ce0d58aebf9e62" kindref="member">CalculateMinMax</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FArrayBox&gt;</ref>&amp;<sp/>fafab,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>procToWrite<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ab734a5d614e753d28d03865ee6e4039a" kindref="member">ParallelDescriptor::IOProcessorNumber</ref>(),</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref><sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a0f53686fc6a6b7dca69c230fd1336e44" kindref="member">ParallelDescriptor::Communicator</ref>());</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="structamrex_1_1VisMF_1_1Header_1aacee1781de8865ef3c3eb1d282bc6f9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1Header_1aacee1781de8865ef3c3eb1d282bc6f9b" kindref="member">m_vers</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="93" refid="structamrex_1_1VisMF_1_1Header_1acd1a09adb4489f55771a680dd2cc9d43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1VisMF_1aa50a3ce471ac0bdf8f78134f0004e156" kindref="member">How</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1Header_1acd1a09adb4489f55771a680dd2cc9d43" kindref="member">m_how</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94" refid="structamrex_1_1VisMF_1_1Header_1ae01923bcfc09d7f3aab7f68c9380c54e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1Header_1ae01923bcfc09d7f3aab7f68c9380c54e" kindref="member">m_ncomp</ref>;<sp/></highlight></codeline>
<codeline lineno="95" refid="structamrex_1_1VisMF_1_1Header_1aeca546f429ec75acace53426c6907257" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1Header_1aeca546f429ec75acace53426c6907257" kindref="member">m_ngrow</ref>;<sp/></highlight></codeline>
<codeline lineno="96" refid="structamrex_1_1VisMF_1_1Header_1ab62ef15c4a342cc3eb61e116b23bd285" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1Header_1ab62ef15c4a342cc3eb61e116b23bd285" kindref="member">m_ba</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97" refid="structamrex_1_1VisMF_1_1Header_1ad91e0c829d8420c6f1d3b101d36a4016" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt; FabOnDisk &gt;</ref><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1Header_1ad91e0c829d8420c6f1d3b101d36a4016" kindref="member">m_fod</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>not<sp/>defined<sp/>if<sp/>they<sp/>are<sp/>not<sp/>in<sp/>the<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="structamrex_1_1VisMF_1_1Header_1a321215a8ba0e8ef28744b61bdd15d0d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt; Vector&lt;Real&gt;</ref><sp/>&gt;<sp/><ref refid="structamrex_1_1VisMF_1_1Header_1a321215a8ba0e8ef28744b61bdd15d0d4" kindref="member">m_min</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102" refid="structamrex_1_1VisMF_1_1Header_1abfc04c1de628cba28c97f597fd5e9448" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt; Vector&lt;Real&gt;</ref><sp/>&gt;<sp/><ref refid="structamrex_1_1VisMF_1_1Header_1abfc04c1de628cba28c97f597fd5e9448" kindref="member">m_max</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103" refid="structamrex_1_1VisMF_1_1Header_1afaf3496aa1e0bce82336411d0ee67fb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Real&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1Header_1afaf3496aa1e0bce82336411d0ee67fb6" kindref="member">m_famin</ref>;<sp/></highlight></codeline>
<codeline lineno="104" refid="structamrex_1_1VisMF_1_1Header_1a7f2c6b837b0a29af54ae8280eb42c8c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Real&gt;</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1Header_1a7f2c6b837b0a29af54ae8280eb42c8c9" kindref="member">m_famax</ref>;<sp/></highlight></codeline>
<codeline lineno="105" refid="structamrex_1_1VisMF_1_1Header_1ae83557a09400cdcb97b0220b3ced8d43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1RealDescriptor" kindref="compound">RealDescriptor</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1Header_1ae83557a09400cdcb97b0220b3ced8d43" kindref="member">m_writtenRD</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="structamrex_1_1VisMF_1_1FabReadLink" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1VisMF_1_1FabReadLink" kindref="compound">FabReadLink</ref></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111" refid="structamrex_1_1VisMF_1_1FabReadLink_1a6064cc4034c3d95989892cac82c68fea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1VisMF_1_1FabReadLink_1a6064cc4034c3d95989892cac82c68fea" kindref="member">rankToRead</ref>;</highlight></codeline>
<codeline lineno="112" refid="structamrex_1_1VisMF_1_1FabReadLink_1afdb4b80e717d79ddc293c138b190fb51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1VisMF_1_1FabReadLink_1afdb4b80e717d79ddc293c138b190fb51" kindref="member">faIndex</ref>;</highlight></codeline>
<codeline lineno="113" refid="structamrex_1_1VisMF_1_1FabReadLink_1ae58b44ddc77631e4a5829b09e61a0236" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/><ref refid="structamrex_1_1VisMF_1_1FabReadLink_1ae58b44ddc77631e4a5829b09e61a0236" kindref="member">fileOffset</ref>;</highlight></codeline>
<codeline lineno="114" refid="structamrex_1_1VisMF_1_1FabReadLink_1ad40376645132122ecd967a0473681454" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/><ref refid="structamrex_1_1VisMF_1_1FabReadLink_1ad40376645132122ecd967a0473681454" kindref="member">box</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1FabReadLink_1aeee5f5176e21e2ad5da2899f49571e92" kindref="member">FabReadLink</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1FabReadLink_1aeee5f5176e21e2ad5da2899f49571e92" kindref="member">FabReadLink</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ranktoread,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>faindex,<sp/>Long<sp/>fileoffset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Box" kindref="compound">Box</ref><sp/>&amp;b);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="structamrex_1_1VisMF_1_1PersistentIFStream" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structamrex_1_1VisMF_1_1PersistentIFStream" kindref="compound">PersistentIFStream</ref></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123" refid="structamrex_1_1VisMF_1_1PersistentIFStream_1ac1215d1effdf6c549d4d06a61004880d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ifstream<sp/><sp/><sp/>*<ref refid="structamrex_1_1VisMF_1_1PersistentIFStream_1ac1215d1effdf6c549d4d06a61004880d" kindref="member">pstr</ref>;</highlight></codeline>
<codeline lineno="124" refid="structamrex_1_1VisMF_1_1PersistentIFStream_1a85eca5ae503569f1b40b8d4bac373997" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::streampos<sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1PersistentIFStream_1a85eca5ae503569f1b40b8d4bac373997" kindref="member">currentPosition</ref>;</highlight></codeline>
<codeline lineno="125" refid="structamrex_1_1VisMF_1_1PersistentIFStream_1ac1ecab1d0722305f0a0257611aeb1bde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1PersistentIFStream_1ac1ecab1d0722305f0a0257611aeb1bde" kindref="member">isOpen</ref>;</highlight></codeline>
<codeline lineno="126" refid="structamrex_1_1VisMF_1_1PersistentIFStream_1a1e023351bf031aee0da7cc17272716ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1VisMFBuffer_1a46ec3da728028902559f9f9d552c0565" kindref="member">VisMF::IO_Buffer</ref><sp/><ref refid="structamrex_1_1VisMF_1_1PersistentIFStream_1a1e023351bf031aee0da7cc17272716ae" kindref="member">ioBuffer</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1PersistentIFStream_1a7634d6a3d98fa43f320f1c2b507ebc85" kindref="member">PersistentIFStream</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1PersistentIFStream_1a0e26d493a95283a9a5e195cda5453bc1" kindref="member">~PersistentIFStream</ref>();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::ifstream<sp/>*<ref refid="classamrex_1_1VisMF_1a1f7ef6b7304a0ff3dd4df629cef4971e" kindref="member">OpenStream</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;fileName);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a9f63d703f45cf3be27c339a38d893796" kindref="member">CloseStream</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;fileName,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forceClose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a6a1a78975e5decf1c7aae4555a240628" kindref="member">DeleteStream</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;fileName);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a3eb747b7ba5f46a315650c84c1162418" kindref="member">CloseAllStreams</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1af7f852d2d1e0656e85e58dcf5ba364b1" kindref="member">NoFabHeader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1VisMF_1_1Header" kindref="compound">VisMF::Header</ref><sp/>&amp;hdr);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1adec7196972698a4a61e5d5eed628aa8c" kindref="member">nComp</ref><sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a887f01ad484d73b2eaab8ef3e9568d88" kindref="member">nGrow</ref><sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/><ref refid="classamrex_1_1VisMF_1a07b1ead2f2b6a21362bcfbe6fa0cc784" kindref="member">nGrowVect</ref><sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a4d78a01bd23f19f9a1e0289490d79cfc" kindref="member">size</ref><sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref>&amp;<sp/><ref refid="classamrex_1_1VisMF_1a27de055318e371ff5be7e5b2768abbae" kindref="member">boxArray</ref><sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><ref refid="classamrex_1_1VisMF_1ae085e236dab30e007b0618d4e4ef6c2d" kindref="member">min</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fabIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1adec7196972698a4a61e5d5eed628aa8c" kindref="member">nComp</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><ref refid="classamrex_1_1VisMF_1ae085e236dab30e007b0618d4e4ef6c2d" kindref="member">min</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1adec7196972698a4a61e5d5eed628aa8c" kindref="member">nComp</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><ref refid="classamrex_1_1VisMF_1a110072536de1d4531dcd88a766c41ac9" kindref="member">max</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fabIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1adec7196972698a4a61e5d5eed628aa8c" kindref="member">nComp</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>Real<sp/><ref refid="classamrex_1_1VisMF_1a110072536de1d4531dcd88a766c41ac9" kindref="member">max</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1adec7196972698a4a61e5d5eed628aa8c" kindref="member">nComp</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref>&amp;<sp/><ref refid="classamrex_1_1VisMF_1a6849db338a0e6174a0b39b5e483b74b9" kindref="member">GetFab</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fabIndex,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compIndex)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1ab3c166ef170fe72fdda5fab9cd9176e0" kindref="member">clear</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fabIndex,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compIndex);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1ab3c166ef170fe72fdda5fab9cd9176e0" kindref="member">clear</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fabIndex);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1ab3c166ef170fe72fdda5fab9cd9176e0" kindref="member">clear</ref><sp/>();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Long<sp/><ref refid="classamrex_1_1VisMF_1a527bd21764fd10a8fb440b897e30c12a" kindref="member">Write</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FArrayBox&gt;</ref><sp/>&amp;fafab,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1VisMF_1aa50a3ce471ac0bdf8f78134f0004e156" kindref="member">VisMF::How</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>how<sp/>=<sp/><ref refid="classamrex_1_1VisMF_1aa50a3ce471ac0bdf8f78134f0004e156a167fa24b841257fa58af35b658f5d6c1" kindref="member">NFiles</ref>,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_ghost<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1aa912ecd1d879bd8fc207f4a1a5772bed" kindref="member">AsyncWrite</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FArrayBox&gt;</ref>&amp;<sp/>mf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>mf_name,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>valid_cells_only<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1aa912ecd1d879bd8fc207f4a1a5772bed" kindref="member">AsyncWrite</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FArrayBox&gt;</ref>&amp;&amp;<sp/>mf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>mf_name,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>valid_cells_only<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Long<sp/><ref refid="classamrex_1_1VisMF_1a8807abfd4ec1e3790a765096f2d6b724" kindref="member">WriteOnlyHeader</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FArrayBox&gt;</ref><sp/>&amp;<sp/>mf,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<sp/>mf_name,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1VisMF_1aa50a3ce471ac0bdf8f78134f0004e156" kindref="member">VisMF::How</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>how<sp/>=<sp/><ref refid="classamrex_1_1VisMF_1aa50a3ce471ac0bdf8f78134f0004e156a167fa24b841257fa58af35b658f5d6c1" kindref="member">NFiles</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1ad4a180abf07b6a7129d8fd4f6ee0d798" kindref="member">RemoveFiles</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a4ee12165f32372e900a0f0967a344708" kindref="member">verbose</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a584871b7013d4d9e46d16eb6d53803ed" kindref="member">Read</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FArrayBox&gt;</ref><sp/>&amp;fafab,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*faHeader<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coordinatorProc<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ab734a5d614e753d28d03865ee6e4039a" kindref="member">ParallelDescriptor::IOProcessorNumber</ref>(),</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>allow_empty_mf<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1ab895515b73ef0cdc6d0e06c7590f3e76" kindref="member">Exist</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1abdcbffdd50b28342be875ac0da817056" kindref="member">ReadFAHeader</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;fafabName,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;char&gt;</ref><sp/>&amp;header);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1ae12f838572701049902254dfb46eb650" kindref="member">Check</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Long<sp/><ref refid="classamrex_1_1VisMF_1a1b41ff82637f2e2f4dd33f27a0d62ad1" kindref="member">FileOffset</ref><sp/>(std::ostream&amp;<sp/>os);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref>*<sp/><ref refid="classamrex_1_1VisMF_1af49a2c7b6fd6fdf8f80c84004317f002" kindref="member">readFAB</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fabIndex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fafabName);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref>*<sp/><ref refid="classamrex_1_1VisMF_1af49a2c7b6fd6fdf8f80c84004317f002" kindref="member">readFAB</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fabIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>icomp);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1VisMF_1a73b516dcb8729a411f75eaa5d7fc1b54" kindref="member">GetNOutFiles</ref><sp/>();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1aeea445c6cb42961bb091d40ee7545607" kindref="member">SetNOutFiles</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newoutfiles,<sp/><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref><sp/>comm<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a0f53686fc6a6b7dca69c230fd1336e44" kindref="member">ParallelDescriptor::Communicator</ref>());</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="classamrex_1_1VisMF_1a738d789073dd1072ac3a0c640429574c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="classamrex_1_1VisMF_1a738d789073dd1072ac3a0c640429574c" kindref="member">GetMFFileInStreams</ref><sp/>()<sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1abfbb2ed9c1aa1c00786e7ae2218f0b0f" kindref="member">nMFFileInStreams</ref>;<sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1abda03b733e4f5e0b9f005f764f1a5b65" kindref="member">SetMFFileInStreams</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nstreams,<sp/><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref><sp/>comm<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a0f53686fc6a6b7dca69c230fd1336e44" kindref="member">ParallelDescriptor::Communicator</ref>());</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="classamrex_1_1VisMF_1a51041736815ed12616b075d56e53fd2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a51041736815ed12616b075d56e53fd2f" kindref="member">GetVerbose</ref><sp/>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a4ee12165f32372e900a0f0967a344708" kindref="member">verbose</ref>;<sp/>}</highlight></codeline>
<codeline lineno="243" refid="classamrex_1_1VisMF_1a998f1813f57b8415140b26966fd0f86c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a998f1813f57b8415140b26966fd0f86c" kindref="member">SetVerbose</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v)<sp/>{<sp/><ref refid="classamrex_1_1VisMF_1a4ee12165f32372e900a0f0967a344708" kindref="member">verbose</ref><sp/>=<sp/>v;<sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="classamrex_1_1VisMF_1a5be9ce5dc3ed0083f7959e63528de583" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1VisMF_1_1Header_1aa4469030a55d4e3be552189f7d06b54d" kindref="member">VisMF::Header::Version</ref><sp/><ref refid="classamrex_1_1VisMF_1a5be9ce5dc3ed0083f7959e63528de583" kindref="member">GetHeaderVersion</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a7f4058d4117af92e70d889263657e9f8" kindref="member">currentVersion</ref>;<sp/>}</highlight></codeline>
<codeline lineno="246" refid="classamrex_1_1VisMF_1a2ce0e613077c3ec9c4c687628154c5ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a2ce0e613077c3ec9c4c687628154c5ce" kindref="member">SetHeaderVersion</ref><sp/>(<ref refid="structamrex_1_1VisMF_1_1Header_1aa4469030a55d4e3be552189f7d06b54d" kindref="member">VisMF::Header::Version</ref><sp/>version)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="classamrex_1_1VisMF_1a7f4058d4117af92e70d889263657e9f8" kindref="member">currentVersion</ref><sp/>=<sp/>version;<sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="classamrex_1_1VisMF_1a8645f0e85a9ccda7b565b6fbabb5bac3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a8645f0e85a9ccda7b565b6fbabb5bac3" kindref="member">GetGroupSets</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a51fdeeea196eac049978076bf6671720" kindref="member">groupSets</ref>;<sp/>}</highlight></codeline>
<codeline lineno="250" refid="classamrex_1_1VisMF_1a0e5c0555decdea8a4d09c7eabff1a07d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a0e5c0555decdea8a4d09c7eabff1a07d" kindref="member">SetGroupSets</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>groupsets)<sp/>{<sp/><ref refid="classamrex_1_1VisMF_1a51fdeeea196eac049978076bf6671720" kindref="member">groupSets</ref><sp/>=<sp/>groupsets;<sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="classamrex_1_1VisMF_1a260347a951d2b4a4669cb4dc79956450" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a260347a951d2b4a4669cb4dc79956450" kindref="member">GetSetBuf</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a0ab15576cd65ae5152ba609b54b24550" kindref="member">setBuf</ref>;<sp/>}</highlight></codeline>
<codeline lineno="253" refid="classamrex_1_1VisMF_1af73ff9fbd9a91c471bfbe750de045fb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1af73ff9fbd9a91c471bfbe750de045fb9" kindref="member">SetSetBuf</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>setbuf)<sp/>{<sp/><ref refid="classamrex_1_1VisMF_1a0ab15576cd65ae5152ba609b54b24550" kindref="member">setBuf</ref><sp/>=<sp/>setbuf;<sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="classamrex_1_1VisMF_1aca85185856423d34e7e15041139aee01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1aca85185856423d34e7e15041139aee01" kindref="member">GetUseSingleRead</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a7127d8495966b5d5506d3cff6c536a12" kindref="member">useSingleRead</ref>;<sp/>}</highlight></codeline>
<codeline lineno="256" refid="classamrex_1_1VisMF_1a6142ed0a2ebee84b7961a5f429a3f4de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a6142ed0a2ebee84b7961a5f429a3f4de" kindref="member">SetUseSingleRead</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>usesingleread)<sp/>{<sp/><ref refid="classamrex_1_1VisMF_1a7127d8495966b5d5506d3cff6c536a12" kindref="member">useSingleRead</ref><sp/>=<sp/>usesingleread;<sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="classamrex_1_1VisMF_1aead41678a66e4c5a4f315404d3ffed10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1aead41678a66e4c5a4f315404d3ffed10" kindref="member">GetUseSingleWrite</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a0706ea7e89d0d5b2d9a60acacc8f38f0" kindref="member">useSingleWrite</ref>;<sp/>}</highlight></codeline>
<codeline lineno="259" refid="classamrex_1_1VisMF_1a2a642eb132677ff8e2cda24a665def96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a2a642eb132677ff8e2cda24a665def96" kindref="member">SetUseSingleWrite</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>usesinglewrite)<sp/>{<sp/><ref refid="classamrex_1_1VisMF_1a0706ea7e89d0d5b2d9a60acacc8f38f0" kindref="member">useSingleWrite</ref><sp/>=<sp/>usesinglewrite;<sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="classamrex_1_1VisMF_1a67cbe97a6341b35ab4036a8b0ca59f3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a67cbe97a6341b35ab4036a8b0ca59f3c" kindref="member">GetCheckFilePositions</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a174cc2335d85746e4c0c05c71c0a816b" kindref="member">checkFilePositions</ref>;<sp/>}</highlight></codeline>
<codeline lineno="262" refid="classamrex_1_1VisMF_1a5fa42d848c0d0dc397ddf05fd16c5e16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a5fa42d848c0d0dc397ddf05fd16c5e16" kindref="member">SetCheckFilePositions</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cfp)<sp/>{<sp/><ref refid="classamrex_1_1VisMF_1a174cc2335d85746e4c0c05c71c0a816b" kindref="member">checkFilePositions</ref><sp/>=<sp/>cfp;<sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="classamrex_1_1VisMF_1a92c8f7a70093675fe29a9b3cfbe8e10f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a92c8f7a70093675fe29a9b3cfbe8e10f" kindref="member">GetUsePersistentIFStreams</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a806512ed6337ff31d9eb6f63f94ce792" kindref="member">usePersistentIFStreams</ref>;<sp/>}</highlight></codeline>
<codeline lineno="265" refid="classamrex_1_1VisMF_1ae3d6b0ee4099108fc70fff4deb69b738" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1ae3d6b0ee4099108fc70fff4deb69b738" kindref="member">SetUsePersistentIFStreams</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>usepifs)<sp/>{<sp/><ref refid="classamrex_1_1VisMF_1a806512ed6337ff31d9eb6f63f94ce792" kindref="member">usePersistentIFStreams</ref><sp/>=<sp/>usepifs;<sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="classamrex_1_1VisMF_1a7310b7f7d63449b1b38bcb8afdac7db8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a7310b7f7d63449b1b38bcb8afdac7db8" kindref="member">GetUseSynchronousReads</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a0c9e87f4c459196a9f1ce7870ccbf9cb" kindref="member">useSynchronousReads</ref>;<sp/>}</highlight></codeline>
<codeline lineno="268" refid="classamrex_1_1VisMF_1a97d811af2fd976d508e3f0cb4460c0fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a97d811af2fd976d508e3f0cb4460c0fb" kindref="member">SetUseSynchronousReads</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>usepsr)<sp/>{<sp/><ref refid="classamrex_1_1VisMF_1a0c9e87f4c459196a9f1ce7870ccbf9cb" kindref="member">useSynchronousReads</ref><sp/>=<sp/>usepsr;<sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="classamrex_1_1VisMF_1a20746ef0d6ef7d8491c815e2a954d13c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a20746ef0d6ef7d8491c815e2a954d13c" kindref="member">GetUseDynamicSetSelection</ref><sp/>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a9149ec039a2136083c03aabdaa275672" kindref="member">useDynamicSetSelection</ref>;<sp/>}</highlight></codeline>
<codeline lineno="271" refid="classamrex_1_1VisMF_1ae5edd64d22f48b760a17f2e1c7369df6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1ae5edd64d22f48b760a17f2e1c7369df6" kindref="member">SetUseDynamicSetSelection</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>usedss)<sp/>{<sp/><ref refid="classamrex_1_1VisMF_1a9149ec039a2136083c03aabdaa275672" kindref="member">useDynamicSetSelection</ref><sp/>=<sp/>usedss;<sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classamrex_1_1VisMF_1a87ed18b9e628d872b53b55a5b3fed710" kindref="member">DirName</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classamrex_1_1VisMF_1acdc54dfd982d910dafbe21e9c0459bf1" kindref="member">BaseName</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1aca0f6fbf4458284d275ca2f0625c2303" kindref="member">Initialize</ref><sp/>();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1aae19503ef83149be04e9d97f1c6bd6a3" kindref="member">Finalize</ref><sp/>();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>disallowed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1VisMF_1ae372e9dede4ddc3c4c271118812e9b39" kindref="member">VisMF</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF" kindref="compound">VisMF</ref>&amp;);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1VisMF" kindref="compound">VisMF</ref>&amp;<sp/><ref refid="classamrex_1_1VisMF_1a5d27212879138a4ea1e4264fa3fc9192" kindref="member">operator= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF" kindref="compound">VisMF</ref>&amp;);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>FabOnDisk<sp/><ref refid="classamrex_1_1VisMF_1a527bd21764fd10a8fb440b897e30c12a" kindref="member">Write</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref>&amp;<sp/><sp/><sp/><ref refid="AMReX__MLCellLinOp_8cpp_1a0555045efe3506ffa446042caacaccc0" kindref="member">fab</ref>,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream&amp;<sp/><sp/><sp/><sp/><sp/><sp/>os,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Long<sp/><ref refid="classamrex_1_1VisMF_1a1da6ab2f7999738ec807b98d6af43e49" kindref="member">WriteHeaderDoit</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;fafab_name,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1Header" kindref="compound">VisMF::Header</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;hdr);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Long<sp/><ref refid="classamrex_1_1VisMF_1add3fb6556f6006594d5589b40d99beec" kindref="member">WriteHeader</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;fafab_name,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1Header" kindref="compound">VisMF::Header</ref><sp/><sp/><sp/><sp/><sp/>&amp;hdr,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>procToWrite<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ab734a5d614e753d28d03865ee6e4039a" kindref="member">ParallelDescriptor::IOProcessorNumber</ref>(),</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref><sp/>comm<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a0f53686fc6a6b7dca69c230fd1336e44" kindref="member">ParallelDescriptor::Communicator</ref>());</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a3f74b018e90a133b54a5d1cde07580c7" kindref="member">FindOffsets</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FArrayBox&gt;</ref><sp/>&amp;fafab,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;fafab_name,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1Header" kindref="compound">VisMF::Header</ref><sp/>&amp;hdr,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1Header_1aa4469030a55d4e3be552189f7d06b54d" kindref="member">VisMF::Header::Version</ref><sp/>whichVersion,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter" kindref="compound">NFilesIter</ref><sp/>&amp;nfi,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__ccse-mpi_8H_1a68c509d4adb3f4a1d6fe3a9b0b87c7b9" kindref="member">MPI_Comm</ref><sp/>comm<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a0f53686fc6a6b7dca69c230fd1336e44" kindref="member">ParallelDescriptor::Communicator</ref>());</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FArrayBox" kindref="compound">FArrayBox</ref><sp/>*<ref refid="classamrex_1_1VisMF_1af49a2c7b6fd6fdf8f80c84004317f002" kindref="member">readFAB</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabIndex,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;fafab_name,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Header<sp/><sp/><sp/><sp/><sp/><sp/>&amp;hdr,</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>whichComp<sp/>=<sp/>-1);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1af49a2c7b6fd6fdf8f80c84004317f002" kindref="member">readFAB</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FArrayBox&gt;</ref><sp/>&amp;fafab,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabIndex,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;fafab_name,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Header&amp;<sp/><sp/><sp/><sp/><sp/><sp/>hdr);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a47bde5693ee83a851572ff7c2491fc8c" kindref="member">AsyncWriteDoit</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FArrayBox&gt;</ref>&amp;<sp/>mf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>mf_name,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_rvalue,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>valid_cells_only);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="classamrex_1_1VisMF_1a3e29beee8db471f8b5cca2c5ab03e1c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classamrex_1_1VisMF_1a3e29beee8db471f8b5cca2c5ab03e1c8" kindref="member">m_fafabname</ref>;</highlight></codeline>
<codeline lineno="329" refid="classamrex_1_1VisMF_1a8b04406fcfdbec77eba187d3ceb9b2dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structamrex_1_1VisMF_1_1Header" kindref="compound">Header</ref><sp/><ref refid="classamrex_1_1VisMF_1a8b04406fcfdbec77eba187d3ceb9b2dc" kindref="member">m_hdr</ref>;</highlight></codeline>
<codeline lineno="331" refid="classamrex_1_1VisMF_1a6e7c0f5fc1401ba1497916e015b8591c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt; Vector&lt;FArrayBox*&gt;</ref><sp/>&gt;<sp/><ref refid="classamrex_1_1VisMF_1a6e7c0f5fc1401ba1497916e015b8591c" kindref="member">m_pa</ref>;</highlight></codeline>
<codeline lineno="337" refid="classamrex_1_1VisMF_1accf2e64d0fa423eb3c82df8c1189e908" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1ac05fa35b3db13c4599d7ad5fc51bef47" kindref="member">AMREX_EXPORT</ref><sp/>std::map&lt;std::string,<sp/>VisMF::PersistentIFStream&gt;<sp/><ref refid="classamrex_1_1VisMF_1accf2e64d0fa423eb3c82df8c1189e908" kindref="member">persistentIFStreams</ref>;</highlight></codeline>
<codeline lineno="339" refid="classamrex_1_1VisMF_1ade6a45cdc3be4fb324ccd3a863788aae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1ac05fa35b3db13c4599d7ad5fc51bef47" kindref="member">AMREX_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1ade6a45cdc3be4fb324ccd3a863788aae" kindref="member">nOutFiles</ref>;</highlight></codeline>
<codeline lineno="340" refid="classamrex_1_1VisMF_1abfbb2ed9c1aa1c00786e7ae2218f0b0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1ac05fa35b3db13c4599d7ad5fc51bef47" kindref="member">AMREX_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1abfbb2ed9c1aa1c00786e7ae2218f0b0f" kindref="member">nMFFileInStreams</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="classamrex_1_1VisMF_1a4ee12165f32372e900a0f0967a344708" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1ac05fa35b3db13c4599d7ad5fc51bef47" kindref="member">AMREX_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a4ee12165f32372e900a0f0967a344708" kindref="member">verbose</ref>;</highlight></codeline>
<codeline lineno="343" refid="classamrex_1_1VisMF_1a7f4058d4117af92e70d889263657e9f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1ac05fa35b3db13c4599d7ad5fc51bef47" kindref="member">AMREX_EXPORT</ref><sp/><ref refid="structamrex_1_1VisMF_1_1Header_1aa4469030a55d4e3be552189f7d06b54d" kindref="member">VisMF::Header::Version</ref><sp/><ref refid="classamrex_1_1VisMF_1a7f4058d4117af92e70d889263657e9f8" kindref="member">currentVersion</ref>;</highlight></codeline>
<codeline lineno="344" refid="classamrex_1_1VisMF_1a51fdeeea196eac049978076bf6671720" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1ac05fa35b3db13c4599d7ad5fc51bef47" kindref="member">AMREX_EXPORT</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a51fdeeea196eac049978076bf6671720" kindref="member">groupSets</ref>;</highlight></codeline>
<codeline lineno="345" refid="classamrex_1_1VisMF_1a0ab15576cd65ae5152ba609b54b24550" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1ac05fa35b3db13c4599d7ad5fc51bef47" kindref="member">AMREX_EXPORT</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a0ab15576cd65ae5152ba609b54b24550" kindref="member">setBuf</ref>;</highlight></codeline>
<codeline lineno="346" refid="classamrex_1_1VisMF_1a7127d8495966b5d5506d3cff6c536a12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1ac05fa35b3db13c4599d7ad5fc51bef47" kindref="member">AMREX_EXPORT</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a7127d8495966b5d5506d3cff6c536a12" kindref="member">useSingleRead</ref>;</highlight></codeline>
<codeline lineno="347" refid="classamrex_1_1VisMF_1a0706ea7e89d0d5b2d9a60acacc8f38f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1ac05fa35b3db13c4599d7ad5fc51bef47" kindref="member">AMREX_EXPORT</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a0706ea7e89d0d5b2d9a60acacc8f38f0" kindref="member">useSingleWrite</ref>;</highlight></codeline>
<codeline lineno="348" refid="classamrex_1_1VisMF_1a174cc2335d85746e4c0c05c71c0a816b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1ac05fa35b3db13c4599d7ad5fc51bef47" kindref="member">AMREX_EXPORT</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a174cc2335d85746e4c0c05c71c0a816b" kindref="member">checkFilePositions</ref>;</highlight></codeline>
<codeline lineno="349" refid="classamrex_1_1VisMF_1a806512ed6337ff31d9eb6f63f94ce792" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1ac05fa35b3db13c4599d7ad5fc51bef47" kindref="member">AMREX_EXPORT</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a806512ed6337ff31d9eb6f63f94ce792" kindref="member">usePersistentIFStreams</ref>;</highlight></codeline>
<codeline lineno="350" refid="classamrex_1_1VisMF_1a0c9e87f4c459196a9f1ce7870ccbf9cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1ac05fa35b3db13c4599d7ad5fc51bef47" kindref="member">AMREX_EXPORT</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a0c9e87f4c459196a9f1ce7870ccbf9cb" kindref="member">useSynchronousReads</ref>;</highlight></codeline>
<codeline lineno="351" refid="classamrex_1_1VisMF_1a9149ec039a2136083c03aabdaa275672" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1ac05fa35b3db13c4599d7ad5fc51bef47" kindref="member">AMREX_EXPORT</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1a9149ec039a2136083c03aabdaa275672" kindref="member">useDynamicSetSelection</ref>;</highlight></codeline>
<codeline lineno="352" refid="classamrex_1_1VisMF_1ad6b2c32f84c4e530a473eab6ffd666f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="AMReX__Extension_8H_1ac05fa35b3db13c4599d7ad5fc51bef47" kindref="member">AMREX_EXPORT</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1VisMF_1ad6b2c32f84c4e530a473eab6ffd666f2" kindref="member">allowSparseWrites</ref>;</highlight></codeline>
<codeline lineno="353"><highlight class="normal">};</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespaceamrex_1ae4eb9d3fef37595defb201fde203bae6" kindref="member">operator&lt;&lt; </ref>(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1VisMF_1_1FabOnDisk" kindref="compound">VisMF::FabOnDisk</ref>&amp;<sp/>fod);</highlight></codeline>
<codeline lineno="358"><highlight class="normal">std::istream&amp;<sp/><ref refid="namespaceamrex_1aac7b44499bc56506bcf5ed89ec42bc09" kindref="member">operator&gt;&gt; </ref>(std::istream&amp;<sp/>is,<sp/><ref refid="structamrex_1_1VisMF_1_1FabOnDisk" kindref="compound">VisMF::FabOnDisk</ref>&amp;<sp/>fod);</highlight></codeline>
<codeline lineno="360"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespaceamrex_1ae4eb9d3fef37595defb201fde203bae6" kindref="member">operator&lt;&lt; </ref>(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;VisMF::FabOnDisk&gt;</ref>&amp;<sp/>fa);</highlight></codeline>
<codeline lineno="362"><highlight class="normal">std::istream&amp;<sp/><ref refid="namespaceamrex_1aac7b44499bc56506bcf5ed89ec42bc09" kindref="member">operator&gt;&gt; </ref>(std::istream&amp;<sp/>is,<sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;VisMF::FabOnDisk&gt;</ref>&amp;<sp/>fa);</highlight></codeline>
<codeline lineno="364"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespaceamrex_1ae4eb9d3fef37595defb201fde203bae6" kindref="member">operator&lt;&lt; </ref>(std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structamrex_1_1VisMF_1_1Header" kindref="compound">VisMF::Header</ref>&amp;<sp/>hd);</highlight></codeline>
<codeline lineno="366"><highlight class="normal">std::istream&amp;<sp/><ref refid="namespaceamrex_1aac7b44499bc56506bcf5ed89ec42bc09" kindref="member">operator&gt;&gt; </ref>(std::istream&amp;<sp/>is,<sp/><ref refid="structamrex_1_1VisMF_1_1Header" kindref="compound">VisMF::Header</ref>&amp;<sp/>hd);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB&gt;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>does<sp/>work<sp/>for<sp/>MultiFab,<sp/>but<sp/>let&apos;s<sp/>disable<sp/>it<sp/>to<sp/>avoid<sp/>confusion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal">std::enable_if_t&lt;std::is_same&lt;FAB,IArrayBox&gt;::value&gt;</highlight></codeline>
<codeline lineno="380" refid="namespaceamrex_1aa5838751a7a525b60158ebdae7e8919f" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1aa5838751a7a525b60158ebdae7e8919f" kindref="member">Write</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>fa,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;Write(FabArray)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(name.back()<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>data_descriptor<sp/>=<sp/>FAB::getDataDescriptor();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_bytes<sp/>=<sp/>data_descriptor-&gt;numBytes();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useSparseFPP<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;int&gt;</ref><sp/>&amp;pmap<sp/>=<sp/>fa.DistributionMap().ProcessorMap();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;int&gt;<sp/>procsWithData;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;int&gt;</ref><sp/>procsWithDataVector;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pmap.<ref refid="classamrex_1_1Vector_1a58c24fe05cc91d42ebe7151c398f0c58" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>procsWithData.insert(pmap[i]);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nOutFiles<sp/>=<sp/><ref refid="classamrex_1_1VisMF_1a73b516dcb8729a411f75eaa5d7fc1b54" kindref="member">VisMF::GetNOutFiles</ref>();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(procsWithData.size())<sp/>&lt;<sp/>nOutFiles)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useSparseFPP<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>:<sp/>procsWithData)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>procsWithDataVector.push_back(i);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>filePrefix<sp/>=<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_D_&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1NFilesIter" kindref="compound">NFilesIter</ref><sp/>nfi(nOutFiles,<sp/>filePrefix,<sp/><ref refid="classamrex_1_1VisMF_1a8645f0e85a9ccda7b565b6fbabb5bac3" kindref="member">VisMF::GetGroupSets</ref>(),<sp/><ref refid="classamrex_1_1VisMF_1a260347a951d2b4a4669cb4dc79956450" kindref="member">VisMF::GetSetBuf</ref>());</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useSparseFPP)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfi.<ref refid="classamrex_1_1NFilesIter_1a4502510b5b15f7e87226e43367e1923a" kindref="member">SetSparseFPP</ref>(procsWithDataVector);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfi.<ref refid="classamrex_1_1NFilesIter_1afaabf4f7bbf8f45e425237a5116fffda" kindref="member">SetDynamic</ref>();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;fio<sp/>=<sp/>FAB::getFABio();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>nfi.<ref refid="classamrex_1_1NFilesIter_1a6c012f15ef5b8e7438a88bc794766143" kindref="member">ReadyToWrite</ref>();<sp/>++nfi)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref><sp/>&amp;<ref refid="AMReX__MLCellLinOp_8cpp_1a0555045efe3506ffa446042caacaccc0" kindref="member">fab</ref><sp/>=<sp/>fa[mfi];</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>hss;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fio.write_header(hss,<sp/><ref refid="AMReX__MLCellLinOp_8cpp_1a0555045efe3506ffa446042caacaccc0" kindref="member">fab</ref>,<sp/><ref refid="AMReX__MLCellLinOp_8cpp_1a0555045efe3506ffa446042caacaccc0" kindref="member">fab</ref>.nComp());</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hLength<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::streamoff</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(hss.tellp());</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tstr<sp/>=<sp/>hss.str();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfi.<ref refid="classamrex_1_1NFilesIter_1a4c71f8cab2ada9d8f54d800d0b7abc65" kindref="member">Stream</ref>().write(tstr.c_str(),<sp/>hLength);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfi.<ref refid="classamrex_1_1NFilesIter_1a4c71f8cab2ada9d8f54d800d0b7abc65" kindref="member">Stream</ref>().flush();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>fabdata<sp/>=<sp/><ref refid="AMReX__MLCellLinOp_8cpp_1a0555045efe3506ffa446042caacaccc0" kindref="member">fab</ref>.dataPtr();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;FAB&gt;<sp/>hostfab;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="AMReX__MLCellLinOp_8cpp_1a0555045efe3506ffa446042caacaccc0" kindref="member">fab</ref>.arena()-&gt;isManaged()<sp/>||<sp/><ref refid="AMReX__MLCellLinOp_8cpp_1a0555045efe3506ffa446042caacaccc0" kindref="member">fab</ref>.arena()-&gt;isDevice())<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hostfab<sp/>=<sp/>std::make_unique&lt;FAB&gt;(<ref refid="AMReX__MLCellLinOp_8cpp_1a0555045efe3506ffa446042caacaccc0" kindref="member">fab</ref>.box(),<sp/><ref refid="AMReX__MLCellLinOp_8cpp_1a0555045efe3506ffa446042caacaccc0" kindref="member">fab</ref>.nComp(),<sp/><ref refid="namespaceamrex_1aba0258410952c3ccfe405a462ef2d887" kindref="member">The_Pinned_Arena</ref>());</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a6cb0d90b937d4749b2219ad0e9fa8277" kindref="member">Gpu::dtoh_memcpy_async</ref>(hostfab-&gt;dataPtr(),<sp/><ref refid="AMReX__MLCellLinOp_8cpp_1a0555045efe3506ffa446042caacaccc0" kindref="member">fab</ref>.dataPtr(),</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__MLCellLinOp_8cpp_1a0555045efe3506ffa446042caacaccc0" kindref="member">fab</ref>.size()*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB::value_type));</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Gpu_1a67a618504ee5fb94bd65a5d393e344b4" kindref="member">Gpu::streamSynchronize</ref>();</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabdata<sp/>=<sp/>hostfab-&gt;dataPtr();</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/>writeDataItems<sp/>=<sp/><ref refid="AMReX__MLCellLinOp_8cpp_1a0555045efe3506ffa446042caacaccc0" kindref="member">fab</ref>.box().numPts()<sp/>*<sp/>fa.nComp();</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/>writeDataSize<sp/>=<sp/>writeDataItems<sp/>*<sp/>data_bytes;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfi.<ref refid="classamrex_1_1NFilesIter_1a4c71f8cab2ada9d8f54d800d0b7abc65" kindref="member">Stream</ref>().write((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>fabdata,<sp/>writeDataSize);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nfi.<ref refid="classamrex_1_1NFilesIter_1a4c71f8cab2ada9d8f54d800d0b7abc65" kindref="member">Stream</ref>().flush();</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coordinatorProc<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ab734a5d614e753d28d03865ee6e4039a" kindref="member">ParallelDescriptor::IOProcessorNumber</ref>();</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nfi.<ref refid="classamrex_1_1NFilesIter_1a3d067784807ec260a253c8b4339fbab4" kindref="member">GetDynamic</ref>())<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coordinatorProc<sp/>=<sp/>nfi.<ref refid="classamrex_1_1NFilesIter_1ad05e5285d1e34ab3e64e20f5e87c32c6" kindref="member">CoordinatorProc</ref>();</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">ParallelDescriptor::MyProc</ref>()<sp/>==<sp/>coordinatorProc)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>header_file_name<sp/>=<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_H&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">VisMFBuffer::IO_Buffer</ref><sp/>io_buffer(<ref refid="classamrex_1_1VisMFBuffer_1a18fe5085940077f84917d957455078ab" kindref="member">VisMFBuffer::GetIOBufferSize</ref>());</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ofstream<sp/>ofs;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofs.rdbuf()-&gt;pubsetbuf(io_buffer.<ref refid="classamrex_1_1Vector_1ab7e27d7251f3583037eee2d3333f53dd" kindref="member">dataPtr</ref>(),<sp/>io_buffer.<ref refid="classamrex_1_1Vector_1a58c24fe05cc91d42ebe7151c398f0c58" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofs.open(header_file_name.c_str(),<sp/>std::ios::out<sp/>|<sp/>std::ios::trunc);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ofs.good())<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac40a8be1926370de761ddd49c765d971" kindref="member">amrex::FileOpenFailed</ref>(header_file_name);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofs<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;amrex::FabArray&lt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>FAB::getClassName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&gt;<sp/>v1.0\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofs<sp/>&lt;&lt;<sp/>fa.nComp()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofs<sp/>&lt;&lt;<sp/>fa.nGrowVect()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fa.boxArray().writeOn(ofs);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofs<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref>&amp;<sp/>dm<sp/>=<sp/>fa.DistributionMap();</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nfabs<sp/>=<sp/>fa.boxArray().size();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nFiles<sp/>=<sp/><ref refid="classamrex_1_1NFilesIter_1a11b5dec9fc1e0865a1e59a896d8c2f8e" kindref="member">NFilesIter::ActualNFiles</ref>(nOutFiles);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nprocs<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1aa191723b5d24ceaf64e9d49f542cfcc2" kindref="member">ParallelDescriptor::NProcs</ref>();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;Long&gt;</ref><sp/>fabBytes(nfabs,<sp/>0);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>Vector&lt;int&gt;<sp/>&gt;<sp/>rankBoxOrder;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nfabs;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>hss;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref><sp/>tmp(fa.fabbox(i),<sp/>fa.nComp(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fio.write_header(hss,<sp/>tmp,<sp/>tmp.nComp());</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Size<sp/>includes<sp/>header<sp/>and<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabBytes[i]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::streamoff</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(hss.tellp())<sp/>+<sp/>tmp.<ref refid="classamrex_1_1Vector_1a58c24fe05cc91d42ebe7151c398f0c58" kindref="member">size</ref>()<sp/>*<sp/>data_bytes;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rankBoxOrder[dm[i]].push_back(i);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;int&gt;</ref><sp/>fileNumbers;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nfi.<ref refid="classamrex_1_1NFilesIter_1a3d067784807ec260a253c8b4339fbab4" kindref="member">GetDynamic</ref>())<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileNumbers<sp/>=<sp/>nfi.<ref refid="classamrex_1_1NFilesIter_1a071c4306e5a102244c1461684ab17cf5" kindref="member">FileNumbersWritten</ref>();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nfi.<ref refid="classamrex_1_1NFilesIter_1a201227cf338dfa1a032bc9018902204c" kindref="member">GetSparseFPP</ref>())<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>sparse,<sp/>write<sp/>to<sp/>(file<sp/>number<sp/>=<sp/>rank)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileNumbers.resize(nprocs);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::iota(fileNumbers.begin(),<sp/>fileNumbers.end(),<sp/>0);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileNumbers.resize(nprocs);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nprocs;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileNumbers[i]<sp/>=<sp/><ref refid="classamrex_1_1NFilesIter_1a971648481cfcbc77ebd0258b2ea03538" kindref="member">NFilesIter::FileNumber</ref>(nFiles,<sp/>i,<sp/><ref refid="classamrex_1_1VisMF_1a8645f0e85a9ccda7b565b6fbabb5bac3" kindref="member">VisMF::GetGroupSets</ref>());</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;VisMF::FabOnDisk&gt;</ref><sp/>fod(nfabs);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt; Vector&lt;int&gt;</ref><sp/>&gt;<sp/>&amp;fileNumbersWriteOrder<sp/>=<sp/>nfi.<ref refid="classamrex_1_1NFilesIter_1ad9233c5996de29b80cfb5c0ac02e8214" kindref="member">FileNumbersWriteOrder</ref>();</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rv<sp/>:<sp/>fileNumbersWriteOrder)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/>currentOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rank<sp/>:<sp/>rv)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rbo_it<sp/>=<sp/>rankBoxOrder.find(rank);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rbo_it<sp/>!=<sp/>rankBoxOrder.end())<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;int&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>index<sp/>=<sp/>rbo_it-&gt;second;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whichFileNumber<sp/>=<sp/>fileNumbers[rank];</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>whichFileName<sp/>=</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1VisMF_1acdc54dfd982d910dafbe21e9c0459bf1" kindref="member">VisMF::BaseName</ref>(<ref refid="classamrex_1_1NFilesIter_1a9fad70f99318130bf5c883b3cbd20650" kindref="member">NFilesIter::FileName</ref>(whichFileNumber,<sp/>filePrefix));</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>:<sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fod[i].m_name<sp/>=<sp/>whichFileName;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fod[i].m_head<sp/>=<sp/>currentOffset;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentOffset<sp/>+=<sp/>fabBytes[i];</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ofs<sp/>&lt;&lt;<sp/>fod;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedetail" kindref="compound">detail</ref><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB&gt;</highlight></codeline>
<codeline lineno="521" refid="namespaceamrex_1_1detail_1aa3870bf45fd14f87c3674a996cae2752" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceamrex_1_1detail_1aa3870bf45fd14f87c3674a996cae2752" kindref="member">read_fab</ref><sp/>(<ref refid="namespaceamrex_1_1Amrvis_1abfcccc9773d8b5535441ca5b3cc4f0cfae23a0946829f4ea99f1d5045c64e5390" kindref="member">FAB</ref>&amp;<sp/><ref refid="AMReX__MLCellLinOp_8cpp_1a0555045efe3506ffa446042caacaccc0" kindref="member">fab</ref>,<sp/><ref refid="structamrex_1_1VisMF_1_1FabOnDisk" kindref="compound">VisMF::FabOnDisk</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fod,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>name)</highlight></codeline>
<codeline lineno="522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>fullname<sp/>=<sp/><ref refid="classamrex_1_1VisMF_1a87ed18b9e628d872b53b55a5b3fed710" kindref="member">VisMF::DirName</ref>(name);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>fullname<sp/>+=<sp/>fod.<ref refid="structamrex_1_1VisMF_1_1FabOnDisk_1a3384af022eabbdadda0f20d0bda79ebe" kindref="member">m_name</ref>;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">VisMFBuffer::IO_Buffer</ref><sp/>io_buffer(<ref refid="classamrex_1_1VisMFBuffer_1a18fe5085940077f84917d957455078ab" kindref="member">VisMFBuffer::GetIOBufferSize</ref>());</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>ifs;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>ifs.rdbuf()-&gt;pubsetbuf(io_buffer.<ref refid="classamrex_1_1Vector_1ab7e27d7251f3583037eee2d3333f53dd" kindref="member">dataPtr</ref>(),<sp/>io_buffer.<ref refid="classamrex_1_1Vector_1a58c24fe05cc91d42ebe7151c398f0c58" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>ifs.open(fullname.c_str(),<sp/>std::ios::in<sp/>|<sp/>std::ios::binary);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ifs.good())<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1ac40a8be1926370de761ddd49c765d971" kindref="member">amrex::FileOpenFailed</ref>(fullname);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>ifs.seekg(fod.<ref refid="structamrex_1_1VisMF_1_1FabOnDisk_1a2592709514015ee6c2e68a254a2b5806" kindref="member">m_head</ref>,<sp/>std::ios::beg);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__MLCellLinOp_8cpp_1a0555045efe3506ffa446042caacaccc0" kindref="member">fab</ref>.readFrom(ifs);</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FAB&gt;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>does<sp/>work<sp/>for<sp/>MultiFab,<sp/>but<sp/>let&apos;s<sp/>disable<sp/>it<sp/>to<sp/>avoid<sp/>confusion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal">std::enable_if_t&lt;std::is_same&lt;FAB,IArrayBox&gt;::value&gt;</highlight></codeline>
<codeline lineno="557" refid="namespaceamrex_1ad7c4906fd7d4c6640ae4954b1ed33a12" refkind="member"><highlight class="normal"><ref refid="namespaceamrex_1ad7c4906fd7d4c6640ae4954b1ed33a12" kindref="member">Read</ref><sp/>(<ref refid="classamrex_1_1FabArray" kindref="compound">FabArray&lt;FAB&gt;</ref>&amp;<sp/>fa,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)</highlight></codeline>
<codeline lineno="558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLProfiler_8H_1a548fbd9b2cd72a927f463003f4adb0b1" kindref="member">BL_PROFILE</ref>(</highlight><highlight class="stringliteral">&quot;Read(FabArray)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(name.back()<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref><sp/>ba;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncomp;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref><sp/>ngrow;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;VisMF::FabOnDisk&gt;</ref><sp/>fod;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>header_file_name<sp/>=<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_H&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;char&gt;</ref><sp/>header_file_chars;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a4736dec48acb46827a04cdca7b4045d7" kindref="member">ParallelDescriptor::ReadAndBcastFile</ref>(header_file_name,<sp/>header_file_chars);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>header_file_string(header_file_chars.data());</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>ifs(header_file_string,<sp/>std::istringstream::in);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>type,<sp/>version;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifs<sp/>&gt;&gt;<sp/>type<sp/>&gt;&gt;<sp/>version;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;amrex::FabArray&lt;amrex::IArrayBox&gt;&quot;</highlight><highlight class="normal"><sp/>||</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;amrex::FabArray&lt;amrex::FArrayBox&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifs<sp/>&gt;&gt;<sp/>ncomp;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifs<sp/>&gt;&gt;<sp/>ngrow;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ba.<ref refid="classamrex_1_1BoxArray_1a4df72bcadb7bdaa2c5db57212e48853a" kindref="member">readFrom</ref>(ifs);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ifs<sp/>&gt;&gt;<sp/>fod;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fa.empty())<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fa.<ref refid="classamrex_1_1FabArray_1a4b2db0304bc84a002692917c83bc1626" kindref="member">define</ref>(ba,<sp/><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref>{ba},<sp/>ncomp,<sp/>ngrow);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="AMReX__BLassert_8H_1aad6450907585a147153aef621fdc6007" kindref="member">AMREX_ASSERT</ref>(<ref refid="namespaceamrex_1a89eb9459b4109c4f9a9b3225abae29f8" kindref="member">amrex::match</ref>(ba,<sp/>fa.boxArray()));</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMREX_USE_MPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nopensperfile<sp/>=<sp/><ref refid="classamrex_1_1VisMF_1a738d789073dd1072ac3a0c640429574c" kindref="member">VisMF::GetMFFileInStreams</ref>();<sp/></highlight><highlight class="comment">//<sp/>#<sp/>of<sp/>concurrent<sp/>readers<sp/>per<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>myproc<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a33162ef233c092e9e6fd75ab291b9b29" kindref="member">ParallelDescriptor::MyProc</ref>();</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coordproc<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1ab734a5d614e753d28d03865ee6e4039a" kindref="member">ParallelDescriptor::IOProcessorNumber</ref>();</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nreqs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>allreadsindex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>int&gt;<sp/>filenames;<sp/></highlight><highlight class="comment">//<sp/>&lt;filename,<sp/>allreadsindex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nboxes<sp/>=<sp/>fa.size();</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>dm<sp/>=<sp/>fa.DistributionMap();</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nboxes;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(myproc<sp/>==<sp/>dm[i])<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nreqs;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(myproc<sp/>==<sp/>coordproc)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fname<sp/>=<sp/>fod[i].m_name;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=filenames.insert(std::make_pair(fname,<sp/>allreadsindex));</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r.second)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++allreadsindex;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>readtag<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a9fa50b376ee8c97f8d84852e244fd916" kindref="member">ParallelDescriptor::SeqNum</ref>();</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>donetag<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a9fa50b376ee8c97f8d84852e244fd916" kindref="member">ParallelDescriptor::SeqNum</ref>();</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(myproc<sp/>==<sp/>coordproc)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::multiset&lt;int&gt;<sp/>availablefiles;<sp/><sp/></highlight><highlight class="comment">//<sp/>[whichFile]<sp/><sp/>supports<sp/>multiple<sp/>reads/file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;std::map&lt;int,std::map&lt;Long,int&gt;</ref><sp/>&gt;<sp/>&gt;<sp/>allreads;<sp/></highlight><highlight class="comment">//<sp/>[file]&lt;proc,&lt;seek,index&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nfiles<sp/>=<sp/>filenames.size();</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nfiles;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>nopensperfile;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>availablefiles.insert(i);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allreads.resize(nfiles);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nboxes;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>whichproc<sp/>=<sp/>dm[i];</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iseekpos<sp/>=<sp/>fod[i].m_head;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fname<sp/>=<sp/>fod[i].m_name;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>filenamesiter<sp/>=<sp/>filenames.find(fname);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filenamesiter<sp/>!=<sp/>filenames.end())<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fi<sp/>=<sp/>filenamesiter-&gt;second;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allreads[fi][whichproc].insert(std::make_pair(iseekpos,i));</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1aaa5d048f7bf7386b6976b10001a5f8b4" kindref="member">amrex::Error</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>amrex::Read:<sp/>filename<sp/>not<sp/>found<sp/>&quot;</highlight><highlight class="normal">+fname);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalioreqs<sp/>=<sp/>nboxes;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>messtotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reqspending<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iopfileindex;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::deque&lt;int&gt;<sp/>iopreads;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;int&gt;<sp/>busyprocs;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(totalioreqs<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>afilesiter<sp/>=<sp/>availablefiles.begin();</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(afilesiter<sp/>!=<sp/>availablefiles.end())<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fi<sp/>=<sp/>*afilesiter;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allreads[fi].empty())<sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>availablefiles.erase(fi);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>afilesiter<sp/>=<sp/>availablefiles.begin();</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>whichread<sp/>=<sp/>allreads[fi].begin();</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>whichread<sp/>!=<sp/>allreads[fi].end();<sp/>++whichread)<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tryproc<sp/>=<sp/>whichread-&gt;first;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(busyprocs.find(tryproc)<sp/>==<sp/>busyprocs.end())<sp/>{<sp/></highlight><highlight class="comment">//<sp/>not<sp/>busy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>busyprocs.insert(tryproc);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;int&gt;</ref><sp/>vreads;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vreads.reserve(whichread-&gt;second.size());</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>kv<sp/>:<sp/>whichread-&gt;second)<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vreads.push_back(kv.second);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tryproc<sp/>==<sp/>coordproc)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iopfileindex<sp/>=<sp/>fi;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x<sp/>:<sp/>vreads)<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iopreads.push_back(x);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a89ca8639338d64c25ee28faf1b829701" kindref="member">ParallelDescriptor::Send</ref>(vreads,<sp/>tryproc,<sp/>readtag);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++messtotal;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++reqspending;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>availablefiles.erase(afilesiter);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>afilesiter<sp/>=<sp/>availablefiles.begin();</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(whichread<sp/>==<sp/>allreads[fi].<ref refid="namespaceamrex_1a199ea36f687fd4271b73c72b56fd3279" kindref="member">end</ref>())<sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++afilesiter;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allreads[fi].erase(whichread);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!iopreads.empty())<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>iopreads.front();</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1aa3870bf45fd14f87c3674a996cae2752" kindref="member">detail::read_fab</ref>(fa[i],<sp/>fod[i],<sp/>name);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--totalioreqs;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iopreads.pop_front();</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iopreads.empty())<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>availablefiles.insert(iopfileindex);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>busyprocs.erase(coordproc);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>doneflag;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structMPI__Status" kindref="compound">MPI_Status</ref><sp/>status;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1aa6542637438eaa734790f6ab8ae83ce0" kindref="member">ParallelDescriptor::IProbe</ref>(MPI_ANY_SOURCE,<sp/>donetag,<sp/>doneflag,<sp/>status);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doneflag)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reqspending<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;int&gt;</ref><sp/>idone(2);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ParallelDescriptor_1_1Message" kindref="compound">ParallelDescriptor::Message</ref><sp/>rmess<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1af4996999fa16efb8ab255e1d26ab2163" kindref="member">ParallelDescriptor::Recv</ref>(idone,<sp/>MPI_ANY_SOURCE,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>donetag);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>idone[0];</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>procdone<sp/>=<sp/>rmess.<ref refid="classamrex_1_1ParallelDescriptor_1_1Message_1a226101263b27282d94f687320e25177f" kindref="member">pid</ref>();</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalioreqs<sp/>-=<sp/>idone[1];</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--reqspending;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>busyprocs.erase(procdone);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>fname<sp/>=<sp/>fod[i].m_name;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fi<sp/>=<sp/>filenames.find(fname)-&gt;second;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>availablefiles.insert(fi);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;int&gt;</ref><sp/>recreads(nreqs,<sp/>-1);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1Vector" kindref="compound">Vector&lt;int&gt;</ref><sp/>idone(2);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(nreqs<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classamrex_1_1ParallelDescriptor_1_1Message" kindref="compound">ParallelDescriptor::Message</ref><sp/>rmess<sp/>=<sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1af4996999fa16efb8ab255e1d26ab2163" kindref="member">ParallelDescriptor::Recv</ref>(recreads,<sp/>coordproc,</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readtag);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrmess<sp/>=<sp/>rmess.<ref refid="classamrex_1_1ParallelDescriptor_1_1Message_1a934d6ed56619c14db1833d57662fd86b" kindref="member">count</ref>();</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ir<sp/>=<sp/>0;<sp/>ir<sp/>&lt;<sp/>nrmess;<sp/>++ir)<sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>recreads[ir];</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1aa3870bf45fd14f87c3674a996cae2752" kindref="member">detail::read_fab</ref>(fa[i],<sp/>fod[i],<sp/>name);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nreqs<sp/>-=<sp/>nrmess;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idone[0]<sp/>=<sp/>recreads[0];</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idone[1]<sp/>=<sp/>nrmess;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1ParallelDescriptor_1a89ca8639338d64c25ee28faf1b829701" kindref="member">ParallelDescriptor::Send</ref>(idone,<sp/>coordproc,<sp/>donetag);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classamrex_1_1MFIter" kindref="compound">MFIter</ref><sp/>mfi(fa);<sp/>mfi.<ref refid="classamrex_1_1MFIter_1a61b9a1d5eda39765d1db9b9b936558c7" kindref="member">isValid</ref>();<sp/>++mfi)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceamrex_1_1detail_1aa3870bf45fd14f87c3674a996cae2752" kindref="member">detail::read_fab</ref>(fa[mfi],<sp/>fod[mfi.index()],<sp/>name);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*BL_VISMF_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_VisMF.H"/>
  </compounddef>
</doxygen>
