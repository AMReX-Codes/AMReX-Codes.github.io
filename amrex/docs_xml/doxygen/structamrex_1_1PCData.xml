<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structamrex_1_1PCData" kind="struct" language="C++" prot="public">
    <compoundname>amrex::PCData</compoundname>
    <includes refid="AMReX__FabArray_8H" local="no">AMReX_FabArray.H</includes>
    <templateparamlist>
      <param>
        <type>class FAB</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structamrex_1_1PCData_1a91738dc93fbd40cd98040bcd79c208c6" prot="public" static="no" mutable="no">
        <type>const <ref refid="structamrex_1_1FabArrayBase_1_1CPC" kindref="compound">FabArrayBase::CPC</ref> *</type>
        <definition>const FabArrayBase::CPC* amrex::PCData&lt; FAB &gt;::cpc</definition>
        <argsstring></argsstring>
        <name>cpc</name>
        <qualifiedname>amrex::PCData::cpc</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="134" column="30" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1PCData_1a45bf31bfbfe4a36b332561392e77a997" prot="public" static="no" mutable="no">
        <type>const <ref refid="classamrex_1_1FabArray" kindref="compound">FabArray</ref>&lt; FAB &gt; *</type>
        <definition>const FabArray&lt;FAB&gt;* amrex::PCData&lt; FAB &gt;::src</definition>
        <argsstring></argsstring>
        <name>src</name>
        <qualifiedname>amrex::PCData::src</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="135" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1PCData_1a5076dc32f6165ffc8296650d895a2b6f" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1FabArrayBase_1ac86e93bfc13df1bdcfb0ebbafb6a1cff" kindref="member">FabArrayBase::CpOp</ref></type>
        <definition>FabArrayBase::CpOp amrex::PCData&lt; FAB &gt;::op</definition>
        <argsstring></argsstring>
        <name>op</name>
        <qualifiedname>amrex::PCData::op</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="136" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1PCData_1a3d9d2fe62bbf3d6d228fb14bbe04eb34" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::PCData&lt; FAB &gt;::tag</definition>
        <argsstring></argsstring>
        <name>tag</name>
        <qualifiedname>amrex::PCData::tag</qualifiedname>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="137" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1PCData_1a0dc2ad0aabd8037f621c34347101d234" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::PCData&lt; FAB &gt;::actual_n_rcvs</definition>
        <argsstring></argsstring>
        <name>actual_n_rcvs</name>
        <qualifiedname>amrex::PCData::actual_n_rcvs</qualifiedname>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="138" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1PCData_1ad7ca6cbcd2440f36bb0b02a9ffcfe6f5" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::PCData&lt; FAB &gt;::SC</definition>
        <argsstring></argsstring>
        <name>SC</name>
        <qualifiedname>amrex::PCData::SC</qualifiedname>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="139" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1PCData_1ab5cb26461b00acd27b5746145172e7cd" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::PCData&lt; FAB &gt;::NC</definition>
        <argsstring></argsstring>
        <name>NC</name>
        <qualifiedname>amrex::PCData::NC</qualifiedname>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="139" column="29" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1PCData_1a24757491eab52e06ff0c97c79b91380c" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::PCData&lt; FAB &gt;::DC</definition>
        <argsstring></argsstring>
        <name>DC</name>
        <qualifiedname>amrex::PCData::DC</qualifiedname>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="139" column="33" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1PCData_1a4685b9db726b95a19ccbe2b6ee33a433" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* amrex::PCData&lt; FAB &gt;::the_recv_data</definition>
        <argsstring></argsstring>
        <name>the_recv_data</name>
        <qualifiedname>amrex::PCData::the_recv_data</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="141" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1PCData_1a8dee05ab1688d643feb6d74e82a15bf3" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* amrex::PCData&lt; FAB &gt;::the_send_data</definition>
        <argsstring></argsstring>
        <name>the_send_data</name>
        <qualifiedname>amrex::PCData::the_send_data</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="142" column="24" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1PCData_1a95b34b1c944b84b7ade267a492641adc" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; int &gt;</type>
        <definition>Vector&lt;int&gt; amrex::PCData&lt; FAB &gt;::recv_from</definition>
        <argsstring></argsstring>
        <name>recv_from</name>
        <qualifiedname>amrex::PCData::recv_from</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="143" column="20" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1PCData_1af73fd2f1adac02a82df3907bec2f742c" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; char * &gt;</type>
        <definition>Vector&lt;char*&gt; amrex::PCData&lt; FAB &gt;::recv_data</definition>
        <argsstring></argsstring>
        <name>recv_data</name>
        <qualifiedname>amrex::PCData::recv_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="144" column="18" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1PCData_1a116ad8730e2b89913a13c064ebe03787" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; std::size_t &gt;</type>
        <definition>Vector&lt;std::size_t&gt; amrex::PCData&lt; FAB &gt;::recv_size</definition>
        <argsstring></argsstring>
        <name>recv_size</name>
        <qualifiedname>amrex::PCData::recv_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="145" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1PCData_1a7b15255a2524406fc7cb4810c128608e" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1_1mpidatatypes_1aa06d59ab6bca4110216e437d289ae929" kindref="member">MPI_Request</ref> &gt;</type>
        <definition>Vector&lt;MPI_Request&gt; amrex::PCData&lt; FAB &gt;::recv_reqs</definition>
        <argsstring></argsstring>
        <name>recv_reqs</name>
        <qualifiedname>amrex::PCData::recv_reqs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="146" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structamrex_1_1PCData_1a3bdae5df3d248131a52ab1d0f65603fb" prot="public" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespaceamrex_1_1mpidatatypes_1aa06d59ab6bca4110216e437d289ae929" kindref="member">MPI_Request</ref> &gt;</type>
        <definition>Vector&lt;MPI_Request&gt; amrex::PCData&lt; FAB &gt;::send_reqs</definition>
        <argsstring></argsstring>
        <name>send_reqs</name>
        <qualifiedname>amrex::PCData::send_reqs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="147" column="12" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="147" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="15">
        <label>amrex::BoxND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1BoxND"/>
      </node>
      <node id="31">
        <label>amrex::IndexTypeND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1IndexTypeND"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>amrex::IntVectND&lt; 3 &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="9">
        <label>K</label>
      </node>
      <node id="6">
        <label>T</label>
      </node>
      <node id="44">
        <label>amrex::Vector&lt; MPI_Request &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="45" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>amrex::Vector&lt; amrex::BoxND &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>amrex::Vector&lt; char * &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="41" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="23" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>amrex::Vector&lt; std::size_t &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="43" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>amrex::BARef</label>
        <link refid="structamrex_1_1BARef"/>
        <childnode refid="13" relation="usage">
          <edgelabel>m_abox</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>bbox</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>crsn</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="36" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="16" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="31" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="31" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="29">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="27">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="28" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="28">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="29" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="30" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="27" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>amrex::BoxArray::RefID</label>
        <link refid="structamrex_1_1BoxArray_1_1RefID"/>
        <childnode refid="12" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="39">
        <label>amrex::BoxList</label>
        <link refid="classamrex_1_1BoxList"/>
        <childnode refid="13" relation="usage">
          <edgelabel>m_lbox</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="32">
        <label>amrex::CellIndexEnum</label>
        <link refid="structamrex_1_1CellIndexEnum"/>
      </node>
      <node id="21">
        <label>amrex::DistributionMapping::Ref</label>
        <link refid="structamrex_1_1DistributionMapping_1_1Ref"/>
        <childnode refid="22" relation="usage">
          <edgelabel>m_index_array</edgelabel>
          <edgelabel>m_pmap</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>m_ownership</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>amrex::DistributionMapping::RefID</label>
        <link refid="structamrex_1_1DistributionMapping_1_1RefID"/>
        <childnode refid="21" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>amrex::FabArrayBase::BDKey</label>
        <link refid="structamrex_1_1FabArrayBase_1_1BDKey"/>
        <childnode refid="11" relation="usage">
          <edgelabel>m_ba_id</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>m_dm_id</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>amrex::FabArrayBase::CPC</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CPC"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_dstbdk</edgelabel>
          <edgelabel>m_srcbdk</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>m_dstng</edgelabel>
          <edgelabel>m_offset</edgelabel>
          <edgelabel>m_srcng</edgelabel>
        </childnode>
        <childnode refid="25" relation="usage">
          <edgelabel>m_period</edgelabel>
        </childnode>
        <childnode refid="26" relation="usage">
          <edgelabel>m_dstba</edgelabel>
          <edgelabel>m_srcba</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>amrex::FabArrayBase::CommMetaData</label>
        <link refid="structamrex_1_1FabArrayBase_1_1CommMetaData"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_LocTags</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>m_RcvTags</edgelabel>
          <edgelabel>m_SndTags</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>amrex::IntVectND&lt; dim &gt;</label>
        <link refid="classamrex_1_1IntVectND"/>
      </node>
      <node id="36">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="1">
        <label>amrex::PCData&lt; FAB &gt;</label>
        <link refid="structamrex_1_1PCData"/>
        <childnode refid="2" relation="usage">
          <edgelabel>cpc</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>recv_from</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>recv_data</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>recv_size</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>recv_reqs</edgelabel>
          <edgelabel>send_reqs</edgelabel>
        </childnode>
      </node>
      <node id="25">
        <label>amrex::Periodicity</label>
        <link refid="classamrex_1_1Periodicity"/>
        <childnode refid="16" relation="usage">
          <edgelabel>period</edgelabel>
        </childnode>
      </node>
      <node id="37">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
        <childnode refid="12" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
        <childnode refid="39" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="45">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="43">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::unique_ptr&lt; CopyComTagsContainer &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::unique_ptr&lt; MapOfCopyComTagContainers &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>std::unordered_map&lt; IntVect, std::vector&lt; int &gt;, IntVect::shift_hasher &gt;</label>
        <childnode refid="18" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>std::vector&lt; bool &gt;</label>
      </node>
      <node id="19">
        <label>std::vector&lt; int &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" line="132" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_FabArray.H" bodystart="132" bodyend="149"/>
    <listofallmembers>
      <member refid="structamrex_1_1PCData_1a0dc2ad0aabd8037f621c34347101d234" prot="public" virt="non-virtual"><scope>amrex::PCData</scope><name>actual_n_rcvs</name></member>
      <member refid="structamrex_1_1PCData_1a91738dc93fbd40cd98040bcd79c208c6" prot="public" virt="non-virtual"><scope>amrex::PCData</scope><name>cpc</name></member>
      <member refid="structamrex_1_1PCData_1a24757491eab52e06ff0c97c79b91380c" prot="public" virt="non-virtual"><scope>amrex::PCData</scope><name>DC</name></member>
      <member refid="structamrex_1_1PCData_1ab5cb26461b00acd27b5746145172e7cd" prot="public" virt="non-virtual"><scope>amrex::PCData</scope><name>NC</name></member>
      <member refid="structamrex_1_1PCData_1a5076dc32f6165ffc8296650d895a2b6f" prot="public" virt="non-virtual"><scope>amrex::PCData</scope><name>op</name></member>
      <member refid="structamrex_1_1PCData_1af73fd2f1adac02a82df3907bec2f742c" prot="public" virt="non-virtual"><scope>amrex::PCData</scope><name>recv_data</name></member>
      <member refid="structamrex_1_1PCData_1a95b34b1c944b84b7ade267a492641adc" prot="public" virt="non-virtual"><scope>amrex::PCData</scope><name>recv_from</name></member>
      <member refid="structamrex_1_1PCData_1a7b15255a2524406fc7cb4810c128608e" prot="public" virt="non-virtual"><scope>amrex::PCData</scope><name>recv_reqs</name></member>
      <member refid="structamrex_1_1PCData_1a116ad8730e2b89913a13c064ebe03787" prot="public" virt="non-virtual"><scope>amrex::PCData</scope><name>recv_size</name></member>
      <member refid="structamrex_1_1PCData_1ad7ca6cbcd2440f36bb0b02a9ffcfe6f5" prot="public" virt="non-virtual"><scope>amrex::PCData</scope><name>SC</name></member>
      <member refid="structamrex_1_1PCData_1a3bdae5df3d248131a52ab1d0f65603fb" prot="public" virt="non-virtual"><scope>amrex::PCData</scope><name>send_reqs</name></member>
      <member refid="structamrex_1_1PCData_1a45bf31bfbfe4a36b332561392e77a997" prot="public" virt="non-virtual"><scope>amrex::PCData</scope><name>src</name></member>
      <member refid="structamrex_1_1PCData_1a3d9d2fe62bbf3d6d228fb14bbe04eb34" prot="public" virt="non-virtual"><scope>amrex::PCData</scope><name>tag</name></member>
      <member refid="structamrex_1_1PCData_1a4685b9db726b95a19ccbe2b6ee33a433" prot="public" virt="non-virtual"><scope>amrex::PCData</scope><name>the_recv_data</name></member>
      <member refid="structamrex_1_1PCData_1a8dee05ab1688d643feb6d74e82a15bf3" prot="public" virt="non-virtual"><scope>amrex::PCData</scope><name>the_send_data</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
