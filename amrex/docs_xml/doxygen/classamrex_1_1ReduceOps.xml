<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1ReduceOps" kind="class" language="C++" prot="public">
    <compoundname>amrex::ReduceOps</compoundname>
    <includes refid="AMReX__Reduce_8H" local="no">AMReX_Reduce.H</includes>
    <templateparamlist>
      <param>
        <type>typename...</type>
        <declname>Ps</declname>
        <defname>Ps</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1ReduceOps_1a4e60cd020808a640d7de13b866728202" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::ReduceOps&lt; Ps &gt;::m_result_is_ready</definition>
        <argsstring></argsstring>
        <name>m_result_is_ready</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="745" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="745" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1ReduceOps_1a6ee0df1c765e4839d3e453159681baf8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I</type>
          </param>
          <param>
            <type>typename MF</type>
          </param>
          <param>
            <type>typename D</type>
          </param>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ReduceOps&lt; Ps &gt;::eval_mf</definition>
        <argsstring>(I, MF const &amp;mf, IntVect const &amp;nghost, int ncomp, D &amp;reduce_data, F const &amp;f)</argsstring>
        <name>eval_mf</name>
        <param>
          <type>I</type>
        </param>
        <param>
          <type>MF const &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a8792201c856a367dda275e09047daa33" kindref="member">IntVect</ref> const &amp;</type>
          <declname>nghost</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type>D &amp;</type>
          <declname>reduce_data</declname>
        </param>
        <param>
          <type>F const &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="369" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="369" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ReduceOps_1a00463980dfb637a0c8f867ed55fa99b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MF</type>
          </param>
          <param>
            <type>typename D</type>
          </param>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; <ref refid="structamrex_1_1IsFabArray" kindref="compound">IsFabArray</ref>&lt; MF &gt;::<ref refid="classamrex_1_1ReduceOps_1a05d9d8beb406be38812442c318e5d434" kindref="member">value</ref> &gt;</type>
        <definition>std::enable_if_t&lt;IsFabArray&lt;MF&gt;::value &gt; amrex::ReduceOps&lt; Ps &gt;::eval</definition>
        <argsstring>(MF const &amp;mf, IntVect const &amp;nghost, D &amp;reduce_data, F &amp;&amp;f)</argsstring>
        <name>eval</name>
        <param>
          <type>MF const &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a8792201c856a367dda275e09047daa33" kindref="member">IntVect</ref> const &amp;</type>
          <declname>nghost</declname>
        </param>
        <param>
          <type>D &amp;</type>
          <declname>reduce_data</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="441" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="441" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ReduceOps_1ab6d0e3293d5341c89aad5b8acc8abd47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MF</type>
          </param>
          <param>
            <type>typename D</type>
          </param>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; <ref refid="structamrex_1_1IsFabArray" kindref="compound">IsFabArray</ref>&lt; MF &gt;::<ref refid="classamrex_1_1ReduceOps_1a05d9d8beb406be38812442c318e5d434" kindref="member">value</ref> &gt;</type>
        <definition>std::enable_if_t&lt;IsFabArray&lt;MF&gt;::value &gt; amrex::ReduceOps&lt; Ps &gt;::eval</definition>
        <argsstring>(MF const &amp;mf, IntVect const &amp;nghost, int ncomp, D &amp;reduce_data, F &amp;&amp;f)</argsstring>
        <name>eval</name>
        <param>
          <type>MF const &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1a8792201c856a367dda275e09047daa33" kindref="member">IntVect</ref> const &amp;</type>
          <declname>nghost</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type>D &amp;</type>
          <declname>reduce_data</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="469" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="469" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ReduceOps_1a705e92f33933692615787d722642c37c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ReduceOps&lt; Ps &gt;::eval</definition>
        <argsstring>(Box const &amp;box, D &amp;reduce_data, F const &amp;f)</argsstring>
        <name>eval</name>
        <param>
          <type><ref refid="namespaceamrex_1a222089e49ba211b37cf7a4a8ae7eb186" kindref="member">Box</ref> const &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>D &amp;</type>
          <declname>reduce_data</declname>
        </param>
        <param>
          <type>F const &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="494" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="494" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ReduceOps_1a58753cc90f873de11316249189d438ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename N</type>
          </param>
          <param>
            <type>typename D</type>
          </param>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename M</type>
            <defval>std::enable_if_t&lt;std::is_integral&lt;N&gt;::<ref refid="classamrex_1_1ReduceOps_1a05d9d8beb406be38812442c318e5d434" kindref="member">value</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ReduceOps&lt; Ps &gt;::eval</definition>
        <argsstring>(Box const &amp;box, N ncomp, D &amp;reduce_data, F const &amp;f)</argsstring>
        <name>eval</name>
        <param>
          <type><ref refid="namespaceamrex_1a222089e49ba211b37cf7a4a8ae7eb186" kindref="member">Box</ref> const &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>N</type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type>D &amp;</type>
          <declname>reduce_data</declname>
        </param>
        <param>
          <type>F const &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="553" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="553" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ReduceOps_1acf76d5c7c3027a29928d07b2572475a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename N</type>
          </param>
          <param>
            <type>typename D</type>
          </param>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename M</type>
            <defval>std::enable_if_t&lt;std::is_integral&lt;N&gt;::<ref refid="classamrex_1_1ReduceOps_1a05d9d8beb406be38812442c318e5d434" kindref="member">value</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ReduceOps&lt; Ps &gt;::eval</definition>
        <argsstring>(N n, D &amp;reduce_data, F const &amp;f)</argsstring>
        <name>eval</name>
        <param>
          <type>N</type>
          <declname>n</declname>
        </param>
        <param>
          <type>D &amp;</type>
          <declname>reduce_data</declname>
        </param>
        <param>
          <type>F const &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="613" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="613" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ReduceOps_1a05d9d8beb406be38812442c318e5d434" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>D::Type</type>
        <definition>D::Type amrex::ReduceOps&lt; Ps &gt;::value</definition>
        <argsstring>(D &amp;reduce_data)</argsstring>
        <name>value</name>
        <param>
          <type>D &amp;</type>
          <declname>reduce_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="660" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="660" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ReduceOps_1aa9f7ed138e607372624eb46fb43e9c85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::ReduceOps&lt; Ps &gt;::resetResultReadiness</definition>
        <argsstring>()</argsstring>
        <name>resetResultReadiness</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="748" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="748" bodyend="748"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="363" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="364" bodyend="749"/>
    <listofallmembers>
      <member refid="classamrex_1_1ReduceOps_1a00463980dfb637a0c8f867ed55fa99b8" prot="public" virt="non-virtual"><scope>amrex::ReduceOps</scope><name>eval</name></member>
      <member refid="classamrex_1_1ReduceOps_1ab6d0e3293d5341c89aad5b8acc8abd47" prot="public" virt="non-virtual"><scope>amrex::ReduceOps</scope><name>eval</name></member>
      <member refid="classamrex_1_1ReduceOps_1a705e92f33933692615787d722642c37c" prot="public" virt="non-virtual"><scope>amrex::ReduceOps</scope><name>eval</name></member>
      <member refid="classamrex_1_1ReduceOps_1a58753cc90f873de11316249189d438ca" prot="public" virt="non-virtual"><scope>amrex::ReduceOps</scope><name>eval</name></member>
      <member refid="classamrex_1_1ReduceOps_1acf76d5c7c3027a29928d07b2572475a8" prot="public" virt="non-virtual"><scope>amrex::ReduceOps</scope><name>eval</name></member>
      <member refid="classamrex_1_1ReduceOps_1a6ee0df1c765e4839d3e453159681baf8" prot="public" virt="non-virtual"><scope>amrex::ReduceOps</scope><name>eval_mf</name></member>
      <member refid="classamrex_1_1ReduceOps_1a4e60cd020808a640d7de13b866728202" prot="private" virt="non-virtual"><scope>amrex::ReduceOps</scope><name>m_result_is_ready</name></member>
      <member refid="classamrex_1_1ReduceOps_1aa9f7ed138e607372624eb46fb43e9c85" prot="public" virt="non-virtual"><scope>amrex::ReduceOps</scope><name>resetResultReadiness</name></member>
      <member refid="classamrex_1_1ReduceOps_1a05d9d8beb406be38812442c318e5d434" prot="public" virt="non-virtual"><scope>amrex::ReduceOps</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
