<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1ReduceOps" kind="class" language="C++" prot="public">
    <compoundname>amrex::ReduceOps</compoundname>
    <includes refid="AMReX__Reduce_8H" local="no">AMReX_Reduce.H</includes>
    <templateparamlist>
      <param>
        <type>typename...</type>
        <declname>Ps</declname>
        <defname>Ps</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1ReduceOps_1ad63e04436117908210c3ddd0e16973d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I</type>
          </param>
          <param>
            <type>typename MF</type>
          </param>
          <param>
            <type>typename D</type>
          </param>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ReduceOps&lt; Ps &gt;::eval_mf</definition>
        <argsstring>(I, MF const &amp;mf, IntVect const &amp;nghost, int ncomp, D &amp;reduce_data, F &amp;&amp;f)</argsstring>
        <name>eval_mf</name>
        <param>
          <type>I</type>
        </param>
        <param>
          <type>MF const &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> const &amp;</type>
          <declname>nghost</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type>D &amp;</type>
          <declname>reduce_data</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="362" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="362" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ReduceOps_1a00463980dfb637a0c8f867ed55fa99b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MF</type>
          </param>
          <param>
            <type>typename D</type>
          </param>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; <ref refid="structamrex_1_1IsFabArray" kindref="compound">IsFabArray</ref>&lt; MF &gt;::<ref refid="classamrex_1_1ReduceOps_1a05d9d8beb406be38812442c318e5d434" kindref="member">value</ref> &gt;</type>
        <definition>std::enable_if_t&lt;IsFabArray&lt;MF&gt;::value &gt; amrex::ReduceOps&lt; Ps &gt;::eval</definition>
        <argsstring>(MF const &amp;mf, IntVect const &amp;nghost, D &amp;reduce_data, F &amp;&amp;f)</argsstring>
        <name>eval</name>
        <param>
          <type>MF const &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> const &amp;</type>
          <declname>nghost</declname>
        </param>
        <param>
          <type>D &amp;</type>
          <declname>reduce_data</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="438" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="438" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ReduceOps_1ab6d0e3293d5341c89aad5b8acc8abd47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename MF</type>
          </param>
          <param>
            <type>typename D</type>
          </param>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>std::enable_if_t&lt; <ref refid="structamrex_1_1IsFabArray" kindref="compound">IsFabArray</ref>&lt; MF &gt;::<ref refid="classamrex_1_1ReduceOps_1a05d9d8beb406be38812442c318e5d434" kindref="member">value</ref> &gt;</type>
        <definition>std::enable_if_t&lt;IsFabArray&lt;MF&gt;::value &gt; amrex::ReduceOps&lt; Ps &gt;::eval</definition>
        <argsstring>(MF const &amp;mf, IntVect const &amp;nghost, int ncomp, D &amp;reduce_data, F &amp;&amp;f)</argsstring>
        <name>eval</name>
        <param>
          <type>MF const &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> const &amp;</type>
          <declname>nghost</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type>D &amp;</type>
          <declname>reduce_data</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="466" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="466" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ReduceOps&lt; Ps &gt;::eval</definition>
        <argsstring>(Box const &amp;box, D &amp;reduce_data, F &amp;&amp;f)</argsstring>
        <name>eval</name>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>D &amp;</type>
          <declname>reduce_data</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="491" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="491" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ReduceOps_1a0b2c2b761a373ac5a95273721a8ae1fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename N</type>
          </param>
          <param>
            <type>typename D</type>
          </param>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename M</type>
            <defval>std::enable_if_t&lt;std::is_integral&lt;N&gt;::<ref refid="classamrex_1_1ReduceOps_1a05d9d8beb406be38812442c318e5d434" kindref="member">value</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ReduceOps&lt; Ps &gt;::eval</definition>
        <argsstring>(Box const &amp;box, N ncomp, D &amp;reduce_data, F &amp;&amp;f)</argsstring>
        <name>eval</name>
        <param>
          <type><ref refid="classamrex_1_1Box" kindref="compound">Box</ref> const &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>N</type>
          <declname>ncomp</declname>
        </param>
        <param>
          <type>D &amp;</type>
          <declname>reduce_data</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="550" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="550" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ReduceOps_1a65284f038ea29beb80b99c1a5f246f04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename N</type>
          </param>
          <param>
            <type>typename D</type>
          </param>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename M</type>
            <defval>std::enable_if_t&lt;std::is_integral&lt;N&gt;::<ref refid="classamrex_1_1ReduceOps_1a05d9d8beb406be38812442c318e5d434" kindref="member">value</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void amrex::ReduceOps&lt; Ps &gt;::eval</definition>
        <argsstring>(N n, D &amp;reduce_data, F &amp;&amp;f)</argsstring>
        <name>eval</name>
        <param>
          <type>N</type>
          <declname>n</declname>
        </param>
        <param>
          <type>D &amp;</type>
          <declname>reduce_data</declname>
        </param>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="610" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="610" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1ReduceOps_1a05d9d8beb406be38812442c318e5d434" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>D::Type</type>
        <definition>D::Type amrex::ReduceOps&lt; Ps &gt;::value</definition>
        <argsstring>(D &amp;reduce_data)</argsstring>
        <name>value</name>
        <param>
          <type>D &amp;</type>
          <declname>reduce_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="657" column="22" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="657" bodyend="714"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" line="356" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/Base/AMReX_Reduce.H" bodystart="357" bodyend="715"/>
    <listofallmembers>
      <member refid="classamrex_1_1ReduceOps_1a00463980dfb637a0c8f867ed55fa99b8" prot="public" virt="non-virtual"><scope>amrex::ReduceOps</scope><name>eval</name></member>
      <member refid="classamrex_1_1ReduceOps_1ab6d0e3293d5341c89aad5b8acc8abd47" prot="public" virt="non-virtual"><scope>amrex::ReduceOps</scope><name>eval</name></member>
      <member refid="classamrex_1_1ReduceOps_1a6bed424b9a455d76e42d8061aef71b3e" prot="public" virt="non-virtual"><scope>amrex::ReduceOps</scope><name>eval</name></member>
      <member refid="classamrex_1_1ReduceOps_1a0b2c2b761a373ac5a95273721a8ae1fd" prot="public" virt="non-virtual"><scope>amrex::ReduceOps</scope><name>eval</name></member>
      <member refid="classamrex_1_1ReduceOps_1a65284f038ea29beb80b99c1a5f246f04" prot="public" virt="non-virtual"><scope>amrex::ReduceOps</scope><name>eval</name></member>
      <member refid="classamrex_1_1ReduceOps_1ad63e04436117908210c3ddd0e16973d4" prot="public" virt="non-virtual"><scope>amrex::ReduceOps</scope><name>eval_mf</name></member>
      <member refid="classamrex_1_1ReduceOps_1a05d9d8beb406be38812442c318e5d434" prot="public" virt="non-virtual"><scope>amrex::ReduceOps</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
