<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classamrex_1_1GMRESMLMGT" kind="class" language="C++" prot="public">
    <compoundname>amrex::GMRESMLMGT</compoundname>
    <includes refid="AMReX__GMRES__MLMG_8H" local="no">AMReX_GMRES_MLMG.H</includes>
    <templateparamlist>
      <param>
        <type>typename MF</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1GMRESMLMGT_1a4026a664e44c7fb70195946b2aff6fc9" prot="public" static="no">
        <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF &gt;</type>
        <definition>using amrex::GMRESMLMGT&lt; MF &gt;::VEC =  Vector&lt;MF&gt;</definition>
        <argsstring></argsstring>
        <name>VEC</name>
        <qualifiedname>amrex::GMRESMLMGT::VEC</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="23" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1GMRESMLMGT_1a93a0ba608c9adab93befd5acebdc63bc" prot="public" static="no">
        <type><ref refid="classamrex_1_1MLMGT" kindref="compound">MLMGT</ref>&lt; MF &gt;</type>
        <definition>using amrex::GMRESMLMGT&lt; MF &gt;::MG =  MLMGT&lt;MF&gt;</definition>
        <argsstring></argsstring>
        <name>MG</name>
        <qualifiedname>amrex::GMRESMLMGT::MG</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="24" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">MG::RT</ref></type>
        <definition>using amrex::GMRESMLMGT&lt; MF &gt;::RT =  typename MG::RT</definition>
        <argsstring></argsstring>
        <name>RT</name>
        <qualifiedname>amrex::GMRESMLMGT::RT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="25" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1GMRESMLMGT_1a6f0a47cf2b2318a9893fa3c3853c91ee" prot="public" static="no">
        <type><ref refid="classamrex_1_1GMRES" kindref="compound">GMRES</ref>&lt; <ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF &gt;, <ref refid="classamrex_1_1GMRESMLMGT" kindref="compound">GMRESMLMGT</ref>&lt; MF &gt; &gt;</type>
        <definition>using amrex::GMRESMLMGT&lt; MF &gt;::GM =  GMRES&lt;Vector&lt;MF&gt;,GMRESMLMGT&lt;MF&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>GM</name>
        <qualifiedname>amrex::GMRESMLMGT::GM</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="26" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="26" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1GMRESMLMGT_1a32ef8424897f89206ea72f7f3affbdd0" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1GMRESMLMGT_1a6f0a47cf2b2318a9893fa3c3853c91ee" kindref="member">GM</ref></type>
        <definition>GM amrex::GMRESMLMGT&lt; MF &gt;::m_gmres</definition>
        <argsstring></argsstring>
        <name>m_gmres</name>
        <qualifiedname>amrex::GMRESMLMGT::m_gmres</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="96" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1GMRESMLMGT_1ac6bdd073a8562762729e78088cf2bbb9" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1GMRESMLMGT_1a93a0ba608c9adab93befd5acebdc63bc" kindref="member">MG</ref> *</type>
        <definition>MG* amrex::GMRESMLMGT&lt; MF &gt;::m_mlmg</definition>
        <argsstring></argsstring>
        <name>m_mlmg</name>
        <qualifiedname>amrex::GMRESMLMGT::m_mlmg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="97" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1GMRESMLMGT_1aade37c46d216449063107a555d33010e" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLLinOpT" kindref="compound">MLLinOpT</ref>&lt; MF &gt; *</type>
        <definition>MLLinOpT&lt;MF&gt;* amrex::GMRESMLMGT&lt; MF &gt;::m_linop</definition>
        <argsstring></argsstring>
        <name>m_linop</name>
        <qualifiedname>amrex::GMRESMLMGT::m_linop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="98" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1GMRESMLMGT_1ab68d6b10069f5606a8152c8b5416ea5f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::GMRESMLMGT&lt; MF &gt;::m_verbose</definition>
        <argsstring></argsstring>
        <name>m_verbose</name>
        <qualifiedname>amrex::GMRESMLMGT::m_verbose</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="99" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1GMRESMLMGT_1acb0d8e20bd2889da65c0b99fab9894fe" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::GMRESMLMGT&lt; MF &gt;::m_nlevels</definition>
        <argsstring></argsstring>
        <name>m_nlevels</name>
        <qualifiedname>amrex::GMRESMLMGT::m_nlevels</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="100" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1GMRESMLMGT_1ab701de7cf398139b6f8804adb3eddd55" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::GMRESMLMGT&lt; MF &gt;::m_use_precond</definition>
        <argsstring></argsstring>
        <name>m_use_precond</name>
        <qualifiedname>amrex::GMRESMLMGT::m_use_precond</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="101" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1GMRESMLMGT_1a199c70c91ab83732cc2982f3712411e1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int amrex::GMRESMLMGT&lt; MF &gt;::m_precond_niters</definition>
        <argsstring></argsstring>
        <name>m_precond_niters</name>
        <qualifiedname>amrex::GMRESMLMGT::m_precond_niters</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="102" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="102" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a23db5527f7bcd75ba78997016648b906" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::GMRESMLMGT&lt; MF &gt;::GMRESMLMGT</definition>
        <argsstring>(MG &amp;mlmg)</argsstring>
        <name>GMRESMLMGT</name>
        <qualifiedname>amrex::GMRESMLMGT::GMRESMLMGT</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a93a0ba608c9adab93befd5acebdc63bc" kindref="member">MG</ref> &amp;</type>
          <declname>mlmg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="28" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="106" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a12b1b279c8233ed99af1f9765a46d502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::solve</definition>
        <argsstring>(MF &amp;a_sol, MF const &amp;a_rhs, RT a_tol_rel, RT a_tol_abs)</argsstring>
        <name>solve</name>
        <qualifiedname>amrex::GMRESMLMGT::solve</qualifiedname>
        <param>
          <type>MF &amp;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type>MF const &amp;</type>
          <declname>a_rhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" kindref="member">RT</ref></type>
          <declname>a_tol_rel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" kindref="member">RT</ref></type>
          <declname>a_tol_abs</declname>
        </param>
        <briefdescription>
<para>Solve the linear system. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_sol</parametername>
</parameternamelist>
<parameterdescription>
<para>unknowns, i.e., x in A x = b. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>RHS, i.e., b in A x = b. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_tol_rel</parametername>
</parameternamelist>
<parameterdescription>
<para>relative tolerance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_tol_abs</parametername>
</parameternamelist>
<parameterdescription>
<para>absolute tolerance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="38" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="210" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a426ed87c81b983227af0b6f87abfd536" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::solve</definition>
        <argsstring>(Vector&lt; MF * &gt; const &amp;a_sol, Vector&lt; MF const * &gt; const &amp;a_rhs, RT a_tol_rel, RT a_tol_abs)</argsstring>
        <name>solve</name>
        <qualifiedname>amrex::GMRESMLMGT::solve</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF * &gt; const &amp;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Vector" kindref="compound">Vector</ref>&lt; MF const * &gt; const &amp;</type>
          <declname>a_rhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" kindref="member">RT</ref></type>
          <declname>a_tol_rel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" kindref="member">RT</ref></type>
          <declname>a_tol_abs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="40" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="217" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a51b0cd328dd0bb2bf71ff67d266b673b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::setVerbose</definition>
        <argsstring>(int v)</argsstring>
        <name>setVerbose</name>
        <qualifiedname>amrex::GMRESMLMGT::setVerbose</qualifiedname>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Sets verbosity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="43" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1ae47a754ba15bd25bcb9b10f95b590364" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::setMaxIters</definition>
        <argsstring>(int niters)</argsstring>
        <name>setMaxIters</name>
        <qualifiedname>amrex::GMRESMLMGT::setMaxIters</qualifiedname>
        <param>
          <type>int</type>
          <declname>niters</declname>
        </param>
        <briefdescription>
<para>Sets the max number of iterations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="49" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a3584e996a150386dbf8ee7b731ee3ffa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int amrex::GMRESMLMGT&lt; MF &gt;::getNumIters</definition>
        <argsstring>() const</argsstring>
        <name>getNumIters</name>
        <qualifiedname>amrex::GMRESMLMGT::getNumIters</qualifiedname>
        <briefdescription>
<para>Gets the number of iterations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="52" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1aca83734d854ed846c8c16e8cba18ab0a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" kindref="member">RT</ref></type>
        <definition>RT amrex::GMRESMLMGT&lt; MF &gt;::getResidualNorm</definition>
        <argsstring>() const</argsstring>
        <name>getResidualNorm</name>
        <qualifiedname>amrex::GMRESMLMGT::getResidualNorm</qualifiedname>
        <briefdescription>
<para>Gets the 2-norm of the residual. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="55" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a471867142fafd2cbdacd862756bb7be6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1GMRESMLMGT_1a6f0a47cf2b2318a9893fa3c3853c91ee" kindref="member">GM</ref> &amp;</type>
        <definition>GM &amp; amrex::GMRESMLMGT&lt; MF &gt;::getGMRES</definition>
        <argsstring>()</argsstring>
        <name>getGMRES</name>
        <qualifiedname>amrex::GMRESMLMGT::getGMRES</qualifiedname>
        <briefdescription>
<para>Get the <ref refid="classamrex_1_1GMRES" kindref="compound">GMRES</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="58" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a149cc7245fa38541199e133b4ba3ecfc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1GMRESMLMGT_1a4026a664e44c7fb70195946b2aff6fc9" kindref="member">VEC</ref></type>
        <definition>auto amrex::GMRESMLMGT&lt; MF &gt;::makeVecRHS</definition>
        <argsstring>() const</argsstring>
        <name>makeVecRHS</name>
        <qualifiedname>amrex::GMRESMLMGT::makeVecRHS</qualifiedname>
        <briefdescription>
<para>Make <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> without ghost cells. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="61" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="114" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a757525ba6bbe0f037464b6bea3769300" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1GMRESMLMGT_1a4026a664e44c7fb70195946b2aff6fc9" kindref="member">VEC</ref></type>
        <definition>auto amrex::GMRESMLMGT&lt; MF &gt;::makeVecLHS</definition>
        <argsstring>() const</argsstring>
        <name>makeVecLHS</name>
        <qualifiedname>amrex::GMRESMLMGT::makeVecLHS</qualifiedname>
        <briefdescription>
<para>Make <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> with ghost cells and set ghost cells to zero. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="64" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="124" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a821dec52fa233a2c160dcde74401d868" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" kindref="member">RT</ref></type>
        <definition>auto amrex::GMRESMLMGT&lt; MF &gt;::norm2</definition>
        <argsstring>(VEC const &amp;mf) const</argsstring>
        <name>norm2</name>
        <qualifiedname>amrex::GMRESMLMGT::norm2</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a4026a664e44c7fb70195946b2aff6fc9" kindref="member">VEC</ref> const &amp;</type>
          <declname>mf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="66" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a680d39500d23ee50adb54b1c991df90b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" kindref="member">RT</ref></type>
        <definition>auto amrex::GMRESMLMGT&lt; MF &gt;::dotProduct</definition>
        <argsstring>(VEC const &amp;mf1, VEC const &amp;mf2) const</argsstring>
        <name>dotProduct</name>
        <qualifiedname>amrex::GMRESMLMGT::dotProduct</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a4026a664e44c7fb70195946b2aff6fc9" kindref="member">VEC</ref> const &amp;</type>
          <declname>mf1</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a4026a664e44c7fb70195946b2aff6fc9" kindref="member">VEC</ref> const &amp;</type>
          <declname>mf2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="70" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1ad353ecb2b027631fdedfb39e6e1b6f69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::apply</definition>
        <argsstring>(VEC &amp;lhs, VEC const &amp;rhs) const</argsstring>
        <name>apply</name>
        <qualifiedname>amrex::GMRESMLMGT::apply</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a4026a664e44c7fb70195946b2aff6fc9" kindref="member">VEC</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a4026a664e44c7fb70195946b2aff6fc9" kindref="member">VEC</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>lhs = L(rhs) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="85" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="190" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1afa85a1ef64f688b12e857eba9c442281" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::precond</definition>
        <argsstring>(VEC &amp;lhs, VEC const &amp;rhs) const</argsstring>
        <name>precond</name>
        <qualifiedname>amrex::GMRESMLMGT::precond</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a4026a664e44c7fb70195946b2aff6fc9" kindref="member">VEC</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a4026a664e44c7fb70195946b2aff6fc9" kindref="member">VEC</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="87" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="196" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1acba210ae4c73c6e484ba27502baafbed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::GMRESMLMGT&lt; MF &gt;::usePrecond</definition>
        <argsstring>(bool new_flag)</argsstring>
        <name>usePrecond</name>
        <qualifiedname>amrex::GMRESMLMGT::usePrecond</qualifiedname>
        <param>
          <type>bool</type>
          <declname>new_flag</declname>
        </param>
        <briefdescription>
<para>Control whether or not to use MLMG as preconditioner. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="90" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a3e4c31b46aeea964f7e6bf8798c3adea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::setPrecondNumIters</definition>
        <argsstring>(int precond_niters)</argsstring>
        <name>setPrecondNumIters</name>
        <qualifiedname>amrex::GMRESMLMGT::setPrecondNumIters</qualifiedname>
        <param>
          <type>int</type>
          <declname>precond_niters</declname>
        </param>
        <briefdescription>
<para>Set the number of MLMG preconditioner iterations per <ref refid="classamrex_1_1GMRES" kindref="compound">GMRES</ref> iteration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="93" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="93" bodyend="93"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a82cbf3c8fd73654eaa7bf6869e660993" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::scale</definition>
        <argsstring>(VEC &amp;mf, RT scale_factor)</argsstring>
        <name>scale</name>
        <qualifiedname>amrex::GMRESMLMGT::scale</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a4026a664e44c7fb70195946b2aff6fc9" kindref="member">VEC</ref> &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" kindref="member">RT</ref></type>
          <declname>scale_factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="68" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="141" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a45708d315167f1c873b446b9e8faea39" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::setToZero</definition>
        <argsstring>(VEC &amp;lhs)</argsstring>
        <name>setToZero</name>
        <qualifiedname>amrex::GMRESMLMGT::setToZero</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a4026a664e44c7fb70195946b2aff6fc9" kindref="member">VEC</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <briefdescription>
<para>lhs = 0 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="73" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="155" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a138d24d2d6ebef04c5387fd7eec96a27" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::assign</definition>
        <argsstring>(VEC &amp;lhs, VEC const &amp;rhs)</argsstring>
        <name>assign</name>
        <qualifiedname>amrex::GMRESMLMGT::assign</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a4026a664e44c7fb70195946b2aff6fc9" kindref="member">VEC</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a4026a664e44c7fb70195946b2aff6fc9" kindref="member">VEC</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>lhs = rhs </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="76" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="163" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1aae01757444cdd8a1e96c158c4334101d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::increment</definition>
        <argsstring>(VEC &amp;lhs, VEC const &amp;rhs, RT a)</argsstring>
        <name>increment</name>
        <qualifiedname>amrex::GMRESMLMGT::increment</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a4026a664e44c7fb70195946b2aff6fc9" kindref="member">VEC</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a4026a664e44c7fb70195946b2aff6fc9" kindref="member">VEC</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" kindref="member">RT</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>lhs += a*rhs </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="79" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="172" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a96d89734c3c1b31743d7aeecfc0faa63" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::linComb</definition>
        <argsstring>(VEC &amp;lhs, RT a, VEC const &amp;rhs_a, RT b, VEC const &amp;rhs_b)</argsstring>
        <name>linComb</name>
        <qualifiedname>amrex::GMRESMLMGT::linComb</qualifiedname>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a4026a664e44c7fb70195946b2aff6fc9" kindref="member">VEC</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" kindref="member">RT</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a4026a664e44c7fb70195946b2aff6fc9" kindref="member">VEC</ref> const &amp;</type>
          <declname>rhs_a</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" kindref="member">RT</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a4026a664e44c7fb70195946b2aff6fc9" kindref="member">VEC</ref> const &amp;</type>
          <declname>rhs_b</declname>
        </param>
        <briefdescription>
<para>lhs = a*rhs_a + b*rhs_b </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="82" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="181" bodyend="187"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Solve using <ref refid="classamrex_1_1GMRES" kindref="compound">GMRES</ref> with multigrid as preconditioner. </para>
    </briefdescription>
    <detaileddescription>
<para>The linear system to solve is provided by MLMG, which is also being used as the preconditioner. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>amrex::GMRES&lt; Vector&lt; MF &gt;, GMRESMLMGT&lt; MF &gt; &gt;</label>
        <link refid="classamrex_1_1GMRES"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_cc</edgelabel>
          <edgelabel>m_grs</edgelabel>
          <edgelabel>m_hes_1d</edgelabel>
          <edgelabel>m_hh_1d</edgelabel>
          <edgelabel>m_ss</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>m_hes</edgelabel>
          <edgelabel>m_hh</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_v_tmp_lhs</edgelabel>
          <edgelabel>m_v_tmp_rhs</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>m_vv</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>amrex::GpuArray&lt; int, 2 &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="5">
        <label>T</label>
      </node>
      <node id="6">
        <label>amrex::Table2D&lt; RT &gt;</label>
        <link refid="structamrex_1_1Table2D"/>
        <childnode refid="7" relation="usage">
          <edgelabel>begin</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::Vector&lt; MF &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>amrex::Vector&lt; RT &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>amrex::Vector&lt; Vector&lt; MF &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>amrex::Vector&lt; amrex::Vector&lt; MF &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="22" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>amrex::Vector&lt; double &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>amrex::GMRESMLMGT&lt; MF &gt;</label>
        <link refid="classamrex_1_1GMRESMLMGT"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_gmres</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>m_mlmg</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>amrex::MLMGT&lt; MF &gt;</label>
        <link refid="classamrex_1_1MLMGT"/>
        <childnode refid="14" relation="usage">
          <edgelabel>ns_linop</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>ns_mlmg</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>ns_rhs</edgelabel>
          <edgelabel>ns_sol</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>print_ident</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>rhs</edgelabel>
          <edgelabel>sol</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>m_niters_cg</edgelabel>
          <edgelabel>sol_is_alias</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>cor</edgelabel>
          <edgelabel>cor_hold</edgelabel>
          <edgelabel>res</edgelabel>
          <edgelabel>rescor</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>timer</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_iter_fine_resnorm0</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="17">
        <label>std::string</label>
        <childnode refid="18" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>std::unique_ptr&lt; MF &gt;</label>
      </node>
      <node id="8">
        <label>std::unique_ptr&lt; Vector&lt; MF &gt; &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>std::unique_ptr&lt; amrex::MLLinOpT&lt; MF &gt; &gt;</label>
      </node>
      <node id="15">
        <label>std::unique_ptr&lt; amrex::MLMGT&lt; MF &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="20" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="21" bodyend="103"/>
    <listofallmembers>
      <member refid="classamrex_1_1GMRESMLMGT_1ad353ecb2b027631fdedfb39e6e1b6f69" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>apply</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a138d24d2d6ebef04c5387fd7eec96a27" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>assign</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a680d39500d23ee50adb54b1c991df90b" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>dotProduct</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a471867142fafd2cbdacd862756bb7be6" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>getGMRES</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a3584e996a150386dbf8ee7b731ee3ffa" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>getNumIters</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1aca83734d854ed846c8c16e8cba18ab0a" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>getResidualNorm</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a6f0a47cf2b2318a9893fa3c3853c91ee" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>GM</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a23db5527f7bcd75ba78997016648b906" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>GMRESMLMGT</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1aae01757444cdd8a1e96c158c4334101d" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>increment</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a96d89734c3c1b31743d7aeecfc0faa63" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>linComb</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a32ef8424897f89206ea72f7f3affbdd0" prot="private" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>m_gmres</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1aade37c46d216449063107a555d33010e" prot="private" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>m_linop</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1ac6bdd073a8562762729e78088cf2bbb9" prot="private" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>m_mlmg</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1acb0d8e20bd2889da65c0b99fab9894fe" prot="private" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>m_nlevels</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a199c70c91ab83732cc2982f3712411e1" prot="private" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>m_precond_niters</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1ab701de7cf398139b6f8804adb3eddd55" prot="private" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>m_use_precond</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1ab68d6b10069f5606a8152c8b5416ea5f" prot="private" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>m_verbose</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a757525ba6bbe0f037464b6bea3769300" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>makeVecLHS</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a149cc7245fa38541199e133b4ba3ecfc" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>makeVecRHS</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a93a0ba608c9adab93befd5acebdc63bc" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>MG</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a821dec52fa233a2c160dcde74401d868" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>norm2</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1afa85a1ef64f688b12e857eba9c442281" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>precond</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>RT</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a82cbf3c8fd73654eaa7bf6869e660993" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>scale</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1ae47a754ba15bd25bcb9b10f95b590364" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>setMaxIters</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a3e4c31b46aeea964f7e6bf8798c3adea" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>setPrecondNumIters</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a45708d315167f1c873b446b9e8faea39" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>setToZero</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a51b0cd328dd0bb2bf71ff67d266b673b" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>setVerbose</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a12b1b279c8233ed99af1f9765a46d502" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>solve</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a426ed87c81b983227af0b6f87abfd536" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>solve</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1acba210ae4c73c6e484ba27502baafbed" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>usePrecond</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a4026a664e44c7fb70195946b2aff6fc9" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>VEC</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
