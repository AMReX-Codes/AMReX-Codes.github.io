<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1GMRESMLMGT" kind="class" language="C++" prot="public">
    <compoundname>amrex::GMRESMLMGT</compoundname>
    <includes refid="AMReX__GMRES__MLMG_8H" local="no">AMReX_GMRES_MLMG.H</includes>
    <templateparamlist>
      <param>
        <type>typename MF</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classamrex_1_1GMRESMLMGT_1a93a0ba608c9adab93befd5acebdc63bc" prot="public" static="no">
        <type><ref refid="classamrex_1_1MLMGT" kindref="compound">MLMGT</ref>&lt; MF &gt;</type>
        <definition>using amrex::GMRESMLMGT&lt; MF &gt;::MG =  MLMGT&lt;MF&gt;</definition>
        <argsstring></argsstring>
        <name>MG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="22" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" prot="public" static="no">
        <type>typename <ref refid="classamrex_1_1MLMGT_1a85f49a7b9118115595f428e8c87693cd" kindref="member">MG::RT</ref></type>
        <definition>using amrex::GMRESMLMGT&lt; MF &gt;::RT =  typename MG::RT</definition>
        <argsstring></argsstring>
        <name>RT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="23" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classamrex_1_1GMRESMLMGT_1a82c8616f7458eb2f29532e5bc34a715c" prot="public" static="no">
        <type><ref refid="classamrex_1_1GMRES" kindref="compound">GMRES</ref>&lt; MF, <ref refid="classamrex_1_1GMRESMLMGT" kindref="compound">GMRESMLMGT</ref>&lt; MF &gt; &gt;</type>
        <definition>using amrex::GMRESMLMGT&lt; MF &gt;::GM =  GMRES&lt;MF,GMRESMLMGT&lt;MF&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>GM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="24" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1GMRESMLMGT_1a32ef8424897f89206ea72f7f3affbdd0" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1GMRESMLMGT_1a82c8616f7458eb2f29532e5bc34a715c" kindref="member">GM</ref></type>
        <definition>GM amrex::GMRESMLMGT&lt; MF &gt;::m_gmres</definition>
        <argsstring></argsstring>
        <name>m_gmres</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="101" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1GMRESMLMGT_1ac6bdd073a8562762729e78088cf2bbb9" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1GMRESMLMGT_1a93a0ba608c9adab93befd5acebdc63bc" kindref="member">MG</ref> *</type>
        <definition>MG* amrex::GMRESMLMGT&lt; MF &gt;::m_mlmg</definition>
        <argsstring></argsstring>
        <name>m_mlmg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="102" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1GMRESMLMGT_1aade37c46d216449063107a555d33010e" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1MLLinOpT" kindref="compound">MLLinOpT</ref>&lt; MF &gt; *</type>
        <definition>MLLinOpT&lt;MF&gt;* amrex::GMRESMLMGT&lt; MF &gt;::m_linop</definition>
        <argsstring></argsstring>
        <name>m_linop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="103" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1GMRESMLMGT_1ab701de7cf398139b6f8804adb3eddd55" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::GMRESMLMGT&lt; MF &gt;::m_use_precond</definition>
        <argsstring></argsstring>
        <name>m_use_precond</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="104" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1GMRESMLMGT_1ad478296de575a072a91d73b9f8b0332e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool amrex::GMRESMLMGT&lt; MF &gt;::m_prop_zero</definition>
        <argsstring></argsstring>
        <name>m_prop_zero</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="105" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1GMRESMLMGT_1a199c70c91ab83732cc2982f3712411e1" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::GMRESMLMGT&lt; MF &gt;::m_precond_niters</definition>
        <argsstring></argsstring>
        <name>m_precond_niters</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="106" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a23db5527f7bcd75ba78997016648b906" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::GMRESMLMGT&lt; MF &gt;::GMRESMLMGT</definition>
        <argsstring>(MG &amp;mlmg)</argsstring>
        <name>GMRESMLMGT</name>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a93a0ba608c9adab93befd5acebdc63bc" kindref="member">MG</ref> &amp;</type>
          <declname>mlmg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="26" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="110" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a12b1b279c8233ed99af1f9765a46d502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::solve</definition>
        <argsstring>(MF &amp;a_sol, MF const &amp;a_rhs, RT a_tol_rel, RT a_tol_abs)</argsstring>
        <name>solve</name>
        <param>
          <type>MF &amp;</type>
          <declname>a_sol</declname>
        </param>
        <param>
          <type>MF const &amp;</type>
          <declname>a_rhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" kindref="member">RT</ref></type>
          <declname>a_tol_rel</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" kindref="member">RT</ref></type>
          <declname>a_tol_abs</declname>
        </param>
        <briefdescription>
<para>Solve the linear system. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_sol</parametername>
</parameternamelist>
<parameterdescription>
<para>unknowns, i.e., x in A x = b. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>RHS, i.e., b in A x = b. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_tol_rel</parametername>
</parameternamelist>
<parameterdescription>
<para>relative tolerance. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a_tol_abs</parametername>
</parameternamelist>
<parameterdescription>
<para>absolute tolerance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="36" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="214" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a51b0cd328dd0bb2bf71ff67d266b673b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::setVerbose</definition>
        <argsstring>(int v)</argsstring>
        <name>setVerbose</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Sets verbosity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="39" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1ae47a754ba15bd25bcb9b10f95b590364" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::setMaxIters</definition>
        <argsstring>(int niters)</argsstring>
        <name>setMaxIters</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>niters</declname>
        </param>
        <briefdescription>
<para>Sets the max number of iterations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="42" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a3584e996a150386dbf8ee7b731ee3ffa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
        <definition>int amrex::GMRESMLMGT&lt; MF &gt;::getNumIters</definition>
        <argsstring>() const</argsstring>
        <name>getNumIters</name>
        <briefdescription>
<para>Gets the number of iterations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="45" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1aca83734d854ed846c8c16e8cba18ab0a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" kindref="member">RT</ref></type>
        <definition>RT amrex::GMRESMLMGT&lt; MF &gt;::getResidualNorm</definition>
        <argsstring>() const</argsstring>
        <name>getResidualNorm</name>
        <briefdescription>
<para>Gets the 2-norm of the residual. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="48" column="9" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a501781e1e1e7c61244eed962066f1419" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classamrex_1_1GMRESMLMGT_1a82c8616f7458eb2f29532e5bc34a715c" kindref="member">GM</ref> &amp;</type>
        <definition>GM&amp; amrex::GMRESMLMGT&lt; MF &gt;::getGMRES</definition>
        <argsstring>()</argsstring>
        <name>getGMRES</name>
        <briefdescription>
<para>Get the <ref refid="classamrex_1_1GMRES" kindref="compound">GMRES</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="51" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a56349014c0d985e20f66cb789fc37d9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::setPropertyOfZero</definition>
        <argsstring>(bool b)</argsstring>
        <name>setPropertyOfZero</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Set MLMG&apos;s multiplicative property of zero. </para>
        </briefdescription>
        <detaileddescription>
<para>This should NOT be called unless MLMG has the multiplicative property of zero. MLMG is not a matrix, and usually does not have the properties of a matrix such as the multiplicative property of zero (i.e., M*0=0) because how domain boundary conditions are handled. However, if MLMG has the property of zero, calling this function with true can have a small performance benefit. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="63" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a149cc7245fa38541199e133b4ba3ecfc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>MF</type>
        <definition>auto amrex::GMRESMLMGT&lt; MF &gt;::makeVecRHS</definition>
        <argsstring>() const</argsstring>
        <name>makeVecRHS</name>
        <briefdescription>
<para>Make <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> without ghost cells. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="66" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a757525ba6bbe0f037464b6bea3769300" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>MF</type>
        <definition>auto amrex::GMRESMLMGT&lt; MF &gt;::makeVecLHS</definition>
        <argsstring>() const</argsstring>
        <name>makeVecLHS</name>
        <briefdescription>
<para>Make <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> with ghost cells and set ghost cells to zero. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="69" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="128" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1ac83213b50387ae52458f8f43473f72db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" kindref="member">RT</ref></type>
        <definition>auto amrex::GMRESMLMGT&lt; MF &gt;::norm2</definition>
        <argsstring>(MF const &amp;mf) const</argsstring>
        <name>norm2</name>
        <param>
          <type>MF const &amp;</type>
          <declname>mf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="71" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="136" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a3784c11ec581a1ab5edb0e2d2308e86f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" kindref="member">RT</ref></type>
        <definition>auto amrex::GMRESMLMGT&lt; MF &gt;::dotProduct</definition>
        <argsstring>(MF const &amp;mf1, MF const &amp;mf2) const</argsstring>
        <name>dotProduct</name>
        <param>
          <type>MF const &amp;</type>
          <declname>mf1</declname>
        </param>
        <param>
          <type>MF const &amp;</type>
          <declname>mf2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="75" column="8" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a69ba35dbecc64670348ed8611260dfd9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::apply</definition>
        <argsstring>(MF &amp;lhs, MF const &amp;rhs) const</argsstring>
        <name>apply</name>
        <param>
          <type>MF &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>MF const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>lhs = L(rhs) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="90" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="179" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1afe3c1ec699c60ebc52f1a4d8554a4889" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::precond</definition>
        <argsstring>(MF &amp;lhs, MF const &amp;rhs) const</argsstring>
        <name>precond</name>
        <param>
          <type>MF &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>MF const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="92" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="187" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1acba210ae4c73c6e484ba27502baafbed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool amrex::GMRESMLMGT&lt; MF &gt;::usePrecond</definition>
        <argsstring>(bool new_flag)</argsstring>
        <name>usePrecond</name>
        <param>
          <type>bool</type>
          <declname>new_flag</declname>
        </param>
        <briefdescription>
<para>Control whether or not to use MLMG as preconditioner. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="95" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a3e4c31b46aeea964f7e6bf8798c3adea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::setPrecondNumIters</definition>
        <argsstring>(int precond_niters)</argsstring>
        <name>setPrecondNumIters</name>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>precond_niters</declname>
        </param>
        <briefdescription>
<para>Set the number of MLMG preconditioner iterations per <ref refid="classamrex_1_1GMRES" kindref="compound">GMRES</ref> iteration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="98" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="98" bodyend="98"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1ab8b6fa6cf559c595468bf5e24e6e6f0c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::scale</definition>
        <argsstring>(MF &amp;mf, RT scale_factor)</argsstring>
        <name>scale</name>
        <param>
          <type>MF &amp;</type>
          <declname>mf</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" kindref="member">RT</ref></type>
          <declname>scale_factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="73" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1aa7abf628225cd94e5163b1400f549417" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::setToZero</definition>
        <argsstring>(MF &amp;lhs)</argsstring>
        <name>setToZero</name>
        <param>
          <type>MF &amp;</type>
          <declname>lhs</declname>
        </param>
        <briefdescription>
<para>lhs = 0 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="78" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a3c36428a18730eb564b0b11000f5088d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::assign</definition>
        <argsstring>(MF &amp;lhs, MF const &amp;rhs)</argsstring>
        <name>assign</name>
        <param>
          <type>MF &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>MF const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>lhs = rhs </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="81" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a334579fbf27c137837e3860305636d65" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::increment</definition>
        <argsstring>(MF &amp;lhs, MF const &amp;rhs, RT a)</argsstring>
        <name>increment</name>
        <param>
          <type>MF &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>MF const &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" kindref="member">RT</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>lhs += a*rhs </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="84" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1GMRESMLMGT_1a71a6bdfd44b64400a631d7cee6c25cb2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::GMRESMLMGT&lt; MF &gt;::linComb</definition>
        <argsstring>(MF &amp;lhs, RT a, MF const &amp;rhs_a, RT b, MF const &amp;rhs_b)</argsstring>
        <name>linComb</name>
        <param>
          <type>MF &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" kindref="member">RT</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>MF const &amp;</type>
          <declname>rhs_a</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" kindref="member">RT</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type>MF const &amp;</type>
          <declname>rhs_b</declname>
        </param>
        <briefdescription>
<para>lhs = a*rhs_a + b*rhs_b </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="87" column="17" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="173" bodyend="176"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Solve using <ref refid="classamrex_1_1GMRES" kindref="compound">GMRES</ref> with multigrid as preconditioner. </para>
    </briefdescription>
    <detaileddescription>
<para>The linear system to solve is provided by MLMG, which is also being used as the preconditioner. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="11">
        <label>amrex::Vector&lt; double &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::unique_ptr&lt; amrex::MLMGT&lt; MF &gt; &gt;</label>
      </node>
      <node id="7">
        <label>T</label>
      </node>
      <node id="6">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="7" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>amrex::Vector&lt; int &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>amrex::Vector&lt; MF &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>std::unique_ptr&lt; MF &gt;</label>
      </node>
      <node id="8">
        <label>amrex::Vector&lt; amrex::Vector&lt; MF &gt; &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>amrex::GMRES&lt; MF, GMRESMLMGT&lt; MF &gt; &gt;</label>
        <link refid="classamrex_1_1GMRES"/>
      </node>
      <node id="5">
        <label>amrex::Vector&lt; RT &gt;</label>
        <link refid="classamrex_1_1Vector"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>amrex::MLMGT&lt; MF &gt;</label>
        <link refid="classamrex_1_1MLMGT"/>
        <childnode refid="3" relation="usage">
          <edgelabel>ns_mlmg</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>ns_linop</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_iter_fine_resnorm0</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>cor</edgelabel>
          <edgelabel>cor_hold</edgelabel>
          <edgelabel>res</edgelabel>
          <edgelabel>rescor</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>ns_rhs</edgelabel>
          <edgelabel>ns_sol</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_niters_cg</edgelabel>
          <edgelabel>sol_is_alias</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>timer</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>rhs</edgelabel>
          <edgelabel>sol</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>amrex::GMRESMLMGT&lt; MF &gt;</label>
        <link refid="classamrex_1_1GMRESMLMGT"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_mlmg</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>m_gmres</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::unique_ptr&lt; amrex::MLLinOpT&lt; MF &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" line="19" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/LinearSolvers/AMReX_GMRES_MLMG.H" bodystart="20" bodyend="107"/>
    <listofallmembers>
      <member refid="classamrex_1_1GMRESMLMGT_1a69ba35dbecc64670348ed8611260dfd9" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>apply</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a3c36428a18730eb564b0b11000f5088d" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>assign</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a3784c11ec581a1ab5edb0e2d2308e86f" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>dotProduct</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a501781e1e1e7c61244eed962066f1419" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>getGMRES</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a3584e996a150386dbf8ee7b731ee3ffa" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>getNumIters</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1aca83734d854ed846c8c16e8cba18ab0a" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>getResidualNorm</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a82c8616f7458eb2f29532e5bc34a715c" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>GM</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a23db5527f7bcd75ba78997016648b906" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>GMRESMLMGT</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a334579fbf27c137837e3860305636d65" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>increment</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a71a6bdfd44b64400a631d7cee6c25cb2" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>linComb</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a32ef8424897f89206ea72f7f3affbdd0" prot="private" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>m_gmres</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1aade37c46d216449063107a555d33010e" prot="private" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>m_linop</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1ac6bdd073a8562762729e78088cf2bbb9" prot="private" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>m_mlmg</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a199c70c91ab83732cc2982f3712411e1" prot="private" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>m_precond_niters</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1ad478296de575a072a91d73b9f8b0332e" prot="private" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>m_prop_zero</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1ab701de7cf398139b6f8804adb3eddd55" prot="private" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>m_use_precond</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a757525ba6bbe0f037464b6bea3769300" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>makeVecLHS</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a149cc7245fa38541199e133b4ba3ecfc" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>makeVecRHS</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a93a0ba608c9adab93befd5acebdc63bc" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>MG</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1ac83213b50387ae52458f8f43473f72db" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>norm2</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1afe3c1ec699c60ebc52f1a4d8554a4889" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>precond</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a58326c59efaee01db3f1d4c798d4e238" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>RT</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1ab8b6fa6cf559c595468bf5e24e6e6f0c" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>scale</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1ae47a754ba15bd25bcb9b10f95b590364" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>setMaxIters</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a3e4c31b46aeea964f7e6bf8798c3adea" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>setPrecondNumIters</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a56349014c0d985e20f66cb789fc37d9f" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>setPropertyOfZero</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1aa7abf628225cd94e5163b1400f549417" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>setToZero</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a51b0cd328dd0bb2bf71ff67d266b673b" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>setVerbose</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1a12b1b279c8233ed99af1f9765a46d502" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>solve</name></member>
      <member refid="classamrex_1_1GMRESMLMGT_1acba210ae4c73c6e484ba27502baafbed" prot="public" virt="non-virtual"><scope>amrex::GMRESMLMGT</scope><name>usePrecond</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
