<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classamrex_1_1InterpFaceRegister" kind="class" language="C++" prot="public">
    <compoundname>amrex::InterpFaceRegister</compoundname>
    <includes refid="AMReX__InterpFaceRegister_8H" local="no">AMReX_InterpFaceRegister.H</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classamrex_1_1InterpFaceRegister_1ae7ed7c0d540fff5e91fa3dfd1f824f48" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref></type>
        <definition>BoxArray amrex::InterpFaceRegister::m_fine_ba</definition>
        <argsstring></argsstring>
        <name>m_fine_ba</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" line="71" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1InterpFaceRegister_1a46c573f2892ec197ccd6f97d030b2fe4" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref></type>
        <definition>DistributionMapping amrex::InterpFaceRegister::m_fine_dm</definition>
        <argsstring></argsstring>
        <name>m_fine_dm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" line="72" column="25" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1InterpFaceRegister_1a7e826c1081b933f4911d83a776e9aeef" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::InterpFaceRegister::m_fine_geom</definition>
        <argsstring></argsstring>
        <name>m_fine_geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" line="73" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1InterpFaceRegister_1a899e3e1837760fbc015d572dc4218204" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref></type>
        <definition>IntVect amrex::InterpFaceRegister::m_ref_ratio</definition>
        <argsstring></argsstring>
        <name>m_ref_ratio</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" line="74" column="13" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1InterpFaceRegister_1a66aef4e531d59c7454a73e0b3c44cac5" prot="private" static="no" mutable="no">
        <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref></type>
        <definition>Geometry amrex::InterpFaceRegister::m_crse_geom</definition>
        <argsstring></argsstring>
        <name>m_crse_geom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" line="76" column="14" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1InterpFaceRegister_1ac51cac354d04dd9b8c7a93f4838966c9" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref>, 2 *AMREX_SPACEDIM &gt;</type>
        <definition>Array&lt;BoxArray, 2*AMREX_SPACEDIM&gt; amrex::InterpFaceRegister::m_fine_face_ba</definition>
        <argsstring></argsstring>
        <name>m_fine_face_ba</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" line="78" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1InterpFaceRegister_1a8bfe583f3e39b9b5130c1644c7af9a15" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref>, 2 *AMREX_SPACEDIM &gt;</type>
        <definition>Array&lt;BoxArray, 2*AMREX_SPACEDIM&gt; amrex::InterpFaceRegister::m_crse_face_ba</definition>
        <argsstring></argsstring>
        <name>m_crse_face_ba</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" line="79" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classamrex_1_1InterpFaceRegister_1ac7a90d8875f7129236cd11202764022b" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref>, 2 *AMREX_SPACEDIM &gt;</type>
        <definition>Array&lt;iMultiFab,2*AMREX_SPACEDIM&gt; amrex::InterpFaceRegister::m_face_mask</definition>
        <argsstring></argsstring>
        <name>m_face_mask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" line="80" column="11" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classamrex_1_1InterpFaceRegister_1ade6847e4f47127ea6f5abc3c8633a9f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::InterpFaceRegister::InterpFaceRegister</definition>
        <argsstring>()=default</argsstring>
        <name>InterpFaceRegister</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" line="20" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1InterpFaceRegister_1a4b625e8c2eef9e28005c49bbdfc8c203" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>amrex::InterpFaceRegister::InterpFaceRegister</definition>
        <argsstring>(BoxArray const &amp;fba, DistributionMapping const &amp;fdm, Geometry const &amp;fgeom, IntVect const &amp;ref_ratio)</argsstring>
        <name>InterpFaceRegister</name>
        <param>
          <type><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> const &amp;</type>
          <declname>fba</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> const &amp;</type>
          <declname>fdm</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>fgeom</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> const &amp;</type>
          <declname>ref_ratio</declname>
        </param>
        <briefdescription>
<para><ref refid="classamrex_1_1InterpFaceRegister" kindref="compound">InterpFaceRegister</ref> Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fba</parametername>
</parameternamelist>
<parameterdescription>
<para>The fine level <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fdm</parametername>
</parameternamelist>
<parameterdescription>
<para>The fine level <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fgeom</parametername>
</parameternamelist>
<parameterdescription>
<para>The fine level <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ref_ratio</parametername>
</parameternamelist>
<parameterdescription>
<para>The refinement ratio </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" line="30" column="5" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.cpp" bodystart="6" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1InterpFaceRegister_1a68cac01616790e9ee7b31b6473bc2bde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::InterpFaceRegister::define</definition>
        <argsstring>(BoxArray const &amp;fba, DistributionMapping const &amp;fdm, Geometry const &amp;fgeom, IntVect const &amp;ref_ratio)</argsstring>
        <name>define</name>
        <param>
          <type><ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> const &amp;</type>
          <declname>fba</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> const &amp;</type>
          <declname>fdm</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> const &amp;</type>
          <declname>fgeom</declname>
        </param>
        <param>
          <type><ref refid="classamrex_1_1IntVect" kindref="compound">IntVect</ref> const &amp;</type>
          <declname>ref_ratio</declname>
        </param>
        <briefdescription>
<para>Defines an <ref refid="classamrex_1_1InterpFaceRegister" kindref="compound">InterpFaceRegister</ref> objecct. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fba</parametername>
</parameternamelist>
<parameterdescription>
<para>The fine level <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fdm</parametername>
</parameternamelist>
<parameterdescription>
<para>The fine level <ref refid="classamrex_1_1DistributionMapping" kindref="compound">DistributionMapping</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fgeom</parametername>
</parameternamelist>
<parameterdescription>
<para>The fine level <ref refid="classamrex_1_1Geometry" kindref="compound">Geometry</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ref_ratio</parametername>
</parameternamelist>
<parameterdescription>
<para>The refinement ratio </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" line="41" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.cpp" bodystart="12" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1InterpFaceRegister_1a0d36980c7c0e499ff0b04dce3a573f84" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> const  &amp;</type>
        <definition>iMultiFab const  &amp; amrex::InterpFaceRegister::mask</definition>
        <argsstring>(Orientation face) const</argsstring>
        <name>mask</name>
        <param>
          <type><ref refid="classamrex_1_1Orientation" kindref="compound">Orientation</ref></type>
          <declname>face</declname>
        </param>
        <briefdescription>
<para>Returns a coarse/fine boundary mask for a given face. </para>
        </briefdescription>
        <detaileddescription>
<para>This returns an <ref refid="classamrex_1_1iMultiFab" kindref="compound">iMultiFab</ref> at the coarse/fine boundary of a given face. The data are only defined on one face of each box in the fine level <ref refid="classamrex_1_1BoxArray" kindref="compound">BoxArray</ref> passed to the <ref refid="classamrex_1_1InterpFaceRegister" kindref="compound">InterpFaceRegister</ref> constructor. It has two possible values: 1 for coarse/fine boundary and 0 for fine/fine boundary including non-periodic physical domain face.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>face</parametername>
</parameternamelist>
<parameterdescription>
<para>The face </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" line="55" column="21" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.cpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classamrex_1_1InterpFaceRegister_1a02d82e4c9c05f3d9acaf2e2519a8a47a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void amrex::InterpFaceRegister::interp</definition>
        <argsstring>(Array&lt; MultiFab *, AMREX_SPACEDIM &gt; const &amp;fine, Array&lt; MultiFab const *, AMREX_SPACEDIM &gt; const &amp;crse, int scomp, int ncomp)</argsstring>
        <name>interp</name>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> *, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>fine</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1afe930d74045516fece8591f173e57007" kindref="member">Array</ref>&lt; <ref refid="classamrex_1_1MultiFab" kindref="compound">MultiFab</ref> const *, AMREX_SPACEDIM &gt; const &amp;</type>
          <declname>crse</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>scomp</declname>
        </param>
        <param>
          <type><ref refid="namespaceamrex_1ad2e8127753e9be0ebf531435c6511937" kindref="member">int</ref></type>
          <declname>ncomp</declname>
        </param>
        <briefdescription>
<para>Interpolates from coarse to fine data at coarse/fine boundaries. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fine</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of pointers to the fine data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>crse</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of const pointers to the coarse data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scomp</parametername>
</parameternamelist>
<parameterdescription>
<para>Starting component </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ncomp</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of components </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" line="66" column="10" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.cpp" bodystart="102" bodyend="199"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classamrex_1_1InterpFaceRegister" kindref="compound">InterpFaceRegister</ref> is a coarse/fine boundary register for interpolation of face data at the coarse/fine boundadry. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="20">
        <label>amrex::BATindexType</label>
        <link refid="structamrex_1_1BATindexType"/>
        <childnode refid="9" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>amrex::BATindexType_coarsenRatio</label>
        <link refid="structamrex_1_1BATindexType__coarsenRatio"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>amrex::BATnull</label>
        <link refid="structamrex_1_1BATnull"/>
      </node>
      <node id="8">
        <label>amrex::IntVect</label>
        <link refid="classamrex_1_1IntVect"/>
        <childnode refid="8" relation="usage">
          <edgelabel>Unit</edgelabel>
          <edgelabel>Zero</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Real</label>
      </node>
      <node id="18">
        <label>amrex::Orientation</label>
        <link refid="classamrex_1_1Orientation"/>
      </node>
      <node id="15">
        <label>amrex::BATransformer</label>
        <link refid="structamrex_1_1BATransformer"/>
        <childnode refid="16" relation="usage">
          <edgelabel>m_op</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>amrex::BATcoarsenRatio</label>
        <link refid="structamrex_1_1BATcoarsenRatio"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>amrex::BATransformer::BATOp</label>
        <link refid="unionamrex_1_1BATransformer_1_1BATOp"/>
        <childnode refid="17" relation="usage">
          <edgelabel>m_bndryReg</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>m_coarsenRatio</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>m_indexType</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>m_null</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>m_indexType_coarsenRatio</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>amrex::BoxArray</label>
        <link refid="classamrex_1_1BoxArray"/>
        <childnode refid="13" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>m_simplified_list</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>m_bat</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>amrex::RealBox</label>
        <link refid="classamrex_1_1RealBox"/>
        <childnode refid="4" relation="usage">
          <edgelabel>xhi</edgelabel>
          <edgelabel>xlo</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>amrex::Box</label>
        <link refid="classamrex_1_1Box"/>
        <childnode refid="8" relation="usage">
          <edgelabel>bigend</edgelabel>
          <edgelabel>smallend</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>btype</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>std::shared_ptr&lt; amrex::BARef &gt;</label>
      </node>
      <node id="11">
        <label>std::shared_ptr&lt; amrex::DistributionMapping::Ref &gt;</label>
      </node>
      <node id="3">
        <label>amrex::CoordSys</label>
        <link refid="classamrex_1_1CoordSys"/>
        <childnode refid="4" relation="usage">
          <edgelabel>dx</edgelabel>
          <edgelabel>inv_dx</edgelabel>
          <edgelabel>offset</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>amrex::BATbndryReg</label>
        <link refid="structamrex_1_1BATbndryReg"/>
        <childnode refid="8" relation="usage">
          <edgelabel>m_crse_ratio</edgelabel>
          <edgelabel>m_doihi</edgelabel>
          <edgelabel>m_doilo</edgelabel>
          <edgelabel>m_hishft</edgelabel>
          <edgelabel>m_loshft</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>m_face</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_typ</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>amrex::IndexType</label>
        <link refid="classamrex_1_1IndexType"/>
      </node>
      <node id="10">
        <label>amrex::DistributionMapping</label>
        <link refid="classamrex_1_1DistributionMapping"/>
        <childnode refid="11" relation="usage">
          <edgelabel>m_ref</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>amrex::GpuArray&lt; ParticleReal, AMREX_SPACEDIM &gt;</label>
        <link refid="structamrex_1_1GpuArray"/>
      </node>
      <node id="2">
        <label>amrex::Geometry</label>
        <link refid="classamrex_1_1Geometry"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>roundoff_hi</edgelabel>
          <edgelabel>roundoff_lo</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>prob_domain</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>domain</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>std::shared_ptr&lt; amrex::BoxList &gt;</label>
      </node>
      <node id="1">
        <label>amrex::InterpFaceRegister</label>
        <link refid="classamrex_1_1InterpFaceRegister"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_crse_geom</edgelabel>
          <edgelabel>m_fine_geom</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_fine_dm</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_ref_ratio</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>m_fine_ba</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" line="16" column="1" bodyfile="/home/runner/work/amrex/amrex/Src/AmrCore/AMReX_InterpFaceRegister.H" bodystart="17" bodyend="81"/>
    <listofallmembers>
      <member refid="classamrex_1_1InterpFaceRegister_1a68cac01616790e9ee7b31b6473bc2bde" prot="public" virt="non-virtual"><scope>amrex::InterpFaceRegister</scope><name>define</name></member>
      <member refid="classamrex_1_1InterpFaceRegister_1a02d82e4c9c05f3d9acaf2e2519a8a47a" prot="public" virt="non-virtual"><scope>amrex::InterpFaceRegister</scope><name>interp</name></member>
      <member refid="classamrex_1_1InterpFaceRegister_1ade6847e4f47127ea6f5abc3c8633a9f7" prot="public" virt="non-virtual"><scope>amrex::InterpFaceRegister</scope><name>InterpFaceRegister</name></member>
      <member refid="classamrex_1_1InterpFaceRegister_1a4b625e8c2eef9e28005c49bbdfc8c203" prot="public" virt="non-virtual"><scope>amrex::InterpFaceRegister</scope><name>InterpFaceRegister</name></member>
      <member refid="classamrex_1_1InterpFaceRegister_1a8bfe583f3e39b9b5130c1644c7af9a15" prot="private" virt="non-virtual"><scope>amrex::InterpFaceRegister</scope><name>m_crse_face_ba</name></member>
      <member refid="classamrex_1_1InterpFaceRegister_1a66aef4e531d59c7454a73e0b3c44cac5" prot="private" virt="non-virtual"><scope>amrex::InterpFaceRegister</scope><name>m_crse_geom</name></member>
      <member refid="classamrex_1_1InterpFaceRegister_1ac7a90d8875f7129236cd11202764022b" prot="private" virt="non-virtual"><scope>amrex::InterpFaceRegister</scope><name>m_face_mask</name></member>
      <member refid="classamrex_1_1InterpFaceRegister_1ae7ed7c0d540fff5e91fa3dfd1f824f48" prot="private" virt="non-virtual"><scope>amrex::InterpFaceRegister</scope><name>m_fine_ba</name></member>
      <member refid="classamrex_1_1InterpFaceRegister_1a46c573f2892ec197ccd6f97d030b2fe4" prot="private" virt="non-virtual"><scope>amrex::InterpFaceRegister</scope><name>m_fine_dm</name></member>
      <member refid="classamrex_1_1InterpFaceRegister_1ac51cac354d04dd9b8c7a93f4838966c9" prot="private" virt="non-virtual"><scope>amrex::InterpFaceRegister</scope><name>m_fine_face_ba</name></member>
      <member refid="classamrex_1_1InterpFaceRegister_1a7e826c1081b933f4911d83a776e9aeef" prot="private" virt="non-virtual"><scope>amrex::InterpFaceRegister</scope><name>m_fine_geom</name></member>
      <member refid="classamrex_1_1InterpFaceRegister_1a899e3e1837760fbc015d572dc4218204" prot="private" virt="non-virtual"><scope>amrex::InterpFaceRegister</scope><name>m_ref_ratio</name></member>
      <member refid="classamrex_1_1InterpFaceRegister_1a0d36980c7c0e499ff0b04dce3a573f84" prot="public" virt="non-virtual"><scope>amrex::InterpFaceRegister</scope><name>mask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
